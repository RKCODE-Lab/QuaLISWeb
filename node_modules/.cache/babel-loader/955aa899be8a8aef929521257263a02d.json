{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\Release.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, Button, ListGroup } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { Utils as QbUtils } from \"@react-awesome-query-builder/ui\";\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType, getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport, previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise, getreportcomments, fetchReportInfoReleaseById, UpdateReportComments, getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData, fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory, downloadVersionReport, viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool, getPatientWiseSample, preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment, onDeleteReleaseTestComment, generatereport, editReportTemplate, SaveReportTemplate, deleteSamples, filterTransactionList, validationforAppendSamples, getReleaseFilter, SaveReleaseComment, openReleaseComments, getReleaseSapInfoTOSDMS } from '../../actions';\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, showEsign, Lims_JSON_stringify, create_UUID, onSaveMandatoryValidation, checkFilterIsEmptyQueryBuilder, removeSpaceFromFirst, sortData } from '../../components/CommonScript';\nimport { SampleType, designProperties, ResultEntry, reportCOAType, transactionStatus, attachmentType } from '../../components/Enumeration';\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { Affix } from 'rsuite';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReleaseFilter from './ReleaseFilter';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { ReactComponent as SaveIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/save_icon.svg\";\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\nimport { ContentPanel, ProductList } from '../product/product.styled';\nimport { faEdit, faPlus, faExpandArrowsAlt, faEye, faInfoCircle, faPencilAlt, faRecycle, faStore, faTrash, faFilePen, faFileCode, faDownload, faFilePdf, faHistory, faFile, faComments, faPaperclip, faCalculator, faSync, faSearch, faTimes, faBolt } from '@fortawesome/free-solid-svg-icons';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { ReactComponent as Generate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/generate-certificate.svg\";\nimport { ReactComponent as ReGenerate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/regenerate-icon.svg\";\nimport { ReactComponent as ResultCorrection } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/resultcorrection.svg\";\nimport { ReactComponent as Correction } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/correctionrelease.svg\";\nimport { ReactComponent as Comment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/comment-edit-svgrepo-com.svg\";\nimport { ReactComponent as DownloadCertificate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Download Certificate.svg\";\nimport { ReactComponent as PreliminaryReport } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/preliminary_report.svg\";\nimport { ReactComponent as ReportHistory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reporthistory.svg\";\nimport { ReactComponent as ReleaseTestAttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/releasetestattachment.svg\";\nimport { ReactComponent as ReleaseTestCommentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/releasetestcomment.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fileViewUrl, reportUrl } from '../../rsapi';\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\nimport { REPORTTYPE } from \"../../components/Enumeration\";\nimport SampleInfoView from '../approval/SampleInfoView';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport ModalShow from '../../components/ModalShow';\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\nimport ReleaseTestAttachment from './ReleaseTestAttachment';\nimport ReleaseTestComment from './ReleaseTestComment';\nimport VersionHistGrid from './VersionHistGrid';\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport ReleaseReportHistory from './ReleaseReportHistory';\nimport { ReactComponent as Preview } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Preview.svg\";\nimport { ReactComponent as TestAttachment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Test Attachment.svg\";\nimport AddReleaseTestAttachment from './AddReleaseTestAttachment';\nimport AddReleaseTestComment from './AddReleaseTestComment';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport SplitterLayout from 'react-splitter-layout';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport SampleGridTab from '../registration/SampleGridTab';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { faTrashAlt, faThumbsUp, faChevronCircleDown } from '@fortawesome/free-solid-svg-icons'; //,faUserTimes, faTrash\n\nimport CustomPopover from '../../components/customPopover';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Release extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.dataStateChangeSlideOut = event => {\n      this.setState({\n        slideOutDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.outsourceFileDataStateChange = event => {\n      this.setState({\n        outsourceFileDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.reportInfoDataChange = event => {\n      this.setState({\n        reportInfoDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.correctionDataStateChange = event => {\n      this.setState({\n        correctionDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.versionHistoryDataStateChange = event => {\n      this.setState({\n        versionHistoryDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.preliminaryHistoryDataStateChange = event => {\n      this.setState({\n        preliminaryHistoryDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.testAttachmentDataStateChange = event => {\n      this.setState({\n        testAttachmentDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.testCommentDataStateChange = event => {\n      this.setState({\n        testCommentDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo,\n          realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n          realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n          realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n          realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n          realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n          realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n          realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleasedApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            this.props.getReleasedRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            this.props.getReleasedRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleasedApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          // const inputParamData = {\n          //     dfrom: obj.fromDate,\n          //     dto: obj.toDate,\n          //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          //     userinfo: this.props.Login.userInfo,\n          //     masterData: { ...this.props.Login.masterData },\n          //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n          //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     ndesigntemplatemappingcode: comboData.value,\n          //     DesignTemplateMappingValue: comboData.item\n          // }\n          // this.props.getReleaseFilterBasedTest(inputParamData)\n          let masterData = { ...this.props.Login.masterData,\n            DesignTemplateMappingValue: comboData.item\n          };\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleasedFilterStatus(inputParamData);\n          }\n        } //Don't Remove\n        // else if (fieldName === 'nsectioncode') {\n        //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n        //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             nsectioncode: comboData.value === -1 ? null\n        //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //                 : comboData.value,\n        //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n        //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleasedFilterBasedTest(inputParamData);\n        //     }\n        // }\n        // else if (fieldName === 'njobstatuscode') {\n        //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n        //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\n        //         const updateInfo = {\n        //             typeName: DEFAULT_RETURN,\n        //             data: { masterData }\n        //         }\n        //         this.props.updateStore(updateInfo);\n        //     }\n        // }\n        else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ncoareporttypecode') {\n          if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\n            let masterData = { ...this.props.Login.masterData,\n              ReportTypeValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } // else {\n        //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n        //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n        //         //  const updateInfo = {\n        //         //     typeName: DEFAULT_RETURN,\n        //         //    data: { masterData }\n        //         // }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: comboData.value,\n        //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n        //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n        //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n        //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n        //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleaseFilterBasedTest(inputParamData);\n        //     }\n        // }\n\n      }\n    };\n\n    this.closeFilter = () => {\n      let inputValues = {\n        fromDate: this.props.Login.masterData.realFromDate || new Date(),\n        //this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date() ,\n        toDate: this.props.Login.masterData.realToDate || new Date(),\n        //this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() ,\n        SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        ReportTypeValue: this.props.Login.masterData.realReportTypeValue || {},\n        RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\n        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\n        ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\n        SampleType: this.props.Login.masterData.realSampleTypeList || [],\n        ReportType: this.props.Login.masterData.realReportTypeList || [],\n        RegType: this.props.Login.masterData.realRegTypeList || [],\n        RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\n        FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\n        ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\n        DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...inputValues\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewDownloadFile = filedata => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          // change: this.props.Login.change,\n          // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          ncoareporthistorycode: filedata.inputData.ncoareporthistorycode ? filedata.inputData.ncoareporthistorycode : -1,\n          npreliminaryreporthistorycode: filedata.inputData.npreliminaryreporthistorycode ? filedata.inputData.npreliminaryreporthistorycode : -1,\n          //ntransactionstatus: String(transactionStatus.RELEASED),\n          //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n          // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          //nflag: 2,\n          userinfo: this.props.Login.userInfo,\n          //sreportcomments: \"\",\n          //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          //nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          action: \"DownloadVersionhistory\",\n          doAction: \"download\",\n          // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\n          openModal: true,\n          userInfo: this.props.Login.userInfo,\n          ncontrolCode: filedata.ncontrolCode\n        },\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RELEASEHISTORY\"\n        })\n      };\n      this.props.downloadVersionReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue; //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\n      //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\n\n      let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let realSampleTypeList = this.props.Login.masterData.SampleType || [];\n      let realReportTypeList = this.props.Login.masterData.ReportType || [];\n      let realRegTypeList = this.props.Login.masterData.RegType || [];\n      let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\n      let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\n      let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\n      let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        //  realUserSectionValue, realTestValue,\n        realDesignTemplateMappingValue,\n        realReportTypeList,\n        realRegSubTypeList,\n        realRegTypeList,\n        realReportTypeValue,\n        realSampleTypeList,\n        realFilterStatusList,\n        realApprovalVersionList,\n        realDesignTemplateMappingList\n      };\n      let inputData = {\n        npreregno: \"0\",\n        saveFilterSubmit: true,\n        //ALPD-4878 to insert the filter data's in filterdetail table when submit the filter,done by Dhanushya RI\n        sampleTypeValue: this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue,\n        regTypeValue: this.props.Login.masterData && this.props.Login.masterData.RegTypeValue,\n        regSubTypeValue: this.props.Login.masterData && this.props.Login.masterData.RegSubTypeValue,\n        filterStatusValue: this.props.Login.masterData && this.props.Login.masterData.FilterStatusValue,\n        approvalConfigValue: this.props.Login.masterData && this.props.Login.masterData.ApprovalVersionValue,\n        reportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n        designTemplateMappingValue: this.props.Login.masterData && this.props.Login.masterData.DesignTemplateMappingValue,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          isAddPopup: false,\n          isEditPopup: this.props.Login.isEditPopup,\n          isDeletePopup: this.props.Login.isDeletePopup,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTNOTGENERATED\"\n        }));\n      }\n    };\n\n    this.handleReportNoPageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.getApprovedSample = (inputParam, ncontrolCode) => {\n      if (inputParam.masterData && inputParam.masterData.realReportTypeValue) {\n        this.props.getApprovedSample(inputParam, ncontrolCode);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.ConfirmDelete = inputParam => {\n      if (inputParam.deleteSamples.ntransactionstatus === transactionStatus.DRAFT || inputParam.deleteSamples.ntransactionstatus === transactionStatus.CORRECTION) {\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }), this.props.intl.formatMessage({\n          id: \"IDS_DEFAULTCONFIRMMSG\"\n        }), this.props.intl.formatMessage({\n          id: \"IDS_OK\"\n        }), this.props.intl.formatMessage({\n          id: \"IDS_CANCEL\"\n        }), () => this.DeleteSamples(\"delete\", inputParam.controlId, inputParam));\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.DeleteSamples = (action, controlId, data) => {\n      // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n      // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n      // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n      // ALPD-4091 (16-05-2024) Changed RegSubTypeValue to realRegSubTypeValue\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          ncoaparentcode: data.deleteSamples.ncoaparentcode.toString(),\n          userinfo: this.props.Login.userInfo,\n          ncontrolCode: controlId,\n          action: action,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode || -1,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          isAddPopup: false,\n          isEditPopup: false,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n          nreporttemplatecode: data.deleteSamples.nreporttemplatecode,\n          ncoaparenttranscode: data.deleteSamples.ntransactionstatus,\n          npreregno: data.deleteSamples.spreregno,\n          ntransactionsamplecode: data.deleteSamples.stransactionsamplecode,\n          ntransactiontestcode: data.deleteSamples.stransactiontestcode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          url: this.props.Login.settings[24],\n          nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired\n        },\n        searchRef: this.searchRef // ALPD-4229 (30-05-2024) Added searchRef to clear search text\n\n      };\n      this.props.deleteSamples(inputParam, this.props.Login.masterData);\n    };\n\n    this.onKeyPress = (event, index, paremterResultcode) => {\n      if (event.keyCode === 13) {\n        for (let i = 0; i < event.target.form.elements.length; i++) {\n          if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\n            event.target.form.elements[i].focus();\n            break;\n          }\n        }\n\n        event.preventDefault();\n      }\n    };\n\n    this.onResultInputChange = parameterResults => {\n      this.setState({\n        parameterResults: [...parameterResults],\n        isParameterInitialRender: false // currentAlertResultCode,\n        //  currentntestgrouptestpredefcode\n\n      });\n    };\n\n    this.fields = () => {};\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n\n      if (comboData !== null && fieldName === \"sreleasecomments\") {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData.label;\n        selectedRecord[\"sreleasecommentscombo\"] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n\n      if (fieldName === 'nprojecttypecode') {\n        const inputParamData = {\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          nprojecttypecode: comboData.value,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getApprovedProjectByProjectType(inputParamData);\n      }\n\n      if (fieldName === 'nprojectmastercode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo); //let realFromDate = obj.fromDate;\n        //let realToDate = obj.toDate\n\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          //realFromDate, realToDate, \n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nprojectmastercode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n        let selectedRecord = { ...this.props.Login.selectedRecord\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData,\n            selectedRecord\n          };\n\n          if (inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || inputData.isneedsection === transactionStatus.YES) {\n            this.props.getSectionForSectionWise(inputParam);\n          } else {\n            this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n          }\n        }\n      }\n\n      if (fieldName === 'nsectioncode') {\n        let filterquery = this.props.Login && this.props.Login.filterquery || undefined;\n\n        if (filterquery !== undefined) {\n          let val = removeSpaceFromFirst(filterquery, '');\n          let matchs = val && val.match(/''/g);\n          filterquery = matchs !== null && matchs !== undefined && matchs && matchs.length > 1 ? val : val && val.replaceAll(/'/g, \"''\");\n        }\n\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nsectioncode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\n          // ModalStatusValue: true,\n          screenName: this.props.Login.screenName,\n          filterquery: filterquery,\n          isPopup: true,\n          isAddPopup: true,\n          isSectionCombo: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n        }\n      }\n    };\n\n    this.handleExecuteClicks = isClear => {\n      const filterquery = this.props.Login.filterquery;\n      const filterQueryTreeStr = this.props.Login.filterQueryTreeStr;\n      let isMandatory = this.checkMandatoryFilter(filterQueryTreeStr, this.props.Login.awesomeConfig);\n\n      if (isMandatory) {\n        let isFilterEmpty = checkFilterIsEmptyQueryBuilder(filterQueryTreeStr);\n\n        if (isFilterEmpty) {\n          let val = removeSpaceFromFirst(filterquery, '');\n          let matchs = val && val.match(/''/g); // if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\n\n          let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n          let realFromDate = obj.fromDate;\n          let realToDate = obj.toDate;\n          let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n          let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n          let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n          let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n          let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n          let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n          let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n          let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n          let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n          let masterData = { ...this.props.Login.masterData,\n            realFromDate,\n            realToDate,\n            realSampleTypeValue,\n            realRegTypeValue,\n            realRegSubTypeValue,\n            realFilterStatusValue,\n            realApprovalVersionValue,\n            realUserSectionValue,\n            realTestValue,\n            realDesignTemplateMappingValue,\n            realReportTypeValue\n          }; // ALPD-4091 (16-05-2024) Changed SampleTypeValue to realSampleTypeValue\n          // ALPD-4091 (16-05-2024) Changed RegTypeValue to realRegTypeValue\n          // ALPD-4091 (16-05-2024) Changed RegSubTypeValue to realRegSubTypeValue\n          // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n          // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n          // ALPD-4091 (16-05-2024) Changed TestValue to realTestValue\n          // ALPD-4091 (16-05-2024) Changed DesignTemplateMappingValue to realDesignTemplateMappingValue\n\n          let inputData = {\n            npreregno: \"0\",\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n            ncoareporttypecode: 1,\n            //parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n            nsectioncode: this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES ? this.props.Login.isEditPopup === true ? this.props.Login.masterData && this.props.Login.masterData.reportSectionCode : this.props.Login.selectedRecord && this.props.Login.selectedRecord.nsectioncode ? this.props.Login.selectedRecord.nsectioncode.value : -1 : -1,\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            userinfo: this.props.Login.userInfo,\n            nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\n            // ModalStatusValue: true,\n            isPopup: true,\n            isAddPopup: true,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n            filterquery: !isClear ? matchs && matchs.length > 1 ? val : val && val.replaceAll(/'/g, \"''\") : undefined,\n            screenName: this.props.Login.screenNameCopy,\n            isClear: isClear,\n            awesomeTree: this.props.Login.awesomeTree\n          };\n\n          if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n            inputData['dfrom'] = obj.fromDate;\n            inputData['dto'] = obj.toDate;\n            let inputParam = {\n              masterData,\n              inputData\n            };\n            this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n          } // } else {\n          //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\n          // }\n\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_PROVIDEVALUESFORINPUTS\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CONFIGUREMANDATORYFIELDS\"\n        }));\n      }\n    };\n\n    this.onSaveModalFilterName = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // let realFromDate = obj.fromDate;\n      // let realToDate = obj.toDate\n      // let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\n      // let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\n      // let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\n      // let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\n      // let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\n      // let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\n      // let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n      // let realSampleTypeList = this.props.Login.masterData.SampleType || [];\n      // let realReportTypeList = this.props.Login.masterData.ReportType || [];\n      // let realRegTypeList = this.props.Login.masterData.RegType || [];\n      // let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\n      // let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\n      // let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\n      // let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\n      // let masterData = {\n      //     ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\n      //     realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\n      //     //  realUserSectionValue, realTestValue,\n      //     realDesignTemplateMappingValue, realReportTypeList, realRegSubTypeList, realRegTypeList,\n      //     realReportTypeValue, realSampleTypeList, realFilterStatusList, realApprovalVersionList, realDesignTemplateMappingList\n      // }\n\n      const masterData = this.props.Login.masterData;\n      let inputData = {\n        userinfo: this.props.Login.userInfo,\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        sfiltername: this.state.selectedRecord && this.state.selectedRecord.sfiltername !== null ? this.state.selectedRecord.sfiltername : \"\",\n        sampleTypeValue: this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue,\n        regTypeValue: this.props.Login.masterData && this.props.Login.masterData.realRegTypeValue,\n        regSubTypeValue: this.props.Login.masterData && this.props.Login.masterData.realRegSubTypeValue,\n        filterStatusValue: this.props.Login.masterData && this.props.Login.masterData.realFilterStatusValue,\n        approvalConfigValue: this.props.Login.masterData && this.props.Login.masterData.realApprovalVersionValue,\n        designTemplateMappingValue: this.props.Login.masterData && this.props.Login.masterData.realDesignTemplateMappingValue,\n        reportTypeValue: this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue,\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : -1,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        needExtraKeys: true\n      };\n      let inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"FilterName\",\n        inputData: inputData,\n        operation: this.props.Login.operation\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && inputData.ncoareporttypecode !== -1) {\n        // if (showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,filterNameId)) {\n        //   const updateInfo = {\n        //     typeName: DEFAULT_RETURN,\n        //     data: {\n        //       openModal:true,\n        //       modalShow: false,\n        //       loadEsign: true,\n        //       screenData: { inputParam, masterData },\n        //     },\n        //   };\n        //   this.props.updateStore(updateInfo);\n        // } else {\n        this.props.crudMaster(inputParam, masterData, \"modalShow\"); // }\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.openFilterName = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow: true,\n          operation: \"create\",\n          isFilterDetail: true,\n          modalTitle: this.props.intl.formatMessage({\n            id: \"IDS_SAVEFILTER\"\n          })\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.clickFilterDetail = value => {\n      //  if(this.props.Login.nfilternamecode!==value.nfilternamecode){\n      this.searchRef.current.value = \"\";\n      this.props.Login.change = false;\n      let masterData = this.props.Login.masterData;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let inputData = {\n        userinfo: this.props.Login.userInfo,\n        FromDate: obj.fromDate,\n        ToDate: obj.toDate,\n        nfilternamecode: value && value.nfilternamecode ? value.nfilternamecode : -1,\n        ncoareporttypecode: this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue,\n        npreregno: \"0\",\n        sampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        regtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        regsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        coareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        approvalconfigurationcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\n        userinfo: this.props.Login.userInfo,\n        designtemplatcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n      const inputParam = {\n        masterData,\n        inputData\n      };\n      this.props.getReleaseFilter(inputParam); // }\n      // else{\n      //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDFILTERALREADYLOADED\" }));  \n      // }\n    };\n\n    this.checkMandatoryFilter = (treeData, config) => {\n      let ParentItem = { ...treeData\n      };\n      let mandatoryList = [];\n      let treeDateList = [];\n      let isFilterEmpty = false;\n      let childArray = ParentItem.children1;\n      this.state.DynamicReportFilterTypeItem.map(x => {\n        if (x['ismandatory']) {\n          mandatoryList.push(x);\n        }\n\n        if (childArray && childArray.length > 0 && childArray !== undefined) {\n          for (var i = 0; i < childArray.length; i++) {\n            let childData = childArray[i];\n\n            if (!childData.hasOwnProperty('children1')) {\n              if (config && config.fields[childData.properties.field]['label'] === x[designProperties.VALUE] && x['ismandatory']) {\n                isFilterEmpty = true;\n                treeDateList.push(childData.properties.field);\n              }\n            } else {\n              if (childData) {\n                ParentItem = checkFilterIsEmptyQueryBuilder(childData);\n\n                if (!ParentItem) {\n                  return ParentItem;\n                }\n              }\n            }\n          }\n        }\n      });\n      let uniqueSet = new Set(treeDateList);\n      let uniqueArray = Array.from(uniqueSet);\n\n      if (uniqueArray.length !== mandatoryList.length) {\n        isFilterEmpty = false;\n      }\n\n      if (mandatoryList.length === 0) {\n        isFilterEmpty = true;\n      }\n\n      return isFilterEmpty;\n    };\n\n    this.openFilterQuery = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal: true,\n          FilterQueryBuilder: true,\n          screenName: \"IDS_SAMPLEFILTER\",\n          screenNameCopy: this.props.Login.screenNameCopy\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let closeModal = true;\n      let modalShow = this.props.Login.modalShow;\n      let ReportmodalShow = this.props.Login.ReportmodalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedComment = this.props.Login.masterData.selectedComment;\n      let isFilterDetail = this.props.Login.isFilterDetail;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        isFilterDetail = false;\n        modalShow = false;\n        ReportmodalShow = false;\n        selectedRecord = {};\n        selectedComment = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          closeModal,\n          selectedComment,\n          ReportmodalShow,\n          isFilterDetail\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.generatereport = generateid => {\n      // if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          syncaction: \"ManualSyncreport\",\n          userInfo: this.props.Login.userInfo\n        },\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_GENERATE\"\n        })\n      };\n      this.props.generatereport(inputParam, this.props.Login.masterData, inputParam.screenName); //   }else{\n      //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\n      //    }\n    };\n\n    this.downloadHistory = downloadReportId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            inputData: {\n              // change: this.props.Login.change,\n              // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n              //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n              //ncoareporthistorycode:filedata.inputData.ncoareporthistorycode,\n              //ntransactionstatus: String(transactionStatus.RELEASED),\n              //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n              // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              action: \"Download\",\n              doAction: \"preview\",\n              // ALPD-4091 (16-05-2024) Changed DesignTemplateMappingValue to realDesignTemplateMappingValue\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n              //openModal:true,\n              userInfo: this.props.Login.userInfo,\n              ncontrolCode: downloadReportId\n            },\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_DOWNLOAD\"\n            })\n          };\n          this.props.downloadHistory(inputParam, this.props.Login.masterData, inputParam.screenName);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRELEASEDRECORD\"\n          }));\n        }\n      }\n    };\n\n    this.previewReport = previewId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n            inputData: {\n              nflag: 2,\n              change: this.props.Login.change,\n              ncontrolcode: previewId,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              userinfo: this.props.Login.userInfo,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAPREVIEW,\n              sprimarykeyname: \"npreregno\",\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              action: 'DOWNLOADFILE',\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n              doAction: \"download\",\n              nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n              reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n              isSMTLFlow: parseInt(this.props.Login.settings[29]),\n              generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\n              newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,\n              //Added by sonia on 18-08-2024 for JIRA ID:4716                         //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\n              reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\n              auditAction: \"preview\"\n            },\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_PREVIEWREPORT\"\n            })\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                openModal: true,\n                modalShow: false,\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                screenName: inputParam.screenName,\n                ncontrolcode: previewId,\n                operation: \"download\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_FINALREPORTGEN\"\n          }));\n        }\n      }\n    };\n\n    this.preliminaryReport = preliminaryId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.DRAFT || this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n            inputData: {\n              nflag: 2,\n              change: this.props.Login.change,\n              ncontrolcode: preliminaryId,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              userinfo: this.props.Login.userInfo,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAPRELIMINARY,\n              sprimarykeyname: \"npreregno\",\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              action: 'preliminary',\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n              doAction: \"preliminary\",\n              nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n              reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n              isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n              ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n              isSMTLFlow: parseInt(this.props.Login.settings[29]),\n              generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\n              newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,\n              //Added by sonia on 18-08-2024 for JIRA ID:4716 \n              //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\n              reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\n              auditAction: \"preliminary\"\n            },\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_PRELIMINARYREPORT\"\n            }),\n            searchRef: this.searchRef // ALPD-4229 (30-05-2024) Added searchRef to clear search text\n\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, preliminaryId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                openModal: true,\n                modalShow: false,\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                screenName: inputParam.screenName,\n                ncontrolcode: preliminaryId,\n                operation: \"preliminary\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.preliminaryReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n          }\n        } else {\n          let toastAlert = this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTCORRECTEDRECORDTO\"\n          }) + \" \" + (this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n            id: \"IDS_PRELIMINARYREPORT\"\n          }));\n          toast.warn(toastAlert);\n        }\n      }\n    };\n\n    this.downloadReleasedValidation = downloadId => {\n      // ALPD-4118 (15-05-2024) Added code for selection issue when release and edit report template\n      const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\n      let selectedReleaseHistory = [];\n      this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item)); // const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.filter(item => item.ncoaparentcode === this.props.Login.masterData.ncoaparentcode) : [];\n\n      const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [];\n      const versionCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nversionno\"]))] : [];\n      const reportTemplateCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nreporttemplatecode\"]))] : [];\n\n      if (resultArray.length === 1) {\n        if (reportTemplateCheck.length === 1) {\n          if (resultArray[0] === transactionStatus.CORRECTION || resultArray[0] === transactionStatus.PRELIMINARYRELEASE && (versionCheck.length > 1 || versionCheck.length === 1 && versionCheck[0] !== -1)) {\n            this.CorrectionComments(downloadId, selectedReleaseHistory);\n          } else {\n            this.downloadReleasedFile(downloadId);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRECORDSWITHSAMEREPORTEMPLATE\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORDSWITHSAMESTATUS\"\n        }));\n      }\n    };\n\n    this.CorrectionComments = (controlId, selectedReleaseHistory) => {\n      let masterData = this.props.Login.masterData;\n      masterData[\"selectedReleaseHistory\"] = selectedReleaseHistory;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: false,\n          screenData: {\n            masterData\n          },\n          operation: this.props.Login.operation,\n          openModal: true,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_CORRECTIONCOMMENTS\"\n          })\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.downloadReleasedFile = () => {\n      // ALPD-4118 (15-05-2024) Added code for selection issue when release and edit report template\n      const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\n      let selectedReleaseHistory = [];\n      this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\n      const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n        // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        inputData: {\n          change: this.props.Login.change,\n          ncontrolcode: downloadId,\n          ncoaparentcode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.ncoaparentcode).sort().join(\",\") : \"-1\",\n          // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          npreregno: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\n          // ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactionsamplecode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.stransactionsamplecode).join(\",\") : \"-1\",\n          // ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          ntransactiontestcode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.stransactiontestcode).join(\",\") : \"-1\",\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          // ntransactionsamplecode: ntransactionsamplecode,\n          //ntransactiontestcode: ntransactiontestcode,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          // ntransactionstatus: String(transactionStatus.RELEASED),\n          ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n          noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\n          napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          nprimarykey: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\n          listStatus: selectedReleaseHistory[0].ntransactionstatus,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          // nsectioncode: -1,\n          sreportcomments: this.state.selectedRecord && this.state.selectedRecord.sreportcomments ? this.state.selectedRecord.sreportcomments : \"\",\n          nversionno: this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno ? this.props.Login.masterData.nversionno : 0,\n          action: \"Generatefile\",\n          doAction: \"generate\",\n          nflag: 2,\n          ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n          nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode,\n          reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n          isSMTLFlow: parseInt(this.props.Login.settings[29]),\n          ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\n          confirmMessage: this.confirmMessage,\n          isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n          ncoaparenttranscode: selectedReleaseHistory[0].ntransactionstatus,\n          genericLabel: this.props.Login.genericLabel,\n          generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\n          //Added by sonia on 18-08-2024 for JIRA ID:4716 \n          newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,\n          //Added by sonia on 18-08-2024 for JIRA ID:4716 \n          //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\n          reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\n          auditAction: \"release\"\n        },\n        userinfo: this.props.Login.userInfo,\n        methodUrl: \"ReleaseAfterCorrection\",\n        classUrl: \"release\",\n        operation: \"update\",\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_GENERATEFILE\"\n        })\n      };\n      const masterData = this.props.Login.masterData; // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\n      //              && this.state.selectedRecord && this.state.selectedRecord.sreportcomments===\"\" || this.state.selectedRecord.sreportcomments===undefined) {\n      //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERDESCRIPTION\" }));  \n      // }\n      //     else{\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, downloadId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncontrolcode: downloadId,\n            openModal: true,\n            modalShow: false,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: inputParam.operation,\n            screenName: selectedReleaseHistory.length > 0 && selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION ? this.props.Login.screenName : this.props.intl.formatMessage({\n              id: \"IDS_GENERATEFILE\"\n            })\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, inputParam.screenName);\n      } // }\n\n    };\n\n    this.reportcomments = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n\n        if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n          const inputParam = {\n            // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n            inputData: {\n              change: this.props.Login.change,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              // ntransactionsamplecode: ntransactionsamplecode,\n              //ntransactiontestcode: ntransactiontestcode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              // nTransStatus: ntransCode,\n              // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n              //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n              //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n              // ntransactionstatus: String(transactionStatus.RELEASED),\n              ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n              napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n              // ncontrolCode,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAREPORT,\n              sprimarykeyname: \"npreregno\",\n              // nsectioncode: -1,\n              nflag: 2,\n              ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n            },\n            userinfo: this.props.Login.userInfo\n          };\n          this.props.getreportcomments(inputParam.inputData, this.props.Login.masterData);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTCORRECTEDRECORDTOEDITREPORTCOMMENTS\"\n          }));\n        }\n      }\n    };\n\n    this.regenerateReleasedFile = regenerateId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        const inputParam = {\n          // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n          // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n          inputData: {\n            change: this.props.Login.change,\n            npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            sreportno: this.props.Login.masterData.selectedReleaseHistory[0].sreportno,\n            ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\n            ntransactionstatus: String(transactionStatus.RELEASED),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nflag: 2,\n            userinfo: this.props.Login.userInfo,\n            sreportcomments: \"\",\n            nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            nreporttypecode: REPORTTYPE.COAREPORT,\n            sprimarykeyname: \"npreregno\",\n            action: \"Regenerate\",\n            doAction: \"download\",\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n            ncontrolcode: regenerateId,\n            nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n            reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n            ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n            isSMTLFlow: parseInt(this.props.Login.settings[29]),\n            generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\n            newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,\n            //Added by sonia on 18-08-2024 for JIRA ID:4716 \n            //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\n            reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\n            auditAction: \"regenerate\"\n          },\n          userinfo: this.props.Login.userInfo,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_REGENERATEFILE\"\n          }),\n          operation: \"update\"\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, regenerateId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              ncontrolcode: regenerateId,\n              openModal: true,\n              modalShow: false,\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              screenName: inputParam.screenName,\n              operation: inputParam.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n        }\n      }\n    };\n\n    this.CorrectionStatus = correctionId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \n\n        const inputParam = {\n          // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n          // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n          // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n          inputData: {\n            change: this.props.Login.change,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            url: this.props.Login.settings[24],\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            // ntransactionsamplecode: ntransactionsamplecode,\n            //ntransactiontestcode: ntransactiontestcode,\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n            // nTransStatus: ntransCode,\n            // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n            //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n            //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n            // ntransactionstatus: String(transactionStatus.RELEASED),\n            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            userinfo: this.props.Login.userInfo,\n            // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n            // ncontrolCode,\n            nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            nreporttypecode: REPORTTYPE.COAREPORT,\n            sprimarykeyname: \"npreregno\",\n            doAction: \"correction\",\n            nflag: 2,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n            isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n            genericLabel: this.props.Login.genericLabel\n          },\n          userinfo: this.props.Login.userInfo,\n          methodUrl: \"CorrectionStatus\",\n          classUrl: \"release\",\n          operation: \"update\",\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_CORRECTION\"\n          })\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              ncontrolcode: correctionId,\n              openModal: true,\n              modalShow: false,\n              loadEsign: true,\n              operation: \"update\",\n              screenData: {\n                inputParam,\n                masterData\n              },\n              screenName: inputParam.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName);\n        }\n      }\n    };\n\n    this.onSaveModalResultClick = (saveType, data) => {\n      if (this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_REPORTTEMPLATE\"\n      })) {\n        let masterData = this.props.Login.masterData;\n        let controlId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\n        let inputParam = {\n          inputData: {\n            ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\n            nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode && this.state.selectedRecord.nreporttemplatecode.value,\n            sreporttemplatename: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode && this.state.selectedRecord.nreporttemplatecode.label,\n            userinfo: this.props.Login.userInfo,\n            doAction: \"editReportTemplate\"\n          },\n          masterData: masterData,\n          selectedRecord: this.state.selectedRecord\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              modalShow: false,\n              openModal: true,\n              ncontrolcode: controlId,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.SaveReportTemplate(inputParam);\n        }\n      } else {\n        // ALPD-4026 (18-05-2024) Removed state parameterResults value due to sent latest record. State value have old record\n        let ReleaseParameter = this.props.Login.parameterResults && this.props.Login.parameterResults; // let selectedRecord = this.state.selectedRecord || {};\n        // let selectedId = this.props.Login.selectedId || null;\n        // let additionalInfo = this.state.selectedRecord.additionalInfo || [];\n\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode); // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode);\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n        const classUrl = \"release\";\n        const formData = new FormData();\n        let neditable = 0;\n        let releaseParameters = [];\n        let inputParam = {}; // let inputData = [];\n\n        let i = 0;\n\n        if (ReleaseParameter !== undefined && ReleaseParameter.length > 0 && ReleaseParameter[0].sresult !== \"\") {\n          ReleaseParameter.map((resultData, index) => {\n            let results = {};\n\n            if (resultData.editable === true) {\n              neditable = 1;\n\n              switch (resultData.nparametertypecode) {\n                case 1:\n                  results[\"jsondata\"] = {\n                    ncalculatedresult: resultData[\"ncalculatedresult\"],\n                    sresult: resultData.sresult,\n                    sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\",\n                    //Modified by sonia on 6th Aug 2024 for JIRA ID:ALPD-4558\n                    sunitname: resultData.unitcode.label,\n                    sresultaccuracyname: resultData.resultaccuracycode.label,\n                    nresultaccuracycode: resultData.resultaccuracycode.value\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"sfinal\"] = resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\n                  results[\"ngradecode\"] = resultData.sresult !== \"\" ? numericGrade(resultData, results[\"sfinal\"]) : -1;\n                  results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                  results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                  results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                  results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results['nunitcode'] = resultData.unitcode.value; //Modified by sonia on 6th Aug 2024 for JIRA ID:ALPD-4558\n\n                  break;\n\n                case 2:\n                  results[\"jsondata\"] = {\n                    ncalculatedresult: 4,\n                    sresult: Lims_JSON_stringify(resultData.sresult, false),\n                    sfinal: Lims_JSON_stringify(resultData.sfinal, false),\n                    sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\n                    salertmessage: resultData.salertmessage,\n                    additionalInfo: resultData['additionalInfo'],\n                    additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\n                    ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sfinal\"] = resultData.sresult;\n                  results[\"ngradecode\"] = resultData.ngradecode;\n                  results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                  results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                  results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                  results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results['nunitcode'] = resultData.nunitcode;\n                  break;\n\n                case 3:\n                  results[\"jsondata\"] = {\n                    ncalculatedresult: 4,\n                    sresult: Lims_JSON_stringify(resultData.sresult, false),\n                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sfinal\"] = resultData.sresult;\n                  results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                  results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                  results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                  results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                  results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results['nunitcode'] = resultData.nunitcode;\n                  break;\n\n                case 4:\n                  if (resultData.sfinal.length > 0) {\n                    const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                    const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                    const uniquefilename = create_UUID() + '.' + fileExtension;\n                    results[\"jsondata\"] = {\n                      ssystemfilename: uniquefilename,\n                      nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\n                      ncalculatedresult: 4,\n                      sresult: Lims_JSON_stringify(resultData.sresult, false),\n                      sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                    };\n                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                    results[\"ncalculatedresult\"] = 4;\n                    results[\"sresult\"] = resultData.sresult;\n                    results[\"sfinal\"] = resultData.sresult;\n                    results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                    results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                    results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                    results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                    results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                    results['nparametertypecode'] = resultData.nparametertypecode;\n                    results[\"ssystemfilename\"] = uniquefilename;\n                    results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\n                    results['nunitcode'] = resultData.nunitcode;\n                    formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\n                    formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\n                    i++;\n                  } else {\n                    const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                    const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                    const uniquefilename = \"\";\n                    results[\"jsondata\"] = {\n                      ssystemfilename: uniquefilename,\n                      nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\n                      ncalculatedresult: 4,\n                      sresult: \"\",\n                      sfinal: \"\"\n                    };\n                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                    results[\"ncalculatedresult\"] = 4;\n                    results[\"sresult\"] = \"\";\n                    results[\"sfinal\"] = \"\";\n                    results[\"ngradecode\"] = -1;\n                    results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                    results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                    results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                    results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                    results['nparametertypecode'] = resultData.nparametertypecode;\n                    results[\"ssystemfilename\"] = \"\";\n                    results[\"nfilesize\"] = \"\";\n                    formData.append(\"uploadedFile\" + index, \"\");\n                    formData.append(\"uniquefilename\" + index, \"\");\n                    formData.append(\"ntransactiontestcode\", \"\");\n                  }\n\n                  break;\n\n                default:\n                  break;\n              }\n\n              if (Object.values(results).length > 0) {\n                releaseParameters.push(results);\n              }\n            }\n\n            return null;\n          });\n\n          if (neditable === 0) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              // ALPD-4026 (18-05-2024) Added modalShow as false and commented openModal: false because of not closing the result correction data grid\n              data: {\n                loading: false,\n                // openModal: false, \n                modalShow: false,\n                parameterResults: [],\n                selectedRecord: {}\n              }\n            };\n            return this.props.updateStore(updateInfo);\n          }\n\n          formData.append(\"filecount\", i);\n          formData.append(\"nregtypecode\", nregtypecode);\n          formData.append(\"nregsubtypecode\", nregsubtypecode);\n          formData.append(\"ncoaparentcode\", this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode);\n          formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\n          formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\n          formData.append(\"resultData\", JSON.stringify(releaseParameters));\n          inputParam = {\n            classUrl: classUrl,\n            methodUrl: \"ReleaseParameter\",\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              doAction: \"editresult\"\n            },\n            formData: formData,\n            isFileupload: true,\n            operation: \"update\",\n            displayName: this.props.Login.inputParam.displayName,\n            saveType //, postParam\n\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                modalShow: false,\n                openModal: true,\n                ncontrolcode: editResultId,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\n          }\n        } // else {\n        //     const updateInfo = {\n        //         typeName: DEFAULT_RETURN,\n        //         data: { loading: false, openModal: false }\n        //     }\n        //     return this.props.updateStore(updateInfo);\n        // }\n        else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ENTERRESULT\"\n          }));\n        }\n      }\n    };\n\n    this.onSaveModalClick = () => {\n      //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\n      if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\n        this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData);\n      } else {\n        let ntransactionsamplecode = \"\";\n        let ntransactiontestcode = \"\";\n        let npreregno = \"\";\n        let seletedRecord = this.state.selectedRecord;\n\n        if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n          if (this.state.npreregno && this.state.npreregno.length > 0) {\n            let sample = this.state.npreregno.filter((c, index) => {\n              return this.state.npreregno.indexOf(c) === index;\n            });\n            let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n              return this.state.ntransactionsamplecode.indexOf(c) === index;\n            });\n            let test = this.state.ntransactiontestcode.filter((c, index) => {\n              return this.state.ntransactiontestcode.indexOf(c) === index;\n            });\n            npreregno = sample.map(x => x).join(\",\");\n            ntransactionsamplecode = subsample.map(x => x).join(\",\");\n            ntransactiontestcode = test.map(x => x).join(\",\");\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n            const inputParam = {\n              // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\n              // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n              // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n              inputData: {\n                change: this.props.Login.change,\n                npreregno: String(npreregno),\n                ntransactionsamplecode: ntransactionsamplecode,\n                ntransactiontestcode: ntransactiontestcode,\n                // ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\n                //     && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\n                ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\n                ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n                url: this.props.Login.settings[24],\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n                dfrom: obj.fromDate,\n                dto: obj.toDate,\n                //  isPopup:true,\n                isAddPopup: false,\n                isEditPopup: false,\n                nflag: 2,\n                userinfo: this.props.Login.userInfo,\n                ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n                doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\n                isSMTLFlow: parseInt(this.props.Login.settings[29]),\n                nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode ? this.state.selectedRecord.nreporttemplatecode.value : -1,\n                singleSampleInRelease: this.state.selectedRecord && this.state.selectedRecord.nisarnowiserelease && this.state.selectedRecord.nisarnowiserelease === transactionStatus.YES ? this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES ? transactionStatus.NO : transactionStatus.YES : this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease,\n                nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired,\n                nismultipleproject: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nismultipleproject) || transactionStatus.NO,\n                nprojectspecrequired: parseInt(this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired) || transactionStatus.NO,\n                //Added by Dhanushya RI jira id-ALPD-3862 for multiple projects under single release\n                searchRef: this.searchRef // ALPD-4229 (12-06-2024) Added searchRef to clear searched text\n\n              },\n              userinfo: this.props.Login.userInfo,\n              methodUrl: \"Release\",\n              classUrl: \"release\",\n              operation: this.props.Login.operation,\n              searchRef: this.searchRef // ALPD-4229 (30-05-2024) Added searchRef to clear search text\n\n            };\n\n            if (this.props.Login.isEditPopup) {\n              inputParam.inputData['nsectioncode'] = this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES ? this.props.Login.masterData && this.props.Login.masterData.reportSectionCode : -1;\n              inputParam.inputData['isEditSave'] = true;\n            }\n\n            const masterData = this.props.Login.masterData;\n\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam,\n                    masterData,\n                    seletedRecord\n                  },\n                  operation: this.props.Login.operation,\n                  screenName: this.props.Login.screenName,\n                  ncontrolcode: this.props.Login.ncontrolCode\n                }\n              };\n              this.props.updateStore(updateInfo);\n            } else {\n              if (this.props.Login.isDeletePopup) {\n                this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData);\n              } else if (this.props.Login.isEditPopup) {\n                this.props.UpdateApprovedSample(inputParam.inputData, this.props.Login.masterData);\n              } else {\n                this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData, seletedRecord);\n              }\n            }\n          } else {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_SELECTANYONESAMPLE\"\n            }));\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTANYONESAMPLE\"\n          }));\n        }\n      }\n    };\n\n    this.sendToPortal = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          url: this.props.Login.settings[24],\n          isPortal: true,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          allPreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getReportForPortal(inputParam);\n      }\n    };\n\n    this.editReportTemplate = inputParam => {\n      if (inputParam.editReportTemplate.ntransactionstatus === transactionStatus.DRAFT || inputParam.editReportTemplate.ntransactionstatus === transactionStatus.CORRECTION) {\n        let inputParamData = {\n          inputData: {\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            nsectioncode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n            nreporttypecode: REPORTTYPE.COAREPORT,\n            nreporttemplatecode: inputParam.editReportTemplate.nreporttemplatecode,\n            ncoaparentcode: inputParam.editReportTemplate.ncoaparentcode,\n            ncoaparenttranscode: inputParam.editReportTemplate.ntransactionstatus,\n            userinfo: this.props.Login.userInfo,\n            ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n          },\n          ncoaparentcode: inputParam.editReportTemplate.ncoaparentcode,\n          nreporttemplatecode: inputParam.editReportTemplate.nreporttemplatecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          selectedRecord: this.state.selectedRecord // screenName: \"IDS_REPORTTEMPLATE\"\n\n        };\n        this.props.editReportTemplate(inputParamData);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.reportHistory = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.DRAFT) {\n          let inputParam = {\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData\n          };\n          this.props.versionHistory(inputParam);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRELEASEDRECORD\"\n          }));\n        }\n      }\n    };\n\n    this.releaseReportHistory = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        //if(this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus!==transactionStatus.DRAFT){\n        let inputParam = {\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n          stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n          stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_RELEASEHISTORY\"\n          })\n        };\n        this.props.releaseReportHistory(inputParam); //    }else{\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\n        //    }\n      }\n    };\n\n    this.patientInfo = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          isPatientDetails: true,\n          openModal: true,\n          hideSave: true,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.reportHistoryInfo = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode\n          },\n          masterData: this.props.Login.masterData\n        };\n        this.props.viewReportHistory(inputParam);\n      }\n    };\n\n    this.releaseTestAttachmentData = actionName => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            actionName: actionName\n          },\n          masterData: this.props.Login.masterData\n        };\n        this.props.viewReleaseTestAttachment(inputParam);\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData\"];\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ncoareporttypecode: realReportTypeValue && realReportTypeValue.ncoareporttypecode || -1,\n        isneedsection: parseInt(realReportTypeValue && realReportTypeValue.isneedsection) || transactionStatus.NO,\n        ntransactionstatus: realFilterStatusValue && (realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let isPatientDetails = this.props.Login.isPatientDetails;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let hideSave = this.props.Login.hideSave;\n      let isAddPopup = this.props.Login.isAddPopup;\n      let isEditPopup = this.props.Login.isEditPopup;\n      let isDeletePopup = this.props.Login.isDeletePopup;\n      let isCorrectionNeed = this.props.Login.isCorrectionNeed;\n      let ncontrolcode = this.props.Login.ncontrolcode;\n      let modalShow = this.props.Login.modalShow;\n      let screenName = this.props.Login.screenName;\n      let isPatientReports = this.props.Login.isPatientReports;\n      let openModalTitle = this.props.Login.openModalTitle;\n      let isReleaseTestAttachment = this.props.Login.isReleaseTestAttachment;\n      let isReleaseTestComment = this.props.Login.isReleaseTestComment;\n      let isAddReleaseTestAttachment = this.props.Login.isAddReleaseTestAttachment;\n      let isAddReleaseTestComment = this.props.Login.isAddReleaseTestComment;\n      let isInitialRender = this.props.Login.isInitialRender;\n      let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\n      let FilterQueryBuilder = this.props.Login.FilterQueryBuilder;\n      let slideOutClose = this.props.Login.slideOutClose; // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\n\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      const editReportTemplateId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode; //let projectMasterList =[];\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false; // openModal = false;\n\n          isPatientDetails = false;\n          hideSave = false;\n          isAddPopup = false;\n          isEditPopup = false;\n          isDeletePopup = true; //Modified by sonia on 7th Aug 2024 for JIRA ID:ALPD-4576\n\n          isCorrectionNeed = false;\n          isPatientReports = false;\n          isReleaseTestAttachment = false;\n          isReleaseTestComment = false; // screenName = undefined;\n\n          selectedRecord = {};\n          FilterQueryBuilder = false;\n        } else {\n          slideOutClose = false;\n\n          if (ncontrolcode && (ncontrolcode === editResultId || ncontrolcode === editReportTemplateId)) {\n            modalShow = true;\n\n            if (ncontrolcode === editReportTemplateId) {\n              openModal = false;\n            }\n          }\n\n          if (this.props.Login.screenName !== undefined && this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_CORRECTION\"\n          }) // || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) \n          || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_REGENERATEFILE\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_GENERATEFILE\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_PREVIEWREPORT\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_PRELIMINARYREPORT\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_RELEASEHISTORY\"\n          })) {\n            openModal = false; //  screenName = undefined;\n          }\n\n          loadEsign = false; // selectedRecord[\"agree\"] = 4;\n\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n          FilterQueryBuilder = false;\n        }\n      } // When using EsignStateHandle component\n      else if (this.props.Login.loadEsignStateHandle) {\n        loadEsignStateHandle = false;\n      } else if (this.props.Login.FilterQueryBuilder) {\n        FilterQueryBuilder = false;\n        screenName = this.props.Login.screenNameCopy;\n      } else {\n        openModal = isAddReleaseTestAttachment === true || isAddReleaseTestComment === true ? true : false;\n        isPatientDetails = false;\n        hideSave = false;\n        isAddPopup = false;\n        isEditPopup = false;\n        isDeletePopup = false;\n        isCorrectionNeed = false;\n        isPatientReports = false;\n        isReleaseTestAttachment = isAddReleaseTestAttachment === true ? true : false;\n        isReleaseTestComment = isAddReleaseTestComment === true ? true : false; //screenName = undefined;\n\n        selectedRecord = {};\n        openModalTitle = undefined;\n        isAddReleaseTestAttachment = false;\n        isAddReleaseTestComment = false;\n        isInitialRender = false;\n        FilterQueryBuilder = false;\n        slideOutClose = true;\n      } // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\n      // if((this.props.Login.loadEsign && this.props.Login.loadEsign===false) && (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true ||\n      //     this.props.Login.isEditPopup && this.props.Login.isEditPopup === true)){\n      //     slideOutClose = true;\n      // }\n\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          modalShow,\n          loadEsign,\n          screenName,\n          selectedRecord,\n          selectedId: null,\n          isPatientDetails,\n          hideSave,\n          isAddPopup,\n          isEditPopup,\n          isDeletePopup,\n          isCorrectionNeed,\n          isPatientReports,\n          openModalTitle,\n          isReleaseTestAttachment,\n          isReleaseTestComment,\n          isAddReleaseTestAttachment,\n          isAddReleaseTestComment,\n          isInitialRender,\n          loadEsignStateHandle,\n          FilterQueryBuilder,\n          slideOutClose\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeDocModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = { ...this.state.selectedRecord\n      } || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onChangeAwesomeQueryBuilder = (immutableTree, config) => {\n      //let selectedRecord = this.state.selectedRecord || {};\n      const filterquery = QbUtils.sqlFormat(immutableTree, config);\n      const filterQueryTreeStr = QbUtils.getTree(immutableTree);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          filterquery,\n          filterQueryTreeStr\n        }\n      };\n      this.props.updateStore(updateInfo); // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\n    };\n\n    this.onComboChangeAwesomeQueryBuilder = (immutableTree, config, event) => {\n      //     let isMandatory=false;\n      //    if(event.type==='REMOVE_RULE'){\n      //     this.state.DynamicReportFilterTypeItem.map(x=>{\n      //         if(x[designProperties.VALUE]===config.fields[event.affectedField]['label'] && x['ismandatory']){\n      //             isMandatory=true;\n      //         }\n      //     })\n      //    }\n      //    if(!isMandatory){\n      const filterquery = QbUtils.sqlFormat(immutableTree, config);\n      const filterQueryTreeStr = QbUtils.getTree(immutableTree);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          filterquery,\n          filterQueryTreeStr //,immutableTreeCopy:immutableTree,configCopy:config\n\n        }\n      };\n      this.props.updateStore(updateInfo); // }else{\n      //     const filterquery =this.props.Login.filterquery;\n      //     const filterQueryTreeStr =this.props.Login.filterQueryTreeStr;\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: {\n      //             awesomeTree: this.props.Login.immutableTreeCopy, awesomeConfig: this.props.Login.configCopy, \n      //             filterquery, filterQueryTreeStr\n      //         }\n      //     }\n      //     this.props.updateStore(updateInfo)\n      //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\n      // }\n    };\n\n    this.handleExecuteClick = event => {\n      //const selectedRecord = this.state.selectedRecord\n      const filterquery = this.props.Login.filterquery;\n\n      if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\n        const inputparam = {\n          component: this.props.Login.seletedFilterComponent,\n          userinfo: this.props.Login.userInfo,\n          filterquery: filterquery // selectedRecord:this.state.selectedRecord\n\n        };\n        this.props.getPatientFilterExecuteData(inputparam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLINFILTER\"\n        }));\n      }\n    };\n\n    this.handleKendoRowClick = event => {\n      let patientinfo = event.dataItem;\n      const component = this.props.Login.seletedFilterComponent;\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputparam = {\n        realFromDate: obj.fromDate,\n        realToDate: obj.toDate,\n        realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n        realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n        realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n        realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n        realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n        realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        masterData: { ...this.props.Login.masterData\n        },\n        realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n        Login: this.props.Login,\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }),\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        userinfo: this.props.Login.userInfo,\n        patientinfo: event.dataItem,\n        spatientid: event.dataItem.spatientid // selectedRecord:this.state.selectedRecord\n\n      }; // if (component[\"childFields\"]) {\n      //     const index = this.props.Login.masterIndex;\n      //     let selectedRecord = this.state.selectedMaster || {};\n      //     component[\"childFields\"].map(item => {\n      //         let data = item1[item.columnname];\n      //         if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\n      //             //combocontrol\n      //             data = { label: item1[item.sdisplaymember], value: item1[item.svaluemember] };\n      //         }\n      //         else if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\n      //             //Date picker control\n      //             data = rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, data);\n      //         }\n      //         selectedRecord[index][item.columnname] = data;\n      //     })\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: { selectedMaster: selectedRecord, loadCustomSearchFilter: false, }\n      //     }\n      //     this.props.updateStore(updateInfo);\n      // }\n      // else {\n      //     const newdata = {\n      //         label: item1[component['displaymember']],\n      //         value: item1[component['valuemember']], item: { jsondata: { ...item1, jsondata: { ...item1 } } }\n      //     };\n      //     this.onComboChange(newdata, component, component['label']);\n      // }\n\n      this.props.getPatientWiseSample(inputparam);\n    };\n\n    this.onInputChange = event => {\n      let selectedComment = this.props.Login.masterData.selectedComment || {};\n      selectedComment[event.target.name] = event.target.value;\n      const coaFileInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedComment\n        }\n      };\n      this.props.updateStore(coaFileInfo);\n    };\n\n    this.validateEsign = () => {\n      let ncontrolcode = this.props.Login.ncontrolcode;\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      let modalName = \"\";\n\n      if (ncontrolcode && ncontrolcode === editResultId) {\n        modalName = \"modalShow\";\n      } else {\n        modalName = \"openModal\";\n      }\n\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforRelease(inputParam, modalName);\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      }\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          });\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      }\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = subsamplecode;\n\n      if (subsamplecode !== undefined) {\n        //  transactionsamplecode = subsamplecode\n        let recievedPreRegNo = undefined;\n        let recievedTransactionSampleCode = undefined;\n        let recievedTransactionTestCode = undefined;\n        transactionsamplecode.map(value => {\n          this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n            item.selected = checked;\n            let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n            let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n            let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n            let sendData = {\n              npreregno: nPreRegNo,\n              ntransactionsamplecode: nTransactionSampleCode,\n              ntransactiontestcode: nTransactionTestCode\n            }; // this.collectData(item, checkedflag)\n            // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n            let sentData = this.collectData(item, sendData);\n            recievedPreRegNo = sentData.npreregno;\n            recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n            recievedTransactionTestCode = sentData.ntransactiontestcode;\n            return item;\n          });\n        });\n        this.setState({\n          npreregno: checkedflag === false ? [] : recievedPreRegNo,\n          ntransactionsamplecode: checkedflag === false ? [] : recievedTransactionSampleCode,\n          ntransactiontestcode: checkedflag === false ? [] : recievedTransactionTestCode\n        });\n      } else {\n        let recievedPreRegNo = undefined;\n        let recievedTransactionSampleCode = undefined;\n        let recievedTransactionTestCode = undefined;\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n          let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n          let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n          let sendData = {\n            npreregno: nPreRegNo,\n            ntransactionsamplecode: nTransactionSampleCode,\n            ntransactiontestcode: nTransactionTestCode\n          }; // this.collectData(item, checkedflag)\n          // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n          let sentData = this.collectData(item, sendData);\n          recievedPreRegNo = sentData.npreregno;\n          recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n          recievedTransactionTestCode = sentData.ntransactiontestcode;\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n\n        this.setState({\n          npreregno: checkedflag === false ? [] : recievedPreRegNo,\n          ntransactionsamplecode: checkedflag === false ? [] : recievedTransactionSampleCode,\n          ntransactiontestcode: checkedflag === false ? [] : recievedTransactionTestCode\n        });\n      }\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (event.dataItems.length !== 0) {\n        this.state.dataResult.data.map(item => {\n          item.selected = checked;\n          return item;\n        });\n        this.selectionChange(event, 1, checked);\n      } else {\n        this.setState({\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      }\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let recievedPreRegNo = undefined;\n        let recievedTransactionSampleCode = undefined;\n        let recievedTransactionTestCode = undefined;\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n            let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n            let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n            let sendData = {\n              npreregno: nPreRegNo,\n              ntransactionsamplecode: nTransactionSampleCode,\n              ntransactiontestcode: nTransactionTestCode\n            }; // this.collectData(item)\n            // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n            let sentData = this.collectData(item, sendData);\n            recievedPreRegNo = sentData.npreregno;\n            recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n            recievedTransactionTestCode = sentData.ntransactiontestcode;\n          }\n        });\n        this.setState({\n          npreregno: recievedPreRegNo,\n          ntransactionsamplecode: recievedTransactionSampleCode,\n          ntransactiontestcode: recievedTransactionTestCode\n        });\n      } else {\n        let recievedPreRegNo = undefined;\n        let recievedTransactionSampleCode = undefined;\n        let recievedTransactionTestCode = undefined;\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n            let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n            let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n            let sendData = {\n              npreregno: nPreRegNo,\n              ntransactionsamplecode: nTransactionSampleCode,\n              ntransactiontestcode: nTransactionTestCode\n            }; // this.collectData(item)\n            // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n            let sentData = this.collectData(item, sendData);\n            recievedPreRegNo = sentData.npreregno;\n            recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n            recievedTransactionTestCode = sentData.ntransactiontestcode;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n\n        this.setState({\n          npreregno: recievedPreRegNo,\n          ntransactionsamplecode: recievedTransactionSampleCode,\n          ntransactiontestcode: recievedTransactionTestCode\n        });\n      }\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      let recievedPreRegNo = undefined;\n      let recievedTransactionSampleCode = undefined;\n      let recievedTransactionTestCode = undefined;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\n          let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\n          let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\n          let sendData = {\n            npreregno: nPreRegNo,\n            ntransactionsamplecode: nTransactionSampleCode,\n            ntransactiontestcode: nTransactionTestCode\n          }; // this.collectData(item)\n          // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\n\n          let sentData = this.collectData(item, sendData);\n          recievedPreRegNo = sentData.npreregno;\n          recievedTransactionSampleCode = sentData.ntransactionsamplecode;\n          recievedTransactionTestCode = sentData.ntransactiontestcode;\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n\n      this.setState({\n        npreregno: recievedPreRegNo,\n        ntransactionsamplecode: recievedTransactionSampleCode,\n        ntransactiontestcode: recievedTransactionTestCode\n      });\n    };\n\n    this.collectData = (item, recievedData) => {\n      //     let npreregno = this.state.npreregno || []\n      //     let ntransactionsamplecode = this.state.ntransactionsamplecode || []\n      //     let ntransactiontestcode = this.state.ntransactiontestcode || []\n      let npreregno = recievedData.npreregno || [];\n      let ntransactionsamplecode = recievedData.ntransactionsamplecode || [];\n      let ntransactiontestcode = recievedData.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        }\n\n        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n          ntransactiontestcode.push(item.ntransactiontestcode);\n        }\n      } else {\n        const preregno = npreregno.filter(data => data !== item.npreregno);\n        npreregno = preregno;\n        const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = transactionsamplecode;\n        const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\n        ntransactiontestcode = transactiontestcode;\n      } //     this.setState({\n      //         npreregno: checkedflag === false ? [] : npreregno,\n      //         ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode, ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\n      //     })\n\n\n      let returnData = {\n        npreregno,\n        ntransactionsamplecode,\n        ntransactiontestcode\n      };\n      return returnData;\n    };\n\n    this.viewSelectedReport = filedata => {\n      delete filedata.inputData.userinfo;\n      const inputParam = {\n        inputData: {\n          releasedcoareport: filedata.inputData,\n          userinfo: this.props.Login.userInfo,\n          ncontrolCode: filedata.ncontrolCode\n        },\n        classUrl: \"release\",\n        operation: \"view\",\n        methodUrl: \"ReleasedCOAReport\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.childDataChange = selectedRecord => {\n      let isInitialRender = false;\n      this.setState({\n        selectedRecord: { ...selectedRecord\n        },\n        isInitialRender\n      });\n    };\n\n    this.onMandatoryCheck = () => {\n      const mandatoryFields = this.props.Login.loadEsignStateHandle ? [{\n        \"idsName\": \"IDS_PASSWORD\",\n        \"dataField\": \"esignpassword\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REASON\",\n        \"dataField\": \"esignreason\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"esigncomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      } // { \"idsName\": \"IDS_CHECKAGREE\",\"dataField\": \"agree\",  \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"checkbox\" },\n      ] : this.props.Login.isAddReleaseTestAttachment ? [{\n        \"idsName\": \"IDS_FILE\",\n        \"dataField\": \"sfilename\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      } //  { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\n      ] : this.props.Login.isAddReleaseTestComment ? this.state.selectedRecord && this.state.selectedRecord[\"ncommentsubtypecode\"] && this.state.selectedRecord[\"ncommentsubtypecode\"].value === 3 ? [{\n        \"idsName\": \"IDS_COMMENTNAME\",\n        \"dataField\": \"scommentsubtype\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_ABBREVIATIONNAME\",\n        \"dataField\": \"spredefinedname\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }] : [{\n        \"idsName\": \"IDS_COMMENTNAME\",\n        \"dataField\": \"scommentsubtype\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }] : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }) && this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection !== transactionStatus.YES ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_REPORTTEMPLATE\",\n        \"dataField\": \"nreporttemplatecode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }] : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }) && this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection === transactionStatus.YES ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_SECTION\",\n        \"dataField\": \"nsectioncode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"mandatory\": true,\n        \"idsName\": \"IDS_REPORTTEMPLATE\",\n        \"dataField\": \"nreporttemplatecode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }] : [];\n      {\n        this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) && this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection !== transactionStatus.YES && this.props.Login.masterData && this.props.Login.masterData.reportTemplateList && this.props.Login.masterData.reportTemplateList.length === 0 ? toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTTEMPLATEISNOTFOUND\"\n        })) : onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields, this.props.Login.loadEsignStateHandle ? this.validateEsign : this.props.Login.isAddReleaseTestAttachment ? this.onSaveTestAttachment : this.props.Login.isAddReleaseTestComment ? this.onSaveTestComment : this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) ? this.onSaveModalClick : \"\", this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) ? this.props.Login.loadEsign : this.props.Login.loadEsignStateHandle);\n      }\n    };\n\n    this.onSaveTestAttachment = (saveType, formRef) => {\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const userInfo = this.props.Login.userInfo;\n      let isFileEdited = transactionStatus.NO;\n      let fileArray = [];\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        if (this.state.operation === 'create') {\n          acceptedFiles.forEach((file, index) => {\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData[\"nformcode\"] = userInfo.nformcode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n            tempData[\"nusercode\"] = userInfo.nusercode;\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n            tempData[\"jsondata\"] = {\n              stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n              susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n              suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n              sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n            };\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            fileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          acceptedFiles.forEach((file, index) => {\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\n            tempData[\"nformcode\"] = userInfo.nformcode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n            tempData[\"nusercode\"] = userInfo.nusercode;\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n            tempData[\"jsondata\"] = {\n              stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n              susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n              suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n              sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n            };\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            formData.append(\"filecount\", acceptedFiles.length);\n            isFileEdited = transactionStatus.YES;\n            fileArray.push(tempData);\n          });\n        }\n      } else {\n        let tempData = {};\n        tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\n        tempData[\"nformcode\"] = userInfo.nformcode;\n        tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n        tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n        tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n        tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n        tempData[\"nusercode\"] = userInfo.nusercode;\n        tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n        tempData[\"jsondata\"] = {\n          stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n          susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n          suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n          nfilesize: selectedRecord.size,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n          slinkname: \"\",\n          sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n          sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n        };\n        fileArray.push(tempData);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"releasetestattachment\", JSON.stringify(fileArray));\n      formData.append(\"nattachmenttypecode\", attachmentType.FTP);\n      formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\n      formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\n      formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n        sformname: Lims_JSON_stringify(userInfo.sformname),\n        smodulename: Lims_JSON_stringify(userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n      }));\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          },\n          doAction: \"editReleaseTestAttachment\",\n          formData: formData,\n          isFileupload: true,\n          operation: this.props.Login.operation,\n          classUrl: \"release\",\n          saveType: saveType,\n          formRef: formRef,\n          methodUrl: \"ReleaseTestAttachment\",\n          selectedRecord: this.state.selectedRecord,\n          screenName: this.props.Login.screenName,\n          masterData: this.props.Login.masterData\n        }\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            screenData: {\n              inputParam\n            },\n            loadEsignStateHandle: true,\n            ncontrolcode: this.props.Login.ncontrolCode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.onSaveReleaseTestAttachment(inputParam);\n      }\n    };\n\n    this.deleteReleaseTestAttachment = deleteParam => {\n      const url = \"release/deleteReleaseTestAttachment\";\n\n      if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n        let releasetestattachment = {\n          \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\n          \"npreregno\": deleteParam.selectedRecord.npreregno,\n          \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\n          \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\n          \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\n        };\n        let inputParam = {\n          inputData: {\n            releasetestattachment,\n            url,\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.Login.screenName,\n            masterData: this.props.Login.masterData,\n            doAction: \"deleteReleaseTestAttachment\",\n            selectedRecord: this.state.selectedRecord\n          }\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              screenData: {\n                inputParam\n              },\n              loadEsignStateHandle: true,\n              ncontrolcode: deleteParam.ncontrolCode\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.onDeleteReleaseTestAttachment(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.getSapInfoTOSDMS = saveType => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0) {\n        let masterData = this.props.Login.masterData;\n        let inputParam = {\n          inputData: {\n            ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\n            sreleasecomments: this.state.selectedRecord && this.state.selectedRecord.sreleasecomments || \"\",\n            userinfo: this.props.Login.userInfo,\n            doAction: \"createReleaseComment\"\n          },\n          masterData: masterData,\n          selectedRecord: this.state.selectedRecord\n        };\n        this.props.getReleaseSapInfoTOSDMS(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_BARCODENOTFOUND\"\n        }));\n      }\n    };\n\n    this.onSaveTestComment = (saveType, formRef) => {\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const userInfo = this.props.Login.userInfo;\n      const inputData = {};\n      let commentArray = [];\n      let comment = {};\n      comment[\"nreleasetestcommentcode\"] = selectedRecord.selectedReleaseTestComment && selectedRecord.selectedReleaseTestComment.nreleasetestcommentcode;\n      comment[\"nformcode\"] = userInfo.nformcode;\n      comment[\"npreregno\"] = selectedRecord.npreregno.value;\n      comment[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n      comment[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n      comment[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n      comment[\"nusercode\"] = userInfo.nusercode;\n      comment[\"nuserrolecode\"] = userInfo.nuserrole;\n      comment[\"ncommentsubtypecode\"] = selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.value;\n      comment[\"nsampletestcommentscode\"] = selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.value !== \"\" ? selectedRecord.nsampletestcommentscode.value : '-1';\n      comment[\"jsondata\"] = {\n        scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\n        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n        stestsynonym: selectedRecord.stestsynonym,\n        scommentsubtype: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.label,\n        spredefinedname: selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.label !== \"\" ? selectedRecord.nsampletestcommentscode.label : '-',\n        ncommentsubtypecode: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode,\n        nsampletestcommentscode: selectedRecord.nsampletestcommentscode ? selectedRecord.nsampletestcommentscode : '-'\n      };\n      comment[\"nsamplecommentscode\"] = selectedRecord.nsamplecommentscode ? selectedRecord.nsamplecommentscode.value : -1;\n      commentArray.push(comment);\n      inputData[\"testcomment\"] = commentArray; // }\n\n      formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n        sformname: Lims_JSON_stringify(userInfo.sformname),\n        smodulename: Lims_JSON_stringify(userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n      }));\n      formData.append(\"releasetestcomment\", JSON.stringify(commentArray));\n      formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          },\n          doAction: \"editReleaseTestComment\",\n          formData: formData,\n          operation: this.props.Login.operation,\n          classUrl: \"release\",\n          saveType: saveType,\n          formRef: formRef,\n          methodUrl: \"ReleaseTestComment\",\n          selectedRecord: this.state.selectedRecord,\n          screenName: this.props.Login.screenName,\n          masterData: this.props.Login.masterData\n        }\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsignStateHandle: true,\n            screenData: {\n              inputParam\n            },\n            ncontrolcode: this.props.Login.ncontrolCode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.onSaveReleaseTestComment(inputParam);\n      }\n    };\n\n    this.ReleaseComments = inputParam => {\n      const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\"); //let selectedReleaseHistory = [];\n      // this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && \n      //this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\n\n      let masterData = this.props.Login.masterData;\n      masterData[\"selectedReleaseHistory\"] = [];\n      masterData[\"selectedReleaseHistory\"].push(inputParam[\"createReleaseComment\"]); //const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [] ;\n      //  if(resultArray[0] !== transactionStatus.RELEASED){\n\n      let inputParamData = {\n        inputData: {\n          ncoaparentcode: inputParam.createReleaseComment.ncoaparentcode,\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: { ...this.props.Login.masterData\n        },\n        selectedRecord: this.state.selectedRecord,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RELEASECOMMENTS\"\n        })\n      };\n      this.props.openReleaseComments(inputParamData); // }\n      // else{\n      //  toast.warn(this.props.intl.formatMessage({ id: \"IDS_RELEASEDRECORDNOTALLOWEDTOADDCOMMENT\" }));\n      // }\n    };\n\n    this.onSaveReleaseComments = (saveType, data) => {\n      let masterData = this.props.Login.masterData;\n      let controlId = this.state.controlMap.has(\"ReportComment\") && this.state.controlMap.get(\"ReportComment\").ncontrolcode;\n      let inputParam = {\n        inputData: {\n          ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\n          //nreleasetestcommentcode: this.state.selectedRecord && this.state.selectedRecord.nreleasetestcommentcode || -1,\n          sreleasecomments: this.state.selectedRecord && this.state.selectedRecord.sreleasecomments || \"\",\n          userinfo: this.props.Login.userInfo,\n          doAction: \"createReleaseComment\"\n        },\n        masterData: masterData,\n        selectedRecord: this.state.selectedRecord\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            modalShow: false,\n            openModal: true,\n            ncontrolcode: controlId,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.SaveReleaseComment(inputParam);\n      }\n    };\n\n    this.deleteReleaseTestComment = deleteParam => {\n      const url = \"release/deleteReleaseTestComment\";\n\n      if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n        let releasetestcomment = {\n          \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\n          \"npreregno\": deleteParam.selectedRecord.npreregno,\n          \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\n          \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\n          \"nreleasetestcommentcode\": deleteParam.selectedRecord.nreleasetestcommentcode\n        };\n        let inputParam = {\n          inputData: {\n            releasetestcomment,\n            url,\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.Login.screenName,\n            masterData: this.props.Login.masterData,\n            doAction: \"deleteReleaseTestComment\",\n            selectedRecord: this.state.selectedRecord\n          }\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsignStateHandle: true,\n              screenData: {\n                inputParam\n              },\n              ncontrolcode: deleteParam.ncontrolCode\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.onDeleteReleaseTestComment(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const outsourceFileDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const slideOutDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    }; // ALPD-4896, Added slideOutDataState for slideout datagrid\n\n    const reportInfoDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const correctionDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const versionHistoryDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const preliminaryHistoryDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const testAttachmentDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const testCommentDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const sampleGridDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      outsourceFileDataState: outsourceFileDataState,\n      slideOutDataState: slideOutDataState,\n      // ALPD-4896, Added slideOutDataState for slideout datagrid\n      reportInfoDataState: reportInfoDataState,\n      correctionDataState: correctionDataState,\n      versionHistoryDataState: versionHistoryDataState,\n      preliminaryHistoryDataState: preliminaryHistoryDataState,\n      childDataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      ProjecttypeList: [],\n      ProjectMasterList: [],\n      SectionList: [],\n      ReporttypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: [],\n      stateDynamicDesign: [],\n      sidebarview: false,\n      testAttachmentDataState: testAttachmentDataState,\n      testCommentDataState: testCommentDataState,\n      sampleGridDataState: sampleGridDataState,\n      splitChangeWidthPercentage: 28.6,\n      skip: 0,\n      take: this.props.Login.settings && parseInt(this.props.Login.settings[3]) // ,\n      // nmultiplesampleinsinglerelease: this.props.Login.masterData.realReportTypeValue && \n      //     this.props.Login.masterData.realReportTypeValue.nmultiplesampleinsinglerelease\n\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      if (props.Login.errorCode === 409) {\n        toast.warn(props.Login.masterStatus);\n        props.Login.masterStatus = \"\";\n      }\n    } else if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    } else if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    // ALPD-4229 (12-06-2024) Added sortData to sort the ReleaseHistory in all scenarios\n    this.props.Login.masterData && this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && sortData(this.props.Login.masterData.ReleaseHistory, \"\", 'ncoaparentcode');\n    const editReportParam = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"nreportinforeleasecode\",\n      operation: \"update\",\n      //selectedId:,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: -1,\n      masterData: this.props.Login.masterData,\n      selectedId: this.props.Login.selectedId\n    };\n    this.feildsForGrid = [// { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },  \n    {\n      \"idsName\": \"IDS_SCREEN\",\n      \"dataField\": \"testname\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_FIELDNAME\",\n      \"dataField\": \"sreportfieldname\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_VALUE\",\n      \"dataField\": \"sreportfieldvalue\",\n      \"width\": \"100px\"\n    }];\n    this.fieldsForReleasedReportGrid = [{\n      \"idsName\": \"IDS_RELEASENO\",\n      \"dataField\": \"sreleaseno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_VERSIONNO\",\n      \"dataField\": \"nversionno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_ORDERID\",\n      \"dataField\": \"sexternalorderid\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDSITE\",\n      \"dataField\": \"ssitename\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDDATE\",\n      \"dataField\": \"sreleasedate\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDUSER\",\n      \"dataField\": \"susername\",\n      \"width\": \"200px\"\n    }];\n    const mandatoryFields = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_DESCRIPTION\",\n      \"dataField\": \"sreportcomments\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    } //  { \"mandatory\": true, \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\n    // { \"mandatory\": true, \"idsName\": \"IDS_INTERFACETYPE\", \"dataField\": \"ninterfacetypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n    ];\n    const mandatoryCommentsFields = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_COMMENTS\",\n      \"dataField\": \"sreleasecomments\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    const mandatoryFieldsFilter = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_FILTERNAME\",\n      \"dataField\": \"sfiltername\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    let resultCorrectionColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"150px\"\n    }];\n    {\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && resultCorrectionColumnList.push({\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"150px\"\n      });\n    }\n    resultCorrectionColumnList.push({\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETERNAME\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_FINALRESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_RESULTFLAG\",\n      \"dataField\": \"sgradename\",\n      \"width\": \"150px\",\n      \"fieldType\": \"gradeColumn\"\n    }, //Commented  by sonia ALPD-4275 for Unit Name NA Showing\n    //{ \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"150px\" },\n    {\n      \"idsName\": \"IDS_RESULTACCURACY\",\n      \"dataField\": \"sresultaccuracyname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_LOWA\",\n      \"dataField\": \"smina\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_LOWB\",\n      \"dataField\": \"sminb\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_HIGHA\",\n      \"dataField\": \"smaxa\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_HIGHB\",\n      \"dataField\": \"smaxb\",\n      \"width\": \"150px\"\n    }\n    /* { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"sminlod\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"smaxlod\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"sminloq\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"smaxloq\", \"width\": \"150px\" }*/\n    );\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let filePath = \"\";\n\n    if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\n      filePath = reportUrl();\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    } // let userStatusCSS = \"\";\n    // let activeIconCSS = \"fa fa-check\";\n    // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\n    //     userStatusCSS = \"outline-secondary\";\n    //     activeIconCSS = \"\";\n    // }\n    // else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\n    //     userStatusCSS = \"outline-success\";\n    // }\n    // else {\n    //     userStatusCSS = \"outline-Final\";\n    // }\n\n\n    const filterParam = {\n      inputListName: \"ReleaseHistory\",\n      selectedObject: \"selectedReleaseHistory\",\n      primaryKeyField: \"ncoaparentcode\",\n      fetchUrl: \"release/getReleaseHistory\",\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      changeList: [],\n      // ALPD-4229 (30-05-2024) Removed changeList value to make search filter work correctly\n      fecthInputObject: {\n        isSearch: true,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        masterData: this.props.Login.masterData,\n        searchFieldList: this.searchFieldList,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      }\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_REPORTTYPE\",\n      \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" : this.props.Login.masterData.ReportTypeValue ? this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get('AddSamples').ncontrolcode;\n    const preliminaryId = this.state.controlMap.has(\"PreliminaryReport\") && this.state.controlMap.get(\"PreliminaryReport\").ncontrolcode;\n    const previewId = this.state.controlMap.has(\"PreviewFinalReport\") && this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\n    const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n    const regenerateId = this.state.controlMap.has(\"RegenerateRelease\") && this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\n    const viewreportId = this.state.controlMap.has(\"ViewReportRelease\") && this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\n    const sendtoportalId = this.state.controlMap.has(\"SendToPortal\") && this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"AppendSamples\") && this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"RemoveSamples\") && this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\n    const patientinfoId = this.state.controlMap.has(\"PatientInfo\") && this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\n    const ResultCorrectionId = this.state.controlMap.has(\"ResultCorrection\") && this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\n    const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n    const editcommentsId = this.state.controlMap.has(\"EditComment\") && this.state.controlMap.get(\"EditComment\").ncontrolcode;\n    const correctionId = this.state.controlMap.has(\"Correction\") && this.state.controlMap.get(\"Correction\").ncontrolcode;\n    const releaseHistoryId = this.state.controlMap.has(\"ReleaseHistory\") && this.state.controlMap.get(\"ReleaseHistory\").ncontrolcode;\n    const downloadVersionHist = this.state.controlMap.has(\"DownloadReleaseVersion\") && this.state.controlMap.get(\"DownloadReleaseVersion\").ncontrolcode;\n    const downloadReportId = this.state.controlMap.has(\"DownloadReport\") && this.state.controlMap.get(\"DownloadReport\").ncontrolcode;\n    const reportHistoryId = this.state.controlMap.has(\"ReportHistory\") && this.state.controlMap.get(\"ReportHistory\").ncontrolcode;\n    const releaseTestAttachmentId = this.state.controlMap.has(\"ReleaseTestAttachment\") && this.state.controlMap.get(\"ReleaseTestAttachment\").ncontrolcode;\n    const releaseTestCommentId = this.state.controlMap.has(\"ReleaseTestComment\") && this.state.controlMap.get(\"ReleaseTestComment\").ncontrolcode;\n    const releaseReportHistoryId = this.state.controlMap.has(\"ReleaseReportHistory\") && this.state.controlMap.get(\"ReleaseReportHistory\").ncontrolcode;\n    const generateid = this.state.controlMap.has(\"Generate\") && this.state.controlMap.get(\"Generate\").ncontrolcode;\n    const editReportTemplateId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\n    const deleteSampleId = this.props.Login.inputParam && this.state.controlMap.has(\"DeleteSamples\") && this.state.controlMap.get('DeleteSamples').ncontrolcode;\n    const filterNameId = this.state.controlMap.has(\"FilterName\") ? this.state.controlMap.get(\"FilterName\").ncontrolcode : -1;\n    const filterDetailId = this.state.controlMap.has(\"FilterDetail\") ? this.state.controlMap.get(\"FilterDetail\").ncontrolcode : -1;\n    const releaseCommentId = this.props.Login.inputParam && this.state.controlMap.has(\"ReportComment\") && this.state.controlMap.get('ReportComment').ncontrolcode;\n    const editParam = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"ntransactionresultcode\",\n      operation: \"update\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editResultId,\n      masterData: this.props.Login.masterData\n    };\n    const ReleaseMasterDataParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].npreregno || \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    const ApprovedModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      Login: this.props.Login,\n      // selectedRecord: { ...this.props.Login.selectedRecord },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttype': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        // 'ncoareporttypecode': 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        // \"nsectioncode\" : this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n        \"nsectioncode\": -1,\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        })\n      },\n      DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem: this.state.DynamicDefaultStructureItem,\n      extractedColumnList: this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\n    };\n    const RemoveModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n        'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\n        ncontrolCode: deleteId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_REMOVESAMPLES\"\n        }),\n        spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\n        patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\n      }\n    };\n    const EditModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'nneededit': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n        'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\n        ncontrolCode: editId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_EDITSAMPLES\"\n        }),\n        nsectioncode: this.props.Login.masterData && this.props.Login.masterData.reportSectionCode || -1,\n        spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\n        patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false // nismultipleproject: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nismultipleproject) || transactionStatus.NO,\n\n      },\n      DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem: this.state.DynamicDefaultStructureItem,\n      extractedColumnList: this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\n    };\n    const jsonParam = {\n      screenName: \"IDS_RELEASE\",\n      operation: \"update\",\n      primaryKeyName: \"ncoaparentcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      selectedReleaseHistory: this.props.Login.masterData.selectedReleaseHistory\n    };\n    const ResultCorrectionParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        ncontrolCode: ResultCorrectionId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RESULTCORRECTION\"\n        })\n      }\n    };\n    const reportSubFields = [{\n      [designProperties.VALUE]: \"susername\",\n      [designProperties.LABEL]: \"IDS_USERNAME\"\n    }, {\n      [designProperties.VALUE]: \"sgenerateddate\",\n      [designProperties.LABEL]: \"IDS_GENERATEDDATE\"\n    }, {\n      [designProperties.VALUE]: \"sversionno\",\n      [designProperties.LABEL]: \"IDS_VERSIONNO\"\n    }, {\n      [designProperties.VALUE]: \"sreporttemplatename\",\n      [designProperties.LABEL]: \"IDS_REPORTTEMPLATE\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap new-breadcrumb toolbar-top-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1346,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1347,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"fixed-buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1350,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      //ALPD-4878 Add filter name and filter details button,done by Dhanushya RI\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_SAVEFILTER\"\n      }) // data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(filterNameId) === -1,\n      onClick: () => this.openFilterName(filterNameId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1351,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SaveIcon, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1358,\n        columnNumber: 29\n      }\n    })), this.state.userRoleControlRights.indexOf(filterDetailId) !== -1 && this.props.Login.masterData && this.props.Login.masterData.FilterName !== undefined && this.props.Login.masterData.FilterName.length > 0 ? /*#__PURE__*/React.createElement(CustomPopover, {\n      icon: faBolt,\n      nav: true,\n      data: this.props.Login.masterData.FilterName,\n      btnClasses: \"btn-circle btn_grey ml-2 spacesremovefromaction\" //dynamicButton={(value) => this.props.getAcceptTestTestWise(value,testGetParam,this.props.Login.masterData.MJSelectedTest,this.props.Login.userInfo)}\n      ,\n      dynamicButton: value => this.clickFilterDetail(value),\n      textKey: \"sfiltername\",\n      iconKey: \"nfiltercode\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1363,\n        columnNumber: 33\n      }\n    }) : \"\"), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1377,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1449,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1450,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView // listMasterShowIcon={1}\n    , {\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory || [],\n      selectedMaster: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory : undefined // selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory !== undefined ? [this.props.Login.masterData.selectedReleaseHistory] : undefined}\n      ,\n      primaryKeyField: \"ncoaparentcode\",\n      filterColumnData: this.props.filterTransactionList,\n      getMasterDetail: (ReleaseSample, status) => this.props.getReleasedDataDetails({ ...ReleaseMasterDataParam,\n        ...ReleaseSample\n      }, status) // getMasterDetail={this.props.getReleasedDataDetails}\n      // inputParam={{\n      // ...this.state.subSampleGetParam,\n      // searchTestRef: this.searchTestRef,\n      // searchSubSampleRef: this.searchSubSampleRef,\n      // testskip: this.state.testskip,\n      // subsampleskip: this.state.subsampleskip,\n      // resultDataState: this.state.resultDataState,\n      // activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\n      // }}\n      ,\n      selectionList: this.props.Login.masterData && this.props.Login.masterData.transactionStatusSelectionList && this.props.Login.masterData.transactionStatusSelectionList.length > 0 ? this.props.Login.masterData.transactionStatusSelectionList : [] // hideQuickSearch={true}\n      ,\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"sreportno\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"selectedReleaseHistory\",\n      searchListName: \"searchedData\",\n      searchRef: this.searchRef,\n      objectName: \"releaseno\",\n      listName: \"IDS_RELEASENO\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: reportSubFields,\n      moreField: [],\n      needMultiSelect: this.props.Login.settings && this.props.Login.settings[50] ? parseInt(this.props.Login.settings[50]) === transactionStatus.YES ? true : false : false,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      filterParam: filterParam,\n      subFieldsLabel: true,\n      handlePageChange: this.handleReportNoPageChange,\n      skip: this.state.skip,\n      take: this.state.take,\n      childTabsKey: [\"selectedReleaseHistory\", \"releaseno\", \"ReleasedSampleDetails\", \"ReleasedSubSampleDetails\", \"ReleasedTestDetails\"],\n      actionIcons: [{\n        title: this.props.intl.formatMessage({\n          id: \"IDS_EDITREPORTTEMPLATE\"\n        }),\n        controlname: \"faPencilAlt\",\n        objectName: \"editReportTemplate\",\n        hidden: this.state.userRoleControlRights.indexOf(editReportTemplateId) === -1,\n        onClick: this.editReportTemplate,\n        inputData: {\n          primaryKeyName: \"ncoaparentcode\",\n          operation: \"update\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        controlname: \"faTrashAlt\",\n        objectName: \"deleteSamples\",\n        hidden: this.state.userRoleControlRights.indexOf(deleteSampleId) === -1,\n        onClick: this.ConfirmDelete,\n        inputData: {\n          primaryKeyName: \"ncoaparentcode\",\n          operation: \"delete\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          controlId: deleteSampleId\n        }\n      }, {\n        title: this.props.intl.formatMessage({\n          id: \"IDS_DECISION\"\n        }),\n        controlname: \"faComments\",\n        objectName: \"createReleaseComment\",\n        hidden: this.state.userRoleControlRights.indexOf(releaseCommentId) === -1,\n        onClick: this.ReleaseComments,\n        inputData: {\n          primaryKeyName: \"ncoaparentcode\",\n          operation: \"create\",\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          controlId: releaseCommentId\n        }\n      }],\n      needFilter: true,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1560,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-icon-rounded btn-circle solid-blue\",\n        role: \"button\",\n        hidden: this.state.userRoleControlRights.indexOf(releaseId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADD\"\n        }) // data-for=\"tooltip_list_wrap\"\n        ,\n        onClick: () => this.getApprovedSample(ApprovedModalParam, releaseId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1561,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1566,\n          columnNumber: 49\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }) //   data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: this.reloadData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1568,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1572,\n          columnNumber: 49\n        }\n      }))),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          ReportType: this.state.ReporttypeList || [],\n          ReportTypeValue: this.props.Login.masterData.ReportTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {} //   UserSection={this.state.UserSectionList || []}\n          //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\n          //   Test={this.state.TestList || []}\n          //  TestValue={this.props.Login.masterData.TestValue || []}\n          ,\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1578,\n            columnNumber: 62\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1458,\n        columnNumber: 33\n      }\n    }), this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1620,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1621,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1622,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1631,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1643,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_SAPINFO\"\n      }),\n      \"data-place\": \"left\",\n      hidden: false,\n      onClick: () => this.getSapInfoTOSDMS(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1648,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faInfoCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1655,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(patientinfoId) === -1,\n      onClick: () => this.patientInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1660,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faInfoCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.NO &&\n    /*#__PURE__*/\n    // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1 //Modified by sonia on 11-06-2024 for JIRA ID:4122 Sample Count Validation\n      ,\n      onClick: () => this.props.validationforAppendSamples(EditModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1707,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1714,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.NO &&\n    /*#__PURE__*/\n    // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.props.getRemoveApprovedSample(RemoveModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1727,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1733,\n        columnNumber: 65\n      }\n    })),\n    /*#__PURE__*/\n    // (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESULTCORRECTION\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1,\n      onClick: () => this.props.getResultCorrectionData(ResultCorrectionParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1777,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ResultCorrection, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1783,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTHISTORY\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(reportHistoryId) === -1,\n      onClick: () => this.reportHistoryInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1809,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ReportHistory, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custon_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1815,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseReportHistoryId) === -1,\n      onClick: () => this.releaseReportHistory(releaseReportHistoryId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1838,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1845,\n        columnNumber: 61\n      }\n    })),\n    /*#__PURE__*/\n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \n    //  this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT ?\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTCORRECTION\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(editcommentsId) === -1,\n      onClick: () => this.reportcomments('IDS_REPORTCORRECTION'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1851,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1857,\n        columnNumber: 65\n      }\n    })) // : \"\"\n    , /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseTestAttachmentId) === -1,\n      onClick: () => this.releaseTestAttachmentData(\"IDS_RELEASETESTATTACHMENT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1867,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReleaseTestAttachmentIcon, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1874,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTCOMMENT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseTestCommentId) === -1,\n      onClick: () => this.releaseTestAttachmentData(\"IDS_RELEASETESTCOMMENT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1883,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReleaseTestCommentIcon, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1890,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(CustomPopover, {\n      nav: true,\n      data: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(previewId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1915,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_PREVIEWREPORT\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.previewReport(previewId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1916,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Preview, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1921,\n          columnNumber: 77\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(preliminaryId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1924,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n          id: \"IDS_PRELIMINARYREPORT\"\n        }),\n        \"data-place\": \"left\" // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\n        ,\n        onClick: () => this.preliminaryReport(preliminaryId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1925,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(PreliminaryReport, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1933,\n          columnNumber: 77\n        }\n      }), \" \", this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n        id: \"IDS_PRELIMINARYREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(downloadId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1938,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        // className=\"btn btn-circle outline-grey ml-2\"\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_GENERATEFILE\"\n        }),\n        \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: () => {\n          this.downloadReleasedValidation(downloadId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1939,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Generate, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1946,\n          columnNumber: 77\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(correctionId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1949,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_CORRECTION\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.CorrectionStatus(correctionId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1950,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Correction, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1954,\n          columnNumber: 77\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(regenerateId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1957,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REGENERATEFILE\"\n        }),\n        \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"                                                                                    \n        ,\n        onClick: () => this.regenerateReleasedFile(regenerateId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1958,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(ReGenerate, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1963,\n          columnNumber: 77\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(downloadReportId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1966,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DOWNLOADFINALREPORT\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.downloadHistory(downloadReportId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1967,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(DownloadCertificate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1971,\n          columnNumber: 77\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_DOWNLOADFINALREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(generateid) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1975,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_PORTALSYNC\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.generatereport(generateid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1976,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1980,\n          columnNumber: 77\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_PORTALSYNC\"\n      }))), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES && /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list \",\n        hidden: this.state.userRoleControlRights.indexOf(sendtoportalId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1985,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\" //   data-for=\"tooltip_list_wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_SENDTOPORTAL\"\n        }),\n        onClick: () => this.sendToPortal(sendtoportalId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1986,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1991,\n          columnNumber: 81\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_SENDTOPORTAL\"\n      })))),\n      Button: false,\n      hideIcon: true,\n      btnClasses: \"btn-circle btn_grey ml-2\",\n      textKey: \"value\",\n      icon: faChevronCircleDown // toolTip={this.props.intl.formatMessage({ id: \"IDS_CONFIGURE\" })}\n      ,\n      dynamicButton: value => this.actionMethod(value),\n      userRoleControlRights: this.state.userRoleControlRights,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1911,\n        columnNumber: 57\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2011,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '525px',\n      gridTop: '10px' //   isActionRequired={true}\n      //   isToolBarRequired={true}\n      //  isExpandRequired={true}\n      //   isDownloadRequired={true}\n      ,\n      isCheckBoxRequired: false // ALPD-5247    Changed from true to false by Vishakh due to checkbox hide\n      ,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.ReleasedSubSampleDetails,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.ReleasedTestDetails,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      selectionChange: this.selectionChange,\n      releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2023,\n        columnNumber: 49\n      }\n    })))) : \"\")))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeDocModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2090,\n        columnNumber: 25\n      }\n    }) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.state.openModal,\n      size: this.props.Login.loadEsign || this.props.Login.loadEsignStateHandle ? \"lg\" : \"xl\",\n      closeModal: this.closeModal,\n      inputParam: this.props.Login.inputParam,\n      mandatoryFields: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? mandatoryFields : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) ? mandatoryCommentsFields : \"\",\n      screenName: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) ? this.props.intl.formatMessage({\n        id: \"IDS_DECISION\"\n      }) : this.props.Login.loadEsignStateHandle ? this.props.intl.formatMessage({\n        id: \"IDS_ESIGN\"\n      }) : this.props.Login.isPatientDetails ? this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }) : this.props.Login.isPatientReports ? this.props.intl.formatMessage({\n        id: \"IDS_REPORTHISTORY\"\n      }) : this.props.Login.isReleaseTestAttachment ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }) : this.props.Login.isReleaseTestComment ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTCOMMENT\"\n      }) : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) : this.props.Login.screenName,\n      onSaveClick: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? this.downloadReleasedFile : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) ? this.onSaveReleaseComments : this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle || this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }) ? this.onMandatoryCheck : this.onSaveModalClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {} //noSave={this.props.Login.openModalTitle=='versionhistory' ? true : false}\n      ,\n      hideSave: this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" || this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) || this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" ? true : this.props.Login.FilterQueryBuilder ? true : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? true : (this.props.Login.isReleaseTestAttachment || this.props.Login.isReleaseTestComment) && !this.props.Login.loadEsignStateHandle ? true : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) && this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length === 1 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED ? true : this.props.Login.hideSave,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2139,\n          columnNumber: 29\n        }\n      }) : this.props.Login.loadEsignStateHandle ? /*#__PURE__*/React.createElement(EsignStateHandle, {\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        childDataChange: this.childDataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2146,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) ? /*#__PURE__*/React.createElement(ReleaseReportHistory, {\n        operation: this.props.Login.operation // designData={this.props.Login.designData || {}}\n        ,\n        inputParam: this.props.Login.inputParam,\n        dataResult: this.props.Login.masterData //    this.props.Login.dataResult || [] :\n        //   this.props.Login.dataResult || {}}\n        //onChangeToggle={this.onChangeToggle}\n        ,\n        settings: this.props.Login.settings,\n        viewDownloadFile: this.viewDownloadFile,\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2153,\n          columnNumber: 37\n        }\n      }) : this.props.Login.screenName === \"IDS_PATIENTSEARCH\" ? /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: this.props.Login.gridColumns || [],\n        filterData: this.props.Login.lstPatient,\n        onRowClick: this.handleKendoRowClick,\n        handleExecuteClick: this.handleExecuteClick,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2167,\n          columnNumber: 41\n        }\n      }) : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? /*#__PURE__*/React.createElement(VersionHistGrid, {\n        versionHistory: this.props.Login.masterData.versionHistory,\n        isExportExcelRequired: false,\n        dataState: this.state.versionHistoryDataState,\n        dataResult: process(this.props.Login.masterData && this.props.Login.masterData.versionHistory || [], this.state.versionHistoryDataState),\n        dataStateChange: this.versionHistoryDataStateChange,\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        viewDownloadFile: this.viewDownloadFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2182,\n          columnNumber: 45\n        }\n      }) : this.props.Login.isPatientDetails ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0 ? this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {},\n        SingleItem: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2195,\n          columnNumber: 53\n        }\n      }) : /*#__PURE__*/React.createElement(SampleGridTab, {\n        userInfo: this.props.Login.masterData.userInfo || {},\n        GridData: this.props.Login.masterData.ReleasedSampleDetails || [],\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.SingleItem) || [],\n        detailedFieldList: [],\n        primaryKeyField: \"npreregno\",\n        expandField: \"expanded\",\n        screenName: \"IDS_PATIENTINFO\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2204,\n          columnNumber: 53\n        }\n      }) : this.props.Login.isPatientReports && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid // key=\"nreleaseoutsourceattachcode\"\n      , {\n        primaryKeyField: \"nreleaseoutsourceattachcode\",\n        data: this.props.Login.masterData.PatientReports || [],\n        dataResult: process(this.props.Login.masterData.PatientReports && this.props.Login.masterData.PatientReports || [], this.state.outsourceFileDataState),\n        dataState: this.state.outsourceFileDataState,\n        isExportExcelRequired: false,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.fieldsForReleasedReportGrid,\n        selectedId: this.props.Login.selectedId,\n        pageable: true,\n        dataStateChange: this.outsourceFileDataStateChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'PatientReports',\n        viewDownloadFile: this.viewSelectedReport,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2218,\n          columnNumber: 53\n        }\n      }) : this.props.Login.isReleaseTestAttachment && this.props.Login.openModal ? /*#__PURE__*/React.createElement(ReleaseTestAttachment, {\n        ReleaseTestAttachmentDetails: this.props.Login.masterData.ReleaseTestAttachmentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestAttachment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_RELEASETESTATTACHMENT\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        isDataGrid: this.props.Login.isDataGrid,\n        selectedRecord: this.state.selectedRecord,\n        operation: this.props.Login.operation,\n        childDataChange: this.childDataChange,\n        deleteRecord: this.deleteReleaseTestAttachment,\n        dataState: this.state.testAttachmentDataState,\n        dataStateChange: this.testAttachmentDataStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2239,\n          columnNumber: 57\n        }\n      }) : this.props.Login.isAddReleaseTestAttachment ? /*#__PURE__*/React.createElement(AddReleaseTestAttachment, {\n        ReleaseTestAttachmentDetails: this.props.Login.masterData.ReleaseTestAttachmentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestAttachment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"ReleaseTestAttachment\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        isDataGrid: this.props.Login.isDataGrid,\n        selectedRecord: this.state.selectedRecord,\n        operation: this.props.Login.operation,\n        childDataChange: this.childDataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2265,\n          columnNumber: 61\n        }\n      }) : this.props.Login.isReleaseTestComment && this.props.Login.openModal ? /*#__PURE__*/React.createElement(ReleaseTestComment, {\n        ReleaseTestCommentDetails: this.props.Login.masterData.ReleaseTestCommentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestComment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_RELEASETESTCOMMENT\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        CommentSubType: this.props.Login.masterData.CommentSubType,\n        SampleTestComments: this.props.Login.masterData.SampleTestComments //ALPD-4948 Passed sampletestcomments to the releasetestcomments\n        ,\n        deleteRecord: this.deleteReleaseTestComment,\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testCommentDataStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2288,\n          columnNumber: 65\n        }\n      }) : this.props.Login.isAddReleaseTestComment ? /*#__PURE__*/React.createElement(AddReleaseTestComment, {\n        ReleaseTestCommentDetails: this.props.Login.masterData.ReleaseTestCommentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestComment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"ReleaseTestComment\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        CommentSubType: this.props.Login.masterData.CommentSubType,\n        selectedRecord: this.state.selectedRecord,\n        childDataChange: this.childDataChange,\n        operation: this.props.Login.operation,\n        SampleTestComments: this.props.Login.SampleTestComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2312,\n          columnNumber: 69\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"reportinforeleasecode\",\n        primaryKeyField: \"nreportinforeleasecode\",\n        data: this.props.Login.masterData.reportinforelease || [],\n        dataResult: process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState),\n        dataState: this.state.reportInfoDataState //dataResult={this.props.selectedWorklist || []}\n        //expandField=\"expanded\"\n        ,\n        isExportExcelRequired: false //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\n        ,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.feildsForGrid,\n        detailedFieldList: this.props.detailedFieldList,\n        editParam: editReportParam,\n        selectedId: this.props.Login.selectedId,\n        fetchRecord: this.props.fetchReportInfoReleaseById,\n        pageable: true,\n        dataStateChange: this.reportInfoDataChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'ReportComment' // actionIcons={[{\n        //     title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\n        //     controlname: \"faEye\",\n        //     objectName: \"ExceptionLogs\",\n        //     hidden: -1 === -1,\n        //    onClick: (viewSample) => this.props.viewSample(viewSample)\n        // }]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2336,\n          columnNumber: 73\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2369,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2370,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        name: \"sreportcomments\",\n        type: \"text\",\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        value: this.state.selectedRecord[\"sreportcomments\"] ? this.state.selectedRecord[\"sreportcomments\"] : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: 255,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2371,\n          columnNumber: 85\n        }\n      }))) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASECOMMENTS\"\n      }) ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2385,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2386,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_DECISIONTYPE\"\n        }),\n        isSearchable: true,\n        name: \"sreleasecomments\",\n        isDisabled: false,\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_DECISIONTYPE\"\n        }),\n        isMandatory: true,\n        isClearable: false,\n        options: this.props.Login.transactionstatuscomments || [],\n        value: this.state.selectedRecord[\"sreleasecommentscombo\"] ? this.state.selectedRecord[\"sreleasecommentscombo\"] : \"\" //defaultValue={props.selectedRecord[\"sstatusname\"]}\n        ,\n        onChange: event => this.onComboChange(event, \"sreleasecomments\"),\n        closeMenuOnSelect: true,\n        isMulti: false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2388,\n          columnNumber: 93\n        }\n      }), /*#__PURE__*/React.createElement(FormTextarea, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FINALDECISION\"\n        }),\n        name: \"sreleasecomments\",\n        type: \"text\",\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_FINALDECISION\"\n        }),\n        value: this.state.selectedRecord[\"sreleasecomments\"] ? this.state.selectedRecord[\"sreleasecomments\"] : \"\",\n        isMandatory: false,\n        required: true,\n        maxLength: 500 // readOnly={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory\n        //     && this.props.Login.masterData.selectedReleaseHistory.length === 1\n        //     && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED ? true : false\n        // }\n        ,\n        readOnly: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2404,\n          columnNumber: 89\n        }\n      }))) : this.props.Login.FilterQueryBuilder ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2425,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onComboChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: [],\n        filterData: this.props.Login.lstPatient || [] //onRowClick={this.handleKendoRowClick}\n        //handleExecuteClick={this.handleExecuteClick}\n        ,\n        userInfo: this.props.Login.userInfo,\n        static: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2426,\n          columnNumber: 93\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2442,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.handleExecuteClicks(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2443,\n          columnNumber: 97\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_EXECUTE\",\n        defaultMessage: \"Execute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2445,\n          columnNumber: 101\n        }\n      }))))) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && // //  this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\n      // //  (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\n      // this.props.Login.masterData.realReportTypeValue\n      // && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\n      //     this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\n      // //this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\n      this.props.Login.isDeletePopup !== true && //this.props.Login.isComboCheck !== true &&\n      //this.props.Login.isEditPopup === true &&\n      this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" &&\n      /*#__PURE__*/\n      // this.state.DynamicReportFilterTypeItem && this.state.DynamicReportFilterTypeItem.length>0 &&\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2474,\n          columnNumber: 97\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2475,\n          columnNumber: 101\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.openFilterQuery(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2476,\n          columnNumber: 105\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2477,\n          columnNumber: 109\n        }\n      }), \" \"), !this.props.Login.ismandatory && /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.handleExecuteClicks(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2481,\n          columnNumber: 109\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2482,\n          columnNumber: 113\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_CLEARFILTER\",\n        defaultMessage: \"Clear Filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2483,\n          columnNumber: 113\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2488,\n          columnNumber: 101\n        }\n      }, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && this.props.Login.masterData.realReportTypeValue && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES //  || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\n      //   this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE\n      && this.props.Login.isDeletePopup !== true && this.props.Login.isEditPopup !== true && this.props.Login.isComboCheck !== true && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nsectioncode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_SECTION\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.sectionList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] !== undefined ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\" : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true // isDisabled={this.props.Login.isEditPopup === true ? true : false}\n        ,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nsectioncode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2499,\n          columnNumber: 109\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2517,\n          columnNumber: 101\n        }\n      }, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_EDITSAMPLES\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }) && // ALPD-4053 (15-05-2024) Added this condition for issue in delete sample popup\n      this.props.Login.isEditPopup !== true && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nreporttemplatecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_REPORTTEMPLATE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.masterData.reportTemplateList || [],\n        value: this.state.selectedRecord[\"nreporttemplatecode\"] || \"\",\n        isMandatory: true,\n        isMulti: false,\n        isClearable: false,\n        isSearchable: true // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\n        ,\n        closeMenuOnSelect: true,\n        onChange: event => this.onComboChange(event, \"nreporttemplatecode\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2521,\n          columnNumber: 109\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2537,\n          columnNumber: 101\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2538,\n          columnNumber: 101\n        }\n      }, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_EDITSAMPLES\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }) && this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nneedreleaseformattoggle && this.props.Login.masterData.realReportTypeValue.nneedreleaseformattoggle === transactionStatus.YES && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" && /*#__PURE__*/React.createElement(CustomSwitch, {\n        name: 'nisarnowiserelease',\n        type: \"switch\",\n        label: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES ? this.props.intl.formatMessage({\n          id: \"IDS_ENABLEFORMULTISAMPLERELEASE\"\n        }) : this.props.intl.formatMessage({\n          id: \"IDS_ENABLEFORSINGLESAMPLERELEASE\"\n        }),\n        placeholder: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES ? this.props.intl.formatMessage({\n          id: \"IDS_ENABLEFORMULTISAMPLERELEASE\"\n        }) : this.props.intl.formatMessage({\n          id: \"IDS_ENABLEFORSINGLESAMPLERELEASE\"\n        }),\n        isMandatory: false,\n        required: false,\n        onChange: event => this.onInputOnChange(event) // defaultValue ={props.selectedRecord[item.controlName] === 3 ? true :false }\n        ,\n        checked: this.state.selectedRecord ? this.state.selectedRecord[\"nisarnowiserelease\"] === 3 ? true : false : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2543,\n          columnNumber: 109\n        }\n      })))) // <Col md={4}>\n      //     <FormSelectSearch\n      //         name={\"nprojecttypecode\"}\n      //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\n      //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n      //         options={this.props.Login.ProjectTypeList}\n      //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\n      //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\n      //         isMandatory={true}\n      //         isMulti={false}\n      //         isSearchable={true}\n      //         //  isDisabled={this.props.Login.isEditPopup === true ? true : false}\n      //         closeMenuOnSelect={true}\n      //         alphabeticalSort={true}\n      //         onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\n      //     />\n      // </Col>\n      , /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2660,\n          columnNumber: 89\n        }\n      }, this.props.Login.ReportmodalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n        modalShow: this.props.Login.ReportmodalShow,\n        closeModal: this.closeModalShow,\n        onSaveClick: this.onSaveModalClick,\n        validateEsign: this.validateEsign,\n        masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n        ,\n        updateStore: this.props.updateStore,\n        selectedRecord: this.state.selectedRecord || {},\n        modalTitle: this.props.Login.modalTitle,\n        modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n          operation: this.props.Login.operation,\n          onInputOnChange: this.onEsignInputOnChange,\n          inputParam: this.props.Login.inputParam,\n          selectedRecord: this.state.selectedRecord || {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2676,\n            columnNumber: 109\n          }\n        }) :\n        /*#__PURE__*/\n        //ALPD-4878-To show the add popup to get input of filter name,done by Dhanushya RI\n        React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2684,\n            columnNumber: 109\n          }\n        }, /*#__PURE__*/React.createElement(FormTextarea, {\n          label: this.props.intl.formatMessage({\n            id: this.props.Login.masterData.selectedComment.sreportfieldname\n          }),\n          name: \"sreportfieldvalue\",\n          type: \"text\",\n          onChange: this.onInputChange,\n          placeholder: this.props.intl.formatMessage({\n            id: this.props.Login.masterData.selectedComment.sreportfieldname\n          }),\n          value: this.state.selectedComment ? this.state.selectedComment.sreportfieldvalue : \"\",\n          isMandatory: true,\n          required: true,\n          maxLength: \"500\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2686,\n            columnNumber: 113\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2664,\n          columnNumber: 97\n        }\n      }) : \"\"), this.props.Login.isCorrectionNeed && this.props.Login.isCorrectionNeed ? /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"ntransactionresultcode\",\n        selectedId: this.props.Login.selectedId,\n        data: this.props.Login.masterData.ResultCorrection,\n        dataResult: process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.correctionDataState),\n        dataState: this.state.correctionDataState,\n        dataStateChange: this.correctionDataStateChange,\n        extractedColumnList: resultCorrectionColumnList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        methodUrl: \"Result\",\n        userInfo: this.props.Login.userInfo,\n        fetchRecord: this.props.fetchParameterById,\n        deleteRecord: this.deleteRecord //  reloadData={this.reloadData}\n        //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\n        ,\n        editParam: editParam //  deleteParam={deleteParam}\n        ,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        isActionRequired: true //  isToolBarRequired={true}\n        ,\n        pageable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2708,\n          columnNumber: 93\n        }\n      }) : this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENT\" && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" ? /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n        needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        data: this.state.data,\n        dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.slideOutDataState),\n        dataState: this.state.slideOutDataState // ALPD-4896, Added slideOutDataState for slideout datagrid\n        ,\n        dataStateChange: this.dataStateChangeSlideOut,\n        expandNextData: this.expandNextData,\n        checkFunction: this.checkFunction,\n        checkFunction1: this.checkFunction1,\n        expandFunc: this.expandFunc,\n        childDataResult: this.state.childDataResult,\n        subChildDataResult: this.state.subChildDataResult,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange,\n        childHandleExpandChange: this.childHandleExpandChange,\n        isCheckBoxRequired: true,\n        reloadData: this.reloadData,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        gridTop: '10px' // isActionRequired={true}\n        //   isToolBarRequired={true}\n        //  isExpandRequired={true}\n        //   isDownloadRequired={true}\n        ,\n        isCollapseRequired: true,\n        selectedId: this.props.Login.selectedId,\n        hasChild: true,\n        hasSubChild: true,\n        childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n        childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n        childMappingField: \"npreregno\",\n        subChildMappingField: \"ntransactionsamplecode\",\n        subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n        selectedsubcild: this.props.Login.selectedsubcild,\n        methodUrl: \"Release\",\n        headerSelectionChange: this.headerSelectionChange,\n        childHeaderSelectionChange: this.childHeaderSelectionChange,\n        childSelectAll: this.props.Login.childSelectAll,\n        childSelectionChange: this.childSelectionChange,\n        subChildSelectionChange: this.subChildSelectionChange,\n        subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n        subChildSelectAll: this.props.Login.subChildSelectAll,\n        selectionChange: this.selectionChange,\n        selectAll: this.props.Login.selectAll,\n        releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2737,\n          columnNumber: 97\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"reportinforeleasecode\",\n        primaryKeyField: \"nreportinforeleasecode\",\n        data: this.props.Login.masterData.reportinforelease || [],\n        dataResult: process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState),\n        dataState: this.state.reportInfoDataState //dataResult={this.props.selectedWorklist || []}\n        //expandField=\"expanded\"\n        ,\n        isExportExcelRequired: false //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\n        ,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.feildsForGrid,\n        detailedFieldList: this.props.detailedFieldList,\n        editParam: editParam,\n        fetchRecord: this.props.fetchReportInfoReleaseById,\n        pageable: true,\n        dataStateChange: this.reportInfoDataChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'ReportComment',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2799,\n          columnNumber: 101\n        }\n      }) : //     <DataGridWithMultipleGrid\n      //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\n      //     data={this.state.data}\n      //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\n      //     dataState={this.state.dataState}\n      //     dataStateChange={this.dataStateChange}\n      //     expandNextData={this.expandNextData}\n      //     checkFunction={this.checkFunction}\n      //     checkFunction1={this.checkFunction1}\n      //     expandFunc={this.expandFunc}\n      //     childDataResult={this.state.childDataResult}\n      //     subChildDataResult={this.state.subChildDataResult}\n      //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\n      //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\n      //     expandField=\"expanded\"\n      //     handleExpandChange={this.handleExpandChange}\n      //     childHandleExpandChange={this.childHandleExpandChange}\n      //     isCheckBoxRequired={true}\n      //     reloadData={this.reloadData}\n      //     controlMap={this.state.controlMap}\n      //     userRoleControlRights={this.state.userRoleControlRights}\n      //     inputParam={this.props.Login.inputParam}\n      //     userInfo={this.props.Login.userInfo}\n      //     pageable={true}\n      //     scrollable={'scrollable'}\n      //     gridHeight={'600px'}\n      //     gridTop={'10px'}\n      //    // isActionRequired={true}\n      //     //   isToolBarRequired={true}\n      //     //  isExpandRequired={true}\n      //     //   isDownloadRequired={true}\n      //     isCollapseRequired={true}\n      //     selectedId={this.props.Login.selectedId}\n      //     hasChild={true}\n      //     hasSubChild={true}\n      //     childList={\n      //         this.props.Login.masterData.searchedData2 ||\n      //         this.props.Login.masterData.ReleaseSubSample\n      //     }\n      //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\n      //     childMappingField={\"npreregno\"}\n      //     subChildMappingField={\"ntransactionsamplecode\"}\n      //     subChildList={\n      //         this.props.Login.masterData.searchedData3 ||\n      //         this.props.Login.masterData.ReleaseTest\n      //     }\n      //     selectedsubcild={this.props.Login.selectedsubcild}\n      //     methodUrl={\"Release\"}\n      //     headerSelectionChange={this.headerSelectionChange}\n      //     childHeaderSelectionChange={this.childHeaderSelectionChange}\n      //     childSelectAll={this.props.Login.childSelectAll}\n      //     childSelectionChange={this.childSelectionChange}\n      //     subChildSelectionChange={this.subChildSelectionChange}\n      //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\n      //     subChildSelectAll={this.props.Login.subChildSelectAll}\n      //     selectionChange={this.selectionChange}\n      //     selectAll={this.props.Login.selectAll}\n      //     releaseRecord={this.onSaveModalClick}\n      //    // viewDownloadFile={this.viewDownloadFile}\n      // />\n      \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2099,\n        columnNumber: 21\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.props.Login && this.props.Login.isFilterDetail ? this.onSaveModalFilterName : this.onSaveModalResultClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: this.props.Login && this.props.Login.isFilterDetail ? mandatoryFieldsFilter : \"\",\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onEsignInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {} //ATE234 -> ALPD-5436 Release & Report -> Edit Report Template Slide out issues.\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2996,\n          columnNumber: 33\n        }\n      }) : this.props.Login.modalTitle === this.props.intl.formatMessage({\n        id: \"IDS_SAVEFILTER\"\n      }) && this.props.Login && this.props.Login.isFilterDetail ? /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3003,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormTextarea, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILTERNAME\"\n        }),\n        name: \"sfiltername\" // type=\"text\"\n        ,\n        onChange: this.onInputOnChange,\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_FILTERNAME\"\n        }),\n        value: this.state.selectedRecord ? this.state.selectedRecord.sfiltername : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: \"50\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3004,\n          columnNumber: 41\n        }\n      })) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_REPORTTEMPLATE\"\n      }) ? /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nreporttemplatecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_REPORTTEMPLATE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.masterData.reportTemplateList || [],\n        value: this.state.selectedRecord[\"nreporttemplatecode\"] || \"\",\n        isMandatory: true,\n        isMulti: false,\n        isClearable: false,\n        isSearchable: true // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\n        ,\n        closeMenuOnSelect: true,\n        onChange: event => this.onComboChange(event, \"nreporttemplatecode\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3017,\n          columnNumber: 41\n        }\n      }) : this.state.selectedRecord.ReleaseParameter && this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\n        return /*#__PURE__*/React.createElement(ResultEntryForm, {\n          index: index,\n          ResultParameter: [...this.state.selectedRecord.ReleaseParameter],\n          predefinedValues: this.props.Login.masterData.PredefinedValues,\n          defaultPredefinedValues: this.props.Login.masterData.PredefinedValues,\n          gradeValues: this.props.Login.masterData.GradeValues || [],\n          selectedNumericData: this.props.Login.masterData.selectedNumericData,\n          selectedResultGrade: this.state.selectedRecord.selectedResultGrade || [],\n          paremterResultcode: this.props.Login.masterData.paremterResultcode || [],\n          parameterResults: parameterResult || [],\n          Login: this.props.Login,\n          handleClose: this.handleClose,\n          onSaveClick: this.onSaveClick,\n          onResultInputChange: this.onResultInputChange //onGradeEvent={this.onGradeEvent}\n          ,\n          getFormula: this.getFormula,\n          onDropTestFile: this.onDropTestFile,\n          onKeyPress: this.onKeyPress //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\n          ,\n          viewAdditionalInfo: this.viewAdditionalInfo,\n          needSubSample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          needdelete: true,\n          needmandatory: true,\n          ResultAccuracy: this.props.Login.masterData.ResultAccuracy || [],\n          Unit: this.props.Login.masterData.Unit || [],\n          formFields: this.props.Login.masterData.formFields || [] //intl={this.props.intl}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3034,\n            columnNumber: 52\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2984,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  queryBuilderfillingColumns(data) {\n    // const temparray1 = [\n    //(this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\n    //this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\n    ////{ \"idsName\": \"IDS_SECTION\", \"dataField\": \"s.nsectioncode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" },\n    // { \"idsName\": \"IDS_TEST\", \"dataField\": \"rt.ntestgrouptestcode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" }];\n    const temparray2 = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.RECORDTYPE] === 'static' ? \"(jsondata->>'\" + option[designProperties.PRIMARYKEY] + \"')::int\" : option[designProperties.LISTITEM] === 'combo' ? \"(jsondata->'\" + option[designProperties.VALUE] + \"'->>'\" + option[designProperties.PRIMARYKEY] + \"')::int\" : option[designProperties.LISTITEM] === 'Numeric' ? \"(jsondata->>'\" + option[designProperties.VALUE] + \"')::int\" : \"(jsondata->>'\" + option[designProperties.VALUE] + \"')\",\n        \"width\": \"200px\",\n        \"filterinputtype\": option[designProperties.LISTITEM]\n      };\n    });\n    const newArray = [...temparray2];\n    return newArray;\n  }\n\n  //     onSaveModalClick = () => {\n  //         //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\n  //         if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\n  //             this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\n  //         }\n  //         else {\n  //             let ntransactionsamplecode = \"\"\n  //             let ntransactiontestcode = \"\"\n  //             let npreregno = \"\"\n  //             if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n  //                 if (this.state.npreregno && this.state.npreregno.length > 0) {\n  //                     let sample = this.state.npreregno.filter((c, index) => {\n  //                         return this.state.npreregno.indexOf(c) === index;\n  //                     });\n  //                     let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n  //                         return this.state.ntransactionsamplecode.indexOf(c) === index;\n  //                     });\n  //                     let test = this.state.ntransactiontestcode.filter((c, index) => {\n  //                         return this.state.ntransactiontestcode.indexOf(c) === index;\n  //                     });\n  //                     npreregno = sample.map(x => x).join(\",\")\n  //                     ntransactionsamplecode = subsample.map(x => x).join(\",\")\n  //                     ntransactiontestcode = test.map(x => x).join(\",\")\n  //                     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\n  //                     const inputParam = {\n  //                         inputData: {\n  //                             change: this.props.Login.change,\n  //                             npreregno: String(npreregno),\n  //                             ntransactionsamplecode: ntransactionsamplecode,\n  //                             ntransactiontestcode: ntransactiontestcode,\n  //                             ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\n  //                                 && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\n  //                             url: this.props.Login.settings[24],\n  //                             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n  //                             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n  //                             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n  //                             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n  //                             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n  //                             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n  //                             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n  //                             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n  //                             dfrom: obj.fromDate,\n  //                             dto: obj.toDate,\n  //                             isAddPopup: false,\n  //                             isEditPopup: false,\n  //                             nflag: 2,\n  //                             userinfo: this.props.Login.userInfo,\n  //                             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\n  //                             doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\n  //                         },\n  //                         userinfo: this.props.Login.userInfo,\n  //                         methodUrl: \"Release\",\n  //                         classUrl: \"release\",\n  //                         operation: this.props.Login.operation\n  //                     }\n  //                     const masterData = this.props.Login.masterData;\n  //                     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n  //                         const updateInfo = {\n  //                             typeName: DEFAULT_RETURN,\n  //                             data: {\n  //                                 loadEsign: true,\n  //                                 screenData: { inputParam, masterData },\n  //                                 operation: this.props.Login.operation,\n  //                                 screenName: this.props.Login.screenName,\n  //                                 ncontrolcode:this.props.Login.ncontrolCode\n  //                             }\n  //                         }\n  //                         this.props.updateStore(updateInfo);\n  //                     }\n  //                     else {\n  //                         if (this.props.Login.isDeletePopup) {\n  //                             this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\n  //                         }\n  //                         else if (this.props.Login.isEditPopup) {\n  // <<<<<<< .mine\n  //                             this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\n  // ||||||| .r76787\n  //                             this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \n  // =======\n  //                             this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \n  // >>>>>>> .r76792\n  //                         }\n  //                         else {\n  //                             this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\n  //                         }\n  //                     }\n  //                 }\n  //                 else {\n  //                     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\n  //                 }\n  //             }\n  //             else {\n  //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\n  //             }\n  //         }\n  //     }\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      SampleGridItem,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      ReporttypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      //UserSectionList, TestList,\n      SingleItem,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      slideOutDataState,\n      // ALPD-4896, Added slideOutDataState for slideout datagrid\n      stateDynamicDesign,\n      checkedflag,\n      dataState,\n      selectedComment,\n      isInitialRender,\n      DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem\n    } = this.state;\n    let bool = false;\n    let reportFilePath = \"\";\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      reportFilePath = this.props.Login.masterData.ReportPDFFile;\n      bool = true;\n    } // else {\n    //     if (this.state.dataState === undefined) {\n    //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\n    //     }\n    //     //  const npreregno =  [];\n    //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n    //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    }\n\n    if (this.props.Login.isInitialRender !== previousProps.Login.isInitialRender) {\n      isInitialRender = this.props.Login.isInitialRender;\n      bool = true;\n    } // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n    //     npreregno = this.props.Login.npreregno\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false); // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\n      // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \n\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      ReporttypeList = ReporttypeListMap.get(\"OptionList\"); // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\n      //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\n\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\"); //  UserSectionList = UserSectionListMap.get(\"OptionList\");\n      //   TestList = TestListMap.get(\"OptionList\");\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.selectedComment !== previousProps.Login.masterData.selectedComment) {\n      selectedComment = this.props.Login.masterData.selectedComment;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      DynamicReportFilterTypeItem = dynamicColumn.samplefiltertypefields ? dynamicColumn.samplefiltertypefields : [];\n      DynamicDefaultStructureItem = dynamicColumn.defaultstructure ? dynamicColumn.defaultstructure : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.slideOutClose !== previousProps.Login.slideOutClose) {\n      bool = true;\n    }\n\n    if (this.props.Login.isClear !== previousProps.Login.isClear) {\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    } // ALPD-4896, Added below 2 conditions to handle pagination for both initial screen datagrid and slideout datagrid\n\n\n    if (this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length < dataState.skip + dataState.take) {\n      dataState = {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      };\n    }\n\n    if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length < slideOutDataState.skip + slideOutDataState.take) {\n      slideOutDataState = {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      };\n    }\n\n    if (bool) {\n      bool = false;\n      let allData = {\n        userRoleControlRights,\n        controlMap,\n        SampleGridItem,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        ReporttypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        selectedComment,\n        //UserSectionList, TestList,\n        SingleItem,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        stateDynamicDesign,\n        checkedflag,\n        isInitialRender,\n        data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n        dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], slideOutDataState),\n        // ALPD-4896, Added slideOutDataState for slideout datagrid\n        reportFilePath,\n        DynamicReportFilterTypeItem,\n        DynamicDefaultStructureItem,\n        dataState,\n        slideOutDataState //npreregno: this.state.npreregno || [], ntransactionsamplecode: this.state.ntransactionsamplecode || [],\n        //ntransactiontestcode: this.state.ntransactiontestcode || []\n\n      }; // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\n\n      if (this.props.Login.slideOutClose && this.props.Login.slideOutClose === true && this.props.Login.isClear !== false // && (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true\n      // || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true\n      // || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true)\n      ) {\n        this.setState({ ...allData,\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      } else {\n        this.setState(allData);\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.Login.openModal && (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle) && nextState.isInitialRender === false && nextState.selectedRecord !== this.state.selectedRecord) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getApprovedRecordsAsDraft,\n  getReleasedRegistrationType,\n  getReleasedRegistrationSubType,\n  getReleasedFilterStatus,\n  getReleasedApprovalVersion,\n  getReleasedFilterBasedTest,\n  getReleasedSample,\n  getApprovedSample,\n  //, generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\n  previewAndFinalReport,\n  getRemoveApprovedSample,\n  getDeleteApprovedSample,\n  UpdateApprovedSample,\n  getEditApprovedSample,\n  getSectionForSectionWise,\n  getreportcomments,\n  fetchReportInfoReleaseById,\n  UpdateReportComments,\n  generateReleasedReport,\n  getReleasedDataDetails,\n  getApprovedProjectByProjectType,\n  getApprovedProjectType,\n  getReportForPortal,\n  getResultCorrectionData,\n  //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\n  getSectionForSectionWise,\n  fetchParameterById,\n  updateCorrectionStatus,\n  validateEsignforRelease,\n  viewReportHistory,\n  viewAttachment,\n  versionHistory,\n  downloadVersionReport,\n  viewReleaseTestAttachment,\n  downloadHistory,\n  getPatientFilterExecuteData,\n  rearrangeDateFormatforKendoDataTool,\n  getPatientWiseSample,\n  preliminaryReport,\n  releaseReportHistory,\n  onSaveReleaseTestAttachment,\n  onDeleteReleaseTestAttachment,\n  onSaveReleaseTestComment,\n  onDeleteReleaseTestComment,\n  generatereport,\n  editReportTemplate,\n  SaveReportTemplate,\n  deleteSamples,\n  filterTransactionList,\n  validationforAppendSamples,\n  getReleaseFilter,\n  SaveReleaseComment,\n  openReleaseComments,\n  getReleaseSapInfoTOSDMS\n})(injectIntl(Release));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/release/Release.jsx"],"names":["React","Row","Col","Card","Nav","Button","ListGroup","toast","process","Utils","QbUtils","connect","injectIntl","FormattedMessage","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","getApprovedRecordsAsDraft","getReleasedRegistrationType","getReleasedRegistrationSubType","getReleasedFilterStatus","getReleasedApprovalVersion","getReleasedFilterBasedTest","getReleasedSample","generateReleasedReport","previewAndFinalReport","getRemoveApprovedSample","getDeleteApprovedSample","UpdateApprovedSample","getEditApprovedSample","getSectionForSectionWise","getreportcomments","fetchReportInfoReleaseById","UpdateReportComments","getApprovedSample","getReleasedDataDetails","getApprovedProjectByProjectType","getApprovedProjectType","getReportForPortal","getResultCorrectionData","fetchParameterById","updateCorrectionStatus","validateEsignforRelease","viewReportHistory","viewAttachment","versionHistory","downloadVersionReport","viewReleaseTestAttachment","downloadHistory","getPatientFilterExecuteData","rearrangeDateFormatforKendoDataTool","getPatientWiseSample","preliminaryReport","releaseReportHistory","onSaveReleaseTestAttachment","onDeleteReleaseTestAttachment","onSaveReleaseTestComment","onDeleteReleaseTestComment","generatereport","editReportTemplate","SaveReportTemplate","deleteSamples","filterTransactionList","validationforAppendSamples","getReleaseFilter","SaveReleaseComment","openReleaseComments","getReleaseSapInfoTOSDMS","ListMaster","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","showEsign","Lims_JSON_stringify","create_UUID","onSaveMandatoryValidation","checkFilterIsEmptyQueryBuilder","removeSpaceFromFirst","sortData","SampleType","designProperties","ResultEntry","reportCOAType","transactionStatus","attachmentType","DataGridWithMultipleGrid","DataGrid","Affix","DEFAULT_RETURN","BreadcrumbComponent","ReleaseFilter","SlideOutModal","Esign","EsignStateHandle","ContentPanel","ProductList","faEdit","faPlus","faExpandArrowsAlt","faEye","faInfoCircle","faPencilAlt","faRecycle","faStore","faTrash","faFilePen","faFileCode","faDownload","faFilePdf","faHistory","faFile","faComments","faPaperclip","faCalculator","faSync","faSearch","faTimes","faBolt","FormSelectSearch","FontAwesomeIcon","fileViewUrl","reportUrl","DocViewer","REPORTTYPE","SampleInfoView","FormInput","FormTextarea","ModalShow","ResultEntryForm","numberConversion","numericGrade","ReleaseTestAttachment","ReleaseTestComment","VersionHistGrid","FilterQueryBuilder","ConfirmMessage","ReleaseReportHistory","AddReleaseTestAttachment","AddReleaseTestComment","TransactionListMasterJsonView","SplitterLayout","ListWrapper","SampleGridTab","CustomSwitch","faTrashAlt","faThumbsUp","faChevronCircleDown","CustomPopover","mapStateToProps","state","Login","Release","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","dataStateChange","event","dataState","dataResult","data","dataStateChangeSlideOut","slideOutDataState","outsourceFileDataStateChange","outsourceFileDataState","reportInfoDataChange","reportInfoDataState","correctionDataStateChange","correctionDataState","versionHistoryDataStateChange","versionHistoryDataState","preliminaryHistoryDataStateChange","preliminaryHistoryDataState","testAttachmentDataStateChange","testAttachmentDataState","testCommentDataStateChange","testCommentDataState","sampleGridDataStateChange","sampleGridDataState","handleDateChange","dateName","dateValue","Date","dfrom","masterData","fromDate","userInfo","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","realSampleTypeList","realReportTypeList","realRegTypeList","realRegSubTypeList","realFilterStatusList","realApprovalVersionList","realDesignTemplateMappingList","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","DesignTemplateMappingValue","updateInfo","typeName","ApprovalVersionValue","napproveconfversioncode","napprovalversioncode","ndesigntemplatemappingcode","TestValue","ntestcode","ReportTypeValue","ncoareporttypecode","closeFilter","inputValues","realFromDate","realToDate","realSampleTypeValue","realReportTypeValue","realRegTypeValue","realRegSubTypeValue","realApprovalVersionValue","realDesignTemplateMappingValue","FilterStatusValue","realFilterStatusValue","ReportType","RegType","RegSubType","FilterStatus","ApprovalVersion","DesignTemplateMapping","showFilter","viewDownloadFile","filedata","ncoaparentcode","selectedReleaseHistory","length","ncoareporthistorycode","npreliminaryreporthistorycode","sprimarykeyname","action","doAction","openModal","ncontrolCode","screenName","intl","formatMessage","id","onFilterSubmit","searchRef","current","change","npreregno","saveFilterSubmit","sampleTypeValue","regTypeValue","regSubTypeValue","filterStatusValue","approvalConfigValue","reportTypeValue","designTemplateMappingValue","parseInt","ntransactionstatus","undefined","RELEASED","isneedsection","NO","napprovalconfigcode","napprovalconfigversioncode","nneedsubsample","nneedtemplatebasedflow","selectedRecord","info","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","isAddPopup","isEditPopup","isDeletePopup","checkFlag","viewReport","ReportPDFFile","showReport","warn","handleReportNoPageChange","e","skip","take","ConfirmDelete","DRAFT","CORRECTION","confirmMessage","confirm","DeleteSamples","controlId","toString","nreporttemplatecode","ncoaparenttranscode","spreregno","ntransactionsamplecode","stransactionsamplecode","ntransactiontestcode","stransactiontestcode","url","settings","nportalrequired","onKeyPress","index","paremterResultcode","keyCode","i","target","form","elements","focus","preventDefault","onResultInputChange","parameterResults","isParameterInitialRender","fields","onComboChange","label","nprojecttypecode","realUserSectionValue","UserSectionValue","realTestValue","nprojectmastercode","isPopup","sfilterstatus","SECTIONWISEMULTIPLESAMPLE","YES","filterquery","val","matchs","match","replaceAll","nsectioncode","isSectionCombo","handleExecuteClicks","isClear","filterQueryTreeStr","isMandatory","checkMandatoryFilter","awesomeConfig","isFilterEmpty","reportSectionCode","screenNameCopy","awesomeTree","onSaveModalFilterName","sfiltername","needExtraKeys","classUrl","methodUrl","operation","openFilterName","modalShow","isFilterDetail","modalTitle","clickFilterDetail","FromDate","ToDate","nfilternamecode","sampletypecode","regtypecode","regsubtypecode","coareporttypecode","approvalconfigurationcode","designtemplatcode","treeData","config","ParentItem","mandatoryList","treeDateList","childArray","children1","DynamicReportFilterTypeItem","map","x","push","childData","hasOwnProperty","properties","field","VALUE","uniqueSet","Set","uniqueArray","Array","from","openFilterQuery","closeModalShow","loadEsign","closeModal","ReportmodalShow","selectedComment","selectedId","generateid","syncaction","downloadReportId","previewReport","previewId","ncontrolcode","nprimarykey","nreporttypecode","COAPREVIEW","nprojectcode","ReleasedSampleDetails","isSMTLFlow","generateReport","newTabReport","reportRefFileName","auditAction","userRoleControlRights","nformcode","screenData","preliminaryId","COAPRELIMINARY","isPreliminaryReportNoGenerate","toastAlert","genericLabel","slanguagetypecode","downloadReleasedValidation","downloadId","ncoaParentCode","split","includes","resultArray","versionCheck","reportTemplateCheck","PRELIMINARYRELEASE","CorrectionComments","downloadReleasedFile","controlMap","has","get","sort","join","nclinicaltyperequired","noutsourcerequired","listStatus","COAREPORT","sreportcomments","nversionno","reportcomments","regenerateReleasedFile","regenerateId","sreportno","CorrectionStatus","correctionId","onSaveModalResultClick","saveType","sreporttemplatename","ReleaseParameter","editResultId","formData","FormData","neditable","releaseParameters","sresult","resultData","results","editable","nparametertypecode","ncalculatedresult","sfinal","parseFloat","nroundingdigits","sunitname","unitcode","sresultaccuracyname","resultaccuracycode","nresultaccuracycode","JSON","stringify","nuserrole","nusercode","ntransactionresultcode","sresultcomment","salertmessage","additionalInfo","additionalInfoUidata","ntestgrouptestpredefcode","ngradecode","nunitcode","trim","RESULTSTATUS_FIO","splittedFileName","name","fileExtension","uniquefilename","ssystemfilename","nfilesize","size","append","Object","values","loading","isFileupload","displayName","onSaveModalClick","seletedRecord","ReleaseSample","sample","filter","c","indexOf","subsample","test","singleSampleInRelease","nisarnowiserelease","nismultipleproject","nprojectspecrequired","sendToPortal","isPortal","allPreregno","reportHistory","patientInfo","isPatientDetails","hideSave","reportHistoryInfo","releaseTestAttachmentData","actionName","reloadData","isCorrectionNeed","isPatientReports","openModalTitle","isReleaseTestAttachment","isReleaseTestComment","isAddReleaseTestAttachment","isAddReleaseTestComment","isInitialRender","loadEsignStateHandle","slideOutClose","editReportTemplateId","closeDocModal","onInputOnChange","type","checked","onChangeAwesomeQueryBuilder","immutableTree","sqlFormat","getTree","onComboChangeAwesomeQueryBuilder","handleExecuteClick","inputparam","component","seletedFilterComponent","handleKendoRowClick","patientinfo","dataItem","PARTIAL","spatientid","onInputChange","coaFileInfo","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","password","selectionChange","checkedflag","syntheticEvent","selected","preregno","ncoahistorycode","childHeaderSelectionChange","dataItems","subsamplecode","ReleaseSubSample","subChildHeaderSelectionChange","transactionsamplecode","recievedPreRegNo","recievedTransactionSampleCode","recievedTransactionTestCode","ReleaseTest","nPreRegNo","nTransactionSampleCode","nTransactionTestCode","sendData","sentData","collectData","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","y1","recievedData","transactiontestcode","returnData","viewSelectedReport","releasedcoareport","childDataChange","onMandatoryCheck","mandatoryFields","CLINICALTYPE","reportTemplateList","onSaveTestAttachment","onSaveTestComment","formRef","acceptedFiles","sfilename","isFileEdited","fileArray","isArray","forEach","file","fileName","tempData","stestsynonym","susername","suserrolename","slinkname","sdescription","nneedreport","sheader","nsortorder","selectedReleaseTestAttachment","nreleasetestattachmentcode","FTP","sformname","smodulename","slanguagename","deleteReleaseTestAttachment","deleteParam","releasetestattachment","getSapInfoTOSDMS","sreleasecomments","commentArray","comment","selectedReleaseTestComment","nreleasetestcommentcode","ncommentsubtypecode","nsampletestcommentscode","scomments","scommentsubtype","spredefinedname","nsamplecommentscode","ReleaseComments","createReleaseComment","onSaveReleaseComments","deleteReleaseTestComment","releasetestcomment","createRef","masterStatus","error","childDataResult","Map","SampletypeList","ProjecttypeList","ProjectMasterList","SectionList","ReporttypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","searchedData","SampleGridItem","combinedSearchField","stateDynamicDesign","splitChangeWidthPercentage","searchFieldList","getDerivedStateFromProps","errorCode","gridfillingColumn","temparray","option","LABEL","render","ReleaseHistory","editReportParam","primaryKeyField","feildsForGrid","fieldsForReleasedReportGrid","mandatoryCommentsFields","mandatoryFieldsFilter","resultCorrectionColumnList","filePath","filetype","reportFilePath","filterParam","inputListName","selectedObject","fetchUrl","changeList","fecthInputObject","isSearch","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","scoareporttypename","releaseId","viewreportId","sendtoportalId","editId","deleteId","patientinfoId","ResultCorrectionId","editcommentsId","releaseHistoryId","downloadVersionHist","reportHistoryId","releaseTestAttachmentId","releaseTestCommentId","releaseReportHistoryId","deleteSampleId","filterNameId","filterDetailId","releaseCommentId","editParam","ReleaseMasterDataParam","ApprovedModalParam","DynamicDefaultStructureItem","extractedColumnList","queryBuilderfillingColumns","RemoveModalParam","PATIENTWISE","patientwise","EditModalParam","jsonParam","primaryKeyName","ResultCorrectionParam","reportSubFields","FilterName","status","transactionStatusSelectionList","openFilter","title","controlname","objectName","hidden","onClick","ConfigVersionList","onDesignTemplateChange","actionMethod","searchedData1","expandNextData","subChildDataResult","DynamicGridItem","DynamicTestGridItem","ReleasedSubSampleDetails","DynamicSubSampleGridItem","ReleasedTestDetails","selectedsubcild","kendoSkip","kendoTake","handlePageChange","gridColumns","lstPatient","SingleItem","PatientReports","ReleaseTestAttachmentDetails","isDataGrid","ReleaseTestCommentDetails","CommentSubType","SampleTestComments","reportinforelease","detailedFieldList","transactionstatuscomments","ismandatory","isComboCheck","sectionList","nneedreleaseformattoggle","onEsignInputOnChange","sreportfieldname","sreportfieldvalue","ResultCorrection","deleteRecord","handleExpandChange","childHandleExpandChange","searchedData2","searchedData3","childSelectAll","subChildSelectAll","selectAll","parameterResult","PredefinedValues","GradeValues","selectedNumericData","selectedResultGrade","handleClose","onSaveClick","getFormula","onDropTestFile","viewAdditionalInfo","ResultAccuracy","Unit","formFields","temparray2","RECORDTYPE","PRIMARYKEY","LISTITEM","newArray","componentDidUpdate","previousProps","bool","SampletypeListMap","ReporttypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","FilterStatusListMap","ConfigVersionListMap","TestListMap","Test","DynamicDesign","dynamicColumn","parse","jsondata","samplegriditem","testListFields","releasetestfields","subsamplelistitem","sampledisplayfields","samplefiltertypefields","defaultstructure","DesignTemplateMappingMap","allData","shouldComponentUpdate","nextProps","nextState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Nav, Button, ListGroup } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport {\r\n    Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    filterColumnData,\r\n    getApprovedRecordsAsDraft,\r\n    getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample,\r\n    generateReleasedReport,\r\n    previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    getSectionForSectionWise, getreportcomments, fetchReportInfoReleaseById, UpdateReportComments,\r\n    getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData,\r\n    fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory, downloadVersionReport,\r\n    viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool, getPatientWiseSample,\r\n    preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment, onDeleteReleaseTestComment,\r\n    generatereport, editReportTemplate, SaveReportTemplate, deleteSamples, filterTransactionList,\r\n    validationforAppendSamples, getReleaseFilter, SaveReleaseComment, openReleaseComments,getReleaseSapInfoTOSDMS\r\n} from '../../actions';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport {\r\n    getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, showEsign,\r\n    Lims_JSON_stringify, create_UUID, onSaveMandatoryValidation, checkFilterIsEmptyQueryBuilder,\r\n    removeSpaceFromFirst, sortData\r\n} from '../../components/CommonScript';\r\nimport { SampleType, designProperties, ResultEntry, reportCOAType, transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { Affix } from 'rsuite';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReleaseFilter from './ReleaseFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ReactComponent as SaveIcon } from '../../assets/image/save_icon.svg';\r\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\r\nimport { ContentPanel, ProductList } from '../product/product.styled';\r\nimport {\r\n    faEdit, faPlus, faExpandArrowsAlt, faEye, faInfoCircle, faPencilAlt, faRecycle, faStore,\r\n    faTrash, faFilePen, faFileCode, faDownload, faFilePdf, faHistory, faFile, faComments,\r\n    faPaperclip, faCalculator, faSync, faSearch, faTimes,\r\n    faBolt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { ReactComponent as Generate } from '../../assets/image/generate-certificate.svg'\r\nimport { ReactComponent as ReGenerate } from '../../assets/image/regenerate-icon.svg'\r\nimport { ReactComponent as ResultCorrection } from '../../assets/image/resultcorrection.svg'\r\nimport { ReactComponent as Correction } from '../../assets/image/correctionrelease.svg'\r\nimport { ReactComponent as Comment } from '../../assets/image/comment-edit-svgrepo-com.svg'\r\nimport { ReactComponent as DownloadCertificate } from '../../assets/image/Download Certificate.svg';\r\nimport { ReactComponent as PreliminaryReport } from '../../assets/image/preliminary_report.svg';\r\nimport { ReactComponent as ReportHistory } from '../../assets/image/reporthistory.svg';\r\nimport { ReactComponent as ReleaseTestAttachmentIcon } from '../../assets/image/releasetestattachment.svg';\r\nimport { ReactComponent as ReleaseTestCommentIcon } from '../../assets/image/releasetestcomment.svg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fileViewUrl, reportUrl } from '../../rsapi';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\nimport { REPORTTYPE } from \"../../components/Enumeration\";\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\r\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\r\nimport ReleaseTestAttachment from './ReleaseTestAttachment';\r\nimport ReleaseTestComment from './ReleaseTestComment';\r\nimport VersionHistGrid from './VersionHistGrid';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport ReleaseReportHistory from './ReleaseReportHistory';\r\nimport { ReactComponent as Preview } from '../../assets/image/Preview.svg';\r\nimport { ReactComponent as TestAttachment } from '../../assets/image/Test Attachment.svg';\r\nimport AddReleaseTestAttachment from './AddReleaseTestAttachment';\r\nimport AddReleaseTestComment from './AddReleaseTestComment';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport SampleGridTab from '../registration/SampleGridTab';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { faTrashAlt, faThumbsUp, faChevronCircleDown } from '@fortawesome/free-solid-svg-icons';//,faUserTimes, faTrash\r\nimport CustomPopover from '../../components/customPopover';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Release extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const outsourceFileDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const slideOutDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        }\t// ALPD-4896, Added slideOutDataState for slideout datagrid\r\n        const reportInfoDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const correctionDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const versionHistoryDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const preliminaryHistoryDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const testAttachmentDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const testCommentDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const sampleGridDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        }\r\n\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            outsourceFileDataState: outsourceFileDataState,\r\n            slideOutDataState: slideOutDataState,   \t// ALPD-4896, Added slideOutDataState for slideout datagrid\r\n            reportInfoDataState: reportInfoDataState,\r\n            correctionDataState: correctionDataState,\r\n            versionHistoryDataState: versionHistoryDataState,\r\n            preliminaryHistoryDataState: preliminaryHistoryDataState,\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            ProjecttypeList: [],\r\n            ProjectMasterList: [],\r\n            SectionList: [],\r\n            ReporttypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField: [],\r\n            npreregno: [],\r\n            ntransactiontestcode: [],\r\n            ntransactionsamplecode: [],\r\n            stateDynamicDesign: [],\r\n            sidebarview: false,\r\n            testAttachmentDataState: testAttachmentDataState,\r\n            testCommentDataState: testCommentDataState,\r\n            sampleGridDataState: sampleGridDataState,\r\n            splitChangeWidthPercentage: 28.6,\r\n            skip: 0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3])\r\n            // ,\r\n            // nmultiplesampleinsinglerelease: this.props.Login.masterData.realReportTypeValue && \r\n            //     this.props.Login.masterData.realReportTypeValue.nmultiplesampleinsinglerelease\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // expandNextData(y) {\r\n    //     let change = []\r\n    //     let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n    //     let data = x.data.every(item => {\r\n    //         return item.expanded === true\r\n    //     })\r\n    //     if (data === true) {\r\n    //         change = true\r\n    //     } else {\r\n    //         change = false\r\n    //     }\r\n    //     this.expandFunc({ change: change })\r\n\r\n    // }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n\r\n    dataStateChangeSlideOut = (event) => {\r\n        this.setState({ slideOutDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\t// ALPD-4896, Added dataStateChangeSlideOut to handle pagination inside slideout datagrid\r\n\r\n    outsourceFileDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ outsourceFileDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    reportInfoDataChange = (event) => {\r\n\r\n\r\n        this.setState({ reportInfoDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    correctionDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ correctionDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    versionHistoryDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ versionHistoryDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    preliminaryHistoryDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ preliminaryHistoryDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    testAttachmentDataStateChange = (event) => {\r\n        this.setState({ testAttachmentDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n    testCommentDataStateChange = (event) => {\r\n        this.setState({ testCommentDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({ sampleGridDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        else if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        else if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo,\r\n                realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleasedApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    };\r\n                    this.props.getReleasedRegistrationType(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    }\r\n                    this.props.getReleasedRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleasedApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n\r\n\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                // const inputParamData = {\r\n                //     dfrom: obj.fromDate,\r\n                //     dto: obj.toDate,\r\n                //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     masterData: { ...this.props.Login.masterData },\r\n                //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     ndesigntemplatemappingcode: comboData.value,\r\n                //     DesignTemplateMappingValue: comboData.item\r\n                // }\r\n                // this.props.getReleaseFilterBasedTest(inputParamData)\r\n\r\n                let masterData = { ...this.props.Login.masterData, DesignTemplateMappingValue: comboData.item }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleasedFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            //Don't Remove\r\n            // else if (fieldName === 'nsectioncode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n            //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             nsectioncode: comboData.value === -1 ? null\r\n            //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //                 : comboData.value,\r\n            //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n            //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            //         }\r\n\r\n            //         this.props.getReleasedFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n            // else if (fieldName === 'njobstatuscode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n            //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: { masterData }\r\n            //         }\r\n            //         this.props.updateStore(updateInfo);\r\n            //     }\r\n            // }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ncoareporttypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\r\n                    let masterData = { ...this.props.Login.masterData, ReportTypeValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            // else {\r\n            //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n            //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n            //         //  const updateInfo = {\r\n            //         //     typeName: DEFAULT_RETURN,\r\n            //         //    data: { masterData }\r\n            //         // }\r\n\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: comboData.value,\r\n            //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n            //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n            //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n            //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n            //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n\r\n            //         }\r\n\r\n            //         this.props.getReleaseFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n    closeFilter = () => {\r\n        let inputValues = {\r\n            fromDate: this.props.Login.masterData.realFromDate || new Date(),//this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date() ,\r\n            toDate: this.props.Login.masterData.realToDate || new Date(),//this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() ,\r\n            SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            ReportTypeValue: this.props.Login.masterData.realReportTypeValue || {},\r\n            RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\r\n            RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\r\n            DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\r\n            FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\r\n            SampleType: this.props.Login.masterData.realSampleTypeList || [],\r\n            ReportType: this.props.Login.masterData.realReportTypeList || [],\r\n            RegType: this.props.Login.masterData.realRegTypeList || [],\r\n            RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\r\n            FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\r\n            ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\r\n            DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...inputValues } },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    viewDownloadFile = (filedata) => {\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                // change: this.props.Login.change,\r\n                // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                    && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                ncoareporthistorycode: filedata.inputData.ncoareporthistorycode ? filedata.inputData.ncoareporthistorycode : -1,\r\n                npreliminaryreporthistorycode: filedata.inputData.npreliminaryreporthistorycode ? filedata.inputData.npreliminaryreporthistorycode : -1,\r\n                //ntransactionstatus: String(transactionStatus.RELEASED),\r\n                //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                //nflag: 2,\r\n                userinfo: this.props.Login.userInfo,\r\n                //sreportcomments: \"\",\r\n                //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                //nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                action: \"DownloadVersionhistory\",\r\n                doAction: \"download\",\r\n                // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                openModal: true,\r\n                userInfo: this.props.Login.userInfo,\r\n                ncontrolCode: filedata.ncontrolCode\r\n            },\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n\r\n        }\r\n        this.props.downloadVersionReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n    }\r\n\r\n    // downloadPreliminaryHistory = (filedata) => {\r\n\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             // change: this.props.Login.change,\r\n    //             // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //             //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //             //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //             npreliminaryreporthistorycode:filedata.inputData.npreliminaryreporthistorycode,\r\n    //             //ntransactionstatus: String(transactionStatus.RELEASED),\r\n    //             //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n    //             // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //             // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             //nflag: 2,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             //sreportcomments: \"\",\r\n    //             //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             //nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //             sprimarykeyname: \"npreregno\",\r\n    //             action: \"DownloadPreliminaryHistory\",\r\n    //             doAction: \"download\",\r\n    //            // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             openModal:true,\r\n    //             userInfo: this.props.Login.userInfo,\r\n    //             ncontrolCode:filedata.ncontrolCode\r\n    //         },\r\n    //       //  screenName: this.props.intl.formatMessage({ id: \"IDS_VERSIONHISTORY\" })\r\n\r\n    //     }\r\n    //     this.props.downloadPreliminaryHistory(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n    // }\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let realSampleTypeList = this.props.Login.masterData.SampleType || [];\r\n        let realReportTypeList = this.props.Login.masterData.ReportType || [];\r\n        let realRegTypeList = this.props.Login.masterData.RegType || [];\r\n        let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\r\n        let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\r\n        let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\r\n        let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            //  realUserSectionValue, realTestValue,\r\n            realDesignTemplateMappingValue, realReportTypeList, realRegSubTypeList, realRegTypeList,\r\n            realReportTypeValue, realSampleTypeList, realFilterStatusList, realApprovalVersionList, realDesignTemplateMappingList\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            saveFilterSubmit: true, //ALPD-4878 to insert the filter data's in filterdetail table when submit the filter,done by Dhanushya RI\r\n            sampleTypeValue: this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue,\r\n            regTypeValue: this.props.Login.masterData && this.props.Login.masterData.RegTypeValue,\r\n            regSubTypeValue: this.props.Login.masterData && this.props.Login.masterData.RegSubTypeValue,\r\n            filterStatusValue: this.props.Login.masterData && this.props.Login.masterData.FilterStatusValue,\r\n            approvalConfigValue: this.props.Login.masterData && this.props.Login.masterData.ApprovalVersionValue,\r\n            reportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            designTemplateMappingValue: this.props.Login.masterData && this.props.Login.masterData.DesignTemplateMappingValue,\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData\r\n            }\r\n            this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                isAddPopup: false,\r\n                isEditPopup: this.props.Login.isEditPopup,\r\n                isDeletePopup: this.props.Login.isDeletePopup,\r\n                checkFlag: \"1\",\r\n                count: count,\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    viewReport = () => {\r\n        if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTNOTGENERATED\" }));\r\n        }\r\n    }\r\n\r\n    handleReportNoPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n    getApprovedSample = (inputParam, ncontrolCode) => {\r\n        if (inputParam.masterData && inputParam.masterData.realReportTypeValue) {\r\n            this.props.getApprovedSample(inputParam, ncontrolCode);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    // This methods can use for multi select delete samples if required\r\n    // ConfirmDelete = (inputParam) => {\r\n    //     const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory : [];\r\n    //     const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [] ;\r\n    //     const reportTemplateCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nreporttemplatecode\"]))] : [] ;\r\n    //     if(resultArray.length === 1){\r\n    //             if(resultArray[0] === transactionStatus.DRAFT || resultArray[0] === transactionStatus.CORRECTION){\r\n    //                 this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n    //                 this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n    //                 () => this.DeleteSamples(\"delete\", controlId));\r\n    //             } else {\r\n    //                 toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n    //             }\r\n    //     } else if (resultArray.length === 0) {\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSTODELETECANCEL\" }));\r\n    //     } else {\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSWITHSAMESTATUS\" }));\r\n    //     } \r\n    // }\r\n    // DeleteSamples = (action, controlId) => {\r\n    //     // const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory : [];\r\n    //     // const coaParentCode = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ncoaparentcode\"]))] : [] ;\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.ncoaparentcode).join(\",\") : \"-1\",\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             ncontrolCode: controlId,\r\n    //             action: action,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             isAddPopup: false,\r\n    //             isEditPopup: false,\r\n    //             isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n    //             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             nreporttemplatecode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory[0].nreporttemplatecode : -1,\r\n    //             ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n    //             npreregno: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\r\n    //             ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.stransactionsamplecode).join(\",\") : \"-1\",\r\n    //             ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.stransactiontestcode).join(\",\") : \"-1\",\r\n    //             nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false\r\n    //         }\r\n    //     }\r\n    //     this.props.deleteSamples(inputParam, this.props.Login.masterData)\r\n    // }\r\n\r\n    ConfirmDelete = (inputParam) => {\r\n        if (inputParam.deleteSamples.ntransactionstatus === transactionStatus.DRAFT || inputParam.deleteSamples.ntransactionstatus === transactionStatus.CORRECTION) {\r\n            this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                () => this.DeleteSamples(\"delete\", inputParam.controlId, inputParam));\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n\r\n    DeleteSamples = (action, controlId, data) => {\r\n        // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n        // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n        // ALPD-4091 (16-05-2024) Changed RegSubTypeValue to realRegSubTypeValue\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                ncoaparentcode: data.deleteSamples.ncoaparentcode.toString(),\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolCode: controlId,\r\n                action: action,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                napprovalversioncode: (this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) || -1,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                isAddPopup: false,\r\n                isEditPopup: false,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                nreporttemplatecode: data.deleteSamples.nreporttemplatecode,\r\n                ncoaparenttranscode: data.deleteSamples.ntransactionstatus,\r\n                npreregno: data.deleteSamples.spreregno,\r\n                ntransactionsamplecode: data.deleteSamples.stransactionsamplecode,\r\n                ntransactiontestcode: data.deleteSamples.stransactiontestcode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                url: this.props.Login.settings[24],\r\n                nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired\r\n            },\r\n            searchRef: this.searchRef   // ALPD-4229 (30-05-2024) Added searchRef to clear search text\r\n        }\r\n        this.props.deleteSamples(inputParam, this.props.Login.masterData)\r\n    }\r\n\r\n    render() {\r\n        // ALPD-4229 (12-06-2024) Added sortData to sort the ReleaseHistory in all scenarios\r\n        this.props.Login.masterData && this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0\r\n            && sortData(this.props.Login.masterData.ReleaseHistory, \"\", 'ncoaparentcode');\r\n        const editReportParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"nreportinforeleasecode\", operation: \"update\",//selectedId:,\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: -1, masterData: this.props.Login.masterData, selectedId: this.props.Login.selectedId\r\n        };\r\n        this.feildsForGrid =\r\n            [\r\n                // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },  \r\n                { \"idsName\": \"IDS_SCREEN\", \"dataField\": \"testname\", \"width\": \"100px\" },\r\n                { \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sreportfieldname\", \"width\": \"100px\" },\r\n                { \"idsName\": \"IDS_VALUE\", \"dataField\": \"sreportfieldvalue\", \"width\": \"100px\" }\r\n            ];\r\n\r\n        this.fieldsForReleasedReportGrid =\r\n            [\r\n                { \"idsName\": \"IDS_RELEASENO\", \"dataField\": \"sreleaseno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_VERSIONNO\", \"dataField\": \"nversionno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_ORDERID\", \"dataField\": \"sexternalorderid\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDSITE\", \"dataField\": \"ssitename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDDATE\", \"dataField\": \"sreleasedate\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDUSER\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n            ];\r\n\r\n        const mandatoryFields = [{ \"mandatory\": true, \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sreportcomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            //  { \"mandatory\": true, \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n            // { \"mandatory\": true, \"idsName\": \"IDS_INTERFACETYPE\", \"dataField\": \"ninterfacetypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        ];\r\n        const mandatoryCommentsFields = [{ \"mandatory\": true, \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"sreleasecomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n        ];\r\n        const mandatoryFieldsFilter = [{ \"mandatory\": true, \"idsName\": \"IDS_FILTERNAME\", \"dataField\": \"sfiltername\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }]\r\n\r\n        let resultCorrectionColumnList = [{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" }];\r\n        {\r\n            this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample &&\r\n                resultCorrectionColumnList.push(\r\n                    { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\" }\r\n                )\r\n        }\r\n        resultCorrectionColumnList.push(\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"150px\", \"fieldType\": \"gradeColumn\" },\r\n            //Commented  by sonia ALPD-4275 for Unit Name NA Showing\r\n            //{ \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTACCURACY\", \"dataField\": \"sresultaccuracyname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_LOWA\", \"dataField\": \"smina\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_LOWB\", \"dataField\": \"sminb\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_HIGHA\", \"dataField\": \"smaxa\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_HIGHB\", \"dataField\": \"smaxb\", \"width\": \"150px\" },\r\n            /* { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"sminlod\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"smaxlod\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"sminloq\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"smaxloq\", \"width\": \"150px\" }*/\r\n        )\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let filePath = \"\";\r\n        if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\r\n            filePath = reportUrl();\r\n        } else {\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        // let userStatusCSS = \"\";\r\n        // let activeIconCSS = \"fa fa-check\";\r\n        // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\r\n        //     userStatusCSS = \"outline-secondary\";\r\n        //     activeIconCSS = \"\";\r\n        // }\r\n        // else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\r\n        //     userStatusCSS = \"outline-success\";\r\n        // }\r\n        // else {\r\n        //     userStatusCSS = \"outline-Final\";\r\n        // }\r\n        const filterParam = {\r\n            inputListName: \"ReleaseHistory\",\r\n            selectedObject: \"selectedReleaseHistory\",\r\n            primaryKeyField: \"ncoaparentcode\",\r\n            fetchUrl: \"release/getReleaseHistory\",\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList,\r\n            changeList: [],  // ALPD-4229 (30-05-2024) Removed changeList value to make search filter work correctly\r\n            fecthInputObject: {\r\n                isSearch: true, userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: this.searchFieldList,\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined)\r\n                    || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REPORTTYPE\",\r\n                \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" :\r\n                    this.props.Login.masterData.ReportTypeValue ?\r\n                        this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\")\r\n            && this.state.controlMap.get('AddSamples').ncontrolcode;\r\n\r\n        const preliminaryId =\r\n            this.state.controlMap.has(\"PreliminaryReport\") &&\r\n            this.state.controlMap.get(\"PreliminaryReport\").ncontrolcode;\r\n        const previewId =\r\n            this.state.controlMap.has(\"PreviewFinalReport\") &&\r\n            this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\r\n        const downloadId =\r\n            this.state.controlMap.has(\"ReleaseReportGeneration\") &&\r\n            this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        const regenerateId =\r\n            this.state.controlMap.has(\"RegenerateRelease\") &&\r\n            this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\r\n        const viewreportId =\r\n            this.state.controlMap.has(\"ViewReportRelease\") &&\r\n            this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\r\n        const sendtoportalId =\r\n            this.state.controlMap.has(\"SendToPortal\") &&\r\n            this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\r\n        const editId =\r\n            this.state.controlMap.has(\"AppendSamples\") &&\r\n            this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\r\n        const deleteId =\r\n            this.state.controlMap.has(\"RemoveSamples\") &&\r\n            this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\r\n        const patientinfoId =\r\n            this.state.controlMap.has(\"PatientInfo\") &&\r\n            this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\r\n        const ResultCorrectionId =\r\n            this.state.controlMap.has(\"ResultCorrection\") &&\r\n            this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\r\n        const editResultId =\r\n            this.state.controlMap.has(\"EditResult\") &&\r\n            this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        const editcommentsId =\r\n            this.state.controlMap.has(\"EditComment\") &&\r\n            this.state.controlMap.get(\"EditComment\").ncontrolcode;\r\n        const correctionId =\r\n            this.state.controlMap.has(\"Correction\") &&\r\n            this.state.controlMap.get(\"Correction\").ncontrolcode;\r\n        const releaseHistoryId =\r\n            this.state.controlMap.has(\"ReleaseHistory\") &&\r\n            this.state.controlMap.get(\"ReleaseHistory\").ncontrolcode;\r\n        const downloadVersionHist =\r\n            this.state.controlMap.has(\"DownloadReleaseVersion\") &&\r\n            this.state.controlMap.get(\"DownloadReleaseVersion\").ncontrolcode;\r\n        const downloadReportId =\r\n            this.state.controlMap.has(\"DownloadReport\") &&\r\n            this.state.controlMap.get(\"DownloadReport\").ncontrolcode;\r\n        const reportHistoryId =\r\n            this.state.controlMap.has(\"ReportHistory\") &&\r\n            this.state.controlMap.get(\"ReportHistory\").ncontrolcode;\r\n        const releaseTestAttachmentId =\r\n            this.state.controlMap.has(\"ReleaseTestAttachment\") &&\r\n            this.state.controlMap.get(\"ReleaseTestAttachment\").ncontrolcode;\r\n        const releaseTestCommentId =\r\n            this.state.controlMap.has(\"ReleaseTestComment\") &&\r\n            this.state.controlMap.get(\"ReleaseTestComment\").ncontrolcode;\r\n        const releaseReportHistoryId =\r\n            this.state.controlMap.has(\"ReleaseReportHistory\") &&\r\n            this.state.controlMap.get(\"ReleaseReportHistory\").ncontrolcode;\r\n        const generateid =\r\n            this.state.controlMap.has(\"Generate\") &&\r\n            this.state.controlMap.get(\"Generate\").ncontrolcode;\r\n        const editReportTemplateId =\r\n            this.state.controlMap.has(\"EditReportTemplate\") &&\r\n            this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\r\n\r\n        const deleteSampleId = this.props.Login.inputParam && this.state.controlMap.has(\"DeleteSamples\")\r\n            && this.state.controlMap.get('DeleteSamples').ncontrolcode;\r\n\r\n        const filterNameId = this.state.controlMap.has(\"FilterName\") ? this.state.controlMap.get(\"FilterName\").ncontrolcode : -1;\r\n\r\n        const filterDetailId = this.state.controlMap.has(\"FilterDetail\") ? this.state.controlMap.get(\"FilterDetail\").ncontrolcode : -1;\r\n\r\n        const releaseCommentId = this.props.Login.inputParam && this.state.controlMap.has(\"ReportComment\")\r\n            && this.state.controlMap.get('ReportComment').ncontrolcode;\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"ntransactionresultcode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editResultId, masterData: this.props.Login.masterData\r\n        };\r\n\r\n        const ReleaseMasterDataParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].npreregno) || \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n\r\n        const ApprovedModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            Login: this.props.Login,\r\n            // selectedRecord: { ...this.props.Login.selectedRecord },\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'isAddPopup': true,\r\n                'isPopup': true,\r\n                'ncoareporttype': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                // 'ncoareporttypecode': 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                // \"nsectioncode\" : this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                \"nsectioncode\": -1,\r\n\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })\r\n\r\n\r\n            },\r\n            DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\r\n            DynamicDefaultStructureItem: this.state.DynamicDefaultStructureItem,\r\n            extractedColumnList: this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\r\n        };\r\n        const RemoveModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\r\n                ncontrolCode: deleteId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" }),\r\n                spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\r\n                patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\r\n\r\n            }\r\n        };\r\n        const EditModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'nneededit': true,\r\n                'isPopup': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\r\n                ncontrolCode: editId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }),\r\n                nsectioncode: this.props.Login.masterData && this.props.Login.masterData.reportSectionCode || -1,\r\n                spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\r\n                patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false,\r\n                // nismultipleproject: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nismultipleproject) || transactionStatus.NO,\r\n\r\n            },\r\n            DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\r\n            DynamicDefaultStructureItem: this.state.DynamicDefaultStructureItem,\r\n            extractedColumnList: this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\r\n        };\r\n\r\n        const jsonParam = {\r\n            screenName: \"IDS_RELEASE\", operation: \"update\", primaryKeyName: \"ncoaparentcode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, selectedReleaseHistory: this.props.Login.masterData.selectedReleaseHistory\r\n        };\r\n\r\n        const ResultCorrectionParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                ncontrolCode: ResultCorrectionId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })\r\n\r\n\r\n\r\n            }\r\n        };\r\n\r\n\r\n        const reportSubFields = [{\r\n            [designProperties.VALUE]: \"susername\",\r\n            [designProperties.LABEL]: \"IDS_USERNAME\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sgenerateddate\",\r\n            [designProperties.LABEL]: \"IDS_GENERATEDDATE\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sversionno\",\r\n            [designProperties.LABEL]: \"IDS_VERSIONNO\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sreporttemplatename\",\r\n            [designProperties.LABEL]: \"IDS_REPORTTEMPLATE\"\r\n        }\r\n        ];\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap new-breadcrumb toolbar-top-wrap mtop-4 screen-height-window\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <div className='fixed-buttons'>\r\n                        <Nav.Link    //ALPD-4878 Add filter name and filter details button,done by Dhanushya RI\r\n                            className=\"btn btn-circle outline-grey ml-2\"\r\n                            data-tip={this.props.intl.formatMessage({ id: \"IDS_SAVEFILTER\" })}\r\n                            // data-for=\"tooltip-common-wrap\"\r\n                            hidden={this.state.userRoleControlRights.indexOf(filterNameId) === -1}\r\n                            onClick={() => this.openFilterName(filterNameId)}>\r\n                            {/* <DownloadReportbutton width='20px' height='20px' className='custom_icons' /> */}\r\n                            <SaveIcon width='20px' height='20px' className='custom_icons' />\r\n                        </Nav.Link>\r\n                        {\r\n                            this.state.userRoleControlRights.indexOf(filterDetailId) !== -1 &&\r\n                                this.props.Login.masterData && this.props.Login.masterData.FilterName !== undefined && this.props.Login.masterData.FilterName.length > 0 ?\r\n                                <CustomPopover\r\n                                    icon={faBolt}\r\n                                    nav={true}\r\n                                    data={this.props.Login.masterData.FilterName}\r\n                                    btnClasses=\"btn-circle btn_grey ml-2 spacesremovefromaction\"\r\n                                    //dynamicButton={(value) => this.props.getAcceptTestTestWise(value,testGetParam,this.props.Login.masterData.MJSelectedTest,this.props.Login.userInfo)}\r\n                                    dynamicButton={(value) => this.clickFilterDetail(value)}\r\n                                    textKey=\"sfiltername\"\r\n                                    iconKey=\"nfiltercode\"\r\n                                >\r\n                                </CustomPopover>\r\n                                : \"\"\r\n                        }\r\n                    </div>\r\n                    <Row noGutters={true}>\r\n                        {/* <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory}\r\n                                getMasterDetail={(ReleaseSample) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...ReleaseMasterDataParam,\r\n                                            ...ReleaseSample\r\n                                        }\r\n                                    )\r\n                                }\r\n                                selectedMaster={this.props.Login.masterData.selectedReleaseHistory}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                mainField=\"sreportno\"\r\n                                firstField=\"susername\"\r\n                                secondField=\"sgenerateddate\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={releaseId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getApprovedSample(ApprovedModalParam, releaseId)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                callCloseFunction={true}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            //   UserSection={this.state.UserSectionList || []}\r\n                                            //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            //   Test={this.state.TestList || []}\r\n                                            //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col> */}\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                            <SplitterLayout\r\n                                borderColor=\"#999\"\r\n                                primaryIndex={1}\r\n                                percentage={true}\r\n                                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                primaryMinSize={30}\r\n                                secondaryMinSize={20}\r\n                            >\r\n                                <TransactionListMasterJsonView\r\n                                    // listMasterShowIcon={1}\r\n                                    clickIconGroup={true}\r\n                                    splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                    masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory || []}\r\n                                    selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory : undefined}\r\n                                    // selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory !== undefined ? [this.props.Login.masterData.selectedReleaseHistory] : undefined}\r\n                                    primaryKeyField=\"ncoaparentcode\"\r\n                                    filterColumnData={this.props.filterTransactionList}\r\n                                    getMasterDetail={(ReleaseSample, status) =>\r\n                                        this.props.getReleasedDataDetails(\r\n\r\n                                            {\r\n                                                ...ReleaseMasterDataParam,\r\n                                                ...ReleaseSample\r\n                                            }, status\r\n                                        )}\r\n                                    // getMasterDetail={this.props.getReleasedDataDetails}\r\n                                    // inputParam={{\r\n                                    // ...this.state.subSampleGetParam,\r\n                                    // searchTestRef: this.searchTestRef,\r\n                                    // searchSubSampleRef: this.searchSubSampleRef,\r\n                                    // testskip: this.state.testskip,\r\n                                    // subsampleskip: this.state.subsampleskip,\r\n                                    // resultDataState: this.state.resultDataState,\r\n                                    // activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                                    // }}\r\n                                    selectionList={this.props.Login.masterData && this.props.Login.masterData.transactionStatusSelectionList && this.props.Login.masterData.transactionStatusSelectionList.length > 0 ? this.props.Login.masterData.transactionStatusSelectionList : []}\r\n                                    // hideQuickSearch={true}\r\n                                    selectionColorField=\"scolorhexcode\"\r\n                                    mainField={\"sreportno\"}\r\n                                    showStatusLink={true}\r\n                                    showStatusName={true}\r\n                                    statusFieldName=\"stransdisplaystatus\"\r\n                                    statusField=\"ntransactionstatus\"\r\n                                    selectedListName=\"selectedReleaseHistory\"\r\n                                    searchListName=\"searchedData\"\r\n                                    searchRef={this.searchRef}\r\n                                    objectName=\"releaseno\"\r\n                                    listName=\"IDS_RELEASENO\"\r\n                                    selectionField=\"ntransactionstatus\"\r\n                                    selectionFieldName=\"stransdisplaystatus\"\r\n                                    showFilter={this.props.Login.showFilter}\r\n                                    openFilter={this.openFilter}\r\n                                    closeFilter={this.closeFilter}\r\n                                    onFilterSubmit={this.onFilterSubmit}\r\n                                    subFields={reportSubFields}\r\n                                    moreField={[]}\r\n                                    needMultiSelect={this.props.Login.settings && this.props.Login.settings[50] ? parseInt(this.props.Login.settings[50]) === transactionStatus.YES ? true : false : false}\r\n                                    showStatusBlink={true}\r\n                                    callCloseFunction={true}\r\n                                    filterParam={filterParam}\r\n                                    subFieldsLabel={true}\r\n                                    handlePageChange={this.handleReportNoPageChange}\r\n                                    skip={this.state.skip}\r\n                                    take={this.state.take}\r\n                                    childTabsKey={[\"selectedReleaseHistory\", \"releaseno\", \"ReleasedSampleDetails\", \"ReleasedSubSampleDetails\", \"ReleasedTestDetails\"]}\r\n                                    actionIcons={[\r\n                                        {\r\n                                            title: this.props.intl.formatMessage({ id: \"IDS_EDITREPORTTEMPLATE\" }),\r\n                                            controlname: \"faPencilAlt\",\r\n                                            objectName: \"editReportTemplate\",\r\n                                            hidden: this.state.userRoleControlRights.indexOf(editReportTemplateId) === -1,\r\n                                            onClick: this.editReportTemplate,\r\n                                            inputData: {\r\n                                                primaryKeyName: \"ncoaparentcode\",\r\n                                                operation: \"update\",\r\n                                                masterData: this.props.Login.masterData,\r\n                                                userInfo: this.props.Login.userInfo\r\n                                            },\r\n                                        },\r\n                                        {\r\n                                            title: this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                            controlname: \"faTrashAlt\",\r\n                                            objectName: \"deleteSamples\",\r\n                                            hidden: this.state.userRoleControlRights.indexOf(deleteSampleId) === -1,\r\n                                            onClick: this.ConfirmDelete,\r\n                                            inputData: {\r\n                                                primaryKeyName: \"ncoaparentcode\",\r\n                                                operation: \"delete\",\r\n                                                masterData: this.props.Login.masterData,\r\n                                                userInfo: this.props.Login.userInfo,\r\n                                                controlId: deleteSampleId\r\n                                            },\r\n                                        },\r\n                                        {\r\n                                            title: this.props.intl.formatMessage({ id: \"IDS_DECISION\" }),\r\n                                            controlname: \"faComments\",\r\n                                            objectName: \"createReleaseComment\",\r\n                                            hidden: this.state.userRoleControlRights.indexOf(releaseCommentId) === -1,\r\n                                            onClick: this.ReleaseComments,\r\n                                            inputData: {\r\n                                                primaryKeyName: \"ncoaparentcode\",\r\n                                                operation: \"create\",\r\n                                                masterData: this.props.Login.masterData,\r\n                                                userInfo: this.props.Login.userInfo,\r\n                                                controlId: releaseCommentId\r\n                                            }\r\n                                        }\r\n                                    ]}\r\n                                    needFilter={true}\r\n                                    commonActions={\r\n                                        <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                                hidden={this.state.userRoleControlRights.indexOf(releaseId) === -1}\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                // data-for=\"tooltip_list_wrap\"\r\n                                                onClick={() => this.getApprovedSample(ApprovedModalParam, releaseId)}>\r\n                                                <FontAwesomeIcon icon={faPlus} />\r\n                                            </Button>\r\n                                            <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                //   data-for=\"tooltip-common-wrap\"\r\n                                                onClick={this.reloadData} >\r\n                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                            </Button>\r\n                                        </ProductList>\r\n                                    }\r\n                                    filterComponent={[\r\n                                        {\r\n                                            \"Sample Filter\": <ReleaseFilter\r\n                                                SampleType={this.state.SampletypeList || []}\r\n                                                SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                                ReportType={this.state.ReporttypeList || []}\r\n                                                ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                                RegType={this.state.RegistrationTypeList || []}\r\n                                                RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                                RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                                ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                                DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                                DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                                //   UserSection={this.state.UserSectionList || []}\r\n                                                //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                                //   Test={this.state.TestList || []}\r\n                                                //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                                FilterStatus={this.state.FilterStatusList || []}\r\n                                                FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                                fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                onFilterComboChange={this.onFilterComboChange}\r\n                                                handleDateChange={this.handleDateChange}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                                DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                            />\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                                {/* <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?\r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i>\r\n                                    }\r\n                                </div>\r\n                            </div> */}\r\n                                {/* {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ? */}\r\n                                {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ?\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            <Card.Header>\r\n                                                {/* <Card.Title className=\"product-title-main\"> */}\r\n\r\n                                                {/* {this.props.Login.masterData && this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno !== 0 ?\r\n                                                    this.props.intl.formatMessage({ id: \"IDS_VERSIONNUMBER\" }) + \" : \" + this.props.Login.masterData.nversionno : \"\"} */}\r\n\r\n                                                {/* {( this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno )\r\n                                                    +  (this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno!==0 ?'-'+ this.props.Login.masterData.nversionno: \"\") } */}\r\n                                                {/* </Card.Title> */}\r\n                                                <Card.Subtitle>\r\n                                                    {/* <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}> */}\r\n                                                    {/* <i className={activeIconCSS}></i> */}\r\n                                                    {/* {this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus}\r\n                                                        </span> */}\r\n\r\n                                                    {/* </h2> */}\r\n\r\n\r\n\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n\r\n\r\n                                                    {\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SAPINFO\" })} data-place=\"left\"\r\n                                                                hidden={false}\r\n                                                                onClick={() => this.getSapInfoTOSDMS()}>\r\n                                                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(patientinfoId) === -1}\r\n                                                                onClick={() => this.patientInfo()}>\r\n                                                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                        \r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}\r\n                                                            onClick={() => this.previewReport(previewId)}\r\n\r\n                                                        >\r\n                                                            \r\n                                                            <Preview />\r\n\r\n                                                        </Nav.Link> */}\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                                                                this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                            data-place=\"left\"\r\n                                                            // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(preliminaryId) === -1}\r\n                                                            onClick={() => this.preliminaryReport(preliminaryId)}\r\n\r\n                                                        >\r\n                                                            <PreliminaryReport className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {/* {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) && */}\r\n                                                        {\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease\r\n                                                                && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.NO) &&\r\n                                                            // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\r\n                                                            //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\r\n                                                            //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                //Modified by sonia on 11-06-2024 for JIRA ID:4122 Sample Count Validation\r\n                                                                onClick={() => this.props.validationforAppendSamples(EditModalParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEdit} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                        {/* } */}\r\n                                                        {/* {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) && */}\r\n                                                        {\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease\r\n                                                                && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.NO) &&\r\n                                                            // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\r\n                                                            //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\r\n                                                            //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                onClick={() => this.props.getRemoveApprovedSample(RemoveModalParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrash} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                        {/* } */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => {\r\n                                                                this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                                    this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\r\n                                                                    ? this.CorrectionComments(downloadId) : this.downloadReleasedFile(downloadId)\r\n                                                            }}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => { this.downloadReleasedValidation(downloadId) }}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {\r\n                                                            // this.props.Login.masterData.realSampleTypeValue && (this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \r\n                                                            // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                            // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\r\n                                                            // <Nav.Link\r\n                                                            //     className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //     data-tip={this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })} data-place=\"left\"\r\n                                                            //     hidden={this.state.userRoleControlRights.indexOf(correctionId) === -1}\r\n                                                            //     onClick={() => this.CorrectionStatus(correctionId)}\r\n                                                            // >\r\n                                                            //     <Correction className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            // </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {\r\n                                                            // (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \r\n                                                            // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                            // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1}\r\n                                                                onClick={() => this.props.getResultCorrectionData(ResultCorrectionParam)}\r\n                                                            >\r\n                                                                <ResultCorrection className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {/* <Nav.Link\r\n\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(viewreportId) === -1}\r\n                                                            onClick={() => this.viewReport()}>\r\n                                                            <FontAwesomeIcon icon={faExpandArrowsAlt} />\r\n                                                        </Nav.Link> */}\r\n                                                        {/* {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}\r\n                                                                onClick={() => this.sendToPortal(sendtoportalId)}>\r\n                                                                <FontAwesomeIcon icon={faStore} />\r\n                                                            </Nav.Link>\r\n                                                        } */}\r\n\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE &&\r\n                                                            this.props.Login.masterData.realSampleTypeValue.noutsourcerequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(reportHistoryId) === -1}\r\n                                                                onClick={() => this.reportHistoryInfo()}>\r\n                                                                <ReportHistory width='20px' height='20px' className='custon_icons' />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {/* <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(releaseHistoryId) === -1}\r\n                                                                onClick={() => this.reportHistory(releaseHistoryId)}\r\n                                                          \r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faHistory} />                                                                                                                \r\n                                                            </Nav.Link> */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}\r\n                                                            onClick={() => this.regenerateReleasedFile(regenerateId)}>\r\n                                                            <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseReportHistoryId) === -1}\r\n                                                            onClick={() => this.releaseReportHistory(releaseReportHistoryId)}\r\n                                                        >\r\n                                                            {/* <Correction className=\"custom_icons\" width=\"20\" height=\"20\" /> */}\r\n                                                            <FontAwesomeIcon icon={faHistory} />\r\n                                                        </Nav.Link>\r\n\r\n                                                        {\r\n                                                            // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                            //  this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT ?\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTCORRECTION\" })} data-place=\"left\"\r\n                                                                //  data-for=\"tooltip-common-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editcommentsId) === -1}\r\n                                                                onClick={() => this.reportcomments('IDS_REPORTCORRECTION')}>\r\n                                                                <Comment className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            </Nav.Link>\r\n                                                            // : \"\"\r\n                                                        }\r\n\r\n                                                        {/* \r\n                                                        {this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue \r\n                                                        && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE\r\n                                                        && this.props.Login.settings && (parseInt(this.props.Login.settings[29]) === transactionStatus.YES) &&  \r\n                                                        */}\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseTestAttachmentId) === -1}\r\n                                                            onClick={() => this.releaseTestAttachmentData(\"IDS_RELEASETESTATTACHMENT\")}>\r\n                                                            {/* <FontAwesomeIcon icon={faFile} /> */}\r\n                                                            <ReleaseTestAttachmentIcon width='20px' height='20px' className='custom_icons' />\r\n                                                        </Nav.Link>\r\n                                                        {/* } */}\r\n\r\n                                                        {/* \r\n                                                        {this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue \r\n                                                        && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE\r\n                                                        && this.props.Login.settings && (parseInt(this.props.Login.settings[29]) === transactionStatus.YES) &&  \r\n                                                        */}\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseTestCommentId) === -1}\r\n                                                            onClick={() => this.releaseTestAttachmentData(\"IDS_RELEASETESTCOMMENT\")}>\r\n                                                            {/* <FontAwesomeIcon icon={faComments} /> */}\r\n                                                            <ReleaseTestCommentIcon width='20px' height='20px' className='custom_icons' />\r\n                                                        </Nav.Link>\r\n                                                        {/* } */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadReportId) === -1}\r\n                                                            onClick={() => this.downloadHistory(downloadReportId)}\r\n                                                        >\r\n                                                            <DownloadCertificate />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id:\"IDS_SYNC\"})} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(generateid) === -1}\r\n                                                            onClick={() => this.generatereport(generateid)}\r\n                                                           >   <FontAwesomeIcon icon={faSync} /> \r\n                                                             </Nav.Link>  */}\r\n\r\n                                                        <CustomPopover\r\n                                                            nav={true}\r\n                                                            data={\r\n                                                                <>\r\n                                                                    <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}>\r\n                                                                        <Nav.Link\r\n                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                                            onClick={() => this.previewReport(previewId)}>\r\n                                                                            {/* <FontAwesomeIcon icon={faEye} /> */}\r\n                                                                            <Preview /> {this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })}\r\n                                                                        </Nav.Link>\r\n                                                                    </ListGroup.Item>\r\n                                                                    <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(preliminaryId) === -1}>\r\n                                                                        <Nav.Link\r\n                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                            data-tip={this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ?\r\n                                                                                this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                                : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                                            data-place=\"left\"\r\n                                                                            // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\r\n                                                                            onClick={() => this.preliminaryReport(preliminaryId)}>\r\n                                                                            <PreliminaryReport className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ?\r\n                                                                                this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                                : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                                        </Nav.Link>\r\n                                                                    </ListGroup.Item>\r\n                                                                    <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}>\r\n                                                                        <Nav.Link\r\n                                                                            // className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })}\r\n                                                                            data-place=\"left\"\r\n                                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                                            onClick={() => { this.downloadReleasedValidation(downloadId) }}>\r\n                                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })}\r\n                                                                        </Nav.Link>\r\n                                                                    </ListGroup.Item>\r\n                                                                    <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(correctionId) === -1}>\r\n                                                                        <Nav.Link\r\n                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })} data-place=\"left\"\r\n                                                                            onClick={() => this.CorrectionStatus(correctionId)}>\r\n                                                                            <Correction className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })}\r\n                                                                        </Nav.Link>\r\n                                                                    </ListGroup.Item>\r\n                                                                    <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}>\r\n                                                                        <Nav.Link\r\n                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                                            //  data-for=\"tooltip-common-wrap\"                                                                                    \r\n                                                                            onClick={() => this.regenerateReleasedFile(regenerateId)}>\r\n                                                                            <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })}\r\n                                                                        </Nav.Link>\r\n                                                                    </ListGroup.Item>\r\n                                                                    <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(downloadReportId) === -1}>\r\n                                                                        <Nav.Link\r\n                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })} data-place=\"left\"\r\n                                                                            onClick={() => this.downloadHistory(downloadReportId)}>\r\n                                                                            <DownloadCertificate /> {this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })}\r\n                                                                            {/* <FontAwesomeIcon icon={faDownload} /> */}\r\n                                                                        </Nav.Link>\r\n                                                                    </ListGroup.Item>\r\n                                                                    <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(generateid) === -1}>\r\n                                                                        <Nav.Link\r\n                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PORTALSYNC\" })} data-place=\"left\"\r\n                                                                            onClick={() => this.generatereport(generateid)}>\r\n                                                                            <FontAwesomeIcon icon={faSync} className='mr-2' /> {this.props.intl.formatMessage({ id: \"IDS_PORTALSYNC\" })}\r\n                                                                        </Nav.Link>\r\n                                                                    </ListGroup.Item>\r\n                                                                    {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n\r\n                                                                        <ListGroup.Item as=\"li\" className=\"btn_list \" hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}>\r\n                                                                            <Nav.Link\r\n                                                                                className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                                onClick={() => this.sendToPortal(sendtoportalId)}>\r\n                                                                                <FontAwesomeIcon icon={faStore} /> {this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                            </Nav.Link>\r\n                                                                        </ListGroup.Item>\r\n                                                                    }\r\n                                                                </>\r\n                                                            }\r\n                                                            Button={false}\r\n                                                            hideIcon={true}\r\n                                                            btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                            textKey=\"value\"\r\n                                                            icon={faChevronCircleDown}\r\n                                                            // toolTip={this.props.intl.formatMessage({ id: \"IDS_CONFIGURE\" })}\r\n                                                            dynamicButton={(value) => this.actionMethod(value)}\r\n                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        />\r\n\r\n                                                    </ProductList>\r\n                                                    {/* </div> */}\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body className=\"form-static-wrap\">\r\n                                                {/* <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REPORTNO\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                            this.props.Login.masterData.selectedReleaseHistory.sreportno}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row> */}\r\n                                                <DataGridWithMultipleGrid\r\n                                                    needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                    data={this.state.data}\r\n                                                    dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState)}\r\n                                                    dataState={this.state.dataState}\r\n                                                    dataStateChange={this.dataStateChange}\r\n                                                    expandNextData={this.expandNextData}\r\n                                                    checkFunction={this.checkFunction}\r\n                                                    checkFunction1={this.checkFunction1}\r\n                                                    expandFunc={this.expandFunc}\r\n                                                    //expandData={this.expandData}\r\n                                                    childDataResult={this.state.childDataResult}\r\n                                                    subChildDataResult={this.state.subChildDataResult}\r\n                                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                    subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                                    expandField=\"expanded\"\r\n                                                    reloadData={this.reloadData}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    pageable={true}\r\n                                                    scrollable={'scrollable'}\r\n                                                    gridHeight={'525px'}\r\n                                                    gridTop={'10px'}\r\n                                                    //   isActionRequired={true}\r\n                                                    //   isToolBarRequired={true}\r\n                                                    //  isExpandRequired={true}\r\n                                                    //   isDownloadRequired={true}\r\n                                                    isCheckBoxRequired={false}  // ALPD-5247    Changed from true to false by Vishakh due to checkbox hide\r\n                                                    isCollapseRequired={true}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    hasChild={true}\r\n                                                    hasSubChild={true}\r\n                                                    childList={\r\n                                                        this.props.Login.masterData.ReleasedSubSampleDetails\r\n                                                    }\r\n                                                    childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                    childMappingField={\"npreregno\"}\r\n                                                    subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                    // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                                    subChildList={\r\n                                                        this.props.Login.masterData.ReleasedTestDetails\r\n                                                    }\r\n                                                    selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                    methodUrl={\"Release\"}\r\n                                                    headerSelectionChange={this.headerSelectionChange}\r\n                                                    childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                    childSelectionChange={this.childSelectionChange}\r\n                                                    subChildSelectionChange={this.subChildSelectionChange}\r\n                                                    subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                    selectionChange={this.selectionChange}\r\n                                                    releaseRecord={this.onSaveModalClick}\r\n                                                // viewDownloadFile={this.viewDownloadFile}\r\n                                                />\r\n                                            </Card.Body>\r\n                                        </Card>\r\n                                    </ContentPanel>\r\n                                    : \"\"\r\n                                }\r\n                            </SplitterLayout>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div >\r\n                {\r\n                    this.state.showReport ?\r\n                        <DocViewer file={filePath}\r\n                            showReport={this.state.showReport}\r\n                            closeModal={this.closeDocModal}\r\n                            type={\"pdf\"}>\r\n                        </DocViewer>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal || this.state.openModal}\r\n                        size={(this.props.Login.loadEsign || this.props.Login.loadEsignStateHandle) ? \"lg\" : \"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        mandatoryFields={\r\n                            this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" })\r\n                                ? mandatoryFields : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" }) ? mandatoryCommentsFields : \"\"}\r\n                        screenName={\r\n                            this.props.Login.screenName ===this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" }) ? this.props.intl.formatMessage({ id: \"IDS_DECISION\" }) :\r\n                            this.props.Login.loadEsignStateHandle ? this.props.intl.formatMessage({ id: \"IDS_ESIGN\" }) : this.props.Login.isPatientDetails ?\r\n                            this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })\r\n                            : this.props.Login.isPatientReports ? this.props.intl.formatMessage({ id: \"IDS_REPORTHISTORY\" })\r\n                                : this.props.Login.isReleaseTestAttachment ? this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" })\r\n                                    : this.props.Login.isReleaseTestComment ? this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" })\r\n                                        : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n                                            : this.props.Login.screenName}\r\n                        onSaveClick={\r\n                            this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ? this.downloadReleasedFile :\r\n                                this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" }) ? this.onSaveReleaseComments :\r\n                                    (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle ||\r\n                                        this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })) ? this.onMandatoryCheck :\r\n                                        this.onSaveModalClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        //noSave={this.props.Login.openModalTitle=='versionhistory' ? true : false}\r\n                        hideSave={this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) ||\r\n                            this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" ? true : this.props.Login.FilterQueryBuilder\r\n                            ? true : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY'\r\n                                ? true : ((this.props.Login.isReleaseTestAttachment || this.props.Login.isReleaseTestComment)\r\n                                    && !this.props.Login.loadEsignStateHandle) ? true\r\n                                    : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" })\r\n                                        && this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory\r\n                                        && this.props.Login.masterData.selectedReleaseHistory.length === 1\r\n                                        && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED ? true\r\n                                        : this.props.Login.hideSave}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.Login.loadEsignStateHandle ?\r\n                                <EsignStateHandle\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    childDataChange={this.childDataChange}\r\n                                />\r\n                                : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) ?\r\n                                    <ReleaseReportHistory\r\n                                        operation={this.props.Login.operation}\r\n                                        // designData={this.props.Login.designData || {}}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        dataResult={this.props.Login.masterData}\r\n                                        //    this.props.Login.dataResult || [] :\r\n                                        //   this.props.Login.dataResult || {}}\r\n                                        //onChangeToggle={this.onChangeToggle}\r\n                                        settings={this.props.Login.settings}\r\n                                        viewDownloadFile={this.viewDownloadFile}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights} />\r\n                                    : this.props.Login.screenName === \"IDS_PATIENTSEARCH\" ?\r\n                                        <FilterQueryBuilder\r\n                                            fields={this.props.Login.fields || {}}\r\n                                            onChange={this.onChangeAwesomeQueryBuilder}\r\n                                            tree={this.props.Login.awesomeTree}\r\n                                            config={this.props.Login.awesomeConfig}\r\n                                            skip={this.props.Login.kendoSkip}\r\n                                            take={this.props.Login.kendoTake}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            gridColumns={this.props.Login.gridColumns || []}\r\n                                            filterData={this.props.Login.lstPatient}\r\n                                            onRowClick={this.handleKendoRowClick}\r\n                                            handleExecuteClick={this.handleExecuteClick}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                        />\r\n                                        : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ?\r\n                                            <VersionHistGrid\r\n                                                versionHistory={this.props.Login.masterData.versionHistory}\r\n                                                isExportExcelRequired={false}\r\n                                                dataState={this.state.versionHistoryDataState}\r\n                                                dataResult={process(this.props.Login.masterData && this.props.Login.masterData.versionHistory || [], this.state.versionHistoryDataState)}\r\n                                                dataStateChange={this.versionHistoryDataStateChange}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                viewDownloadFile={this.viewDownloadFile}\r\n                                            />\r\n                                            : this.props.Login.isPatientDetails ?\r\n                                                this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length === 1 ?\r\n                                                    <SampleInfoView\r\n                                                        data={(this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0) ?\r\n                                                            this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {}}\r\n                                                        SingleItem={this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ?\r\n                                                            this.state.SingleItem : []}\r\n                                                        screenName=\"IDS_SAMPLEINFO\"\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                    />\r\n                                                    :\r\n                                                    <SampleGridTab\r\n                                                        userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                                        GridData={this.props.Login.masterData.ReleasedSampleDetails || []}\r\n                                                        masterData={this.props.Login.masterData}\r\n                                                        inputParam={this.props.Login.inputParam}\r\n                                                        dataState={this.state.sampleGridDataState}\r\n                                                        dataStateChange={this.sampleGridDataStateChange}\r\n                                                        extractedColumnList={this.gridfillingColumn(this.state.SingleItem) || []}\r\n                                                        detailedFieldList={[]}\r\n                                                        primaryKeyField={\"npreregno\"}\r\n                                                        expandField=\"expanded\"\r\n                                                        screenName=\"IDS_PATIENTINFO\"\r\n                                                    />\r\n                                                : this.props.Login.isPatientReports && this.props.Login.openModal ?\r\n                                                    <DataGrid\r\n                                                        // key=\"nreleaseoutsourceattachcode\"\r\n                                                        primaryKeyField=\"nreleaseoutsourceattachcode\"\r\n                                                        data={this.props.Login.masterData.PatientReports || []}\r\n                                                        dataResult={process(this.props.Login.masterData.PatientReports && this.props.Login.masterData.PatientReports || [], this.state.outsourceFileDataState)}\r\n                                                        dataState={this.state.outsourceFileDataState}\r\n                                                        isExportExcelRequired={false}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        extractedColumnList={this.fieldsForReleasedReportGrid}\r\n                                                        selectedId={this.props.Login.selectedId}\r\n                                                        pageable={true}\r\n                                                        dataStateChange={this.outsourceFileDataStateChange}\r\n                                                        scrollable={'scrollable'}\r\n                                                        gridHeight={'630px'}\r\n                                                        isActionRequired={true}\r\n                                                        methodUrl={'PatientReports'}\r\n                                                        viewDownloadFile={this.viewSelectedReport}\r\n                                                    >\r\n                                                    </DataGrid>\r\n                                                    : this.props.Login.isReleaseTestAttachment && this.props.Login.openModal ?\r\n                                                        <ReleaseTestAttachment\r\n                                                            ReleaseTestAttachmentDetails={this.props.Login.masterData.ReleaseTestAttachmentDetails || []}\r\n                                                            controlMap={this.state.controlMap}\r\n                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                            storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            methodUrl={'ReleaseTestAttachment'}\r\n                                                            settings={this.props.Login.settings}\r\n                                                            isAddRequired={true}\r\n                                                            isRefreshRequired={false}\r\n                                                            isImportRequired={false}\r\n                                                            isDownloadPDFRequired={false}\r\n                                                            isDownloadExcelRequired={false}\r\n                                                            inputParam={this.props.Login.inputParam}\r\n                                                            screenName={\"IDS_RELEASETESTATTACHMENT\"}\r\n                                                            maxSize={20}\r\n                                                            masterData={this.props.Login.masterData}\r\n                                                            isDataGrid={this.props.Login.isDataGrid}\r\n                                                            selectedRecord={this.state.selectedRecord}\r\n                                                            operation={this.props.Login.operation}\r\n                                                            childDataChange={this.childDataChange}\r\n                                                            deleteRecord={this.deleteReleaseTestAttachment}\r\n                                                            dataState={this.state.testAttachmentDataState}\r\n                                                            dataStateChange={this.testAttachmentDataStateChange}\r\n                                                        />\r\n                                                        : this.props.Login.isAddReleaseTestAttachment ?\r\n                                                            <AddReleaseTestAttachment\r\n                                                                ReleaseTestAttachmentDetails={this.props.Login.masterData.ReleaseTestAttachmentDetails || []}\r\n                                                                controlMap={this.state.controlMap}\r\n                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                userInfo={this.props.Login.userInfo}\r\n                                                                methodUrl={'ReleaseTestAttachment'}\r\n                                                                settings={this.props.Login.settings}\r\n                                                                isAddRequired={true}\r\n                                                                isRefreshRequired={false}\r\n                                                                isImportRequired={false}\r\n                                                                isDownloadPDFRequired={false}\r\n                                                                isDownloadExcelRequired={false}\r\n                                                                inputParam={this.props.Login.inputParam}\r\n                                                                screenName={\"ReleaseTestAttachment\"}\r\n                                                                maxSize={20}\r\n                                                                masterData={this.props.Login.masterData}\r\n                                                                isDataGrid={this.props.Login.isDataGrid}\r\n                                                                selectedRecord={this.state.selectedRecord}\r\n                                                                operation={this.props.Login.operation}\r\n                                                                childDataChange={this.childDataChange}\r\n                                                            />\r\n                                                            : this.props.Login.isReleaseTestComment && this.props.Login.openModal ?\r\n                                                                <ReleaseTestComment\r\n                                                                    ReleaseTestCommentDetails={this.props.Login.masterData.ReleaseTestCommentDetails || []}\r\n                                                                    controlMap={this.state.controlMap}\r\n                                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                    storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                    userInfo={this.props.Login.userInfo}\r\n                                                                    methodUrl={'ReleaseTestComment'}\r\n                                                                    settings={this.props.Login.settings}\r\n                                                                    isAddRequired={true}\r\n                                                                    isRefreshRequired={false}\r\n                                                                    isImportRequired={false}\r\n                                                                    isDownloadPDFRequired={false}\r\n                                                                    isDownloadExcelRequired={false}\r\n                                                                    inputParam={this.props.Login.inputParam}\r\n                                                                    screenName={\"IDS_RELEASETESTCOMMENT\"}\r\n                                                                    maxSize={20}\r\n                                                                    masterData={this.props.Login.masterData}\r\n                                                                    CommentSubType={this.props.Login.masterData.CommentSubType}\r\n                                                                    SampleTestComments={this.props.Login.masterData.SampleTestComments} //ALPD-4948 Passed sampletestcomments to the releasetestcomments\r\n                                                                    deleteRecord={this.deleteReleaseTestComment}\r\n                                                                    dataState={this.state.testCommentDataState}\r\n                                                                    dataStateChange={this.testCommentDataStateChange}\r\n                                                                />\r\n                                                                : this.props.Login.isAddReleaseTestComment ?\r\n                                                                    <AddReleaseTestComment\r\n                                                                        ReleaseTestCommentDetails={this.props.Login.masterData.ReleaseTestCommentDetails || []}\r\n                                                                        controlMap={this.state.controlMap}\r\n                                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                        storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                        methodUrl={'ReleaseTestComment'}\r\n                                                                        settings={this.props.Login.settings}\r\n                                                                        isAddRequired={true}\r\n                                                                        isRefreshRequired={false}\r\n                                                                        isImportRequired={false}\r\n                                                                        isDownloadPDFRequired={false}\r\n                                                                        isDownloadExcelRequired={false}\r\n                                                                        inputParam={this.props.Login.inputParam}\r\n                                                                        screenName={\"ReleaseTestComment\"}\r\n                                                                        maxSize={20}\r\n                                                                        masterData={this.props.Login.masterData}\r\n                                                                        CommentSubType={this.props.Login.masterData.CommentSubType}\r\n                                                                        selectedRecord={this.state.selectedRecord}\r\n                                                                        childDataChange={this.childDataChange}\r\n                                                                        operation={this.props.Login.operation}\r\n                                                                        SampleTestComments={this.props.Login.SampleTestComments}\r\n                                                                    />\r\n                                                                    : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" && this.props.Login.openModal ?\r\n                                                                        <DataGrid\r\n                                                                            key=\"reportinforeleasecode\"\r\n                                                                            primaryKeyField=\"nreportinforeleasecode\"\r\n                                                                            data={this.props.Login.masterData.reportinforelease || []}\r\n                                                                            dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState)}\r\n                                                                            dataState={this.state.reportInfoDataState}\r\n                                                                            //dataResult={this.props.selectedWorklist || []}\r\n                                                                            //expandField=\"expanded\"\r\n                                                                            isExportExcelRequired={false}\r\n                                                                            //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                                                                            controlMap={this.state.controlMap}\r\n                                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                            extractedColumnList={this.feildsForGrid}\r\n                                                                            detailedFieldList={this.props.detailedFieldList}\r\n                                                                            editParam={editReportParam}\r\n                                                                            selectedId={this.props.Login.selectedId}\r\n                                                                            fetchRecord={this.props.fetchReportInfoReleaseById}\r\n                                                                            pageable={true}\r\n                                                                            dataStateChange={this.reportInfoDataChange}\r\n                                                                            scrollable={'scrollable'}\r\n                                                                            gridHeight={'630px'}\r\n                                                                            isActionRequired={true}\r\n                                                                            methodUrl={'ReportComment'}\r\n                                                                        // actionIcons={[{\r\n                                                                        //     title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\r\n                                                                        //     controlname: \"faEye\",\r\n                                                                        //     objectName: \"ExceptionLogs\",\r\n                                                                        //     hidden: -1 === -1,\r\n                                                                        //    onClick: (viewSample) => this.props.viewSample(viewSample)\r\n                                                                        // }]}\r\n                                                                        >\r\n                                                                        </DataGrid>\r\n                                                                        : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ?\r\n                                                                            <Row>\r\n                                                                                <Col md={12}>\r\n                                                                                    <FormInput\r\n                                                                                        label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                                        name=\"sreportcomments\"\r\n                                                                                        type=\"text\"\r\n                                                                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                                        value={this.state.selectedRecord[\"sreportcomments\"] ? this.state.selectedRecord[\"sreportcomments\"] : \"\"}\r\n                                                                                        isMandatory={true}\r\n                                                                                        required={true}\r\n                                                                                        maxLength={255}\r\n                                                                                    />\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                            : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" }) ?\r\n                                                                                <Row>\r\n                                                                                    <Col md={12}>\r\n                                                                                       \r\n                                                                                            <FormSelectSearch\r\n                                                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_DECISIONTYPE\" })}\r\n                                                                                                isSearchable={true}\r\n                                                                                                name={\"sreleasecomments\"}\r\n                                                                                                isDisabled={false}\r\n                                                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_DECISIONTYPE\" })}\r\n                                                                                                isMandatory={true}\r\n                                                                                                isClearable={false}\r\n                                                                                                options={this.props.Login.transactionstatuscomments || []}\r\n                                                                                                value={this.state.selectedRecord[\"sreleasecommentscombo\"] ? this.state.selectedRecord[\"sreleasecommentscombo\"] : \"\"}\r\n                                                                                                //defaultValue={props.selectedRecord[\"sstatusname\"]}\r\n                                                                                                onChange={(event) => this.onComboChange(event, \"sreleasecomments\")}\r\n                                                                                                closeMenuOnSelect={true}\r\n                                                                                                isMulti={false}\r\n                                                                                            />\r\n                                                                                        \r\n                                                                                        <FormTextarea\r\n                                                                                            label={this.props.intl.formatMessage({ id: \"IDS_FINALDECISION\" })}\r\n                                                                                            name=\"sreleasecomments\"\r\n                                                                                            type=\"text\"\r\n                                                                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FINALDECISION\" })}\r\n                                                                                            value={this.state.selectedRecord[\"sreleasecomments\"] ? this.state.selectedRecord[\"sreleasecomments\"] : \"\"}\r\n                                                                                            isMandatory={false}\r\n                                                                                            required={true}\r\n                                                                                            maxLength={500}\r\n                                                                                            // readOnly={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory\r\n                                                                                            //     && this.props.Login.masterData.selectedReleaseHistory.length === 1\r\n                                                                                            //     && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED ? true : false\r\n                                                                                            // }\r\n                                                                                            readOnly={true}\r\n                                                                                        />\r\n                                                                                    </Col>\r\n                                                                                </Row>\r\n                                                                                :\r\n                                                                                this.props.Login.FilterQueryBuilder ?\r\n                                                                                    <>\r\n                                                                                        <Row>\r\n                                                                                            <FilterQueryBuilder\r\n                                                                                                fields={this.props.Login.fields || {}}\r\n                                                                                                onChange={this.onComboChangeAwesomeQueryBuilder}\r\n                                                                                                tree={this.props.Login.awesomeTree}\r\n                                                                                                config={this.props.Login.awesomeConfig}\r\n                                                                                                skip={this.props.Login.kendoSkip}\r\n                                                                                                take={this.props.Login.kendoTake}\r\n                                                                                                handlePageChange={this.handlePageChange}\r\n                                                                                                gridColumns={[]}\r\n                                                                                                filterData={this.props.Login.lstPatient || []}\r\n                                                                                                //onRowClick={this.handleKendoRowClick}\r\n                                                                                                //handleExecuteClick={this.handleExecuteClick}\r\n                                                                                                userInfo={this.props.Login.userInfo}\r\n                                                                                                static={true}\r\n                                                                                            />\r\n\r\n                                                                                            <Col md={3}>\r\n                                                                                                <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks(false)}>\r\n                                                                                                    {/* <FontAwesomeIcon icon={faCalculator} /> { } */}\r\n                                                                                                    <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                                                                                </Button>\r\n                                                                                            </Col>\r\n                                                                                        </Row>\r\n                                                                                    </>\r\n                                                                                    :\r\n                                                                                    <>\r\n\r\n\r\n                                                                                        {\r\n                                                                                            (\r\n                                                                                                this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                                this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                                this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                            // //  this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                                                                            // //  (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                            // this.props.Login.masterData.realReportTypeValue\r\n                                                                                            // && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                            //     this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                            // //this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                                                                                            this.props.Login.isDeletePopup !== true &&\r\n                                                                                            //this.props.Login.isComboCheck !== true &&\r\n                                                                                            //this.props.Login.isEditPopup === true &&\r\n                                                                                            this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" &&\r\n                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) &&\r\n                                                                                            this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE &&\r\n                                                                                            this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" &&\r\n                                                                                            // this.state.DynamicReportFilterTypeItem && this.state.DynamicReportFilterTypeItem.length>0 &&\r\n                                                                                            <>\r\n                                                                                                <Row>\r\n                                                                                                    <Col md={3} className='pb-4'>\r\n                                                                                                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.openFilterQuery()}>\r\n                                                                                                            <FontAwesomeIcon icon={faSearch} /> { }\r\n                                                                                                            {/* <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' /> */}\r\n                                                                                                        </Button>\r\n                                                                                                        {!this.props.Login.ismandatory &&\r\n                                                                                                            <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks(true)}>\r\n                                                                                                                <FontAwesomeIcon icon={faTimes} /> { }\r\n                                                                                                                <FormattedMessage id='IDS_CLEARFILTER' defaultMessage='Clear Filter' />\r\n                                                                                                            </Button>\r\n                                                                                                        }\r\n                                                                                                    </Col>\r\n\r\n                                                                                                    <Col md={3} className='pb-4'>\r\n                                                                                                        {(this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                                            this.props.Login.masterData.realReportTypeValue && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" &&\r\n                                                                                                            (this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES\r\n                                                                                                                //  || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                                                //   this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE\r\n                                                                                                            ) &&\r\n                                                                                                            this.props.Login.isDeletePopup !== true && this.props.Login.isEditPopup !== true &&\r\n                                                                                                            this.props.Login.isComboCheck !== true &&\r\n                                                                                                            <FormSelectSearch\r\n                                                                                                                name={\"nsectioncode\"}\r\n                                                                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                                                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                                                options={this.props.Login.sectionList}\r\n                                                                                                                value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] !== undefined ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\" : \"\"}\r\n                                                                                                                defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                                                                                                                isMandatory={true}\r\n                                                                                                                isMulti={false}\r\n                                                                                                                isSearchable={true}\r\n                                                                                                                // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                                                closeMenuOnSelect={true}\r\n                                                                                                                alphabeticalSort={true}\r\n                                                                                                                onChange={(event) => this.onComboChange(event, 'nsectioncode', 1)}\r\n                                                                                                            />\r\n                                                                                                        }\r\n                                                                                                    </Col>\r\n\r\n                                                                                                    <Col md={3} className='pb-4'>\r\n                                                                                                        {this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }) &&\r\n                                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" }) && \t// ALPD-4053 (15-05-2024) Added this condition for issue in delete sample popup\r\n                                                                                                            this.props.Login.isEditPopup !== true && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" &&\r\n                                                                                                            <FormSelectSearch\r\n                                                                                                                name={\"nreporttemplatecode\"}\r\n                                                                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })}\r\n                                                                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                                                options={this.props.Login.masterData.reportTemplateList || []}\r\n                                                                                                                value={this.state.selectedRecord[\"nreporttemplatecode\"] || \"\"}\r\n                                                                                                                isMandatory={true}\r\n                                                                                                                isMulti={false}\r\n                                                                                                                isClearable={false}\r\n                                                                                                                isSearchable={true}\r\n                                                                                                                // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                                                                closeMenuOnSelect={true}\r\n                                                                                                                onChange={(event) => this.onComboChange(event, \"nreporttemplatecode\")}\r\n                                                                                                            />\r\n                                                                                                        }\r\n                                                                                                    </Col>\r\n                                                                                                    <Col md={3} className='pb-4'></Col>\r\n                                                                                                    <Col md={3} className='pb-4'>\r\n                                                                                                        {this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }) &&\r\n                                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" }) &&\t// ALPD-4053 (15-05-2024) Added this condition for issue in delete sample popup\r\n                                                                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nneedreleaseformattoggle\r\n                                                                                                                && this.props.Login.masterData.realReportTypeValue.nneedreleaseformattoggle === transactionStatus.YES) && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" &&\r\n                                                                                                            <CustomSwitch\r\n                                                                                                                name={'nisarnowiserelease'}\r\n                                                                                                                type=\"switch\"\r\n                                                                                                                label={(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease\r\n                                                                                                                    && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES) ? this.props.intl.formatMessage({ id: \"IDS_ENABLEFORMULTISAMPLERELEASE\" })\r\n                                                                                                                    : this.props.intl.formatMessage({ id: \"IDS_ENABLEFORSINGLESAMPLERELEASE\" })}\r\n                                                                                                                placeholder={(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease\r\n                                                                                                                    && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES) ? this.props.intl.formatMessage({ id: \"IDS_ENABLEFORMULTISAMPLERELEASE\" })\r\n                                                                                                                    : this.props.intl.formatMessage({ id: \"IDS_ENABLEFORSINGLESAMPLERELEASE\" })}\r\n                                                                                                                isMandatory={false}\r\n                                                                                                                required={false}\r\n                                                                                                                onChange={(event) => this.onInputOnChange(event)}\r\n                                                                                                                // defaultValue ={props.selectedRecord[item.controlName] === 3 ? true :false }\r\n                                                                                                                checked={this.state.selectedRecord ? this.state.selectedRecord[\"nisarnowiserelease\"] === 3 ? true : false : false}\r\n                                                                                                            />\r\n                                                                                                        }\r\n                                                                                                    </Col>\r\n                                                                                                </Row>\r\n                                                                                                {/* <FilterQueryBuilder\r\n                                                                                        fields={this.props.Login.fields || {}}\r\n                                                                                        onChange={this.onComboChangeAwesomeQueryBuilder}\r\n                                                                                        tree={this.props.Login.awesomeTree}\r\n                                                                                        config={this.props.Login.awesomeConfig}\r\n                                                                                        skip={this.props.Login.kendoSkip}\r\n                                                                                        take={this.props.Login.kendoTake}\r\n                                                                                        handlePageChange={this.handlePageChange}\r\n                                                                                        gridColumns={[]}\r\n                                                                                        filterData={this.props.Login.lstPatient || []}\r\n                                                                                        //onRowClick={this.handleKendoRowClick}\r\n                                                                                        //handleExecuteClick={this.handleExecuteClick}\r\n                                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                                        static={true}\r\n                                                                                    /> */}\r\n\r\n                                                                                                {/* <Col md={3}>\r\n                                                                                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks()}>\r\n                                                                                            <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                                                                        </Button>\r\n                                                                                        </Col> */}\r\n                                                                                            </>\r\n                                                                                            // <Col md={4}>\r\n                                                                                            //     <FormSelectSearch\r\n                                                                                            //         name={\"nprojecttypecode\"}\r\n                                                                                            //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                                                            //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                            //         options={this.props.Login.ProjectTypeList}\r\n                                                                                            //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                                                            //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                                                            //         isMandatory={true}\r\n                                                                                            //         isMulti={false}\r\n                                                                                            //         isSearchable={true}\r\n                                                                                            //         //  isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                            //         closeMenuOnSelect={true}\r\n                                                                                            //         alphabeticalSort={true}\r\n                                                                                            //         onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\r\n                                                                                            //     />\r\n                                                                                            // </Col>\r\n                                                                                        }\r\n                                                                                        {/* {(this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        // this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                                                                        // (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        this.props.Login.masterData.realReportTypeValue\r\n                                                                                        && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                            this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                                                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                                                        this.props.Login.isComboCheck !== true &&\r\n                                                                                        this.props.Login.isEditPopup !== true &&\r\n                                                                                        this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) &&\r\n\r\n                                                                                        // <Col md={4}>\r\n                                                                                        //     <FormSelectSearch\r\n                                                                                        //         name={\"nprojectmastercode\"}\r\n                                                                                        //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                                                                                        //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                        //         options={this.props.Login.projectMasterList}\r\n                                                                                        //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] !== undefined ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\" : \"\"}\r\n                                                                                        //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                                                        //         isMandatory={true}\r\n                                                                                        //         isMulti={false}\r\n                                                                                        //         isSearchable={true}\r\n                                                                                        //         // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                        //         closeMenuOnSelect={true}\r\n                                                                                        //         alphabeticalSort={true}\r\n                                                                                        //         onChange={(event) => this.onComboChange(event, 'nprojectmastercode', 1)}\r\n                                                                                        //     />\r\n                                                                                        // </Col>\r\n                                                                                    } */}\r\n                                                                                        {/* { (this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        this.props.Login.masterData.realReportTypeValue &&\r\n                                                                                        (this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                            this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\r\n                                                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                                                        this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true &&\r\n                                                                                         <Col md={4}>\r\n                                                                                             <FormSelectSearch\r\n                                                                                                name={\"nsectioncode\"}\r\n                                                                                                 formLabel={this.props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                                                                                 placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                                 options={this.props.Login.sectionList}\r\n                                                                                                value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] !== undefined ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\" : \"\"}\r\n                                                                                                defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                                                                                                isMandatory={true}\r\n                                                                                                 isMulti={false}\r\n                                                                                                isSearchable={true}\r\n                                                                                                // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                                 closeMenuOnSelect={true}\r\n                                                                                                 alphabeticalSort={true}\r\n                                                                                                 onChange={(event) => this.onComboChange(event, 'nsectioncode', 1)}\r\n                                                                                            />\r\n                                                                                     </Col>\r\n                                                                                    } */}\r\n                                                                                        <Row>\r\n\r\n\r\n                                                                                            {this.props.Login.ReportmodalShow ? (\r\n                                                                                                <ModalShow\r\n                                                                                                    modalShow={this.props.Login.ReportmodalShow}\r\n                                                                                                    closeModal={this.closeModalShow}\r\n                                                                                                    onSaveClick={this.onSaveModalClick}\r\n                                                                                                    validateEsign={this.validateEsign}\r\n                                                                                                    masterStatus={this.props.Login.masterStatus}\r\n                                                                                                    //  mandatoryFields={mandatoryFields}\r\n                                                                                                    updateStore={this.props.updateStore}\r\n                                                                                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                                                                                    modalTitle={this.props.Login.modalTitle}\r\n                                                                                                    modalBody={\r\n                                                                                                        this.props.Login.loadEsign ?\r\n                                                                                                            <Esign\r\n                                                                                                                operation={this.props.Login.operation}\r\n                                                                                                                onInputOnChange={this.onEsignInputOnChange}\r\n                                                                                                                inputParam={this.props.Login.inputParam}\r\n                                                                                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                                                                            /> :\r\n\r\n                                                                                                            //ALPD-4878-To show the add popup to get input of filter name,done by Dhanushya RI\r\n                                                                                                            <Col md={12}>\r\n\r\n                                                                                                                <FormTextarea\r\n                                                                                                                    label={this.props.intl.formatMessage({ id: this.props.Login.masterData.selectedComment.sreportfieldname })}\r\n                                                                                                                    name={\"sreportfieldvalue\"}\r\n                                                                                                                    type=\"text\"\r\n                                                                                                                    onChange={this.onInputChange}\r\n                                                                                                                    placeholder={this.props.intl.formatMessage({ id: this.props.Login.masterData.selectedComment.sreportfieldname })}\r\n                                                                                                                    value={this.state.selectedComment ? this.state.selectedComment.sreportfieldvalue : \"\"}\r\n                                                                                                                    isMandatory={true}\r\n                                                                                                                    required={true}\r\n                                                                                                                    maxLength={\"500\"}\r\n                                                                                                                />\r\n                                                                                                            </Col>\r\n\r\n                                                                                                    }\r\n                                                                                                />\r\n                                                                                            ) : (\r\n                                                                                                \"\"\r\n                                                                                            )}\r\n\r\n                                                                                        </Row>\r\n\r\n                                                                                        {this.props.Login.isCorrectionNeed && this.props.Login.isCorrectionNeed ?\r\n                                                                                            <DataGrid\r\n                                                                                                primaryKeyField={\"ntransactionresultcode\"}\r\n                                                                                                selectedId={this.props.Login.selectedId}\r\n                                                                                                data={this.props.Login.masterData.ResultCorrection}\r\n                                                                                                dataResult={process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.correctionDataState)}\r\n                                                                                                dataState={this.state.correctionDataState}\r\n                                                                                                dataStateChange={this.correctionDataStateChange}\r\n                                                                                                extractedColumnList={resultCorrectionColumnList}\r\n                                                                                                controlMap={this.state.controlMap}\r\n                                                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                                inputParam={this.props.Login.inputParam}\r\n                                                                                                methodUrl={\"Result\"}\r\n                                                                                                userInfo={this.props.Login.userInfo}\r\n                                                                                                fetchRecord={this.props.fetchParameterById}\r\n                                                                                                deleteRecord={this.deleteRecord}\r\n                                                                                                //  reloadData={this.reloadData}\r\n                                                                                                //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\r\n                                                                                                editParam={editParam}\r\n                                                                                                //  deleteParam={deleteParam}\r\n                                                                                                scrollable={'scrollable'}\r\n                                                                                                gridHeight={'600px'}\r\n                                                                                                isActionRequired={true}\r\n                                                                                                //  isToolBarRequired={true}\r\n                                                                                                pageable={true}\r\n                                                                                            /> :\r\n                                                                                            (this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                                this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                                this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENT\"\r\n                                                                                                && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.screenName !== \"IDS_ADDRELEASETESTATTACHMENT\" ?\r\n                                                                                                <DataGridWithMultipleGrid\r\n                                                                                                    needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                                                                    data={this.state.data}\r\n                                                                                                    dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.slideOutDataState)}\r\n                                                                                                    dataState={this.state.slideOutDataState}    // ALPD-4896, Added slideOutDataState for slideout datagrid\r\n                                                                                                    dataStateChange={this.dataStateChangeSlideOut}\r\n                                                                                                    expandNextData={this.expandNextData}\r\n                                                                                                    checkFunction={this.checkFunction}\r\n                                                                                                    checkFunction1={this.checkFunction1}\r\n                                                                                                    expandFunc={this.expandFunc}\r\n                                                                                                    childDataResult={this.state.childDataResult}\r\n                                                                                                    subChildDataResult={this.state.subChildDataResult}\r\n                                                                                                    extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                                    subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                                                                                    expandField=\"expanded\"\r\n                                                                                                    handleExpandChange={this.handleExpandChange}\r\n                                                                                                    childHandleExpandChange={this.childHandleExpandChange}\r\n                                                                                                    isCheckBoxRequired={true}\r\n                                                                                                    reloadData={this.reloadData}\r\n                                                                                                    controlMap={this.state.controlMap}\r\n                                                                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                                    inputParam={this.props.Login.inputParam}\r\n                                                                                                    userInfo={this.props.Login.userInfo}\r\n                                                                                                    pageable={true}\r\n                                                                                                    scrollable={'scrollable'}\r\n                                                                                                    gridHeight={'600px'}\r\n                                                                                                    gridTop={'10px'}\r\n                                                                                                    // isActionRequired={true}\r\n                                                                                                    //   isToolBarRequired={true}\r\n                                                                                                    //  isExpandRequired={true}\r\n                                                                                                    //   isDownloadRequired={true}\r\n                                                                                                    isCollapseRequired={true}\r\n                                                                                                    selectedId={this.props.Login.selectedId}\r\n                                                                                                    hasChild={true}\r\n                                                                                                    hasSubChild={true}\r\n                                                                                                    childList={\r\n                                                                                                        this.props.Login.masterData.searchedData2 ||\r\n                                                                                                        this.props.Login.masterData.ReleaseSubSample\r\n                                                                                                    }\r\n                                                                                                    childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                                                                    childMappingField={\"npreregno\"}\r\n                                                                                                    subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                                                                    subChildList={\r\n                                                                                                        this.props.Login.masterData.searchedData3 ||\r\n                                                                                                        this.props.Login.masterData.ReleaseTest\r\n                                                                                                    }\r\n                                                                                                    selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                                                                    methodUrl={\"Release\"}\r\n                                                                                                    headerSelectionChange={this.headerSelectionChange}\r\n                                                                                                    childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                                                                    childSelectAll={this.props.Login.childSelectAll}\r\n                                                                                                    childSelectionChange={this.childSelectionChange}\r\n                                                                                                    subChildSelectionChange={this.subChildSelectionChange}\r\n                                                                                                    subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                                                                    subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                                                                    selectionChange={this.selectionChange}\r\n                                                                                                    selectAll={this.props.Login.selectAll}\r\n                                                                                                    releaseRecord={this.onSaveModalClick}\r\n                                                                                                // viewDownloadFile={this.viewDownloadFile}\r\n                                                                                                />\r\n                                                                                                :\r\n                                                                                                this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ?\r\n                                                                                                    <DataGrid\r\n                                                                                                        key=\"reportinforeleasecode\"\r\n                                                                                                        primaryKeyField=\"nreportinforeleasecode\"\r\n                                                                                                        data={this.props.Login.masterData.reportinforelease || []}\r\n                                                                                                        dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState)}\r\n                                                                                                        dataState={this.state.reportInfoDataState}\r\n                                                                                                        //dataResult={this.props.selectedWorklist || []}\r\n                                                                                                        //expandField=\"expanded\"\r\n                                                                                                        isExportExcelRequired={false}\r\n                                                                                                        //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                                                                                                        controlMap={this.state.controlMap}\r\n                                                                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                                        extractedColumnList={this.feildsForGrid}\r\n                                                                                                        detailedFieldList={this.props.detailedFieldList}\r\n                                                                                                        editParam={editParam}\r\n                                                                                                        fetchRecord={this.props.fetchReportInfoReleaseById}\r\n                                                                                                        pageable={true}\r\n                                                                                                        dataStateChange={this.reportInfoDataChange}\r\n                                                                                                        scrollable={'scrollable'}\r\n                                                                                                        gridHeight={'630px'}\r\n                                                                                                        isActionRequired={true}\r\n                                                                                                        methodUrl={'ReportComment'}\r\n                                                                                                    >\r\n                                                                                                    </DataGrid> :\r\n                                                                                                    //     <DataGridWithMultipleGrid\r\n                                                                                                    //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                                                                    //     data={this.state.data}\r\n                                                                                                    //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                                                                                    //     dataState={this.state.dataState}\r\n                                                                                                    //     dataStateChange={this.dataStateChange}\r\n                                                                                                    //     expandNextData={this.expandNextData}\r\n                                                                                                    //     checkFunction={this.checkFunction}\r\n                                                                                                    //     checkFunction1={this.checkFunction1}\r\n                                                                                                    //     expandFunc={this.expandFunc}\r\n                                                                                                    //     childDataResult={this.state.childDataResult}\r\n                                                                                                    //     subChildDataResult={this.state.subChildDataResult}\r\n                                                                                                    //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                                    //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                                                                    //     expandField=\"expanded\"\r\n                                                                                                    //     handleExpandChange={this.handleExpandChange}\r\n                                                                                                    //     childHandleExpandChange={this.childHandleExpandChange}\r\n                                                                                                    //     isCheckBoxRequired={true}\r\n\r\n                                                                                                    //     reloadData={this.reloadData}\r\n                                                                                                    //     controlMap={this.state.controlMap}\r\n                                                                                                    //     userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                                    //     inputParam={this.props.Login.inputParam}\r\n                                                                                                    //     userInfo={this.props.Login.userInfo}\r\n                                                                                                    //     pageable={true}\r\n                                                                                                    //     scrollable={'scrollable'}\r\n                                                                                                    //     gridHeight={'600px'}\r\n                                                                                                    //     gridTop={'10px'}\r\n                                                                                                    //    // isActionRequired={true}\r\n                                                                                                    //     //   isToolBarRequired={true}\r\n                                                                                                    //     //  isExpandRequired={true}\r\n                                                                                                    //     //   isDownloadRequired={true}\r\n                                                                                                    //     isCollapseRequired={true}\r\n\r\n                                                                                                    //     selectedId={this.props.Login.selectedId}\r\n                                                                                                    //     hasChild={true}\r\n                                                                                                    //     hasSubChild={true}\r\n                                                                                                    //     childList={\r\n                                                                                                    //         this.props.Login.masterData.searchedData2 ||\r\n                                                                                                    //         this.props.Login.masterData.ReleaseSubSample\r\n                                                                                                    //     }\r\n                                                                                                    //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                                                                    //     childMappingField={\"npreregno\"}\r\n                                                                                                    //     subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                                                                    //     subChildList={\r\n                                                                                                    //         this.props.Login.masterData.searchedData3 ||\r\n                                                                                                    //         this.props.Login.masterData.ReleaseTest\r\n                                                                                                    //     }\r\n                                                                                                    //     selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                                                                    //     methodUrl={\"Release\"}\r\n                                                                                                    //     headerSelectionChange={this.headerSelectionChange}\r\n                                                                                                    //     childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                                                                    //     childSelectAll={this.props.Login.childSelectAll}\r\n                                                                                                    //     childSelectionChange={this.childSelectionChange}\r\n                                                                                                    //     subChildSelectionChange={this.subChildSelectionChange}\r\n                                                                                                    //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                                                                    //     subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                                                                    //     selectionChange={this.selectionChange}\r\n                                                                                                    //     selectAll={this.props.Login.selectAll}\r\n                                                                                                    //     releaseRecord={this.onSaveModalClick}\r\n                                                                                                    //    // viewDownloadFile={this.viewDownloadFile}\r\n                                                                                                    // />\r\n                                                                                                    \"\"\r\n                                                                                        }\r\n\r\n                                                                                        {/* {this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ?\r\n                      <DataGrid \r\n                            key=\"reportinforeleasecode\"\r\n                            primaryKeyField=\"nreportinforeleasecode\"\r\n                            data={this.props.Login.masterData.reportinforelease || []}\r\n                            dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.dataState)}\r\n                            dataState={this.state.dataState}\r\n                            //dataResult={this.props.selectedWorklist || []}\r\n                            //expandField=\"expanded\"\r\n                            isExportExcelRequired = {false}\r\n                            //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                            controlMap={this.state.controlMap}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            extractedColumnList={this.feildsForGrid}\r\n                            detailedFieldList={this.props.detailedFieldList}\r\n                            editParam={editParam}   \r\n                            fetchRecord={this.props.fetchReportInfoReleaseById}                         \r\n                            pageable={true}\r\n                            dataStateChange={this.dataStateChange}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'630px'}\r\n                             isActionRequired={true}\r\n                            methodUrl={'ReportComment'}\r\n                        >\r\n                        </DataGrid>:\r\n                    //     <DataGridWithMultipleGrid\r\n                    //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                    //     data={this.state.data}\r\n                    //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                    //     dataState={this.state.dataState}\r\n                    //     dataStateChange={this.dataStateChange}\r\n                    //     expandNextData={this.expandNextData}\r\n                    //     checkFunction={this.checkFunction}\r\n                    //     checkFunction1={this.checkFunction1}\r\n                    //     expandFunc={this.expandFunc}\r\n                    //     childDataResult={this.state.childDataResult}\r\n                    //     subChildDataResult={this.state.subChildDataResult}\r\n                    //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                    //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                    //     expandField=\"expanded\"\r\n                    //     handleExpandChange={this.handleExpandChange}\r\n                    //     childHandleExpandChange={this.childHandleExpandChange}\r\n                    //     isCheckBoxRequired={true}\r\n\r\n                    //     reloadData={this.reloadData}\r\n                    //     controlMap={this.state.controlMap}\r\n                    //     userRoleControlRights={this.state.userRoleControlRights}\r\n                    //     inputParam={this.props.Login.inputParam}\r\n                    //     userInfo={this.props.Login.userInfo}\r\n                    //     pageable={true}\r\n                    //     scrollable={'scrollable'}\r\n                    //     gridHeight={'600px'}\r\n                    //     gridTop={'10px'}\r\n                    //    // isActionRequired={true}\r\n                    //     //   isToolBarRequired={true}\r\n                    //     //  isExpandRequired={true}\r\n                    //     //   isDownloadRequired={true}\r\n                    //     isCollapseRequired={true}\r\n\r\n                    //     selectedId={this.props.Login.selectedId}\r\n                    //     hasChild={true}\r\n                    //     hasSubChild={true}\r\n                    //     childList={\r\n                    //         this.props.Login.masterData.searchedData2 ||\r\n                    //         this.props.Login.masterData.ReleaseSubSample\r\n                    //     }\r\n                    //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                    //     childMappingField={\"npreregno\"}\r\n                    //     subChildMappingField={\"ntransactionsamplecode\"}\r\n                    //     subChildList={\r\n                    //         this.props.Login.masterData.searchedData3 ||\r\n                    //         this.props.Login.masterData.ReleaseTest\r\n                    //     }\r\n                    //     selectedsubcild={this.props.Login.selectedsubcild}\r\n                    //     methodUrl={\"Release\"}\r\n                    //     headerSelectionChange={this.headerSelectionChange}\r\n                    //     childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                    //     childSelectAll={this.props.Login.childSelectAll}\r\n                    //     childSelectionChange={this.childSelectionChange}\r\n                    //     subChildSelectionChange={this.subChildSelectionChange}\r\n                    //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                    //     subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                    //     selectionChange={this.selectionChange}\r\n                    //     selectAll={this.props.Login.selectAll}\r\n                    //     releaseRecord={this.onSaveModalClick}\r\n                    //    // viewDownloadFile={this.viewDownloadFile}\r\n                    // />\r\n                    \"\"\r\n                        } */}\r\n                                                                                    </>\r\n                        }\r\n                    />\r\n                }\r\n                {this.props.Login.modalShow ? (\r\n                    <ModalShow\r\n                        modalShow={this.props.Login.modalShow}\r\n                        closeModal={this.closeModalShow}\r\n                        onSaveClick={this.props.Login && this.props.Login.isFilterDetail ? this.onSaveModalFilterName : this.onSaveModalResultClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={this.props.Login && this.props.Login.isFilterDetail ? mandatoryFieldsFilter : \"\"}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        modalTitle={this.props.Login.modalTitle}\r\n                        modalBody={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onEsignInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                //ATE234 -> ALPD-5436 Release & Report -> Edit Report Template Slide out issues.\r\n                                /> : this.props.Login.modalTitle === this.props.intl.formatMessage({ id: \"IDS_SAVEFILTER\" }) && this.props.Login && this.props.Login.isFilterDetail ?\r\n                                    <Col md={12}>\r\n                                        <FormTextarea\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_FILTERNAME\" })}\r\n                                            name={\"sfiltername\"}\r\n                                            // type=\"text\"\r\n                                            onChange={this.onInputOnChange}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FILTERNAME\" })}\r\n                                            value={this.state.selectedRecord ? this.state.selectedRecord.sfiltername : \"\"}\r\n                                            isMandatory={true}\r\n                                            required={true}\r\n                                            maxLength={\"50\"}\r\n                                        />\r\n                                    </Col> :\r\n                                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" }) ?\r\n                                        <FormSelectSearch\r\n                                            name={\"nreporttemplatecode\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                            options={this.props.Login.masterData.reportTemplateList || []}\r\n                                            value={this.state.selectedRecord[\"nreporttemplatecode\"] || \"\"}\r\n                                            isMandatory={true}\r\n                                            isMulti={false}\r\n                                            isClearable={false}\r\n                                            isSearchable={true}\r\n                                            // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                            closeMenuOnSelect={true}\r\n                                            onChange={(event) => this.onComboChange(event, \"nreporttemplatecode\")}\r\n                                        />\r\n                                        :\r\n                                        this.state.selectedRecord.ReleaseParameter &&\r\n                                        this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\r\n                                            return <ResultEntryForm\r\n                                                index={index}\r\n                                                ResultParameter={[...this.state.selectedRecord.ReleaseParameter]}\r\n                                                predefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                                defaultPredefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                                gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                                selectedNumericData={this.props.Login.masterData.selectedNumericData}\r\n                                                selectedResultGrade={this.state.selectedRecord.selectedResultGrade || []}\r\n                                                paremterResultcode={this.props.Login.masterData.paremterResultcode || []}\r\n                                                parameterResults={parameterResult\r\n                                                    || []}\r\n                                                Login={this.props.Login}\r\n                                                handleClose={this.handleClose}\r\n                                                onSaveClick={this.onSaveClick}\r\n                                                onResultInputChange={this.onResultInputChange}\r\n                                                //onGradeEvent={this.onGradeEvent}\r\n                                                getFormula={this.getFormula}\r\n                                                onDropTestFile={this.onDropTestFile}\r\n                                                onKeyPress={this.onKeyPress}\r\n                                                //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\r\n                                                viewAdditionalInfo={this.viewAdditionalInfo}\r\n                                                needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                                needdelete={true}\r\n                                                needmandatory={true}\r\n                                                ResultAccuracy={this.props.Login.masterData.ResultAccuracy || []}\r\n                                                Unit={this.props.Login.masterData.Unit || []}\r\n                                                formFields={this.props.Login.masterData.formFields || []}\r\n                                            //intl={this.props.intl}\r\n                                            />\r\n                                        })\r\n                        }\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n            </>\r\n        );\r\n    }\r\n    onKeyPress = (event, index, paremterResultcode) => {\r\n        if (event.keyCode === 13) {\r\n            for (let i = 0; i < event.target.form.elements.length; i++) {\r\n                if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\r\n                    event.target.form.elements[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    onResultInputChange = (parameterResults) => {\r\n        this.setState({\r\n            parameterResults: [...parameterResults],\r\n            isParameterInitialRender: false\r\n            // currentAlertResultCode,\r\n            //  currentntestgrouptestpredefcode\r\n        });\r\n    }\r\n    fields = () => {\r\n\r\n    }\r\n    queryBuilderfillingColumns(data) {\r\n\r\n        // const temparray1 = [\r\n        //(this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n        //this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\r\n        ////{ \"idsName\": \"IDS_SECTION\", \"dataField\": \"s.nsectioncode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" },\r\n        // { \"idsName\": \"IDS_TEST\", \"dataField\": \"rt.ntestgrouptestcode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" }];\r\n        const temparray2 = data && data.map((option) => {\r\n            return {\r\n                \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\r\n                \"dataField\": option[designProperties.RECORDTYPE] === 'static' ? \"(jsondata->>'\" + option[designProperties.PRIMARYKEY] + \"')::int\" :\r\n                    option[designProperties.LISTITEM] === 'combo' ?\r\n                        \"(jsondata->'\" + option[designProperties.VALUE] + \"'->>'\" + option[designProperties.PRIMARYKEY] + \"')::int\" :\r\n                        option[designProperties.LISTITEM] === 'Numeric' ?\r\n                            \"(jsondata->>'\" + option[designProperties.VALUE] + \"')::int\" :\r\n                            \"(jsondata->>'\" + option[designProperties.VALUE] + \"')\", \"width\": \"200px\", \"filterinputtype\": option[designProperties.LISTITEM]\r\n            };\r\n        });\r\n        const newArray = [...temparray2]\r\n        return newArray;\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (comboData !== null && fieldName===\"sreleasecomments\") {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData.label;\r\n            selectedRecord[\"sreleasecommentscombo\"] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (fieldName === 'nprojecttypecode') {\r\n            const inputParamData = {\r\n\r\n                nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                nprojecttypecode: comboData.value,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n            }\r\n            this.props.getApprovedProjectByProjectType(inputParamData)\r\n        }\r\n        if (fieldName === 'nprojectmastercode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            //let realFromDate = obj.fromDate;\r\n            //let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, //realFromDate, realToDate, \r\n                realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nprojectmastercode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n\r\n            let selectedRecord = { ...this.props.Login.selectedRecord }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData,\r\n                    selectedRecord\r\n\r\n                }\r\n                if (inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || inputData.isneedsection === transactionStatus.YES) {\r\n                    this.props.getSectionForSectionWise(inputParam)\r\n                }\r\n                else {\r\n                    this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login)\r\n                }\r\n            }\r\n        }\r\n        if (fieldName === 'nsectioncode') {\r\n            let filterquery = this.props.Login && this.props.Login.filterquery || undefined;\r\n            if (filterquery !== undefined) {\r\n                let val = removeSpaceFromFirst(filterquery, '')\r\n                let matchs = val && val.match(/''/g);\r\n                filterquery = matchs !== null && matchs !== undefined && matchs && matchs.length > 1 ? val : val && val.replaceAll(/'/g, \"''\");\r\n            }\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let realFromDate = obj.fromDate;\r\n            let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nsectioncode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\r\n                // ModalStatusValue: true,\r\n                screenName: this.props.Login.screenName,\r\n                filterquery: filterquery,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                isSectionCombo: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData\r\n                }\r\n\r\n                this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login)\r\n            }\r\n        }\r\n    }\r\n    handleExecuteClicks = (isClear) => {\r\n        const filterquery = this.props.Login.filterquery;\r\n        const filterQueryTreeStr = this.props.Login.filterQueryTreeStr;\r\n        let isMandatory = this.checkMandatoryFilter(filterQueryTreeStr, this.props.Login.awesomeConfig);\r\n        if (isMandatory) {\r\n            let isFilterEmpty = checkFilterIsEmptyQueryBuilder(filterQueryTreeStr);\r\n            if (isFilterEmpty) {\r\n                let val = removeSpaceFromFirst(filterquery, '')\r\n                let matchs = val && val.match(/''/g)\r\n                // if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n                let realFromDate = obj.fromDate;\r\n                let realToDate = obj.toDate\r\n                let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n                let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n                let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n                let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n                let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n                let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n                let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n                let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n                let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n                let masterData = {\r\n                    ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                    realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n                }\r\n                // ALPD-4091 (16-05-2024) Changed SampleTypeValue to realSampleTypeValue\r\n                // ALPD-4091 (16-05-2024) Changed RegTypeValue to realRegTypeValue\r\n                // ALPD-4091 (16-05-2024) Changed RegSubTypeValue to realRegSubTypeValue\r\n                // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                // ALPD-4091 (16-05-2024) Changed TestValue to realTestValue\r\n                // ALPD-4091 (16-05-2024) Changed DesignTemplateMappingValue to realDesignTemplateMappingValue\r\n\r\n                let inputData = {\r\n                    npreregno: \"0\",\r\n                    nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                    nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                    ncoareporttypecode: 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                    isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                    ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                    nsectioncode: this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES ? this.props.Login.isEditPopup === true ? (this.props.Login.masterData && this.props.Login.masterData.reportSectionCode) : this.props.Login.selectedRecord && this.props.Login.selectedRecord.nsectioncode ? this.props.Login.selectedRecord.nsectioncode.value : -1 : -1,\r\n                    napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                    ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\r\n                    // ModalStatusValue: true,\r\n                    isPopup: true,\r\n                    isAddPopup: true,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                    filterquery: !isClear ? matchs && matchs.length > 1 ? val : val && val.replaceAll(/'/g, \"''\") : undefined,\r\n                    screenName: this.props.Login.screenNameCopy,\r\n                    isClear: isClear,\r\n                    awesomeTree: this.props.Login.awesomeTree\r\n                }\r\n                if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                    && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                    && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                    inputData['dfrom'] = obj.fromDate;\r\n                    inputData['dto'] = obj.toDate;\r\n                    let inputParam = {\r\n                        masterData,\r\n                        inputData\r\n                    }\r\n\r\n                    this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login)\r\n                }\r\n                // } else {\r\n                //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n                // }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PROVIDEVALUESFORINPUTS\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CONFIGUREMANDATORYFIELDS\" }));\r\n        }\r\n    }\r\n    //ALPD-4878 to insert the filter name in filtername table,done by Dhanushya RI\r\n    onSaveModalFilterName = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        // let realFromDate = obj.fromDate;\r\n        // let realToDate = obj.toDate\r\n        // let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        // let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        // let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        // let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        // let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        // let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        // let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        // let realSampleTypeList = this.props.Login.masterData.SampleType || [];\r\n        // let realReportTypeList = this.props.Login.masterData.ReportType || [];\r\n        // let realRegTypeList = this.props.Login.masterData.RegType || [];\r\n        // let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\r\n        // let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\r\n        // let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\r\n        // let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\r\n        // let masterData = {\r\n        //     ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n        //     realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n        //     //  realUserSectionValue, realTestValue,\r\n        //     realDesignTemplateMappingValue, realReportTypeList, realRegSubTypeList, realRegTypeList,\r\n        //     realReportTypeValue, realSampleTypeList, realFilterStatusList, realApprovalVersionList, realDesignTemplateMappingList\r\n        // }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n            dfrom: obj.fromDate,\r\n            dto: obj.toDate,\r\n            sfiltername: this.state.selectedRecord && this.state.selectedRecord.sfiltername !== null\r\n                ? this.state.selectedRecord.sfiltername : \"\",\r\n            sampleTypeValue: this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue,\r\n            regTypeValue: this.props.Login.masterData && this.props.Login.masterData.realRegTypeValue,\r\n            regSubTypeValue: this.props.Login.masterData && this.props.Login.masterData.realRegSubTypeValue,\r\n            filterStatusValue: this.props.Login.masterData && this.props.Login.masterData.realFilterStatusValue,\r\n            approvalConfigValue: this.props.Login.masterData && this.props.Login.masterData.realApprovalVersionValue,\r\n            designTemplateMappingValue: this.props.Login.masterData && this.props.Login.masterData.realDesignTemplateMappingValue,\r\n            reportTypeValue: this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue,\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n            napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            needExtraKeys: true\r\n\r\n\r\n        }\r\n\r\n\r\n        let inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"FilterName\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n        };\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && inputData.ncoareporttypecode !== -1) {\r\n\r\n            // if (showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,filterNameId)) {\r\n            //   const updateInfo = {\r\n            //     typeName: DEFAULT_RETURN,\r\n            //     data: {\r\n            //       openModal:true,\r\n            //       modalShow: false,\r\n            //       loadEsign: true,\r\n            //       screenData: { inputParam, masterData },\r\n            //     },\r\n            //   };\r\n            //   this.props.updateStore(updateInfo);\r\n            // } else {\r\n            this.props.crudMaster(inputParam, masterData, \"modalShow\");\r\n            // }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n    //ALPD-4878 To open the save popup of filtername,done by Dhanushya RI\r\n    openFilterName = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow: true, operation: \"create\", isFilterDetail: true, modalTitle: this.props.intl.formatMessage({ id: \"IDS_SAVEFILTER\" }) }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    //ALPD-4878-To get previously saved filter details when click the filter name,,done by Dhanushya RI\r\n    clickFilterDetail = (value) => {\r\n        //  if(this.props.Login.nfilternamecode!==value.nfilternamecode){\r\n        this.searchRef.current.value = \"\";\r\n        this.props.Login.change = false\r\n        let masterData = this.props.Login.masterData\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n\r\n        let inputData = {\r\n            userinfo: this.props.Login.userInfo,\r\n            FromDate: obj.fromDate,\r\n            ToDate: obj.toDate,\r\n            nfilternamecode: value && value.nfilternamecode ? value.nfilternamecode : -1,\r\n            ncoareporttypecode: this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue,\r\n            npreregno: \"0\",\r\n            sampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            regtypecode: parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            regsubtypecode: parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            coareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n            approvalconfigurationcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            designtemplatcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n        }\r\n        const inputParam = {\r\n            masterData, inputData\r\n\r\n        }\r\n        this.props.getReleaseFilter(inputParam);\r\n        // }\r\n        // else{\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTEDFILTERALREADYLOADED\" }));  \r\n        // }\r\n    }\r\n    checkMandatoryFilter = (treeData, config) => {\r\n        let ParentItem = { ...treeData };\r\n        let mandatoryList = [];\r\n        let treeDateList = [];\r\n        let isFilterEmpty = false;\r\n        let childArray = ParentItem.children1;\r\n        this.state.DynamicReportFilterTypeItem.map(x => {\r\n            if (x['ismandatory']) {\r\n                mandatoryList.push(x);\r\n            }\r\n            if (childArray && childArray.length > 0 && childArray !== undefined) {\r\n                for (var i = 0; i < childArray.length; i++) {\r\n                    let childData = childArray[i]\r\n                    if (!childData.hasOwnProperty('children1')) {\r\n                        if (config && config.fields[childData.properties.field]['label'] === x[designProperties.VALUE] && x['ismandatory']) {\r\n                            isFilterEmpty = true;\r\n                            treeDateList.push(childData.properties.field);\r\n                        }\r\n                    } else {\r\n                        if (childData) {\r\n                            ParentItem = checkFilterIsEmptyQueryBuilder(childData)\r\n                            if (!ParentItem) {\r\n                                return ParentItem;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        let uniqueSet = new Set(treeDateList);\r\n        let uniqueArray = Array.from(uniqueSet);\r\n        if (uniqueArray.length !== mandatoryList.length) {\r\n            isFilterEmpty = false;\r\n        }\r\n        if (mandatoryList.length === 0) {\r\n            isFilterEmpty = true;\r\n        }\r\n        return isFilterEmpty;\r\n    }\r\n\r\n\r\n    openFilterQuery = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal: true, FilterQueryBuilder: true, screenName: \"IDS_SAMPLEFILTER\", screenNameCopy: this.props.Login.screenNameCopy\r\n            },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let closeModal = true;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedComment = this.props.Login.masterData.selectedComment;\r\n        let isFilterDetail = this.props.Login.isFilterDetail\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            isFilterDetail = false;\r\n            modalShow = false;\r\n            ReportmodalShow = false;\r\n            selectedRecord = {};\r\n            selectedComment = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign, closeModal, selectedComment, ReportmodalShow, isFilterDetail },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    generatereport = (generateid) => {\r\n        // if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                syncaction: \"ManualSyncreport\",\r\n                userInfo: this.props.Login.userInfo\r\n            },\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_GENERATE\" })\r\n\r\n        }\r\n        this.props.generatereport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n        //   }else{\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n        //    }\r\n    }\r\n\r\n\r\n\r\n    downloadHistory = (downloadReportId) => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n                const inputParam = {\r\n                    inputData: {\r\n                        // change: this.props.Login.change,\r\n                        // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                        //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                        //ncoareporthistorycode:filedata.inputData.ncoareporthistorycode,\r\n                        //ntransactionstatus: String(transactionStatus.RELEASED),\r\n                        //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                        // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        action: \"Download\",\r\n                        doAction: \"preview\",\r\n                        // ALPD-4091 (16-05-2024) Changed DesignTemplateMappingValue to realDesignTemplateMappingValue\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                        //openModal:true,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        ncontrolCode: downloadReportId\r\n                    },\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })\r\n\r\n                }\r\n                this.props.downloadHistory(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    previewReport = (previewId) => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                const inputParam = {\r\n                    // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                    inputData: {\r\n                        nflag: 2,\r\n                        change: this.props.Login.change,\r\n                        ncontrolcode: previewId,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAPREVIEW,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        action: 'DOWNLOADFILE',\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                        doAction: \"download\",\r\n                        nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                        reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                        isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                        generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\r\n\r\n                        newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,  //Added by sonia on 18-08-2024 for JIRA ID:4716                         //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\r\n                        reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\r\n                        auditAction: \"preview\"\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            modalShow: false,\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolcode: previewId,\r\n                            operation: \"download\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_FINALREPORTGEN\" }));\r\n            }\r\n        }\r\n    }\r\n    preliminaryReport = (preliminaryId) => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.DRAFT ||\r\n                this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                const inputParam = {\r\n                    // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n\r\n                    inputData: {\r\n                        nflag: 2,\r\n                        change: this.props.Login.change,\r\n                        ncontrolcode: preliminaryId,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAPRELIMINARY,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        action: 'preliminary',\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                        doAction: \"preliminary\",\r\n                        nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                        reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                        isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                        ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                        isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                        generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\r\n\r\n                        newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,  //Added by sonia on 18-08-2024 for JIRA ID:4716 \r\n                        //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\r\n                        reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\r\n                        auditAction: \"preliminary\"\r\n\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" }),\r\n                    searchRef: this.searchRef   // ALPD-4229 (30-05-2024) Added searchRef to clear search text\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, preliminaryId)) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            modalShow: false,\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolcode: preliminaryId,\r\n                            operation: \"preliminary\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.preliminaryReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n                }\r\n            } else {\r\n                let toastAlert = this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORDTO\" }) + \" \" + (this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ?\r\n                    this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                    : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" }));\r\n                toast.warn(toastAlert);\r\n            }\r\n        }\r\n    }\r\n    // previewReport = (previewId) => {\r\n\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             nflag: 2,\r\n    //             change: this.props.Login.change,\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //             npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //             ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //             url: this.props.Login.settings[24],\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n    //             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //             userinfo: this.props.Login.userInfo,\r\n\r\n    //             nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //             sprimarykeyname: \"npreregno\",\r\n    //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             action: 'DOWNLOADFILE',\r\n    //             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             doAction: \"download\",\r\n\r\n    //         },\r\n    //         userinfo: this.props.Login.userInfo,\r\n    //         screenName: this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })\r\n    //     }\r\n    //     const masterData = this.props.Login.masterData;\r\n    //     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\r\n\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 openModal: true,\r\n    //                 modalShow: false,\r\n    //                 loadEsign: true,\r\n    //                 screenData: { inputParam, masterData },\r\n    //                 screenName: inputParam.screenName,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n    //         this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n    //                     const updateInfo = {\r\n    //                         typeName: DEFAULT_RETURN,\r\n    //                         data: {\r\n    //                             openModal:true,\r\n    //                             modalShow: false,\r\n    //                             loadEsign: true,\r\n    //                             screenData: { inputParam, masterData },\r\n    //                             screenName: inputParam.screenName,\r\n    //                         }\r\n    //                     }\r\n    //                     this.props.updateStore(updateInfo);\r\n    //                 }\r\n    //                 else {\r\n    //                     this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n    //                     const updateInfo = {\r\n    //                         typeName: DEFAULT_RETURN,\r\n    //                         data: {\r\n    //                             openModal:true,\r\n    //                             modalShow: false,\r\n    //                             loadEsign: true,\r\n    //                             screenData: { inputParam, masterData },\r\n    //                             screenName: inputParam.screenName,\r\n    //                             ncontrolcode:previewId\r\n    //                         }\r\n    //                     }\r\n    //                     this.props.updateStore(updateInfo);\r\n    //                 }\r\n    //                 else {\r\n    //                     this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n    //     }\r\n    // }\r\n\r\n    downloadReleasedValidation = (downloadId) => {\r\n        // ALPD-4118 (15-05-2024) Added code for selection issue when release and edit report template\r\n        const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\r\n        let selectedReleaseHistory = [];\r\n        this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory &&\r\n            this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\r\n        // const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.filter(item => item.ncoaparentcode === this.props.Login.masterData.ncoaparentcode) : [];\r\n        const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [];\r\n        const versionCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nversionno\"]))] : [];\r\n        const reportTemplateCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nreporttemplatecode\"]))] : [];\r\n        if (resultArray.length === 1) {\r\n            if (reportTemplateCheck.length === 1) {\r\n                if (resultArray[0] === transactionStatus.CORRECTION || (resultArray[0] === transactionStatus.PRELIMINARYRELEASE && (versionCheck.length > 1 || (versionCheck.length === 1 && versionCheck[0] !== -1)))) {\r\n                    this.CorrectionComments(downloadId, selectedReleaseHistory);\r\n                } else {\r\n                    this.downloadReleasedFile(downloadId);\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSWITHSAMEREPORTEMPLATE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSWITHSAMESTATUS\" }));\r\n        }\r\n    }\r\n\r\n    CorrectionComments = (controlId, selectedReleaseHistory) => {\r\n        let masterData = this.props.Login.masterData;\r\n        masterData[\"selectedReleaseHistory\"] = selectedReleaseHistory;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadEsign: false,\r\n                screenData: { masterData },\r\n                operation: this.props.Login.operation,\r\n                openModal: true,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }),\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    downloadReleasedFile = () => {\r\n        // ALPD-4118 (15-05-2024) Added code for selection issue when release and edit report template\r\n        const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\r\n        let selectedReleaseHistory = [];\r\n        this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory &&\r\n            this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\r\n\r\n        const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n            // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncontrolcode: downloadId,\r\n                ncoaparentcode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.ncoaparentcode).sort().join(\",\") : \"-1\",\r\n                // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                npreregno: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\r\n                // ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactionsamplecode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.stransactionsamplecode).join(\",\") : \"-1\",\r\n                // ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                ntransactiontestcode: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.stransactiontestcode).join(\",\") : \"-1\",\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                // ntransactionsamplecode: ntransactionsamplecode,\r\n                //ntransactiontestcode: ntransactiontestcode,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                nprimarykey: selectedReleaseHistory.length > 0 ? selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\r\n                listStatus: selectedReleaseHistory[0].ntransactionstatus,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                // nsectioncode: -1,\r\n                sreportcomments: this.state.selectedRecord && this.state.selectedRecord.sreportcomments ? this.state.selectedRecord.sreportcomments : \"\",\r\n                nversionno: this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno ? this.props.Login.masterData.nversionno : 0,\r\n                action: \"Generatefile\",\r\n                doAction: \"generate\",\r\n                nflag: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode,\r\n                reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\r\n                confirmMessage: this.confirmMessage,\r\n                isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                ncoaparenttranscode: selectedReleaseHistory[0].ntransactionstatus,\r\n                genericLabel: this.props.Login.genericLabel,\r\n                generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,  //Added by sonia on 18-08-2024 for JIRA ID:4716 \r\n                newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false, //Added by sonia on 18-08-2024 for JIRA ID:4716 \r\n                //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\r\n                reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\r\n                auditAction: \"release\"\r\n            },\r\n            userinfo: this.props.Login.userInfo,\r\n            methodUrl: \"ReleaseAfterCorrection\",\r\n            classUrl: \"release\",\r\n            operation: \"update\",\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })\r\n\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\r\n        //              && this.state.selectedRecord && this.state.selectedRecord.sreportcomments===\"\" || this.state.selectedRecord.sreportcomments===undefined) {\r\n        //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERDESCRIPTION\" }));  \r\n\r\n        // }\r\n        //     else{\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, downloadId)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    ncontrolcode: downloadId,\r\n                    openModal: true,\r\n                    modalShow: false,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: inputParam.operation,\r\n                    screenName: selectedReleaseHistory.length > 0 &&\r\n                        selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION ? this.props.Login.screenName :\r\n                        this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n\r\n        }\r\n        // }\r\n    }\r\n\r\n    reportcomments = () => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED\r\n                && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n                const inputParam = {\r\n                    // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                    inputData: {\r\n                        change: this.props.Login.change,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        // ntransactionsamplecode: ntransactionsamplecode,\r\n                        //ntransactiontestcode: ntransactiontestcode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        // nTransStatus: ntransCode,\r\n                        // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                        //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                        //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                        // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                        // ncontrolCode,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAREPORT,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        // nsectioncode: -1,\r\n                        nflag: 2,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1\r\n                    },\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n                this.props.getreportcomments(inputParam.inputData, this.props.Login.masterData)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORDTOEDITREPORTCOMMENTS\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    // regenerateReleasedFile = (action) => {\r\n    regenerateReleasedFile = (regenerateId) => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n            const inputParam = {\r\n                // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    sreportno: this.props.Login.masterData.selectedReleaseHistory[0].sreportno,\r\n                    ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\r\n                    ntransactionstatus: String(transactionStatus.RELEASED),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                    napproveconfversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nflag: 2,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    sreportcomments: \"\",\r\n                    nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                    nreporttypecode: REPORTTYPE.COAREPORT,\r\n                    sprimarykeyname: \"npreregno\",\r\n                    action: \"Regenerate\",\r\n                    doAction: \"download\",\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                    ncontrolcode: regenerateId,\r\n                    nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                    reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                    ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                        && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                    isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n\r\n                    generateReport: this.props.Login.settings[64] && parseInt(this.props.Login.settings[64]) === transactionStatus.YES ? true : false,\r\n\r\n                    newTabReport: this.props.Login.settings[70] && parseInt(this.props.Login.settings[70]) === transactionStatus.YES ? true : false,  //Added by sonia on 18-08-2024 for JIRA ID:4716 \r\n                    //Added by Neeraj on 17-06-2024 for JIRA ID:4291  UUID Name or Report Ref NO.\r\n                    reportRefFileName: parseInt(this.props.Login.settings && this.props.Login.settings[63]),\r\n                    auditAction: \"regenerate\"\r\n                },\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }),\r\n                operation: \"update\"\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, regenerateId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        ncontrolcode: regenerateId,\r\n                        openModal: true,\r\n                        modalShow: false,\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        screenName: inputParam.screenName,\r\n                        operation: inputParam.operation,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n            }\r\n        }\r\n    }\r\n\r\n    CorrectionStatus = (correctionId) => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \r\n            const inputParam = {\r\n                // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    url: this.props.Login.settings[24],\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    // ntransactionsamplecode: ntransactionsamplecode,\r\n                    //ntransactiontestcode: ntransactiontestcode,\r\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                    // nTransStatus: ntransCode,\r\n                    // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                    //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                    //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                    // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                    ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                    // ncontrolCode,\r\n                    nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                    nreporttypecode: REPORTTYPE.COAREPORT,\r\n                    sprimarykeyname: \"npreregno\",\r\n                    doAction: \"correction\",\r\n                    nflag: 2,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                    isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                    genericLabel: this.props.Login.genericLabel\r\n                },\r\n                userinfo: this.props.Login.userInfo,\r\n                methodUrl: \"CorrectionStatus\",\r\n                classUrl: \"release\",\r\n                operation: \"update\",\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        ncontrolcode: correctionId,\r\n                        openModal: true,\r\n                        modalShow: false,\r\n                        loadEsign: true,\r\n                        operation: \"update\",\r\n                        screenData: { inputParam, masterData },\r\n                        screenName: inputParam.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n            }\r\n        }\r\n    }\r\n    //     CorrectionStatus = (correctionId) => {\r\n\r\n    //         let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //         // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \r\n    //         const inputParam = {\r\n    //             inputData: {\r\n    //                 change: this.props.Login.change,\r\n    //                 ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //                 npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //                 ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //                 ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //                 url: this.props.Login.settings[24],\r\n    //                 nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                 // ntransactionsamplecode: ntransactionsamplecode,\r\n    //                 //ntransactiontestcode: ntransactiontestcode,\r\n\r\n    //                 ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n    //                 // nTransStatus: ntransCode,\r\n    //                 // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n    //                 //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n    //                 //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n    //                 // ntransactionstatus: String(transactionStatus.RELEASED),\r\n    //                 ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //                 nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                 nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //                 nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //                 nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n    //                 napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //                 nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //                 nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //                 dfrom: obj.fromDate,\r\n    //                 dto: obj.toDate,\r\n    //                 userinfo: this.props.Login.userInfo,\r\n    //                 // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n    //                 // ncontrolCode,\r\n    //                 nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //                 ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //                 nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //                 sprimarykeyname: \"npreregno\",\r\n    //                 doAction: \"correction\",\r\n    //                 nflag: 2,\r\n    //                 ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n    //             },\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             methodUrl: \"CorrectionStatus\",\r\n    //             classUrl: \"release\",\r\n    //             operation: \"update\",\r\n    //             screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n    //         }\r\n    //         const masterData = this.props.Login.masterData;\r\n    //         if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\r\n\r\n    // <<<<<<< .mine\r\n    //             const updateInfo = {\r\n    //                 typeName: DEFAULT_RETURN,\r\n    //                 data: {\r\n    //                     ncontrolcode: correctionId,\r\n    //                     openModal: true,\r\n    //                     modalShow: false,\r\n    //                     loadEsign: true,\r\n    //                     screenData: { inputParam, masterData },\r\n    //                     screenName: inputParam.screenName,\r\n    //                 }\r\n    //             }\r\n    //             this.props.updateStore(updateInfo);\r\n    //         }\r\n    //         else {\r\n    //             this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n    // ||||||| .r76787\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 ncontrolcode:correctionId,\r\n    //                                 openModal:true,\r\n    //                                 modalShow: false,\r\n    //                                 loadEsign: true,\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 screenName: inputParam.screenName,\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n    // =======\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 ncontrolcode:correctionId,\r\n    //                                 openModal:true,\r\n    //                                 modalShow: false,\r\n    //                                 loadEsign: true,\r\n    //                                 operation: \"update\",\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 screenName: inputParam.screenName,\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n    // >>>>>>> .r76792\r\n\r\n    //         }\r\n\r\n\r\n\r\n    //     }\r\n    onSaveModalResultClick = (saveType, data) => {\r\n        if (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })) {\r\n            let masterData = this.props.Login.masterData;\r\n            let controlId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\r\n            let inputParam = {\r\n                inputData: {\r\n                    ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ?\r\n                        this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\r\n                    nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode && this.state.selectedRecord.nreporttemplatecode.value,\r\n                    sreporttemplatename: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode && this.state.selectedRecord.nreporttemplatecode.label,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    doAction: \"editReportTemplate\"\r\n                },\r\n                masterData: masterData,\r\n                selectedRecord: this.state.selectedRecord\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlId)) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        modalShow: false,\r\n                        openModal: true,\r\n                        ncontrolcode: controlId,\r\n                        screenData: { inputParam, masterData },\r\n                        saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.SaveReportTemplate(inputParam)\r\n            }\r\n        } else {\r\n            // ALPD-4026 (18-05-2024) Removed state parameterResults value due to sent latest record. State value have old record\r\n            let ReleaseParameter = this.props.Login.parameterResults && this.props.Login.parameterResults;\r\n            // let selectedRecord = this.state.selectedRecord || {};\r\n            // let selectedId = this.props.Login.selectedId || null;\r\n            // let additionalInfo = this.state.selectedRecord.additionalInfo || [];\r\n            const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n            const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n            const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode);\r\n            const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n            const classUrl = \"release\";\r\n            const formData = new FormData();\r\n            let neditable = 0;\r\n            let releaseParameters = [];\r\n            let inputParam = {};\r\n            // let inputData = [];\r\n            let i = 0;\r\n            if (ReleaseParameter !== undefined && ReleaseParameter.length > 0 && ReleaseParameter[0].sresult !== \"\") {\r\n                ReleaseParameter.map((resultData, index) => {\r\n                    let results = {};\r\n                    if (resultData.editable === true) {\r\n                        neditable = 1;\r\n                        switch (resultData.nparametertypecode) {\r\n                            case 1:\r\n                                results[\"jsondata\"] = {\r\n                                    ncalculatedresult: resultData[\"ncalculatedresult\"],\r\n                                    sresult: resultData.sresult,\r\n                                    sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\",\r\n                                    //Modified by sonia on 6th Aug 2024 for JIRA ID:ALPD-4558\r\n                                    sunitname: resultData.unitcode.label,\r\n                                    sresultaccuracyname: resultData.resultaccuracycode.label,\r\n                                    nresultaccuracycode: resultData.resultaccuracycode.value,\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\r\n                                results[\"sresult\"] = resultData.sresult;\r\n                                results[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                    numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                                results[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                    numericGrade(resultData, results[\"sfinal\"]) : -1;\r\n                                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results['nunitcode'] = resultData.unitcode.value;  //Modified by sonia on 6th Aug 2024 for JIRA ID:ALPD-4558\r\n\r\n\r\n                                break;\r\n                            case 2:\r\n                                results[\"jsondata\"] = {\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                    sfinal: Lims_JSON_stringify(resultData.sfinal, false),\r\n                                    sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\r\n                                    salertmessage: resultData.salertmessage,\r\n                                    additionalInfo: resultData['additionalInfo'],\r\n                                    additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\r\n                                    ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"sresult\"] = resultData.sresult;\r\n\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sfinal\"] = resultData.sresult;\r\n                                results[\"ngradecode\"] = resultData.ngradecode;\r\n                                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results['nunitcode'] = resultData.nunitcode;\r\n                                break;\r\n                            case 3:\r\n                                results[\"jsondata\"] = {\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"sresult\"] = resultData.sresult;\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sfinal\"] = resultData.sresult;\r\n                                results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                                results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results['nunitcode'] = resultData.nunitcode;\r\n                                break;\r\n                            case 4:\r\n                                if (resultData.sfinal.length > 0) {\r\n                                    const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                    const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                    const uniquefilename = create_UUID() + '.' + fileExtension;\r\n                                    results[\"jsondata\"] = {\r\n                                        ssystemfilename: uniquefilename,\r\n                                        nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                        sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sresult\"] = resultData.sresult;\r\n                                    results[\"sfinal\"] = resultData.sresult;\r\n                                    results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                                    results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                    results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                    results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                    results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    results[\"ssystemfilename\"] = uniquefilename;\r\n                                    results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\r\n                                    results['nunitcode'] = resultData.nunitcode;\r\n                                    formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\r\n                                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                                    formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\r\n                                    i++;\r\n                                }\r\n                                else {\r\n                                    const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                    const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                    const uniquefilename = \"\";\r\n                                    results[\"jsondata\"] = {\r\n                                        ssystemfilename: uniquefilename,\r\n                                        nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\r\n                                        ncalculatedresult: 4,\r\n                                        sresult: \"\",\r\n                                        sfinal: \"\"\r\n                                    }\r\n                                    results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                    results[\"ncalculatedresult\"] = 4;\r\n                                    results[\"sresult\"] = \"\";\r\n                                    results[\"sfinal\"] = \"\";\r\n                                    results[\"ngradecode\"] = -1;\r\n                                    results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                    results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                    results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                    results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                    results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                    results[\"ssystemfilename\"] = \"\";\r\n                                    results[\"nfilesize\"] = \"\";\r\n                                    formData.append(\"uploadedFile\" + index, \"\");\r\n                                    formData.append(\"uniquefilename\" + index, \"\");\r\n                                    formData.append(\"ntransactiontestcode\", \"\");\r\n                                }\r\n                                break;\r\n                            default:\r\n                                break;\r\n                        }\r\n                        if (Object.values(results).length > 0) {\r\n                            releaseParameters.push(results);\r\n                        }\r\n                    }\r\n                    return null;\r\n                });\r\n\r\n                if (neditable === 0) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        // ALPD-4026 (18-05-2024) Added modalShow as false and commented openModal: false because of not closing the result correction data grid\r\n                        data: {\r\n                            loading: false,\r\n                            // openModal: false, \r\n                            modalShow: false, parameterResults: [], selectedRecord: {}\r\n                        }\r\n                    }\r\n                    return this.props.updateStore(updateInfo);\r\n                }\r\n\r\n                formData.append(\"filecount\", i);\r\n                formData.append(\"nregtypecode\", nregtypecode);\r\n                formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n                formData.append(\"ncoaparentcode\", this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode);\r\n                formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n                formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\r\n                formData.append(\"resultData\", JSON.stringify(releaseParameters));\r\n\r\n                inputParam = {\r\n                    classUrl: classUrl,\r\n                    methodUrl: \"ReleaseParameter\",\r\n                    inputData: { userinfo: this.props.Login.userInfo, doAction: \"editresult\" },\r\n                    formData: formData,\r\n                    isFileupload: true,\r\n                    operation: \"update\",\r\n                    displayName: this.props.Login.inputParam.displayName, saveType//, postParam\r\n                }\r\n\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true,\r\n                            modalShow: false,\r\n                            openModal: true,\r\n                            ncontrolcode: editResultId,\r\n                            screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\r\n                }\r\n            }\r\n            // else {\r\n            //     const updateInfo = {\r\n            //         typeName: DEFAULT_RETURN,\r\n            //         data: { loading: false, openModal: false }\r\n            //     }\r\n            //     return this.props.updateStore(updateInfo);\r\n            // }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    onSaveModalClick = () => {\r\n        //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\r\n        if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\r\n            this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\r\n        }\r\n        else {\r\n            let ntransactionsamplecode = \"\"\r\n            let ntransactiontestcode = \"\"\r\n            let npreregno = \"\"\r\n            let seletedRecord = this.state.selectedRecord;\r\n            if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n                if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n                    let sample = this.state.npreregno.filter((c, index) => {\r\n                        return this.state.npreregno.indexOf(c) === index;\r\n                    });\r\n                    let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                        return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n                    });\r\n                    let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                        return this.state.ntransactiontestcode.indexOf(c) === index;\r\n                    });\r\n\r\n                    npreregno = sample.map(x => x).join(\",\")\r\n                    ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n                    ntransactiontestcode = test.map(x => x).join(\",\")\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                    const inputParam = {\r\n                        // ALPD-4091 (16-05-2024) Changed FilterStatusValue to realFilterStatusValue\r\n                        // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                        // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n                        inputData: {\r\n                            change: this.props.Login.change,\r\n                            npreregno: String(npreregno),\r\n                            ntransactionsamplecode: ntransactionsamplecode,\r\n                            ntransactiontestcode: ntransactiontestcode,\r\n                            // ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n                            //     && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\r\n                            ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                                ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\r\n                            ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                                && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                            url: this.props.Login.settings[24],\r\n                            ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                            dfrom: obj.fromDate,\r\n                            dto: obj.toDate,\r\n                            //  isPopup:true,\r\n                            isAddPopup: false,\r\n                            isEditPopup: false,\r\n                            nflag: 2,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                            doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\r\n                            isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                            nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode ? this.state.selectedRecord.nreporttemplatecode.value : -1,\r\n                            singleSampleInRelease: this.state.selectedRecord && this.state.selectedRecord.nisarnowiserelease && this.state.selectedRecord.nisarnowiserelease === transactionStatus.YES ?\r\n                                this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease === transactionStatus.YES ? transactionStatus.NO : transactionStatus.YES :\r\n                                this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nisarnowiserelease,\r\n                            nportalrequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired,\r\n                            nismultipleproject: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.nismultipleproject) || transactionStatus.NO,\r\n                            nprojectspecrequired: parseInt(this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired) || transactionStatus.NO, //Added by Dhanushya RI jira id-ALPD-3862 for multiple projects under single release\r\n                            searchRef: this.searchRef   // ALPD-4229 (12-06-2024) Added searchRef to clear searched text\r\n                        },\r\n                        userinfo: this.props.Login.userInfo,\r\n                        methodUrl: \"Release\",\r\n                        classUrl: \"release\",\r\n                        operation: this.props.Login.operation,\r\n                        searchRef: this.searchRef  // ALPD-4229 (30-05-2024) Added searchRef to clear search text\r\n                    }\r\n                    if (this.props.Login.isEditPopup) {\r\n                        inputParam.inputData['nsectioncode'] = this.props.Login.masterData && this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES ? this.props.Login.masterData && this.props.Login.masterData.reportSectionCode : -1\r\n                        inputParam.inputData['isEditSave'] = true;\r\n                    }\r\n                    const masterData = this.props.Login.masterData;\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true,\r\n                                screenData: { inputParam, masterData, seletedRecord },\r\n                                operation: this.props.Login.operation,\r\n                                screenName: this.props.Login.screenName,\r\n                                ncontrolcode: this.props.Login.ncontrolCode\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        if (this.props.Login.isDeletePopup) {\r\n                            this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n                        }\r\n                        else if (this.props.Login.isEditPopup) {\r\n\r\n                            this.props.UpdateApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n                        }\r\n                        else {\r\n                            this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData, seletedRecord)\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n                }\r\n            }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n            }\r\n        }\r\n\r\n    }\r\n    //     onSaveModalClick = () => {\r\n    //         //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\r\n    //         if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\r\n    //             this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\r\n    //         }\r\n    //         else {\r\n    //             let ntransactionsamplecode = \"\"\r\n    //             let ntransactiontestcode = \"\"\r\n    //             let npreregno = \"\"\r\n    //             if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n    //                 if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n    //                     let sample = this.state.npreregno.filter((c, index) => {\r\n    //                         return this.state.npreregno.indexOf(c) === index;\r\n    //                     });\r\n    //                     let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n    //                         return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n    //                     });\r\n    //                     let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n    //                         return this.state.ntransactiontestcode.indexOf(c) === index;\r\n    //                     });\r\n\r\n    //                     npreregno = sample.map(x => x).join(\",\")\r\n    //                     ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n    //                     ntransactiontestcode = test.map(x => x).join(\",\")\r\n    //                     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //                     const inputParam = {\r\n    //                         inputData: {\r\n    //                             change: this.props.Login.change,\r\n    //                             npreregno: String(npreregno),\r\n    //                             ntransactionsamplecode: ntransactionsamplecode,\r\n    //                             ntransactiontestcode: ntransactiontestcode,\r\n    //                             ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n    //                                 && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\r\n    //                             url: this.props.Login.settings[24],\r\n    //                             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //                             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //                             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //                             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //                             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //                             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //                             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //                             dfrom: obj.fromDate,\r\n    //                             dto: obj.toDate,\r\n    //                             isAddPopup: false,\r\n    //                             isEditPopup: false,\r\n    //                             nflag: 2,\r\n    //                             userinfo: this.props.Login.userInfo,\r\n    //                             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //                             doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\r\n    //                         },\r\n    //                         userinfo: this.props.Login.userInfo,\r\n    //                         methodUrl: \"Release\",\r\n    //                         classUrl: \"release\",\r\n    //                         operation: this.props.Login.operation\r\n    //                     }\r\n\r\n    //                     const masterData = this.props.Login.masterData;\r\n    //                     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 loadEsign: true,\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 operation: this.props.Login.operation,\r\n    //                                 screenName: this.props.Login.screenName,\r\n    //                                 ncontrolcode:this.props.Login.ncontrolCode\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         if (this.props.Login.isDeletePopup) {\r\n    //                             this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n    //                         }\r\n    //                         else if (this.props.Login.isEditPopup) {\r\n    // <<<<<<< .mine\r\n    //                             this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n    // ||||||| .r76787\r\n    //                             this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \r\n    // =======\r\n    //                             this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \r\n    // >>>>>>> .r76792\r\n    //                         }\r\n    //                         else {\r\n    //                             this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\r\n    //                         }\r\n    //                     }\r\n\r\n    //                 }\r\n    //                 else {\r\n    //                     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n    //                 }\r\n    //             }\r\n    //             else {\r\n    //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n    //             }\r\n\r\n\r\n    //         }\r\n\r\n    //     }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            SampleGridItem,\r\n            selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n            RegistrationSubTypeList, FilterStatusList, ConfigVersionList,\r\n            //UserSectionList, TestList,\r\n            SingleItem, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem, slideOutDataState,  // ALPD-4896, Added slideOutDataState for slideout datagrid\r\n            stateDynamicDesign, checkedflag, dataState, selectedComment, isInitialRender, DynamicReportFilterTypeItem, DynamicDefaultStructureItem } = this.state;\r\n\r\n        let bool = false;\r\n        let reportFilePath = \"\";\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            reportFilePath = this.props.Login.masterData.ReportPDFFile;\r\n\r\n            bool = true;\r\n        }\r\n        // else {\r\n        //     if (this.state.dataState === undefined) {\r\n        //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n        //     }\r\n        //     //  const npreregno =  [];\r\n        //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        //     bool = true;\r\n\r\n        // }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.isInitialRender !== previousProps.Login.isInitialRender) {\r\n            isInitialRender = this.props.Login.isInitialRender;\r\n            bool = true;\r\n        }\r\n        // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n        //     npreregno = this.props.Login.npreregno\r\n        //     bool = true;\r\n        // }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false);\r\n            // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\r\n            // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            ReporttypeList = ReporttypeListMap.get(\"OptionList\");\r\n            // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\r\n            //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            //  UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            //   TestList = TestListMap.get(\"OptionList\");\r\n\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.selectedComment !== previousProps.Login.masterData.selectedComment) {\r\n            selectedComment = this.props.Login.masterData.selectedComment;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            DynamicReportFilterTypeItem = dynamicColumn.samplefiltertypefields ? dynamicColumn.samplefiltertypefields : [];\r\n            DynamicDefaultStructureItem = dynamicColumn.defaultstructure ? dynamicColumn.defaultstructure : [];\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.slideOutClose !== previousProps.Login.slideOutClose) {\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.isClear !== previousProps.Login.isClear) {\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n\r\n        // ALPD-4896, Added below 2 conditions to handle pagination for both initial screen datagrid and slideout datagrid\r\n        if (this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length < (dataState.skip + dataState.take)) {\r\n            dataState = {\r\n                skip: 0,\r\n                take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length < (slideOutDataState.skip + slideOutDataState.take)) {\r\n            slideOutDataState = {\r\n                skip: 0,\r\n                take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n            }\r\n        }\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            let allData = {\r\n                userRoleControlRights, controlMap,\r\n                SampleGridItem, selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n                RegistrationSubTypeList, FilterStatusList, ConfigVersionList, selectedComment,\r\n                //UserSectionList, TestList,\r\n                SingleItem, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem, stateDynamicDesign, checkedflag, isInitialRender,\r\n                data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], slideOutDataState),   // ALPD-4896, Added slideOutDataState for slideout datagrid\r\n                reportFilePath, DynamicReportFilterTypeItem, DynamicDefaultStructureItem, dataState, slideOutDataState\r\n                //npreregno: this.state.npreregno || [], ntransactionsamplecode: this.state.ntransactionsamplecode || [],\r\n                //ntransactiontestcode: this.state.ntransactiontestcode || []\r\n            }\r\n            // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\r\n            if (this.props.Login.slideOutClose && this.props.Login.slideOutClose === true\r\n                && this.props.Login.isClear !== false\r\n\r\n                // && (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true\r\n                // || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true\r\n                // || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true)\r\n            ) {\r\n                this.setState({ ...allData, npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] });\r\n            }\r\n            else {\r\n                this.setState(allData);\r\n            }\r\n\r\n        }\r\n\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n    sendToPortal = () => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                url: this.props.Login.settings[24],\r\n                isPortal: true,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                allPreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.getReportForPortal(inputParam)\r\n        }\r\n    }\r\n\r\n    editReportTemplate = (inputParam) => {\r\n        if (inputParam.editReportTemplate.ntransactionstatus === transactionStatus.DRAFT || inputParam.editReportTemplate.ntransactionstatus === transactionStatus.CORRECTION) {\r\n            let inputParamData = {\r\n                inputData: {\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    // ALPD-4091 (16-05-2024) Changed ApprovalVersionValue to realApprovalVersionValue\r\n                    napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    nsectioncode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                    nreporttypecode: REPORTTYPE.COAREPORT,\r\n                    nreporttemplatecode: inputParam.editReportTemplate.nreporttemplatecode,\r\n                    ncoaparentcode: inputParam.editReportTemplate.ncoaparentcode,\r\n                    ncoaparenttranscode: inputParam.editReportTemplate.ntransactionstatus,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1\r\n                },\r\n                ncoaparentcode: inputParam.editReportTemplate.ncoaparentcode,\r\n                nreporttemplatecode: inputParam.editReportTemplate.nreporttemplatecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                selectedRecord: this.state.selectedRecord,\r\n                // screenName: \"IDS_REPORTTEMPLATE\"\r\n            }\r\n            this.props.editReportTemplate(inputParamData)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n\r\n    reportHistory = () => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.DRAFT) {\r\n                let inputParam = {\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData\r\n                }\r\n                this.props.versionHistory(inputParam)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            }\r\n        }\r\n    }\r\n    releaseReportHistory = () => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            //if(this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus!==transactionStatus.DRAFT){\r\n            let inputParam = {\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n            }\r\n            this.props.releaseReportHistory(inputParam)\r\n            //    }else{\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            //    }\r\n        }\r\n    }\r\n\r\n    patientInfo = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { isPatientDetails: true, openModal: true, hideSave: true, isAddPopup: false, isEditPopup: false, isDeletePopup: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reportHistoryInfo = () => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode\r\n                },\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.viewReportHistory(inputParam);\r\n        }\r\n    }\r\n\r\n    releaseTestAttachmentData = (actionName) => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    actionName: actionName\r\n                },\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.viewReleaseTestAttachment(inputParam);\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData\"]\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue } = this.props.Login.masterData\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: (realReportTypeValue && realReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(realReportTypeValue && realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n\r\n            ntransactionstatus: realFilterStatusValue && ((realFilterStatusValue.ntransactionstatus !== undefined) || (realFilterStatusValue.ntransactionstatus !== '0')) ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1\r\n        ) {\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n            }\r\n            this.props.getReleasedSample(inputParam, this.state.selectedRecord, this.props.Login.selectedRecord, this.props.Login)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let isPatientDetails = this.props.Login.isPatientDetails;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let hideSave = this.props.Login.hideSave;\r\n        let isAddPopup = this.props.Login.isAddPopup;\r\n        let isEditPopup = this.props.Login.isEditPopup;\r\n        let isDeletePopup = this.props.Login.isDeletePopup;\r\n        let isCorrectionNeed = this.props.Login.isCorrectionNeed;\r\n        let ncontrolcode = this.props.Login.ncontrolcode;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let screenName = this.props.Login.screenName;\r\n        let isPatientReports = this.props.Login.isPatientReports;\r\n        let openModalTitle = this.props.Login.openModalTitle;\r\n        let isReleaseTestAttachment = this.props.Login.isReleaseTestAttachment;\r\n        let isReleaseTestComment = this.props.Login.isReleaseTestComment;\r\n        let isAddReleaseTestAttachment = this.props.Login.isAddReleaseTestAttachment;\r\n        let isAddReleaseTestComment = this.props.Login.isAddReleaseTestComment;\r\n        let isInitialRender = this.props.Login.isInitialRender;\r\n        let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\r\n        let FilterQueryBuilder = this.props.Login.FilterQueryBuilder;\r\n        let slideOutClose = this.props.Login.slideOutClose; // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        const editReportTemplateId = this.state.controlMap.has(\"EditReportTemplate\") && this.state.controlMap.get(\"EditReportTemplate\").ncontrolcode;\r\n        //let projectMasterList =[];\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                // openModal = false;\r\n                isPatientDetails = false;\r\n                hideSave = false;\r\n                isAddPopup = false;\r\n                isEditPopup = false;\r\n                isDeletePopup = true;  //Modified by sonia on 7th Aug 2024 for JIRA ID:ALPD-4576\r\n                isCorrectionNeed = false;\r\n                isPatientReports = false;\r\n                isReleaseTestAttachment = false;\r\n                isReleaseTestComment = false;\r\n                // screenName = undefined;\r\n                selectedRecord = {};\r\n                FilterQueryBuilder = false;\r\n            }\r\n            else {\r\n                slideOutClose = false;\r\n                if (ncontrolcode && (ncontrolcode === editResultId || ncontrolcode === editReportTemplateId)) {\r\n                    modalShow = true;\r\n                    if (ncontrolcode === editReportTemplateId) {\r\n                        openModal = false;\r\n                    }\r\n                }\r\n                if (this.props.Login.screenName !== undefined && this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n                    // || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) \r\n                    || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })) {\r\n                    openModal = false;\r\n                    //  screenName = undefined;\r\n                }\r\n                loadEsign = false;\r\n                // selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n                FilterQueryBuilder = false;\r\n            }\r\n        }\r\n        // When using EsignStateHandle component\r\n        else if (this.props.Login.loadEsignStateHandle) {\r\n            loadEsignStateHandle = false;\r\n        } else if (this.props.Login.FilterQueryBuilder) {\r\n\r\n            FilterQueryBuilder = false;\r\n            screenName = this.props.Login.screenNameCopy;\r\n\r\n        }\r\n        else {\r\n            openModal = (isAddReleaseTestAttachment === true || isAddReleaseTestComment === true) ? true : false;\r\n            isPatientDetails = false;\r\n            hideSave = false;\r\n            isAddPopup = false;\r\n            isEditPopup = false;\r\n            isDeletePopup = false;\r\n            isCorrectionNeed = false;\r\n            isPatientReports = false;\r\n            isReleaseTestAttachment = isAddReleaseTestAttachment === true ? true : false;\r\n            isReleaseTestComment = isAddReleaseTestComment === true ? true : false;\r\n            //screenName = undefined;\r\n            selectedRecord = {};\r\n            openModalTitle = undefined;\r\n            isAddReleaseTestAttachment = false;\r\n            isAddReleaseTestComment = false;\r\n            isInitialRender = false;\r\n            FilterQueryBuilder = false;\r\n            slideOutClose = true;\r\n        }\r\n        // ALPD-4208 (22-05-2024) Changes done for expand function in add sample popup\r\n        // if((this.props.Login.loadEsign && this.props.Login.loadEsign===false) && (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true ||\r\n        //     this.props.Login.isEditPopup && this.props.Login.isEditPopup === true)){\r\n        //     slideOutClose = true;\r\n        // }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, modalShow, loadEsign, screenName, selectedRecord, selectedId: null, isPatientDetails, hideSave, isAddPopup, isEditPopup, isDeletePopup,\r\n                isCorrectionNeed, isPatientReports, openModalTitle, isReleaseTestAttachment, isReleaseTestComment, isAddReleaseTestAttachment, isAddReleaseTestComment, isInitialRender, loadEsignStateHandle,\r\n                FilterQueryBuilder, slideOutClose\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    // closeModalShow = () => {\r\n    //     let loadEsign = this.props.Login.loadEsign;\r\n\r\n    //     let modalShow = this.props.Login.modalShow;\r\n    //     let selectedRecord = this.props.Login.selectedRecord;\r\n    //     let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n    //     // const editResultId =this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n    //     if (this.props.Login.loadEsign) {\r\n    //         loadEsign = false;\r\n    //     } else {\r\n    //         modalShow = false;\r\n    //         ReportmodalShow = false;\r\n    //         selectedRecord = {};\r\n    //     }\r\n\r\n    //     const updateInfo = {\r\n    //         typeName: DEFAULT_RETURN,\r\n    //         data: { modalShow, selectedRecord, selectedId: null, loadEsign, ReportmodalShow },\r\n    //     };\r\n    //     this.props.updateStore(updateInfo);\r\n    // };\r\n\r\n    closeDocModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport, openModal, selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = { ...this.state.selectedRecord } || {};\r\n        if (event.target.type === \"checkbox\") {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onChangeAwesomeQueryBuilder = (immutableTree, config) => {\r\n        //let selectedRecord = this.state.selectedRecord || {};\r\n        const filterquery = QbUtils.sqlFormat(immutableTree, config);\r\n        const filterQueryTreeStr = QbUtils.getTree(immutableTree);\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config, filterquery, filterQueryTreeStr\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\r\n    };\r\n\r\n    onComboChangeAwesomeQueryBuilder = (immutableTree, config, event) => {\r\n        //     let isMandatory=false;\r\n        //    if(event.type==='REMOVE_RULE'){\r\n        //     this.state.DynamicReportFilterTypeItem.map(x=>{\r\n        //         if(x[designProperties.VALUE]===config.fields[event.affectedField]['label'] && x['ismandatory']){\r\n        //             isMandatory=true;\r\n        //         }\r\n        //     })\r\n        //    }\r\n        //    if(!isMandatory){\r\n        const filterquery = QbUtils.sqlFormat(immutableTree, config);\r\n        const filterQueryTreeStr = QbUtils.getTree(immutableTree);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config,\r\n                filterquery, filterQueryTreeStr//,immutableTreeCopy:immutableTree,configCopy:config\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        // }else{\r\n        //     const filterquery =this.props.Login.filterquery;\r\n        //     const filterQueryTreeStr =this.props.Login.filterQueryTreeStr;\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             awesomeTree: this.props.Login.immutableTreeCopy, awesomeConfig: this.props.Login.configCopy, \r\n        //             filterquery, filterQueryTreeStr\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo)\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n        // }\r\n    };\r\n\r\n    handleExecuteClick = (event) => {\r\n        //const selectedRecord = this.state.selectedRecord\r\n        const filterquery = this.props.Login.filterquery\r\n        if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\r\n            const inputparam = {\r\n                component: this.props.Login.seletedFilterComponent,\r\n                userinfo: this.props.Login.userInfo,\r\n                filterquery: filterquery,\r\n                // selectedRecord:this.state.selectedRecord\r\n            }\r\n            this.props.getPatientFilterExecuteData(inputparam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    handleKendoRowClick = (event) => {\r\n        let patientinfo = event.dataItem;\r\n        const component = this.props.Login.seletedFilterComponent;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        const inputparam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            Login: this.props.Login,\r\n            selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n            'dfrom': obj.fromDate,\r\n            'dto': obj.toDate,\r\n            'npreregno': \"0\",\r\n            'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n            \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            'userinfo': this.props.Login.userInfo,\r\n            // ALPD-4091 (16-05-2024) Changed ndesigntemplatemappingcode to realDesignTemplateMappingValue\r\n            'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n            'isAddPopup': true,\r\n            'isPopup': true,\r\n            'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\r\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            userinfo: this.props.Login.userInfo,\r\n            patientinfo: event.dataItem,\r\n            spatientid: event.dataItem.spatientid\r\n            // selectedRecord:this.state.selectedRecord\r\n        }\r\n        // if (component[\"childFields\"]) {\r\n        //     const index = this.props.Login.masterIndex;\r\n        //     let selectedRecord = this.state.selectedMaster || {};\r\n\r\n        //     component[\"childFields\"].map(item => {\r\n        //         let data = item1[item.columnname];\r\n        //         if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n        //             //combocontrol\r\n        //             data = { label: item1[item.sdisplaymember], value: item1[item.svaluemember] };\r\n        //         }\r\n        //         else if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n        //             //Date picker control\r\n        //             data = rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, data);\r\n        //         }\r\n        //         selectedRecord[index][item.columnname] = data;\r\n        //     })\r\n\r\n\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: { selectedMaster: selectedRecord, loadCustomSearchFilter: false, }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const newdata = {\r\n        //         label: item1[component['displaymember']],\r\n        //         value: item1[component['valuemember']], item: { jsondata: { ...item1, jsondata: { ...item1 } } }\r\n        //     };\r\n\r\n        //     this.onComboChange(newdata, component, component['label']);\r\n        // }\r\n        this.props.getPatientWiseSample(inputparam)\r\n    };\r\n\r\n    onInputChange = (event) => {\r\n        let selectedComment = this.props.Login.masterData.selectedComment || {};\r\n        selectedComment[event.target.name] = event.target.value;\r\n        const coaFileInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { selectedComment },\r\n        };\r\n        this.props.updateStore(coaFileInfo);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        let ncontrolcode = this.props.Login.ncontrolcode;\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        let modalName = \"\";\r\n        if (ncontrolcode && ncontrolcode === editResultId) {\r\n            modalName = \"modalShow\";\r\n        }\r\n        else {\r\n            modalName = \"openModal\";\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignforRelease(inputParam, modalName);\r\n    }\r\n\r\n    selectionChange = (event, nflag, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n\r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename },\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n            this.childHeaderSelectionChange(event, preregno, checkedflag)\r\n        }\r\n        else {\r\n            let data = []\r\n            event.dataItems.map(item => {\r\n                data.push({ \"npreregno\": item.npreregno })\r\n            })\r\n            this.childHeaderSelectionChange(event, data, checkedflag)\r\n        }\r\n    }\r\n\r\n    childHeaderSelectionChange = (event, preregno, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n        if (npreregno.length === 0 || npreregno.length === undefined) {\r\n            this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n\r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n\r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                    data.selected = checked\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n        else {\r\n            npreregno.map(value => {\r\n                this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                    item.selected = checked\r\n                    if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                        subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                    }\r\n                })\r\n\r\n            })\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode = subsamplecode;\r\n        if (subsamplecode !== undefined) {\r\n            //  transactionsamplecode = subsamplecode\r\n            let recievedPreRegNo = undefined;\r\n            let recievedTransactionSampleCode = undefined;\r\n            let recievedTransactionTestCode = undefined;\r\n            transactionsamplecode.map(value => {\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                    let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                    let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                    let sendData = {\r\n                        npreregno: nPreRegNo,\r\n                        ntransactionsamplecode: nTransactionSampleCode,\r\n                        ntransactiontestcode: nTransactionTestCode\r\n                    }\r\n                    // this.collectData(item, checkedflag)\r\n                    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                    let sentData = this.collectData(item, sendData);\r\n                    recievedPreRegNo = sentData.npreregno;\r\n                    recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                    recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n                    return item;\r\n                })\r\n            })\r\n            this.setState({\r\n                npreregno: checkedflag === false ? [] : recievedPreRegNo,\r\n                ntransactionsamplecode: checkedflag === false ? [] : recievedTransactionSampleCode,\r\n                ntransactiontestcode: checkedflag === false ? [] : recievedTransactionTestCode\r\n            });\r\n        }\r\n        else {\r\n            let recievedPreRegNo = undefined;\r\n            let recievedTransactionSampleCode = undefined;\r\n            let recievedTransactionTestCode = undefined;\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                    let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                    let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                    let sendData = {\r\n                        npreregno: nPreRegNo,\r\n                        ntransactionsamplecode: nTransactionSampleCode,\r\n                        ntransactiontestcode: nTransactionTestCode\r\n                    }\r\n                    // this.collectData(item, checkedflag)\r\n                    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                    let sentData = this.collectData(item, sendData);\r\n                    recievedPreRegNo = sentData.npreregno;\r\n                    recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                    recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n                    return item;\r\n                })\r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n            this.setState({\r\n                npreregno: checkedflag === false ? [] : recievedPreRegNo,\r\n                ntransactionsamplecode: checkedflag === false ? [] : recievedTransactionSampleCode,\r\n                ntransactiontestcode: checkedflag === false ? [] : recievedTransactionTestCode\r\n            });\r\n        }\r\n    }\r\n\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (event.dataItems.length !== 0) {\r\n            this.state.dataResult.data.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n            this.selectionChange(event, 1, checked);\r\n        }\r\n        else {\r\n            this.setState({ npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] })\r\n        }\r\n    }\r\n\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                item.selected = checked;\r\n            }\r\n        })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected === true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n\r\n            let recievedPreRegNo = undefined;\r\n            let recievedTransactionSampleCode = undefined;\r\n            let recievedTransactionTestCode = undefined;\r\n\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                    let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                    let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                    let sendData = {\r\n                        npreregno: nPreRegNo,\r\n                        ntransactionsamplecode: nTransactionSampleCode,\r\n                        ntransactiontestcode: nTransactionTestCode\r\n                    }\r\n                    // this.collectData(item)\r\n                    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                    let sentData = this.collectData(item, sendData);\r\n                    recievedPreRegNo = sentData.npreregno;\r\n                    recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                    recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n                }\r\n            })\r\n            this.setState({\r\n                npreregno: recievedPreRegNo,\r\n                ntransactionsamplecode: recievedTransactionSampleCode,\r\n                ntransactiontestcode: recievedTransactionTestCode\r\n            });\r\n        }\r\n        else {\r\n            let recievedPreRegNo = undefined;\r\n            let recievedTransactionSampleCode = undefined;\r\n            let recievedTransactionTestCode = undefined;\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                    let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                    let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                    let sendData = {\r\n                        npreregno: nPreRegNo,\r\n                        ntransactionsamplecode: nTransactionSampleCode,\r\n                        ntransactiontestcode: nTransactionTestCode\r\n                    }\r\n                    // this.collectData(item)\r\n                    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                    let sentData = this.collectData(item, sendData);\r\n                    recievedPreRegNo = sentData.npreregno;\r\n                    recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                    recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected === true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n            this.setState({\r\n                npreregno: recievedPreRegNo,\r\n                ntransactionsamplecode: recievedTransactionSampleCode,\r\n                ntransactiontestcode: recievedTransactionTestCode\r\n            });\r\n        }\r\n    }\r\n\r\n    subChildSelectionChange = (event) => {\r\n        let x = []\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let recievedPreRegNo = undefined;\r\n        let recievedTransactionSampleCode = undefined;\r\n        let recievedTransactionTestCode = undefined;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                let nPreRegNo = recievedPreRegNo !== undefined ? recievedPreRegNo : this.state.npreregno;\r\n                let nTransactionSampleCode = recievedTransactionSampleCode !== undefined ? recievedTransactionSampleCode : this.state.ntransactionsamplecode;\r\n                let nTransactionTestCode = recievedTransactionTestCode !== undefined ? recievedTransactionTestCode : this.state.ntransactiontestcode;\r\n                let sendData = {\r\n                    npreregno: nPreRegNo,\r\n                    ntransactionsamplecode: nTransactionSampleCode,\r\n                    ntransactiontestcode: nTransactionTestCode\r\n                }\r\n                // this.collectData(item)\r\n                // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n                let sentData = this.collectData(item, sendData);\r\n                recievedPreRegNo = sentData.npreregno;\r\n                recievedTransactionSampleCode = sentData.ntransactionsamplecode;\r\n                recievedTransactionTestCode = sentData.ntransactiontestcode;\r\n            }\r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                    x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y = x.filter(t => t.selected === true);\r\n        if (x.length === y.length) {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.state.dataResult.data.map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                    x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y1 = x.filter(t => t.selected === true);\r\n        if (x.length === y1.length) {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === y1[0].npreregno) {\r\n                    this.state.dataResult.data[i].selected = true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === event.dataItem.npreregno) {\r\n                    this.state.dataResult.data[i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.setState({\r\n            npreregno: recievedPreRegNo,\r\n            ntransactionsamplecode: recievedTransactionSampleCode,\r\n            ntransactiontestcode: recievedTransactionTestCode\r\n        });\r\n    }\r\n\r\n    // ALPD-4209 (22-05-2024) Modified CollectData function for selection issue\r\n    collectData = (item, recievedData) => {\r\n        //     let npreregno = this.state.npreregno || []\r\n        //     let ntransactionsamplecode = this.state.ntransactionsamplecode || []\r\n        //     let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n        let npreregno = recievedData.npreregno || []\r\n        let ntransactionsamplecode = recievedData.ntransactionsamplecode || []\r\n        let ntransactiontestcode = recievedData.ntransactiontestcode || []\r\n        if (item.selected === true) {\r\n            if (!npreregno.includes(item.npreregno)) {\r\n                npreregno.push(item.npreregno)\r\n            }\r\n            if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n            }\r\n            if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                ntransactiontestcode.push(item.ntransactiontestcode)\r\n            }\r\n        }\r\n        else {\r\n            const preregno = npreregno.filter(data => data !== item.npreregno);\r\n            npreregno = preregno;\r\n            const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\r\n            ntransactionsamplecode = transactionsamplecode;\r\n            const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\r\n            ntransactiontestcode = transactiontestcode;\r\n        }\r\n        //     this.setState({\r\n        //         npreregno: checkedflag === false ? [] : npreregno,\r\n        //         ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode, ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\r\n        //     })\r\n        let returnData = {\r\n            npreregno, ntransactionsamplecode, ntransactiontestcode\r\n        }\r\n        return returnData;\r\n    }\r\n\r\n    viewSelectedReport = (filedata) => {\r\n        delete (filedata.inputData.userinfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                releasedcoareport: filedata.inputData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolCode: filedata.ncontrolCode\r\n            },\r\n            classUrl: \"release\",\r\n            operation: \"view\",\r\n            methodUrl: \"ReleasedCOAReport\",\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    childDataChange = (selectedRecord) => {\r\n        let isInitialRender = false;\r\n        this.setState({\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.props.Login.openModal && (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle) && nextState.isInitialRender === false &&\r\n            (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onMandatoryCheck = () => {\r\n        const mandatoryFields = this.props.Login.loadEsignStateHandle ?\r\n            [\r\n                { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REASON\", \"dataField\": \"esignreason\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                // { \"idsName\": \"IDS_CHECKAGREE\",\"dataField\": \"agree\",  \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"checkbox\" },\r\n\r\n            ]\r\n            :\r\n            this.props.Login.isAddReleaseTestAttachment ? [\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                //  { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ] : this.props.Login.isAddReleaseTestComment ?\r\n                this.state.selectedRecord && this.state.selectedRecord[\"ncommentsubtypecode\"] && this.state.selectedRecord[\"ncommentsubtypecode\"].value === 3 ?\r\n                    [\r\n                        { \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"scommentsubtype\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_ABBREVIATIONNAME\", \"dataField\": \"spredefinedname\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                        { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n                    ]\r\n                    :\r\n                    [\r\n                        { \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"scommentsubtype\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                        { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n                    ] : (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) && this.props.Login.masterData\r\n                        && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE\r\n                        && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection !== transactionStatus.YES) ?\r\n                    [\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_REPORTTEMPLATE\", \"dataField\": \"nreporttemplatecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    ] : (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) && this.props.Login.masterData\r\n                        && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE\r\n                        && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection === transactionStatus.YES)\r\n                        ? [{ \"mandatory\": true, \"idsName\": \"IDS_SECTION\", \"dataField\": \"nsectioncode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_REPORTTEMPLATE\", \"dataField\": \"nreporttemplatecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n                        ] : [];\r\n        {\r\n            (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) && this.props.Login.masterData\r\n                && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE)\r\n                && this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection !== transactionStatus.YES\r\n                && this.props.Login.masterData && this.props.Login.masterData.reportTemplateList && this.props.Login.masterData.reportTemplateList.length === 0\r\n                ?\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATEISNOTFOUND\" })) :\r\n                onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields,\r\n                    this.props.Login.loadEsignStateHandle ? this.validateEsign : this.props.Login.isAddReleaseTestAttachment ? this.onSaveTestAttachment\r\n                        : this.props.Login.isAddReleaseTestComment ? this.onSaveTestComment : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) ?\r\n                            this.onSaveModalClick : \"\",\r\n                    (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) ? this.props.Login.loadEsign : this.props.Login.loadEsignStateHandle));\r\n        }\r\n    }\r\n\r\n    onSaveTestAttachment = (saveType, formRef) => {\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const userInfo = this.props.Login.userInfo;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let fileArray = [];\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            if (this.state.operation === 'create') {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData[\"nformcode\"] = userInfo.nformcode;\r\n                    tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n                    tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n                    tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n                    tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n                    tempData[\"nusercode\"] = userInfo.nusercode;\r\n                    tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n                    tempData[\"jsondata\"] = {\r\n                        stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                        susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                        suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                        slinkname: \"\",\r\n                        sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                        sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\r\n                    }\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    fileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\r\n                    tempData[\"nformcode\"] = userInfo.nformcode;\r\n                    tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n                    tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n                    tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n                    tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n                    tempData[\"nusercode\"] = userInfo.nusercode;\r\n                    tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n                    tempData[\"jsondata\"] = {\r\n                        stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                        susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                        suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                        slinkname: \"\",\r\n                        sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                        sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\r\n                    }\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    formData.append(\"filecount\", acceptedFiles.length);\r\n                    isFileEdited = transactionStatus.YES;\r\n\r\n                    fileArray.push(tempData);\r\n                });\r\n            }\r\n        } else {\r\n            let tempData = {};\r\n            tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\r\n            tempData[\"nformcode\"] = userInfo.nformcode;\r\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n            tempData[\"nusercode\"] = userInfo.nusercode;\r\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n            tempData[\"jsondata\"] = {\r\n                stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                nfilesize: selectedRecord.size,\r\n                ssystemfilename: selectedRecord.ssystemfilename,\r\n                sfilename: Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                slinkname: \"\",\r\n                sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\r\n            }\r\n            fileArray.push(tempData);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"releasetestattachment\", JSON.stringify(fileArray));\r\n        formData.append(\"nattachmenttypecode\", attachmentType.FTP);\r\n        formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\r\n        formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\r\n        formData.append(\"userinfo\", JSON.stringify({\r\n            ...userInfo,\r\n            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n        }));\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                },\r\n                doAction: \"editReleaseTestAttachment\",\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: this.props.Login.operation,\r\n                classUrl: \"release\",\r\n                saveType: saveType,\r\n                formRef: formRef,\r\n                methodUrl: \"ReleaseTestAttachment\",\r\n                selectedRecord: this.state.selectedRecord,\r\n                screenName: this.props.Login.screenName,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        };\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    screenData: { inputParam },\r\n                    loadEsignStateHandle: true,\r\n                    ncontrolcode: this.props.Login.ncontrolCode\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.onSaveReleaseTestAttachment(inputParam);\r\n        }\r\n    }\r\n\r\n    deleteReleaseTestAttachment = (deleteParam) => {\r\n        const url = \"release/deleteReleaseTestAttachment\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED &&\r\n            this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n            let releasetestattachment = {\r\n                \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\r\n                \"npreregno\": deleteParam.selectedRecord.npreregno,\r\n                \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\r\n                \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\r\n                \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\r\n            }\r\n            let inputParam = {\r\n                inputData: {\r\n                    releasetestattachment,\r\n                    url,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.Login.screenName,\r\n                    masterData: this.props.Login.masterData,\r\n                    doAction: \"deleteReleaseTestAttachment\",\r\n                    selectedRecord: this.state.selectedRecord\r\n                }\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        screenData: { inputParam },\r\n                        loadEsignStateHandle: true,\r\n                        ncontrolcode: deleteParam.ncontrolCode\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.onDeleteReleaseTestAttachment(inputParam);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n\r\n    getSapInfoTOSDMS = (saveType) => {\r\n        if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0) {\r\n\r\n        let masterData = this.props.Login.masterData;\r\n        let inputParam = {\r\n            inputData: {\r\n                ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ?\r\n                    this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\r\n                sreleasecomments: this.state.selectedRecord && this.state.selectedRecord.sreleasecomments || \"\",\r\n                userinfo: this.props.Login.userInfo,\r\n                doAction: \"createReleaseComment\"\r\n            },\r\n            masterData: masterData,\r\n            selectedRecord: this.state.selectedRecord\r\n        }\r\n        this.props.getReleaseSapInfoTOSDMS(inputParam)\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_BARCODENOTFOUND\" }));\r\n    }\r\n    }\r\n\r\n    onSaveTestComment = (saveType, formRef) => {\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const userInfo = this.props.Login.userInfo;\r\n        const inputData = {};\r\n        let commentArray = [];\r\n        let comment = {};\r\n        comment[\"nreleasetestcommentcode\"] = selectedRecord.selectedReleaseTestComment && selectedRecord.selectedReleaseTestComment.nreleasetestcommentcode\r\n        comment[\"nformcode\"] = userInfo.nformcode;\r\n        comment[\"npreregno\"] = selectedRecord.npreregno.value;\r\n        comment[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n        comment[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n        comment[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n        comment[\"nusercode\"] = userInfo.nusercode;\r\n        comment[\"nuserrolecode\"] = userInfo.nuserrole;\r\n        comment[\"ncommentsubtypecode\"] = selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.value;\r\n        comment[\"nsampletestcommentscode\"] = selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.value !== \"\" ? selectedRecord.nsampletestcommentscode.value : '-1';\r\n        comment[\"jsondata\"] = {\r\n            scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\r\n            nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n            stestsynonym: selectedRecord.stestsynonym,\r\n            scommentsubtype: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.label,\r\n            spredefinedname: selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.label !== \"\" ? selectedRecord.nsampletestcommentscode.label : '-',\r\n            ncommentsubtypecode: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode,\r\n            nsampletestcommentscode: selectedRecord.nsampletestcommentscode ? selectedRecord.nsampletestcommentscode : '-'\r\n        }\r\n        comment[\"nsamplecommentscode\"] = selectedRecord.nsamplecommentscode ? selectedRecord.nsamplecommentscode.value : -1;\r\n        commentArray.push(comment);\r\n        inputData[\"testcomment\"] = commentArray;\r\n        // }\r\n        formData.append(\"userinfo\", JSON.stringify({\r\n            ...userInfo,\r\n            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n        }));\r\n        formData.append(\"releasetestcomment\", JSON.stringify(commentArray));\r\n        formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                },\r\n                doAction: \"editReleaseTestComment\",\r\n                formData: formData,\r\n                operation: this.props.Login.operation,\r\n                classUrl: \"release\",\r\n                saveType: saveType,\r\n                formRef: formRef,\r\n                methodUrl: \"ReleaseTestComment\",\r\n                selectedRecord: this.state.selectedRecord,\r\n                screenName: this.props.Login.screenName,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        };\r\n        if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsignStateHandle: true,\r\n                    screenData: { inputParam },\r\n                    ncontrolcode: this.props.Login.ncontrolCode\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.onSaveReleaseTestComment(inputParam);\r\n        }\r\n    }\r\n    ReleaseComments = (inputParam) => {\r\n        const ncoaParentCode = this.props.Login.masterData.ncoaparentcode.split(\",\");\r\n        //let selectedReleaseHistory = [];\r\n        // this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && \r\n        //this.props.Login.masterData.selectedReleaseHistory.map(item => ncoaParentCode.includes(item.ncoaparentcode.toString()) && selectedReleaseHistory.push(item));\r\n        let masterData = this.props.Login.masterData;\r\n        masterData[\"selectedReleaseHistory\"] = [];\r\n        masterData[\"selectedReleaseHistory\"].push(inputParam[\"createReleaseComment\"])\r\n        //const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [] ;\r\n        //  if(resultArray[0] !== transactionStatus.RELEASED){\r\n        let inputParamData = {\r\n            inputData: {\r\n                ncoaparentcode: inputParam.createReleaseComment.ncoaparentcode,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: { ...this.props.Login.masterData },\r\n            selectedRecord: this.state.selectedRecord,\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASECOMMENTS\" })\r\n        }\r\n        this.props.openReleaseComments(inputParamData);\r\n        // }\r\n        // else{\r\n        //  toast.warn(this.props.intl.formatMessage({ id: \"IDS_RELEASEDRECORDNOTALLOWEDTOADDCOMMENT\" }));\r\n        // }\r\n    }\r\n    onSaveReleaseComments = (saveType, data) => {\r\n        let masterData = this.props.Login.masterData;\r\n        let controlId = this.state.controlMap.has(\"ReportComment\") && this.state.controlMap.get(\"ReportComment\").ncontrolcode;\r\n        let inputParam = {\r\n            inputData: {\r\n                ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ?\r\n                    this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\r\n                //nreleasetestcommentcode: this.state.selectedRecord && this.state.selectedRecord.nreleasetestcommentcode || -1,\r\n                sreleasecomments: this.state.selectedRecord && this.state.selectedRecord.sreleasecomments || \"\",\r\n                userinfo: this.props.Login.userInfo,\r\n                doAction: \"createReleaseComment\"\r\n            },\r\n            masterData: masterData,\r\n            selectedRecord: this.state.selectedRecord\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, controlId)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    modalShow: false,\r\n                    openModal: true,\r\n                    ncontrolcode: controlId,\r\n                    screenData: { inputParam, masterData },\r\n                    saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.SaveReleaseComment(inputParam)\r\n        }\r\n    }\r\n    deleteReleaseTestComment = (deleteParam) => {\r\n        const url = \"release/deleteReleaseTestComment\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED &&\r\n            this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n            let releasetestcomment = {\r\n                \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\r\n                \"npreregno\": deleteParam.selectedRecord.npreregno,\r\n                \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\r\n                \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\r\n                \"nreleasetestcommentcode\": deleteParam.selectedRecord.nreleasetestcommentcode\r\n            }\r\n            let inputParam = {\r\n                inputData: {\r\n                    releasetestcomment,\r\n                    url,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.Login.screenName,\r\n                    masterData: this.props.Login.masterData,\r\n                    doAction: \"deleteReleaseTestComment\",\r\n                    selectedRecord: this.state.selectedRecord\r\n                }\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsignStateHandle: true,\r\n                        screenData: { inputParam },\r\n                        ncontrolcode: deleteParam.ncontrolCode\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.onDeleteReleaseTestComment(inputParam);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample,\r\n    getApprovedSample,\r\n    //, generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\r\n    previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise, getreportcomments,\r\n    fetchReportInfoReleaseById, UpdateReportComments\r\n    , generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData,\r\n    //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    getSectionForSectionWise, fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory,\r\n    downloadVersionReport, viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool,\r\n    getPatientWiseSample, preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment,\r\n    onDeleteReleaseTestComment, generatereport, editReportTemplate, SaveReportTemplate, deleteSamples, filterTransactionList, validationforAppendSamples,\r\n    getReleaseFilter, SaveReleaseComment, openReleaseComments,getReleaseSapInfoTOSDMS\r\n})(injectIntl(Release));"]},"metadata":{},"sourceType":"module"}