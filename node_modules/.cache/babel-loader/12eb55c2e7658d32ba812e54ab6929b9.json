{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Col,Row,FormGroup,FormLabel,Image}from'react-bootstrap';import{injectIntl,FormattedMessage}from'react-intl';import FormInput from'../../components/form-input/form-input.component';import DropZone from'../../components/dropzone/dropzone.component';import{attachmentType}from'../../components/Enumeration';import{deleteAttachmentDropZone,onDropAttachFileList}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{updateStore}from'../../actions';import{connect}from'react-redux';var AddDigitalSignature=/*#__PURE__*/function(_React$Component){_inherits(AddDigitalSignature,_React$Component);var _super=_createSuper(AddDigitalSignature);function AddDigitalSignature(props){var _this;_classCallCheck(this,AddDigitalSignature);_this=_super.call(this,props);_this.onDropImage=function(attachedFiles,fieldName,maxSize){var selectedDigiSign=_this.state.selectedDigiSign||{};var mandatoryFields=true;selectedDigiSign[fieldName]=onDropAttachFileList(selectedDigiSign[fieldName],attachedFiles,maxSize);if(selectedDigiSign[fieldName].length===0){selectedDigiSign[\"ssecuritykey\"]=\"\";}_this.setState({selectedDigiSign:selectedDigiSign,actionType:\"new\"});_this.props.childDataChange(selectedDigiSign,mandatoryFields);};_this.deleteDigitalSignFile=function(event,file,fieldName){var selectedDigiSign=_this.state.selectedDigiSign||{};var mandatoryFields=true;selectedDigiSign[fieldName]=deleteAttachmentDropZone(selectedDigiSign[fieldName],file);selectedDigiSign[\"ssecuritykey\"]=\"\";_this.props.childDataChange(selectedDigiSign,mandatoryFields);_this.setState({selectedDigiSign:selectedDigiSign,actionType:\"delete\"});};_this.state={selectedDigiSign:_this.props.selectedDigiSign,loading:false};return _this;}_createClass(AddDigitalSignature,[{key:\"onInputChange\",value:function onInputChange(event){var selectedDigiSign=this.state.selectedDigiSign||{};if(selectedDigiSign.sdigisignname!==\"\"&&selectedDigiSign.sdigisignname.length>0){selectedDigiSign[event.target.name]=event.target.value;this.props.childDataChange(selectedDigiSign);this.setState({selectedDigiSign:selectedDigiSign});}}},{key:\"componentDidUpdate\",value:function componentDidUpdate(prevProps){if(this.props.selectedDigiSign!==prevProps.selectedDigiSign){this.setState({selectedDigiSign:this.props.selectedDigiSign});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{isInitialRender:false}};this.props.updateStore(updateInfo);}},{key:\"render\",value:function render(){var _this2=this;// const digitalSignImgPath = this.props.login.settings && this.state.selectedDigiSign && this.state.selectedDigiSign.sdigisignftp ? this.props.login.settings[6]+this.props.login.userInfo.sloginid+\"/\"+this.state.selectedDigiSign.sdigisignftp : null; \nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DropZone,{name:\"sdigisignname\",label:this.props.intl.formatMessage({id:\"IDS_DIGITALSIGNATURE\"}),maxFiles:1,accept:\".pfx\",minSize:0,maxSize:1,onDrop:function onDrop(event){return _this2.onDropImage(event,\"sdigisignname\",1);},multiple:false,editFiles:this.state.selectedDigiSign?this.state.selectedDigiSign:{},attachmentTypeCode:this.props.operation===\"update\"?attachmentType.OTHERS:\"\",fileName:\"sdigisignname\",deleteAttachment:this.deleteDigitalSignFile,actionType:this.props.actionType}),/*#__PURE__*/React.createElement(FormInput,{name:\"ssecuritykey\",label:this.props.intl.formatMessage({id:\"IDS_SECURITYKEY\"}),type:\"password\",required:true,isMandatory:this.state.selectedDigiSign&&this.state.selectedDigiSign.sdigisignname&&(this.state.selectedDigiSign.sdigisignname.hasOwnProperty(\"length\")?this.state.selectedDigiSign.sdigisignname.length>0:this.state.selectedDigiSign.sdigisignname!==\"\")?true:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SECURITYKEY\"}),onChange:function onChange(event){return _this2.onInputChange(event);},value:this.state.selectedDigiSign&&this.state.selectedDigiSign.ssecuritykey?this.state.selectedDigiSign.ssecuritykey:\"\"}))));}}]);return AddDigitalSignature;}(React.Component);export default connect(null,{updateStore:updateStore})(injectIntl(AddDigitalSignature));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/Login/AddDigitalSignature.js"],"names":["React","Col","Row","FormGroup","FormLabel","Image","injectIntl","FormattedMessage","FormInput","DropZone","attachmentType","deleteAttachmentDropZone","onDropAttachFileList","DEFAULT_RETURN","updateStore","connect","AddDigitalSignature","props","onDropImage","attachedFiles","fieldName","maxSize","selectedDigiSign","state","mandatoryFields","length","setState","actionType","childDataChange","deleteDigitalSignFile","event","file","loading","sdigisignname","target","name","value","prevProps","updateInfo","typeName","data","isInitialRender","intl","formatMessage","id","operation","OTHERS","hasOwnProperty","onInputChange","ssecuritykey","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row, FormGroup, FormLabel, Image} from 'react-bootstrap';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport { attachmentType } from '../../components/Enumeration';\r\nimport { deleteAttachmentDropZone, onDropAttachFileList } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { updateStore } from '../../actions';\r\nimport { connect } from 'react-redux';\r\n\r\nclass AddDigitalSignature extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedDigiSign: this.props.selectedDigiSign,\r\n            loading: false\r\n        }\r\n    }\r\n\r\n    onDropImage = (attachedFiles, fieldName, maxSize) => {\r\n\r\n        let selectedDigiSign = this.state.selectedDigiSign || {};\r\n        let mandatoryFields = true;\r\n        selectedDigiSign[fieldName] = onDropAttachFileList(selectedDigiSign[fieldName], attachedFiles, maxSize);\r\n        if(selectedDigiSign[fieldName].length === 0){\r\n            selectedDigiSign[\"ssecuritykey\"] = \"\";\r\n        }\r\n        this.setState({ selectedDigiSign, actionType: \"new\" });\r\n        this.props.childDataChange(selectedDigiSign, mandatoryFields);\r\n    }\r\n\r\n    deleteDigitalSignFile = (event, file, fieldName) => {\r\n        let selectedDigiSign = this.state.selectedDigiSign || {};\r\n        let mandatoryFields = true;\r\n        selectedDigiSign[fieldName] = deleteAttachmentDropZone(selectedDigiSign[fieldName], file)\r\n        selectedDigiSign[\"ssecuritykey\"] = \"\"\r\n        this.props.childDataChange(selectedDigiSign, mandatoryFields);\r\n        this.setState({\r\n            selectedDigiSign, actionType: \"delete\"\r\n        });\r\n    }\r\n\r\n    onInputChange(event) {\r\n        const selectedDigiSign = this.state.selectedDigiSign || {};\r\n        if (selectedDigiSign.sdigisignname !== \"\" && selectedDigiSign.sdigisignname.length > 0) {\r\n            selectedDigiSign[event.target.name] = event.target.value;\r\n            this.props.childDataChange(selectedDigiSign);\r\n            this.setState({ selectedDigiSign });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.selectedDigiSign !== prevProps.selectedDigiSign) {\r\n            this.setState({ selectedDigiSign: this.props.selectedDigiSign })\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() { \r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN, \r\n            data: { isInitialRender: false  } \r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    \r\n\r\n    render() {\r\n        // const digitalSignImgPath = this.props.login.settings && this.state.selectedDigiSign && this.state.selectedDigiSign.sdigisignftp ? this.props.login.settings[6]+this.props.login.userInfo.sloginid+\"/\"+this.state.selectedDigiSign.sdigisignftp : null; \r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <DropZone\r\n                            name={\"sdigisignname\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_DIGITALSIGNATURE\" })}\r\n                            maxFiles={1}\r\n                            accept=\".pfx\"\r\n                            minSize={0}\r\n                            maxSize={1}\r\n                            onDrop={(event) => this.onDropImage(event, \"sdigisignname\", 1)}\r\n                            multiple={false}\r\n                            editFiles={this.state.selectedDigiSign ? this.state.selectedDigiSign : {}}\r\n                            attachmentTypeCode={this.props.operation === \"update\" ? attachmentType.OTHERS : \"\"}\r\n                            fileName=\"sdigisignname\"\r\n                            deleteAttachment={this.deleteDigitalSignFile}\r\n                            actionType={this.props.actionType}\r\n                        />\r\n                        <FormInput\r\n                            name=\"ssecuritykey\"\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_SECURITYKEY\" })}\r\n                            type=\"password\"\r\n                            required={true}\r\n                            isMandatory={this.state.selectedDigiSign && this.state.selectedDigiSign.sdigisignname && (this.state.selectedDigiSign.sdigisignname.hasOwnProperty(\"length\") ?\r\n                                this.state.selectedDigiSign.sdigisignname.length > 0 : this.state.selectedDigiSign.sdigisignname !== \"\") ? true : false}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SECURITYKEY\" })}\r\n                            onChange={(event) => this.onInputChange(event)}\r\n                            value={this.state.selectedDigiSign && this.state.selectedDigiSign.ssecuritykey ? this.state.selectedDigiSign.ssecuritykey : \"\"}\r\n                        />\r\n                    </Col>\r\n                    {/* <Col md={6}>\r\n                        <FormGroup> */}\r\n                            {/* <FormLabel><FormattedMessage id=\"IDS_DIGITALSIGNIMAGE\" message=\"Digital Signature Image\" /></FormLabel> */}\r\n                            {/* {digitalSignImgPath === null ? \"-\" :\r\n                                <a href={digitalSignImgPath} download>\r\n                                    <Image src={digitalSignImgPath}\r\n                                        width={200} height={200}\r\n                                        rounded\r\n                                        title={this.state.selectedDigiSign && this.state.selectedDigiSign.sdigisignname && this.state.selectedDigiSign.sdigisignname} />\r\n                                </a>\r\n                            } */}\r\n                        {/* </FormGroup>\r\n                    </Col> */}\r\n                </Row>\r\n            </>\r\n        );\r\n    };\r\n}\r\n\r\nexport default connect(null, {updateStore})(injectIntl(AddDigitalSignature));"]},"metadata":{},"sourceType":"module"}