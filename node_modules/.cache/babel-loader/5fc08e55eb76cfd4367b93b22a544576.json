{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{transactionStatus}from'../../components/Enumeration';var AddUserSite=function AddUserSite(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sloginid\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_LOGINID\"}),placeholder:props.intl.formatMessage({id:\"sloginid\"}),defaultValue:props.selectedUser[\"sloginid\"],isMandatory:false,required:false,maxLength:20,readOnly:true,onChange:function onChange(event){return props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsitecode\",formLabel:props.intl.formatMessage({id:\"IDS_SITE\"}),placeholder:\"Please Select...\",options:props.siteList,optionId:\"nsitecode\",optionValue:\"ssitename\",value:props.selectedRecord[\"nsitecode\"],isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'nsitecode');}}),/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ndefaultsite\",type:\"switch\",label:props.intl.formatMessage({id:\"IDS_DEFAULTSITE\"}),placeholder:props.intl.formatMessage({id:\"IDS_DEFAULTSITE\"}),defaultValue:props.selectedRecord[\"ndefaultsite\"]===transactionStatus.YES?true:false,isMandatory:false,required:false,checked:props.selectedRecord[\"ndefaultsite\"]===transactionStatus.YES?true:false,onChange:function onChange(event){return props.onInputOnChange(event);}})));};export default injectIntl(AddUserSite);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/AddUserSite.js"],"names":["React","injectIntl","Row","Col","FormInput","CustomSwitch","FormSelectSearch","transactionStatus","AddUserSite","props","intl","formatMessage","id","selectedUser","event","onInputOnChange","siteList","selectedRecord","onComboChange","YES"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,iBAAvB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,OAAQC,iBAAR,KAAgC,8BAAhC,CAEA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAEvB,mBACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,SAAD,EACI,IAAI,CAAE,UADV,CAEI,IAAI,CAAC,MAFT,CAGI,KAAK,CAAGA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,aAAL,CAAzB,CAHZ,CAII,WAAW,CAAGH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,UAAL,CAAzB,CAJlB,CAKI,YAAY,CAAIH,KAAK,CAACI,YAAN,CAAmB,UAAnB,CALpB,CAMI,WAAW,CAAE,KANjB,CAOI,QAAQ,CAAE,KAPd,CAQI,SAAS,CAAE,EARf,CASI,QAAQ,CAAE,IATd,CAUI,QAAQ,CAAE,kBAACC,KAAD,QAAUL,CAAAA,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAAV,EAVd,EADJ,cAeI,oBAAC,gBAAD,EACQ,IAAI,CAAE,WADd,CAEQ,SAAS,CAAGL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,UAAL,CAAzB,CAFpB,CAGQ,WAAW,CAAC,kBAHpB,CAIQ,OAAO,CAAGH,KAAK,CAACO,QAJxB,CAKQ,QAAQ,CAAC,WALjB,CAMQ,WAAW,CAAC,WANpB,CAOQ,KAAK,CAAKP,KAAK,CAACQ,cAAN,CAAqB,WAArB,CAPlB,CAQQ,WAAW,CAAE,IARrB,CASQ,OAAO,CAAE,KATjB,CAUQ,YAAY,CAAE,IAVtB,CAWQ,UAAU,CAAE,KAXpB,CAYQ,iBAAiB,CAAE,IAZ3B,CAaQ,gBAAgB,CAAE,IAb1B,CAcQ,QAAQ,CAAI,kBAACH,KAAD,QAAUL,CAAAA,KAAK,CAACS,aAAN,CAAoBJ,KAApB,CAA2B,WAA3B,CAAV,EAdpB,EAfJ,cAkCI,oBAAC,YAAD,EACI,IAAI,CAAE,cADV,CAEI,IAAI,CAAC,QAFT,CAGI,KAAK,CAAGL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,iBAAL,CAAzB,CAHZ,CAII,WAAW,CAAGH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,iBAAL,CAAzB,CAJlB,CAKI,YAAY,CAAIH,KAAK,CAACQ,cAAN,CAAqB,cAArB,IAAyCV,iBAAiB,CAACY,GAA3D,CAAiE,IAAjE,CAAuE,KAL3F,CAMI,WAAW,CAAE,KANjB,CAOI,QAAQ,CAAE,KAPd,CAQI,OAAO,CAAGV,KAAK,CAACQ,cAAN,CAAqB,cAArB,IAAyCV,iBAAiB,CAACY,GAA3D,CAAiE,IAAjE,CAAuE,KARrF,CASI,QAAQ,CAAE,kBAACL,KAAD,QAAUL,CAAAA,KAAK,CAACM,eAAN,CAAsBD,KAAtB,CAAV,EATd,EAlCJ,CADJ,CADJ,CAmDP,CArDD,CAuDA,cAAeb,CAAAA,UAAU,CAACO,WAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\n\r\nconst AddUserSite = (props) => {\r\n        \r\n        return(\r\n            <Row>                                \r\n                <Col md={12}>\r\n                    <FormInput\r\n                        name={\"sloginid\"}\r\n                        type=\"text\"\r\n                        label={ props.intl.formatMessage({ id:\"IDS_LOGINID\"})}                        \r\n                        placeholder={ props.intl.formatMessage({ id:\"sloginid\"})}\r\n                        defaultValue ={ props.selectedUser[\"sloginid\"] }\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={20}\r\n                        readOnly={true}\r\n                        onChange={(event)=> props.onInputOnChange(event)}                        \r\n                    />\r\n                {/* </Col>\r\n                <Col md={12}> */}\r\n                    <FormSelectSearch\r\n                            name={\"nsitecode\"}\r\n                            formLabel={ props.intl.formatMessage({ id:\"IDS_SITE\"})}                   \r\n                            placeholder=\"Please Select...\"                     \r\n                            options={ props.siteList}\r\n                            optionId=\"nsitecode\"\r\n                            optionValue=\"ssitename\"\r\n                            value = { props.selectedRecord[\"nsitecode\"]}\r\n                            isMandatory={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}\r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            onChange = {(event)=> props.onComboChange(event, 'nsitecode')}\r\n                        />\r\n                {/* </Col>\r\n               \r\n                <Col md={12}> */}\r\n                    <CustomSwitch\r\n                        name={\"ndefaultsite\"}\r\n                        type=\"switch\"                    \r\n                        label={ props.intl.formatMessage({ id:\"IDS_DEFAULTSITE\"})}                        \r\n                        placeholder={ props.intl.formatMessage({ id:\"IDS_DEFAULTSITE\"})}\r\n                        defaultValue ={ props.selectedRecord[\"ndefaultsite\"] === transactionStatus.YES ? true :false}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        checked={ props.selectedRecord[\"ndefaultsite\"] === transactionStatus.YES ? true :false}\r\n                        onChange={(event)=> props.onInputOnChange(event)}                        \r\n                        />  \r\n                </Col>\r\n\r\n        </Row>\r\n     )   \r\n}\r\n\r\nexport default injectIntl(AddUserSite);"]},"metadata":{},"sourceType":"module"}