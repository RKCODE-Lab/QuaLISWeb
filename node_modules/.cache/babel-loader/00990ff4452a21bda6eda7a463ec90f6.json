{"ast":null,"code":"import rsapi from \"../rsapi\";\nimport { toast } from \"react-toastify\";\nimport { constructOptionList, sortData } from \"../components/CommonScript\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nimport { initRequest } from \"./LoginAction\";\nimport Axios from 'axios'; //Test click\n\nexport const getTrainingUpdate = (trainingupdate, userInfo, masterData) => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"trainingupdate/getTrainingUpdateById\", {\n      ntrainingcode: trainingupdate.ntrainingcode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          dataState: undefined\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(error.message);\n    });\n  };\n};\nexport const changeTechniqueFilter = (inputParam, filterTechnique, selectedTechinque) => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    rsapi.post(\"/trainingupdate/get\" + inputParam.methodUrl, inputParam.inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n\n      if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\n        inputParam.searchRef.current.value = \"\";\n        masterData['searchedData'] = undefined;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          masterData: { ...masterData,\n            filterTechnique,\n            nfilterTechnique: inputParam.inputData.nfilterTechnique,\n            selectedTechinque: selectedTechinque.item\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport function getParticipantsAccordion(versionObject) {\n  let {\n    version,\n    masterData,\n    userInfo\n  } = versionObject;\n  return function (dispatch) {\n    if (!(masterData.selectedParticipants.nparticipantcode === version.nparticipantcode)) {\n      const inputData = {\n        nparticipantcode: version.nparticipantcode,\n        userinfo: userInfo\n      }; //const url1=rsapi.post('checklist/getActiveChecklistVersionById',inputData)\n\n      rsapi.post('trainingupdate/getParticipantsAccordion', inputData) // dispatch(initRequest(true));\n      // Axios.all([url2])\n      .then(response => {\n        sortData(masterData);\n        masterData = { ...masterData,\n          selectedParticipants: response.data.selectedParticipants,\n          TraineeDocuments: response.data.TraineeDocuments\n        };\n        sortData(masterData);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            masterData,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }\n  };\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/TrainingUpdateAction.js"],"names":["rsapi","toast","constructOptionList","sortData","DEFAULT_RETURN","initRequest","Axios","getTrainingUpdate","trainingupdate","userInfo","masterData","dispatch","post","ntrainingcode","userinfo","then","response","data","type","payload","loading","dataState","undefined","catch","error","message","changeTechniqueFilter","inputParam","filterTechnique","selectedTechinque","methodUrl","inputData","responseData","searchRef","current","value","nfilterTechnique","item","status","warn","getParticipantsAccordion","versionObject","version","selectedParticipants","nparticipantcode","TraineeDocuments"],"mappings":"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","sourcesContent":["import rsapi from \"../rsapi\";\r\nimport {\r\n    toast\r\n} from \"react-toastify\";\r\nimport {\r\n    constructOptionList,\r\n    sortData\r\n} from \"../components/CommonScript\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport {\r\n    initRequest\r\n} from \"./LoginAction\";\r\nimport Axios from 'axios';\r\n\r\n\r\n//Test click\r\nexport const getTrainingUpdate = (trainingupdate, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"trainingupdate/getTrainingUpdateById\", {\r\n            ntrainingcode: trainingupdate.ntrainingcode,\r\n                userinfo: userInfo\r\n            })\r\n            .then(response => {\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        dataState: undefined\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const changeTechniqueFilter = (inputParam, filterTechnique,selectedTechinque) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/trainingupdate/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterTechnique,\r\n                            nfilterTechnique: inputParam.inputData.nfilterTechnique,\r\n                            selectedTechinque:selectedTechinque.item\r\n\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function getParticipantsAccordion(versionObject) {\r\n    let { version, masterData, userInfo } = versionObject\r\n    return function (dispatch) {\r\n        if (!(masterData.selectedParticipants.nparticipantcode === version.nparticipantcode)) {\r\n            const inputData = { nparticipantcode: version.nparticipantcode, userinfo: userInfo }\r\n            //const url1=rsapi.post('checklist/getActiveChecklistVersionById',inputData)\r\n            rsapi.post('trainingupdate/getParticipantsAccordion', inputData)\r\n            // dispatch(initRequest(true));\r\n            // Axios.all([url2])\r\n                .then(response => {\r\n                    sortData(masterData)\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedParticipants: response.data.selectedParticipants,\r\n                        TraineeDocuments: response.data.TraineeDocuments\r\n                    }\r\n                    sortData(masterData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: { masterData, loading: false }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n                             \r\n       \r\n"]},"metadata":{},"sourceType":"module"}