{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Nav}from'react-bootstrap';import{injectIntl}from'react-intl';import{ListWrapper}from'../../components/client-group.styles';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import DropZone from'../../components/dropzone/dropzone.component';import'../../components/list-master/list-master.styles';import{attachmentType,transactionStatus}from'../../components/Enumeration';import'./result.css';import'../../assets/styles/tree.css';import{MediaHeader,MediaLabel,MediaSubHeader}from'../../components/App.styles';import FormInput from'../../components/form-input/form-input.component';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCalculator}from'@fortawesome/free-solid-svg-icons';var ResultEntryForm=/*#__PURE__*/function(_React$Component){_inherits(ResultEntryForm,_React$Component);var _super=_createSuper(ResultEntryForm);function ResultEntryForm(){var _this;_classCallCheck(this,ResultEntryForm);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.renderSwitch=function(parameter,index,result,screenName){var selectedResultGrade=_this.props.selectedResultGrade;var gradeValues=_this.props.gradeValues;var gradeCode=selectedResultGrade?selectedResultGrade.length>0?selectedResultGrade[index]?selectedResultGrade[index]['ngradecode']:undefined:\"\":\"\";switch(parameter.nparametertypecode){case 1:{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(FormInput,{name:parameter.ntransactionresultcode,type:\"text\",required:false,isMandatory:false,value:_this.props.parameterResults.length>0?_this.props.parameterResults[index]?_this.props.parameterResults[index]['sresult']!==null?_this.props.parameterResults[index]['sresult']:\"\":\"\":\"\"// placeholder={parameter.sparametersynonym}\n//label={parameter.sparametersynonym}\n,onChange:function onChange(event){return _this.props.onResultInputChange(event,index,parameter);},onBlur:function onBlur(){return _this.props.onGradeEvent(_this.props.parameterResults,index,parameter);},maxLength:9,onKeyUp:function onKeyUp(event){return _this.props.onKeyPress(event,index,_this.props.paremterResultcode);}})),parameter.ntestgrouptestformulacode>0?/*#__PURE__*/React.createElement(Col,{md:2,className:\"d-flex product-category justify-content-end icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{title:\"Calculate Formula\",className:\"btn btn-circle outline-grey ml-2\",role:\"button\",id:screenName+-+index,onClick:function onClick(event){return _this.props.getFormula(parameter,_this.props.Login.userInfo,_this.props.Login.masterData,index,event);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{title:\"Calculate Formula\",icon:faCalculator}))):\"\",/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\",style:{color:gradeValues[gradeCode][0]['scolorhexcode']}},gradeCode===undefined?\"\":gradeValues[gradeCode][0]['sgradename']))));}case 2:{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:10},/*#__PURE__*/React.createElement(FormSelectSearch,{name:parameter.ntransactionresultcode,as:\"select\"//formLabel={parameter.sparametersynonym}\n,defaultValue:{\"value\":parameter.sresult,\"label\":parameter.sresult}//  defaultValue={parameter.sresult && (parameter.sresult!=null || parameter.sresult !== \"\") ?  { \"value\": parameter.ngradecode, \"label\": parameter.sresult } :\n//  this.props.predefinedValues ? constructOptionList(this.props.predefinedValues[parameter.ntransactionresultcode]||[],'ngradecode',\n// 'spredefinedname' , undefined, undefined, undefined).get(\"DefaultValue\"):\"\"}\n,options:_this.props.predefinedValues?_this.props.predefinedValues[parameter.ntransactionresultcode]:\"\",optionId:\"ntestgrouptestpredefcode\",optionValue:\"spredefinedname\",isMulti:false,isDisabled:false,isSearchable:true,isClearable:parameter.nresultmandatory===transactionStatus.YES?false:true,isMandatory:false,onKeyUp:function onKeyUp(event){return _this.props.onKeyPress(event,index,_this.props.paremterResultcode);},onChange:function onChange(event){return _this.props.onResultInputChange(event,index,parameter);},onBlur:function onBlur(){return _this.props.onGradeEvent(_this.props.parameterResults,index,parameter);}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\",style:{color:gradeValues[gradeCode][0]['scolorhexcode']}},gradeCode===undefined?\"\":gradeValues[gradeCode][0]['sgradename']))));}case 3:{return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:10},/*#__PURE__*/React.createElement(FormTextarea,{name:parameter.ntransactionresultcode//label={parameter.sparametersynonym}\n//placeholder={parameter.sparametersynonym}\n,type:\"text\",defaultValue:parameter.sresult,isMandatory:false,required:false,maxLength:255,onChange:function onChange(event){return _this.props.onResultInputChange(event,index,parameter);},onBlur:function onBlur(){return _this.props.onGradeEvent(_this.props.parameterResults,index,parameter);}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(ListWrapper,null,/*#__PURE__*/React.createElement(MediaLabel,{className:\"labelfont\",style:{color:gradeValues[gradeCode][0]['scolorhexcode']}},gradeCode===undefined?\"\":gradeValues[gradeCode][0]['sgradename']))));}case 4:{return/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DropZone,{maxFiles:1,isMandatory:false//label={parameter.sparametersynonym}\n,accept:\".pdf\",minSize:0,maxSize:20,multiple:false,editFiles:parameter.sfinal!=null?parameter:\"\",attachmentTypeCode:attachmentType.FTP,fileSizeName:\"nfilesize\",fileName:\"sfinal\",onDrop:function onDrop(event){return _this.props.onResultInputChange(event,index,parameter);}//disabled={disabled}\n}));}default:return\"\";}};return _this;}_createClass(ResultEntryForm,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(Row,null,this.props.parameterResults.map(function(parameterResult,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},_this2.props.needSubSample&&parameterResult.ssamplearno?/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\",style:{color:\"#007bff\"}},parameterResult.ssamplearno):parameterResult.sarno?/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\",style:{color:\"#007bff\"}},parameterResult.sarno):\"\",parameterResult.stestsynonym?/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\",style:{color:\"#505f79\"}},\" \",parameterResult.stestsynonym):\"\",/*#__PURE__*/React.createElement(MediaSubHeader,{className:\"labelfont\",style:{color:\"#97a0af\"}},\" \",parameterResult.sparametersynonym,parameterResult.nresultmandatory===transactionStatus.NO?\"(optional)\":\"\")),_this2.renderSwitch(parameterResult,index,parameterResult.ntransactionresultcode,_this2.props.Login.screenName));}));}}]);return ResultEntryForm;}(React.Component);export default injectIntl(ResultEntryForm);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryForm.jsx"],"names":["React","Row","Col","Nav","injectIntl","ListWrapper","FormSelectSearch","FormTextarea","DropZone","attachmentType","transactionStatus","MediaHeader","MediaLabel","MediaSubHeader","FormInput","FontAwesomeIcon","faCalculator","ResultEntryForm","renderSwitch","parameter","index","result","screenName","selectedResultGrade","props","gradeValues","gradeCode","length","undefined","nparametertypecode","ntransactionresultcode","parameterResults","event","onResultInputChange","onGradeEvent","onKeyPress","paremterResultcode","ntestgrouptestformulacode","getFormula","Login","userInfo","masterData","color","sresult","predefinedValues","nresultmandatory","YES","sfinal","FTP","map","parameterResult","needSubSample","ssamplearno","sarno","stestsynonym","sparametersynonym","NO","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport '../../components/list-master/list-master.styles';\r\nimport { attachmentType, transactionStatus } from '../../components/Enumeration';\r\nimport './result.css';\r\nimport '../../assets/styles/tree.css';\r\nimport { MediaHeader, MediaLabel, MediaSubHeader } from '../../components/App.styles';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCalculator } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\n\r\nclass ResultEntryForm extends React.Component {\r\n    renderSwitch = (parameter, index, result, screenName) => {\r\n        const selectedResultGrade = this.props.selectedResultGrade;\r\n        const gradeValues = this.props.gradeValues;\r\n        const gradeCode = selectedResultGrade ? selectedResultGrade.length > 0 ?\r\n            selectedResultGrade[index] ? selectedResultGrade[index]['ngradecode'] : undefined : \"\" : \"\";\r\n\r\n\r\n        switch (parameter.nparametertypecode) {\r\n            case 1: {\r\n                return (\r\n                    <>\r\n                        <Col md={8}>\r\n                            <FormInput\r\n                                name={parameter.ntransactionresultcode}\r\n                                type=\"text\"\r\n                                required={false}\r\n                                isMandatory={false}\r\n                                value={this.props.parameterResults.length > 0 ?\r\n                                    this.props.parameterResults[index] ? (this.props.parameterResults[index]['sresult'] !== null ? this.props.parameterResults[index]['sresult'] : \"\") : \"\" : \"\"}\r\n                                // placeholder={parameter.sparametersynonym}\r\n                                //label={parameter.sparametersynonym}\r\n                                onChange={(event) => this.props.onResultInputChange(event, index, parameter)}\r\n                                onBlur={() => this.props.onGradeEvent(this.props.parameterResults, index, parameter)}\r\n                                maxLength={9}\r\n                                onKeyUp={(event) => this.props.onKeyPress(event, index, this.props.paremterResultcode)}\r\n                            />\r\n                        </Col>\r\n                        {parameter.ntestgrouptestformulacode > 0 ?\r\n                            <Col md={2} className=\"d-flex product-category justify-content-end icon-group-wrap\">\r\n                                <Nav.Link title=\"Calculate Formula\" className=\"btn btn-circle outline-grey ml-2\" role=\"button\" id={screenName + -+index}\r\n                                    onClick={(event) => this.props.getFormula(parameter, this.props.Login.userInfo, this.props.Login.masterData, index, event)}>\r\n                                    <FontAwesomeIcon title=\"Calculate Formula\" icon={faCalculator} />\r\n                                </Nav.Link>\r\n                            </Col>\r\n                            : \"\"}\r\n                        <Col md={2}>\r\n                            {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                            <ListWrapper><MediaLabel className=\"labelfont\" style={{ color: gradeValues[gradeCode][0]['scolorhexcode'] }}>\r\n                                {gradeCode === undefined ? \"\" : gradeValues[gradeCode][0]['sgradename']}</MediaLabel></ListWrapper>\r\n                            {/* : \"\"} */}\r\n                        </Col>\r\n                    </>\r\n                );\r\n            }\r\n            case 2: {\r\n                return (\r\n                    <>\r\n                        <Col md={10} >\r\n                            <FormSelectSearch\r\n                                name={parameter.ntransactionresultcode}\r\n                                as={\"select\"}\r\n                                //formLabel={parameter.sparametersynonym}\r\n                                defaultValue={{ \"value\": parameter.sresult, \"label\": parameter.sresult }}\r\n                                //  defaultValue={parameter.sresult && (parameter.sresult!=null || parameter.sresult !== \"\") ?  { \"value\": parameter.ngradecode, \"label\": parameter.sresult } :\r\n                                //  this.props.predefinedValues ? constructOptionList(this.props.predefinedValues[parameter.ntransactionresultcode]||[],'ngradecode',\r\n                                // 'spredefinedname' , undefined, undefined, undefined).get(\"DefaultValue\"):\"\"}\r\n\r\n                                options={this.props.predefinedValues ? this.props.predefinedValues[parameter.ntransactionresultcode] : \"\"}\r\n                                optionId={\"ntestgrouptestpredefcode\"}\r\n                                optionValue={\"spredefinedname\"}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={true}\r\n                                isClearable={parameter.nresultmandatory === transactionStatus.YES ? false : true}\r\n                                isMandatory={false}\r\n                                onKeyUp={(event) => this.props.onKeyPress(event, index, this.props.paremterResultcode)}\r\n                                onChange={(event) => this.props.onResultInputChange(event, index, parameter)}\r\n                                onBlur={() => this.props.onGradeEvent(this.props.parameterResults, index, parameter)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                            <ListWrapper><MediaLabel className=\"labelfont\" style={{ color: gradeValues[gradeCode][0]['scolorhexcode'] }}>\r\n                                {gradeCode === undefined ? \"\" : gradeValues[gradeCode][0]['sgradename']}</MediaLabel></ListWrapper>\r\n                            {/* : \"\"} */}\r\n                        </Col>\r\n                    </>\r\n                );\r\n            }\r\n            case 3: {\r\n                return (\r\n                    <>\r\n                        <Col md={10}>\r\n                            <FormTextarea\r\n                                name={parameter.ntransactionresultcode}\r\n                                //label={parameter.sparametersynonym}\r\n                                //placeholder={parameter.sparametersynonym}\r\n                                type=\"text\"\r\n                                defaultValue={parameter.sresult}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                maxLength={255}\r\n                                onChange={(event) => this.props.onResultInputChange(event, index, parameter)}\r\n                                onBlur={() => this.props.onGradeEvent(this.props.parameterResults, index, parameter)}\r\n                            />\r\n                        </Col>\r\n                        <Col md={2}>\r\n                            {/* {this.props.selectedResultGrade.length > 0 ? */}\r\n                            <ListWrapper><MediaLabel className=\"labelfont\" style={{ color: gradeValues[gradeCode][0]['scolorhexcode'] }}>\r\n                                {gradeCode === undefined ? \"\" : gradeValues[gradeCode][0]['sgradename']}</MediaLabel></ListWrapper>\r\n                            {/* : \"\"} */}\r\n                        </Col>\r\n                    </>\r\n                );\r\n            }\r\n            case 4: {\r\n                return (\r\n                    <Col md={12}>\r\n                        <DropZone\r\n                            maxFiles={1}\r\n                            isMandatory={false}\r\n                            //label={parameter.sparametersynonym}\r\n                            accept=\".pdf\"\r\n                            minSize={0}\r\n                            maxSize={20}\r\n                            multiple={false}\r\n                            editFiles={parameter.sfinal != null ? parameter : \"\"}\r\n                            attachmentTypeCode={attachmentType.FTP}\r\n                            fileSizeName=\"nfilesize\"\r\n                            fileName=\"sfinal\"\r\n                            onDrop={(event) => this.props.onResultInputChange(event, index, parameter)}\r\n                        //disabled={disabled}\r\n                        />\r\n                    </Col>\r\n                )\r\n            }\r\n            default:\r\n                return (\"\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                {this.props.parameterResults.map((parameterResult, index) => {\r\n                    return (\r\n                        <>\r\n                            <Col md={12}>\r\n                                {this.props.needSubSample && parameterResult.ssamplearno ?\r\n                                    <MediaHeader className={`labelfont`} style={{ color: \"#007bff\" }}>\r\n                                        {parameterResult.ssamplearno}\r\n                                    </MediaHeader>\r\n                                    : parameterResult.sarno ?\r\n                                        <MediaHeader className={`labelfont`} style={{ color: \"#007bff\" }}>\r\n                                            {parameterResult.sarno}\r\n                                        </MediaHeader>\r\n                                        : \"\"\r\n                                }\r\n                                {parameterResult.stestsynonym ?\r\n                                    <MediaHeader className={`labelfont`} style={{ color: \"#505f79\" }}>\r\n                                        {/* <FontAwesomeIcon icon={faAngleRight} className=\"DeleteIconColor\" /> */}\r\n                                        {/* <FontAwesomeIcon icon={faAngleRight} className=\"DeleteIconColor\" /> */}\r\n                                        { }{ } {parameterResult.stestsynonym}\r\n                                        {/* {parameterResult.sretestrepeatcount} */}\r\n                                    </MediaHeader>\r\n                                    : \"\"}\r\n\r\n                                <MediaSubHeader className={`labelfont`} style={{ color: \"#97a0af\" }}>\r\n                                    {/* <FontAwesomeIcon icon={faAngleRight} className=\"DeleteIconColor\" /> */}\r\n                                    {/* <FontAwesomeIcon icon={faAngleRight} className=\"DeleteIconColor\" />\r\n                                    <FontAwesomeIcon icon={faAngleRight} className=\"DeleteIconColor\" /> */}\r\n                                    { }{ } {parameterResult.sparametersynonym}{ }{ }{parameterResult.nresultmandatory === transactionStatus.NO ? \"(optional)\" : \"\"}\r\n                                </MediaSubHeader>\r\n                            </Col>\r\n                            {this.renderSwitch(parameterResult, index, parameterResult.ntransactionresultcode, this.props.Login.screenName)}\r\n                        </>\r\n                    )\r\n                })\r\n                }\r\n            </Row >\r\n        )\r\n    }\r\n}\r\n\r\nexport default injectIntl(ResultEntryForm);"]},"metadata":{},"sourceType":"module"}