{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\RegisterSlideOut.jsx\";\nimport React, { Component } from 'react';\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { HeaderSpan } from './registration.styled';\nimport './registration.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCartArrowDown, faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { process } from '@progress/kendo-data-query';\nimport { toast } from 'react-toastify';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport { ProductList } from '../product/product.styled';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport ReactTooltip from 'react-tooltip';\nimport SplitterLayout from 'react-splitter-layout';\n\nclass RegisterSlideOut extends Component {\n  constructor(props) {\n    super(props);\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.state = {\n      splitChangeWidthPercentage: 50.6\n    };\n  }\n\n  render() {\n    const testColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      width: \"200px\"\n    }, {\n      \"idsName\": \"IDS_SECTION\",\n      \"dataField\": \"ssectionname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_METHOD\",\n      \"dataField\": \"smethodname\",\n      width: \"150px\"\n    }, {\n      \"idsName\": \"IDS_INSTRUMENTCATEGORY\",\n      \"dataField\": \"sinstrumentcatname\",\n      width: \"200px\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.loadPreregister ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DynamicSlideout, {\n      selectedRecord: this.props.selectedRecord,\n      templateData: this.props.templateData,\n      handleChange: this.props.handleChange,\n      handleDateChange: this.props.handleDateChange,\n      onInputOnChange: this.props.onInputOnChange,\n      onNumericInputChange: this.props.onNumericInputChange,\n      comboData: this.props.comboData,\n      onComboChange: this.props.onComboChange,\n      userInfo: this.props.userInfo,\n      timeZoneList: this.props.timeZoneList,\n      defaultTimeZone: this.props.defaultTimeZone,\n      editfield: this.props.editfield,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\" // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \n      ,\n      onClick: e => this.props.AddSpec(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 45\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      message: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 45\n      }\n    }, this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VERSION\",\n      message: \"Version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 45\n      }\n    }, this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]))))))) : /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      secondaryInitialSize: 270,\n      primaryMinSize: 10 // onSecondaryPaneSizeChange={this.paneSizeChange}\n      ,\n      vertical: true,\n      customClassName: \"detailed-inner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DynamicSlideout, {\n      selectedRecord: this.props.selectedRecord,\n      templateData: this.props.templateData,\n      handleChange: this.props.handleChange,\n      handleDateChange: this.props.handleDateChange,\n      onInputOnChange: this.props.onInputOnChange,\n      onNumericInputChange: this.props.onNumericInputChange,\n      comboData: this.props.comboData,\n      onComboChange: this.props.onComboChange,\n      userInfo: this.props.userInfo,\n      timeZoneList: this.props.timeZoneList,\n      defaultTimeZone: this.props.defaultTimeZone,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\" // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \n      ,\n      onClick: e => this.props.AddSpec(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 45\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      defaultMessage: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 45\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SPECIFICATION\",\n      message: \"Specification\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 45\n      }\n    }, this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_VERSION\",\n      message: \"Version\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 56\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 45\n      }\n    }, this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]))))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 29\n      }\n    }, this.props.nneedsubsample ? /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 49\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBSAMPLE\",\n      defaultMessage: \"Sub Sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 62\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: e => this.props.addsubSample(this.props.specBasedComponent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 53\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUBSAMPLE\",\n      defaultMessage: \"Sub Sample\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 53\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"slno\",\n      primaryKeyField: \"slno\",\n      selectedId: this.props.selectedComponent ? this.props.selectedComponent.slno : null // data={selectedTest}\n      ,\n      dataResult: process(this.props.Component || [], this.props.subSampleDataState),\n      dataState: this.props.subSampleDataState,\n      dataStateChange: this.props.subSampleDataStateChange,\n      extractedColumnList: this.props.subSampleDataGridList,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      hasControlWithOutRights: true,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: true,\n      handleRowClick: this.props.handleComponentRowClick,\n      methodUrl: \"PopUp\",\n      gridHeight: \"400px\",\n      editRecordWORights: inputParam => this.props.editSubSample(inputParam, this.props.specBasedComponent),\n      deleteRecordWORights: this.props.deleteComponent,\n      showdeleteRecordWORights: true,\n      showeditRecordWORights: true,\n      isActionRequired: true,\n      jsonField: 'jsondata' // handleRowClick={this.props.selectSubSample}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 41\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Col, {\n      md: this.props.nneedsubsample ? 6 : 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(HeaderSpan, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 45\n      }\n    }, \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 58\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"add-txt-btn text-right\",\n      onClick: () => this.props.addTest(this.props.selectedComponent, this.props.nneedsubsample, this.props.specBasedComponent),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 49\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 49\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"ntestgrouptestcode\",\n      primaryKeyField: \"ntestgrouptestcode\",\n      selectedId: null //this.state.selectedTestItem.ntestgrouptestcode\n      // data={selectedTest}\n      ,\n      dataResult: process(this.props.SelectedTest || [], this.props.testDataState),\n      dataState: this.props.testDataState,\n      dataStateChange: this.props.testDataStateChange,\n      extractedColumnList: testColumnList,\n      controlMap: new Map(),\n      userRoleControlRights: this.props.userRoleControlRights,\n      hasControlWithOutRights: true,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      pageable: true,\n      scrollable: \"scrollable\",\n      isActionRequired: true // handleRowClick={this.handleRowClick}\n      ,\n      methodUrl: \"PopUp\",\n      gridHeight: \"400px\",\n      deleteRecordWORights: this.props.deleteTest,\n      showdeleteRecordWORights: true,\n      showeditRecordWORights: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n}\n\nexport default injectIntl(RegisterSlideOut);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/RegisterSlideOut.jsx"],"names":["React","Component","Row","Col","Nav","FormGroup","FormLabel","HeaderSpan","FontAwesomeIcon","faCartArrowDown","faFileImport","faPlus","FormattedMessage","injectIntl","process","toast","DataGrid","DynamicSlideout","ReadOnlyText","ProductList","CustomSwitch","ReactTooltip","SplitterLayout","RegisterSlideOut","constructor","props","paneSizeChange","d","setState","splitChangeWidthPercentage","state","render","testColumnList","width","loadPreregister","selectedRecord","templateData","handleChange","handleDateChange","onInputOnChange","onNumericInputChange","comboData","onComboChange","userInfo","timeZoneList","defaultTimeZone","editfield","e","AddSpec","selectedSpec","label","nneedsubsample","addsubSample","specBasedComponent","selectedComponent","slno","subSampleDataState","subSampleDataStateChange","subSampleDataGridList","controlMap","userRoleControlRights","inputParam","handleComponentRowClick","editSubSample","deleteComponent","addTest","SelectedTest","testDataState","testDataStateChange","Map","deleteTest"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { HeaderSpan } from './registration.styled';\r\nimport './registration.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartArrowDown, faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport SplitterLayout from 'react-splitter-layout';\r\n\r\n\r\n\r\nclass RegisterSlideOut extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            splitChangeWidthPercentage: 50.6,\r\n        }\r\n    }\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }\r\n        ]\r\n\r\n\r\n        return (\r\n            <>\r\n                {this.props.loadPreregister ?\r\n                    <>\r\n                        <DynamicSlideout\r\n                            selectedRecord={this.props.selectedRecord}\r\n                            templateData={this.props.templateData}\r\n                            handleChange={this.props.handleChange}\r\n                            handleDateChange={this.props.handleDateChange}\r\n                            onInputOnChange={this.props.onInputOnChange}\r\n                            onNumericInputChange={this.props.onNumericInputChange}\r\n                            comboData={this.props.comboData}\r\n                            onComboChange={this.props.onComboChange}\r\n                            userInfo={this.props.userInfo}\r\n                            timeZoneList={this.props.timeZoneList}\r\n                            defaultTimeZone={this.props.defaultTimeZone}\r\n                            editfield={this.props.editfield}\r\n                        />\r\n                        <Row>\r\n                            <Col md={12} className=\"p-0\">\r\n                                <div className=\"actions-stripe\">\r\n                                    <div className=\"d-flex justify-content-end\">\r\n                                        <HeaderSpan>\r\n                                            <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' /></HeaderSpan>\r\n                                        <Nav.Link className=\"add-txt-btn text-right\"\r\n                                            // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                            onClick={(e) => this.props.AddSpec(e)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                            <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n                            <Col md={12}>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_SPECIFICATION\" message=\"Specification\" /></FormLabel>\r\n                                            <ReadOnlyText>{this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label}</ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_VERSION\" message=\"Version\" /></FormLabel>\r\n                                            <ReadOnlyText>\r\n                                                {this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]}\r\n                                            </ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n                    :\r\n                    <SplitterLayout borderColor=\"#999\"\r\n                        primaryIndex={1}\r\n                        secondaryInitialSize={270}\r\n                        primaryMinSize={10}\r\n                        // onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                        vertical\r\n                        customClassName=\"detailed-inner\"\r\n                    >\r\n                        <DynamicSlideout\r\n                            selectedRecord={this.props.selectedRecord}\r\n                            templateData={this.props.templateData}\r\n                            handleChange={this.props.handleChange}\r\n                            handleDateChange={this.props.handleDateChange}\r\n                            onInputOnChange={this.props.onInputOnChange}\r\n                            onNumericInputChange={this.props.onNumericInputChange}\r\n                            comboData={this.props.comboData}\r\n                            onComboChange={this.props.onComboChange}\r\n                            userInfo={this.props.userInfo}\r\n                            timeZoneList={this.props.timeZoneList}\r\n                            defaultTimeZone={this.props.defaultTimeZone}\r\n                        />\r\n                        <Row noGutters={true}>\r\n                            {/* <Row noGutters={true}> */}\r\n                            <Col md={12} className=\"p-0\">\r\n                                <div className=\"actions-stripe\">\r\n                                    <div className=\"d-flex justify-content-between\">\r\n                                        <HeaderSpan>\r\n                                            <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' /></HeaderSpan>\r\n                                        <Nav.Link className=\"add-txt-btn text-right\"\r\n                                            // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                            onClick={(e) => this.props.AddSpec(e)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                            <FormattedMessage id='IDS_SPECIFICATION' defaultMessage='Specification' />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                </div>\r\n                            </Col>\r\n\r\n                            {/* <Col md={12} className=\"actioncolor\">\r\n                        <ProductList className=\"d-flex justify-content-end dropdown badget_menu hideboxshadow\">\r\n                            <CustomSwitch\r\n                                name={\"ntransactionstatus\"}\r\n                                type=\"switch\"\r\n                                parentClassName=\"customswitchcss\"\r\n                                labelClassName={\"mb-0 paddingleft5\"}\r\n                                label={\"IDS_ALLTEST\"}\r\n                                placeholder={this.props.formatMessage({ id: \"IDS_ALLTEST\" })}\r\n                                defaultValue={this.props.selectedRecord[\"ntransactionstatus\"] === 3 ? true : false}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                checked={this.props.selectedRecord[\"ntransactionstatus\"] === 3 ? true : false}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                            />\r\n                            <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                            <Nav.Link className=\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\"\r\n                                href=\"#\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_GETCOMPONENTS\" })}\r\n                            >\r\n                                <FontAwesomeIcon icon={faCartArrowDown} className=\"ActionIconColor\"\r\n                                    onClick={(event) => getComponent(event, this.props.selectedRecord)}\r\n                                />\r\n                            </Nav.Link>\r\n                            <Nav.Link className=\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\" href=\"\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTEXCEL\" })}\r\n                                hidden={false}>\r\n                                <input type=\"file\" style={{ display: \"none\" }} />\r\n                                <FontAwesomeIcon icon={faFileImport} className=\"ActionIconColor\" onClick={(event) => this.props.AddFile()}>\r\n                                </FontAwesomeIcon>\r\n\r\n                            </Nav.Link>\r\n                        </ProductList>\r\n                    </Col> */}\r\n                            {/* </Row> */}\r\n                            <Col md={12}>\r\n                                <Row>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_SPECIFICATION\" message=\"Specification\" /></FormLabel>\r\n                                            <ReadOnlyText>{this.props.selectedSpec[\"nallottedspeccode\"] && this.props.selectedSpec[\"nallottedspeccode\"].label}</ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                    <Col md={6}>\r\n                                        <FormGroup>\r\n                                            <FormLabel><FormattedMessage id=\"IDS_VERSION\" message=\"Version\" /></FormLabel>\r\n                                            <ReadOnlyText>\r\n                                                {this.props.selectedSpec && this.props.selectedSpec[\"sversion\"]}\r\n                                            </ReadOnlyText>\r\n                                        </FormGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                            {/* {this.props.nneedsubsample === 4 ?\r\n                    <Row>\r\n                        <Col md={12} className=\"p-0\">\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <HeaderSpan>\r\n                                        <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' /></HeaderSpan>\r\n                                    <Nav.Link className=\"add-txt-btn text-right\"\r\n                                        onClick={(e) => this.props.AddComponent(e)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                        <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            <DataGrid\r\n                                key=\"slno\"\r\n                                primaryKeyField=\"slno\"\r\n                                selectedId={this.props.selectedComponent ? this.props.selectedComponent.slno : null}\r\n                                dataResult={process(this.props.Component || [], this.props.componentDataState)}\r\n                                dataState={this.props.componentDataState}\r\n                                dataStateChange={this.props.componentDataStateChange}\r\n                                extractedColumnList={this.props.componentColumnList}\r\n                                controlMap={this.props.controlMap}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                hasControlWithOutRights={true}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                pageable={true}\r\n                                scrollable={\"scrollable\"}\r\n                                isActionRequired={true}\r\n                                handleRowClick={this.props.handleComponentRowClick}\r\n                                methodUrl=\"PopUp\"\r\n                                gridHeight={\"350px\"}\r\n                                editRecordWORights={this.props.editComponent}\r\n                                deleteRecordWORights={this.props.deleteComponent}\r\n                                showdeleteRecordWORights={true}\r\n                                showeditRecordWORights={true}\r\n                            >\r\n                            </DataGrid>\r\n                        </Col>\r\n\r\n                    </Row>\r\n                    : \"\"} */}\r\n                            <Row>\r\n                                {this.props.nneedsubsample ?\r\n                                    <Col md={6}>\r\n                                        <div className=\"actions-stripe\">\r\n                                            <div className=\"d-flex justify-content-between\">\r\n                                                <HeaderSpan> <FormattedMessage id='IDS_SUBSAMPLE' defaultMessage='Sub Sample' /></HeaderSpan>\r\n                                                <Nav.Link className=\"add-txt-btn text-right\" onClick={(e) => this.props.addsubSample(this.props.specBasedComponent)} >\r\n                                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                    <FormattedMessage id='IDS_SUBSAMPLE' defaultMessage='Sub Sample' />\r\n                                                </Nav.Link>\r\n                                            </div>\r\n                                        </div>\r\n                                        <DataGrid\r\n                                            key=\"slno\"\r\n                                            primaryKeyField=\"slno\"\r\n                                            selectedId={this.props.selectedComponent ?\r\n                                                this.props.selectedComponent.slno : null}\r\n                                            // data={selectedTest}\r\n                                            dataResult={process(this.props.Component || [],\r\n                                                this.props.subSampleDataState)}\r\n                                            dataState={this.props.subSampleDataState}\r\n                                            dataStateChange={this.props.subSampleDataStateChange}\r\n                                            extractedColumnList={this.props.subSampleDataGridList}\r\n                                            controlMap={this.props.controlMap}\r\n                                            userRoleControlRights={this.props.userRoleControlRights}\r\n                                            hasControlWithOutRights={true}\r\n                                            inputParam={this.props.inputParam}\r\n                                            userInfo={this.props.userInfo}\r\n                                            pageable={true}\r\n                                            scrollable={\"scrollable\"}\r\n                                            isActionRequired={true}\r\n                                            handleRowClick={this.props.handleComponentRowClick}\r\n                                            methodUrl=\"PopUp\"\r\n                                            gridHeight={\"400px\"}\r\n                                            editRecordWORights={(inputParam) => this.props.editSubSample(inputParam, this.props.specBasedComponent)}\r\n                                            deleteRecordWORights={this.props.deleteComponent}\r\n                                            showdeleteRecordWORights={true}\r\n                                            showeditRecordWORights={true}\r\n                                            isActionRequired={true}\r\n                                            jsonField={'jsondata'}\r\n                                        // handleRowClick={this.props.selectSubSample}\r\n                                        />\r\n                                    </Col> : \"\"}\r\n                                <Col md={this.props.nneedsubsample ? 6 : 12}>\r\n                                    <div className=\"actions-stripe\">\r\n                                        <div className=\"d-flex justify-content-between\">\r\n                                            <HeaderSpan> <FormattedMessage id='IDS_TEST' defaultMessage='Test' /></HeaderSpan>\r\n                                            <Nav.Link className=\"add-txt-btn text-right\" onClick={() => this.props.addTest(this.props.selectedComponent,\r\n                                                this.props.nneedsubsample, this.props.specBasedComponent)} >\r\n                                                <FontAwesomeIcon icon={faPlus} /> { }\r\n                                                <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </div>\r\n                                    <DataGrid\r\n                                        key=\"ntestgrouptestcode\"\r\n                                        primaryKeyField=\"ntestgrouptestcode\"\r\n                                        selectedId={null}//this.state.selectedTestItem.ntestgrouptestcode\r\n                                        // data={selectedTest}\r\n                                        dataResult={process(this.props.SelectedTest || [], this.props.testDataState)}\r\n                                        dataState={this.props.testDataState}\r\n                                        dataStateChange={this.props.testDataStateChange}\r\n                                        extractedColumnList={testColumnList}\r\n                                        controlMap={new Map()}\r\n                                        userRoleControlRights={this.props.userRoleControlRights}\r\n                                        hasControlWithOutRights={true}\r\n                                        inputParam={this.props.inputParam}\r\n                                        userInfo={this.props.userInfo}\r\n                                        pageable={true}\r\n                                        scrollable={\"scrollable\"}\r\n                                        isActionRequired={true}\r\n                                        // handleRowClick={this.handleRowClick}\r\n                                        methodUrl=\"PopUp\"\r\n                                        gridHeight={\"400px\"}\r\n                                        deleteRecordWORights={this.props.deleteTest}\r\n                                        showdeleteRecordWORights={true}\r\n                                        showeditRecordWORights={false}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Row>\r\n                    </SplitterLayout>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default injectIntl(RegisterSlideOut)\r\n"]},"metadata":{},"sourceType":"module"}