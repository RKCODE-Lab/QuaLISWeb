{"ast":null,"code":"'use strict';\n\nvar _ = require('underscore');\n\nmodule.exports = function (dialect) {\n  var parentValueBlock = dialect.blocks.get('value');\n  dialect.blocks.set('value', function (params) {\n    var value = params.value;\n    var result;\n\n    if (_.isArray(value)) {\n      if (value.length) {\n        result = 'array[' + _(value).map(function (item) {\n          return dialect.builder._pushValue(item);\n        }).join(', ') + ']';\n      } else {\n        result = dialect.builder._pushValue('{}');\n      }\n    } else if (_.isObject(value)) {\n      result = dialect.builder._pushValue(JSON.stringify(value));\n    } else {\n      result = parentValueBlock(params);\n    }\n\n    return result;\n  });\n  dialect.blocks.add('explain:options', function (params) {\n    return '(' + _(params.options).chain().pick(['analyze', 'verbose', 'costs', 'buffers', 'timing', 'format']).map(function (value, key) {\n      return key + ' ' + value;\n    }).value().join(', ') + ')';\n  });\n  dialect.blocks.add('explain:analyze', function () {\n    return 'analyze';\n  });\n  dialect.blocks.add('explain:verbose', function () {\n    return 'verbose';\n  });\n  dialect.blocks.add('distinctOn', function (params) {\n    var distinctOn = params.distinctOn;\n    var result = '';\n    if (_.isString(distinctOn)) distinctOn = [distinctOn];\n\n    if (_.isArray(distinctOn)) {\n      result = _(distinctOn).map(function (distinctOnField) {\n        return dialect._wrapIdentifier(distinctOnField);\n      }).join(', ');\n    }\n\n    if (result) {\n      result = 'distinct on (' + result + ')';\n    }\n\n    return result;\n  });\n};","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/node_modules/json-sql/lib/dialects/postgresql/blocks.js"],"names":["_","require","module","exports","dialect","parentValueBlock","blocks","get","set","params","value","result","isArray","length","map","item","builder","_pushValue","join","isObject","JSON","stringify","add","options","chain","pick","key","distinctOn","isString","distinctOnField","_wrapIdentifier"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _ = require('underscore');\n\nmodule.exports = function(dialect) {\n\tvar parentValueBlock = dialect.blocks.get('value');\n\tdialect.blocks.set('value', function(params) {\n\t\tvar value = params.value;\n\n\t\tvar result;\n\t\tif (_.isArray(value)) {\n\t\t\tif (value.length) {\n\t\t\t\tresult = 'array[' + _(value).map(function(item) {\n\t\t\t\t\treturn dialect.builder._pushValue(item);\n\t\t\t\t}).join(', ') + ']';\n\t\t\t} else {\n\t\t\t\tresult = dialect.builder._pushValue('{}');\n\t\t\t}\n\t\t} else if (_.isObject(value)) {\n\t\t\tresult = dialect.builder._pushValue(JSON.stringify(value));\n\t\t} else {\n\t\t\tresult = parentValueBlock(params);\n\t\t}\n\n\t\treturn result;\n\t});\n\n\tdialect.blocks.add('explain:options', function(params) {\n\t\treturn '(' +\n\t\t\t_(params.options)\n\t\t\t\t.chain()\n\t\t\t\t.pick(['analyze', 'verbose', 'costs', 'buffers', 'timing', 'format'])\n\t\t\t\t.map(function(value, key) {\n\t\t\t\t\treturn key + ' ' + value;\n\t\t\t\t})\n\t\t\t\t.value()\n\t\t\t\t.join(', ') +\n\t\t\t')';\n\t});\n\n\tdialect.blocks.add('explain:analyze', function() {\n\t\treturn 'analyze';\n\t});\n\n\tdialect.blocks.add('explain:verbose', function() {\n\t\treturn 'verbose';\n\t});\n\n\tdialect.blocks.add('distinctOn', function(params) {\n\t\tvar distinctOn = params.distinctOn;\n\t\tvar result = '';\n\n\t\tif (_.isString(distinctOn)) distinctOn = [distinctOn];\n\n\t\tif (_.isArray(distinctOn)) {\n\t\t\tresult = _(distinctOn).map(function(distinctOnField) {\n\t\t\t\treturn dialect._wrapIdentifier(distinctOnField);\n\t\t\t}).join(', ');\n\t\t}\n\n\t\tif (result) {\n\t\t\tresult = 'distinct on (' + result + ')';\n\t\t}\n\n\t\treturn result;\n\t});\n};\n"]},"metadata":{},"sourceType":"script"}