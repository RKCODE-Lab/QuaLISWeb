{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import{process}from'@progress/kendo-data-query';import ResultGrid from'../resultgrid/ResultGrid';import{sortData}from'../../components/CommonScript';var ResultEntryResultsTab=/*#__PURE__*/function(_React$Component){_inherits(ResultEntryResultsTab,_React$Component);var _super=_createSuper(ResultEntryResultsTab);function ResultEntryResultsTab(props){var _this;_classCallCheck(this,ResultEntryResultsTab);_this=_super.call(this,props);_this.state={testParameters:_this.props.masterData.TestParameters//sortData(this.props.masterData.TestParameters || [],'ascending','ntransactionresultcode')\n};return _this;}_createClass(ResultEntryResultsTab,[{key:\"render\",value:function render(){//console.log(\"TestParameters:\", this.props.masterData.TestParameters);\nvar extractedColumnList=[];extractedColumnList.push({\"idsName\":\"IDS_PARAMETERNAME\",\"dataField\":\"sparametersynonym\",\"width\":\"155px\"},{\"idsName\":\"IDS_FINALRESULT\",\"dataField\":\"sfinal\",\"width\":\"125px\",\"fieldType\":\"attachment\"},{\"idsName\":\"IDS_PASSFLAG\",\"dataField\":\"sgradename\",\"width\":\"110px\",\"fieldType\":\"gradeColumn\"},{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"155px\"},{\"idsName\":\"IDS_CHECKLIST\",\"dataField\":\"schecklistname\",\"width\":\"125px\",\"fieldType\":\"checklistview\",\"checklistKey\":\"nchecklistversioncode\"});if(this.props.masterData[\"RegSubTypeValue\"]&&this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"});}else{extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"155px\"});}//  {/* Don't delete these below commented object, because this feature is needed for Agaram LIMS */}\nvar detailedFieldList=[{\"idsName\":\"IDS_PARAMETERTYPE\",\"dataField\":\"sparametertypename\"},{\"idsName\":\"IDS_RESULTS\",\"dataField\":\"sresult\",\"width\":\"125px\",\"fieldType\":\"attachment\"},{\"idsName\":\"IDS_ENFORCESTATUS\",\"dataField\":\"senforcestatus\",\"width\":\"150px\"},{\"idsName\":\"IDS_CHECKLIST\",\"dataField\":\"schecklistname\",\"width\":\"125px\",\"fieldType\":\"checklistview\",\"checklistKey\":\"nchecklistversioncode\"},{\"idsName\":\"IDS_MINA\",\"dataField\":\"smina\"},{\"idsName\":\"IDS_MAXA\",\"dataField\":\"smaxa\"},{\"idsName\":\"IDS_MINB\",\"dataField\":\"sminb\"},{\"idsName\":\"IDS_MAXB\",\"dataField\":\"smaxb\"},{\"idsName\":\"IDS_ENTERBY\",\"dataField\":\"senteredby\"},{\"idsName\":\"IDS_ENTERROLE\",\"dataField\":\"suserrolename\"},{\"idsName\":\"IDS_ENTERDATE\",\"dataField\":\"sentereddate\"},{\"idsName\":\"IDS_SPECDESCRIPTION\",\"dataField\":\"sspecdesc\"},{\"idsName\":\"IDS_PARAMETERCOMMENTS\",\"dataField\":\"sresultcomment\"}];var attachmentParam={classUrl:\"approval\",operation:\"view\",methodUrl:\"Attachment\",userinfo:this.props.userInfo};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ResultGrid,{primaryKeyField:\"ntransactionresultcode\",data:this.props.masterData.TestParameters,dataResult:process(this.props.masterData.TestParameters||[],this.props.dataState),dataState:this.props.dataState,dataStateChange:this.props.dataStateChange,expandField:\"expanded\",detailedFieldList:detailedFieldList,extractedColumnList:extractedColumnList,editParam:this.props.parameterParam,checklistParam:this.props.checklistParam,userInfo:this.props.userInfo,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,inputParam:this.props.inputParam,fetchRecord:this.props.fetchRecord,checkListRecord:this.props.checkListRecord,pageable:true,viewFile:this.props.viewFile,isComponent:true,isActionRequired:true,isToolBarRequired:false,scrollable:\"scrollable\",selectedId:this.props.selectedId,gridHeight:\"500px !important\",attachmentParam:attachmentParam,getMeanTestParameter:this.props.getMeanTestParameter,meanParam:this.props.meanParam}))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.masterData.TestParameters!==previousProps.masterData.TestParameters){this.setState({testParameters:sortData(this.props.masterData.TestParameters,'ascending','ntransactionresultcode')});}if(this.props.masterData.TestParameters&&this.props.masterData.TestParameters!==this.state.testParameters){this.setState({testParameters:sortData(this.props.masterData.TestParameters,'ascending','ntransactionresultcode')});}}}]);return ResultEntryResultsTab;}(React.Component);export default injectIntl(ResultEntryResultsTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryResultsTab.jsx"],"names":["React","Row","Col","injectIntl","process","ResultGrid","sortData","ResultEntryResultsTab","props","state","testParameters","masterData","TestParameters","extractedColumnList","push","nneedsubsample","detailedFieldList","attachmentParam","classUrl","operation","methodUrl","userinfo","userInfo","dataState","dataStateChange","parameterParam","checklistParam","controlMap","userRoleControlRights","inputParam","fetchRecord","checkListRecord","viewFile","selectedId","getMeanTestParameter","meanParam","previousProps","setState","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ResultGrid from '../resultgrid/ResultGrid';\r\nimport { sortData } from '../../components/CommonScript';\r\n\r\nclass ResultEntryResultsTab extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            testParameters: this.props.masterData.TestParameters  //sortData(this.props.masterData.TestParameters || [],'ascending','ntransactionresultcode')\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"TestParameters:\", this.props.masterData.TestParameters);\r\n        const extractedColumnList = [];\r\n        \r\n            extractedColumnList.push(\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"125px\", \"fieldType\": \"attachment\" },\r\n            { \"idsName\": \"IDS_PASSFLAG\", \"dataField\": \"sgradename\", \"width\": \"110px\", \"fieldType\": \"gradeColumn\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"155px\" },\r\n            { \"idsName\": \"IDS_CHECKLIST\", \"dataField\": \"schecklistname\", \"width\": \"125px\", \"fieldType\": \"checklistview\", \"checklistKey\": \"nchecklistversioncode\" },\r\n            );\r\n            if (this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){\r\n                extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n            }\r\n            else{\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n            }\r\n        //  {/* Don't delete these below commented object, because this feature is needed for Agaram LIMS */}\r\n        const detailedFieldList = [\r\n            { \"idsName\": \"IDS_PARAMETERTYPE\", \"dataField\": \"sparametertypename\" },\r\n            { \"idsName\": \"IDS_RESULTS\", \"dataField\": \"sresult\", \"width\": \"125px\", \"fieldType\": \"attachment\" },\r\n            { \"idsName\": \"IDS_ENFORCESTATUS\", \"dataField\": \"senforcestatus\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_CHECKLIST\", \"dataField\": \"schecklistname\", \"width\": \"125px\", \"fieldType\": \"checklistview\", \"checklistKey\": \"nchecklistversioncode\" },\r\n            { \"idsName\": \"IDS_MINA\", \"dataField\": \"smina\" },\r\n            { \"idsName\": \"IDS_MAXA\", \"dataField\": \"smaxa\" },\r\n            { \"idsName\": \"IDS_MINB\", \"dataField\": \"sminb\" },\r\n            { \"idsName\": \"IDS_MAXB\", \"dataField\": \"smaxb\" },\r\n            { \"idsName\": \"IDS_ENTERBY\", \"dataField\": \"senteredby\" },\r\n            { \"idsName\": \"IDS_ENTERROLE\", \"dataField\": \"suserrolename\" },\r\n            { \"idsName\": \"IDS_ENTERDATE\", \"dataField\": \"sentereddate\" },\r\n            { \"idsName\": \"IDS_SPECDESCRIPTION\", \"dataField\": \"sspecdesc\" },\r\n            { \"idsName\": \"IDS_PARAMETERCOMMENTS\", \"dataField\": \"sresultcomment\" }\r\n        ]\r\n        const attachmentParam = {\r\n            classUrl: \"approval\",\r\n            operation: \"view\",\r\n            methodUrl: \"Attachment\",\r\n            userinfo: this.props.userInfo\r\n\r\n        }\r\n        return (\r\n            <>\r\n                <Row className=\"no-gutters\">\r\n                    <Col md={12}>\r\n                        <ResultGrid\r\n                            primaryKeyField={\"ntransactionresultcode\"}\r\n                            data={this.props.masterData.TestParameters}\r\n                            dataResult={process(this.props.masterData.TestParameters || [], this.props.dataState)}\r\n                            dataState={this.props.dataState}\r\n                            dataStateChange={this.props.dataStateChange}\r\n                            expandField=\"expanded\"\r\n                            detailedFieldList={detailedFieldList}\r\n                            extractedColumnList={extractedColumnList}\r\n                            editParam={this.props.parameterParam}\r\n                            checklistParam={this.props.checklistParam}\r\n                            userInfo={this.props.userInfo}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            inputParam={this.props.inputParam}\r\n                            fetchRecord={this.props.fetchRecord}\r\n                            checkListRecord={this.props.checkListRecord}\r\n                            pageable={true}\r\n                            viewFile={this.props.viewFile}\r\n                            isComponent={true}\r\n                            isActionRequired={true}\r\n                            isToolBarRequired={false}\r\n                            scrollable={\"scrollable\"}\r\n                            selectedId={this.props.selectedId}\r\n                            gridHeight={\"500px !important\"}\r\n                            attachmentParam={attachmentParam}\r\n                            getMeanTestParameter={this.props.getMeanTestParameter}\r\n                            meanParam={this.props.meanParam}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        )\r\n    }\r\n    componentDidUpdate(previousProps){\r\n        if(this.props.masterData.TestParameters!==previousProps.masterData.TestParameters){\r\n            this.setState({\r\n                testParameters:sortData(this.props.masterData.TestParameters,'ascending','ntransactionresultcode')\r\n            })\r\n        }\r\n        if(this.props.masterData.TestParameters&&this.props.masterData.TestParameters!==this.state.testParameters){\r\n            this.setState({\r\n                testParameters:sortData(this.props.masterData.TestParameters,'ascending','ntransactionresultcode')\r\n            })\r\n        }\r\n        \r\n    }\r\n}\r\nexport default injectIntl(ResultEntryResultsTab);"]},"metadata":{},"sourceType":"module"}