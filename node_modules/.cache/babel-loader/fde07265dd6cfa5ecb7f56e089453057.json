{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{ListWrapper}from'../../components/client-group.styles';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{connect}from'react-redux';import rsapi from'../../rsapi';import{process}from'@progress/kendo-data-query';import DataGrid from'../../components/data-grid/data-grid.component';// import {\n//     callService, crudMaster, getTestMaster, addTest, updateStore, getTestDetails, formulaChangeFunction, filterColumnData,\n//     addParameter, validateEsignCredential, addCodedResult, addParameterSpecification, getAvailableData, addFormula,\n//     changeTestCategoryFilter, addTestFile, viewAttachment,getActiveTestContainerTypeById\n// } from '../../actions'\nimport{callService,crudMaster,getMethodComboService,getMethodDetail,getAvailableValidityData,fetchMethodValidityById,getMethodValidityUTCDate,updateStore,validateEsignCredential,filterColumnData}from'../../actions';import MethodValidityView from'./MethodValidityView';import{injectIntl}from'react-intl';import{toast}from'react-toastify';//import AddParameter from './AddParameter'\n//import AddTest from '../../pages/testmanagement/AddTest'\nimport SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{getControlMap,showEsign,constructOptionList,convertDateValuetoString}from'../../components/CommonScript';//import TestCategoryFilter from './TestCategoryFilter';\nimport ListMaster from'../../components/list-master/list-master.component';import{faTrashAlt,faPencilAlt,faCopy,faCheck}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{ReadOnlyText,ContentPanel,MediaLabel}from'../../components/App.styles';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Esign from'../audittrail/Esign';// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\nimport{parameterType,transactionStatus}from'../../components/Enumeration';import'react-perfect-scrollbar/dist/css/styles.css';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport AddMethod from'./AddMethod';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import{Affix}from'rsuite';//import ReactTooltip from 'react-tooltip';\nimport{removeItems}from'@progress/kendo-react-treelist';var Method=/*#__PURE__*/function(_Component){_inherits(Method,_Component);var _super=_createSuper(Method);function Method(props){var _this;_classCallCheck(this,Method);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.onSaveClick=function(saveType,formRef){// if (this.state.selectedRecord[\"dvalidityenddate\"] !== undefined && this.state.selectedRecord[\"dvaliditystartdate\"] !== undefined) {\n//     if (this.state.selectedRecord[\"dvalidityenddate\"] < this.state.selectedRecord[\"dvaliditystartdate\"]) {\n//         toast.info(this.props.intl.formatMessage({ id: \"IDS_ENDDATEGRATERTHANSTARTDATE\" }));\n//         return;\n//     }\n// }\n//add / edit            \nvar inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;var selectedId=null;inputData[\"method\"]={};if(_this.props.Login.operation===\"update\"){// edit\ndelete _this.state.selectedRecord[\"dcurrentdate\"];dataState=_this.state.dataState;//inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\nselectedId=_this.props.Login.selectedRecord.nmethodcode;inputData[\"method\"][\"nmethodcode\"]=_this.props.Login.selectedRecord.nmethodcode;}else{//add               \ninputData[_this.props.Login.inputParam.methodUrl.toLowerCase()]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};}inputData[\"method\"][\"ndefaultstatus\"]=_this.state.selectedRecord[\"ndefaultstatus\"]!==undefined&&_this.state.selectedRecord[\"ndefaultstatus\"]?_this.state.selectedRecord[\"ndefaultstatus\"]:transactionStatus.NO;inputData[\"method\"][\"nmethodcatcode\"]=_this.state.selectedRecord[\"nmethodcatcode\"]?_this.state.selectedRecord[\"nmethodcatcode\"].value:\"\";inputData[\"method\"][\"smethodname\"]=_this.state.selectedRecord[\"smethodname\"]?_this.state.selectedRecord[\"smethodname\"]:\"\";inputData[\"method\"][\"nneedvalidity\"]=_this.state.selectedRecord[\"nneedvalidity\"]!==undefined&&_this.state.selectedRecord[\"nneedvalidity\"]?_this.state.selectedRecord[\"nneedvalidity\"]:transactionStatus.NO;inputData[\"method\"][\"sdescription\"]=_this.state.selectedRecord[\"sdescription\"]?_this.state.selectedRecord[\"sdescription\"]:\"\";inputData[\"methodvalidity\"]={};if(_this.state.selectedRecord[\"nneedvalidity\"]===transactionStatus.YES){var obj=convertDateValuetoString(_this.state.selectedRecord[\"dvaliditystartdate\"]?_this.state.selectedRecord[\"dvaliditystartdate\"]:new Date(),_this.state.selectedRecord[\"dvalidityenddate\"]?_this.state.selectedRecord[\"dvalidityenddate\"]:new Date(),_this.props.Login.userInfo);_this.state.selectedRecord[\"svaliditystartdate\"]=obj.fromDate;_this.state.selectedRecord[\"svalidityenddate\"]=obj.toDate;inputData[\"methodvalidity\"][\"dvaliditystartdate\"]=_this.state.selectedRecord[\"dvaliditystartdate\"]?_this.state.selectedRecord[\"dvaliditystartdate\"]:new Date();inputData[\"methodvalidity\"][\"dvalidityenddate\"]=_this.state.selectedRecord[\"dvalidityenddate\"]?_this.state.selectedRecord[\"dvalidityenddate\"]:new Date();inputData[\"methodvalidity\"][\"svaliditystartdate\"]=_this.state.selectedRecord[\"svaliditystartdate\"]?_this.state.selectedRecord[\"svaliditystartdate\"]:new Date();inputData[\"methodvalidity\"][\"svalidityenddate\"]=_this.state.selectedRecord[\"svalidityenddate\"]?_this.state.selectedRecord[\"svalidityenddate\"]:new Date();inputData[\"methodvalidity\"][\"ntzvaliditystartdatetimezone\"]=_this.state.selectedRecord[\"ntzvaliditystartdatetimezone\"]?_this.state.selectedRecord[\"ntzvaliditystartdatetimezone\"].value||_this.props.Login.userInfo.ntimezonecode:_this.props.Login.userInfo.ntimezonecode;inputData[\"methodvalidity\"][\"ntzvalidityenddatetimezone\"]=_this.state.selectedRecord[\"ntzvalidityenddatetimezone\"]?_this.state.selectedRecord[\"ntzvalidityenddatetimezone\"].value||_this.props.Login.userInfo.ntimezonecode:_this.props.Login.userInfo.ntimezonecode;inputData[\"methodvalidity\"][\"stzvaliditystartdatetimezone\"]=_this.state.selectedRecord[\"stzvaliditystartdatetimezone\"]?_this.state.selectedRecord[\"stzvaliditystartdatetimezone\"].value||_this.props.Login.userInfo.ntimezonecode:_this.props.Login.userInfo.ntimezonecode;inputData[\"methodvalidity\"][\"stzvalidityenddatetimezone\"]=_this.state.selectedRecord[\"stzvalidityenddatetimezone\"]?_this.state.selectedRecord[\"stzvalidityenddatetimezone\"].value||_this.props.Login.userInfo.ntimezonecode:_this.props.Login.userInfo.ntimezonecode;}var postParam=undefined;postParam={inputListName:\"Method\",selectedObject:\"SelectedMethod\",primaryKeyField:\"nmethodcode\",primaryKeyValue:_this.props.Login.selectedRecord.nmethodcode,fetchUrl:\"method/getActiveMethodById\",fecthInputObject:{userinfo:_this.props.Login.userInfo},masterData:_this.props.Login.masterData};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"Method\",//this.props.Login.inputParam.methodUrl,\ndisplayName:_this.props.Login.screenName,inputData:inputData,selectedId:selectedId,dataState:dataState,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.Login.screenName&&_this.props.intl.formatMessage({id:_this.props.Login.screenName}),operation:_this.props.Login.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.ConfirmDelete=function(deleteParam,deleteID){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(deleteParam,deleteID);});};_this.deleteRecord=function(deleteParam,nControlcode){var _inputData;var postParam={inputListName:\"Method\",selectedObject:\"SelectedMethod\",primaryKeyField:\"nmethodcode\",primaryKeyValue:_this.props.Login.masterData.SelectedMethod.nmethodcode,fetchUrl:\"method/getMethod\",fecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"Method\",//this.props.Login.inputParam.methodUrl,                        \ndisplayName:_this.props.Login.screenName,inputData:(_inputData={},_defineProperty(_inputData,\"method\",_this.props.Login.masterData.SelectedMethod),_defineProperty(_inputData,\"userinfo\",_this.props.Login.userInfo),_inputData),operation:deleteParam.operation,dataState:_this.state.dataState,postParam:postParam,selectedRecord:_objectSpread({},_this.state.selectedRecord)};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,nControlcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.Login.screenName&&_this.props.intl.formatMessage({id:_this.props.Login.screenName}),operation:deleteParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.onEsignInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;;_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue,sdatename){var selectedRecord=_this.state.selectedRecord;// if(dateName === \"dvaliditystartdate\")\n// {\n//    selectedRecord[\"dvalidityenddate\"] = dateValue;  \n// }\nselectedRecord[dateName]=dateValue;selectedRecord[sdatename]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var selectedId=_this.props.Login.selectedId;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord[\"agree\"]=transactionStatus.NO;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;selectedRecord={};selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:selectedId}};_this.props.updateStore(updateInfo);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"Method\",//this.props.Login.inputParam.methodUrl,\ndisplayName:_this.props.Login.inputParam.displayName,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.state={selectedRecord:{},error:\"\",userRoleControlRights:[],controlMap:new Map(),skip:0,take:_this.props.Login.settings?_this.props.Login.settings[3]:25,sidebarview:false};_this.searchRef=React.createRef();// this.searchFieldList = [\"smethodname\", \"sdescription\",  \"smethodcategoryname\", \"stransactionstatus\"];\n_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(Method,[{key:\"render\",value:function render(){var _this2=this;//     const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\n//     && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\n//    const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\n//     && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\nvar addId=this.state.controlMap.has(\"AddMethod\")&&this.state.controlMap.get(\"AddMethod\").ncontrolcode;var editId=this.state.controlMap.has(\"EditMethod\")&&this.state.controlMap.get(\"EditMethod\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteMethod\")&&this.state.controlMap.get(\"DeleteMethod\").ncontrolcode;// const addParam = {screenName:\"Method\", primaryeyField: \"nmethodcode\", primaryKeyValue:undefined,  \n//     operation:\"create\", inputParam:this.props.Login.inputParam, userInfo : this.props.Login.userInfo, ncontrolCode: addId};\n//   const editParam = {screenName:this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation:\"update\", \n//    primaryKeyField:\"nmethodcode\", inputParam:this.props.Login.inputParam,  userInfo:this.props.Login.userInfo,  ncontrolCode:editId};\nvar addParam={screenName:\"IDS_METHOD\",operation:\"create\",primaryKeyName:\"nmethodcode\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolcode:addId};var editParam={screenName:\"IDS_METHOD\",operation:\"update\",primaryKeyName:\"nmethodcode\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolcode:editId,inputListName:\"Method\",selectedObject:\"SelectedMethod\"};var editValidityId=this.state.controlMap.has(\"EditMethodValidity\")&&this.state.controlMap.get(\"EditMethodValidity\").ncontrolcode;var approveValidityId=this.state.controlMap.has(\"ApproveMethodValidity\")&&this.state.controlMap.get(\"ApproveMethodValidity\").ncontrolcode;var editValidityParam={screenName:\"IDS_METHODVALIDITY\",operation:\"update\",primaryKeyName:\"nmethodvaliditycode\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolcode:editValidityId,inputListName:\"MethodValidity\",selectedObject:\"selectedRecord\"};var approveValidityParam={screenName:\"IDS_METHODVALIDITY\",operation:\"approve\",primaryKeyName:\"nmethodvaliditycode\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolcode:approveValidityId,inputListName:\"MethodValidity\",selectedObject:\"selectedRecord\"};var mandatoryFields=[{\"idsName\":\"IDS_METHODCATEGORY\",\"dataField\":\"nmethodcatcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_METHODNAME\",\"dataField\":\"smethodname\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}// {idsName: \"IDS_VALIDITYSTARTDATE\",dataField: \"dvaliditystartdate\", mandatoryLabel: \"IDS_SELECT\",controlType: \"selectbox\"},\n// {idsName: \"IDS_VALIDITYENDDATE\",dataField: \"dvalidityenddate\",mandatoryLabel: \"IDS_SELECT\",controlType: \"selectbox\"},\n];var deleteParam={operation:\"delete\"};var filterParam={inputListName:\"Method\",selectedObject:\"SelectedMethod\",primaryKeyField:\"nmethodcode\",fetchUrl:\"method/getMethod\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:[\"smethodname\",\"sdescription\",\"smethodcatname\",'sdisplaystatus',\"stransactionstatus\"]};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(ListMaster,{masterData:this.props.Login.masterData,screenName:this.props.intl.formatMessage({id:\"IDS_METHOD\"}),masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.Method,getMasterDetail:function getMasterDetail(method){return _this2.props.getMethodDetail(method,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.SelectedMethod,primaryKeyField:\"nmethodcode\",mainField:\"smethodname\",firstField:\"smethodcatname\",secondField:\"sdisplaystatus\",openModal:function openModal(){return _this2.props.getMethodComboService(addParam);},userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,filterColumnData:this.props.filterColumnData,filterParam:filterParam})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.props.sidebarview?'8':\"10\"),className:\"position-relative\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn-block\"},/*#__PURE__*/React.createElement(\"div\",{className:\"sidebar-view-btn \",onClick:this.props.parentFunction},!this.props.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"}))),this.props.Login.masterData.Method&&this.props.Login.masterData.Method.length>0&&this.props.Login.masterData.SelectedMethod&&Object.values(this.props.Login.masterData.SelectedMethod).length>0?/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedMethod.smethodname),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",name:\"editmethodname\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})//data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.props.getMethodComboService(editParam);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",name:\"deletemethodname\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})//data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.ConfirmDelete(deleteParam,deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})))))),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_REMARKS\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedMethod.sdescription))),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,this.props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedMethod.sdisplaystatus)))),/*#__PURE__*/React.createElement(MethodValidityView,{userInfo:this.props.Login.userInfo,dataState:this.props.Login.dataState,masterData:this.props.Login.masterData,inputParam:this.props.Login.inputParam,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenData:this.props.Login.screenData,openChildModal:this.props.Login.openChildModal,fetchMethodValidityById:this.props.fetchMethodValidityById,editParam:editValidityParam,operation:this.props.Login.operation,screenName:this.props.Login.screenName,selectedRecord:this.props.Login.selectedRecord,selectedMethod:this.props.Login.masterData.SelectedMethod,loadEsign:this.props.Login.loadEsign,ncontrolCode:this.props.Login.ncontrolCode,crudMaster:this.props.crudMaster,getAvailableValidityData:this.props.getAvailableValidityData,getMethodDetails:this.props.getMethodDetails,getMethodValidityUTCDate:this.props.getMethodValidityUTCDate,updateStore:this.props.updateStore,validateEsignCredential:this.props.validateEsignCredential,settings:this.props.Login.settings,selectedId:this.props.Login.selectedId,approveParam:approveValidityParam})))):\"\"))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields||[],addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onEsignInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddMethod,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,methodCategoryList:this.props.Login.methodCategoryList||[],operation:this.props.Login.operation,userInfo:this.props.Login.userInfo,inputParam:this.props.Login.inputParam})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var isComponentUpdated=false;// if (this.props.Login.regparentSubSampleColumnList !== previousProps.Login.regparentSubSampleColumnList) {\n//     this.setState({\n//         regparentSubSampleColumnList: this.props.Login.regparentSubSampleColumnList,\n//         regSubSamplecomboComponents: this.props.Login.regSubSamplecomboComponents,\n//         regSubSamplewithoutCombocomponent: this.props.Login.regSubSamplewithoutCombocomponent\n//     });\n// }\nif(this.props.Login.showSaveContinue!==previousProps.Login.showSaveContinue){this.setState({showSaveContinue:this.props.Login.showSaveContinue});}if(this.props.Login!==previousProps.Login){this.PrevoiusLoginData=previousProps;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}}// generateBreadCrumData() {\n//     const breadCrumbData = [];\n//     if (this.props.Login.masterData && this.props.Login.masterData.filterTestCategory) {\n//         breadCrumbData.push(\n//             {\n//                 \"label\": \"IDS_TESTCATEGORY\",\n//                 \"value\": this.props.Login.masterData.SelectedTestCat ? this.props.Login.masterData.SelectedTestCat.stestcategoryname : \"NA\"\n//             }\n//         );\n//     }\n//     return breadCrumbData;\n// }\n},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return Method;}(Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,getMethodComboService:getMethodComboService,getMethodDetail:getMethodDetail,getAvailableValidityData:getAvailableValidityData,fetchMethodValidityById:fetchMethodValidityById,getMethodValidityUTCDate:getMethodValidityUTCDate,updateStore:updateStore,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData})(injectIntl(Method));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/testmanagement/Method.jsx"],"names":["React","Component","ListWrapper","Row","Col","Card","Nav","FormGroup","FormLabel","connect","rsapi","process","DataGrid","callService","crudMaster","getMethodComboService","getMethodDetail","getAvailableValidityData","fetchMethodValidityById","getMethodValidityUTCDate","updateStore","validateEsignCredential","filterColumnData","MethodValidityView","injectIntl","toast","SlideOutModal","getControlMap","showEsign","constructOptionList","convertDateValuetoString","ListMaster","faTrashAlt","faPencilAlt","faCopy","faCheck","FontAwesomeIcon","ReadOnlyText","ContentPanel","MediaLabel","DEFAULT_RETURN","Esign","parameterType","transactionStatus","AddMethod","ConfirmMessage","BreadcrumbComponent","Affix","removeItems","Method","props","sidebarExpandCollapse","setState","sidebarview","onSaveClick","saveType","formRef","inputData","Login","userInfo","dataState","undefined","selectedId","operation","state","selectedRecord","nmethodcode","inputParam","methodUrl","toLowerCase","nmastersitecode","NO","value","YES","obj","Date","fromDate","toDate","ntimezonecode","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","fetchUrl","fecthInputObject","userinfo","masterData","classUrl","displayName","screenName","searchRef","esignNeeded","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","openModal","intl","formatMessage","id","ConfirmDelete","deleteParam","deleteID","confirmMessage","confirm","deleteRecord","nControlcode","SelectedMethod","onEsignInputOnChange","event","target","type","name","checked","onInputOnChange","onComboChange","comboData","fieldName","handleDateChange","dateName","dateValue","sdatename","closeModal","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","reloadData","current","error","controlMap","Map","skip","take","settings","createRef","addId","has","get","ncontrolcode","editId","deleteId","addParam","primaryKeyName","editParam","editValidityId","approveValidityId","editValidityParam","approveValidityParam","mandatoryFields","filterParam","searchFieldList","searchedData","method","parentFunction","length","Object","values","smethodname","indexOf","sdescription","sdisplaystatus","openChildModal","getMethodDetails","methodCategoryList","previousProps","isComponentUpdated","showSaveContinue","PrevoiusLoginData","map","item","push","modalName","masterStatus","errorCode","warn","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {ListWrapper} from '../../components/client-group.styles';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport rsapi from '../../rsapi';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\n// import {\r\n//     callService, crudMaster, getTestMaster, addTest, updateStore, getTestDetails, formulaChangeFunction, filterColumnData,\r\n//     addParameter, validateEsignCredential, addCodedResult, addParameterSpecification, getAvailableData, addFormula,\r\n//     changeTestCategoryFilter, addTestFile, viewAttachment,getActiveTestContainerTypeById\r\n// } from '../../actions'\r\nimport { callService, crudMaster,getMethodComboService,getMethodDetail,getAvailableValidityData,fetchMethodValidityById,getMethodValidityUTCDate,updateStore, validateEsignCredential,filterColumnData } from '../../actions';\r\nimport MethodValidityView from './MethodValidityView';\r\nimport { injectIntl } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\n//import AddParameter from './AddParameter'\r\n//import AddTest from '../../pages/testmanagement/AddTest'\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { getControlMap, showEsign, constructOptionList, convertDateValuetoString } from '../../components/CommonScript';\r\n//import TestCategoryFilter from './TestCategoryFilter';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport { faTrashAlt, faPencilAlt, faCopy, faCheck } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ReadOnlyText, ContentPanel, MediaLabel } from '../../components/App.styles';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Esign from '../audittrail/Esign';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport { parameterType, transactionStatus } from '../../components/Enumeration';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport AddMethod from './AddMethod';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\n//import ReactTooltip from 'react-tooltip';\r\nimport { removeItems } from '@progress/kendo-react-treelist';\r\n\r\n\r\nclass Method extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            selectedRecord: {},\r\n            error: \"\",\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            skip: 0,\r\n            take: this.props.Login.settings ? this.props.Login.settings[3] : 25,\r\n            sidebarview: false\r\n        });\r\n        this.searchRef = React.createRef();\r\n       // this.searchFieldList = [\"smethodname\", \"sdescription\",  \"smethodcategoryname\", \"stransactionstatus\"];\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\") {\r\n            if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n    //     const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\".concat(this.props.Login.inputParam.methodUrl))\r\n    //     && this.state.controlMap.get(\"Add\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n\r\n    //    const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\".concat(this.props.Login.inputParam.methodUrl))\r\n    //     && this.state.controlMap.get(\"Edit\".concat(this.props.Login.inputParam.methodUrl)).ncontrolcode;\r\n    const addId = this.state.controlMap.has(\"AddMethod\") && this.state.controlMap.get(\"AddMethod\").ncontrolcode;\r\n    const editId = this.state.controlMap.has(\"EditMethod\") && this.state.controlMap.get(\"EditMethod\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteMethod\") && this.state.controlMap.get(\"DeleteMethod\").ncontrolcode;\r\n\r\n        // const addParam = {screenName:\"Method\", primaryeyField: \"nmethodcode\", primaryKeyValue:undefined,  \r\n        //     operation:\"create\", inputParam:this.props.Login.inputParam, userInfo : this.props.Login.userInfo, ncontrolCode: addId};\r\n\r\n        //   const editParam = {screenName:this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation:\"update\", \r\n        //    primaryKeyField:\"nmethodcode\", inputParam:this.props.Login.inputParam,  userInfo:this.props.Login.userInfo,  ncontrolCode:editId};\r\n        const addParam = {\r\n            screenName: \"IDS_METHOD\", operation: \"create\", primaryKeyName: \"nmethodcode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: addId\r\n        }\r\n\r\n        const editParam = {\r\n            screenName: \"IDS_METHOD\", operation: \"update\", primaryKeyName: \"nmethodcode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, inputListName: \"Method\", selectedObject: \"SelectedMethod\"\r\n        };\r\n        const editValidityId = this.state.controlMap.has(\"EditMethodValidity\") && this.state.controlMap.get(\"EditMethodValidity\").ncontrolcode;\r\n        const approveValidityId = this.state.controlMap.has(\"ApproveMethodValidity\") && this.state.controlMap.get(\"ApproveMethodValidity\").ncontrolcode;\r\n    const editValidityParam = {\r\n      screenName: \"IDS_METHODVALIDITY\", operation: \"update\", primaryKeyName: \"nmethodvaliditycode\",\r\n      masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n      ncontrolcode: editValidityId, inputListName: \"MethodValidity\", selectedObject: \"selectedRecord\"\r\n  };\r\n  const approveValidityParam = {\r\n    screenName: \"IDS_METHODVALIDITY\", operation: \"approve\", primaryKeyName: \"nmethodvaliditycode\",\r\n    masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n    ncontrolcode: approveValidityId, inputListName: \"MethodValidity\", selectedObject: \"selectedRecord\"\r\n};\r\n        const mandatoryFields = [{\"idsName\":\"IDS_METHODCATEGORY\",\"dataField\":\"nmethodcatcode\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        {\"idsName\":\"IDS_METHODNAME\",\"dataField\":\"smethodname\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n        // {idsName: \"IDS_VALIDITYSTARTDATE\",dataField: \"dvaliditystartdate\", mandatoryLabel: \"IDS_SELECT\",controlType: \"selectbox\"},\r\n        // {idsName: \"IDS_VALIDITYENDDATE\",dataField: \"dvalidityenddate\",mandatoryLabel: \"IDS_SELECT\",controlType: \"selectbox\"},\r\n        ];\r\n        const deleteParam = { operation: \"delete\" };\r\n        const filterParam = {\r\n            inputListName: \"Method\", selectedObject: \"SelectedMethod\", primaryKeyField: \"nmethodcode\",\r\n            fetchUrl: \"method/getMethod\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"smethodname\", \"sdescription\", \"smethodcatname\",'sdisplaystatus', \"stransactionstatus\"]\r\n        };\r\n\r\n        return (\r\n            <>\r\n                {/* Start of get display */}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {/* {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    } */}\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n                            <ListMaster\r\n                                masterData={this.props.Login.masterData}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_METHOD\" })}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Method}\r\n                                getMasterDetail={(method) => this.props.getMethodDetail(method, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedMethod}\r\n                                primaryKeyField=\"nmethodcode\"\r\n                                mainField=\"smethodname\"\r\n                                firstField=\"smethodcatname\"\r\n                                secondField=\"sdisplaystatus\"\r\n                                openModal={() => this.props.getMethodComboService(addParam)}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n\r\n                                \r\n                                \r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?                    \r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i> \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            {this.props.Login.masterData.Method && this.props.Login.masterData.Method.length > 0 && this.props.Login.masterData.SelectedMethod && Object.values(this.props.Login.masterData.SelectedMethod).length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                            <Card.Title className=\"product-title-main\">\r\n                                                {this.props.Login.masterData.SelectedMethod.smethodname}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                {/* <Row>\r\n                                                <Col md={8}> */}\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        {/* <MediaLabel className={`btn btn-outlined ${this.props.Login.masterData.SelectedMethod.nstatus === 1 ? \"outline-success\" : \"outline-secondary\"} btn-sm ml-3`}>\r\n                                                            {this.props.Login.masterData.SelectedMethod.nstatus === 1 && <FontAwesomeIcon icon={faCheck}></FontAwesomeIcon>}\r\n                                                            {this.props.Login.masterData.SelectedMethod.sdisplaystatus}\r\n                                                        </MediaLabel> */}\r\n                                                        \r\n                                                    </h2>\r\n                                                    {/* </Col>\r\n                                                <Col md=\"4\"> */}\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <div className=\"d-inline\">\r\n                                                       \r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\" name=\"editmethodname\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //data-for=\"tooltip_list_wrap\"\r\n                                                            onClick={() => this.props.getMethodComboService(editParam)}>\r\n                                                            <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletemethodname\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            //data-for=\"tooltip_list_wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(deleteParam,deleteId)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            {/* <ConfirmDialog\r\n                                                                    name=\"deleteMessage\"\r\n                                                                    message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                    doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                    doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                    icon={faTrashAlt}\r\n                                                                    // title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                    handleClickDelete={() => this.deleteAction(SelectedTest, \"delete\", deleteId, \"TestMaster\", \"openModal\")}\r\n                                                                /> */}\r\n                                                        </Nav.Link>\r\n                                                        \r\n                                                    </div>\r\n                                                    {/* </Tooltip> */}\r\n                                                </div>\r\n                                                {/* </Col>\r\n                                            </Row> */}\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            <Row>\r\n                                            <Col md=\"6\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REMARKS\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedMethod.sdescription}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                <Col md=\"6\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedMethod.sdisplaystatus}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n                                                {/* <Col md=\"6\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_METHODVALIDITYENABLE\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedMethod.smethodvalidityenable}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col> */}\r\n                                                \r\n                                                {/* <Col md=\"6\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_DISPLAYSTATUS\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.SelectedMethod.sdisplaystatus}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col> */}\r\n\r\n                                                \r\n                                               \r\n                                                {/* End Here */}\r\n                                            </Row>\r\n                                            <MethodValidityView\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                dataState={this.props.Login.dataState}\r\n                                                masterData={this.props.Login.masterData}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                esignRights={this.props.Login.userRoleControlRights}\r\n                                                screenData={this.props.Login.screenData}\r\n                                                openChildModal={this.props.Login.openChildModal}\r\n                                                fetchMethodValidityById={this.props.fetchMethodValidityById}\r\n                                                editParam={editValidityParam}\r\n                                                operation={this.props.Login.operation}\r\n                                                screenName={this.props.Login.screenName}\r\n                                                selectedRecord={this.props.Login.selectedRecord}\r\n                                                selectedMethod={this.props.Login.masterData.SelectedMethod}\r\n                                                loadEsign={this.props.Login.loadEsign}\r\n                                                ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                crudMaster={this.props.crudMaster}\r\n                                                getAvailableValidityData={this.props.getAvailableValidityData}\r\n                                                getMethodDetails={this.props.getMethodDetails}\r\n                                                getMethodValidityUTCDate={this.props.getMethodValidityUTCDate}\r\n                                                updateStore={this.props.updateStore}\r\n                                                validateEsignCredential={this.props.validateEsignCredential}\r\n                                                settings = {this.props.Login.settings}\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                approveParam ={approveValidityParam}\r\n                                            ></MethodValidityView>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {/* End of get display */}\r\n\r\n                {/* Start of Modal Sideout for Test Creation */}\r\n                {this.props.Login.openModal && \r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields || []}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onEsignInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddMethod  \r\n                            selectedRecord={this.state.selectedRecord ||{}}                                  \r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onComboChange={this.onComboChange} \r\n                            handleDateChange={this.handleDateChange}\r\n                            methodCategoryList={this.props.Login.methodCategoryList ||[]}\r\n                            operation={this.props.Login.operation}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            inputParam={this.props.Login.inputParam}  \r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n                {/* End of Modal Sideout for Test Creation */}\r\n            </>\r\n        );\r\n    }\r\n   \r\n    onSaveClick = (saveType, formRef) => {\r\n        // if (this.state.selectedRecord[\"dvalidityenddate\"] !== undefined && this.state.selectedRecord[\"dvaliditystartdate\"] !== undefined) {\r\n        //     if (this.state.selectedRecord[\"dvalidityenddate\"] < this.state.selectedRecord[\"dvaliditystartdate\"]) {\r\n        //         toast.info(this.props.intl.formatMessage({ id: \"IDS_ENDDATEGRATERTHANSTARTDATE\" }));\r\n        //         return;\r\n        //     }\r\n        // }\r\n        //add / edit            \r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n        let selectedId = null;\r\n        inputData[\"method\"]={};\r\n        if ( this.props.Login.operation === \"update\"){\r\n            // edit\r\n            delete this.state.selectedRecord[\"dcurrentdate\"];\r\n            dataState = this.state.dataState;\r\n            //inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n            selectedId = this.props.Login.selectedRecord.nmethodcode;              \r\n            inputData[\"method\"][\"nmethodcode\"] = this.props.Login.selectedRecord.nmethodcode;\r\n        }\r\n        else{\r\n            //add               \r\n            inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = {\"nsitecode\":this.props.Login.userInfo.nmastersitecode};      \r\n           \r\n        }   \r\n\r\n        inputData[\"method\"][\"ndefaultstatus\"] = this.state.selectedRecord[\"ndefaultstatus\"] !== undefined && this.state.selectedRecord[\"ndefaultstatus\"]? this.state.selectedRecord[\"ndefaultstatus\"]:transactionStatus.NO;\r\n        inputData[\"method\"][\"nmethodcatcode\"] = this.state.selectedRecord[\"nmethodcatcode\"]? this.state.selectedRecord[\"nmethodcatcode\"].value:\"\";\r\n        inputData[\"method\"][\"smethodname\"] = this.state.selectedRecord[\"smethodname\"]? this.state.selectedRecord[\"smethodname\"]:\"\";\r\n        inputData[\"method\"][\"nneedvalidity\"] = this.state.selectedRecord[\"nneedvalidity\"] !== undefined && this.state.selectedRecord[\"nneedvalidity\"]? this.state.selectedRecord[\"nneedvalidity\"]:transactionStatus.NO;\r\n        inputData[\"method\"][\"sdescription\"] = this.state.selectedRecord[\"sdescription\"]? this.state.selectedRecord[\"sdescription\"]:\"\";\r\n       \r\n        inputData[\"methodvalidity\"]={};\r\n\r\n        if(this.state.selectedRecord[\"nneedvalidity\"] === transactionStatus.YES)\r\n        {\r\n            let obj= convertDateValuetoString(this.state.selectedRecord[\"dvaliditystartdate\"] ? this.state.selectedRecord[\"dvaliditystartdate\"]: new Date(),this.state.selectedRecord[\"dvalidityenddate\"]?this.state.selectedRecord[\"dvalidityenddate\"]:new Date(),this.props.Login.userInfo);\r\n            this.state.selectedRecord[\"svaliditystartdate\"]=obj.fromDate;\r\n            this.state.selectedRecord[\"svalidityenddate\"]=obj.toDate;\r\n\r\n            inputData[\"methodvalidity\"][\"dvaliditystartdate\"] = this.state.selectedRecord[\"dvaliditystartdate\"] ? this.state.selectedRecord[\"dvaliditystartdate\"] : new Date();\r\n            inputData[\"methodvalidity\"][\"dvalidityenddate\"] = this.state.selectedRecord[\"dvalidityenddate\"] ? this.state.selectedRecord[\"dvalidityenddate\"] : new Date();\r\n            inputData[\"methodvalidity\"][\"svaliditystartdate\"] = this.state.selectedRecord[\"svaliditystartdate\"] ? this.state.selectedRecord[\"svaliditystartdate\"] : new Date();\r\n            inputData[\"methodvalidity\"][\"svalidityenddate\"] = this.state.selectedRecord[\"svalidityenddate\"] ? this.state.selectedRecord[\"svalidityenddate\"] : new Date();\r\n\r\n            inputData[\"methodvalidity\"][\"ntzvaliditystartdatetimezone\"] = this.state.selectedRecord[\"ntzvaliditystartdatetimezone\"]\r\n                                                                        ? this.state.selectedRecord[\"ntzvaliditystartdatetimezone\"].value \r\n                                                                        || this.props.Login.userInfo.ntimezonecode\r\n                                                                        : this.props.Login.userInfo.ntimezonecode;\r\n            inputData[\"methodvalidity\"][\"ntzvalidityenddatetimezone\"] = this.state.selectedRecord[\"ntzvalidityenddatetimezone\" ]\r\n                                                                        ? this.state.selectedRecord[\"ntzvalidityenddatetimezone\"].value \r\n                                                                        || this.props.Login.userInfo.ntimezonecode\r\n                                                                        : this.props.Login.userInfo.ntimezonecode;\r\n\r\n            inputData[\"methodvalidity\"][\"stzvaliditystartdatetimezone\"] = this.state.selectedRecord[\"stzvaliditystartdatetimezone\"]\r\n                                                                        ? this.state.selectedRecord[\"stzvaliditystartdatetimezone\"].value \r\n                                                                        || this.props.Login.userInfo.ntimezonecode\r\n                                                                        : this.props.Login.userInfo.ntimezonecode;\r\n            inputData[\"methodvalidity\"][\"stzvalidityenddatetimezone\"] = this.state.selectedRecord[\"stzvalidityenddatetimezone\"]\r\n                                                                        ? this.state.selectedRecord[\"stzvalidityenddatetimezone\"].value \r\n                                                                        || this.props.Login.userInfo.ntimezonecode\r\n                                                                        : this.props.Login.userInfo.ntimezonecode;\r\n\r\n        }   \r\n        let postParam = undefined;\r\n        postParam= {\r\n            inputListName: \"Method\", selectedObject: \"SelectedMethod\", primaryKeyField: \"nmethodcode\",\r\n            primaryKeyValue: this.props.Login.selectedRecord.nmethodcode,\r\n            fetchUrl: \"method/getActiveMethodById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Method\",//this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.screenName,  \r\n            inputData: inputData, selectedId, dataState,\r\n            operation: this.props.Login.operation, saveType, formRef,\r\n            postParam, searchRef: this.searchRef,\r\n            selectedRecord: {...this.state.selectedRecord}\r\n\r\n        }\r\n       \r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        if (esignNeeded){\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign:true, screenData:{inputParam, masterData:this.props.Login.masterData}, \r\n                    openModal:true, screenName: this.props.Login.screenName && this.props.intl.formatMessage({ id:this.props.Login.screenName}),\r\n                    operation:this.props.Login.operation\r\n                    }\r\n                }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else{\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n       \r\n}\r\n\r\n    ConfirmDelete = (deleteParam,deleteID) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(deleteParam,deleteID));\r\n    }\r\n    deleteRecord = (deleteParam, nControlcode) => {\r\n        const postParam = {\r\n            inputListName: \"Method\", selectedObject: \"SelectedMethod\",\r\n            primaryKeyField: \"nmethodcode\",\r\n            primaryKeyValue: this.props.Login.masterData.SelectedMethod.nmethodcode,\r\n            fetchUrl: \"method/getMethod\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n                                classUrl: this.props.Login.inputParam.classUrl,\r\n                                methodUrl: \"Method\",//this.props.Login.inputParam.methodUrl,                        \r\n                                displayName:this.props.Login.screenName,\r\n                                inputData: {[\"method\"] :this.props.Login.masterData.SelectedMethod,   //deleteParam.selectedRecord,\r\n                                            \"userinfo\": this.props.Login.userInfo},\r\n                                operation:deleteParam.operation,\r\n                                dataState: this.state.dataState,\r\n                                postParam,\r\n                                selectedRecord: {...this.state.selectedRecord}\r\n                            }       \r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, nControlcode)){\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign:true, screenData:{inputParam, masterData:this.props.Login.masterData}, \r\n                    openModal:true, screenName: this.props.Login.screenName && this.props.intl.formatMessage({ id:this.props.Login.screenName}),\r\n                    operation:deleteParam.operation\r\n                    }\r\n                }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else{\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n    onEsignInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onInputOnChange=(event) => {\r\n        \r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox')\r\n        {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else{\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        \r\n        this.setState({selectedRecord});\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {      \r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;   \r\n     \r\n        this.setState({selectedRecord});        \r\n    }\r\n    handleDateChange = (dateName, dateValue, sdatename) => {\r\n        const { selectedRecord } = this.state;\r\n        // if(dateName === \"dvaliditystartdate\")\r\n        // {\r\n        //    selectedRecord[\"dvalidityenddate\"] = dateValue;  \r\n        // }\r\n        selectedRecord[dateName] = dateValue;\r\n        selectedRecord[sdatename] = dateValue;\r\n        this.setState({ selectedRecord });\r\n      };\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = transactionStatus.NO;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId=null;\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord,selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n                        inputData : {\"userinfo\":this.props.Login.userInfo},                        \r\n                        classUrl: this.props.Login.inputParam.classUrl,\r\n                        methodUrl: \"Method\",//this.props.Login.inputParam.methodUrl,\r\n                        displayName:this.props.Login.inputParam.displayName,\r\n                        userInfo: this.props.Login.userInfo\r\n                    };     \r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let isComponentUpdated = false;\r\n\r\n       \r\n\r\n        // if (this.props.Login.regparentSubSampleColumnList !== previousProps.Login.regparentSubSampleColumnList) {\r\n        //     this.setState({\r\n        //         regparentSubSampleColumnList: this.props.Login.regparentSubSampleColumnList,\r\n        //         regSubSamplecomboComponents: this.props.Login.regSubSamplecomboComponents,\r\n        //         regSubSamplewithoutCombocomponent: this.props.Login.regSubSamplewithoutCombocomponent\r\n        //     });\r\n\r\n        // }\r\n\r\n\r\n        if (this.props.Login.showSaveContinue !== previousProps.Login.showSaveContinue) {\r\n            this.setState({ showSaveContinue: this.props.Login.showSaveContinue });\r\n\r\n        }\r\n        if (this.props.Login !== previousProps.Login) {\r\n            this.PrevoiusLoginData = previousProps\r\n        }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n        \r\n\r\n        \r\n       \r\n        \r\n    }\r\n\r\n    // generateBreadCrumData() {\r\n    //     const breadCrumbData = [];\r\n    //     if (this.props.Login.masterData && this.props.Login.masterData.filterTestCategory) {\r\n\r\n    //         breadCrumbData.push(\r\n    //             {\r\n    //                 \"label\": \"IDS_TESTCATEGORY\",\r\n    //                 \"value\": this.props.Login.masterData.SelectedTestCat ? this.props.Login.masterData.SelectedTestCat.stestcategoryname : \"NA\"\r\n    //             }\r\n    //         );\r\n    //     }\r\n    //     return breadCrumbData;\r\n    // }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n                \r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster,getMethodComboService,getMethodDetail,getAvailableValidityData,fetchMethodValidityById,getMethodValidityUTCDate,updateStore, validateEsignCredential,filterColumnData,\r\n})(injectIntl(Method));"]},"metadata":{},"sourceType":"module"}