{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\TestGroupParameterTab.jsx\";\nimport React from 'react';\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\nimport { injectIntl } from 'react-intl';\nimport TestGroupParameterAccordion from './TestGroupParameterAccordion';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nconst TestGroupParameterTab = props => {\n  //console.log('eeeefff')\n  const ClinicalSpecColumns = [//{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"sgendername\", \"width\": \"150px\",\"fieldType\":\"groupHeader\"},\n  {\n    \"idsName\": \"IDS_FROMAGE\",\n    \"mandatory\": true,\n    \"dataField\": \"nfromage\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_TOAGE\",\n    \"mandatory\": true,\n    \"dataField\": \"ntoage\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_HIGHA\",\n    \"mandatory\": true,\n    \"dataField\": \"shigha\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_HIGHB\",\n    \"mandatory\": true,\n    \"dataField\": \"shighb\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_LOWA\",\n    \"mandatory\": true,\n    \"dataField\": \"slowa\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_LOWB\",\n    \"mandatory\": true,\n    \"dataField\": \"slowb\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_MINLOQ\",\n    \"mandatory\": true,\n    \"dataField\": \"sminloq\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_MAXLOQ\",\n    \"mandatory\": true,\n    \"dataField\": \"smaxloq\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_MINLOD\",\n    \"mandatory\": true,\n    \"dataField\": \"sminlod\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_MAXLOD\",\n    \"mandatory\": true,\n    \"dataField\": \"smaxlod\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_DISREGARDED\",\n    \"mandatory\": true,\n    \"dataField\": \"sdisregard\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_DEFAULTRESULT\",\n    \"mandatory\": true,\n    \"dataField\": \"sresultvalue\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }, {\n    \"idsName\": \"IDS_GRADE\",\n    \"mandatory\": true,\n    \"dataField\": \"sgradename\",\n    \"width\": \"150px\",\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"textbox\"\n  }];\n  const detailedFieldList = [{\n    \"dataField\": \"shigha\",\n    \"idsName\": \"IDS_HIGHA\",\n    columnSize: \"4\"\n  }, {\n    \"dataField\": \"shighb\",\n    \"idsName\": \"IDS_HIGHB\",\n    columnSize: \"4\"\n  }, {\n    \"dataField\": \"slowa\",\n    idsName: \"IDS_LOWA\",\n    columnSize: \"4\"\n  }, {\n    \"dataField\": \"slowb\",\n    idsName: \"IDS_LOWB\",\n    columnSize: \"12\"\n  }, {\n    \"dataField\": \"sresultvalue\",\n    idsName: \"IDS_DEFAULTRESULT\",\n    columnSize: \"4\"\n  }];\n  const dataState = {\n    // skip: 0,\n    // take : 5,\n    group: [{\n      field: 'sgendername'\n    }]\n  };\n  const {\n    TestGroupTestParameter,\n    selectedParameter,\n    TestGroupTestFormula,\n    TestGroupTestNumericParameter,\n    TestGroupTestPredefinedParameter,\n    TestGroupTestCharParameter,\n    SelectedSpecification,\n    TestGroupTestClinicalSpec,\n    SelectedNode\n  } = props.masterData;\n\n  function testGroupParameterAccordion(TestGroupParameter) {\n    const accordionMap = new Map();\n    TestGroupParameter.map(testGroupParameter => accordionMap.set(testGroupParameter.ntestparametercode, /*#__PURE__*/React.createElement(TestGroupParameterAccordion, {\n      testgrouptestparameter: testGroupParameter,\n      selectedSpecification: SelectedSpecification,\n      selectedNode: SelectedNode,\n      userRoleControlRights: props.userRoleControlRights,\n      controlMap: props.controlMap,\n      userInfo: props.userInfo,\n      selectedParameter: selectedParameter,\n      addParameter: props.addParameter,\n      deleteAction: props.deleteAction,\n      addCodedResult: props.addCodedResult,\n      addFormula: props.addFormula,\n      onSwitchChange: props.onSwitchChange,\n      addParameterSpecification: props.addParameterSpecification,\n      testGroupTestFormula: TestGroupTestFormula,\n      testGroupTestNumericParameter: TestGroupTestNumericParameter,\n      testGroupTestPredefinedParameter: TestGroupTestPredefinedParameter,\n      testGroupCharParameter: TestGroupTestCharParameter,\n      addTestGroupFormula: props.addTestGroupFormula,\n      filterData: props.filterData,\n      editTestGroupParameter: props.editTestGroupParameter,\n      addTestGroupCodedResult: props.addTestGroupCodedResult,\n      subCodedResultView: props.subCodedResultView,\n      addTestGroupNumericTab: props.addTestGroupNumericTab,\n      viewTestGroupCheckList: props.viewTestGroupCheckList,\n      masterData: props.masterData,\n      extractedColumnList: ClinicalSpecColumns,\n      detailedFieldList: detailedFieldList,\n      testGroupTestClinicalSpec: TestGroupTestClinicalSpec,\n      data: TestGroupTestClinicalSpec || [] //dataState={dataState}\n      ,\n      optionalData: {\n        testgroupspecification: SelectedSpecification\n      },\n      openModal: props.addTestGroupNumericTab,\n      EditSpecDetails: props.EditSpecDetails,\n      DeleteSpecDetails: props.DeleteSpecDetails,\n      hasDynamicColSize: true,\n      dataState: props.dataState,\n      dataStateChange: props.dataStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    })));\n    return accordionMap;\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, TestGroupTestParameter && TestGroupTestParameter.length > 0 && /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grouped-tab-inner grouped-tab-inner-test-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CustomAccordion, {\n    paneHeight: props.paneHeight //ALPD-5178 - Parameter Accordion Title set with parameter name instead of parameter synonym\n    ,\n    key: \"testgroupparameteraccordion\",\n    accordionTitle: \"sparametername\",\n    accordionComponent: testGroupParameterAccordion(TestGroupTestParameter),\n    inputParam: {\n      masterData: props.masterData,\n      userinfo: props.userInfo\n    },\n    accordionClick: props.getTestGroupParameter,\n    accordionPrimaryKey: \"ntestgrouptestparametercode\",\n    accordionObjectName: \"testgrouptestparameter\",\n    selectedKey: selectedParameter ? selectedParameter.ntestgrouptestparametercode : 0,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default injectIntl(TestGroupParameterTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/testgroup/TestGroupParameterTab.jsx"],"names":["React","CustomAccordion","injectIntl","TestGroupParameterAccordion","PerfectScrollbar","TestGroupParameterTab","props","ClinicalSpecColumns","detailedFieldList","columnSize","idsName","dataState","group","field","TestGroupTestParameter","selectedParameter","TestGroupTestFormula","TestGroupTestNumericParameter","TestGroupTestPredefinedParameter","TestGroupTestCharParameter","SelectedSpecification","TestGroupTestClinicalSpec","SelectedNode","masterData","testGroupParameterAccordion","TestGroupParameter","accordionMap","Map","map","testGroupParameter","set","ntestparametercode","userRoleControlRights","controlMap","userInfo","addParameter","deleteAction","addCodedResult","addFormula","onSwitchChange","addParameterSpecification","addTestGroupFormula","filterData","editTestGroupParameter","addTestGroupCodedResult","subCodedResultView","addTestGroupNumericTab","viewTestGroupCheckList","testgroupspecification","EditSpecDetails","DeleteSpecDetails","dataStateChange","length","paneHeight","userinfo","getTestGroupParameter","ntestgrouptestparametercode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component'\r\nimport { injectIntl } from 'react-intl';\r\nimport TestGroupParameterAccordion from './TestGroupParameterAccordion';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst TestGroupParameterTab = (props) => {\r\n    //console.log('eeeefff')\r\n   const ClinicalSpecColumns = [//{ \"idsName\": \"IDS_GENDER\", \"dataField\": \"sgendername\", \"width\": \"150px\",\"fieldType\":\"groupHeader\"},\r\n     { \"idsName\": \"IDS_FROMAGE\", \"mandatory\": true, \"dataField\": \"nfromage\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n      { \"idsName\": \"IDS_TOAGE\", \"mandatory\": true, \"dataField\": \"ntoage\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}, \r\n      { \"idsName\": \"IDS_HIGHA\", \"mandatory\": true, \"dataField\": \"shigha\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n      { \"idsName\": \"IDS_HIGHB\", \"mandatory\": true, \"dataField\": \"shighb\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n      { \"idsName\": \"IDS_LOWA\", \"mandatory\": true, \"dataField\": \"slowa\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n       { \"idsName\": \"IDS_LOWB\", \"mandatory\": true, \"dataField\": \"slowb\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n\r\n       { \"idsName\": \"IDS_MINLOQ\", \"mandatory\": true, \"dataField\": \"sminloq\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n      { \"idsName\": \"IDS_MAXLOQ\", \"mandatory\": true, \"dataField\": \"smaxloq\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n      { \"idsName\": \"IDS_MINLOD\", \"mandatory\": true, \"dataField\": \"sminlod\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n       { \"idsName\": \"IDS_MAXLOD\", \"mandatory\": true, \"dataField\": \"smaxlod\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n       { \"idsName\": \"IDS_DISREGARDED\", \"mandatory\": true, \"dataField\": \"sdisregard\", \"width\": \"150px\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n\r\n       { \"idsName\": \"IDS_DEFAULTRESULT\", \"mandatory\": true, \"dataField\": \"sresultvalue\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n       { \"idsName\": \"IDS_GRADE\", \"mandatory\": true, \"dataField\": \"sgradename\", \"width\": \"150px\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n\r\n    ];\r\n   \r\n\r\n      const detailedFieldList = [\r\n        { \"dataField\": \"shigha\",\"idsName\": \"IDS_HIGHA\" , columnSize:\"4\"},\r\n        { \"dataField\": \"shighb\" ,\"idsName\": \"IDS_HIGHB\",  columnSize:\"4\"},\r\n        { \"dataField\": \"slowa\", idsName: \"IDS_LOWA\" , columnSize:\"4\"},\r\n          { \"dataField\": \"slowb\", idsName: \"IDS_LOWB\", columnSize: \"12\" },\r\n          { \"dataField\": \"sresultvalue\", idsName: \"IDS_DEFAULTRESULT\", columnSize:\"4\" }\r\n\r\n      \r\n    ];\r\n\r\n    const dataState = {\r\n        // skip: 0,\r\n        // take : 5,\r\n        group: [{ field: 'sgendername' }] \r\n    };\r\n   \r\n      const { TestGroupTestParameter, selectedParameter, TestGroupTestFormula, TestGroupTestNumericParameter,\r\n        TestGroupTestPredefinedParameter, TestGroupTestCharParameter, SelectedSpecification,TestGroupTestClinicalSpec,SelectedNode } = props.masterData;\r\n    function testGroupParameterAccordion(TestGroupParameter) {\r\n        const accordionMap = new Map();\r\n        TestGroupParameter.map((testGroupParameter) =>\r\n            accordionMap.set(testGroupParameter.ntestparametercode,\r\n                <TestGroupParameterAccordion\r\n                    testgrouptestparameter={testGroupParameter}\r\n                    selectedSpecification={SelectedSpecification}\r\n                    selectedNode= { SelectedNode }\r\n                    userRoleControlRights={props.userRoleControlRights}\r\n                    controlMap={props.controlMap}\r\n                    userInfo={props.userInfo}\r\n                    selectedParameter={selectedParameter}\r\n                    addParameter={props.addParameter}\r\n                    deleteAction={props.deleteAction}\r\n                    addCodedResult={props.addCodedResult}\r\n                    addFormula={props.addFormula}\r\n                    onSwitchChange={props.onSwitchChange}\r\n                    addParameterSpecification={props.addParameterSpecification}\r\n                    testGroupTestFormula={TestGroupTestFormula}\r\n                    testGroupTestNumericParameter={TestGroupTestNumericParameter}\r\n                    testGroupTestPredefinedParameter={TestGroupTestPredefinedParameter}\r\n                    testGroupCharParameter={TestGroupTestCharParameter}\r\n                    addTestGroupFormula={props.addTestGroupFormula}\r\n                    filterData={props.filterData}\r\n                    editTestGroupParameter={props.editTestGroupParameter}\r\n                    addTestGroupCodedResult={props.addTestGroupCodedResult}\r\n                    subCodedResultView={props.subCodedResultView}\r\n                    addTestGroupNumericTab={props.addTestGroupNumericTab}\r\n                    viewTestGroupCheckList={props.viewTestGroupCheckList}\r\n                    masterData={props.masterData}\r\n                    extractedColumnList={ClinicalSpecColumns}\r\n                    detailedFieldList={detailedFieldList}\r\n                    testGroupTestClinicalSpec={TestGroupTestClinicalSpec}\r\n                    data={TestGroupTestClinicalSpec || []}\r\n                    //dataState={dataState}\r\n                   \r\n                    optionalData={{ testgroupspecification: SelectedSpecification }}\r\n                    openModal={props.addTestGroupNumericTab}\r\n                    EditSpecDetails={props.EditSpecDetails}\r\n                    DeleteSpecDetails={props.DeleteSpecDetails}\r\n                    hasDynamicColSize={true}\r\n                    dataState={props.dataState}\r\n                dataStateChange={props.dataStateChange}\r\n                />)\r\n        );\r\n        return accordionMap;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {TestGroupTestParameter && TestGroupTestParameter.length > 0 &&\r\n            <PerfectScrollbar>\r\n                <div className='grouped-tab-inner grouped-tab-inner-test-group'>\r\n                <CustomAccordion\r\n                    paneHeight={props.paneHeight}\r\n                    //ALPD-5178 - Parameter Accordion Title set with parameter name instead of parameter synonym\r\n                    key=\"testgroupparameteraccordion\"\r\n                    accordionTitle={\"sparametername\"}                  \r\n                    accordionComponent={testGroupParameterAccordion(TestGroupTestParameter)}\r\n                    inputParam={{ masterData: props.masterData, userinfo: props.userInfo }}\r\n                    accordionClick={props.getTestGroupParameter}\r\n                    accordionPrimaryKey={\"ntestgrouptestparametercode\"}\r\n                    accordionObjectName={\"testgrouptestparameter\"}\r\n                    selectedKey={selectedParameter ? selectedParameter.ntestgrouptestparametercode : 0}\r\n                />\r\n                </div>\r\n                </PerfectScrollbar>\r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupParameterTab);"]},"metadata":{},"sourceType":"module"}