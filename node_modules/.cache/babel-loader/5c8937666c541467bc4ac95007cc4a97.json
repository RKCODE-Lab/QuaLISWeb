{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\batchruncreation\\\\ViewInfo.jsx\";\nimport { faCheck, faCopy, faUserTimes } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Col, FormGroup, FormLabel, Nav, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport { ReadOnlyText } from '../../components/App.styles';\n\nconst ViewInfo = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.selectedRecordView && Object.values(props.selectedRecordView).length ? /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 17\n    }\n  }, props.viewInfoFields ? props.viewInfoFields.map((item, index) => {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      key: `specInfo_${index}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 41\n      }\n    }, props.intl.formatMessage({\n      id: item.label\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 41\n      }\n    }, props.selectedRecordView[item.fieldName])));\n  }) : \"\") : \"\");\n};\n\nexport default injectIntl(ViewInfo);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/batchruncreation/ViewInfo.jsx"],"names":["faCheck","faCopy","faUserTimes","FontAwesomeIcon","React","Col","FormGroup","FormLabel","Nav","Row","injectIntl","ReadOnlyText","ViewInfo","props","selectedRecordView","Object","values","length","viewInfoFields","map","item","index","intl","formatMessage","id","label","fieldName"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,WAA1B,QAA6C,mCAA7C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,SAAzB,EAAoCC,GAApC,EAAyCC,GAAzC,QAAoD,iBAApD;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,YAAT,QAA6B,6BAA7B;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBACQ,0CACEA,KAAK,CAACC,kBAAN,IAA4BC,MAAM,CAACC,MAAP,CAAcH,KAAK,CAACC,kBAApB,EAAwCG,MAApE,gBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACK,cAAN,GAEGL,KAAK,CAACK,cAAN,CAAqBC,GAArB,CAAyB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACtC,wBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,GAAG,EAAG,YAAWA,KAAM,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAYR,KAAK,CAACS,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAEJ,IAAI,CAACK;AAAX,KAAzB,CAAZ,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAeZ,KAAK,CAACC,kBAAN,CAAyBM,IAAI,CAACM,SAA9B,CAAf,CAFJ,CADJ,CADJ;AAQH,GATD,CAFH,GAWO,EAZZ,CADF,GAeY,EAhBd,CADR;AAqBH,CAtBD;;AAuBA,eAAehB,UAAU,CAACE,QAAD,CAAzB","sourcesContent":["import { faCheck, faCopy, faUserTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Col, FormGroup, FormLabel, Nav, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n\r\nconst ViewInfo = (props) => {\r\n    return (\r\n            <>\r\n             {props.selectedRecordView && Object.values(props.selectedRecordView).length ?\r\n                <Row>\r\n                    {props.viewInfoFields ?\r\n\r\n                        props.viewInfoFields.map((item, index) => {\r\n                            return (\r\n                                <Col md={6} key={`specInfo_${index}`}>\r\n                                    <FormGroup>\r\n                                        <FormLabel>{props.intl.formatMessage({ id: item.label })}</FormLabel>\r\n                                        <ReadOnlyText>{props.selectedRecordView[item.fieldName]}</ReadOnlyText>\r\n                                    </FormGroup>\r\n                                </Col>\r\n                            )\r\n                        }) :\"\"\r\n                    }\r\n                 </Row> : \"\"\r\n            }\r\n            </>\r\n        );\r\n};\r\nexport default injectIntl(ViewInfo);\r\n\r\n                   \r\n               "]},"metadata":{},"sourceType":"module"}