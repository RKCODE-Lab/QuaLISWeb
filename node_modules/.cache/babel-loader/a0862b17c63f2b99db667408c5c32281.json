{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\product\\\\ActionPopover.jsx\";\nimport React from 'react';\nimport { faBolt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useRef, useState } from 'react';\nimport { Button, ListGroup, Overlay, Popover } from 'react-bootstrap';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport '../registration/registration.css';\nimport { getStatusIcon } from '../../components/StatusIcon';\nimport { Tooltip } from '@progress/kendo-react-tooltip';\n\nconst ActionPopOver = props => {\n  const [quickShow, setQuickShow] = useState(false); //const [show, setShow] = useState(false);\n\n  const [target, setTarget] = useState(null);\n  const ref = useRef(null); // const handleClick = (event) => {\n  //     setShow(!show);\n  //     setTarget(event.target);\n  // };\n\n  const handleQuickClick = event => {\n    setQuickShow(!quickShow);\n    setTarget(event.target);\n  };\n\n  const itemClick = (paramstatus, sign) => {\n    setQuickShow(!quickShow);\n    props.dynamicButton({\n      paramstatus: paramstatus,\n      sign: sign\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    position: \"bottom\",\n    anchorElement: \"target\",\n    openDelay: 100,\n    parentTitle: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn-circle btn-primary-blue\",\n    title: props.intl.formatMessage({\n      id: \"IDS_CLICKFORMOREACTIONS\"\n    }),\n    style: {\n      display: Object.keys(props.actionDetails).length > 0 ? \"flex\" : \"none\"\n    },\n    onClick: handleQuickClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faBolt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 33\n    }\n  }))), /*#__PURE__*/React.createElement(Overlay, {\n    onHide: handleQuickClick,\n    rootClose: true,\n    show: quickShow,\n    target: target,\n    placement: \"bottom\",\n    container: ref.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    id: \"popover-contained\",\n    class: \"float:left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    as: \"ul\",\n    className: \"no-border w130\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 37\n    }\n  }, props.roleActionDetails.length > 0 && props.roleActionDetails.map(Action => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    as: \"li\",\n    onClick: () => itemClick(Action.ntransactionstatus, Action.nesignneed),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 45\n    }\n  }, getStatusIcon(Action.ntransactionstatus), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-1 text-nowrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 50\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: Action.sactiondisplaystatus,\n    defaultMessage: Action.sactiondisplaystatus,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 50\n    }\n  }))))))));\n};\n\nexport default injectIntl(ActionPopOver);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/product/ActionPopover.jsx"],"names":["React","faBolt","FontAwesomeIcon","useRef","useState","Button","ListGroup","Overlay","Popover","injectIntl","FormattedMessage","getStatusIcon","Tooltip","ActionPopOver","props","quickShow","setQuickShow","target","setTarget","ref","handleQuickClick","event","itemClick","paramstatus","sign","dynamicButton","intl","formatMessage","id","display","Object","keys","actionDetails","length","current","roleActionDetails","map","Action","ntransactionstatus","nesignneed","sactiondisplaystatus"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { faBolt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useRef, useState } from 'react';\r\nimport { Button, ListGroup, Overlay, Popover } from 'react-bootstrap';\r\nimport { injectIntl ,FormattedMessage} from 'react-intl';\r\nimport '../registration/registration.css'\r\nimport { getStatusIcon } from '../../components/StatusIcon';\r\nimport { Tooltip } from '@progress/kendo-react-tooltip';\r\n\r\nconst ActionPopOver = (props) =>{\r\n                const [quickShow, setQuickShow] = useState(false);\r\n                //const [show, setShow] = useState(false);\r\n                const [target, setTarget] = useState(null);\r\n                const ref = useRef(null);\r\n\r\n                // const handleClick = (event) => {\r\n                //     setShow(!show);\r\n                //     setTarget(event.target);\r\n                // };\r\n                const handleQuickClick = (event) => {\r\n                    setQuickShow(!quickShow);\r\n                    setTarget(event.target);\r\n                };\r\n                const itemClick = (paramstatus , sign) => {\r\n                    setQuickShow(!quickShow);\r\n                    props.dynamicButton({paramstatus:paramstatus, sign:sign});\r\n                }\r\n\r\n                return ( <div ref={ref}>\r\n                            <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                            <Button className=\"btn-circle btn-primary-blue\" \r\n                                    title={props.intl.formatMessage({id:\"IDS_CLICKFORMOREACTIONS\"})}\r\n                                    style={{ display: Object.keys(props.actionDetails).length > 0 ? \"flex\" : \"none\" }}  \r\n                                    onClick={handleQuickClick}>\r\n                                <FontAwesomeIcon icon={faBolt}></FontAwesomeIcon>                                                    \r\n                            </Button>\r\n                            </Tooltip>\r\n                            <Overlay\r\n                                onHide={handleQuickClick}\r\n                                rootClose={true}\r\n                                show={quickShow}\r\n                                target={target}\r\n                                placement=\"bottom\"\r\n                                container={ref.current}\r\n                            >\r\n                                <Popover id=\"popover-contained\" class=\"float:left\">\r\n                                    <ListGroup as=\"ul\" className=\"no-border w130\">\r\n                                        {props.roleActionDetails.length > 0 &&\r\n                                        props.roleActionDetails.map((Action) =>\r\n                                            <ListGroup.Item as=\"li\" onClick={() => itemClick(Action.ntransactionstatus, Action.nesignneed)}>\r\n                                                 {getStatusIcon(Action.ntransactionstatus)}\r\n                                                 <span className='ml-1 text-nowrap'>\r\n                                                 <FormattedMessage id={Action.sactiondisplaystatus} defaultMessage={Action.sactiondisplaystatus} /> \r\n                                                 </span>\r\n                                             {/* <FormattedMessage id={Action.sactiondisplaystatus} defaultMessage={Action.sactiondisplaystatus} />  */}\r\n                                            </ListGroup.Item>\r\n                                       )}\r\n                                    </ListGroup>\r\n                                </Popover>\r\n                            </Overlay>\r\n                        </div >\r\n           ) }\r\nexport default injectIntl(ActionPopOver);\r\n"]},"metadata":{},"sourceType":"module"}