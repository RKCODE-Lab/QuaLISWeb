{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\AddRule.js\";\nimport { faChevronRight, faComment, faComments, faEye, faGripVertical, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, Card, Col, Form, Nav, Row } from 'react-bootstrap';\nimport { process } from '@progress/kendo-data-query';\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { BuilderBorder, ContionalButton, DeleteRule } from './RuleEngineSqlbuilder.styled';\nimport '../../assets/styles/querybuilder.css';\nimport './rulesengine.css';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport { ColumnType } from '../../components/Enumeration';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from './RuleEngineQueryBuilderData';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport SplitterLayout from 'react-splitter-layout';\nimport TestInitiateTab from './TestInitiateTab';\nimport ModalShow from '../../components/ModalShow';\n\nconst AddRule = props => {\n  const fieldsForGrid = props.activeTabIndex == 1 ? [{\n    \"idsName\": \"IDS_FROMSITE\",\n    \"dataField\": \"sfromsitename\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_TOSITE\",\n    \"dataField\": \"stositename\",\n    \"width\": \"200px\"\n  }] : [{\n    \"idsName\": \"IDS_COMMENTTYPE\",\n    \"dataField\": \"scommenttype\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_COMMENTSUBTYPE\",\n    \"dataField\": \"scommentsubtype\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_PREFINEDCOMMENTS\",\n    \"dataField\": \"spredefinedname\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_GENERALCOMMENTS\",\n    \"dataField\": \"sgeneralcomments\",\n    \"width\": \"200px\"\n  } // props.activeTabIndex == 2 ? { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" } :\n  //     { \"idsName\": \"IDS_REPORTCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" }\n  ];\n\n  function createRules(items, groupIndex) {\n    let design = [];\n    console.log('props.selectedRecord->>', props.selectedRecord);\n    props.selectedRecord && [...Array(items)].map((data, index) => {\n      let stringOperators = stringOperatorData;\n      design.push( /*#__PURE__*/React.createElement(React.Fragment, null, index > 0 ? props.selectedRecord[\"groupList\"][groupIndex]['button_or'] === true ? /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: \"builder-btn-primary\",\n        marginLeft: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OR\",\n        defaultMessage: \"Or\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 35\n        }\n      }))) : props.selectedRecord[\"groupList\"][groupIndex]['button_and'] === true ? /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: \"builder-btn-primary\",\n        marginLeft: 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_AND\",\n        defaultMessage: \"And\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 39\n        }\n      }))) : \"\" : \"\", /*#__PURE__*/React.createElement(Row, {\n        className: \"my-3 ml-1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pl-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        isSearchable: true,\n        name: \"stestname\",\n        showOption: true,\n        options: props.rulesOption || [],\n        optionId: \"stestname\",\n        optionValue: \"displayname\",\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] || \"\",\n        onChange: value => props.onRuleChange(value, \"stestname\", groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(DeleteRule, {\n        marginLeft: 1,\n        onClick: () => props.deleteRule(groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTrashAlt,\n        color: \"red\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      })), props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Col, {\n        md: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        name: `sinputname`,\n        type: \"text\",\n        value: props.intl.formatMessage({\n          id: \"IDS_WITH\"\n        }),\n        disabled: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: \"orderresulttype\",\n        placeholder: \"\",\n        showOption: true,\n        options: props.resultTypeList,\n        optionId: \"nresultypecode\",\n        optionValue: \"orderresulttype\",\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] || \"\",\n        onChange: value => props.onMasterDataChange(value, \"orderresulttype\", groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        formLabel: \"\",\n        isSearchable: true,\n        name: \"ssymbolname\",\n        placeholder: \"\",\n        showOption: true,\n        options: stringOperators,\n        optionId: \"nvalidationcode\",\n        optionValue: \"ssymbolname\",\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"] || \"\",\n        onChange: value => props.onSymbolChange(value, \"ssymbolname\", groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 37\n        }\n      })), props.selectedRecord[\"groupList\"][groupIndex][index] && /*#__PURE__*/React.createElement(Col, {\n        md: 2,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formGroupClassName: \"remove-floating-label-margin\",\n        isSearchable: true,\n        name: `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`,\n        showOption: true // options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] ?\n        //     props.optionsByRule[groupIndex][index] : []}\n        ,\n        options: props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? props.DiagnosticCaseList : props.GradeList,\n        optionId: props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember,\n        optionValue: props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember // value={props.isResultorOrderType && props.isResultorOrderType[groupIndex] &&\n        //     props.selectedRecord[\"groupList\"][groupIndex][index]\n        //     [props.isResultorOrderType[groupIndex][index] === 1 ? 'ndiagnosticcasecode' : 'ngradecode'] || \"\"}\n        ,\n        value: props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' : 'ngradecode'] || \"\" //  isMulti={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`] && props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.ismulti}\n        ,\n        onChange: value => props.onMasterDataChange(value, props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' : 'ngradecode' // `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`\n        , groupIndex, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 41\n        }\n      }))))));\n    });\n    return design;\n  }\n\n  function createGroupRules() {\n    console.log('props.addGroupList->', props);\n    let indexCount = 0;\n    let design = [];\n    console.log('props.addGroupList->', props.addGroupList);\n    props.selectedRecord[\"groupList\"] && props.addGroupList.length > 0 && props.addGroupList.map((items, index) => {\n      let stringOperators = stringOperatorData;\n\n      if (props.selectedRecord[\"groupList\"] && props.selectedRecord[\"groupList\"][index][\"stestname\"] && !props.selectedRecord[\"groupList\"][index][\"stestname\"].items.needmasterdata && props.selectedRecord[\"groupList\"][index][\"stestname\"].items.columntype === ColumnType.TEXTINPUT) {\n        const temp = stringOperators.filter(item => {\n          if (item.items.symbolType !== 6) {\n            return item;\n          }\n        });\n        stringOperators = temp;\n      }\n\n      if (items > -1) {\n        indexCount = indexCount + 1;\n      }\n\n      ;\n      design.push( /*#__PURE__*/React.createElement(React.Fragment, null, index > 0 && /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupListJoins\"] && props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_and\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 1,\n        onClick: () => props.onConditionClick(\"button_and\", index - 1, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_AND\",\n        defaultMessage: \"And\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupListJoins\"] && props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_or\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_or\", index - 1, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OR\",\n        defaultMessage: \"Or\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 31\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupListJoins\"] && props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_not\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_not\", index - 1, true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_NOT\",\n        defaultMessage: \"NOT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 31\n        }\n      })))), items > -1 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BuilderBorder, {\n        key: index,\n        className: \"p-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        onClick: () => props.addRule(\"views\", index),\n        className: \"mr-1 rulesengine-rule-btn\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 41\n        }\n      }, '+', \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_RULE\",\n        defaultMessage: \"Rule\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 51\n        }\n      })), items > 1 ? /*#__PURE__*/React.createElement(Row, {\n        className: \"rulesengine-condition-btn \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupList\"][index][\"button_and\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 1,\n        onClick: () => props.onConditionClick(\"button_and\", index, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_AND\",\n        defaultMessage: \"And\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 59\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupList\"][index][\"button_or\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_or\", index, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_OR\",\n        defaultMessage: \"Or\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 59\n        }\n      }))), /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_not\", index, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_NOT\",\n        defaultMessage: \"NOT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 59\n        }\n      })))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        className: \"notbtn rulesengine-condition-btn \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(ContionalButton, {\n        type: \"button\",\n        className: props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\",\n        marginLeft: 0,\n        onClick: () => props.onConditionClick(\"button_not\", index, false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_NOT\",\n        defaultMessage: \"NOT\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 63\n        }\n      }))))))), /*#__PURE__*/React.createElement(React.Fragment, null, createRules(items, index)))) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n    });\n    return design;\n  }\n\n  function testParameterAccordion(TestParameter) {\n    const accordionMap = new Map();\n    TestParameter.map(testParameter => accordionMap.set(testParameter.ntestparametercode, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      testParameter: testParameter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"d-flex justify-content-end pr-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addtestparameter\",\n      className: \"add-txt-btn pr-0\",\n      testParameter: testParameter,\n      onClick: () => props.addModalSite(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      testParameter: testParameter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_OUTSOURCE\",\n      defaultMessage: \"Add Site\",\n      testParameter: testParameter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 33\n      }\n    })))),\n    /*#__PURE__*/\n    //props.masterData[\"testSite\"][testParameter.ntestparametercode] ?\n    React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"testsectionkey\",\n      primaryKeyField: \"nresultusedmaterialcode\" //expandField=\"expanded\"\n      //   dataResult={props.dataResult || []}\n      ,\n      dataResult: props.masterData[\"testSite\"] && process(props.masterData[\"testSite\"][testParameter.ntestparametercode] || [], props.dataStateObject && props.dataStateObject[testParameter.ntestparametercode] ? props.dataStateObject[testParameter.ntestparametercode] : {\n        skip: 0,\n        take: 10\n      }) //dataState={{ skip: 0, take: 10 }}\n      // dataStateChange={props.dataStateChange}\n      ,\n      dataState: props.dataStateObject && props.dataStateObject[testParameter.ntestparametercode] ? props.dataStateObject[testParameter.ntestparametercode] : {\n        skip: 0,\n        take: 10\n      } // dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\n      ,\n      dataStateChange: event => {\n        props.dataStateChange(event, testParameter.ntestparametercode);\n      },\n      extractedColumnList: fieldsForGrid,\n      controlMap: props.controlMap,\n      userRoleControlRights: props.userRoleControlRights,\n      pageable: true,\n      isActionRequired: true,\n      scrollable: 'scrollable',\n      hideColumnFilter: true,\n      selectedId: 0,\n      testParameter: testParameter,\n      deleteRecord: props.deletModalSite,\n      deleteParam: {\n        operation: \"delete\"\n      },\n      actionIcons: [{\n        title: props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        controlname: \"faTrashAlt\",\n        hidden: false,\n        objectName: \"delete\",\n        onClick: props.deletModalSite\n      }],\n      gridWidth: \"400px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 29\n      }\n    })) // : \"\"\n    )));\n    return accordionMap;\n  }\n\n  function testCommentsAccordion(TestParameter) {\n    const accordionMap = new Map();\n    TestParameter.map(testParameterComments => accordionMap.set(testParameterComments.ntestparametercode, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      testParameterComments: testParameterComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletetestparameter\",\n      className: \"add-txt-btn\",\n      testParameterComments: testParameterComments,\n      onClick: () => props.deleteModalTest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      testParameterComments: testParameterComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TEST\",\n      defaultMessage: \"Test\",\n      testParameterComments: testParameterComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 33\n      }\n    }))), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addtestparameter\",\n      className: \"add-txt-btn\",\n      testParameterComments: testParameterComments,\n      onClick: () => props.addComments(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      testParameterComments: testParameterComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TESTCOMMENTS\",\n      defaultMessage: \"Add Test Comments\",\n      testParameterComments: testParameterComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"testsectionkey\",\n      primaryKeyField: \"nresultusedmaterialcode\" // expandField=\"expanded\"\n      //   dataResult={props.dataResult || []}\n      ,\n      dataResult: props.masterData[\"testComments\"] && process(props.masterData[\"testComments\"][testParameterComments.ntestparametercode] || [], props.dataStateObject && props.dataStateObject[testParameterComments.ntestparametercode] ? props.dataStateObject[testParameterComments.ntestparametercode] : {\n        skip: 0,\n        take: 10\n      }) //dataState={{ skip: 0, take: 10 }}\n      // dataStateChange={props.dataStateChange}\n      ,\n      dataState: props.dataStateObject && props.dataStateObject[testParameterComments.ntestparametercode] ? props.dataStateObject[testParameterComments.ntestparametercode] : {\n        skip: 0,\n        take: 10\n      } // dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\n      ,\n      dataStateChange: event => {\n        props.dataStateChange(event, testParameterComments.ntestparametercode);\n      },\n      extractedColumnList: fieldsForGrid,\n      controlMap: props.controlMap,\n      userRoleControlRights: props.userRoleControlRights,\n      pageable: true,\n      isActionRequired: true,\n      scrollable: 'scrollable',\n      hideColumnFilter: true,\n      selectedId: 0,\n      testParameterComments: testParameterComments,\n      deleteRecord: props.deletModalSite,\n      deleteParam: {\n        operation: \"delete\"\n      },\n      actionIcons: [{\n        title: props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        controlname: \"faTrashAlt\",\n        hidden: false,\n        objectName: \"delete\",\n        onClick: props.deletModalSite\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 21\n      }\n    }))));\n    return accordionMap;\n  }\n\n  function reportCommentsAccordion(TestParameter) {\n    const accordionMap = new Map();\n    TestParameter.map(testParameterreportComments => accordionMap.set(testParameterreportComments.ntestparametercode, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletetestparameter\",\n      className: \"add-txt-btn\",\n      testParameterreportComments: testParameterreportComments,\n      onClick: () => props.deleteModalTest(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DELETE\",\n      defaultMessage: \"Delete\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addtestparameter\",\n      className: \"add-txt-btn\",\n      testParameterreportComments: testParameterreportComments,\n      onClick: () => props.addComments(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 33\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADDREPORTCOMMENTS\",\n      defaultMessage: \"Add Report Comments\",\n      testParameterreportComments: testParameterreportComments,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 33\n      }\n    })))), /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"testsectionkey\",\n      primaryKeyField: \"nresultusedmaterialcode\" // expandField=\"expanded\"\n      //   dataResult={props.dataResult || []}\n      ,\n      dataResult: props.masterData[\"reportComments\"] && process(props.masterData[\"reportComments\"][testParameterreportComments.ntestparametercode] || [], props.dataState ? props.dataState : {\n        skip: 0,\n        take: 10\n      }) //dataState={{ skip: 0, take: 10 }}\n      // dataStateChange={props.dataStateChange}\n      ,\n      dataState: props.dataState ? props.dataState : {\n        skip: 0,\n        take: 10\n      } // dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\n      ,\n      dataStateChange: props.dataStateChange,\n      extractedColumnList: fieldsForGrid,\n      controlMap: props.controlMap,\n      userRoleControlRights: props.userRoleControlRights,\n      pageable: true,\n      isActionRequired: true,\n      scrollable: 'scrollable',\n      hideColumnFilter: true,\n      selectedId: 0,\n      testParameterComments: testParameterreportComments,\n      deleteRecord: props.deletModalSite,\n      deleteParam: {\n        operation: \"delete\"\n      },\n      actionIcons: [{\n        title: props.intl.formatMessage({\n          id: \"IDS_DELETE\"\n        }),\n        controlname: \"faTrashAlt\",\n        hidden: false,\n        objectName: \"delete\",\n        onClick: props.deletModalSite\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 21\n      }\n    }))));\n    return accordionMap;\n  }\n\n  function TabDetails() {\n    const resultTabMap = new Map();\n\n    if (props.addOutcomeList.length === 0) {\n      props.activeTabIndex == 1 ? resultTabMap.set(\"IDS_NEEDTESTINITIATE\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions-stripe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtestparameter\" //className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addParameterId) === -1}\n        ,\n        onClick: () => props.addTest(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 523,\n          columnNumber: 37\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_Test\",\n        defaultMessage: \"Add Test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 37\n        }\n      })))), props.masterData.testParameter && props.masterData.testParameter.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n        key: \"parameteraccordion\",\n        clickIconGroup: true,\n        deleteModalTest1: props.deleteModalTest,\n        accordionTitle: \"stestparametersynonym\",\n        accordionComponent: testParameterAccordion(props.masterData.testParameter),\n        inputParam: {\n          masterData: props.masterData,\n          userInfo: props.userInfo,\n          nFlag: 5\n        },\n        accordionClick: props.getOutcomeDetails,\n        accordionPrimaryKey: \"ntestparametercode\",\n        accordionObjectName: \"testParameter\",\n        selectedKey: props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 29\n        }\n      }))) : props.activeTabIndex == 2 ? resultTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions-stripe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtestparameter\" //className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addParameterId) === -1}\n        ,\n        onClick: () => props.addTest(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 41\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_Test\",\n        defaultMessage: \"Add Test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 41\n        }\n      })))), props.masterData.testParameterComments && props.masterData.testParameterComments.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n        key: \"parameteraccordion\",\n        accordionTitle: \"stestparametersynonym\",\n        accordionComponent: testCommentsAccordion(props.masterData.testParameterComments),\n        inputParam: {\n          masterData: props.masterData,\n          userInfo: props.userInfo,\n          nFlag: 5\n        },\n        accordionClick: props.getOutcomeDetails,\n        accordionPrimaryKey: \"ntestparametercode\",\n        accordionObjectName: \"testParameterComments\",\n        selectedKey: props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 557,\n          columnNumber: 33\n        }\n      }))) : resultTabMap.set(\"IDS_REPORTCOMMENTS\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"actions-stripe\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 572,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"d-flex justify-content-end\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        name: \"addtestparameter\" //className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addParameterId) === -1}\n        ,\n        onClick: () => props.addTest(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 577,\n          columnNumber: 41\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_Test\",\n        defaultMessage: \"Add Test\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 41\n        }\n      })))), props.masterData.testParameterreportComments && props.masterData.testParameterreportComments.length > 0 && /*#__PURE__*/React.createElement(CustomAccordion, {\n        key: \"parameteraccordion\",\n        accordionTitle: \"stestparametersynonym\",\n        accordionComponent: reportCommentsAccordion(props.masterData.testParameterreportComments),\n        inputParam: {\n          masterData: props.masterData,\n          userInfo: props.userInfo,\n          nFlag: 5\n        },\n        accordionClick: props.getOutcomeDetails,\n        accordionPrimaryKey: \"ntestparametercode\",\n        accordionObjectName: \"testParameterreportComments\",\n        selectedKey: props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 33\n        }\n      })));\n    }\n\n    return resultTabMap;\n  }\n\n  function testfilter(list) {\n    let activeTabIndex = props.activeTabIndex;\n\n    if (props.masterData.selectedParameter) {\n      let dynamicList = activeTabIndex === 2 ? props.masterData[\"testComments\"] && props.masterData[\"testComments\"][props.masterData.selectedParameter.ntestparametercode] : props.masterData[\"reportComments\"] && props.masterData[\"reportComments\"][props.masterData.selectedParameter.ntestparametercode];\n\n      if (dynamicList !== undefined) {\n        list = list.filter(({\n          value\n        }) => !dynamicList.some(x => x.nsampletestcommentscode == value));\n      }\n    }\n\n    return list;\n  }\n\n  const mandatoryFields = // props.action === 'IDS_ADDREPORTCOMMENTS' ? [\n  //     { \"idsName\": \"IDS_REPORTCOMMENTS\", \"dataField\": \"nsampletestcommentscode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\n  // ] :\n  //     props.action === 'IDS_ADDTESTCOMMENTS' ? [\n  //         { \"idsName\": \"IDS_TESTCOMMENTS\", \"dataField\": \"nsampletestcommentscode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\n  //     ]\n  //         : props.action === 'IDS_ADDTEST' ? [\n  //             { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\n  //         ] :\n  //             [\n  //                 { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\n  //                 { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\n  //             ]\n  //props.action === 'IDS_ADDTESTCOMMENTS' || props.action === 'IDS_ADDTEST' ?\n  props.action === 'IDS_SAVERULEMODAL' ? [{\n    \"idsName\": \"IDS_RULESENGINENAME\",\n    \"dataField\": \"srulename\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_ENTER\",\n    \"controlType\": \"file\"\n  }] : props.activeTabIndex === 1 ? // props.needoutsource !== true ?\n  [{\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"ntestparametercode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }] // :\n  // [\n  //     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\n  //     { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\n  //     { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\n  // ]\n  : props.activeTabIndex === 2 ? [{\n    \"idsName\": \"IDS_TESTNAME\",\n    \"dataField\": \"ntestparametercode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }, {\n    \"idsName\": \"IDS_COMMENTTYPE\",\n    \"dataField\": \"ncommenttypecode\",\n    \"width\": \"200px\"\n  }, {\n    \"idsName\": \"IDS_COMMENTSUBTYPE\",\n    \"dataField\": \"ncommentsubtypecode\",\n    \"width\": \"200px\"\n  }, props.isneedsgeneralcomments === true ? {\n    \"idsName\": \"IDS_GENERALCOMMENTS\",\n    \"dataField\": \"sgeneralcomments\",\n    \"width\": \"200px\"\n  } : {\n    \"idsName\": \"IDS_PREFINEDCOMMENTS\",\n    \"dataField\": \"nsampletestcommentscode\",\n    \"width\": \"200px\"\n  } // props.activeTabIndex == 2 ? { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" } :\n  //     { \"idsName\": \"IDS_REPORTCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" }\n  ] : [{\n    \"idsName\": \"IDS_FROMSITE\",\n    \"dataField\": \"nfromsitecode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_CHOOSE\",\n    \"controlType\": \"file\"\n  }, {\n    \"idsName\": \"IDS_TOSITE\",\n    \"dataField\": \"ntositecode\",\n    \"mandatory\": true,\n    \"mandatoryLabel\": \"IDS_SELECT\",\n    \"controlType\": \"selectbox\"\n  }];\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"modal-inner-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 654,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"row margin-top-negative-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 655,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"p-0 col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"vertical-tab-top popup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 657,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"full-width center-area-wrap py-2 px-0 border-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 658,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"center-area full-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 659,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 660,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    className: `tab-left-area ${props.activeTabIndex ? 'active' : \"\"} ${props.enablePropertyPopup ? 'active-popup' : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"full-width center-area-wrap my-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 664,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"center-area m-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 665,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    className: \"d-flex pt-0 mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 666,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 667,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nproductcatcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PRODUCTCATEGORY\"\n    }),\n    isSearchable: true,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: true,\n    isDisabled: false,\n    showOption: true,\n    options: props.productCategoryList || [],\n    value: props.selectedRecord.nproductcatcode ? props.selectedRecord.nproductcatcode : \"\",\n    onChange: value => props.onmodalComboChange(value, \"nproductcatcode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 668,\n      columnNumber: 41\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 685,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.addGroup(\"views\"),\n    className: \"mr-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 686,\n      columnNumber: 41\n    }\n  }, '+', \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_GROUP\",\n    defaultMessage: \"Group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 51\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => props.resetRule(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 689,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n    id: \"IDS_RESET\",\n    defaultMessage: \"Reset\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 45\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    className: \"popup-fixed-center-headed-full-width\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 694,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    className: \"ml-0 mr-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 37\n    }\n  }, props.addGroupList.length > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(BuilderBorder, {\n    className: \"border-0 \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 49\n    }\n  }, \"    \", createGroupRules(), \"   \")) : /*#__PURE__*/React.createElement(React.Fragment, null))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    md: 6,\n    className: `${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${props.activeTabIndex ? 'active' : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 712,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: `${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${props.activeTabIndex ? 'active' : \"\"}`,\n    style: {\n      width: props.enablePropertyPopup ? props.propertyPopupWidth + '%' : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 714,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: ` vertical-tab-close ${props.activeTabIndex ? 'active' : \"\"}`,\n    onClick: () => props.changePropertyView(0),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faChevronRight,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 717,\n      columnNumber: 92\n    }\n  }), \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: ` vertical-tab-content-common  ${props.activeTabIndex && props.activeTabIndex ? 'active' : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 718,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"inner_h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 720,\n      columnNumber: 29\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_OUTCOME\"\n  })), props.activeTabIndex && props.activeTabIndex ? /*#__PURE__*/React.createElement(CustomTabs, {\n    activeKey: props.activeTestTab,\n    tabDetail: TabDetails(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 725,\n      columnNumber: 33\n    }\n  }) : \"\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"tab-head\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 731,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"li\", {\n    className: `${props.activeTabIndex && props.activeTabIndex == 1 ? 'active' : \"\"}`,\n    onClick: () => props.changePropertyView(1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faEye,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 735,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 33\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_NEEDTESTINITIATE\"\n  }))), /*#__PURE__*/React.createElement(\"li\", {\n    className: `${props.activeTabIndex && props.activeTabIndex == 2 ? 'active' : \"\"}`,\n    onClick: () => props.changePropertyView(2),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 740,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faComments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 742,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 743,\n      columnNumber: 33\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_TESTCOMMENTS\"\n  })))))), props.openModalPopup && /*#__PURE__*/React.createElement(ModalShow, {\n    modalShow: true,\n    modalTitle: props.action === 'IDS_SAVERULEMODAL' ? 'IDS_RULESENGINENAME' : props.action === 'IDS_ADDREPORTCOMMENTS' ? props.intl.formatMessage({\n      id: 'IDS_ADDREPORTCOMMENTS'\n    }) : props.action === 'IDS_ADDTESTCOMMENTS' ? props.intl.formatMessage({\n      id: 'IDS_ADDTESTCOMMENTS'\n    }) : props.action === 'IDS_ADDTEST' ? props.intl.formatMessage({\n      id: 'IDS_ADDTEST'\n    }) : props.intl.formatMessage({\n      id: 'IDS_ADDSITE'\n    }),\n    closeModal: props.closeModalShow,\n    onSaveClick: props.action === 'IDS_SAVERULEMODAL' ? props.save : props.modalsaveClick // validateEsign={this.validateEsign}\n    ,\n    selectedRecord: props.selectedRecord,\n    mandatoryFields: mandatoryFields,\n    modalBody: props.openmodalsavePopup === true ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 884,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 885,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      formGroupClassName: \"remove-floating-label-margin\",\n      label: props.intl.formatMessage({\n        id: \"IDS_RULESENGINENAME\"\n      }),\n      name: `srulename`,\n      type: \"text\",\n      required: false,\n      isMandatory: true,\n      value: props.selectedRecord[\"srulename\"] || \"\",\n      onChange: event => props.onInputChange(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 886,\n        columnNumber: 37\n      }\n    }))) : props.activeTabIndex == 1 ?\n    /*#__PURE__*/\n    //  props.action === 'IDS_ADDTEST' ?\n    React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: //props.action === 'IDS_ADDTEST' ? 8 :\n      12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      isSearchable: true,\n      name: \"ntestparametercode\",\n      showOption: true,\n      options: props.viewColumnListByRule || [],\n      optionId: \"ntestparametercode\",\n      optionValue: \"stestparametersynonym\",\n      value: props.selectedRecord[\"ntestparametercode\"] && props.selectedRecord[\"ntestparametercode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntestparametercode'),\n      isMandatory: true,\n      isDisabled: props.action === 'IDS_ADDTEST' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 45\n      }\n    }))), ( //props.action === 'IDS_ADDSITE' ?\n    props.action === 'IDS_ADDSITE' || props.action === 'IDS_ADDTEST' ? true : false //:\n    // props.needoutsource === true ? true : false\n    ) ? /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 940,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_FROMSITE\"\n      }) // formGroupClassName=\"remove-floating-label-margin\"\n      ,\n      isSearchable: true,\n      name: \"nfromsitecode\",\n      showOption: true,\n      options: props.siteList || [],\n      optionId: \"nfromsitecode\",\n      optionValue: \"ssitename\",\n      value: props.selectedRecord[\"nfromsitecode\"] && props.selectedRecord[\"nfromsitecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'nfromsitecode') //  isMandatory={true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 941,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 955,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TOSITE\"\n      }) //    formGroupClassName=\"remove-floating-label-margin\"\n      ,\n      isSearchable: true,\n      name: \"ntositecode\",\n      showOption: true,\n      options: props.siteList || [],\n      optionId: \"ntositecode\",\n      optionValue: \"ssitename\",\n      value: props.selectedRecord[\"ntositecode\"] && props.selectedRecord[\"ntositecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntositecode') //  isMandatory={true}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 956,\n        columnNumber: 49\n      }\n    }))) : \"\") // :\n    // <Row>\n    //     <Col md={12}>\n    //         <FormSelectSearch\n    //             formLabel={props.intl.formatMessage({ id: \"IDS_FROMSITE\" })}\n    //             // formGroupClassName=\"remove-floating-label-margin\"\n    //             isSearchable={true}\n    //             name={\"nfromsitecode\"}\n    //             showOption={true}\n    //             options={props.siteList || []}\n    //             optionId='nfromsitecode'\n    //             optionValue='ssitename'\n    //             value={props.selectedRecord[\"nfromsitecode\"] && props.selectedRecord[\"nfromsitecode\"] || \"\"}\n    //             onChange={value => props.onmodalComboChange(value, 'nfromsitecode')}\n    //             isMandatory={true}\n    //         ></FormSelectSearch>\n    //     </Col>\n    //     <Col md={12}>\n    //         <FormSelectSearch\n    //             formLabel={props.intl.formatMessage({ id: \"IDS_TOSITE\" })}\n    //             //    formGroupClassName=\"remove-floating-label-margin\"\n    //             isSearchable={true}\n    //             name={\"ntositecode\"}\n    //             showOption={true}\n    //             options={props.siteList || []}\n    //             optionId='ntositecode'\n    //             optionValue='ssitename'\n    //             value={props.selectedRecord[\"ntositecode\"] && props.selectedRecord[\"ntositecode\"] || \"\"}\n    //             onChange={value => props.onmodalComboChange(value, 'ntositecode')}\n    //             isMandatory={true}\n    //         ></FormSelectSearch>\n    //     </Col>\n    // </Row>\n    : props.activeTabIndex == 2 ?\n    /*#__PURE__*/\n    //  props.action === 'IDS_ADDTEST' ?\n    React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1010,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      isSearchable: true,\n      name: \"ntestparametercode\",\n      showOption: true,\n      options: props.viewColumnListByRule || [],\n      optionId: \"ntestparametercode\",\n      optionValue: \"stestparametersynonym\",\n      value: props.selectedRecord[\"ntestparametercode\"] && props.selectedRecord[\"ntestparametercode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntestparametercode'),\n      isMandatory: true,\n      isDisabled: props.action === 'IDS_ADDTEST' ? false : true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1011,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1025,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_COMMENTTYPE\"\n      }),\n      isSearchable: true,\n      name: \"ncommenttypecode\",\n      showOption: true,\n      options: props.CommentType || [],\n      optionId: \"ncommenttypecode\",\n      optionValue: \"scommenttype\",\n      value: props.selectedRecord[\"ncommenttypecode\"] && props.selectedRecord[\"ncommenttypecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ncommenttypecode'),\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1026,\n        columnNumber: 45\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_COMMENTSUBTYPE\"\n      }),\n      isSearchable: true,\n      name: \"ncommentsubtypecode\",\n      showOption: true,\n      options: props.CommentSubType || [],\n      optionId: \"ncommentsubtypecode\",\n      optionValue: \"scommentsubtype\",\n      value: props.selectedRecord[\"ncommentsubtypecode\"] && props.selectedRecord[\"ncommentsubtypecode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ncommentsubtypecode'),\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1040,\n        columnNumber: 45\n      }\n    })), props.selectedRecord[\"ncommentsubtypecode\"] ? props.isneedsgeneralcomments === true ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1055,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      name: \"sgeneralcomments\",\n      label: props.intl.formatMessage({\n        id: \"IDS_GENERALCOMMENTS\"\n      }),\n      type: \"text\",\n      value: props.selectedRecord && props.selectedRecord['sgeneralcomments'] || \"\" // isMandatory={control.mandatory}\n      // required={control.mandatory}\n      ,\n      onChange: event => props.onInputChange(event, 1),\n      rows: \"2\",\n      maxLength: \"255\",\n      isDisabled: false,\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1056,\n        columnNumber: 53\n      }\n    })) : /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1069,\n        columnNumber: 58\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_PREDEFINEDNAME\"\n      }),\n      isSearchable: true,\n      name: \"nsampletestcommentscode\",\n      showOption: true,\n      options: props.predefcomments || [],\n      optionId: \"nsampletestcommentscode\",\n      optionValue: \"spredefinedname\",\n      value: props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'nsampletestcommentscode'),\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1070,\n        columnNumber: 53\n      }\n    })) : \"\") // : <Row>\n    //     <Col md={12}>\n    //         <FormInput\n    //             name={\"ncommentsubtypecode\"}\n    //             label={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\n    //             type=\"text\"\n    //             onChange={(event) => props.onInputOnChange(event, 1)}\n    //             placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\n    //             value={props.testcomments && props.testcomments[0].item.scommentsubtype || \"\"}\n    //             isMandatory=\"*\"\n    //             required={true}\n    //             maxLength={100}\n    //             isDisabled={true}\n    //         />\n    //     </Col>\n    //     <Col md={12}>\n    //         <FormSelectSearch\n    //             formLabel={props.intl.formatMessage({ id: \"IDS_TESTCOMMENTS\" })}\n    //             //  formGroupClassName=\"remove-floating-label-margin\"\n    //             isSearchable={true}\n    //             name={\"nsampletestcommentscode\"}\n    //             showOption={true}\n    //             options={testfilter(props.testcomments) || []}\n    //             optionId='nsampletestcommentscode'\n    //             optionValue='spredefinedname'\n    //             value={props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\"}\n    //             onChange={value => props.onmodalComboChange(value, 'nsampletestcommentscode')}\n    //             isMandatory={true}\n    //         ></FormSelectSearch>\n    //     </Col>\n    // </Row>\n    : props.action === 'IDS_ADDTEST' ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1119,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1120,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_TESTNAME\"\n      }),\n      formGroupClassName: \"remove-floating-label-margin\",\n      isSearchable: true,\n      name: \"ntestparametercode\",\n      showOption: true,\n      options: props.viewColumnListByRule || [],\n      optionId: \"ntestparametercode\",\n      optionValue: \"stestparametersynonym\",\n      value: props.selectedRecord[\"ntestparametercode\"] && props.selectedRecord[\"ntestparametercode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'ntestparametercode'),\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1121,\n        columnNumber: 49\n      }\n    }))) : /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1136,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1137,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"ncommentsubtypecode\",\n      label: props.intl.formatMessage({\n        id: \"IDS_COMMENTSUBTYPE\"\n      }),\n      type: \"text\",\n      onChange: event => props.onInputOnChange(event, 1),\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_COMMENTSUBTYPE\"\n      }),\n      value: props.reportcomments && props.reportcomments[0].item.scommentsubtype || \"\",\n      isMandatory: \"*\",\n      required: true,\n      maxLength: 100,\n      isDisabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1138,\n        columnNumber: 49\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1151,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_REPORTCOMMENTS\"\n      }) //   formGroupClassName=\"remove-floating-label-margin\"\n      ,\n      isSearchable: true,\n      name: \"nsampletestcommentscode\",\n      showOption: true,\n      options: testfilter(props.reportcomments) || [],\n      optionId: \"nsampletestcommentscode\",\n      optionValue: \"spredefinedname\",\n      value: props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\",\n      onChange: value => props.onmodalComboChange(value, 'nsampletestcommentscode'),\n      isMandatory: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 49\n      }\n    }))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 868,\n      columnNumber: 17\n    }\n  })))));\n};\n\nexport default injectIntl(AddRule);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/AddRule.js"],"names":["faChevronRight","faComment","faComments","faEye","faGripVertical","faPlus","faTrashAlt","FontAwesomeIcon","React","Button","Card","Col","Form","Nav","Row","process","CustomAccordion","FormattedMessage","injectIntl","FormSelectSearch","FormInput","BuilderBorder","ContionalButton","DeleteRule","CustomTabs","ColumnType","FormTextarea","stringOperatorData","conditionalOperatorData","numericOperatorData","joinConditionData","aggregateFunction","orderByList","CustomSwitch","DateTimePicker","FormCheckbox","DataGrid","FormMultiSelect","SplitterLayout","TestInitiateTab","ModalShow","AddRule","props","fieldsForGrid","activeTabIndex","createRules","items","groupIndex","design","console","log","selectedRecord","Array","map","data","index","stringOperators","push","rulesOption","value","onRuleChange","deleteRule","intl","formatMessage","id","resultTypeList","onMasterDataChange","onSymbolChange","valuemember","DiagnosticCaseList","GradeList","displaymember","createGroupRules","indexCount","addGroupList","length","needmasterdata","columntype","TEXTINPUT","temp","filter","item","symbolType","onConditionClick","addRule","testParameterAccordion","TestParameter","accordionMap","Map","testParameter","set","ntestparametercode","addModalSite","masterData","dataStateObject","skip","take","event","dataStateChange","controlMap","userRoleControlRights","deletModalSite","operation","title","controlname","hidden","objectName","onClick","testCommentsAccordion","testParameterComments","deleteModalTest","addComments","reportCommentsAccordion","testParameterreportComments","dataState","TabDetails","resultTabMap","addOutcomeList","addTest","userInfo","nFlag","getOutcomeDetails","selectedParameter","testfilter","list","dynamicList","undefined","some","x","nsampletestcommentscode","mandatoryFields","action","isneedsgeneralcomments","enablePropertyPopup","productCategoryList","nproductcatcode","onmodalComboChange","addGroup","resetRule","width","propertyPopupWidth","changePropertyView","activeTestTab","openModalPopup","closeModalShow","save","modalsaveClick","openmodalsavePopup","onInputChange","viewColumnListByRule","siteList","CommentType","CommentSubType","predefcomments","onInputOnChange","reportcomments","scommentsubtype"],"mappings":";AAAA,SAASA,cAAT,EAAyBC,SAAzB,EAAoCC,UAApC,EAAgDC,KAAhD,EAAuDC,cAAvD,EAAuEC,MAAvE,EAA+EC,UAA/E,QAAiG,mCAAjG;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,GAAvB,EAA4BC,IAA5B,EAAkCC,GAAlC,EAAuCC,GAAvC,QAAkD,iBAAlD;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,OAAOC,eAAP,MAA4B,8DAA5B;AAEA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,OAAOC,SAAP,MAAsB,kDAAtB;AACA,SAASC,aAAT,EAAwBC,eAAxB,EAAyCC,UAAzC,QAA2D,+BAA3D;AACA,OAAO,sCAAP;AACA,OAAO,mBAAP;AAEA,OAAOC,UAAP,MAAuB,oDAAvB;AAEA,SAASC,UAAT,QAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,SAASC,kBAAT,EAA6BC,uBAA7B,EAAsDC,mBAAtD,EAA2EC,iBAA3E,EAA8FC,iBAA9F,EAAiHC,WAAjH,QAAoI,8BAApI;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,cAAP,MAA2B,8DAA3B;AACA,OAAOC,YAAP,MAAyB,wDAAzB;AACA,OAAOC,QAAP,MAAqB,gDAArB;AACA,OAAOC,eAAP,MAA4B,gEAA5B;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,SAAP,MAAsB,4BAAtB;;AAGA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACvB,QAAMC,aAAa,GAAGD,KAAK,CAACE,cAAN,IAAwB,CAAxB,GAA4B,CAC9C;AAAE,eAAW,cAAb;AAA6B,iBAAa,eAA1C;AAA2D,aAAS;AAApE,GAD8C,EAE9C;AAAE,eAAW,YAAb;AAA2B,iBAAa,aAAxC;AAAuD,aAAS;AAAhE,GAF8C,CAA5B,GAGlB,CAAC;AAAE,eAAW,iBAAb;AAAgC,iBAAa,cAA7C;AAA6D,aAAS;AAAtE,GAAD,EACJ;AAAE,eAAW,oBAAb;AAAmC,iBAAa,iBAAhD;AAAmE,aAAS;AAA5E,GADI,EAEJ;AAAE,eAAW,sBAAb;AAAqC,iBAAa,iBAAlD;AAAqE,aAAS;AAA9E,GAFI,EAGJ;AAAE,eAAW,qBAAb;AAAoC,iBAAa,kBAAjD;AAAqE,aAAS;AAA9E,GAHI,CAIA;AACA;AALA,GAHJ;;AAUA,WAASC,WAAT,CAAqBC,KAArB,EAA4BC,UAA5B,EAAwC;AACpC,QAAIC,MAAM,GAAG,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCR,KAAK,CAACS,cAA7C;AACAT,IAAAA,KAAK,CAACS,cAAN,IAAwB,CAAC,GAAGC,KAAK,CAACN,KAAD,CAAT,EAAkBO,GAAlB,CAAsB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC3D,UAAIC,eAAe,GAAG7B,kBAAtB;AACAqB,MAAAA,MAAM,CAACS,IAAP,eACI,0CACKF,KAAK,GAAG,CAAR,GAAYb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8C,WAA9C,MAA+D,IAA/D,gBACT,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAE,qBAA1C;AAAiE,QAAA,UAAU,EAAE,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,cAAc,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAFJ,CADS,GAKTL,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8C,YAA9C,MAAgE,IAAhE,gBACI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAE,qBAA1C;AAAiE,QAAA,UAAU,EAAE,CAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAFJ,CADJ,GAIyB,EAT5B,GASiC,EAVtC,eAgBI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAY,QAAA,SAAS,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AACI,QAAA,kBAAkB,EAAC,8BADvB;AAEI,QAAA,YAAY,EAAE,IAFlB;AAGI,QAAA,IAAI,EAAE,WAHV;AAII,QAAA,UAAU,EAAE,IAJhB;AAKI,QAAA,OAAO,EAAEL,KAAK,CAACgB,WAAN,IAAqB,EALlC;AAMI,QAAA,QAAQ,EAAC,WANb;AAOI,QAAA,WAAW,EAAC,aAPhB;AAQI,QAAA,KAAK,EAAEhB,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,KAAwDb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,WAArD,CAAxD,IAA6H,EARxI;AASI,QAAA,QAAQ,EAAEI,KAAK,IAAIjB,KAAK,CAACkB,YAAN,CAAmBD,KAAnB,EAA0B,WAA1B,EAAuCZ,UAAvC,EAAmDQ,KAAnD,CATvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CALJ,eAkBI,oBAAC,UAAD;AAAY,QAAA,UAAU,EAAE,CAAxB;AAA2B,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACmB,UAAN,CAAiBd,UAAjB,EAA6BQ,KAA7B,CAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEjD,UAAvB;AAAmC,QAAA,KAAK,EAAC,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAlBJ,EAuBQoC,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,KAAwDb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,WAArD,CAAxD,iBACA,uDACI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,SAAD;AACI,QAAA,kBAAkB,EAAC,8BADvB;AAEI,QAAA,IAAI,EAAG,YAFX;AAGI,QAAA,IAAI,EAAC,MAHT;AAII,QAAA,KAAK,EAAEb,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAzB,CAJX;AAKI,QAAA,QAAQ,EAAE,IALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CADJ,eAUI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AACI,QAAA,kBAAkB,EAAC,8BADvB;AAEI,QAAA,SAAS,EAAC,EAFd;AAGI,QAAA,YAAY,EAAE,IAHlB;AAII,QAAA,IAAI,EAAE,iBAJV;AAKI,QAAA,WAAW,EAAC,EALhB;AAMI,QAAA,UAAU,EAAE,IANhB;AAOI,QAAA,OAAO,EAAEtB,KAAK,CAACuB,cAPnB;AAQI,QAAA,QAAQ,EAAC,gBARb;AASI,QAAA,WAAW,EAAC,iBAThB;AAUI,QAAA,KAAK,EAAEvB,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,KAAwDb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,iBAArD,CAAxD,IAAmI,EAV9I;AAWI,QAAA,QAAQ,EAAEI,KAAK,IAAIjB,KAAK,CAACwB,kBAAN,CAAyBP,KAAzB,EAAgC,iBAAhC,EAAmDZ,UAAnD,EAA+DQ,KAA/D,CAXvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAVJ,eA0BI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AACI,QAAA,kBAAkB,EAAC,8BADvB;AAEI,QAAA,SAAS,EAAC,EAFd;AAGI,QAAA,YAAY,EAAE,IAHlB;AAII,QAAA,IAAI,EAAE,aAJV;AAKI,QAAA,WAAW,EAAC,EALhB;AAMI,QAAA,UAAU,EAAE,IANhB;AAOI,QAAA,OAAO,EAAEC,eAPb;AAQI,QAAA,QAAQ,EAAC,iBARb;AASI,QAAA,WAAW,EAAC,aAThB;AAUI,QAAA,KAAK,EAAEd,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,KAAwDb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,aAArD,CAAxD,IAA+H,EAV1I;AAWI,QAAA,QAAQ,EAAEI,KAAK,IAAIjB,KAAK,CAACyB,cAAN,CAAqBR,KAArB,EAA4B,aAA5B,EAA2CZ,UAA3C,EAAuDQ,KAAvD,CAXvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA1BJ,EA0CKb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,kBACG,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,gBAAD;AACI,QAAA,kBAAkB,EAAC,8BADvB;AAEI,QAAA,YAAY,EAAE,IAFlB;AAGI,QAAA,IAAI,EAAG,GAAEb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,WAArD,EAAkET,KAAlE,IAA2EJ,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,WAArD,EAAkET,KAAlE,CAAwEsB,WAAY,EAH5K;AAII,QAAA,UAAU,EAAE,IAJhB,CAKI;AACA;AANJ;AAOI,QAAA,OAAO,EAAE1B,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,iBAArD,KACLb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,iBAArD,EAAwEI,KAAxE,IAAiF,CAD5E,GAELjB,KAAK,CAAC2B,kBAFD,GAEsB3B,KAAK,CAAC4B,SATzC;AAWI,QAAA,QAAQ,EAAE5B,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,WAArD,EAAkET,KAAlE,IAA2EJ,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,WAArD,EAAkET,KAAlE,CAAwEsB,WAXjK;AAYI,QAAA,WAAW,EAAE1B,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,WAArD,EAAkET,KAAlE,IAA2EJ,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,WAArD,EAAkET,KAAlE,CAAwEyB,aAZpK,CAaI;AACA;AACA;AAfJ;AAgBI,QAAA,KAAK,EAAE7B,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,KACHb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EACCb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,iBAArD,KACGb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,iBAArD,EAAwEI,KAAxE,IAAiF,CADpF,GACwF,qBADxF,GACgH,YAFjH,CADG,IAG+H,EAnB1I,CAoBI;AApBJ;AAqBI,QAAA,QAAQ,EAAEA,KAAK,IAAIjB,KAAK,CAACwB,kBAAN,CAAyBP,KAAzB,EACfjB,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,iBAArD,KACIb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCJ,UAAlC,EAA8CQ,KAA9C,EAAqD,iBAArD,EAAwEI,KAAxE,KAAkF,CADtF,GAC0F,qBAD1F,GACkH,YAFnG,CAE+G;AAF/G,UAGbZ,UAHa,EAGDQ,KAHC,CArBvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CA3CR,CAxBR,CAhBJ,CADJ;AAuHH,KAzHuB,CAAxB;AA0HA,WAAOP,MAAP;AACH;;AACD,WAASwB,gBAAT,GAA4B;AACxBvB,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCR,KAApC;AACA,QAAI+B,UAAU,GAAG,CAAjB;AACA,QAAIzB,MAAM,GAAG,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCR,KAAK,CAACgC,YAA1C;AACAhC,IAAAA,KAAK,CAACS,cAAN,CAAqB,WAArB,KAAqCT,KAAK,CAACgC,YAAN,CAAmBC,MAAnB,GAA4B,CAAjE,IAAsEjC,KAAK,CAACgC,YAAN,CAAmBrB,GAAnB,CAAuB,CAACP,KAAD,EAAQS,KAAR,KAAkB;AAE3G,UAAIC,eAAe,GAAG7B,kBAAtB;;AACA,UAAIe,KAAK,CAACS,cAAN,CAAqB,WAArB,KAAqCT,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCI,KAAlC,EAAyC,WAAzC,CAArC,IACG,CAACb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCI,KAAlC,EAAyC,WAAzC,EAAsDT,KAAtD,CAA4D8B,cADhE,IAEGlC,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCI,KAAlC,EAAyC,WAAzC,EAAsDT,KAAtD,CAA4D+B,UAA5D,KAA2EpD,UAAU,CAACqD,SAF7F,EAEwG;AACpG,cAAMC,IAAI,GAAGvB,eAAe,CAACwB,MAAhB,CAAuBC,IAAI,IAAI;AACxC,cAAIA,IAAI,CAACnC,KAAL,CAAWoC,UAAX,KAA0B,CAA9B,EAAiC;AAC7B,mBAAOD,IAAP;AACH;AACJ,SAJY,CAAb;AAKAzB,QAAAA,eAAe,GAAGuB,IAAlB;AACH;;AAED,UAAIjC,KAAK,GAAG,CAAC,CAAb,EAAgB;AACZ2B,QAAAA,UAAU,GAAGA,UAAU,GAAG,CAA1B;AACH;;AAAA;AACDzB,MAAAA,MAAM,CAACS,IAAP,eACI,0CAAGF,KAAK,GAAG,CAAR,iBAAa,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACZ,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAEb,KAAK,CAACS,cAAN,CAAqB,gBAArB,KACtCT,KAAK,CAACS,cAAN,CAAqB,gBAArB,EAAuCI,KAAK,GAAG,CAA/C,CADsC,IACeb,KAAK,CAACS,cAAN,CAAqB,gBAArB,EAAuCI,KAAK,GAAG,CAA/C,EAAkD,YAAlD,MAAoE,IADnF,GAC0F,qBAD1F,GACkH,EAD5J;AACgK,QAAA,UAAU,EAAE,CAD5K;AAEI,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACyC,gBAAN,CAAuB,YAAvB,EAAsC5B,KAAK,GAAG,CAA9C,EAAkD,IAAlD,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAHJ,CADY,eAMZ,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAEb,KAAK,CAACS,cAAN,CAAqB,gBAArB,KACtCT,KAAK,CAACS,cAAN,CAAqB,gBAArB,EAAuCI,KAAK,GAAG,CAA/C,CADsC,IACeb,KAAK,CAACS,cAAN,CAAqB,gBAArB,EAAuCI,KAAK,GAAG,CAA/C,EAAkD,WAAlD,MAAmE,IADlF,GACyF,qBADzF,GACiH,EAD3J;AAC+J,QAAA,UAAU,EAAE,CAD3K;AAEI,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACyC,gBAAN,CAAuB,WAAvB,EAAqC5B,KAAK,GAAG,CAA7C,EAAiD,IAAjD,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,cAAc,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAHJ,CANY,eAWZ,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAEb,KAAK,CAACS,cAAN,CAAqB,gBAArB,KACtCT,KAAK,CAACS,cAAN,CAAqB,gBAArB,EAAuCI,KAAK,GAAG,CAA/C,CADsC,IACeb,KAAK,CAACS,cAAN,CAAqB,gBAArB,EAAuCI,KAAK,GAAG,CAA/C,EAAkD,YAAlD,MAAoE,IADnF,GAC0F,qBAD1F,GACkH,EAD5J;AACgK,QAAA,UAAU,EAAE,CAD5K;AAEI,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACyC,gBAAN,CAAuB,YAAvB,EAAsC5B,KAAK,GAAG,CAA9C,EAAkD,IAAlD,CAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAHJ,CAXY,CAAhB,EAiBKT,KAAK,GAAG,CAAC,CAAT,gBACG,uDAaI,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAES,KAApB;AAA2B,QAAA,SAAS,EAAC,KAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,GAAD;AAAK,QAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,MAAD;AAAQ,QAAA,OAAO,EAAE,MAAMb,KAAK,CAAC0C,OAAN,CAAc,OAAd,EAAuB7B,KAAvB,CAAvB;AAAsD,QAAA,SAAS,EAAC,2BAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,GADL,oBACU,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,UAArB;AAAgC,QAAA,cAAc,EAAC,MAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADV,CADJ,EAYKT,KAAK,GAAG,CAAR,gBACG,oBAAC,GAAD;AAAM,QAAA,SAAS,EAAC,4BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAEJ,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCI,KAAlC,EAAyC,YAAzC,MAA2D,IAA3D,GAAkE,qBAAlE,GAA0F,EAApI;AAAwI,QAAA,UAAU,EAAE,CAApJ;AACI,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACyC,gBAAN,CAAuB,YAAvB,EAAqC5B,KAArC,EAA4C,KAA5C,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAFJ,CADJ,eAKI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAEb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCI,KAAlC,EAAyC,WAAzC,MAA0D,IAA1D,GAAiE,qBAAjE,GAAyF,EAAnI;AAAuI,QAAA,UAAU,EAAE,CAAnJ;AACI,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACyC,gBAAN,CAAuB,WAAvB,EAAoC5B,KAApC,EAA2C,KAA3C,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,QAArB;AAA8B,QAAA,cAAc,EAAC,IAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAFJ,CALJ,eASI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAEb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCI,KAAlC,EAAyC,YAAzC,MAA2D,IAA3D,GAAkE,qBAAlE,GAA0F,EAApI;AAAwI,QAAA,UAAU,EAAE,CAApJ;AACI,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACyC,gBAAN,CAAuB,YAAvB,EAAqC5B,KAArC,EAA4C,KAA5C,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAFJ,CATJ,CADH,gBAiBG,uDACI,oBAAC,GAAD;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAC,QAAtB;AAA+B,QAAA,SAAS,EAAEb,KAAK,CAACS,cAAN,CAAqB,WAArB,EAAkCI,KAAlC,EAAyC,YAAzC,MAA2D,IAA3D,GAAkE,qBAAlE,GAA0F,EAApI;AAAwI,QAAA,UAAU,EAAE,CAApJ;AACI,QAAA,OAAO,EAAE,MAAMb,KAAK,CAACyC,gBAAN,CAAuB,YAAvB,EAAqC5B,KAArC,EAA4C,KAA5C,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAM,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,SAArB;AAA+B,QAAA,cAAc,EAAC,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN,CAFJ,CADJ,CADJ,CA7BR,CAFJ,CADJ,eA4CI,0CACKV,WAAW,CAACC,KAAD,EAAQS,KAAR,CADhB,CA5CJ,CAbJ,CADH,gBAgES,yCAjFd,CADJ;AAuFH,KAxGqE,CAAtE;AA0GA,WAAOP,MAAP;AACH;;AAGD,WAASqC,sBAAT,CAAgCC,aAAhC,EAA+C;AAC3C,UAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;AACAF,IAAAA,aAAa,CAACjC,GAAd,CAAmBoC,aAAD,IACdF,YAAY,CAACG,GAAb,CAAiBD,aAAa,CAACE,kBAA/B,eACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,aAAa,EAAEF,aAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,SAAS,EAAC,iCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,kBAAf;AAAkC,MAAA,SAAS,EAAC,kBAA5C;AAA+D,MAAA,aAAa,EAAEA,aAA9E;AACI,MAAA,OAAO,EAAE,MAAM/C,KAAK,CAACkD,YAAN,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEvF,MAAvB;AAA+B,MAAA,aAAa,EAAEoF,aAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,oBAII,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,eAArB;AAAqC,MAAA,cAAc,EAAC,UAApD;AAA+D,MAAA,aAAa,EAAEA,aAA9E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CAPJ,CADJ,CADJ;AAAA;AAiBK;AACG,2DAYI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAC,gBADR;AAEI,MAAA,eAAe,EAAC,yBAFpB,CAGI;AACA;AAJJ;AAMI,MAAA,UAAU,EAAE/C,KAAK,CAACmD,UAAN,CAAiB,UAAjB,KAAgC9E,OAAO,CAAC2B,KAAK,CAACmD,UAAN,CAAiB,UAAjB,EAA6BJ,aAAa,CAACE,kBAA3C,KAAkE,EAAnE,EAC/CjD,KAAK,CAACoD,eAAN,IAAyBpD,KAAK,CAACoD,eAAN,CAAsBL,aAAa,CAACE,kBAApC,CAAzB,GACMjD,KAAK,CAACoD,eAAN,CAAsBL,aAAa,CAACE,kBAApC,CADN,GACgE;AAAEI,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAFjB,CANvD,CASI;AACA;AAVJ;AAYI,MAAA,SAAS,EAAEtD,KAAK,CAACoD,eAAN,IAAyBpD,KAAK,CAACoD,eAAN,CAAsBL,aAAa,CAACE,kBAApC,CAAzB,GACLjD,KAAK,CAACoD,eAAN,CAAsBL,aAAa,CAACE,kBAApC,CADK,GACqD;AAAEI,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAbpE,CAcI;AAdJ;AAeI,MAAA,eAAe,EAAGC,KAAD,IAAW;AAAEvD,QAAAA,KAAK,CAACwD,eAAN,CAAsBD,KAAtB,EAA6BR,aAAa,CAACE,kBAA3C;AAAgE,OAflG;AAiBI,MAAA,mBAAmB,EAAEhD,aAjBzB;AAkBI,MAAA,UAAU,EAAED,KAAK,CAACyD,UAlBtB;AAmBI,MAAA,qBAAqB,EAAEzD,KAAK,CAAC0D,qBAnBjC;AAoBI,MAAA,QAAQ,EAAE,IApBd;AAqBI,MAAA,gBAAgB,EAAE,IArBtB;AAsBI,MAAA,UAAU,EAAE,YAtBhB;AAuBI,MAAA,gBAAgB,EAAE,IAvBtB;AAwBI,MAAA,UAAU,EAAE,CAxBhB;AAyBI,MAAA,aAAa,EAAEX,aAzBnB;AA0BI,MAAA,YAAY,EAAE/C,KAAK,CAAC2D,cA1BxB;AA2BI,MAAA,WAAW,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OA3BjB;AA4BI,MAAA,WAAW,EAAE,CAAC;AACVC,QAAAA,KAAK,EAAE7D,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAzB,CADG;AAEVwC,QAAAA,WAAW,EAAE,YAFH;AAGVC,QAAAA,MAAM,EAAE,KAHE;AAIVC,QAAAA,UAAU,EAAE,QAJF;AAKVC,QAAAA,OAAO,EAAEjE,KAAK,CAAC2D;AALL,OAAD,CA5BjB;AAoCI,MAAA,SAAS,EAAE,OApCf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZJ,CAlBR,CAqEQ;AArER,KADJ,CADJ;AA6EA,WAAOd,YAAP;AACH;;AACD,WAASqB,qBAAT,CAA+BtB,aAA/B,EAA8C;AAC1C,UAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;AACAF,IAAAA,aAAa,CAACjC,GAAd,CAAmBwD,qBAAD,IACdtB,YAAY,CAACG,GAAb,CAAiBmB,qBAAqB,CAAClB,kBAAvC,eACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,qBAAqB,EAAEkB,qBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,SAAS,EAAC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,qBAAf;AAAqC,MAAA,SAAS,EAAC,aAA/C;AAA6D,MAAA,qBAAqB,EAAEA,qBAApF;AACI,MAAA,OAAO,EAAE,MAAMnE,KAAK,CAACoE,eAAN,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAExG,UAAvB;AAAmC,MAAA,qBAAqB,EAAEuG,qBAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,oBAII,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,UAArB;AAAgC,MAAA,cAAc,EAAC,MAA/C;AAAsD,MAAA,qBAAqB,EAAEA,qBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,eASI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,SAAS,EAAC,4BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,kBAAf;AAAkC,MAAA,SAAS,EAAC,aAA5C;AAA0D,MAAA,qBAAqB,EAAEA,qBAAjF;AACI,MAAA,OAAO,EAAE,MAAMnE,KAAK,CAACqE,WAAN,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE1G,MAAvB;AAA+B,MAAA,qBAAqB,EAAEwG,qBAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,oBAII,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,kBAArB;AAAwC,MAAA,cAAc,EAAC,mBAAvD;AAA2E,MAAA,qBAAqB,EAAEA,qBAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CATJ,CADJ,eA8BI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAC,gBADR;AAEI,MAAA,eAAe,EAAC,yBAFpB,CAGG;AACC;AAJJ;AAMI,MAAA,UAAU,EAAEnE,KAAK,CAACmD,UAAN,CAAiB,cAAjB,KAAoC9E,OAAO,CAAC2B,KAAK,CAACmD,UAAN,CAAiB,cAAjB,EAAiCgB,qBAAqB,CAAClB,kBAAvD,KAA8E,EAA/E,EACnDjD,KAAK,CAACoD,eAAN,IAAyBpD,KAAK,CAACoD,eAAN,CAAsBe,qBAAqB,CAAClB,kBAA5C,CAAzB,GACMjD,KAAK,CAACoD,eAAN,CAAsBe,qBAAqB,CAAClB,kBAA5C,CADN,GACwE;AAAEI,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAFrB,CAN3D,CASI;AACA;AAVJ;AAYI,MAAA,SAAS,EAAEtD,KAAK,CAACoD,eAAN,IAAyBpD,KAAK,CAACoD,eAAN,CAAsBe,qBAAqB,CAAClB,kBAA5C,CAAzB,GACLjD,KAAK,CAACoD,eAAN,CAAsBe,qBAAqB,CAAClB,kBAA5C,CADK,GAC6D;AAAEI,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAb5E,CAcI;AAdJ;AAeI,MAAA,eAAe,EAAGC,KAAD,IAAW;AAAEvD,QAAAA,KAAK,CAACwD,eAAN,CAAsBD,KAAtB,EAA6BY,qBAAqB,CAAClB,kBAAnD;AAAwE,OAf1G;AAiBI,MAAA,mBAAmB,EAAEhD,aAjBzB;AAkBI,MAAA,UAAU,EAAED,KAAK,CAACyD,UAlBtB;AAmBI,MAAA,qBAAqB,EAAEzD,KAAK,CAAC0D,qBAnBjC;AAoBI,MAAA,QAAQ,EAAE,IApBd;AAqBI,MAAA,gBAAgB,EAAE,IArBtB;AAsBI,MAAA,UAAU,EAAE,YAtBhB;AAuBI,MAAA,gBAAgB,EAAE,IAvBtB;AAwBI,MAAA,UAAU,EAAE,CAxBhB;AAyBI,MAAA,qBAAqB,EAAES,qBAzB3B;AA0BI,MAAA,YAAY,EAAEnE,KAAK,CAAC2D,cA1BxB;AA2BI,MAAA,WAAW,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OA3BjB;AA4BI,MAAA,WAAW,EAAE,CAAC;AACVC,QAAAA,KAAK,EAAE7D,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAzB,CADG;AAEVwC,QAAAA,WAAW,EAAE,YAFH;AAGVC,QAAAA,MAAM,EAAE,KAHE;AAIVC,QAAAA,UAAU,EAAE,QAJF;AAKVC,QAAAA,OAAO,EAAEjE,KAAK,CAAC2D;AALL,OAAD,CA5BjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA9BJ,CADJ,CADJ;AA0EA,WAAOd,YAAP;AACH;;AACD,WAASyB,uBAAT,CAAiC1B,aAAjC,EAAgD;AAC5C,UAAMC,YAAY,GAAG,IAAIC,GAAJ,EAArB;AACAF,IAAAA,aAAa,CAACjC,GAAd,CAAmB4D,2BAAD,IACd1B,YAAY,CAACG,GAAb,CAAiBuB,2BAA2B,CAACtB,kBAA7C,eACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,IAAR;AAAa,MAAA,2BAA2B,EAAEsB,2BAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAa,MAAA,SAAS,EAAC,4BAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,qBAAf;AAAqC,MAAA,SAAS,EAAC,aAA/C;AAA6D,MAAA,2BAA2B,EAAEA,2BAA1F;AACI,MAAA,OAAO,EAAE,MAAMvE,KAAK,CAACoE,eAAN,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAExG,UAAvB;AAAmC,MAAA,2BAA2B,EAAE2G,2BAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,oBAII,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,YAArB;AAAkC,MAAA,cAAc,EAAC,QAAjD;AAA0D,MAAA,2BAA2B,EAAEA,2BAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,CADJ,eAWI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAgC,MAAA,2BAA2B,EAAEA,2BAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,4BAAf;AAA4C,MAAA,2BAA2B,EAAEA,2BAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,IAAI,EAAC,kBAAf;AAAkC,MAAA,SAAS,EAAC,aAA5C;AAA0D,MAAA,2BAA2B,EAAEA,2BAAvF;AACI,MAAA,OAAO,EAAE,MAAMvE,KAAK,CAACqE,WAAN,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAE1G,MAAvB;AAA+B,MAAA,2BAA2B,EAAE4G,2BAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,oBAII,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,uBAArB;AAA6C,MAAA,cAAc,EAAC,qBAA5D;AAAkF,MAAA,2BAA2B,EAAEA,2BAA/G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,CADJ,CADJ,CAXJ,eAsBI,oBAAC,QAAD;AACI,MAAA,GAAG,EAAC,gBADR;AAEI,MAAA,eAAe,EAAC,yBAFpB,CAGG;AACC;AAJJ;AAMI,MAAA,UAAU,EAAEvE,KAAK,CAACmD,UAAN,CAAiB,gBAAjB,KAAsC9E,OAAO,CAAC2B,KAAK,CAACmD,UAAN,CAAiB,gBAAjB,EAAmCoB,2BAA2B,CAACtB,kBAA/D,KAAsF,EAAvF,EACrDjD,KAAK,CAACwE,SAAN,GACMxE,KAAK,CAACwE,SADZ,GACwB;AAAEnB,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAF6B,CAN7D,CASI;AACA;AAVJ;AAYI,MAAA,SAAS,EAAEtD,KAAK,CAACwE,SAAN,GACLxE,KAAK,CAACwE,SADD,GACa;AAAEnB,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAb5B,CAcI;AAdJ;AAeI,MAAA,eAAe,EAAEtD,KAAK,CAACwD,eAf3B;AAiBI,MAAA,mBAAmB,EAAEvD,aAjBzB;AAkBI,MAAA,UAAU,EAAED,KAAK,CAACyD,UAlBtB;AAmBI,MAAA,qBAAqB,EAAEzD,KAAK,CAAC0D,qBAnBjC;AAoBI,MAAA,QAAQ,EAAE,IApBd;AAqBI,MAAA,gBAAgB,EAAE,IArBtB;AAsBI,MAAA,UAAU,EAAE,YAtBhB;AAuBI,MAAA,gBAAgB,EAAE,IAvBtB;AAwBI,MAAA,UAAU,EAAE,CAxBhB;AAyBI,MAAA,qBAAqB,EAAEa,2BAzB3B;AA0BI,MAAA,YAAY,EAAEvE,KAAK,CAAC2D,cA1BxB;AA2BI,MAAA,WAAW,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OA3BjB;AA4BI,MAAA,WAAW,EAAE,CAAC;AACVC,QAAAA,KAAK,EAAE7D,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAAzB,CADG;AAEVwC,QAAAA,WAAW,EAAE,YAFH;AAGVC,QAAAA,MAAM,EAAE,KAHE;AAIVC,QAAAA,UAAU,EAAE,QAJF;AAKVC,QAAAA,OAAO,EAAEjE,KAAK,CAAC2D;AALL,OAAD,CA5BjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBJ,CADJ,CADJ;AAkEA,WAAOd,YAAP;AACH;;AACD,WAAS4B,UAAT,GAAsB;AAClB,UAAMC,YAAY,GAAG,IAAI5B,GAAJ,EAArB;;AACA,QAAI9C,KAAK,CAAC2E,cAAN,CAAqB1C,MAArB,KAAgC,CAApC,EAAuC;AACnCjC,MAAAA,KAAK,CAACE,cAAN,IAAwB,CAAxB,GACIwE,YAAY,CAAC1B,GAAb,CAAiB,sBAAjB,eACI,uDACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,kBAAf,CAAkC;AAAlC;AACI,QAAA,OAAO,EAAE,MAAMhD,KAAK,CAAC4E,OAAN,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEjH,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,oBAGI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,UAArB;AAAgC,QAAA,cAAc,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,CADJ,CADJ,EAWKqC,KAAK,CAACmD,UAAN,CAAiBJ,aAAjB,IAAkC/C,KAAK,CAACmD,UAAN,CAAiBJ,aAAjB,CAA+Bd,MAA/B,GAAwC,CAA1E,iBACG,oBAAC,eAAD;AACI,QAAA,GAAG,EAAC,oBADR;AAEI,QAAA,cAAc,EAAE,IAFpB;AAGI,QAAA,gBAAgB,EAAIjC,KAAK,CAACoE,eAH9B;AAII,QAAA,cAAc,EAAE,uBAJpB;AAKI,QAAA,kBAAkB,EAAEzB,sBAAsB,CAAC3C,KAAK,CAACmD,UAAN,CAAiBJ,aAAlB,CAL9C;AAMI,QAAA,UAAU,EAAE;AAAEI,UAAAA,UAAU,EAAEnD,KAAK,CAACmD,UAApB;AAAgC0B,UAAAA,QAAQ,EAAE7E,KAAK,CAAC6E,QAAhD;AAA0DC,UAAAA,KAAK,EAAE;AAAjE,SANhB;AAOI,QAAA,cAAc,EAAE9E,KAAK,CAAC+E,iBAP1B;AAQI,QAAA,mBAAmB,EAAE,oBARzB;AASI,QAAA,mBAAmB,EAAE,eATzB;AAUI,QAAA,WAAW,EAAE/E,KAAK,CAACmD,UAAN,CAAiB6B,iBAAjB,GAAqChF,KAAK,CAACmD,UAAN,CAAiB6B,iBAAjB,CAAmC/B,kBAAxE,GAA6F,CAV9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZR,CADJ,CADJ,GA4BQjD,KAAK,CAACE,cAAN,IAAwB,CAAxB,GACAwE,YAAY,CAAC1B,GAAb,CAAiB,kBAAjB,eACI,uDACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,kBAAf,CAAkC;AAAlC;AACI,QAAA,OAAO,EAAE,MAAMhD,KAAK,CAAC4E,OAAN,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEjH,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,oBAGI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,UAArB;AAAgC,QAAA,cAAc,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,CADJ,CADJ,EAWKqC,KAAK,CAACmD,UAAN,CAAiBgB,qBAAjB,IAA0CnE,KAAK,CAACmD,UAAN,CAAiBgB,qBAAjB,CAAuClC,MAAvC,GAAgD,CAA1F,iBACG,oBAAC,eAAD;AACI,QAAA,GAAG,EAAC,oBADR;AAEI,QAAA,cAAc,EAAE,uBAFpB;AAGI,QAAA,kBAAkB,EAAEiC,qBAAqB,CAAClE,KAAK,CAACmD,UAAN,CAAiBgB,qBAAlB,CAH7C;AAII,QAAA,UAAU,EAAE;AAAEhB,UAAAA,UAAU,EAAEnD,KAAK,CAACmD,UAApB;AAAgC0B,UAAAA,QAAQ,EAAE7E,KAAK,CAAC6E,QAAhD;AAA0DC,UAAAA,KAAK,EAAE;AAAjE,SAJhB;AAKI,QAAA,cAAc,EAAE9E,KAAK,CAAC+E,iBAL1B;AAMI,QAAA,mBAAmB,EAAE,oBANzB;AAOI,QAAA,mBAAmB,EAAE,uBAPzB;AAQI,QAAA,WAAW,EAAE/E,KAAK,CAACmD,UAAN,CAAiB6B,iBAAjB,GAAqChF,KAAK,CAACmD,UAAN,CAAiB6B,iBAAjB,CAAmC/B,kBAAxE,GAA6F,CAR9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZR,CADJ,CADA,GA2BAyB,YAAY,CAAC1B,GAAb,CAAiB,oBAAjB,eACI,uDACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,GAAD,CAAK,IAAL;AAAU,QAAA,IAAI,EAAC,kBAAf,CAAkC;AAAlC;AACI,QAAA,OAAO,EAAE,MAAMhD,KAAK,CAAC4E,OAAN,EADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEI,oBAAC,eAAD;AAAiB,QAAA,IAAI,EAAEjH,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,oBAGI,oBAAC,gBAAD;AAAkB,QAAA,EAAE,EAAC,UAArB;AAAgC,QAAA,cAAc,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CAFJ,CADJ,CADJ,EAWKqC,KAAK,CAACmD,UAAN,CAAiBoB,2BAAjB,IAAgDvE,KAAK,CAACmD,UAAN,CAAiBoB,2BAAjB,CAA6CtC,MAA7C,GAAsD,CAAtG,iBACG,oBAAC,eAAD;AACI,QAAA,GAAG,EAAC,oBADR;AAEI,QAAA,cAAc,EAAE,uBAFpB;AAGI,QAAA,kBAAkB,EAAEqC,uBAAuB,CAACtE,KAAK,CAACmD,UAAN,CAAiBoB,2BAAlB,CAH/C;AAII,QAAA,UAAU,EAAE;AAAEpB,UAAAA,UAAU,EAAEnD,KAAK,CAACmD,UAApB;AAAgC0B,UAAAA,QAAQ,EAAE7E,KAAK,CAAC6E,QAAhD;AAA0DC,UAAAA,KAAK,EAAE;AAAjE,SAJhB;AAKI,QAAA,cAAc,EAAE9E,KAAK,CAAC+E,iBAL1B;AAMI,QAAA,mBAAmB,EAAE,oBANzB;AAOI,QAAA,mBAAmB,EAAE,6BAPzB;AAQI,QAAA,WAAW,EAAE/E,KAAK,CAACmD,UAAN,CAAiB6B,iBAAjB,GAAqChF,KAAK,CAACmD,UAAN,CAAiB6B,iBAAjB,CAAmC/B,kBAAxE,GAA6F,CAR9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZR,CADJ,CAvDR;AAiFH;;AACD,WAAOyB,YAAP;AACH;;AACD,WAASO,UAAT,CAAoBC,IAApB,EAA0B;AACtB,QAAIhF,cAAc,GAAGF,KAAK,CAACE,cAA3B;;AACA,QAAIF,KAAK,CAACmD,UAAN,CAAiB6B,iBAArB,EAAwC;AACpC,UAAIG,WAAW,GAAGjF,cAAc,KAAK,CAAnB,GAAuBF,KAAK,CAACmD,UAAN,CAAiB,cAAjB,KAAoCnD,KAAK,CAACmD,UAAN,CAAiB,cAAjB,EAAiCnD,KAAK,CAACmD,UAAN,CAAiB6B,iBAAjB,CAAmC/B,kBAApE,CAA3D,GACZjD,KAAK,CAACmD,UAAN,CAAiB,gBAAjB,KAAsCnD,KAAK,CAACmD,UAAN,CAAiB,gBAAjB,EAAmCnD,KAAK,CAACmD,UAAN,CAAiB6B,iBAAjB,CAAmC/B,kBAAtE,CAD5C;;AAEA,UAAIkC,WAAW,KAAKC,SAApB,EAA+B;AAC3BF,QAAAA,IAAI,GAAGA,IAAI,CAAC5C,MAAL,CAAY,CAAC;AAAErB,UAAAA;AAAF,SAAD,KAAe,CAACkE,WAAW,CAACE,IAAZ,CAAiBC,CAAC,IAAIA,CAAC,CAACC,uBAAF,IAA6BtE,KAAnD,CAA5B,CAAP;AACH;AACJ;;AACD,WAAOiE,IAAP;AACH;;AACD,QAAMM,eAAe,GACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxF,EAAAA,KAAK,CAACyF,MAAN,KAAiB,mBAAjB,GACI,CAAC;AAAE,eAAW,qBAAb;AAAoC,iBAAa,WAAjD;AAA8D,iBAAa,IAA3E;AAAiF,sBAAkB,WAAnG;AAAgH,mBAAe;AAA/H,GAAD,CADJ,GAEIzF,KAAK,CAACE,cAAN,KAAyB,CAAzB,GACI;AACA,GAAC;AAAE,eAAW,cAAb;AAA6B,iBAAa,oBAA1C;AAAgE,iBAAa,IAA7E;AAAmF,sBAAkB,YAArG;AAAmH,mBAAe;AAAlI,GAAD,CAFJ,CAEgJ;AAC5I;AACA;AACA;AACA;AACA;AAPJ,IASIF,KAAK,CAACE,cAAN,KAAyB,CAAzB,GAA6B,CACzB;AAAE,eAAW,cAAb;AAA6B,iBAAa,oBAA1C;AAAgE,iBAAa,IAA7E;AAAmF,sBAAkB,YAArG;AAAmH,mBAAe;AAAlI,GADyB,EAEzB;AAAE,eAAW,iBAAb;AAAgC,iBAAa,kBAA7C;AAAiE,aAAS;AAA1E,GAFyB,EAGzB;AAAE,eAAW,oBAAb;AAAmC,iBAAa,qBAAhD;AAAuE,aAAS;AAAhF,GAHyB,EAIzBF,KAAK,CAAC0F,sBAAN,KAAiC,IAAjC,GACI;AAAE,eAAW,qBAAb;AAAoC,iBAAa,kBAAjD;AAAqE,aAAS;AAA9E,GADJ,GAEI;AAAE,eAAW,sBAAb;AAAqC,iBAAa,yBAAlD;AAA6E,aAAS;AAAtF,GANqB,CASzB;AACA;AAVyB,GAA7B,GAYI,CACI;AAAE,eAAW,cAAb;AAA6B,iBAAa,eAA1C;AAA2D,iBAAa,IAAxE;AAA8E,sBAAkB,YAAhG;AAA8G,mBAAe;AAA7H,GADJ,EAEI;AAAE,eAAW,YAAb;AAA2B,iBAAa,aAAxC;AAAuD,iBAAa,IAApE;AAA0E,sBAAkB,YAA5F;AAA0G,mBAAe;AAAzH,GAFJ,CAtChB;AA0CA,sBAEI;AAAK,IAAA,KAAK,EAAC,qBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,2BAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,KAAK,EAAC,gDAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,wBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,KAAK,EAAC,EAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEJ,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAG,iBAAgB1F,KAAK,CAACE,cAAN,GAC3B,QAD2B,GAChB,EAAG,IAAGF,KAAK,CAAC2F,mBAAN,GAA4B,cAA5B,GAA6C,EAAG,EADvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACQ,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAE,iBADV;AAEI,IAAA,SAAS,EAAE3F,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFf;AAGI,IAAA,YAAY,EAAE,IAHlB;AAII,IAAA,WAAW,EAAEtB,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAJjB;AAKI,IAAA,WAAW,EAAE,IALjB;AAMI,IAAA,UAAU,EAAE,KANhB;AAOI,IAAA,UAAU,EAAE,IAPhB;AAQI,IAAA,OAAO,EAAEtB,KAAK,CAAC4F,mBAAN,IAA6B,EAR1C;AASI,IAAA,KAAK,EAAE5F,KAAK,CAACS,cAAN,CAAqBoF,eAArB,GAAuC7F,KAAK,CAACS,cAAN,CAAqBoF,eAA5D,GACD,EAVV;AAYI,IAAA,QAAQ,EAAE5E,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,iBAAhC,CAZvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,eAmBI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMjB,KAAK,CAAC+F,QAAN,CAAe,OAAf,CAAvB;AAAgD,IAAA,SAAS,EAAC,MAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK,GADL,oBACU,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,WAArB;AAAiC,IAAA,cAAc,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADV,CADJ,eAII,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAM/F,KAAK,CAACgG,SAAN,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AAAkB,IAAA,EAAE,EAAC,WAArB;AAAiC,IAAA,cAAc,EAAC,OAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAJJ,CAnBJ,CADR,eA6BQ,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAC,sCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,SAAS,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEKhG,KAAK,CAACgC,YAAN,CAAmBC,MAAnB,GAA4B,CAA5B,gBACG,uDACI,oBAAC,aAAD;AAAe,IAAA,SAAS,EAAC,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACIH,gBAAgB,EADpB,QADJ,CADH,gBAMK,yCARV,CADJ,CA7BR,CADJ,CAFJ,CAFI,CADJ,CADJ,CADA,eAuDI;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,IAAA,SAAS,EAAG,GAAE9B,KAAK,CAAC2F,mBAAN,GAA4B,cAA5B,GAA6C,EAAG,iBAAgB3F,KAAK,CAACE,cAAN,GACpF,QADoF,GACzE,EAAG,EADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAK,IAAA,SAAS,EAAG,GAAEF,KAAK,CAAC2F,mBAAN,GAA4B,cAA5B,GAA6C,EAAG,+CAA8C3F,KAAK,CAACE,cAAN,GAC3G,QAD2G,GAChG,EAAG,EADpB;AACuB,IAAA,KAAK,EAAE;AAAE+F,MAAAA,KAAK,EAAEjG,KAAK,CAAC2F,mBAAN,GAA4B3F,KAAK,CAACkG,kBAAN,GAA2B,GAAvD,GAA6D;AAAtE,KAD9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,SAAS,EAAG,uBAAsBlG,KAAK,CAACE,cAAN,GAClC,QADkC,GACvB,EAAG,EADpB;AACuB,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACmG,kBAAN,CAAyB,CAAzB,CADtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACmE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE7I,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADnE,MAFJ,eAII;AAAK,IAAA,SAAS,EAAG,iCAAgC0C,KAAK,CAACE,cAAN,IAAwBF,KAAK,CAACE,cAA9B,GAC3C,QAD2C,GAChC,EAAG,EADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAzB,CADL,CAFJ,EAKKtB,KAAK,CAACE,cAAN,IAAwBF,KAAK,CAACE,cAA9B,gBAEG,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,KAAK,CAACoG,aAA7B;AACE,IAAA,SAAS,EAAE3B,UAAU,EADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFH,GAIK,EATV,CAJJ,CAFJ,eAmBI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAI,IAAA,SAAS,EAAG,GAAEzE,KAAK,CAACE,cAAN,IAAwBF,KAAK,CAACE,cAAN,IAAwB,CAAhD,GAAoD,QAApD,GAA+D,EAAG,EAApF;AACI,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACmG,kBAAN,CAAyB,CAAzB,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE1I,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKuC,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAzB,CADL,CAHJ,CADJ,eAQI;AAAI,IAAA,SAAS,EAAG,GAAEtB,KAAK,CAACE,cAAN,IAAwBF,KAAK,CAACE,cAAN,IAAwB,CAAhD,GAAoD,QAApD,GAA+D,EAAG,EAApF;AACI,IAAA,OAAO,EAAE,MAAMF,KAAK,CAACmG,kBAAN,CAAyB,CAAzB,CADnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAE3I,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKwC,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,IAAAA,EAAE,EAAE;AAAN,GAAzB,CADL,CAHJ,CARJ,CADJ,CAnBJ,CAvDJ,EAkNItB,KAAK,CAACqG,cAAN,iBACA,oBAAC,SAAD;AACI,IAAA,SAAS,EAAE,IADf;AAEI,IAAA,UAAU,EAAErG,KAAK,CAACyF,MAAN,KAAiB,mBAAjB,GAAuC,qBAAvC,GACRzF,KAAK,CAACyF,MAAN,KAAiB,uBAAjB,GAA2CzF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAA3C,GACItB,KAAK,CAACyF,MAAN,KAAiB,qBAAjB,GAAyCzF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAAzC,GACMtB,KAAK,CAACyF,MAAN,KAAiB,aAAjB,GAAiCzF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAAjC,GACEtB,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CANpB;AAQI,IAAA,UAAU,EAAEtB,KAAK,CAACsG,cARtB;AASI,IAAA,WAAW,EAAEtG,KAAK,CAACyF,MAAN,KAAiB,mBAAjB,GAAuCzF,KAAK,CAACuG,IAA7C,GAAoDvG,KAAK,CAACwG,cAT3E,CAUI;AAVJ;AAWI,IAAA,cAAc,EAAExG,KAAK,CAACS,cAX1B;AAYI,IAAA,eAAe,EAAE+E,eAZrB;AAaI,IAAA,SAAS,EAELxF,KAAK,CAACyG,kBAAN,KAA6B,IAA7B,gBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,kBAAkB,EAAC,8BADvB;AAEI,MAAA,KAAK,EAAEzG,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CAFX;AAGI,MAAA,IAAI,EAAG,WAHX;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,QAAQ,EAAE,KALd;AAMI,MAAA,WAAW,EAAE,IANjB;AAOI,MAAA,KAAK,EAAEtB,KAAK,CAACS,cAAN,CAAqB,WAArB,KAAqC,EAPhD;AAQI,MAAA,QAAQ,EAAG8C,KAAD,IAAWvD,KAAK,CAAC0G,aAAN,CAAoBnD,KAApB,CARzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,GAgBIvD,KAAK,CAACE,cAAN,IAAwB,CAAxB;AAAA;AACI;AACA,wBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE;AACL,QADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAEF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,oBAHV;AAII,MAAA,UAAU,EAAE,IAJhB;AAKI,MAAA,OAAO,EAAEtB,KAAK,CAAC2G,oBAAN,IAA8B,EAL3C;AAMI,MAAA,QAAQ,EAAC,oBANb;AAOI,MAAA,WAAW,EAAC,uBAPhB;AAQI,MAAA,KAAK,EAAE3G,KAAK,CAACS,cAAN,CAAqB,oBAArB,KAA8CT,KAAK,CAACS,cAAN,CAAqB,oBAArB,CAA9C,IAA4F,EARvG;AASI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,oBAAhC,CATvB;AAUI,MAAA,WAAW,EAAE,IAVjB;AAWI,MAAA,UAAU,EAAEjB,KAAK,CAACyF,MAAN,KAAiB,aAAjB,GAAiC,KAAjC,GAAyC,IAXzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,CADJ,EAiCK,EAAC;AACEzF,IAAAA,KAAK,CAACyF,MAAN,KAAiB,aAAjB,IAAkCzF,KAAK,CAACyF,MAAN,KAAiB,aAAnD,GAAmE,IAAnE,GAA0E,KAD7E,CACmF;AAChF;AAFH,qBAKG,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAEzF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf,CAEI;AAFJ;AAGI,MAAA,YAAY,EAAE,IAHlB;AAII,MAAA,IAAI,EAAE,eAJV;AAKI,MAAA,UAAU,EAAE,IALhB;AAMI,MAAA,OAAO,EAAEtB,KAAK,CAAC4G,QAAN,IAAkB,EAN/B;AAOI,MAAA,QAAQ,EAAC,eAPb;AAQI,MAAA,WAAW,EAAC,WARhB;AASI,MAAA,KAAK,EAAE5G,KAAK,CAACS,cAAN,CAAqB,eAArB,KAAyCT,KAAK,CAACS,cAAN,CAAqB,eAArB,CAAzC,IAAkF,EAT7F;AAUI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,eAAhC,CAVvB,CAWA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAgBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAEjB,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf,CAEI;AAFJ;AAGI,MAAA,YAAY,EAAE,IAHlB;AAII,MAAA,IAAI,EAAE,aAJV;AAKI,MAAA,UAAU,EAAE,IALhB;AAMI,MAAA,OAAO,EAAEtB,KAAK,CAAC4G,QAAN,IAAkB,EAN/B;AAOI,MAAA,QAAQ,EAAC,aAPb;AAQI,MAAA,WAAW,EAAC,WARhB;AASI,MAAA,KAAK,EAAE5G,KAAK,CAACS,cAAN,CAAqB,aAArB,KAAuCT,KAAK,CAACS,cAAN,CAAqB,aAArB,CAAvC,IAA8E,EATzF;AAUI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,aAAhC,CAVvB,CAWA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhBJ,CALH,GAoCY,EArEjB,CAFJ,CA0EI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA1GJ,MA4GIjB,KAAK,CAACE,cAAN,IAAwB,CAAxB;AAAA;AACI;AACA,wBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAEF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,oBAHV;AAII,MAAA,UAAU,EAAE,IAJhB;AAKI,MAAA,OAAO,EAAEtB,KAAK,CAAC2G,oBAAN,IAA8B,EAL3C;AAMI,MAAA,QAAQ,EAAC,oBANb;AAOI,MAAA,WAAW,EAAC,uBAPhB;AAQI,MAAA,KAAK,EAAE3G,KAAK,CAACS,cAAN,CAAqB,oBAArB,KAA8CT,KAAK,CAACS,cAAN,CAAqB,oBAArB,CAA9C,IAA4F,EARvG;AASI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,oBAAhC,CATvB;AAUI,MAAA,WAAW,EAAE,IAVjB;AAWI,MAAA,UAAU,EAAEjB,KAAK,CAACyF,MAAN,KAAiB,aAAjB,GAAiC,KAAjC,GAAyC,IAXzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,eAgBI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAEzF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,kBAHV;AAII,MAAA,UAAU,EAAE,IAJhB;AAKI,MAAA,OAAO,EAAEtB,KAAK,CAAC6G,WAAN,IAAqB,EALlC;AAMI,MAAA,QAAQ,EAAC,kBANb;AAOI,MAAA,WAAW,EAAC,cAPhB;AAQI,MAAA,KAAK,EAAE7G,KAAK,CAACS,cAAN,CAAqB,kBAArB,KAA4CT,KAAK,CAACS,cAAN,CAAqB,kBAArB,CAA5C,IAAwF,EARnG;AASI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,kBAAhC,CATvB;AAUI,MAAA,WAAW,EAAE,IAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAhBJ,eA8BI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAEjB,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,qBAHV;AAII,MAAA,UAAU,EAAE,IAJhB;AAKI,MAAA,OAAO,EAAEtB,KAAK,CAAC8G,cAAN,IAAwB,EALrC;AAMI,MAAA,QAAQ,EAAC,qBANb;AAOI,MAAA,WAAW,EAAC,iBAPhB;AAQI,MAAA,KAAK,EAAE9G,KAAK,CAACS,cAAN,CAAqB,qBAArB,KAA+CT,KAAK,CAACS,cAAN,CAAqB,qBAArB,CAA/C,IAA8F,EARzG;AASI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,qBAAhC,CATvB;AAUI,MAAA,WAAW,EAAE,IAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA9BJ,EA4CKjB,KAAK,CAACS,cAAN,CAAqB,qBAArB,IACGT,KAAK,CAAC0F,sBAAN,KAAiC,IAAjC,gBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AACI,MAAA,IAAI,EAAE,kBADV;AAEI,MAAA,KAAK,EAAE1F,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CAFX;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,KAAK,EAAEtB,KAAK,CAACS,cAAN,IAAwBT,KAAK,CAACS,cAAN,CAAqB,kBAArB,CAAxB,IAAoE,EAJ/E,CAKI;AACA;AANJ;AAOI,MAAA,QAAQ,EAAG8C,KAAD,IAAWvD,KAAK,CAAC0G,aAAN,CAAoBnD,KAApB,EAA2B,CAA3B,CAPzB;AAQI,MAAA,IAAI,EAAC,GART;AASI,MAAA,SAAS,EAAE,KATf;AAUI,MAAA,UAAU,EAAE,KAVhB;AAWI,MAAA,WAAW,EAAE,IAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,gBAea,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACL,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAEvD,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,YAAY,EAAE,IAFlB;AAGI,MAAA,IAAI,EAAE,yBAHV;AAII,MAAA,UAAU,EAAE,IAJhB;AAKI,MAAA,OAAO,EAAEtB,KAAK,CAAC+G,cAAN,IAAwB,EALrC;AAMI,MAAA,QAAQ,EAAC,yBANb;AAOI,MAAA,WAAW,EAAC,iBAPhB;AAQI,MAAA,KAAK,EAAE/G,KAAK,CAACS,cAAN,CAAqB,yBAArB,KAAmDT,KAAK,CAACS,cAAN,CAAqB,yBAArB,CAAnD,IAAsG,EARjH;AASI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,yBAAhC,CATvB;AAUI,MAAA,WAAW,EAAE,IAVjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADK,CAhBhB,GA6BgB,EAzErB,CAFJ,CA+EI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA7GJ,MA+GIjB,KAAK,CAACyF,MAAN,KAAiB,aAAjB,gBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAEzF,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,kBAAkB,EAAC,8BAFvB;AAGI,MAAA,YAAY,EAAE,IAHlB;AAII,MAAA,IAAI,EAAE,oBAJV;AAKI,MAAA,UAAU,EAAE,IALhB;AAMI,MAAA,OAAO,EAAEtB,KAAK,CAAC2G,oBAAN,IAA8B,EAN3C;AAOI,MAAA,QAAQ,EAAC,oBAPb;AAQI,MAAA,WAAW,EAAC,uBARhB;AASI,MAAA,KAAK,EAAE3G,KAAK,CAACS,cAAN,CAAqB,oBAArB,KAA8CT,KAAK,CAACS,cAAN,CAAqB,oBAArB,CAA9C,IAA4F,EATvG;AAUI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,oBAAhC,CAVvB;AAWI,MAAA,WAAW,EAAE,IAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,CADJ,gBAkBM,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,SAAD;AACI,MAAA,IAAI,EAAE,qBADV;AAEI,MAAA,KAAK,EAAEjB,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CAFX;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,QAAQ,EAAGiC,KAAD,IAAWvD,KAAK,CAACgH,eAAN,CAAsBzD,KAAtB,EAA6B,CAA7B,CAJzB;AAKI,MAAA,WAAW,EAAEvD,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CALjB;AAMI,MAAA,KAAK,EAAEtB,KAAK,CAACiH,cAAN,IAAwBjH,KAAK,CAACiH,cAAN,CAAqB,CAArB,EAAwB1E,IAAxB,CAA6B2E,eAArD,IAAwE,EANnF;AAOI,MAAA,WAAW,EAAC,GAPhB;AAQI,MAAA,QAAQ,EAAE,IARd;AASI,MAAA,SAAS,EAAE,GATf;AAUI,MAAA,UAAU,EAAE,IAVhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADF,eAeE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,gBAAD;AACI,MAAA,SAAS,EAAElH,KAAK,CAACoB,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf,CAEI;AAFJ;AAGI,MAAA,YAAY,EAAE,IAHlB;AAII,MAAA,IAAI,EAAE,yBAJV;AAKI,MAAA,UAAU,EAAE,IALhB;AAMI,MAAA,OAAO,EAAE2D,UAAU,CAACjF,KAAK,CAACiH,cAAP,CAAV,IAAoC,EANjD;AAOI,MAAA,QAAQ,EAAC,yBAPb;AAQI,MAAA,WAAW,EAAC,iBARhB;AASI,MAAA,KAAK,EAAEjH,KAAK,CAACS,cAAN,CAAqB,yBAArB,KAAmDT,KAAK,CAACS,cAAN,CAAqB,yBAArB,CAAnD,IAAsG,EATjH;AAUI,MAAA,QAAQ,EAAEQ,KAAK,IAAIjB,KAAK,CAAC8F,kBAAN,CAAyB7E,KAAzB,EAAgC,yBAAhC,CAVvB;AAWI,MAAA,WAAW,EAAE,IAXjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAfF,CA5Q1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnNJ,CADA,CADA,CADJ,CAFJ;AA0gBH,CAxnCD;;AA0nCA,eAAezC,UAAU,CAACuB,OAAD,CAAzB","sourcesContent":["import { faChevronRight, faComment, faComments, faEye, faGripVertical, faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, Nav, Row } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport CustomAccordion from '../../components/custom-accordion/custom-accordion.component';\r\n\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { BuilderBorder, ContionalButton, DeleteRule } from './RuleEngineSqlbuilder.styled';\r\nimport '../../assets/styles/querybuilder.css';\r\nimport './rulesengine.css';\r\n\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\n\r\nimport { ColumnType } from '../../components/Enumeration';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from './RuleEngineQueryBuilderData';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport TestInitiateTab from './TestInitiateTab';\r\nimport ModalShow from '../../components/ModalShow';\r\n\r\n\r\nconst AddRule = (props) => {\r\n    const fieldsForGrid = props.activeTabIndex == 1 ? [\r\n        { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"sfromsitename\", \"width\": \"200px\" },\r\n        { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"stositename\", \"width\": \"200px\" }\r\n    ] : [{ \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"scommenttype\", \"width\": \"200px\" },\r\n    { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"scommentsubtype\", \"width\": \"200px\" },\r\n    { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" },\r\n    { \"idsName\": \"IDS_GENERALCOMMENTS\", \"dataField\": \"sgeneralcomments\", \"width\": \"200px\" }\r\n        // props.activeTabIndex == 2 ? { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" } :\r\n        //     { \"idsName\": \"IDS_REPORTCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" }\r\n    ];\r\n    function createRules(items, groupIndex) {\r\n        let design = [];\r\n        console.log('props.selectedRecord->>', props.selectedRecord)\r\n        props.selectedRecord && [...Array(items)].map((data, index) => {\r\n            let stringOperators = stringOperatorData;\r\n            design.push(\r\n                <>\r\n                    {index > 0 ? props.selectedRecord[\"groupList\"][groupIndex]['button_or'] === true ?\r\n                        <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                        >\r\n                            <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                        </ContionalButton> :\r\n                        props.selectedRecord[\"groupList\"][groupIndex]['button_and'] === true ?\r\n                            <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                            >\r\n                                <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                            </ContionalButton> : \"\" : \"\"}\r\n\r\n\r\n                    {/* {\r\n                        props.selectedRecord[\"groupList\"][groupIndex][index]  && */}\r\n\r\n                    <Row className=\"my-3 ml-1\">\r\n                        {/* <ContionalButton type=\"button\" className={\"btn btn-primary\"} marginLeft={1}\r\n                        >\r\n                            <span>{props.intl.formatMessage({ id: \"IDS_RULE\" }) + \" \" + (index + 1)} </span>\r\n                        </ContionalButton> */}                        \r\n                        <Col md={3} className=\"pl-0\">\r\n                            <FormSelectSearch\r\n                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                isSearchable={true}\r\n                                name={\"stestname\"}\r\n                                showOption={true}\r\n                                options={props.rulesOption || []}\r\n                                optionId='stestname'\r\n                                optionValue='displayname'\r\n                                value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] || \"\"}\r\n                                onChange={value => props.onRuleChange(value, \"stestname\", groupIndex, index)}\r\n                            ></FormSelectSearch>\r\n                        </Col>\r\n                        <DeleteRule marginLeft={1} onClick={() => props.deleteRule(groupIndex, index)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                        </DeleteRule>\r\n\r\n                        {\r\n                            props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"] &&\r\n                            <>\r\n                                <Col md={1}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        name={`sinputname`}\r\n                                        type=\"text\"\r\n                                        value={props.intl.formatMessage({ id: \"IDS_WITH\" })}\r\n                                        disabled={true}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"orderresulttype\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={props.resultTypeList}\r\n                                        optionId='nresultypecode'\r\n                                        optionValue='orderresulttype'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] || \"\"}\r\n                                        onChange={value => props.onMasterDataChange(value, \"orderresulttype\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"ssymbolname\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index] && props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, \"ssymbolname\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                    <Col md={2}>\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            isSearchable={true}\r\n                                            name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`}\r\n                                            showOption={true}\r\n                                            // options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] ?\r\n                                            //     props.optionsByRule[groupIndex][index] : []}\r\n                                            options={props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ?\r\n                                                props.DiagnosticCaseList : props.GradeList}\r\n\r\n                                            optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}\r\n                                            optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items && props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.displaymember}\r\n                                            // value={props.isResultorOrderType && props.isResultorOrderType[groupIndex] &&\r\n                                            //     props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                            //     [props.isResultorOrderType[groupIndex][index] === 1 ? 'ndiagnosticcasecode' : 'ngradecode'] || \"\"}\r\n                                            value={props.selectedRecord[\"groupList\"][groupIndex][index] &&\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index]\r\n                                                [props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value == 1 ? 'ndiagnosticcasecode' : 'ngradecode'] || \"\"}\r\n                                            //  isMulti={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`] && props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.ismulti}\r\n                                            onChange={value => props.onMasterDataChange(value,\r\n                                                props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"] &&\r\n                                                    props.selectedRecord[\"groupList\"][groupIndex][index][\"orderresulttype\"].value === 1 ? 'ndiagnosticcasecode' : 'ngradecode'// `${props.selectedRecord[\"groupList\"][groupIndex][index][\"stestname\"].items.valuemember}`\r\n                                                , groupIndex, index)}\r\n                                        ></FormSelectSearch>\r\n                                    </Col>}\r\n\r\n\r\n                            </>\r\n                        }\r\n                    </Row>\r\n                </>\r\n            )\r\n        });\r\n        return design;\r\n    }\r\n    function createGroupRules() {\r\n        console.log('props.addGroupList->', props)\r\n        let indexCount = 0;\r\n        let design = [];\r\n        console.log('props.addGroupList->', props.addGroupList)\r\n        props.selectedRecord[\"groupList\"] && props.addGroupList.length > 0 && props.addGroupList.map((items, index) => {\r\n\r\n            let stringOperators = stringOperatorData;\r\n            if (props.selectedRecord[\"groupList\"] && props.selectedRecord[\"groupList\"][index][\"stestname\"]\r\n                && !props.selectedRecord[\"groupList\"][index][\"stestname\"].items.needmasterdata\r\n                && props.selectedRecord[\"groupList\"][index][\"stestname\"].items.columntype === ColumnType.TEXTINPUT) {\r\n                const temp = stringOperators.filter(item => {\r\n                    if (item.items.symbolType !== 6) {\r\n                        return item\r\n                    }\r\n                });\r\n                stringOperators = temp;\r\n            }\r\n\r\n            if (items > -1) {\r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n                <>{index > 0 && <Row>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                        onClick={() => props.onConditionClick(\"button_and\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                    </ContionalButton>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                        onClick={() => props.onConditionClick(\"button_or\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                    </ContionalButton>\r\n                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupListJoins\"] &&\r\n                        props.selectedRecord[\"groupListJoins\"][index - 1] && props.selectedRecord[\"groupListJoins\"][index - 1][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                        onClick={() => props.onConditionClick(\"button_not\", (index - 1), true)}>\r\n                        <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                    </ContionalButton>\r\n                </Row>}\r\n                    {items > -1 ?\r\n                        <>\r\n                            {/* {index > 0 ? props.selectedRecord[\"groupList\"]['button_or'] === true ?\r\n                                <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                                >\r\n                                    <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                                </ContionalButton> :\r\n                                props.selectedRecord[\"groupList\"]['button_and'] === true ?\r\n                                    <ContionalButton type=\"button\" className={\"builder-btn-primary\"} marginLeft={0}\r\n                                    >\r\n                                        <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                                    </ContionalButton> : \"\" : \"\"} */}\r\n\r\n\r\n                            <BuilderBorder key={index} className=\"p-3\">\r\n                                <Row >\r\n\r\n                                    <Col md={12} >\r\n                                        <Button onClick={() => props.addRule(\"views\", index)} className=\"mr-1 rulesengine-rule-btn\">\r\n                                            {'+'} <FormattedMessage id=\"IDS_RULE\" defaultMessage=\"Rule\" />\r\n                                        </Button>\r\n                                    {/* </Col> */}\r\n                                    {/* <Col md={3}>\r\n                                        <ContionalButton type=\"button\" className={\"btn btn-primary\"} marginLeft={1}\r\n                                        >\r\n                                            <span>{props.intl.formatMessage({ id: \"IDS_GROUP\" }) + \" \" + (index + 1)} </span>\r\n                                        </ContionalButton>\r\n                                    </Col> */}\r\n                                    {/* <Col md={4} className=\"rulesengine-condition-btn \"> */}\r\n                                        {items > 1 ?\r\n                                            <Row  className=\"rulesengine-condition-btn \">\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                                                    onClick={() => props.onConditionClick(\"button_and\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                                                </ContionalButton>\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                    onClick={() => props.onConditionClick(\"button_or\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                                                </ContionalButton>\r\n                                                <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                    onClick={() => props.onConditionClick(\"button_not\", index, false)}>\r\n                                                    <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                                                </ContionalButton>\r\n                                            </Row>\r\n\r\n                                            :\r\n                                            <>\r\n                                                <Row className=\"notbtn rulesengine-condition-btn \">\r\n                                                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                                        onClick={() => props.onConditionClick(\"button_not\", index, false)}>\r\n                                                        <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                                                    </ContionalButton>\r\n                                                </Row>\r\n                                            </>\r\n                                        }\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                <>\r\n                                    {createRules(items, index)}\r\n                                </>\r\n\r\n                            </BuilderBorder>\r\n\r\n                        </> : <></>\r\n                    }\r\n\r\n\r\n                </>)\r\n        });\r\n\r\n        return design;\r\n    }\r\n\r\n\r\n    function testParameterAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameter) =>\r\n            accordionMap.set(testParameter.ntestparametercode,\r\n                <Col md=\"12\" testParameter={testParameter}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end pr-0\">\r\n                            {/* <Nav.Link name=\"deletetestparameter\" className=\"add-txt-btn\" testParameter={testParameter}\r\n                                onClick={() => props.deleteModalTest()}\r\n                            >\r\n                             <FontAwesomeIcon icon={faTrashAlt} testParameter={testParameter} /> { }\r\n                                <FormattedMessage id=\"IDS_TEST\" defaultMessage=\"Test\" testParameter={testParameter} />\r\n                            </Nav.Link> */}\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn pr-0\" testParameter={testParameter}\r\n                                onClick={() => props.addModalSite()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameter={testParameter} /> { }\r\n                                <FormattedMessage id=\"IDS_OUTSOURCE\" defaultMessage=\"Add Site\" testParameter={testParameter} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    {//props.masterData[\"testSite\"][testParameter.ntestparametercode] ?\r\n                        <>\r\n                            {/* <div className=\"actions-stripe\" testParameter={testParameter}>\r\n                                <div className=\"d-flex justify-content-end\" testParameter={testParameter}>\r\n                                    <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameter={testParameter}\r\n                                        onClick={() => props.addModalSite()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} testParameter={testParameter} /> { }\r\n                                        <FormattedMessage id=\"IDS_OUTSOURCE\" defaultMessage=\"Add Site\" testParameter={testParameter} />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div> */}\r\n\r\n                            <DataGrid\r\n                                key=\"testsectionkey\"\r\n                                primaryKeyField=\"nresultusedmaterialcode\"\r\n                                //expandField=\"expanded\"\r\n                                //   dataResult={props.dataResult || []}\r\n\r\n                                dataResult={props.masterData[\"testSite\"] && process(props.masterData[\"testSite\"][testParameter.ntestparametercode] || [],\r\n                                    props.dataStateObject && props.dataStateObject[testParameter.ntestparametercode]\r\n                                        ? props.dataStateObject[testParameter.ntestparametercode] : { skip: 0, take: 10 })}\r\n                                //dataState={{ skip: 0, take: 10 }}\r\n                                // dataStateChange={props.dataStateChange}\r\n\r\n                                dataState={props.dataStateObject && props.dataStateObject[testParameter.ntestparametercode]\r\n                                    ? props.dataStateObject[testParameter.ntestparametercode] : { skip: 0, take: 10 }}\r\n                                // dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                                dataStateChange={(event) => { props.dataStateChange(event, testParameter.ntestparametercode) }}\r\n\r\n                                extractedColumnList={fieldsForGrid}\r\n                                controlMap={props.controlMap}\r\n                                userRoleControlRights={props.userRoleControlRights}\r\n                                pageable={true}\r\n                                isActionRequired={true}\r\n                                scrollable={'scrollable'}\r\n                                hideColumnFilter={true}\r\n                                selectedId={0}\r\n                                testParameter={testParameter}\r\n                                deleteRecord={props.deletModalSite}\r\n                                deleteParam={{ operation: \"delete\" }}\r\n                                actionIcons={[{\r\n                                    title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                    controlname: \"faTrashAlt\",\r\n                                    hidden: false,\r\n                                    objectName: \"delete\",\r\n                                    onClick: props.deletModalSite\r\n\r\n                                }]}\r\n                                gridWidth={\"400px\"}\r\n                            >\r\n                            </DataGrid></>\r\n                        // : \"\"\r\n                    }\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function testCommentsAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameterComments) =>\r\n            accordionMap.set(testParameterComments.ntestparametercode,\r\n                <Col md=\"12\" testParameterComments={testParameterComments}>\r\n                    <Row>\r\n                        <Col md={6} className=\"d-flex justify-content-end\">\r\n                            <Nav.Link name=\"deletetestparameter\" className=\"add-txt-btn\" testParameterComments={testParameterComments}\r\n                                onClick={() => props.deleteModalTest()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faTrashAlt} testParameterComments={testParameterComments} /> { }\r\n                                <FormattedMessage id=\"IDS_TEST\" defaultMessage=\"Test\" testParameterComments={testParameterComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                        <Col md={6} className=\"d-flex justify-content-end\">\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterComments={testParameterComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterComments={testParameterComments} /> { }\r\n                                <FormattedMessage id=\"IDS_TESTCOMMENTS\" defaultMessage=\"Add Test Comments\" testParameterComments={testParameterComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    {/* <div className=\"actions-stripe\" testParameterComments={testParameterComments}>\r\n                        <div className=\"d-flex justify-content-end\" testParameterComments={testParameterComments}>\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterComments={testParameterComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterComments={testParameterComments} /> { }\r\n                                <FormattedMessage id=\"IDS_TESTCOMMENTS\" defaultMessage=\"Add Test Comments\" testParameterComments={testParameterComments} />\r\n                            </Nav.Link>\r\n                        </div>\r\n                    </div> */}\r\n\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                       // expandField=\"expanded\"\r\n                        //   dataResult={props.dataResult || []}\r\n\r\n                        dataResult={props.masterData[\"testComments\"] && process(props.masterData[\"testComments\"][testParameterComments.ntestparametercode] || [],\r\n                            props.dataStateObject && props.dataStateObject[testParameterComments.ntestparametercode]\r\n                                ? props.dataStateObject[testParameterComments.ntestparametercode] : { skip: 0, take: 10 })}\r\n                        //dataState={{ skip: 0, take: 10 }}\r\n                        // dataStateChange={props.dataStateChange}\r\n\r\n                        dataState={props.dataStateObject && props.dataStateObject[testParameterComments.ntestparametercode]\r\n                            ? props.dataStateObject[testParameterComments.ntestparametercode] : { skip: 0, take: 10 }}\r\n                        // dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                        dataStateChange={(event) => { props.dataStateChange(event, testParameterComments.ntestparametercode) }}\r\n\r\n                        extractedColumnList={fieldsForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        pageable={true}\r\n                        isActionRequired={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={true}\r\n                        selectedId={0}\r\n                        testParameterComments={testParameterComments}\r\n                        deleteRecord={props.deletModalSite}\r\n                        deleteParam={{ operation: \"delete\" }}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                            controlname: \"faTrashAlt\",\r\n                            hidden: false,\r\n                            objectName: \"delete\",\r\n                            onClick: props.deletModalSite\r\n\r\n                        }]}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function reportCommentsAccordion(TestParameter) {\r\n        const accordionMap = new Map();\r\n        TestParameter.map((testParameterreportComments) =>\r\n            accordionMap.set(testParameterreportComments.ntestparametercode,\r\n                <Col md=\"12\" testParameterreportComments={testParameterreportComments}>\r\n                    <Row>\r\n                        <Col md={12} className=\"d-flex justify-content-end\">\r\n                            <Nav.Link name=\"deletetestparameter\" className=\"add-txt-btn\" testParameterreportComments={testParameterreportComments}\r\n                                onClick={() => props.deleteModalTest()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faTrashAlt} testParameterreportComments={testParameterreportComments} /> { }\r\n                                <FormattedMessage id=\"IDS_DELETE\" defaultMessage=\"Delete\" testParameterreportComments={testParameterreportComments} />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                    </Row>\r\n                    <div className=\"actions-stripe\" testParameterreportComments={testParameterreportComments}>\r\n                        <div className=\"d-flex justify-content-end\" testParameterreportComments={testParameterreportComments}>\r\n                            <Nav.Link name=\"addtestparameter\" className=\"add-txt-btn\" testParameterreportComments={testParameterreportComments}\r\n                                onClick={() => props.addComments()}\r\n                            >\r\n                                <FontAwesomeIcon icon={faPlus} testParameterreportComments={testParameterreportComments} /> { }\r\n                                <FormattedMessage id=\"IDS_ADDREPORTCOMMENTS\" defaultMessage=\"Add Report Comments\" testParameterreportComments={testParameterreportComments} />\r\n                            </Nav.Link>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <DataGrid\r\n                        key=\"testsectionkey\"\r\n                        primaryKeyField=\"nresultusedmaterialcode\"\r\n                       // expandField=\"expanded\"\r\n                        //   dataResult={props.dataResult || []}\r\n\r\n                        dataResult={props.masterData[\"reportComments\"] && process(props.masterData[\"reportComments\"][testParameterreportComments.ntestparametercode] || [],\r\n                            props.dataState\r\n                                ? props.dataState : { skip: 0, take: 10 })}\r\n                        //dataState={{ skip: 0, take: 10 }}\r\n                        // dataStateChange={props.dataStateChange}\r\n\r\n                        dataState={props.dataState\r\n                            ? props.dataState : { skip: 0, take: 10 }}\r\n                        // dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                        dataStateChange={props.dataStateChange}\r\n\r\n                        extractedColumnList={fieldsForGrid}\r\n                        controlMap={props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        pageable={true}\r\n                        isActionRequired={true}\r\n                        scrollable={'scrollable'}\r\n                        hideColumnFilter={true}\r\n                        selectedId={0}\r\n                        testParameterComments={testParameterreportComments}\r\n                        deleteRecord={props.deletModalSite}\r\n                        deleteParam={{ operation: \"delete\" }}\r\n                        actionIcons={[{\r\n                            title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                            controlname: \"faTrashAlt\",\r\n                            hidden: false,\r\n                            objectName: \"delete\",\r\n                            onClick: props.deletModalSite\r\n\r\n                        }]}\r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            )\r\n        );\r\n\r\n        return accordionMap;\r\n    }\r\n    function TabDetails() {\r\n        const resultTabMap = new Map();\r\n        if (props.addOutcomeList.length === 0) {\r\n            props.activeTabIndex == 1 ?\r\n                resultTabMap.set(\"IDS_NEEDTESTINITIATE\",\r\n                    <>\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                <Nav.Link name=\"addtestparameter\" //className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addParameterId) === -1}\r\n                                    onClick={() => props.addTest()}>\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        {props.masterData.testParameter && props.masterData.testParameter.length > 0 &&\r\n                            <CustomAccordion\r\n                                key=\"parameteraccordion\"\r\n                                clickIconGroup={true}\r\n                                deleteModalTest1 = {props.deleteModalTest}\r\n                                accordionTitle={\"stestparametersynonym\"}\r\n                                accordionComponent={testParameterAccordion(props.masterData.testParameter)}\r\n                                inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                accordionClick={props.getOutcomeDetails}\r\n                                accordionPrimaryKey={\"ntestparametercode\"}\r\n                                accordionObjectName={\"testParameter\"}\r\n                                selectedKey={props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0}\r\n                            />\r\n                        }\r\n                    </>\r\n                ) : props.activeTabIndex == 2 ?\r\n                    resultTabMap.set(\"IDS_TESTCOMMENTS\",\r\n                        <>\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                    <Nav.Link name=\"addtestparameter\" //className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addParameterId) === -1}\r\n                                        onClick={() => props.addTest()}>\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            {props.masterData.testParameterComments && props.masterData.testParameterComments.length > 0 &&\r\n                                <CustomAccordion\r\n                                    key=\"parameteraccordion\"\r\n                                    accordionTitle={\"stestparametersynonym\"}\r\n                                    accordionComponent={testCommentsAccordion(props.masterData.testParameterComments)}\r\n                                    inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                    accordionClick={props.getOutcomeDetails}\r\n                                    accordionPrimaryKey={\"ntestparametercode\"}\r\n                                    accordionObjectName={\"testParameterComments\"}\r\n                                    selectedKey={props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0}\r\n                                />\r\n                            }\r\n                        </>\r\n                    ) :\r\n                    resultTabMap.set(\"IDS_REPORTCOMMENTS\",\r\n                        <>\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                    <Nav.Link name=\"addtestparameter\" //className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addParameterId) === -1}\r\n                                        onClick={() => props.addTest()}>\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id=\"IDS_Test\" defaultMessage=\"Add Test\" />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n                            {props.masterData.testParameterreportComments && props.masterData.testParameterreportComments.length > 0 &&\r\n                                <CustomAccordion\r\n                                    key=\"parameteraccordion\"\r\n                                    accordionTitle={\"stestparametersynonym\"}\r\n                                    accordionComponent={reportCommentsAccordion(props.masterData.testParameterreportComments)}\r\n                                    inputParam={{ masterData: props.masterData, userInfo: props.userInfo, nFlag: 5 }}\r\n                                    accordionClick={props.getOutcomeDetails}\r\n                                    accordionPrimaryKey={\"ntestparametercode\"}\r\n                                    accordionObjectName={\"testParameterreportComments\"}\r\n                                    selectedKey={props.masterData.selectedParameter ? props.masterData.selectedParameter.ntestparametercode : 0}\r\n                                />\r\n                            }\r\n                        </>\r\n                    )\r\n        }\r\n        return resultTabMap;\r\n    }\r\n    function testfilter(list) {\r\n        let activeTabIndex = props.activeTabIndex\r\n        if (props.masterData.selectedParameter) {\r\n            let dynamicList = activeTabIndex === 2 ? props.masterData[\"testComments\"] && props.masterData[\"testComments\"][props.masterData.selectedParameter.ntestparametercode]\r\n                : props.masterData[\"reportComments\"] && props.masterData[\"reportComments\"][props.masterData.selectedParameter.ntestparametercode]\r\n            if (dynamicList !== undefined) {\r\n                list = list.filter(({ value }) => !dynamicList.some(x => x.nsampletestcommentscode == value))\r\n            }\r\n        }\r\n        return list\r\n    }\r\n    const mandatoryFields =\r\n        // props.action === 'IDS_ADDREPORTCOMMENTS' ? [\r\n        //     { \"idsName\": \"IDS_REPORTCOMMENTS\", \"dataField\": \"nsampletestcommentscode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n        // ] :\r\n        //     props.action === 'IDS_ADDTESTCOMMENTS' ? [\r\n        //         { \"idsName\": \"IDS_TESTCOMMENTS\", \"dataField\": \"nsampletestcommentscode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n        //     ]\r\n        //         : props.action === 'IDS_ADDTEST' ? [\r\n        //             { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n        //         ] :\r\n        //             [\r\n        //                 { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n        //                 { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        //             ]\r\n        //props.action === 'IDS_ADDTESTCOMMENTS' || props.action === 'IDS_ADDTEST' ?\r\n        props.action === 'IDS_SAVERULEMODAL' ?\r\n            [{ \"idsName\": \"IDS_RULESENGINENAME\", \"dataField\": \"srulename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"file\" }] :\r\n            props.activeTabIndex === 1 ?\r\n                // props.needoutsource !== true ?\r\n                [{ \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }]// :\r\n                // [\r\n                //     { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                //     { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                //     { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                // ]\r\n                :\r\n                props.activeTabIndex === 2 ? [\r\n                    { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"ntestparametercode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                    { \"idsName\": \"IDS_COMMENTTYPE\", \"dataField\": \"ncommenttypecode\", \"width\": \"200px\" },\r\n                    { \"idsName\": \"IDS_COMMENTSUBTYPE\", \"dataField\": \"ncommentsubtypecode\", \"width\": \"200px\" },\r\n                    props.isneedsgeneralcomments === true ?\r\n                        { \"idsName\": \"IDS_GENERALCOMMENTS\", \"dataField\": \"sgeneralcomments\", \"width\": \"200px\" } :\r\n                        { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"nsampletestcommentscode\", \"width\": \"200px\" }\r\n\r\n\r\n                    // props.activeTabIndex == 2 ? { \"idsName\": \"IDS_PREFINEDCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" } :\r\n                    //     { \"idsName\": \"IDS_REPORTCOMMENTS\", \"dataField\": \"spredefinedname\", \"width\": \"200px\" }\r\n                ] :\r\n                    [\r\n                        { \"idsName\": \"IDS_FROMSITE\", \"dataField\": \"nfromsitecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_TOSITE\", \"dataField\": \"ntositecode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                    ]\r\n    return (\r\n       \r\n        <div class=\"modal-inner-content\">\r\n            <div class=\"row margin-top-negative-1\">\r\n            <div class=\"p-0 col-md-12\">\r\n            <div class=\"vertical-tab-top popup\">                \r\n            <div class=\"full-width center-area-wrap py-2 px-0 border-0\">\r\n                <div class=\"center-area full-width\">\r\n                    <div class=\"\">\r\n            \r\n                <Col className={`tab-left-area ${props.activeTabIndex\r\n                    ? 'active' : \"\"} ${props.enablePropertyPopup ? 'active-popup' : \"\"}`}>\r\n                    <div className=\"full-width center-area-wrap my-2\">\r\n                        <div className=\"center-area m-4\">\r\n                                <Row className='d-flex pt-0 mt-4'>\r\n                                    <Col md={6}>\r\n                                        <FormSelectSearch\r\n                                            name={\"nproductcatcode\"}\r\n                                            formLabel={props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORY\" })}\r\n                                            isSearchable={true}\r\n                                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                            isMandatory={true}\r\n                                            isDisabled={false}\r\n                                            showOption={true}\r\n                                            options={props.productCategoryList || []}\r\n                                            value={props.selectedRecord.nproductcatcode ? props.selectedRecord.nproductcatcode\r\n                                                : \"\"}\r\n\r\n                                            onChange={value => props.onmodalComboChange(value, \"nproductcatcode\")}\r\n\r\n                                        ></FormSelectSearch>\r\n                                    </Col>\r\n\r\n                                    <Col md={6}>\r\n                                        <Button onClick={() => props.addGroup(\"views\")} className=\"mr-1\">\r\n                                            {'+'} <FormattedMessage id=\"IDS_GROUP\" defaultMessage=\"Group\" />\r\n                                        </Button>\r\n                                        <Button onClick={() => props.resetRule()}>\r\n                                            <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className='popup-fixed-center-headed-full-width'>\r\n                                    <Col md={12} className=\"ml-0 mr-0\">\r\n\r\n                                        {props.addGroupList.length > 0 ?\r\n                                            <>\r\n                                                <BuilderBorder className='border-0 '>    {\r\n                                                    createGroupRules()}   </BuilderBorder>\r\n                                            </>\r\n\r\n                                            : <></>}\r\n                                    </Col>\r\n                                </Row>\r\n                        </div>\r\n                    </div>\r\n                </Col>\r\n                </div>\r\n            </div>\r\n            </div>\r\n                <div md={6} className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${props.activeTabIndex\r\n                    ? 'active' : \"\"}`} >\r\n                    <div className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${props.activeTabIndex\r\n                        ? 'active' : \"\"}`} style={{ width: props.enablePropertyPopup ? props.propertyPopupWidth + '%' : \"\" }}>\r\n                        <span className={` vertical-tab-close ${props.activeTabIndex\r\n                            ? 'active' : \"\"}`} onClick={() => props.changePropertyView(0)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                        <div className={` vertical-tab-content-common  ${props.activeTabIndex && props.activeTabIndex\r\n                            ? 'active' : \"\"}`}>\r\n                            <h4 className='inner_h4'>\r\n                                {props.intl.formatMessage({ id: \"IDS_OUTCOME\" })}\r\n                            </h4>\r\n                            {props.activeTabIndex && props.activeTabIndex\r\n                                ?\r\n                                <CustomTabs activeKey={props.activeTestTab\r\n                                } tabDetail={TabDetails()} />\r\n                                : \"\"}\r\n\r\n                        </div>\r\n                    </div>\r\n                    <div className='tab-head'>\r\n                        <ul>\r\n                            <li className={`${props.activeTabIndex && props.activeTabIndex == 1 ? 'active' : \"\"}`}\r\n                                onClick={() => props.changePropertyView(1)}>\r\n                                <FontAwesomeIcon icon={faEye} />\r\n                                <span>\r\n                                    {props.intl.formatMessage({ id: \"IDS_NEEDTESTINITIATE\" })}\r\n                                </span>\r\n                            </li>\r\n                            <li className={`${props.activeTabIndex && props.activeTabIndex == 2 ? 'active' : \"\"}`}\r\n                                onClick={() => props.changePropertyView(2)}>\r\n                                <FontAwesomeIcon icon={faComments} />\r\n                                <span>\r\n                                    {props.intl.formatMessage({ id: \"IDS_TESTCOMMENTS\" })}\r\n                                </span>\r\n                            </li>\r\n                            {/* <li className={`${props.activeTabIndex && props.activeTabIndex == 3 ? 'active' : \"\"}`}\r\n                                onClick={() => props.changePropertyView(3)}>\r\n                                <FontAwesomeIcon icon={faComments} />\r\n                                <span>\r\n                                    {props.intl.formatMessage({ id: \"IDS_REPORTCOMMENTS\" })}\r\n                                </span>\r\n                            </li> */}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n\r\n\r\n            {/* {\r\n                //start\r\n\r\n                <div className=\"vertical-tab-top popup\">\r\n                    <div className=\"full-width center-area-wrap\">\r\n                        <div className=\"center-area full-width\">\r\n                            <div className=\"popup-fixed-center-headed-full-width\">\r\n                                <div className=\"page\">\r\n                                    <Row>\r\n                                        <Col md={3}>\r\n                                            <Button onClick={() => props.resetRule()}>\r\n                                                <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                                            </Button>\r\n                                        </Col>\r\n\r\n                                        <Col md={3}>\r\n                                            <FormSelectSearch\r\n                                                name={\"nproductcatcode\"}\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORY\" })}\r\n                                                isSearchable={true}\r\n                                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                isMandatory={true}\r\n                                                isDisabled={false}\r\n                                                showOption={true}\r\n                                                options={props.productCategoryList || []}\r\n                                                value={props.selectedRecord.nproductcatcode ? props.selectedRecord.nproductcatcode\r\n                                                    : \"\"}\r\n                                                onChange={value => props.onmodalComboChange(value, \"nproductcatcode\")}\r\n\r\n                                            ></FormSelectSearch>\r\n                                        </Col>\r\n                                        <Col md={3}>\r\n                                            <Button onClick={() => props.addGroup(\"views\")} className=\"mr-1\">\r\n                                                {'+'} <FormattedMessage id=\"IDS_ADDGROUP\" defaultMessage=\"Add Group\" />\r\n                                            </Button>\r\n                                        </Col>\r\n\r\n                                        <Col md={12}>\r\n\r\n                                            {props.addGroupList.length > 0 ?\r\n                                                <>\r\n                                                    <BuilderBorder >    {\r\n                                                        createGroupRules()}   </BuilderBorder>\r\n                                                </>\r\n\r\n                                                : <></>}\r\n                                            {props.addAggregateList.length > 0 ? createAggregateFunctions() : <></>}\r\n                                            {props.addOrderbyList.length > 0 ? createOrderbyFields() : <></>}\r\n                                        </Col>\r\n                                    </Row>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab ${props.activeTabIndex\r\n                        ? 'active' : \"\"}`} >\r\n                        <div className={`${props.enablePropertyPopup ? 'active-popup' : \"\"} vertical-tab-content pager_wrap wrap-class ${props.activeTabIndex\r\n                            ? 'active' : \"\"}`} style={{ width: props.enablePropertyPopup ? props.propertyPopupWidth + '%' : \"\" }}>\r\n                            <span className={` vertical-tab-close ${props.activeTabIndex\r\n                                ? 'active' : \"\"}`} onClick={() => props.changePropertyView(1)}><FontAwesomeIcon icon={faChevronRight} /> </span>\r\n                            <div className={` vertical-tab-content-common  ${props.activeTabIndex && props.activeTabIndex\r\n                                ? 'active' : \"\"}`}>\r\n                                <h4 className='inner_h4'>\r\n                                    {props.intl.formatMessage({ id: \"IDS_OUTCOME\" })}\r\n                                </h4>\r\n                                {props.activeTabIndex && props.activeTabIndex\r\n                                    ?\r\n                                    <CustomTabs activeKey={props.activeTestTab\r\n                                    } tabDetail={TabDetails()} />\r\n                                    : \"\"}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='tab-head'>\r\n                            <ul>\r\n                                <li className={`${props.activeTabIndex && props.activeTabIndex == 1 ? 'active' : \"\"}`}\r\n                                    onClick={() => props.changePropertyView(1)}>\r\n                                    <FontAwesomeIcon icon={faEye} />\r\n                                    <span>\r\n                                        {props.intl.formatMessage({ id: \"IDS_NEEDTESTINITIATE\" })}\r\n                                    </span>\r\n                                </li>\r\n                                <li className={`${props.activeTabIndex && props.activeTabIndex == 2 ? 'active' : \"\"}`}\r\n                                    onClick={() => props.changePropertyView(2)}>\r\n                                    <FontAwesomeIcon icon={faComments} />\r\n                                    <span>\r\n                                        {props.intl.formatMessage({ id: \"IDS_TESTCOMMENTS\" })}\r\n                                    </span>\r\n                                </li>\r\n                                <li className={`${props.activeTabIndex && props.activeTabIndex == 3 ? 'active' : \"\"}`}\r\n                                    onClick={() => props.changePropertyView(3)}>\r\n                                    <FontAwesomeIcon icon={faComments} />\r\n                                    <span>\r\n                                        {props.intl.formatMessage({ id: \"IDS_REPORTCOMMENTS\" })}\r\n                                    </span>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                //end\r\n            } */}\r\n\r\n\r\n\r\n            {\r\n                props.openModalPopup &&\r\n                <ModalShow\r\n                    modalShow={true}\r\n                    modalTitle={props.action === 'IDS_SAVERULEMODAL' ? 'IDS_RULESENGINENAME' :\r\n                        props.action === 'IDS_ADDREPORTCOMMENTS' ? props.intl.formatMessage({ id: 'IDS_ADDREPORTCOMMENTS' }) :\r\n                            props.action === 'IDS_ADDTESTCOMMENTS' ? props.intl.formatMessage({ id: 'IDS_ADDTESTCOMMENTS' })\r\n                                : props.action === 'IDS_ADDTEST' ? props.intl.formatMessage({ id: 'IDS_ADDTEST' }) :\r\n                                    props.intl.formatMessage({ id: 'IDS_ADDSITE' })}\r\n\r\n                    closeModal={props.closeModalShow}\r\n                    onSaveClick={props.action === 'IDS_SAVERULEMODAL' ? props.save : props.modalsaveClick}\r\n                    // validateEsign={this.validateEsign}\r\n                    selectedRecord={props.selectedRecord}\r\n                    mandatoryFields={mandatoryFields}\r\n                    modalBody={\r\n\r\n                        props.openmodalsavePopup === true ?\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <FormInput\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        label={props.intl.formatMessage({ id: \"IDS_RULESENGINENAME\" })}\r\n                                        name={`srulename`}\r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={true}\r\n                                        value={props.selectedRecord[\"srulename\"] || \"\"}\r\n                                        onChange={(event) => props.onInputChange(event)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            :\r\n                            props.activeTabIndex == 1 ?\r\n                                //  props.action === 'IDS_ADDTEST' ?\r\n                                <Col md={12}>\r\n                                    <Row>\r\n                                        <Col md={//props.action === 'IDS_ADDTEST' ? 8 :\r\n                                            12}>\r\n                                            <FormSelectSearch\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"ntestparametercode\"}\r\n                                                showOption={true}\r\n                                                options={props.viewColumnListByRule || []}\r\n                                                optionId='ntestparametercode'\r\n                                                optionValue='stestparametersynonym'\r\n                                                value={props.selectedRecord[\"ntestparametercode\"] && props.selectedRecord[\"ntestparametercode\"] || \"\"}\r\n                                                onChange={value => props.onmodalComboChange(value, 'ntestparametercode')}\r\n                                                isMandatory={true}\r\n                                                isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                            ></FormSelectSearch>\r\n                                        </Col>\r\n                                        {/* {props.action === 'IDS_ADDTEST' ? <Col md={4}>\r\n                                        <CustomSwitch\r\n                                            label={props.intl.formatMessage({ id: \"IDS_NEEDOUTSOURCE\" })}\r\n                                            type=\"switch\"\r\n                                            name={\"needoutsource\"}\r\n                                            onChange={(event) => props.onInputChange(event)}\r\n                                            // placeholder={control.label}\r\n                                            // defaultValue={this.props.selectedRecord[control.label] && this.props.selectedRecord[control.label] === 3 ? true : false}\r\n                                            checked={props.selectedRecord[\"needoutsource\"] && props.selectedRecord[\"needoutsource\"] === 3 ? true : false}\r\n                                        //disabled={control.readonly ?\r\n                                        //    control.readonly : checkReadOnly}\r\n                                        />\r\n                                    </Col> : \"\"} */}\r\n\r\n                                    </Row>\r\n                                    {(//props.action === 'IDS_ADDSITE' ?\r\n                                        props.action === 'IDS_ADDSITE' || props.action === 'IDS_ADDTEST' ? true : false //:\r\n                                        // props.needoutsource === true ? true : false\r\n                                    )\r\n                                        ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <FormSelectSearch\r\n                                                    formLabel={props.intl.formatMessage({ id: \"IDS_FROMSITE\" })}\r\n                                                    // formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    isSearchable={true}\r\n                                                    name={\"nfromsitecode\"}\r\n                                                    showOption={true}\r\n                                                    options={props.siteList || []}\r\n                                                    optionId='nfromsitecode'\r\n                                                    optionValue='ssitename'\r\n                                                    value={props.selectedRecord[\"nfromsitecode\"] && props.selectedRecord[\"nfromsitecode\"] || \"\"}\r\n                                                    onChange={value => props.onmodalComboChange(value, 'nfromsitecode')}\r\n                                                //  isMandatory={true}\r\n                                                ></FormSelectSearch>\r\n                                            </Col>\r\n                                            <Col md={12}>\r\n                                                <FormSelectSearch\r\n                                                    formLabel={props.intl.formatMessage({ id: \"IDS_TOSITE\" })}\r\n                                                    //    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    isSearchable={true}\r\n                                                    name={\"ntositecode\"}\r\n                                                    showOption={true}\r\n                                                    options={props.siteList || []}\r\n                                                    optionId='ntositecode'\r\n                                                    optionValue='ssitename'\r\n                                                    value={props.selectedRecord[\"ntositecode\"] && props.selectedRecord[\"ntositecode\"] || \"\"}\r\n                                                    onChange={value => props.onmodalComboChange(value, 'ntositecode')}\r\n                                                //  isMandatory={true}\r\n                                                ></FormSelectSearch>\r\n                                            </Col>\r\n                                        </Row> : \"\"\r\n                                    }\r\n                                </Col>\r\n                                // :\r\n                                // <Row>\r\n                                //     <Col md={12}>\r\n                                //         <FormSelectSearch\r\n                                //             formLabel={props.intl.formatMessage({ id: \"IDS_FROMSITE\" })}\r\n                                //             // formGroupClassName=\"remove-floating-label-margin\"\r\n                                //             isSearchable={true}\r\n                                //             name={\"nfromsitecode\"}\r\n                                //             showOption={true}\r\n                                //             options={props.siteList || []}\r\n                                //             optionId='nfromsitecode'\r\n                                //             optionValue='ssitename'\r\n                                //             value={props.selectedRecord[\"nfromsitecode\"] && props.selectedRecord[\"nfromsitecode\"] || \"\"}\r\n                                //             onChange={value => props.onmodalComboChange(value, 'nfromsitecode')}\r\n                                //             isMandatory={true}\r\n                                //         ></FormSelectSearch>\r\n                                //     </Col>\r\n                                //     <Col md={12}>\r\n                                //         <FormSelectSearch\r\n                                //             formLabel={props.intl.formatMessage({ id: \"IDS_TOSITE\" })}\r\n                                //             //    formGroupClassName=\"remove-floating-label-margin\"\r\n                                //             isSearchable={true}\r\n                                //             name={\"ntositecode\"}\r\n                                //             showOption={true}\r\n                                //             options={props.siteList || []}\r\n                                //             optionId='ntositecode'\r\n                                //             optionValue='ssitename'\r\n                                //             value={props.selectedRecord[\"ntositecode\"] && props.selectedRecord[\"ntositecode\"] || \"\"}\r\n                                //             onChange={value => props.onmodalComboChange(value, 'ntositecode')}\r\n                                //             isMandatory={true}\r\n                                //         ></FormSelectSearch>\r\n                                //     </Col>\r\n                                // </Row>\r\n                                :\r\n                                props.activeTabIndex == 2 ?\r\n                                    //  props.action === 'IDS_ADDTEST' ?\r\n                                    <Row>\r\n                                        <Col md={12}>\r\n                                            <FormSelectSearch\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"ntestparametercode\"}\r\n                                                showOption={true}\r\n                                                options={props.viewColumnListByRule || []}\r\n                                                optionId='ntestparametercode'\r\n                                                optionValue='stestparametersynonym'\r\n                                                value={props.selectedRecord[\"ntestparametercode\"] && props.selectedRecord[\"ntestparametercode\"] || \"\"}\r\n                                                onChange={value => props.onmodalComboChange(value, 'ntestparametercode')}\r\n                                                isMandatory={true}\r\n                                                isDisabled={props.action === 'IDS_ADDTEST' ? false : true}\r\n                                            ></FormSelectSearch>\r\n                                        </Col>\r\n                                        <Col md={12}>\r\n                                            <FormSelectSearch\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTTYPE\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"ncommenttypecode\"}\r\n                                                showOption={true}\r\n                                                options={props.CommentType || []}\r\n                                                optionId='ncommenttypecode'\r\n                                                optionValue='scommenttype'\r\n                                                value={props.selectedRecord[\"ncommenttypecode\"] && props.selectedRecord[\"ncommenttypecode\"] || \"\"}\r\n                                                onChange={value => props.onmodalComboChange(value, 'ncommenttypecode')}\r\n                                                isMandatory={true}\r\n                                            ></FormSelectSearch>\r\n                                        </Col>\r\n                                        <Col md={12}>\r\n                                            <FormSelectSearch\r\n                                                formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"ncommentsubtypecode\"}\r\n                                                showOption={true}\r\n                                                options={props.CommentSubType || []}\r\n                                                optionId='ncommentsubtypecode'\r\n                                                optionValue='scommentsubtype'\r\n                                                value={props.selectedRecord[\"ncommentsubtypecode\"] && props.selectedRecord[\"ncommentsubtypecode\"] || \"\"}\r\n                                                onChange={value => props.onmodalComboChange(value, 'ncommentsubtypecode')}\r\n                                                isMandatory={true}\r\n                                            ></FormSelectSearch>\r\n                                        </Col>\r\n                                        {props.selectedRecord[\"ncommentsubtypecode\"] ?\r\n                                            props.isneedsgeneralcomments === true ?\r\n                                                <Col md={12}>\r\n                                                    <FormTextarea\r\n                                                        name={\"sgeneralcomments\"}\r\n                                                        label={props.intl.formatMessage({ id: \"IDS_GENERALCOMMENTS\" })}\r\n                                                        type=\"text\"\r\n                                                        value={props.selectedRecord && props.selectedRecord['sgeneralcomments'] || \"\"}\r\n                                                        // isMandatory={control.mandatory}\r\n                                                        // required={control.mandatory}\r\n                                                        onChange={(event) => props.onInputChange(event, 1)}\r\n                                                        rows=\"2\"\r\n                                                        maxLength={\"255\"}\r\n                                                        isDisabled={false}\r\n                                                        isMandatory={true}\r\n                                                    />\r\n                                                </Col> : <Col md={12}>\r\n                                                    <FormSelectSearch\r\n                                                        formLabel={props.intl.formatMessage({ id: \"IDS_PREDEFINEDNAME\" })}\r\n                                                        isSearchable={true}\r\n                                                        name={\"nsampletestcommentscode\"}\r\n                                                        showOption={true}\r\n                                                        options={props.predefcomments || []}\r\n                                                        optionId='nsampletestcommentscode'\r\n                                                        optionValue='spredefinedname'\r\n                                                        value={props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\"}\r\n                                                        onChange={value => props.onmodalComboChange(value, 'nsampletestcommentscode')}\r\n                                                        isMandatory={true}\r\n                                                    ></FormSelectSearch>\r\n                                                </Col> : \"\"\r\n                                        }\r\n\r\n                                    </Row>\r\n                                    // : <Row>\r\n                                    //     <Col md={12}>\r\n                                    //         <FormInput\r\n                                    //             name={\"ncommentsubtypecode\"}\r\n                                    //             label={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\r\n                                    //             type=\"text\"\r\n                                    //             onChange={(event) => props.onInputOnChange(event, 1)}\r\n                                    //             placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\r\n                                    //             value={props.testcomments && props.testcomments[0].item.scommentsubtype || \"\"}\r\n                                    //             isMandatory=\"*\"\r\n                                    //             required={true}\r\n                                    //             maxLength={100}\r\n                                    //             isDisabled={true}\r\n                                    //         />\r\n                                    //     </Col>\r\n                                    //     <Col md={12}>\r\n                                    //         <FormSelectSearch\r\n                                    //             formLabel={props.intl.formatMessage({ id: \"IDS_TESTCOMMENTS\" })}\r\n                                    //             //  formGroupClassName=\"remove-floating-label-margin\"\r\n                                    //             isSearchable={true}\r\n                                    //             name={\"nsampletestcommentscode\"}\r\n                                    //             showOption={true}\r\n                                    //             options={testfilter(props.testcomments) || []}\r\n                                    //             optionId='nsampletestcommentscode'\r\n                                    //             optionValue='spredefinedname'\r\n                                    //             value={props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\"}\r\n                                    //             onChange={value => props.onmodalComboChange(value, 'nsampletestcommentscode')}\r\n                                    //             isMandatory={true}\r\n                                    //         ></FormSelectSearch>\r\n                                    //     </Col>\r\n                                    // </Row>\r\n                                    :\r\n                                    props.action === 'IDS_ADDTEST' ?\r\n                                        <Col md={12}>\r\n                                            <Row>\r\n                                                <FormSelectSearch\r\n                                                    formLabel={props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    isSearchable={true}\r\n                                                    name={\"ntestparametercode\"}\r\n                                                    showOption={true}\r\n                                                    options={props.viewColumnListByRule || []}\r\n                                                    optionId='ntestparametercode'\r\n                                                    optionValue='stestparametersynonym'\r\n                                                    value={props.selectedRecord[\"ntestparametercode\"] && props.selectedRecord[\"ntestparametercode\"] || \"\"}\r\n                                                    onChange={value => props.onmodalComboChange(value, 'ntestparametercode')}\r\n                                                    isMandatory={true}\r\n                                                ></FormSelectSearch>\r\n                                            </Row>\r\n                                        </Col>\r\n                                        : <Row>\r\n                                            <Col md={12}>\r\n                                                <FormInput\r\n                                                    name={\"ncommentsubtypecode\"}\r\n                                                    label={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\r\n                                                    type=\"text\"\r\n                                                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                                                    placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTSUBTYPE\" })}\r\n                                                    value={props.reportcomments && props.reportcomments[0].item.scommentsubtype || \"\"}\r\n                                                    isMandatory=\"*\"\r\n                                                    required={true}\r\n                                                    maxLength={100}\r\n                                                    isDisabled={true}\r\n                                                />\r\n                                            </Col>\r\n                                            <Col md={12}>\r\n                                                <FormSelectSearch\r\n                                                    formLabel={props.intl.formatMessage({ id: \"IDS_REPORTCOMMENTS\" })}\r\n                                                    //   formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    isSearchable={true}\r\n                                                    name={\"nsampletestcommentscode\"}\r\n                                                    showOption={true}\r\n                                                    options={testfilter(props.reportcomments) || []}\r\n                                                    optionId='nsampletestcommentscode'\r\n                                                    optionValue='spredefinedname'\r\n                                                    value={props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\"}\r\n                                                    onChange={value => props.onmodalComboChange(value, 'nsampletestcommentscode')}\r\n                                                    isMandatory={true}\r\n                                                ></FormSelectSearch>\r\n                                            </Col>\r\n                                        </Row>\r\n                    }\r\n                />\r\n            }\r\n</div></div></div>\r\n        \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddRule);"]},"metadata":{},"sourceType":"module"}