{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboardtypes\\\\HomeDashBoardChartTemplates.jsx\";\nimport React from 'react';\nimport AreaChart from '../dashboardtypes/charts/AreaChart';\nimport PieChart from '../dashboardtypes/charts/PieChart';\nimport BubbleChart from '../dashboardtypes/charts/BubbleChart';\nimport { chartType } from '../../components/Enumeration';\nimport { injectIntl } from 'react-intl';\n\nconst HomeDashBoardChartTemplates = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.PIECHART || props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.DONUT ?\n  /*#__PURE__*/\n  // <div className=\"k-card\">\n  // <div className=\"k-card-body height-1\">\n  React.createElement(PieChart, {\n    series: props.dashBoardType.pieChart //masterData={props.dashBoardType}\n    ,\n    dashBoardType: props.dashBoardType,\n    masterData: props.masterData,\n    userInfo: props.userInfo,\n    dashBoardTypeNo: props.dashBoardTypeNo,\n    templateCode: props.templateCode,\n    checkParametersAvailable: props.checkParametersAvailable,\n    chartTypeName: props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.PIECHART ? \"pie\" : \"donut\",\n    valueField: \"valueField\",\n    categoryField: \"categoryField\",\n    viewDashBoardDesignConfigList: props.dashBoardType.filterParameter.viewDashBoardDesignConfigList,\n    selectedRecord: props.selectedRecord || {},\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }) // </div></div>\n  : // <div className=\"k-card\">\n  // <div className=\"k-card-body height-1\">\n  props.dashBoardType.selectedDashBoardTypes.ncharttypecode !== chartType.BUBBLE ? /*#__PURE__*/React.createElement(AreaChart, {\n    xSeries: props.dashBoardType.xSeries,\n    ySeries: props.dashBoardType.ySeries //masterData={props.dashBoardType}\n    ,\n    dashBoardType: props.dashBoardType,\n    masterData: props.masterData,\n    userInfo: props.userInfo,\n    dashBoardTypeNo: props.dashBoardTypeNo,\n    templateCode: props.templateCode,\n    checkParametersAvailable: props.checkParametersAvailable //chartTypeName={\"column\"}\n    ,\n    chartTypeName: props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.AREACHART ? \"area\" : props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.COLUMNCHART ? \"column\" : props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.BARCHART ? \"bar\" : \"area\",\n    selectedRecord: props.selectedRecord || {},\n    viewDashBoardDesignConfigList: props.dashBoardType.filterParameter.viewDashBoardDesignConfigList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(BubbleChart, {\n    bubbleSeries: props.dashBoardType.bubbleSeries,\n    chartData: props.dashBoardType.chartData,\n    dashBoardType: props.dashBoardType //masterData={props.dashBoardType}\n    ,\n    masterData: props.masterData,\n    userInfo: props.userInfo,\n    checkParametersAvailable: props.checkParametersAvailable,\n    dashBoardTypeNo: props.dashBoardTypeNo,\n    templateCode: props.templateCode,\n    selectedRecord: props.selectedRecord || {},\n    viewDashBoardDesignConfigList: props.dashBoardType.filterParameter.viewDashBoardDesignConfigList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }) //   </div></div>\n  );\n};\n\nexport default injectIntl(HomeDashBoardChartTemplates);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/pages/dashboardtypes/HomeDashBoardChartTemplates.jsx"],"names":["React","AreaChart","PieChart","BubbleChart","chartType","injectIntl","HomeDashBoardChartTemplates","props","dashBoardType","selectedDashBoardTypes","ncharttypecode","PIECHART","DONUT","pieChart","masterData","userInfo","dashBoardTypeNo","templateCode","checkParametersAvailable","filterParameter","viewDashBoardDesignConfigList","selectedRecord","BUBBLE","xSeries","ySeries","AREACHART","COLUMNCHART","BARCHART","bubbleSeries","chartData"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport AreaChart from '../dashboardtypes/charts/AreaChart';\r\nimport PieChart from '../dashboardtypes/charts/PieChart';\r\nimport BubbleChart from '../dashboardtypes/charts/BubbleChart';\r\nimport { chartType } from '../../components/Enumeration';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst HomeDashBoardChartTemplates = (props) => {\r\n\r\n    return (\r\n        <>\r\n            {(props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.PIECHART ||\r\n                props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.DONUT) ?\r\n                // <div className=\"k-card\">\r\n                // <div className=\"k-card-body height-1\">\r\n                <PieChart\r\n                    series={props.dashBoardType.pieChart}\r\n                    //masterData={props.dashBoardType}\r\n                    dashBoardType = {props.dashBoardType}\r\n                    masterData={props.masterData}\r\n                    userInfo={props.userInfo}\r\n                    dashBoardTypeNo={props.dashBoardTypeNo} \r\n                    templateCode={props.templateCode}\r\n                    checkParametersAvailable={props.checkParametersAvailable}\r\n                    chartTypeName={props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.PIECHART ? \"pie\" : \"donut\"}\r\n                    valueField={\"valueField\"}\r\n                    categoryField={\"categoryField\"}\r\n                    viewDashBoardDesignConfigList={props.dashBoardType.filterParameter.viewDashBoardDesignConfigList}\r\n                    selectedRecord={props.selectedRecord || {}}\r\n\r\n                />\r\n                // </div></div>\r\n                :\r\n                // <div className=\"k-card\">\r\n                // <div className=\"k-card-body height-1\">\r\n                props.dashBoardType.selectedDashBoardTypes.ncharttypecode !== chartType.BUBBLE ?\r\n                    <AreaChart\r\n                        xSeries={props.dashBoardType.xSeries}\r\n                        ySeries={props.dashBoardType.ySeries}\r\n                        //masterData={props.dashBoardType}\r\n                        dashBoardType = {props.dashBoardType}\r\n                        masterData={props.masterData}\r\n                        userInfo={props.userInfo}\r\n                        dashBoardTypeNo={props.dashBoardTypeNo} \r\n                        templateCode={props.templateCode}\r\n                        checkParametersAvailable={props.checkParametersAvailable}\r\n                        //chartTypeName={\"column\"}\r\n                        chartTypeName={props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.AREACHART ? \"area\" :\r\n                            props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.COLUMNCHART ? \"column\" :\r\n                                props.dashBoardType.selectedDashBoardTypes.ncharttypecode === chartType.BARCHART ? \"bar\" : \"area\"}\r\n                        selectedRecord={props.selectedRecord || {}}\r\n                        viewDashBoardDesignConfigList={props.dashBoardType.filterParameter.viewDashBoardDesignConfigList}\r\n                    />\r\n                    :\r\n                    <BubbleChart\r\n                        bubbleSeries={props.dashBoardType.bubbleSeries}\r\n                        chartData={props.dashBoardType.chartData}\r\n                        dashBoardType = {props.dashBoardType}\r\n                        //masterData={props.dashBoardType}\r\n                        masterData={props.masterData}\r\n                        userInfo={props.userInfo}\r\n                        checkParametersAvailable={props.checkParametersAvailable}\r\n                        dashBoardTypeNo={props.dashBoardTypeNo} templateCode={props.templateCode}\r\n                        selectedRecord={props.selectedRecord || {}}\r\n                        viewDashBoardDesignConfigList={props.dashBoardType.filterParameter.viewDashBoardDesignConfigList}\r\n                    />\r\n                //   </div></div>\r\n\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default injectIntl(HomeDashBoardChartTemplates);"]},"metadata":{},"sourceType":"module"}