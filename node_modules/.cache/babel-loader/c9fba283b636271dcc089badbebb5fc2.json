{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{constructOptionList,sortData,rearrangeDateFormat}from'../components/CommonScript';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';export function getChecklistVersion(checklist,userInfo,masterData){return function(dispatch){var inputData={\"nchecklistcode\":checklist.nchecklistcode,userinfo:userInfo};dispatch(initRequest(true));rsapi.post(\"checklist/getChecklistVersion\",inputData).then(function(response){masterData=_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{selectedchecklist:checklist});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getVersionQB(versionObject){var version=versionObject.version,masterData=versionObject.masterData,userInfo=versionObject.userInfo;return function(dispatch){if(!(masterData.selectedversion.nchecklistversioncode===version.nchecklistversioncode)){var inputData={nchecklistversioncode:version.nchecklistversioncode,userinfo:userInfo};//const url1=rsapi.post('checklist/getActiveChecklistVersionById',inputData)\nvar url2=rsapi.post('checklist/getChecklistVersionQB',inputData);dispatch(initRequest(true));Axios.all([url2]).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{checklistversionqb:response[0].data.checklistversionqb,selectedversion:version});sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}};}export function viewVersionTemplate(version,userInfo,ncontrolCode){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"checklist/viewTemplate\",{\"nchecklistversioncode\":version.nchecklistversioncode,\"flag\":1,\"ntransactionresultcode\":1,\"userinfo\":userInfo}).then(function(response){var selectedRecord={};var lsteditedQB=[];response.data.map(function(checklist){selectedRecord[checklist.nchecklistversionqbcode]={nchecklistqbcode:checklist.nchecklistqbcode,nchecklistversioncode:checklist.nchecklistversioncode,nchecklistversionqbcode:checklist.nchecklistversionqbcode,//ALPD-3850 issue : if date field is empty try to convert format.Solution: date field is empty not format.\n//Query changed by Saravanan 13-11-2024\nsdefaultvalue:checklist.nchecklistcomponentcode===7&&checklist.sdefaultvalue!==null&&checklist.sdefaultvalue.lengh>0?rearrangeDateFormat(userInfo,checklist.sdefaultvalue):checklist.sdefaultvalue==='null'?undefined:checklist.sdefaultvalue};lsteditedQB.push(checklist.nchecklistversionqbcode);return null;});response.data.map(function(checklist){selectedRecord['jsondata']=_objectSpread(_objectSpread({},selectedRecord['jsondata']),{},_defineProperty({},checklist.nchecklistversionqbcode,checklist.nchecklistcomponentcode===7&&checklist.sdefaultvalue!==null&&checklist.sdefaultvalue.lengh>0?rearrangeDateFormat(userInfo,checklist.sdefaultvalue):checklist.sdefaultvalue==='null'?undefined:checklist.sdefaultvalue));return null;});selectedRecord[\"editedQB\"]=lsteditedQB;dispatch({type:DEFAULT_RETURN,payload:{openTemplateModal:true,templateData:response.data,loading:false,ncontrolcode:ncontrolCode,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}// export function filterChecklistColumnData(filterValue, masterData, userInfo) {\n//     return function(dispatch){\n//         let checklistCode = 0;   \n//         let searchedData = undefined;\n//         if (filterValue === \"\"){\n//             checklistCode = masterData[\"checklist\"][0].nchecklistcode;\n//         } \n//         else{\n//             searchedData = searchData(filterValue, masterData[\"checklist\"]);\n//             if (searchedData.length > 0){\n//                 checklistCode = searchedData[0].nchecklistcode; \n//             }\n//         }\n//         if (checklistCode !== 0){\n//             dispatch(initRequest(true));\n//             rsapi.post(\"checklist/getChecklistVersion\", {nchecklistcode:checklistCode,userinfo:userInfo})\n//             .then(response=>{                \n//                 masterData[\"checklistversion\"] = sortData(response.data[\"checklistversion\"]);\n//                 masterData[\"selectedversion\"] = response.data[\"selectedversion\"];\n//                 masterData[\"checklistversionqb\"] =  sortData(response.data[\"checklistversionqb\"]);\n//                 masterData[\"selectedchecklist\"] =searchedData?searchedData[0]:masterData[\"checklist\"][0];\n//                 masterData[\"searchedData\"] = searchedData;\n//                 dispatch({type: DEFAULT_RETURN, payload:{masterData,   loading:false}});\n//             })\n//             .catch(error=>{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\n//                 if (error.response.status === 500){\n//                     toast.error(error.message);\n//                 } \n//                 else{               \n//                     toast.warn(error.response.data);\n//                 }  \n//             }) \n//         }else{\n//             masterData[\"checklistversion\"] = [];\n//             masterData[\"selectedversion\"] = [];\n//             masterData[\"checklistversionqb\"] = [];\n//             masterData[\"selectedchecklist\"] =[];\n//             masterData[\"searchedData\"] = [];\n//             dispatch({type: DEFAULT_RETURN, payload:{masterData,   loading:false}});\n//         }\n//     }\n// }   \nexport function onSaveTemplate(selectedRecord,userInfo){return function(dispatch){var listChecklistVersionTemplate=[];if(selectedRecord&&selectedRecord.editedQB){selectedRecord.editedQB.map(function(qbcode){return listChecklistVersionTemplate.push(selectedRecord[qbcode]&&selectedRecord[qbcode].sdefaultvalue!=null?selectedRecord[qbcode]:selectedRecord[qbcode]={\"nchecklistqbcode\":selectedRecord[qbcode].nchecklistqbcode,\"nchecklistversioncode\":selectedRecord[qbcode].nchecklistversioncode,\"nchecklistversionqbcode\":selectedRecord[qbcode].nchecklistversionqbcode,\"sdefaultvalue\":\"\"});});//  listChecklistVersionTemplate.push(selectedRecord[qbcode]))\ndispatch(initRequest(true));rsapi.post(\"checklist/createUpdateChecklistVersionTemplate\",{checklistversiontemplate:listChecklistVersionTemplate,\"userinfo\":userInfo}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:{},templateData:undefined,openTemplateModal:false,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{openTemplateModal:false,selectedRecord:{},templateData:undefined,loading:false}});}};}export function showChecklistAddScreen(nchecklistversioncode,id,ncontrolcode,userInfo){return function(dispatch){var modalName=id==='checklist'?'openModal':'openChildModal';if(id===\"checklistversionqb\"){dispatch(initRequest(true));rsapi.post(\"checklist/getVersionQBAddEditData\",{\"nchecklistversioncode\":nchecklistversioncode,\"userinfo\":userInfo}).then(function(response){var _payload;var optionsQBCategoryMap=constructOptionList(response.data.qbcategory||[],\"nchecklistqbcategorycode\",\"schecklistqbcategoryname\",undefined,undefined,true);var availableQBCategory=optionsQBCategoryMap.get(\"OptionList\");var listQbObj={listQb:{}};var optionsChecklistComponentMap;availableQBCategory.map(function(cat){optionsChecklistComponentMap=constructOptionList(response.data.checklistqb[cat.label]||[],\"nchecklistqbcode\",\"squestion\",undefined,undefined,true);listQbObj={listQb:_objectSpread(_objectSpread({},listQbObj.listQb),{},_defineProperty({},cat.label,optionsChecklistComponentMap.get(\"OptionList\")))};return null;});dispatch({type:DEFAULT_RETURN,payload:(_payload={},_defineProperty(_payload,modalName,true),_defineProperty(_payload,\"selectedRecord\",{}),_defineProperty(_payload,\"operation\",\"create\"),_defineProperty(_payload,\"id\",id),_defineProperty(_payload,\"QBCategory\",undefined),_defineProperty(_payload,\"QB\",undefined),_defineProperty(_payload,\"availableQBCategory\",availableQBCategory),_defineProperty(_payload,\"listQb\",listQbObj.listQb),_defineProperty(_payload,\"availableQB\",[]),_defineProperty(_payload,\"ncontrolcode\",ncontrolcode),_defineProperty(_payload,\"loading\",false),_payload)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var _payload2;dispatch({type:DEFAULT_RETURN,payload:(_payload2={},_defineProperty(_payload2,modalName,true),_defineProperty(_payload2,\"selectedRecord\",{}),_defineProperty(_payload2,\"operation\",\"create\"),_defineProperty(_payload2,\"id\",id),_defineProperty(_payload2,\"ncontrolcode\",ncontrolcode),_defineProperty(_payload2,\"loading\",false),_payload2)});}};}export function fetchChecklistRecordByID(editParam){return function(dispatch){if(editParam.screenName.toLowerCase()===\"checklist\"||editParam.screenName.toLowerCase()===\"checklistversion\"){var _rsapi$post;var modalName=editParam.screenName.toLowerCase()===\"checklist\"?'openModal':'openChildModal';dispatch(initRequest(true));rsapi.post(\"checklist/getActive\"+editParam.screenName+\"ById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post)).then(function(response){var _payload3;dispatch({type:DEFAULT_RETURN,payload:(_payload3={},_defineProperty(_payload3,modalName,true),_defineProperty(_payload3,\"selectedRecord\",response.data),_defineProperty(_payload3,\"operation\",editParam.operation),_defineProperty(_payload3,\"id\",editParam.screenName.toLowerCase()),_defineProperty(_payload3,\"ncontrolcode\",editParam.ncontrolCode),_defineProperty(_payload3,\"masterData\",editParam.masterData),_defineProperty(_payload3,\"loading\",false),_payload3)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var _rsapi$post2;var url1=rsapi.post(\"checklist/getVersionQBAddEditData\",{\"nchecklistversioncode\":editParam.masterData.selectedversion.nchecklistversioncode,\"userinfo\":editParam.userInfo});var url2=rsapi.post(\"checklist/getActive\"+editParam.screenName+\"ById\",(_rsapi$post2={},_defineProperty(_rsapi$post2,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post2,\"userinfo\",editParam.userInfo),_rsapi$post2));dispatch(initRequest(true));Axios.all([url1,url2]).then(function(response){var selectedId=editParam.primaryKeyValue;// const optionsQBCategoryMap = constructOptionList(response[0].data.qbcategory || [], \"nchecklistqbcategorycode\", \"schecklistqbcategoryname\", undefined, undefined, true);\n// const optionsChecklistComponentMap = constructOptionList(response[0].data.checklistqb || [], \"nchecklistqbcode\", \"squestion\", undefined, undefined, true);\n// const availableQBCategory = optionsQBCategoryMap.get(\"OptionList\");\n// const availableQB = optionsChecklistComponentMap.get(\"OptionList\");\ndispatch({type:DEFAULT_RETURN,payload:{masterData:editParam.masterData,openChildModal:true,selectedRecord:response[1].data,operation:\"update\",id:editParam.screenName.toLowerCase(),// availableQBCategory ,\n// availableQB ,\nQBCategory:{\"value\":response[1].data[\"nchecklistqbcategorycode\"],\"label\":response[1].data[\"schecklistqbcategoryname\"]},QB:{\"value\":response[1].data[\"nchecklistqbcode\"],\"label\":response[1].data[\"squestion\"]},ncontrolcode:editParam.ncontrolCode,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/actions/ChecklistAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","sortData","rearrangeDateFormat","toast","Axios","initRequest","getChecklistVersion","checklist","userInfo","masterData","dispatch","inputData","nchecklistcode","userinfo","post","then","response","data","selectedchecklist","type","payload","loading","catch","error","status","message","warn","getVersionQB","versionObject","version","selectedversion","nchecklistversioncode","url2","all","checklistversionqb","viewVersionTemplate","ncontrolCode","selectedRecord","lsteditedQB","map","nchecklistversionqbcode","nchecklistqbcode","sdefaultvalue","nchecklistcomponentcode","lengh","undefined","push","openTemplateModal","templateData","ncontrolcode","onSaveTemplate","listChecklistVersionTemplate","editedQB","qbcode","checklistversiontemplate","showChecklistAddScreen","id","modalName","optionsQBCategoryMap","qbcategory","availableQBCategory","get","listQbObj","listQb","optionsChecklistComponentMap","cat","checklistqb","label","fetchChecklistRecordByID","editParam","screenName","toLowerCase","primaryKeyField","primaryKeyValue","operation","url1","selectedId","openChildModal","QBCategory","QB"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { constructOptionList, sortData,rearrangeDateFormat } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\n\r\n\r\nexport function getChecklistVersion(checklist, userInfo, masterData) {\r\n\r\n    return function (dispatch) {\r\n        const inputData = { \"nchecklistcode\": checklist.nchecklistcode, userinfo: userInfo }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"checklist/getChecklistVersion\", inputData)\r\n            .then(response => {\r\n\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n                    selectedchecklist: checklist,\r\n                }\r\n                sortData(masterData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: { masterData, loading: false }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getVersionQB(versionObject) {\r\n    let { version, masterData, userInfo } = versionObject\r\n    return function (dispatch) {\r\n        if (!(masterData.selectedversion.nchecklistversioncode === version.nchecklistversioncode)) {\r\n            const inputData = { nchecklistversioncode: version.nchecklistversioncode, userinfo: userInfo }\r\n            //const url1=rsapi.post('checklist/getActiveChecklistVersionById',inputData)\r\n            const url2 = rsapi.post('checklist/getChecklistVersionQB', inputData)\r\n            dispatch(initRequest(true));\r\n            Axios.all([url2])\r\n                .then(response => {\r\n                    masterData = {\r\n                        ...masterData,\r\n                        checklistversionqb: response[0].data.checklistversionqb,\r\n                        selectedversion: version\r\n                    }\r\n                    sortData(masterData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: { masterData, loading: false }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function viewVersionTemplate(version, userInfo, ncontrolCode) {\r\n\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"checklist/viewTemplate\", {\r\n            \"nchecklistversioncode\": version.nchecklistversioncode, \"flag\": 1, \"ntransactionresultcode\": 1\r\n            , \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                let selectedRecord = {};\r\n                let lsteditedQB = [];\r\n\r\n                response.data.map(checklist => {\r\n                    selectedRecord[checklist.nchecklistversionqbcode] = {\r\n                        nchecklistqbcode: checklist.nchecklistqbcode,\r\n                        nchecklistversioncode: checklist.nchecklistversioncode,\r\n                        nchecklistversionqbcode: checklist.nchecklistversionqbcode,\r\n                        //ALPD-3850 issue : if date field is empty try to convert format.Solution: date field is empty not format.\r\n\t\t                //Query changed by Saravanan 13-11-2024\r\n                        sdefaultvalue: checklist.nchecklistcomponentcode === 7 && (checklist.sdefaultvalue!==null && checklist.sdefaultvalue.lengh>0)  ? rearrangeDateFormat(userInfo,checklist.sdefaultvalue) :checklist.sdefaultvalue === 'null' ? undefined : checklist.sdefaultvalue ,\r\n                     \r\n                    }\r\n                    lsteditedQB.push(checklist.nchecklistversionqbcode);\r\n                    return null;\r\n                });\r\n                response.data.map(checklist => {\r\n                    selectedRecord['jsondata'] = {\r\n                        ...selectedRecord['jsondata'],\r\n                        [checklist.nchecklistversionqbcode]:checklist.nchecklistcomponentcode ===7 && (checklist.sdefaultvalue!==null && checklist.sdefaultvalue.lengh>0) ? rearrangeDateFormat(userInfo,checklist.sdefaultvalue) :checklist.sdefaultvalue === 'null' ? undefined : checklist.sdefaultvalue \r\n                    }\r\n                    return null;\r\n                });\r\n                selectedRecord[\"editedQB\"] = lsteditedQB;\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        openTemplateModal: true,\r\n                        templateData: response.data,\r\n                        loading: false,\r\n                        ncontrolcode:ncontrolCode,\r\n                        selectedRecord: selectedRecord\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n// export function filterChecklistColumnData(filterValue, masterData, userInfo) {\r\n//     return function(dispatch){\r\n//         let checklistCode = 0;   \r\n//         let searchedData = undefined;\r\n//         if (filterValue === \"\"){\r\n//             checklistCode = masterData[\"checklist\"][0].nchecklistcode;\r\n//         } \r\n//         else{\r\n\r\n//             searchedData = searchData(filterValue, masterData[\"checklist\"]);\r\n\r\n//             if (searchedData.length > 0){\r\n//                 checklistCode = searchedData[0].nchecklistcode; \r\n//             }\r\n\r\n//         }\r\n//         if (checklistCode !== 0){\r\n\r\n//             dispatch(initRequest(true));\r\n//             rsapi.post(\"checklist/getChecklistVersion\", {nchecklistcode:checklistCode,userinfo:userInfo})\r\n//             .then(response=>{                \r\n//                 masterData[\"checklistversion\"] = sortData(response.data[\"checklistversion\"]);\r\n//                 masterData[\"selectedversion\"] = response.data[\"selectedversion\"];\r\n//                 masterData[\"checklistversionqb\"] =  sortData(response.data[\"checklistversionqb\"]);\r\n//                 masterData[\"selectedchecklist\"] =searchedData?searchedData[0]:masterData[\"checklist\"][0];\r\n//                 masterData[\"searchedData\"] = searchedData;\r\n//                 dispatch({type: DEFAULT_RETURN, payload:{masterData,   loading:false}});\r\n//             })\r\n//             .catch(error=>{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n//                 if (error.response.status === 500){\r\n//                     toast.error(error.message);\r\n//                 } \r\n//                 else{               \r\n//                     toast.warn(error.response.data);\r\n//                 }  \r\n//             }) \r\n\r\n//         }else{\r\n//             masterData[\"checklistversion\"] = [];\r\n//             masterData[\"selectedversion\"] = [];\r\n//             masterData[\"checklistversionqb\"] = [];\r\n//             masterData[\"selectedchecklist\"] =[];\r\n//             masterData[\"searchedData\"] = [];\r\n//             dispatch({type: DEFAULT_RETURN, payload:{masterData,   loading:false}});\r\n\r\n//         }\r\n//     }\r\n// }   \r\n\r\nexport function onSaveTemplate(selectedRecord, userInfo) {\r\n\r\n    return function (dispatch) {\r\n\r\n        \r\n        let listChecklistVersionTemplate = [];\r\n        if (selectedRecord && selectedRecord.editedQB) {\r\n            selectedRecord.editedQB.map(qbcode =>\r\n                listChecklistVersionTemplate.push(selectedRecord[qbcode] && selectedRecord[qbcode].sdefaultvalue !=null ? selectedRecord[qbcode]:\r\n                     selectedRecord[qbcode]={\r\n                        \"nchecklistqbcode\":selectedRecord[qbcode].nchecklistqbcode,\r\n                        \"nchecklistversioncode\":selectedRecord[qbcode].nchecklistversioncode,\r\n                        \"nchecklistversionqbcode\":selectedRecord[qbcode].nchecklistversionqbcode,\r\n                        \"sdefaultvalue\":\"\"\r\n\r\n                     }  ))\r\n\r\n              //  listChecklistVersionTemplate.push(selectedRecord[qbcode]))\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"checklist/createUpdateChecklistVersionTemplate\",\r\n                { checklistversiontemplate: listChecklistVersionTemplate, \"userinfo\": userInfo })\r\n\r\n                .then(response => {\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            selectedRecord: {},\r\n                            templateData: undefined,\r\n                            openTemplateModal: false,\r\n                            loading: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    openTemplateModal: false, selectedRecord: {},templateData: undefined, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function showChecklistAddScreen(nchecklistversioncode, id, ncontrolcode, userInfo) {\r\n    return function (dispatch) {\r\n        let modalName = (id === 'checklist') ? 'openModal' : 'openChildModal'\r\n        if (id === \"checklistversionqb\") {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"checklist/getVersionQBAddEditData\",\r\n                { \"nchecklistversioncode\": nchecklistversioncode, \"userinfo\": userInfo })\r\n                .then(response => {\r\n                    const optionsQBCategoryMap = constructOptionList(response.data.qbcategory || [], \"nchecklistqbcategorycode\", \"schecklistqbcategoryname\", undefined, undefined, true);\r\n                    const availableQBCategory = optionsQBCategoryMap.get(\"OptionList\");\r\n                    let listQbObj={listQb:{}};\r\n                    let optionsChecklistComponentMap;\r\n                    availableQBCategory.map(cat=>\r\n                        {\r\n                        optionsChecklistComponentMap = constructOptionList(response.data.checklistqb[cat.label] || [], \"nchecklistqbcode\", \"squestion\", undefined, undefined, true);\r\n                        listQbObj={listQb:{...listQbObj.listQb,[cat.label]: optionsChecklistComponentMap.get(\"OptionList\")}};\r\n                        return null;\r\n                        }\r\n                    )\r\n                    \r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            [modalName]: true,\r\n                            selectedRecord: {},\r\n                            operation: \"create\",\r\n                            id, \r\n                            QBCategory: undefined, \r\n                            QB: undefined,\r\n                            availableQBCategory,\r\n                            listQb:listQbObj.listQb,\r\n                            availableQB: [],\r\n                            ncontrolcode, loading: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    [modalName]: true,\r\n                    selectedRecord: {},\r\n                    operation: \"create\",\r\n                    id,\r\n                    ncontrolcode,\r\n                    loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchChecklistRecordByID(editParam) {\r\n    return function (dispatch) {\r\n\r\n        if (editParam.screenName.toLowerCase() === \"checklist\" || editParam.screenName.toLowerCase() === \"checklistversion\") {\r\n            let modalName = editParam.screenName.toLowerCase() === \"checklist\" ? 'openModal' : 'openChildModal'\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"checklist/getActive\" + editParam.screenName + \"ById\",\r\n                { [editParam.primaryKeyField]: editParam.primaryKeyValue, \"userinfo\": editParam.userInfo })\r\n\r\n                .then(response => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            [modalName]: true,\r\n                            selectedRecord: response.data,\r\n                            operation: editParam.operation,\r\n                            id: editParam.screenName.toLowerCase(),\r\n                            ncontrolcode: editParam.ncontrolCode,\r\n                            masterData: editParam.masterData,\r\n                            loading: false\r\n\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            const url1 = rsapi.post(\"checklist/getVersionQBAddEditData\",\r\n                { \"nchecklistversioncode\": editParam.masterData.selectedversion.nchecklistversioncode, \"userinfo\": editParam.userInfo })\r\n            const url2 = rsapi.post(\"checklist/getActive\" + editParam.screenName + \"ById\",\r\n                { [editParam.primaryKeyField]: editParam.primaryKeyValue, \"userinfo\": editParam.userInfo })\r\n            dispatch(initRequest(true));\r\n            Axios.all([url1, url2])\r\n                .then(response => {\r\n                    let selectedId = editParam.primaryKeyValue\r\n                    // const optionsQBCategoryMap = constructOptionList(response[0].data.qbcategory || [], \"nchecklistqbcategorycode\", \"schecklistqbcategoryname\", undefined, undefined, true);\r\n                    // const optionsChecklistComponentMap = constructOptionList(response[0].data.checklistqb || [], \"nchecklistqbcode\", \"squestion\", undefined, undefined, true);\r\n                    // const availableQBCategory = optionsQBCategoryMap.get(\"OptionList\");\r\n                    // const availableQB = optionsChecklistComponentMap.get(\"OptionList\");\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: editParam.masterData,\r\n                            openChildModal: true,\r\n                            selectedRecord: response[1].data,\r\n                            operation: \"update\",\r\n                            id: editParam.screenName.toLowerCase(),\r\n                            // availableQBCategory ,\r\n                            // availableQB ,\r\n                            QBCategory: { \"value\": response[1].data[\"nchecklistqbcategorycode\"], \"label\": response[1].data[\"schecklistqbcategoryname\"] },\r\n                            QB: { \"value\": response[1].data[\"nchecklistqbcode\"], \"label\": response[1].data[\"squestion\"] },\r\n                            ncontrolcode: editParam.ncontrolCode, loading: false, selectedId\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}