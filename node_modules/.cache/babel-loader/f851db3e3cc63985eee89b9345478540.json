{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from\"react-toastify\";import rsapi from\"../rsapi\";import{DEFAULT_RETURN}from\"./LoginTypes\";import{attachmentType,parameterType,SampleType,transactionStatus}from\"../components/Enumeration\";import{constructjsonOptionList,constructOptionList,rearrangeDateFormat,//formatInputDate,\nsortData}from\"../components/CommonScript\";import Axios from\"axios\";import{intl}from\"../components/App\";import{initRequest}from\"./LoginAction\";export var sampleTypeOnChange=function sampleTypeOnChange(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testgroup\"+inputParam.methodUrl,inputParam.inputData).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{tempFilterData:inputParam.inputData.tempFilterData,masterData:_objectSpread(_objectSpread({},masterData),response.data),loading:false}});}).catch(function(error){if(error.response.status===409||error.response.status===417){masterData[\"ExistingLinkTable\"]=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});toast.warn(error.response.data);}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);}});};};export var filterTestGroup=function filterTestGroup(inputParam,masterData,searchRef){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/testgroup/filterTestGroup\",inputParam.inputData).then(function(response){sortData(response.data);if(searchRef.current){searchRef.current.value=\"\";}dispatch({type:DEFAULT_RETURN,payload:{filterData:inputParam.inputData.filterData,masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),loading:false,testskip:0,historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var createTree=function createTree(selectedRecord,userInfo,selectedNode,ncontrolCode){return function(dispatch){if(selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES||selectedRecord.nproductcode){var inputParam={sampletype:selectedRecord.nsampletypecode.item,ncategorycode:selectedRecord.nproductcatcode.value,ntreeversiontempcode:selectedRecord.ntreeversiontempcode.value,userinfo:userInfo,treetemplatemanipulation:selectedNode};dispatch(initRequest(true));rsapi.post(\"/testgroup/getTemplateMasterDetails\",_objectSpread({},inputParam)).then(function(response){var treetempTranstestGroup=response.data[\"TreetempTranstestGroup\"]||[];// const treeMandatoryFields = treetempTranstestGroup.map((item, index) => {\n//         return {\n//             \"idsName\": item.slabelname,\n//             \"dataField\": \"sleveldescription_\" + index,\n//             \"mandatory\": true\n//         }\n// });\n//  const selectedNodeLevel = selectedNode ? selectedNode.slevelcode.split(\"/1\").length-2 : -1;\nvar mandatoryFields=[];treetempTranstestGroup.forEach(function(item,index){if(item.sleveldescription===null){mandatoryFields.push({\"idsName\":item.slabelname,\"dataField\":\"sleveldescription_\"+index,\"mandatory\":true});}});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_PROFILETREE\",TreetempTranstestGroup:treetempTranstestGroup,treeMandatoryFields:mandatoryFields,//selectedRecord,\nncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_PRODUCTNOTAVAILABLE\"}));}};};export var editTree=function editTree(operation,selectedNode,userinfo,ncontrolCode,filterData,masterData){return function(dispatch){//console.log(\"edit Tree:\", selectedNode, masterData);\nvar treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===selectedNode[\"ntreeversiontempcode\"];});// if (treeVersionTemplateIndex !== -1){\nvar templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;//}\nif(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedNode){dispatch(initRequest(true));rsapi.post(\"/testgroup/getTreeById\",{userinfo:userinfo,treetemplatemanipulation:selectedNode,ntreeversiontempcode:filterData.ntreeversiontempcode.value}).then(function(response){var treetempTranstestGroup=response.data;var treeMandatoryFields=treetempTranstestGroup&&[{\"idsName\":treetempTranstestGroup.slabelname,\"dataField\":\"sleveldescription\",\"mandatory\":true}];dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_EDITTREE\",selectedRecord:_objectSpread({},treetempTranstestGroup),treeMandatoryFields:treeMandatoryFields,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTPROFILENODETOEDIT\"}));}}};};export var addSpecification=function addSpecification(operation,inputParam,ncontrolCode,masterDatas){return function(dispatch){//if (inputParam.selectedNode != null && inputParam.selectedNode.schildnode === \"\") {\nif(inputParam.selectedRecord.ntreeversiontempcode.item.ntransactionstatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(inputParam.selectedNode!=null&&inputParam.selectedNode.nnextchildcode===-1){if(masterDatas&&masterDatas.SelectedSpecification===null&&operation===\"copy\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}else{var urlArray=[];if(operation===\"update\"){var testgroupspecification=inputParam.testgroupspecification[0];if(testgroupspecification.napprovalstatus===transactionStatus.CORRECTION||testgroupspecification.napprovalstatus===transactionStatus.DRAFT){urlArray=[rsapi.post(\"timezone/getTimeZone\")];urlArray.push(rsapi.post(\"/testgroup/getActiveSpecificationById\",{testgroupspecification:testgroupspecification,userinfo:inputParam.userinfo,ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value}));}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));return;}}else{urlArray=[rsapi.post(\"timezone/getTimeZone\")];urlArray.push(rsapi.post(\"/testgroup/getAddSpecification\",{userinfo:inputParam.userInfo,ntreeversiontempcode:inputParam.selectedRecord.ntreeversiontempcode.value//currentdate: formatInputDate(new Date(), true)\n}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var masterData=inputParam.masterData!==undefined?inputParam.masterData:masterDatas;if(operation===\"update\"){masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response[1].data),{},{testgroupspecification:inputParam.testgroupspecification});selectedRecord=_objectSpread(_objectSpread({sproductname:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?\"\":inputParam.selectedRecord.nproductcode.label,sproductcatname:inputParam.selectedRecord.nproductcatcode.label,ncategorybasedflow:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow},response[1].data.SelectedSpecification),{},{//dexpirydate: new Date(response[1].data[\"sexpirydate\"]),\ndexpirydate:rearrangeDateFormat(inputParam.userinfo,response[1].data.SelectedSpecification[\"sexpirydate\"]),ntzexpirydate:{\"label\":response[1].data.SelectedSpecification.stimezoneid,\"value\":response[1].data.SelectedSpecification.ntzexpirydate}});}else{selectedRecord={sproductname:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow===transactionStatus.YES?\"\":inputParam.selectedRecord.nproductcode.label,sproductcatname:inputParam.selectedRecord.nproductcatcode.label,sspecname:inputParam.selectedNode.sleveldescription,ncategorybasedflow:inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,dexpirydate:rearrangeDateFormat(inputParam.userInfo,response[1].data.ExpiryDate),ncomponentrequired:inputParam.selectedNode.nsampletypecode===SampleType.CLINICALTYPE?transactionStatus.YES:transactionStatus.NO,nclinicalspec:inputParam.selectedNode.nsampletypecode===SampleType.CLINICALTYPE?transactionStatus.YES:transactionStatus.NO,ntransactionstatus:transactionStatus.ACTIVE,ntzexpirydate:{\"label\":inputParam.userInfo.stimezoneid,\"value\":inputParam.userInfo.ntimezonecode}};}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:operation,screenName:\"IDS_SPECIFICATION\",masterData:masterData,selectedRecord:selectedRecord,timeZoneList:constructOptionList(response[0].data||[],\"ntimezonecode\",\"stimezoneid\",false,false,true).get(\"OptionList\"),ncontrolCode:ncontrolCode}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}}else{if(operation===\"copy\"){toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTLASTLEVELNODETOADDSPEC\"}));}}}};};export var addComponent=function addComponent(SelectedSpecification,userInfo,ncontrolCode,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{rsapi.post(\"/testgroup/getAvailableComponent\",{userinfo:userInfo,testgroupspecification:SelectedSpecification}).then(function(response){var testGroupSpecSampleType=response.data[\"TestGroupSpecSampleType\"]||[];if(testGroupSpecSampleType.length>0){var testCategory=constructOptionList(response.data[\"TestCategory\"]||[],\"ntestcategorycode\",\"stestcategoryname\",'ntestcategorycode','ascending',false);var sampleTypeMap=constructOptionList(testGroupSpecSampleType,\"ncomponentcode\",\"scomponentname\",false,false,true);// const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\ndispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_COMPONENT\",testGroupInputData:{TestCategory:testCategory.get(\"OptionList\"),TestGroupSpecSampleType:sampleTypeMap.get(\"OptionList\"),TestGroupTest:response.data[\"TestGroupTest\"]||[]//TestGroupTestMap.get(\"OptionList\"),\n},selectedRecord:{ncomponentcode:sampleTypeMap.get(\"DefaultValue\"),ntestcategorycode:testCategory.get(\"DefaultValue\")?testCategory.get(\"DefaultValue\"):testCategory.get(\"OptionList\")[0]},ncontrolCode:ncontrolCode}});}else{toast.warn(intl.formatMessage({id:\"IDS_COMPONENTNOTAVAILABLE\"}));}}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}};};export var addTestGroupTest=function addTestGroupTest(selectedComponent,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification){if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){if(selectedComponent){rsapi.post(\"/testgroup/getAvailableTest\",{userinfo:userInfo,testgroupspecsampletype:selectedComponent,ntreeversiontempcode:filterData.ntreeversiontempcode.value}).then(function(response){var testCategory;// = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\n// const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\nif(response.data[\"TestCategory\"].length>0){testCategory=constructOptionList(response.data[\"TestCategory\"],\"ntestcategorycode\",\"stestcategoryname\",\"ntestcategorycode\",\"ascending\",false);dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",screenName:\"IDS_TEST\",testGroupInputData:{TestCategory:testCategory.get(\"OptionList\"),TestGroupTest:response.data[\"TestGroupTest\"]||[]//TestGroupTestMap.get(\"OptionList\"),\n},selectedRecord:{ntestcategorycode:{label:response.data[\"SelectedTestCategory\"].stestcategoryname,value:response.data[\"SelectedTestCategory\"].stestcategorycode,item:response.data[\"SelectedTestCategory\"]}//ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\n},ncontrolCode:ncontrolCode}});}else{toast.warn(intl.formatMessage({id:\"IDS_TESTCATEGORYNOTAVAILABLE\"}));}}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_NEEDCOMPONENTTOADDTEST\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));}}};};export var editTestGroupTest=function editTestGroupTest(operation,selectedTest,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){var ntestcode=selectedTest.ntestcode;var urlArray=[rsapi.post(\"/testgroup/getActiveTestById\",{userinfo:userInfo,testgrouptest:selectedTest,ntreeversiontempcode:filterData.ntreeversiontempcode.value}),rsapi.post(\"/source/getSource\",{userinfo:userInfo}),rsapi.post(\"/testmaster/getSection\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getMethod\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getInstrumentCategory\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getTestAttachment\",{ntestcode:ntestcode,userinfo:userInfo}),rsapi.post(\"/testmaster/getContainerType\",{ntestcode:ntestcode,userinfo:userInfo})];Axios.all(urlArray).then(function(response){// const editObject = response[0].data.TestGroupTest;\n// const testFileItem = response[0].data.TestGroupTestFile;\n// const SelectedTest = response[0].data.TestGroupTest;\nvar editObject=response[0].data.SelectedTestGroupTest;var testFileItem=response[0].data.TestGroupTestFile;var SelectedTest=response[0].data.SelectedTest;//const TestGroupTest = response[0].data.TestGroupTest;\nvar selectedRecord=_objectSpread(_objectSpread({},editObject),{},{// nsourcecode: {\n//     \"label\": editObject.ssourcename,\n//     \"value\": editObject.nsourcecode\n// },\nnsectioncode:{\"label\":editObject.ssectionname,\"value\":editObject.nsectioncode},nmethodcode:{\"label\":editObject.smethodname,\"value\":editObject.nmethodcode},ninstrumentcatcode:{\"label\":editObject.sinstrumentcatname,\"value\":editObject.ninstrumentcatcode},ncontainertypecode:{\"label\":editObject.scontainertype,\"value\":editObject.ncontainertypecode}});if(testFileItem){selectedRecord[\"ntestfilecode\"]={\"label\":testFileItem.sfilename,\"value\":testFileItem.ntestgroupfilecode,item:testFileItem};selectedRecord[\"ntestgroupfilecode\"]=testFileItem.ntestgroupfilecode;}if(editObject.nmethodcode!==-1){selectedRecord[\"nmethodcode\"]={\"label\":editObject.smethodname,\"value\":editObject.nmethodcode};}else{selectedRecord[\"nmethodcode\"]=undefined;}if(editObject.ninstrumentcatcode!==-1){selectedRecord[\"ninstrumentcatcode\"]={\"label\":editObject.sinstrumentcatname,\"value\":editObject.ninstrumentcatcode};}else{selectedRecord[\"ninstrumentcatcode\"]=undefined;}if(editObject.ncontainertypecode!==-1){selectedRecord[\"ncontainertypecode\"]={\"label\":editObject.scontainertype,\"value\":editObject.ncontainertypecode};}else{selectedRecord[\"ncontainertypecode\"]=undefined;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response[0].data),{},{SelectedTest:SelectedTest//TestGroupTest : [TestGroupTest]\n}),openModal:true,operation:operation,screenName:\"IDS_EDITTESTGROUPTEST\",testGroupInputData:{// source: constructOptionList(response[1].data || [], \"nsourcecode\", \"ssourcename\", false, false, true).get(\"OptionList\"),\nsection:constructOptionList(response[2].data||[],\"nsectioncode\",\"ssectionname\",false,false,true).get(\"OptionList\"),method:constructOptionList(response[3].data||[],\"nmethodcode\",\"smethodname\",false,false,true).get(\"OptionList\"),instrumentCategory:constructOptionList(response[4].data||[],\"ninstrumentcatcode\",\"sinstrumentcatname\",false,false,true).get(\"OptionList\"),containerType:constructOptionList(response[6].data||[],\"ncontainertypecode\",\"scontainertype\",false,false,true).get(\"OptionList\"),testFile:constructOptionList(response[5].data||[],\"ntestfilecode\",\"sfilename\",false,false,true).get(\"OptionList\")},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode}});}).catch(function(error){console.log(\"errror:\",error);if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var editTestGroupParameter=function editTestGroupParameter(operation,selectedParameter,userInfo,ncontrolCode,selectedSpecification,filterData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(selectedSpecification.napprovalstatus===transactionStatus.DRAFT||selectedSpecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"/testgroup/getActiveParameterById\",{userinfo:userInfo,testgrouptestparameter:selectedParameter,ntreeversiontempcode:filterData.ntreeversiontempcode.value}),rsapi.post(\"/parametertype/getParameterType\",{userinfo:userInfo}),rsapi.post(\"unit/getUnit\",{userinfo:userInfo}),rsapi.post(\"grade/getGrade\",{userinfo:userInfo}),rsapi.post(\"checklist/getApprovedChecklist\",{\"userinfo\":userInfo})];Axios.all(urlArray).then(function(response){var parameterObject=response[0].data.TestGroupTestParameter[0];var predefinedObject=response[0].data.TestGroupTestPredefinedParameter;var characterObject=response[0].data.TestGroupTestCharParameter;var numericObject=response[0].data.TestGroupTestNumericParameter&&response[0].data.TestGroupTestNumericParameter.length>0?response[0].data.TestGroupTestNumericParameter[0]:{};var selectedRecord=_objectSpread(_objectSpread({},parameterObject),{},{nunitcode:{\"label\":parameterObject.sunitname,\"value\":parameterObject.nunitcode},nparametertypecode:{\"label\":parameterObject.sdisplaystatus,\"value\":parameterObject.nparametertypecode},parameterTypeCode:parameterObject.nparametertypecode,nchecklistversioncode:{\"label\":parameterObject.schecklistname,\"value\":parameterObject.nchecklistversioncode},schecklistversionname:parameterObject.schecklistversionname,ntestformulacode:parameterObject.ntestformulacode>0?{\"label\":parameterObject.sformulacalculationdetail,\"value\":parameterObject.ntestformulacode,item:{sformulacalculationdetail:parameterObject.sformulacalculationdetail,ntestformulacode:parameterObject.ntestformulacode,sformulacalculationcode:parameterObject.sformulacalculationcode}}:\"\"});if(selectedRecord[\"schecklistname\"]===\"NA\"){delete selectedRecord[\"nchecklistversioncode\"];}if(selectedRecord[\"schecklistversionname\"]===\"NA\"){delete selectedRecord[\"schecklistversionname\"];}if(selectedRecord[\"sunitname\"]===\"NA\"){delete selectedRecord[\"nunitcode\"];}if(characterObject){selectedRecord[\"scharname\"]=characterObject.scharname;selectedRecord[\"ntestgrouptestcharcode\"]=characterObject.ntestgrouptestcharcode;}if(predefinedObject){selectedRecord[\"ntestgrouptestpredefcode\"]=predefinedObject.ntestgrouptestpredefcode;selectedRecord[\"spredefinedname\"]=predefinedObject.spredefinedname;selectedRecord[\"ndefaultstatus\"]=predefinedObject.ndefaultstatus;selectedRecord[\"ngradecode\"]={\"label\":predefinedObject.sdisplaystatus,\"value\":predefinedObject.ngradecode};}if(numericObject){selectedRecord[\"ntestgrouptestnumericcode\"]=numericObject.ntestgrouptestnumericcode;selectedRecord[\"sminlod\"]=numericObject.sminlod;selectedRecord[\"smaxlod\"]=numericObject.smaxlod;selectedRecord[\"sminb\"]=numericObject.sminb;selectedRecord[\"smina\"]=numericObject.smina;selectedRecord[\"smaxa\"]=numericObject.smaxa;selectedRecord[\"smaxb\"]=numericObject.smaxb;selectedRecord[\"sminloq\"]=numericObject.sminloq;selectedRecord[\"smaxloq\"]=numericObject.smaxloq;selectedRecord[\"sdisregard\"]=numericObject.sdisregard;selectedRecord[\"sresultvalue\"]=numericObject.sresultvalue;}var gradeMap=constructOptionList(response[3].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var unitMap=constructOptionList(response[2].data||[],\"nunitcode\",\"sunitname\",false,false,true);var grade=gradeMap.get(\"OptionList\");var unit=unitMap.get(\"OptionList\");var disabled=parameterObject.nparametertypecode===parameterType.NUMERIC?false:true;dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,operation:operation,screenName:\"IDS_PARAMETER\",testGroupInputData:{unit:unit,grade:grade,testFormula:constructOptionList(response[0].data.TestFormula||[],\"ntestformulacode\",\"sformulacalculationdetail\",false,false,true).get(\"OptionList\"),parameterType:constructOptionList(response[1].data||[],\"nparametertypecode\",\"sdisplaystatus\",false,false,true).get(\"OptionList\"),checkListVersion:constructOptionList(response[4].data||[],\"nchecklistversioncode\",\"schecklistname\",false,false,true).get(\"OptionList\"),needRoundingDigit:disabled,needUnit:disabled},parameterData:{grade:grade},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};// export const addTestGroupFormula = (selectedParameter, userInfo, ncontrolCode, optionalData) => {\n//     return dispatch => {\n//         const testgroupspecification = optionalData.testgroupspecification;\n//         if(testgroupspecification.napprovalstatus === transactionStatus.DRAFT || \n//             testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\n//             dispatch(initRequest(true));\n//             rsapi.post(\"/testgroup/getTestGroupFormula\", {userinfo: userInfo, testgrouptestparameter: selectedParameter, testgroupspecification})\n//             .then(response=>{\n//                 dispatch({\n//                     type: DEFAULT_RETURN, \n//                     payload:{\n//                         openChildModal: true,\n//                         operation: \"create\",\n//                         screenName: \"IDS_FORMULA\",\n//                         testGroupInputData: {testFormula: response.data},\n//                         selectedRecord: {},\n//                         ncontrolCode\n//                 }});\n//             })\n//             .catch(error=>{\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}});\n//                 if(error.response.status === 409 || error.response.status === 417) {\n//                     toast.warn(error.response.data);\n//                 } else {\n//                     toast.error(error.message)\n//                 }\n//             });\n//         } else {\n//             toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\n//         }\n//     }\n// }\nexport var getTestGroupParameter=function getTestGroupParameter(inputParam){return function(dispatch){rsapi.post(\"/testgroup/getTestGroupTestParameter\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data)}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getComponentBySpecId=function getComponentBySpecId(inputParam,masterData,searchRef){return function(dispatch){var _rsapi$post;dispatch(initRequest(true));rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl,(_rsapi$post={},_defineProperty(_rsapi$post,inputParam.keyName,inputParam.selectedRecord.testgroupspecification[0]),_defineProperty(_rsapi$post,\"userinfo\",inputParam.userInfo),_rsapi$post)).then(function(response){sortData(response.data);if(searchRef.current){searchRef.current.value=\"\";}var historyDataState=_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined});dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),historyDataState:historyDataState,loading:false}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getTestGroupDetails=function getTestGroupDetails(inputParam){return function(dispatch){//...inputParam, \ndispatch(initRequest(true));rsapi.post(\"/testgroup/getTestGroupTest\",{ntestgrouptestcode:parseInt(inputParam['ntestgrouptestcode']),userinfo:inputParam.userInfo})// rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \n//     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\n.then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data),testskip:undefined,loading:false}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getTestGroupComponentDetails=function getTestGroupComponentDetails(inputParam,masterData,searchRef){return function(dispatch){//...inputParam, \ndispatch(initRequest(true));rsapi.post(\"/testgroup/getTestByComponentId\",{testgroupspecsampletype:inputParam['testgroupspecsampletype'],userinfo:inputParam.userInfo})// rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \n//     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\n.then(function(response){sortData(response.data);if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),testskip:0,testtake:5,loading:false}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getSpecification=function getSpecification(inputParam,masterData,searchRef){return function(dispatch){if(inputParam.selectedRecord!==null){rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl,_objectSpread(_objectSpread({},inputParam),{},_defineProperty({},inputParam.keyName,inputParam.selectedRecord))).then(function(response){sortData(response.data);if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),{},{ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,primaryKey:inputParam.primaryKey},response.data),{},{selectedNode:inputParam.selectedRecord,searchedData:undefined}),historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedNode:inputParam.selectedRecord,TestGroupSpecification:[],SelectedSpecification:{},TestGroupTest:[],TestGroupTestParameter:[],TestGroupTestNumericParameter:[],TestGroupTestFormula:[],TestGroupTestPredefinedParameter:[],TestGroupTestClinicalSpec:[],TestGroupTestCharParameter:[],ActiveKey:inputParam.activeKey,FocusKey:inputParam.focusKey,SelectedTest:{},selectedParameter:{},TestGroupSpecFile:[],TestGroupSpecificationHistory:[],SelectedComponent:undefined})}});}};};export var changeTestCategory=function changeTestCategory(inputParam,testGroupInputData){return function(dispatch){rsapi.post(\"/testgroup/getTestMasterByCategory\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);inputParam.selectedRecord.ntestcode=[];dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:inputParam.selectedRecord,testGroupInputData:_objectSpread(_objectSpread({},testGroupInputData),response.data)}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var getSpecificationDetails=function getSpecificationDetails(inputParam,masterData,searchRef){return function(dispatch){rsapi.post(\"/testgroup/get\"+inputParam.methodUrl,_objectSpread({},inputParam.inputData)).then(function(response){if(searchRef.current)searchRef.current.value=\"\";dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},masterData),response.data),{},{searchedData:undefined}),screenName:inputParam.screenName}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});};};export var editSpecFile=function editSpecFile(inputParam){return function(dispatch){var masterData=inputParam.masterData;var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{if(inputParam.testgroupspecification.napprovalstatus===transactionStatus.DRAFT||inputParam.testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){var urlArray=[rsapi.post(\"/linkmaster/getLinkMaster\",{userinfo:inputParam.userInfo}),rsapi.post(\"/testgroup/getActiveSpecFileById\",{userinfo:inputParam.userInfo,testgroupspecfile:inputParam.selectedRecord,ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value})];Axios.all(urlArray).then(function(response){var linkmaster=response[0].data.LinkMaster;var defaultLink=linkmaster.filter(function(item){return item.ndefaultlink===transactionStatus.YES;});var editObject=response[1].data;var nlinkcode={};var link={};if(editObject.nattachmenttypecode===attachmentType.LINK){nlinkcode={\"label\":editObject.slinkname,\"value\":editObject.nlinkcode};link={slinkfilename:editObject.sfilename,slinkdescription:editObject.sdescription,nlinkdefaultstatus:editObject.ndefaultstatus,sfilesize:'',nfilesize:0,ndefaultstatus:4,sfilename:''};}else{nlinkcode=defaultLink.length>0?{\"label\":defaultLink[0].slinkname,\"value\":defaultLink[0].nlinkcode}:\"\";link={slinkfilename:'',slinkdescription:'',sdescription:editObject.sdescription,nlinkdefaultstatus:4,sfilesize:editObject.sfilesize,nfilesize:editObject.nfilesize,ndefaultstatus:editObject.ndefaultstatus,sfilename:editObject.sfilename};}var selectedRecord=_objectSpread(_objectSpread({},link),{},{nallotedspeccode:editObject.nallotedspeccode,nspecfilecode:editObject.nspecfilecode,stypename:editObject.stypename,nattachmenttypecode:editObject.nattachmenttypecode,nlinkcode:nlinkcode// disabled: true\n});dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"update\",screenName:\"IDS_SPECFILE\",editFiles:Object.values(editObject).length>0&&editObject.nattachmenttypecode===attachmentType.FTP?editObject:{},selectedRecord:selectedRecord,ncontrolCode:inputParam.ncontrolCode}});}).catch(function(error){if(error.response.status===409||error.response.status===417){toast.warn(error.response.data);}else{toast.error(error.message);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var addTestGroupCodedResult=function addTestGroupCodedResult(operation,paramdata,userInfo,ncontrolCode,optionalData,masterData){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=optionalData.testgroupspecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"grade/getGrade\",{\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var gradeMap=constructOptionList(response[0].data||[],\"ngradecode\",\"sdisplaystatus\",false,false,true);var grade=gradeMap.get(\"OptionList\");if(operation===\"update\"){var editCodedResult=response[1].data;selectedRecord={ntestgrouptestpredefcode:paramdata[\"ntestgrouptestpredefcode\"],ntestgrouptestparametercode:paramdata[\"ntestgrouptestparametercode\"],ngradecode:{\"label\":editCodedResult[\"sdisplaystatus\"],\"value\":editCodedResult[\"ngradecode\"]},spredefinedname:editCodedResult[\"spredefinedname\"]};}else{selectedRecord={ngradecode:gradeMap.get(\"DefaultValue\")// {\n//     \"value\": grade[0].ngradecode,\n//     \"label\": grade[0][\"sdisplaystatus\"]\n// }\n};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_CODEDRESULT\",parameterData:{grade:grade,needCodedResult:false},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var addTestGroupNumericTab=function addTestGroupNumericTab(operation,paramdata,userInfo,optionalData,masterData,ncontrolCode){return function(dispatch){var treeVersionTemplateIndex=masterData[\"TreeVersionTemplate\"].findIndex(function(x){return x[\"ntreeversiontempcode\"]===masterData.selectedNode[\"ntreeversiontempcode\"];});var templateVersionStatus=masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus;if(templateVersionStatus===transactionStatus.RETIRED){toast.warn(intl.formatMessage({id:\"IDS_SELECTEDTEMPLATEISRETIRED\"}));}else{var testgroupspecification=optionalData.testgroupspecification;if(testgroupspecification.napprovalstatus===transactionStatus.DRAFT||testgroupspecification.napprovalstatus===transactionStatus.CORRECTION){dispatch(initRequest(true));var urlArray=[rsapi.post(\"patient/getGender\",{\"userinfo\":userInfo})];if(operation===\"update\"){urlArray.push(rsapi.post(\"testgroup/getActiveClinicalSpecById\",{testgrouptestpredefinedparameter:paramdata,\"userinfo\":userInfo,testgroupspecification:testgroupspecification}));}Axios.all(urlArray).then(function(response){var selectedRecord={};var gradeMap=constructOptionList(response[0].data.genderList||[],\"ngendercode\",\"sgendername\",false,false,true);var grade=gradeMap.get(\"OptionList\");if(operation===\"update\"){var editCodedResult=response[1].data;selectedRecord={ntestgrouptestclinicspeccode:paramdata[\"ntestgrouptestclinicspeccode\"],ntestgrouptestparametercode:paramdata[\"ntestgrouptestparametercode\"],nfromage:paramdata[\"nfromage\"],ntoage:paramdata[\"ntoage\"],ngendercode:{\"label\":editCodedResult[\"sgendername\"],\"value\":editCodedResult[\"ngendercode\"]},nhigha:editCodedResult[\"shigha\"],nhighb:editCodedResult[\"shighb\"],nlowa:editCodedResult[\"slowa\"],nlowb:editCodedResult[\"slowb\"]};}else{selectedRecord={ngendercode:gradeMap.get(\"DefaultValue\")// {\n//     \"value\": grade[0].ngradecode,\n//     \"label\": grade[0][\"sdisplaystatus\"]\n// }\n};}dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,showSaveContinue:false,operation:operation,screenName:\"IDS_CLINICALSPEC\",parameterData:{grade:grade,needCodedResult:false},selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));}}};};export var viewTestGroupCheckList=function viewTestGroupCheckList(inputParam,userInfo){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"checklist/viewTemplate\",_objectSpread({},inputParam)).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{openTemplateModal:true,testGroupCheckList:{templateData:response.data},loading:false,selectedRecord:{}}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var reportSpecification=function reportSpecification(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testgroup/specReportGenerate\",_objectSpread(_objectSpread({},inputParam),{},{ntreeversiontempcode:inputParam.filterData.ntreeversiontempcode.value})).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false,showConfirmAlert:false}});document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var retireSpecification=function retireSpecification(inputParam,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"testgroup/retireSpec\",_objectSpread({},inputParam)).then(function(response){// const TestGroupSpecification = response.data.TestGroupSpecificationHistory ;\nsortData(response.data);masterData=_objectSpread(_objectSpread({},masterData),response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getDataForTestMaterial=function getDataForTestMaterial(screenName,operation,userInfo,ncontrolCode,selectedRecord,masterData,primaryKeyName){return function(dispatch){var urlArray=[];var materialTypeUrl=rsapi.post(\"materialcategory/getMaterialType\",{\"userinfo\":userInfo});var validationUrl=rsapi.post(\"testgroup/validationForRetiredTemplate\",{\"userinfo\":userInfo,ntreeversiontempcode:masterData.selectedNode.ntreeversiontempcode});urlArray=[materialTypeUrl,validationUrl];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){if(masterData.SelectedTest&&masterData.SelectedTest!==undefined){if(response[1].data===\"Success\"){var materialTypeMap=constructOptionList(response[0].data||[],\"nmaterialtypecode\",\"smaterialtypename\",undefined,undefined,false);var materialType=materialTypeMap.get(\"OptionList\");var materialTypedefault=materialTypeMap.get(\"DefaultValue\");selectedRecord[\"nmaterialtypecode\"]=materialTypedefault;if(selectedRecord[\"nmaterialtypecode\"]!==undefined){var _inputParam;var inputData=[];var inputParam=(_inputParam={operation:operation,selectedRecord:selectedRecord,materialType:materialType,inputData:{nmaterialtypecode:materialTypedefault.value}},_defineProperty(_inputParam,\"materialType\",materialType),_defineProperty(_inputParam,\"masterData\",masterData),_defineProperty(_inputParam,\"screenName\",screenName),_inputParam);dispatch(getMaterialCategoryBasedMaterialType(inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:{materialType:materialType,materialList:undefined,materialCategoryList:undefined,isOpen:true,operation:operation,screenName:screenName,openChildModal:true,ncontrolCode:ncontrolCode,loading:false}});}}else{toast.warn(intl.formatMessage({id:response[1].data}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}else{toast.warn(intl.formatMessage({id:\"IDS_NEEDTOADDTEST\"}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};export function getMaterialCategoryBasedMaterialType(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"material/getMaterialcombo\",{nmaterialtypecode:inputParam.inputData.nmaterialtypecode}).then(function(response){var selectedRecord={};selectedRecord=inputParam.selectedRecord;var materialCategoryMap=constructOptionList(response.data.MaterialCategoryMain||[],\"nmaterialcatcode\",\"smaterialcatname\",undefined,undefined,false);var materialCategoryList=materialCategoryMap.get(\"OptionList\");var materialCategorydefault=materialCategoryMap.get(\"DefaultValue\");selectedRecord['nmaterialcatcode']=materialCategorydefault;var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);if(response.data.MaterialCategoryMain.length===0){if(selectedRecord['nmaterialcatcode']){delete selectedRecord['nmaterialcatcode'];}if(selectedRecord['nmaterialcode']){delete selectedRecord['nmaterialcode'];}}var materialList=[];if(materialCategoryList.length!==0){materialList=materialList;inputParam=_objectSpread(_objectSpread({},inputParam),{},{responsecat:response,materialCategoryList:materialCategoryList,selectedRecord:selectedRecord,inputData:{//nmaterialcatcode: materialCategorydefault.value,\nnmaterialtypecode:inputParam.inputData.nmaterialtypecode}});dispatch(getMaterialBasedMaterialCategory(inputParam));}else{dispatch({type:DEFAULT_RETURN,payload:{openChildModal:true,screenName:inputParam.screenName,masterData:masterData,loading:false,materialCategoryList:materialCategoryList,materialType:inputParam.materialType,materialList:materialList,selectedRecord:selectedRecord,operation:inputParam.operation}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export function getMaterialBasedMaterialCategory(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"testgroup/getAvailableMaterial\",{nmaterialtypecode:inputParam.inputData.nmaterialtypecode,nmaterialcatcode:inputParam.inputData.nmaterialcatcode!==undefined?inputParam.inputData.nmaterialcatcode:inputParam.responsecat.data.MaterialCategoryMain[0].nmaterialcatcode,ntestgrouptestcode:inputParam.masterData.SelectedTest.ntestgrouptestcode}).then(function(response){var selectedRecord=inputParam.selectedRecord;var materialMap=constructjsonOptionList(response.data.MaterialCombo||[],\"nmaterialcode\",\"Material Name\",undefined,undefined,false);var materialList=materialMap.get(\"OptionList\");if(response.data.MaterialCombo.length===0){delete selectedRecord['nmaterialcode'];}var masterData=_objectSpread(_objectSpread({},inputParam.masterData),response.data);if(inputParam.materialCategoryList){dispatch({type:DEFAULT_RETURN,payload:{materialCategoryList:inputParam.materialCategoryList,masterData:masterData,loading:false,materialList:materialList,openChildModal:true,screenName:inputParam.screenName,selectedRecord:inputParam.selectedRecord,materialType:inputParam.materialType,operation:inputParam.operation}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,materialList:materialList,openChildModal:true}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};}export var getTestGroupMaterial=function getTestGroupMaterial(inputParam){return function(dispatch){rsapi.post(\"/testgroup/getTestGroupTestMaterial\",_objectSpread({},inputParam)).then(function(response){sortData(response.data);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data)}});}).catch(function(error){if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export var getDataForEditTestMaterial=function getDataForEditTestMaterial(screenName,operation,userInfo,ncontrolCode,selectedRecord,Data,primaryKeyName){return function(dispatch){var _rsapi$post2;var urlArray=[];var materialTypeUrl=rsapi.post(\"materialcategory/getMaterialType\",{\"userinfo\":userInfo});var materialCatUrl=rsapi.post(\"material/getMaterialcombo\",{nmaterialtypecode:Data.selectedMaterial.nmaterialtypecode});var materialUrl=rsapi.post(\"materialinventory/getMaterialInventorycombo\",{nmaterialcatcode:Data.selectedMaterial.nmaterialcatcode,nmaterialtypecode:Data.selectedMaterial.nmaterialtypecode});var materialById=rsapi.post(\"testgroup/getActiveTestMaterialById\",(_rsapi$post2={},_defineProperty(_rsapi$post2,primaryKeyName,Data.selectedMaterial.ntestgrouptestmaterialcode),_defineProperty(_rsapi$post2,\"userinfo\",userInfo),_rsapi$post2));var validationUrl=rsapi.post(\"testgroup/validationForRetiredTemplate\",{\"userinfo\":userInfo,ntreeversiontempcode:Data.selectedNode.ntreeversiontempcode});urlArray=[materialTypeUrl,materialCatUrl,materialUrl,materialById,validationUrl];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){if(response[4].data===\"Success\"){var _selectedRecord={};var MaterialCategoryData=[];var MaterialTypeData=[];var MaterialData=[];var materialTypeMap=constructOptionList(response[0].data||[],\"nmaterialtypecode\",\"smaterialtypename\",undefined,undefined,false);var materialType=materialTypeMap.get(\"OptionList\");var materialCategoryMap=constructOptionList(response[1].data.MaterialCategoryMain||[],\"nmaterialcatcode\",\"smaterialcatname\",undefined,undefined,false);var materialCategoryList=materialCategoryMap.get(\"OptionList\");var materialMap=constructjsonOptionList(response[2].data.MaterialCombo||[],\"nmaterialcode\",\"Material Name\",undefined,undefined,false);var materialList=materialMap.get(\"OptionList\");MaterialCategoryData.push({\"value\":response[3].data[\"nmaterialcatcode\"],\"label\":response[3].data[\"smaterialcatname\"]});MaterialTypeData.push({\"value\":response[3].data[\"nmaterialtypecode\"],\"label\":response[3].data[\"smaterialtypename\"]});MaterialData.push({\"value\":response[3].data[\"nmaterialcode\"],\"label\":response[3].data[\"smaterialname\"]});_selectedRecord=response[3].data;_selectedRecord[\"nmaterialcatcode\"]=MaterialCategoryData[0];_selectedRecord[\"nmaterialtypecode\"]=MaterialTypeData[0];_selectedRecord[\"nmaterialcode\"]=MaterialData[0];dispatch({type:DEFAULT_RETURN,payload:{materialType:materialType,materialList:materialList,materialCategoryList:materialCategoryList,selectedRecord:_selectedRecord,isOpen:true,operation:operation,screenName:screenName,openChildModal:true,ncontrolCode:ncontrolCode,loading:false}});}else{toast.warn(intl.formatMessage({id:response[4].data}));dispatch({type:DEFAULT_RETURN,payload:{operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(intl.formatMessage({id:error.message}));}else{toast.warn(intl.formatMessage({id:error.response.data}));}});};};","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/TestGroupAction.js"],"names":["toast","rsapi","DEFAULT_RETURN","attachmentType","parameterType","SampleType","transactionStatus","constructjsonOptionList","constructOptionList","rearrangeDateFormat","sortData","Axios","intl","initRequest","sampleTypeOnChange","inputParam","masterData","dispatch","post","methodUrl","inputData","then","response","data","type","payload","tempFilterData","loading","catch","error","status","warn","message","filterTestGroup","searchRef","current","value","filterData","searchedData","undefined","testskip","historyDataState","sort","filter","createTree","selectedRecord","userInfo","selectedNode","ncontrolCode","nproductcatcode","item","ncategorybasedflow","YES","nproductcode","sampletype","nsampletypecode","ncategorycode","ntreeversiontempcode","userinfo","treetemplatemanipulation","treetempTranstestGroup","mandatoryFields","forEach","index","sleveldescription","push","slabelname","openModal","operation","screenName","TreetempTranstestGroup","treeMandatoryFields","formatMessage","id","editTree","treeVersionTemplateIndex","findIndex","x","templateVersionStatus","ntransactionstatus","RETIRED","addSpecification","masterDatas","nnextchildcode","SelectedSpecification","urlArray","testgroupspecification","napprovalstatus","CORRECTION","DRAFT","all","sproductname","label","sproductcatname","dexpirydate","ntzexpirydate","stimezoneid","sspecname","ExpiryDate","ncomponentrequired","CLINICALTYPE","NO","nclinicalspec","ACTIVE","ntimezonecode","timeZoneList","get","addComponent","testGroupSpecSampleType","length","testCategory","sampleTypeMap","testGroupInputData","TestCategory","TestGroupSpecSampleType","TestGroupTest","ncomponentcode","ntestcategorycode","addTestGroupTest","selectedComponent","selectedSpecification","testgroupspecsampletype","stestcategoryname","stestcategorycode","editTestGroupTest","selectedTest","ntestcode","testgrouptest","editObject","SelectedTestGroupTest","testFileItem","TestGroupTestFile","SelectedTest","nsectioncode","ssectionname","nmethodcode","smethodname","ninstrumentcatcode","sinstrumentcatname","ncontainertypecode","scontainertype","sfilename","ntestgroupfilecode","section","method","instrumentCategory","containerType","testFile","console","log","editTestGroupParameter","selectedParameter","testgrouptestparameter","parameterObject","TestGroupTestParameter","predefinedObject","TestGroupTestPredefinedParameter","characterObject","TestGroupTestCharParameter","numericObject","TestGroupTestNumericParameter","nunitcode","sunitname","nparametertypecode","sdisplaystatus","parameterTypeCode","nchecklistversioncode","schecklistname","schecklistversionname","ntestformulacode","sformulacalculationdetail","sformulacalculationcode","scharname","ntestgrouptestcharcode","ntestgrouptestpredefcode","spredefinedname","ndefaultstatus","ngradecode","ntestgrouptestnumericcode","sminlod","smaxlod","sminb","smina","smaxa","smaxb","sminloq","smaxloq","sdisregard","sresultvalue","gradeMap","unitMap","grade","unit","disabled","NUMERIC","openChildModal","testFormula","TestFormula","checkListVersion","needRoundingDigit","needUnit","parameterData","getTestGroupParameter","getComponentBySpecId","keyName","getTestGroupDetails","ntestgrouptestcode","parseInt","getTestGroupComponentDetails","testtake","getSpecification","ActiveKey","activeKey","FocusKey","focusKey","primaryKey","TestGroupSpecification","TestGroupTestFormula","TestGroupTestClinicalSpec","TestGroupSpecFile","TestGroupSpecificationHistory","SelectedComponent","changeTestCategory","getSpecificationDetails","editSpecFile","testgroupspecfile","linkmaster","LinkMaster","defaultLink","ndefaultlink","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","slinkdescription","sdescription","nlinkdefaultstatus","sfilesize","nfilesize","nallotedspeccode","nspecfilecode","stypename","editFiles","Object","values","FTP","addTestGroupCodedResult","paramdata","optionalData","testgrouptestpredefinedparameter","editCodedResult","ntestgrouptestparametercode","showSaveContinue","needCodedResult","addTestGroupNumericTab","genderList","ntestgrouptestclinicspeccode","nfromage","ntoage","ngendercode","nhigha","nhighb","nlowa","nlowb","viewTestGroupCheckList","openTemplateModal","testGroupCheckList","templateData","reportSpecification","loadEsign","showConfirmAlert","document","getElementById","setAttribute","filepath","click","retireSpecification","getDataForTestMaterial","primaryKeyName","materialTypeUrl","validationUrl","materialTypeMap","materialType","materialTypedefault","nmaterialtypecode","getMaterialCategoryBasedMaterialType","materialList","materialCategoryList","isOpen","materialCategoryMap","MaterialCategoryMain","materialCategorydefault","responsecat","getMaterialBasedMaterialCategory","nmaterialcatcode","materialMap","MaterialCombo","getTestGroupMaterial","getDataForEditTestMaterial","Data","materialCatUrl","selectedMaterial","materialUrl","materialById","ntestgrouptestmaterialcode","MaterialCategoryData","MaterialTypeData","MaterialData"],"mappings":"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","sourcesContent":["import {\r\n    toast\r\n} from \"react-toastify\";\r\nimport rsapi from \"../rsapi\";\r\nimport {\r\n    DEFAULT_RETURN\r\n} from \"./LoginTypes\";\r\nimport {\r\n    attachmentType,\r\n    parameterType,\r\n    SampleType,\r\n    transactionStatus\r\n} from \"../components/Enumeration\";\r\nimport {\r\n    constructjsonOptionList,\r\n    constructOptionList,\r\n    rearrangeDateFormat,\r\n    //formatInputDate,\r\n    sortData\r\n} from \"../components/CommonScript\";\r\nimport Axios from \"axios\";\r\nimport {\r\n    intl\r\n} from \"../components/App\";\r\nimport {\r\n    initRequest\r\n} from \"./LoginAction\";\r\n\r\n\r\nexport const sampleTypeOnChange = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        tempFilterData: inputParam.inputData.tempFilterData,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data\r\n                        },\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    masterData[\"ExistingLinkTable\"] = [];\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const filterTestGroup = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/filterTestGroup\", inputParam.inputData)\r\n            .then(response => {\r\n                sortData(response.data);\r\n                if (searchRef.current) {\r\n                    searchRef.current.value = \"\";\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        filterData: inputParam.inputData.filterData,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        loading: false,\r\n                        testskip: 0,\r\n                        historyDataState: {\r\n                            ...inputParam.historyDataState,\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const createTree = (selectedRecord, userInfo, selectedNode, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        if (selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES || selectedRecord.nproductcode) {\r\n            const inputParam = {\r\n                sampletype: selectedRecord.nsampletypecode.item,\r\n                ncategorycode: selectedRecord.nproductcatcode.value,\r\n                ntreeversiontempcode: selectedRecord.ntreeversiontempcode.value,\r\n                userinfo: userInfo,\r\n                treetemplatemanipulation: selectedNode\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"/testgroup/getTemplateMasterDetails\", {\r\n                ...inputParam\r\n            })\r\n                .then(response => {\r\n                    const treetempTranstestGroup = response.data[\"TreetempTranstestGroup\"] || [];\r\n\r\n                    // const treeMandatoryFields = treetempTranstestGroup.map((item, index) => {\r\n                    //         return {\r\n                    //             \"idsName\": item.slabelname,\r\n                    //             \"dataField\": \"sleveldescription_\" + index,\r\n                    //             \"mandatory\": true\r\n                    //         }\r\n                    // });\r\n\r\n                    //  const selectedNodeLevel = selectedNode ? selectedNode.slevelcode.split(\"/1\").length-2 : -1;\r\n                    const mandatoryFields = [];\r\n                    treetempTranstestGroup.forEach((item, index) => {\r\n                        if (item.sleveldescription === null) {\r\n                            mandatoryFields.push({\r\n                                \"idsName\": item.slabelname,\r\n                                \"dataField\": \"sleveldescription_\" + index,\r\n                                \"mandatory\": true\r\n                            })\r\n                        }\r\n                    });\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openModal: true,\r\n                            operation: \"create\",\r\n                            screenName: \"IDS_PROFILETREE\",\r\n                            TreetempTranstestGroup: treetempTranstestGroup,\r\n                            treeMandatoryFields: mandatoryFields,\r\n                            //selectedRecord,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_PRODUCTNOTAVAILABLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTree = (operation, selectedNode, userinfo, ncontrolCode, filterData, masterData) => {\r\n    return (dispatch) => {\r\n        //console.log(\"edit Tree:\", selectedNode, masterData);\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === selectedNode[\"ntreeversiontempcode\"]);\r\n        // if (treeVersionTemplateIndex !== -1){\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        //}\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedNode) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(\"/testgroup/getTreeById\", {\r\n                    userinfo,\r\n                    treetemplatemanipulation: selectedNode,\r\n                    ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                })\r\n                    .then(response => {\r\n                        const treetempTranstestGroup = response.data;\r\n                        const treeMandatoryFields = treetempTranstestGroup && [{\r\n                            \"idsName\": treetempTranstestGroup.slabelname,\r\n                            \"dataField\": \"sleveldescription\",\r\n                            \"mandatory\": true\r\n                        }];\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_EDITTREE\",\r\n                                selectedRecord: {\r\n                                    ...treetempTranstestGroup\r\n                                },\r\n                                treeMandatoryFields,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SELECTPROFILENODETOEDIT\"\r\n                }))\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addSpecification = (operation, inputParam, ncontrolCode, masterDatas) => {\r\n    return (dispatch) => {\r\n        //if (inputParam.selectedNode != null && inputParam.selectedNode.schildnode === \"\") {\r\n        if (inputParam.selectedRecord.ntreeversiontempcode.item.ntransactionstatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (inputParam.selectedNode != null && inputParam.selectedNode.nnextchildcode === -1) {\r\n\r\n                if (masterDatas && masterDatas.SelectedSpecification === null && operation === \"copy\") {\r\n                    toast.warn(intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" }));\r\n                }\r\n                else {\r\n                    let urlArray = [];\r\n                    if (operation === \"update\") {\r\n                        const testgroupspecification = inputParam.testgroupspecification[0];\r\n                        if (testgroupspecification.napprovalstatus === transactionStatus.CORRECTION ||\r\n                            testgroupspecification.napprovalstatus === transactionStatus.DRAFT) {\r\n                            urlArray = [rsapi.post(\"timezone/getTimeZone\")];\r\n\r\n                            urlArray.push(rsapi.post(\"/testgroup/getActiveSpecificationById\", {\r\n                                testgroupspecification,\r\n                                userinfo: inputParam.userinfo,\r\n                                ntreeversiontempcode: inputParam.selectedRecord.ntreeversiontempcode.value\r\n                            }));\r\n                        } else {\r\n                            toast.warn(intl.formatMessage({\r\n                                id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                            }));\r\n                            return;\r\n                        }\r\n\r\n                    } else {\r\n                        urlArray = [rsapi.post(\"timezone/getTimeZone\")];\r\n\r\n                        urlArray.push(rsapi.post(\"/testgroup/getAddSpecification\", {\r\n                            userinfo: inputParam.userInfo,\r\n                            ntreeversiontempcode: inputParam.selectedRecord.ntreeversiontempcode.value\r\n                            //currentdate: formatInputDate(new Date(), true)\r\n                        }));\r\n\r\n\r\n                    }\r\n                    Axios.all(urlArray)\r\n                        .then(response => {\r\n                            let selectedRecord = {};\r\n                            let masterData = inputParam.masterData !== undefined ? inputParam.masterData : masterDatas;\r\n\r\n                            if (operation === \"update\") {\r\n                                masterData = {\r\n                                    ...inputParam.masterData,\r\n                                    ...response[1].data,\r\n                                    testgroupspecification: inputParam.testgroupspecification\r\n                                }\r\n                                selectedRecord = {\r\n                                    sproductname: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? \"\" : inputParam.selectedRecord.nproductcode.label,\r\n                                    sproductcatname: inputParam.selectedRecord.nproductcatcode.label,\r\n                                    ncategorybasedflow: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,\r\n                                    ...response[1].data.SelectedSpecification,\r\n                                    //dexpirydate: new Date(response[1].data[\"sexpirydate\"]),\r\n                                    dexpirydate: rearrangeDateFormat(inputParam.userinfo, response[1].data.SelectedSpecification[\"sexpirydate\"]),\r\n                                    ntzexpirydate: {\r\n                                        \"label\": response[1].data.SelectedSpecification.stimezoneid,\r\n                                        \"value\": response[1].data.SelectedSpecification.ntzexpirydate\r\n                                    }\r\n                                };\r\n                            } else {\r\n                                selectedRecord = {\r\n                                    sproductname: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow === transactionStatus.YES ? \"\" : inputParam.selectedRecord.nproductcode.label,\r\n                                    sproductcatname: inputParam.selectedRecord.nproductcatcode.label,\r\n                                    sspecname: inputParam.selectedNode.sleveldescription,\r\n                                    ncategorybasedflow: inputParam.selectedRecord.nproductcatcode.item.ncategorybasedflow,\r\n                                    dexpirydate: rearrangeDateFormat(inputParam.userInfo, response[1].data.ExpiryDate),\r\n                                    ncomponentrequired: inputParam.selectedNode.nsampletypecode===SampleType.CLINICALTYPE?transactionStatus.YES:transactionStatus.NO,\r\n                                    nclinicalspec: inputParam.selectedNode.nsampletypecode===SampleType.CLINICALTYPE?transactionStatus.YES:transactionStatus.NO,\r\n                                    ntransactionstatus: transactionStatus.ACTIVE,\r\n                                    ntzexpirydate: {\r\n                                        \"label\": inputParam.userInfo.stimezoneid,\r\n                                        \"value\": inputParam.userInfo.ntimezonecode\r\n                                    }\r\n                                };\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN,\r\n                                payload: {\r\n                                    openModal: true,\r\n                                    operation: operation,\r\n                                    screenName: \"IDS_SPECIFICATION\",\r\n                                    masterData,\r\n                                    selectedRecord,\r\n                                    timeZoneList: constructOptionList(response[0].data || [], \"ntimezonecode\", \"stimezoneid\", false, false, true).get(\"OptionList\"),\r\n                                    ncontrolCode\r\n                                }\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            } else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                }\r\n            } else {\r\n                if (operation === \"copy\") {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_SELECTSPECIFICATION\"\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_SELECTLASTLEVELNODETOADDSPEC\"\r\n                    }));\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addComponent = (SelectedSpecification, userInfo, ncontrolCode, masterData) => {\r\n    return (dispatch) => {\r\n\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            rsapi.post(\"/testgroup/getAvailableComponent\", {\r\n                userinfo: userInfo,\r\n                testgroupspecification: SelectedSpecification\r\n            })\r\n                .then(response => {\r\n                    const testGroupSpecSampleType = response.data[\"TestGroupSpecSampleType\"] || [];\r\n                    if (testGroupSpecSampleType.length > 0) {\r\n                        const testCategory = constructOptionList(response.data[\"TestCategory\"] || [], \"ntestcategorycode\", \"stestcategoryname\", 'ntestcategorycode', 'ascending', false);\r\n                        const sampleTypeMap = constructOptionList(testGroupSpecSampleType, \"ncomponentcode\", \"scomponentname\", false, false, true);\r\n                        // const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: \"create\",\r\n                                screenName: \"IDS_COMPONENT\",\r\n                                testGroupInputData: {\r\n                                    TestCategory: testCategory.get(\"OptionList\"),\r\n                                    TestGroupSpecSampleType: sampleTypeMap.get(\"OptionList\"),\r\n                                    TestGroupTest: response.data[\"TestGroupTest\"] || [] //TestGroupTestMap.get(\"OptionList\"),\r\n                                },\r\n                                selectedRecord: {\r\n                                    ncomponentcode: sampleTypeMap.get(\"DefaultValue\"),\r\n                                    ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\r\n                                },\r\n                                ncontrolCode\r\n                            }\r\n                        });\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: \"IDS_COMPONENTNOTAVAILABLE\"\r\n                        }));\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTestGroupTest = (selectedComponent, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedSpecification) {\r\n                if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                    selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                    if (selectedComponent) {\r\n                        rsapi.post(\"/testgroup/getAvailableTest\", {\r\n                            userinfo: userInfo,\r\n                            testgroupspecsampletype: selectedComponent,\r\n                            ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                        })\r\n                            .then(response => {\r\n                             let  testCategory; \r\n                             // = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\r\n                                // const TestGroupTestMap = constructOptionList(response.data[\"TestGroupTest\"]||[], \"ntestcode\", \"stestname\", false, false, true);\r\n                                if (response.data[\"TestCategory\"].length > 0)  {\r\n                                     testCategory = constructOptionList(response.data[\"TestCategory\"], \"ntestcategorycode\", \"stestcategoryname\", \"ntestcategorycode\", \"ascending\", false);\r\n                                dispatch({\r\n                                    type: DEFAULT_RETURN,\r\n                                    payload: {\r\n                                        openModal: true,\r\n                                        operation: \"create\",\r\n                                        screenName: \"IDS_TEST\",\r\n                                        testGroupInputData: {\r\n                                            TestCategory: testCategory.get(\"OptionList\"),\r\n                                            TestGroupTest: response.data[\"TestGroupTest\"] || [] //TestGroupTestMap.get(\"OptionList\"),\r\n                                        },\r\n                                        selectedRecord: {\r\n                                            ntestcategorycode: {\r\n                                                label: response.data[\"SelectedTestCategory\"].stestcategoryname,\r\n                                                value: response.data[\"SelectedTestCategory\"].stestcategorycode,\r\n                                                item: response.data[\"SelectedTestCategory\"]\r\n                                            }\r\n                                            //ntestcategorycode: testCategory.get(\"DefaultValue\") ? testCategory.get(\"DefaultValue\") : testCategory.get(\"OptionList\")[0]\r\n                                        },\r\n                                        ncontrolCode\r\n                                    }\r\n                                });\r\n                            }else{\r\n                                toast.warn(intl.formatMessage({\r\n                                    id: \"IDS_TESTCATEGORYNOTAVAILABLE\"\r\n                                }))\r\n                            }\r\n                            })\r\n                            .catch(error => {\r\n                                if (error.response.status === 409 || error.response.status === 417) {\r\n                                    toast.warn(error.response.data);\r\n                                } else {\r\n                                    toast.error(error.message);\r\n                                }\r\n                            });\r\n                        \r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: \"IDS_NEEDCOMPONENTTOADDTEST\"\r\n                        }));\r\n                    }\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                    }));\r\n                }\r\n\r\n            }\r\n            else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SELECTSPECIFICATION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTestGroupTest = (operation, selectedTest, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                const ntestcode = selectedTest.ntestcode;\r\n                const urlArray = [\r\n                    rsapi.post(\"/testgroup/getActiveTestById\", {\r\n                        userinfo: userInfo,\r\n                        testgrouptest: selectedTest,\r\n                        ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                    }),\r\n                    rsapi.post(\"/source/getSource\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getSection\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getMethod\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getInstrumentCategory\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getTestAttachment\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"/testmaster/getContainerType\", {\r\n                        ntestcode,\r\n                        userinfo: userInfo\r\n                    })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        // const editObject = response[0].data.TestGroupTest;\r\n                        // const testFileItem = response[0].data.TestGroupTestFile;\r\n                        // const SelectedTest = response[0].data.TestGroupTest;\r\n\r\n                        const editObject = response[0].data.SelectedTestGroupTest;\r\n                        const testFileItem = response[0].data.TestGroupTestFile;\r\n                        const SelectedTest = response[0].data.SelectedTest;\r\n                        //const TestGroupTest = response[0].data.TestGroupTest;\r\n\r\n                        const selectedRecord = {\r\n                            ...editObject,\r\n                            // nsourcecode: {\r\n                            //     \"label\": editObject.ssourcename,\r\n                            //     \"value\": editObject.nsourcecode\r\n                            // },\r\n                            nsectioncode: {\r\n                                \"label\": editObject.ssectionname,\r\n                                \"value\": editObject.nsectioncode\r\n                            },\r\n                            nmethodcode: {\r\n                                \"label\": editObject.smethodname,\r\n                                \"value\": editObject.nmethodcode\r\n                            },\r\n                            ninstrumentcatcode: {\r\n                                \"label\": editObject.sinstrumentcatname,\r\n                                \"value\": editObject.ninstrumentcatcode\r\n                            },\r\n                            ncontainertypecode: {\r\n                                \"label\": editObject.scontainertype,\r\n                                \"value\": editObject.ncontainertypecode\r\n                            }\r\n                        };\r\n                        if (testFileItem) {\r\n                            selectedRecord[\"ntestfilecode\"] = {\r\n                                \"label\": testFileItem.sfilename,\r\n                                \"value\": testFileItem.ntestgroupfilecode,\r\n                                item: testFileItem\r\n                            };\r\n                            selectedRecord[\"ntestgroupfilecode\"] = testFileItem.ntestgroupfilecode\r\n                        }\r\n                        if (editObject.nmethodcode !== -1) {\r\n                            selectedRecord[\"nmethodcode\"] = {\r\n                                \"label\": editObject.smethodname,\r\n                                \"value\": editObject.nmethodcode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"nmethodcode\"] = undefined;\r\n                        }\r\n                        if (editObject.ninstrumentcatcode !== -1) {\r\n                            selectedRecord[\"ninstrumentcatcode\"] = {\r\n                                \"label\": editObject.sinstrumentcatname,\r\n                                \"value\": editObject.ninstrumentcatcode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"ninstrumentcatcode\"] = undefined;\r\n                        }\r\n                        if (editObject.ncontainertypecode !== -1) {\r\n                            selectedRecord[\"ncontainertypecode\"] = {\r\n                                \"label\": editObject.scontainertype,\r\n                                \"value\": editObject.ncontainertypecode\r\n                            }\r\n                        } else {\r\n                            selectedRecord[\"ncontainertypecode\"] = undefined;\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                masterData: {\r\n                                    ...masterData,\r\n                                    ...response[0].data,\r\n                                    SelectedTest: SelectedTest,\r\n                                    //TestGroupTest : [TestGroupTest]\r\n                                },\r\n                                openModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_EDITTESTGROUPTEST\",\r\n                                testGroupInputData: {\r\n                                    // source: constructOptionList(response[1].data || [], \"nsourcecode\", \"ssourcename\", false, false, true).get(\"OptionList\"),\r\n                                    section: constructOptionList(response[2].data || [], \"nsectioncode\", \"ssectionname\", false, false, true).get(\"OptionList\"),\r\n                                    method: constructOptionList(response[3].data || [], \"nmethodcode\", \"smethodname\", false, false, true).get(\"OptionList\"),\r\n                                    instrumentCategory: constructOptionList(response[4].data || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", false, false, true).get(\"OptionList\"),\r\n                                    containerType: constructOptionList(response[6].data || [], \"ncontainertypecode\", \"scontainertype\", false, false, true).get(\"OptionList\"),\r\n                                    testFile: constructOptionList(response[5].data || [], \"ntestfilecode\", \"sfilename\", false, false, true).get(\"OptionList\")\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        console.log(\"errror:\", error);\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTestGroupParameter = (operation, selectedParameter, userInfo, ncontrolCode, selectedSpecification, filterData, masterData) => {\r\n    return dispatch => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (selectedSpecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                selectedSpecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"/testgroup/getActiveParameterById\", {\r\n                        userinfo: userInfo,\r\n                        testgrouptestparameter: selectedParameter,\r\n                        ntreeversiontempcode: filterData.ntreeversiontempcode.value\r\n                    }),\r\n                    rsapi.post(\"/parametertype/getParameterType\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"unit/getUnit\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"grade/getGrade\", {\r\n                        userinfo: userInfo\r\n                    }),\r\n                    rsapi.post(\"checklist/getApprovedChecklist\", {\r\n                        \"userinfo\": userInfo\r\n                    })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        const parameterObject = response[0].data.TestGroupTestParameter[0];\r\n                        const predefinedObject = response[0].data.TestGroupTestPredefinedParameter;\r\n                        const characterObject = response[0].data.TestGroupTestCharParameter;\r\n                        const numericObject = response[0].data.TestGroupTestNumericParameter && response[0].data.TestGroupTestNumericParameter.length > 0 ? response[0].data.TestGroupTestNumericParameter[0] : {};\r\n                        const selectedRecord = {\r\n                            ...parameterObject,\r\n                            nunitcode: {\r\n                                \"label\": parameterObject.sunitname,\r\n                                \"value\": parameterObject.nunitcode\r\n                            },\r\n                            nparametertypecode: {\r\n                                \"label\": parameterObject.sdisplaystatus,\r\n                                \"value\": parameterObject.nparametertypecode\r\n                            },\r\n                            parameterTypeCode: parameterObject.nparametertypecode,\r\n                            nchecklistversioncode: {\r\n                                \"label\": parameterObject.schecklistname,\r\n                                \"value\": parameterObject.nchecklistversioncode\r\n                            },\r\n                            schecklistversionname: parameterObject.schecklistversionname,\r\n                            ntestformulacode: parameterObject.ntestformulacode > 0 ? {\r\n                                \"label\": parameterObject.sformulacalculationdetail,\r\n                                \"value\": parameterObject.ntestformulacode,\r\n                                item: {\r\n                                    sformulacalculationdetail: parameterObject.sformulacalculationdetail,\r\n                                    ntestformulacode: parameterObject.ntestformulacode,\r\n                                    sformulacalculationcode: parameterObject.sformulacalculationcode\r\n                                }\r\n                            } : \"\"\r\n                        };\r\n                        if (selectedRecord[\"schecklistname\"] === \"NA\") {\r\n                            delete selectedRecord[\"nchecklistversioncode\"]\r\n                        }\r\n                        if (selectedRecord[\"schecklistversionname\"] === \"NA\") {\r\n                            delete selectedRecord[\"schecklistversionname\"]\r\n                        }\r\n                        if (selectedRecord[\"sunitname\"] === \"NA\") {\r\n                            delete selectedRecord[\"nunitcode\"]\r\n                        }\r\n                        if (characterObject) {\r\n                            selectedRecord[\"scharname\"] = characterObject.scharname;\r\n                            selectedRecord[\"ntestgrouptestcharcode\"] = characterObject.ntestgrouptestcharcode;\r\n                        }\r\n                        if (predefinedObject) {\r\n                            selectedRecord[\"ntestgrouptestpredefcode\"] = predefinedObject.ntestgrouptestpredefcode;\r\n                            selectedRecord[\"spredefinedname\"] = predefinedObject.spredefinedname;\r\n                            selectedRecord[\"ndefaultstatus\"] = predefinedObject.ndefaultstatus;\r\n                            selectedRecord[\"ngradecode\"] = {\r\n                                \"label\": predefinedObject.sdisplaystatus,\r\n                                \"value\": predefinedObject.ngradecode\r\n                            };\r\n                        }\r\n                        if (numericObject) {\r\n                            selectedRecord[\"ntestgrouptestnumericcode\"] = numericObject.ntestgrouptestnumericcode;\r\n                            selectedRecord[\"sminlod\"] = numericObject.sminlod;\r\n                            selectedRecord[\"smaxlod\"] = numericObject.smaxlod;\r\n                            selectedRecord[\"sminb\"] = numericObject.sminb;\r\n                            selectedRecord[\"smina\"] = numericObject.smina;\r\n                            selectedRecord[\"smaxa\"] = numericObject.smaxa;\r\n                            selectedRecord[\"smaxb\"] = numericObject.smaxb;\r\n                            selectedRecord[\"sminloq\"] = numericObject.sminloq;\r\n                            selectedRecord[\"smaxloq\"] = numericObject.smaxloq;\r\n                            selectedRecord[\"sdisregard\"] = numericObject.sdisregard;\r\n                            selectedRecord[\"sresultvalue\"] = numericObject.sresultvalue;\r\n                        }\r\n                        const gradeMap = constructOptionList(response[3].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                        const unitMap = constructOptionList(response[2].data || [], \"nunitcode\", \"sunitname\", false, false, true);\r\n                        const grade = gradeMap.get(\"OptionList\");\r\n                        const unit = unitMap.get(\"OptionList\");\r\n                        const disabled = parameterObject.nparametertypecode === parameterType.NUMERIC ? false : true;\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                operation: operation,\r\n                                screenName: \"IDS_PARAMETER\",\r\n                                testGroupInputData: {\r\n                                    unit,\r\n                                    grade,\r\n                                    testFormula: constructOptionList(response[0].data.TestFormula || [], \"ntestformulacode\", \"sformulacalculationdetail\", false, false, true).get(\"OptionList\"),\r\n                                    parameterType: constructOptionList(response[1].data || [], \"nparametertypecode\", \"sdisplaystatus\", false, false, true).get(\"OptionList\"),\r\n                                    checkListVersion: constructOptionList(response[4].data || [], \"nchecklistversioncode\", \"schecklistname\", false, false, true).get(\"OptionList\"),\r\n                                    needRoundingDigit: disabled,\r\n                                    needUnit: disabled\r\n                                },\r\n                                parameterData: {\r\n                                    grade\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// export const addTestGroupFormula = (selectedParameter, userInfo, ncontrolCode, optionalData) => {\r\n//     return dispatch => {\r\n//         const testgroupspecification = optionalData.testgroupspecification;\r\n//         if(testgroupspecification.napprovalstatus === transactionStatus.DRAFT || \r\n//             testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n//             dispatch(initRequest(true));\r\n//             rsapi.post(\"/testgroup/getTestGroupFormula\", {userinfo: userInfo, testgrouptestparameter: selectedParameter, testgroupspecification})\r\n//             .then(response=>{\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, \r\n//                     payload:{\r\n//                         openChildModal: true,\r\n//                         operation: \"create\",\r\n//                         screenName: \"IDS_FORMULA\",\r\n//                         testGroupInputData: {testFormula: response.data},\r\n//                         selectedRecord: {},\r\n//                         ncontrolCode\r\n//                 }});\r\n//             })\r\n//             .catch(error=>{\r\n//                 dispatch({type: DEFAULT_RETURN, payload: {loading:false}});\r\n//                 if(error.response.status === 409 || error.response.status === 417) {\r\n//                     toast.warn(error.response.data);\r\n//                 } else {\r\n//                     toast.error(error.message)\r\n//                 }\r\n//             });\r\n//         } else {\r\n//             toast.warn(intl.formatMessage({id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"}));\r\n//         }\r\n//     }\r\n// }\r\n\r\nexport const getTestGroupParameter = (inputParam) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestGroupTestParameter\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getComponentBySpecId = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/\" + inputParam.operation + inputParam.methodUrl, {\r\n            [inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0],\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                sortData(response.data);\r\n                if (searchRef.current) {\r\n                    searchRef.current.value = \"\";\r\n                }\r\n                const historyDataState = {\r\n                    ...inputParam.historyDataState,\r\n                    sort: undefined,\r\n                    filter: undefined\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        historyDataState,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTestGroupDetails = (inputParam) => {\r\n    return (dispatch) => { //...inputParam, \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/getTestGroupTest\", {\r\n            ntestgrouptestcode: parseInt(inputParam['ntestgrouptestcode']),\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            // rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \r\n            //     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        },\r\n                        testskip: undefined,\r\n                        loading:false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getTestGroupComponentDetails = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => { //...inputParam, \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/testgroup/getTestByComponentId\", {\r\n            testgroupspecsampletype: inputParam['testgroupspecsampletype'],\r\n            userinfo: inputParam.userInfo\r\n        })\r\n            // rsapi.post(\"/testgroup/\"+inputParam.operation+inputParam.methodUrl, \r\n            //     {[inputParam.keyName]: inputParam.selectedRecord.testgroupspecification[0], userinfo: inputParam.userInfo})\r\n            .then(response => {\r\n                sortData(response.data);\r\n                if (searchRef.current)\r\n                    searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        testskip: 0,\r\n                        testtake: 5,\r\n                        loading:false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSpecification = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        if (inputParam.selectedRecord !== null) {\r\n            rsapi.post(\"/testgroup/\" + inputParam.operation + inputParam.methodUrl, {\r\n                ...inputParam,\r\n                [inputParam.keyName]: inputParam.selectedRecord\r\n            })\r\n                .then(response => {\r\n                    sortData(response.data);\r\n                    if (searchRef.current)\r\n                        searchRef.current.value = \"\";\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                ActiveKey: inputParam.activeKey,\r\n                                FocusKey: inputParam.focusKey,\r\n                                primaryKey: inputParam.primaryKey,\r\n                                ...response.data,\r\n                                selectedNode: inputParam.selectedRecord,\r\n                                searchedData: undefined,\r\n\r\n                            },\r\n                            historyDataState: {\r\n                                ...inputParam.historyDataState,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    if (error.response.status === 409 || error.response.status === 417) {\r\n                        toast.warn(error.response.data);\r\n                    } else {\r\n                        toast.error(error.message)\r\n                    }\r\n                });\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    masterData: {\r\n                        ...masterData,\r\n                        selectedNode: inputParam.selectedRecord,\r\n                        TestGroupSpecification: [],\r\n                        SelectedSpecification: {},\r\n                        TestGroupTest: [],\r\n                        TestGroupTestParameter: [],\r\n                        TestGroupTestNumericParameter: [],\r\n                        TestGroupTestFormula: [],\r\n                        TestGroupTestPredefinedParameter: [],\r\n                        TestGroupTestClinicalSpec: [],\r\n                        TestGroupTestCharParameter: [],\r\n                        ActiveKey: inputParam.activeKey,\r\n                        FocusKey: inputParam.focusKey,\r\n                        SelectedTest: {},\r\n                        selectedParameter: {},\r\n                        TestGroupSpecFile: [],\r\n                        TestGroupSpecificationHistory: [],\r\n                        SelectedComponent: undefined\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport const changeTestCategory = (inputParam, testGroupInputData) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestMasterByCategory\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                inputParam.selectedRecord.ntestcode = [];\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        selectedRecord: inputParam.selectedRecord,\r\n                        testGroupInputData: {\r\n                            ...testGroupInputData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const getSpecificationDetails = (inputParam, masterData, searchRef) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/get\" + inputParam.methodUrl, {\r\n            ...inputParam.inputData\r\n        })\r\n            .then(response => {\r\n                if (searchRef.current)\r\n                    searchRef.current.value = \"\";\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ...response.data,\r\n                            searchedData: undefined\r\n                        },\r\n                        screenName: inputParam.screenName\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 409 || error.response.status === 417) {\r\n                    toast.warn(error.response.data);\r\n                } else {\r\n                    toast.error(error.message)\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const editSpecFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        const masterData = inputParam.masterData;\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            if (inputParam.testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                inputParam.testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n                    userinfo: inputParam.userInfo\r\n                }),\r\n                rsapi.post(\"/testgroup/getActiveSpecFileById\", {\r\n                    userinfo: inputParam.userInfo,\r\n                    testgroupspecfile: inputParam.selectedRecord,\r\n                    ntreeversiontempcode: inputParam.filterData.ntreeversiontempcode.value\r\n                })\r\n                ]\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        const linkmaster = response[0].data.LinkMaster;\r\n                        const defaultLink = linkmaster.filter(item => item.ndefaultlink === transactionStatus.YES);\r\n                        const editObject = response[1].data;\r\n                        let nlinkcode = {};\r\n                        let link = {};\r\n                        if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                            nlinkcode = {\r\n                                \"label\": editObject.slinkname,\r\n                                \"value\": editObject.nlinkcode\r\n                            }\r\n                            link = {\r\n                                slinkfilename: editObject.sfilename,\r\n                                slinkdescription: editObject.sdescription,\r\n                                nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                                sfilesize: '',\r\n                                nfilesize: 0,\r\n                                ndefaultstatus: 4,\r\n                                sfilename: '',\r\n                            }\r\n\r\n                        } else {\r\n                            nlinkcode = defaultLink.length > 0 ? {\r\n                                \"label\": defaultLink[0].slinkname,\r\n                                \"value\": defaultLink[0].nlinkcode\r\n                            } : \"\"\r\n\r\n                            link = {\r\n                                slinkfilename: '',\r\n                                slinkdescription: '',\r\n                                sdescription: editObject.sdescription,\r\n                                nlinkdefaultstatus: 4,\r\n                                sfilesize: editObject.sfilesize,\r\n                                nfilesize: editObject.nfilesize,\r\n                                ndefaultstatus: editObject.ndefaultstatus,\r\n                                sfilename: editObject.sfilename,\r\n                            }\r\n                        }\r\n                        const selectedRecord = {\r\n                            // ...editObject,\r\n                            ...link,\r\n                            nallotedspeccode: editObject.nallotedspeccode,\r\n                            nspecfilecode: editObject.nspecfilecode,\r\n                            stypename: editObject.stypename,\r\n                            nattachmenttypecode: editObject.nattachmenttypecode,\r\n                            nlinkcode,\r\n                            // disabled: true\r\n                        };\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openModal: true,\r\n                                operation: \"update\",\r\n                                screenName: \"IDS_SPECFILE\",\r\n                                editFiles: Object.values(editObject).length > 0 && editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {},\r\n                                selectedRecord,\r\n                                ncontrolCode: inputParam.ncontrolCode\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 409 || error.response.status === 417) {\r\n                            toast.warn(error.response.data);\r\n                        } else {\r\n                            toast.error(error.message)\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTestGroupCodedResult = (operation, paramdata, userInfo, ncontrolCode, optionalData, masterData) => {\r\n    return (dispatch) => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n\r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED) {\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTEDTEMPLATEISRETIRED\" }));\r\n        }\r\n        else {\r\n            const testgroupspecification = optionalData.testgroupspecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"grade/getGrade\", {\r\n                        \"userinfo\": userInfo\r\n                    })\r\n                ];\r\n                if (operation === \"update\") {\r\n                    urlArray.push(rsapi.post(\"testgroup/getActivePredefinedParameterById\", {\r\n                        testgrouptestpredefinedparameter: paramdata,\r\n                        \"userinfo\": userInfo,\r\n                        testgroupspecification\r\n                    }));\r\n                }\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let selectedRecord = {};\r\n                        const gradeMap = constructOptionList(response[0].data || [], \"ngradecode\", \"sdisplaystatus\", false, false, true);\r\n                        const grade = gradeMap.get(\"OptionList\");\r\n                        if (operation === \"update\") {\r\n                            const editCodedResult = response[1].data;\r\n                            selectedRecord = {\r\n                                ntestgrouptestpredefcode: paramdata[\"ntestgrouptestpredefcode\"],\r\n                                ntestgrouptestparametercode: paramdata[\"ntestgrouptestparametercode\"],\r\n                                ngradecode: {\r\n                                    \"label\": editCodedResult[\"sdisplaystatus\"],\r\n                                    \"value\": editCodedResult[\"ngradecode\"]\r\n                                },\r\n                                spredefinedname: editCodedResult[\"spredefinedname\"]\r\n                            }\r\n                        } else {\r\n                            selectedRecord = {\r\n                                ngradecode: gradeMap.get(\"DefaultValue\")\r\n                                // {\r\n                                //     \"value\": grade[0].ngradecode,\r\n                                //     \"label\": grade[0][\"sdisplaystatus\"]\r\n                                // }\r\n                            }\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                showSaveContinue: false,\r\n                                operation: operation,\r\n                                screenName: \"IDS_CODEDRESULT\",\r\n                                parameterData: {\r\n                                    grade,\r\n                                    needCodedResult: false\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const addTestGroupNumericTab = (operation, paramdata, userInfo, optionalData, masterData, ncontrolCode) => {\r\n    return (dispatch) => {\r\n        const treeVersionTemplateIndex = masterData[\"TreeVersionTemplate\"].findIndex(\r\n            x => x[\"ntreeversiontempcode\"] === masterData.selectedNode[\"ntreeversiontempcode\"]);\r\n      \r\n        const templateVersionStatus = masterData[\"TreeVersionTemplate\"][treeVersionTemplateIndex].ntransactionstatus\r\n        if (templateVersionStatus === transactionStatus.RETIRED){\r\n            toast.warn(intl.formatMessage({id: \"IDS_SELECTEDTEMPLATEISRETIRED\"}));\r\n        }\r\n        else\r\n        {\r\n            const testgroupspecification = optionalData.testgroupspecification;\r\n            if (testgroupspecification.napprovalstatus === transactionStatus.DRAFT ||\r\n                testgroupspecification.napprovalstatus === transactionStatus.CORRECTION) {\r\n                dispatch(initRequest(true));\r\n                const urlArray = [\r\n                    rsapi.post(\"patient/getGender\", {\r\n                        \"userinfo\": userInfo\r\n                    })\r\n                ];\r\n                if (operation === \"update\") {\r\n                    urlArray.push(rsapi.post(\"testgroup/getActiveClinicalSpecById\", {\r\n                        testgrouptestpredefinedparameter: paramdata,\r\n                        \"userinfo\": userInfo,\r\n                        testgroupspecification\r\n                    }));\r\n                }\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n                        let selectedRecord = {};\r\n                        const gradeMap = constructOptionList(response[0].data.genderList || [], \"ngendercode\", \"sgendername\", false, false, true);\r\n                        const grade = gradeMap.get(\"OptionList\");\r\n                        if (operation === \"update\") {\r\n                            const editCodedResult = response[1].data;\r\n                            selectedRecord = {\r\n                                ntestgrouptestclinicspeccode: paramdata[\"ntestgrouptestclinicspeccode\"],\r\n                                ntestgrouptestparametercode: paramdata[\"ntestgrouptestparametercode\"],\r\n                                nfromage: paramdata[\"nfromage\"],\r\n                                ntoage: paramdata[\"ntoage\"],\r\n                                ngendercode: {\r\n                                    \"label\": editCodedResult[\"sgendername\"],\r\n                                    \"value\": editCodedResult[\"ngendercode\"]\r\n                                },\r\n                                nhigha: editCodedResult[\"shigha\"],\r\n                                nhighb: editCodedResult[\"shighb\"],\r\n                                nlowa: editCodedResult[\"slowa\"],\r\n                                nlowb: editCodedResult[\"slowb\"]\r\n                            }\r\n                        } else {\r\n                            selectedRecord = {\r\n                                ngendercode: gradeMap.get(\"DefaultValue\")\r\n                                // {\r\n                                //     \"value\": grade[0].ngradecode,\r\n                                //     \"label\": grade[0][\"sdisplaystatus\"]\r\n                                // }\r\n                            }\r\n                        }\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                openChildModal: true,\r\n                                showSaveContinue: false,\r\n                                operation: operation,\r\n                                screenName: \"IDS_CLINICALSPEC\",\r\n                                parameterData: {\r\n                                    grade,\r\n                                    needCodedResult: false\r\n                                },\r\n                                selectedRecord,\r\n                                ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: {\r\n                                loading: false\r\n                            }\r\n                        });\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        } else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: \"IDS_SPECIFICATIONSTATUSMUSTBEDRAFTCORRECTION\"\r\n                }));\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const viewTestGroupCheckList = (inputParam, userInfo) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"checklist/viewTemplate\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        openTemplateModal: true,\r\n                        testGroupCheckList: {\r\n                            templateData: response.data\r\n                        },\r\n                        loading: false,\r\n                        selectedRecord: {}\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\n\r\nexport const reportSpecification = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/specReportGenerate\", {\r\n            ...inputParam,\r\n            ntreeversiontempcode: inputParam.filterData.ntreeversiontempcode.value\r\n        })\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false,\r\n                        showConfirmAlert: false\r\n                    }\r\n                })\r\n                document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                document.getElementById(\"download_data\").click();\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport const retireSpecification = (inputParam, masterData) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"testgroup/retireSpec\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n\r\n                // const TestGroupSpecification = response.data.TestGroupSpecificationHistory ;\r\n                sortData(response.data);\r\n                masterData = {\r\n                    ...masterData,\r\n                    ...response.data,\r\n\r\n                };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                })\r\n            }).catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const getDataForTestMaterial = (screenName, operation, userInfo, ncontrolCode, selectedRecord, masterData, primaryKeyName) => {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        const materialTypeUrl = rsapi.post(\"materialcategory/getMaterialType\", { \"userinfo\": userInfo });\r\n        const validationUrl = rsapi.post(\"testgroup/validationForRetiredTemplate\", { \"userinfo\": userInfo ,ntreeversiontempcode:masterData.selectedNode.ntreeversiontempcode});\r\n\r\n        urlArray = [materialTypeUrl,validationUrl];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (masterData.SelectedTest&&masterData.SelectedTest!==undefined) {\r\n\r\n                    if (response[1].data === \"Success\") {\r\n\r\n                        const materialTypeMap = constructOptionList(response[0].data || [], \"nmaterialtypecode\",\r\n                            \"smaterialtypename\", undefined, undefined, false);\r\n\r\n                        const materialType = materialTypeMap.get(\"OptionList\");\r\n                        const materialTypedefault = materialTypeMap.get(\"DefaultValue\");\r\n\r\n                        selectedRecord[\"nmaterialtypecode\"] = materialTypedefault;\r\n                        if (selectedRecord[\"nmaterialtypecode\"] !== undefined) {\r\n                            let inputData = []\r\n                            let inputParam = { operation: operation, selectedRecord: selectedRecord, materialType: materialType, inputData: { nmaterialtypecode: materialTypedefault.value }, materialType: materialType, masterData: masterData, screenName: screenName }\r\n                            dispatch(getMaterialCategoryBasedMaterialType(inputParam));\r\n\r\n                        } else {\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN,\r\n                                payload: {\r\n                                    materialType: materialType,\r\n                                    materialList: undefined,\r\n                                    materialCategoryList: undefined,\r\n                                    isOpen: true,\r\n                                    operation: operation,\r\n                                    screenName: screenName,\r\n                                    openChildModal: true,\r\n                                    ncontrolCode: ncontrolCode,\r\n                                    loading: false,\r\n                                }\r\n                            });\r\n                        }\r\n                    }\r\n                    else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: response[1].data\r\n                        }));\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN,\r\n                            payload: { \r\n                                operation: operation,\r\n                                screenName: screenName,\r\n                                ncontrolCode: ncontrolCode,\r\n                                loading: false\r\n                            }\r\n                        });\r\n\r\n                    }\r\n                }\r\n                else {\r\n                \r\n                    toast.warn(intl.formatMessage({\r\n                        id: \"IDS_NEEDTOADDTEST\"\r\n                    }));\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: { \r\n                            operation: operation,\r\n                            screenName: screenName,\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getMaterialCategoryBasedMaterialType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"material/getMaterialcombo\", { nmaterialtypecode: inputParam.inputData.nmaterialtypecode })\r\n            .then(response => {\r\n                let selectedRecord = {}\r\n                selectedRecord = inputParam.selectedRecord\r\n\r\n                const materialCategoryMap = constructOptionList(response.data.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                    \"smaterialcatname\", undefined, undefined, false);\r\n\r\n                const materialCategoryList = materialCategoryMap.get(\"OptionList\");\r\n                const materialCategorydefault = materialCategoryMap.get(\"DefaultValue\");\r\n               selectedRecord['nmaterialcatcode'] = materialCategorydefault;\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                if (response.data.MaterialCategoryMain.length === 0) {\r\n                    if (selectedRecord['nmaterialcatcode']) {\r\n                        delete selectedRecord['nmaterialcatcode']\r\n\r\n                    }\r\n                    if (selectedRecord['nmaterialcode']) {\r\n                        delete selectedRecord['nmaterialcode']\r\n\r\n                    }\r\n                }\r\n                let materialList = []\r\n                if (materialCategoryList.length !== 0) {\r\n                    materialList = materialList\r\n                    inputParam = { ...inputParam, responsecat: response, materialCategoryList: materialCategoryList, selectedRecord: selectedRecord, \r\n                        inputData: { \r\n                            //nmaterialcatcode: materialCategorydefault.value,\r\n                        nmaterialtypecode:inputParam.inputData.nmaterialtypecode }\r\n}\r\n                    dispatch(getMaterialBasedMaterialCategory(inputParam));\r\n                }\r\n\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            openChildModal: true,\r\n                            screenName: inputParam.screenName,\r\n                            masterData, loading: false,\r\n                            materialCategoryList: materialCategoryList,\r\n                            materialType:inputParam.materialType,\r\n                            materialList: materialList,\r\n                            selectedRecord: selectedRecord,\r\n                            operation:inputParam.operation\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getMaterialBasedMaterialCategory(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"testgroup/getAvailableMaterial\", {\r\n            nmaterialtypecode: inputParam.inputData.nmaterialtypecode, nmaterialcatcode: inputParam.inputData.nmaterialcatcode !== undefined\r\n                ? inputParam.inputData.nmaterialcatcode : inputParam.responsecat.data.MaterialCategoryMain[0].nmaterialcatcode,\r\n            ntestgrouptestcode:inputParam.masterData.SelectedTest.ntestgrouptestcode\r\n        })\r\n            .then(response => {\r\n\r\n                let selectedRecord = inputParam.selectedRecord;\r\n\r\n                const materialMap = constructjsonOptionList(response.data.MaterialCombo || [], \"nmaterialcode\",\r\n                    \"Material Name\", undefined, undefined, false);\r\n\r\n                const materialList = materialMap.get(\"OptionList\");\r\n                \r\n                if (response.data.MaterialCombo.length === 0) {\r\n                    delete selectedRecord['nmaterialcode']\r\n                }\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                if (inputParam.materialCategoryList) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            materialCategoryList: inputParam.materialCategoryList,\r\n                            masterData, loading: false,\r\n                            materialList: materialList,\r\n                            openChildModal: true,\r\n                            screenName: inputParam.screenName,\r\n                            selectedRecord: inputParam.selectedRecord,\r\n                            materialType: inputParam.materialType,\r\n                            operation:inputParam.operation\r\n\r\n\r\n\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            masterData, loading: false,\r\n                            materialList: materialList,\r\n                            openChildModal: true,\r\n\r\n\r\n                        }\r\n                    });\r\n                }\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport const getTestGroupMaterial = (inputParam) => {\r\n    return (dispatch) => {\r\n        rsapi.post(\"/testgroup/getTestGroupTestMaterial\", {\r\n            ...inputParam\r\n        })\r\n            .then(response => {\r\n                sortData(response.data);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport const getDataForEditTestMaterial = (screenName, operation, userInfo, ncontrolCode, selectedRecord, Data, primaryKeyName) => {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        const materialTypeUrl = rsapi.post(\"materialcategory/getMaterialType\", { \"userinfo\": userInfo });\r\n        const materialCatUrl = rsapi.post(\"material/getMaterialcombo\", { nmaterialtypecode: Data.selectedMaterial.nmaterialtypecode });\r\n        const materialUrl = rsapi.post(\"materialinventory/getMaterialInventorycombo\", { nmaterialcatcode: Data.selectedMaterial.nmaterialcatcode, nmaterialtypecode: Data.selectedMaterial.nmaterialtypecode });\r\n        const materialById = rsapi.post(\"testgroup/getActiveTestMaterialById\", {\r\n            [primaryKeyName]: Data.selectedMaterial.ntestgrouptestmaterialcode, \"userinfo\": userInfo\r\n        });\r\n        const validationUrl = rsapi.post(\"testgroup/validationForRetiredTemplate\", { \"userinfo\": userInfo ,ntreeversiontempcode:Data.selectedNode.ntreeversiontempcode});\r\n\r\n        urlArray = [materialTypeUrl, materialCatUrl, materialUrl, materialById,validationUrl];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (response[4].data === \"Success\") {\r\n\r\n                let selectedRecord = {};\r\n                let MaterialCategoryData = [];\r\n                let MaterialTypeData = [];\r\n                let MaterialData = [];\r\n\r\n                const materialTypeMap = constructOptionList(response[0].data || [], \"nmaterialtypecode\",\r\n                    \"smaterialtypename\", undefined, undefined, false);\r\n\r\n                const materialType = materialTypeMap.get(\"OptionList\");\r\n\r\n                const materialCategoryMap = constructOptionList(response[1].data.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                    \"smaterialcatname\", undefined, undefined, false);\r\n\r\n                const materialCategoryList = materialCategoryMap.get(\"OptionList\");\r\n                const materialMap = constructjsonOptionList(response[2].data.MaterialCombo || [], \"nmaterialcode\",\r\n                    \"Material Name\", undefined, undefined, false);\r\n\r\n                const materialList = materialMap.get(\"OptionList\");\r\n\r\n                MaterialCategoryData.push({\r\n                    \"value\": response[3].data[\"nmaterialcatcode\"],\r\n                    \"label\": response[3].data[\"smaterialcatname\"]\r\n                });\r\n                MaterialTypeData.push({\r\n                    \"value\": response[3].data[\"nmaterialtypecode\"],\r\n                    \"label\": response[3].data[\"smaterialtypename\"]\r\n                });\r\n                MaterialData.push({\r\n                    \"value\": response[3].data[\"nmaterialcode\"],\r\n                    \"label\": response[3].data[\"smaterialname\"]\r\n                });\r\n\r\n                selectedRecord = response[3].data;\r\n                selectedRecord[\"nmaterialcatcode\"] = MaterialCategoryData[0];\r\n                selectedRecord[\"nmaterialtypecode\"] = MaterialTypeData[0];\r\n                selectedRecord[\"nmaterialcode\"] = MaterialData[0];\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        materialType: materialType,\r\n                        materialList: materialList,\r\n                        materialCategoryList: materialCategoryList,\r\n                        selectedRecord: selectedRecord,\r\n                        isOpen: true,\r\n                        operation: operation,\r\n                        screenName: screenName,\r\n                        openChildModal: true,\r\n                        ncontrolCode: ncontrolCode,\r\n                        loading: false,\r\n                    }\r\n                });\r\n            } else {\r\n                toast.warn(intl.formatMessage({\r\n                    id: response[4].data\r\n                }));\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: { \r\n                        operation: operation,\r\n                        screenName: screenName,\r\n                        ncontrolCode: ncontrolCode,\r\n                        loading: false\r\n                    }\r\n                });\r\n\r\n            }\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}