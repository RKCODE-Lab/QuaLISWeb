{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{toast}from'react-toastify';import AddEmailConfig from'./AddEmailConfig';import EmailConfigTab from'./EmailConfigTab';import AddUsersEmailConfig from'./AddUsersEmailConfig';import Esign from'../../audittrail/Esign';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import{getEmailConfigDetail,callService,crudMaster,fetchEmailConfigById,getUserEmailConfig,filterColumnData,validateEsignCredential,openEmailConfigModal,getFormControls,updateStore}from'../../../actions';import{constructOptionList,getControlMap,showEsign}from'../../../components/CommonScript';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import{transactionStatus}from'../../../components/Enumeration';import{ContentPanel,ReadOnlyText}from'../../../components/App.styles';import{faPencilAlt,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';// import ConfirmDialog from '../../../components/confirm-alert/confirm-alert.component';\nimport ListMaster from'../../../components/list-master/list-master.component';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport ConfirmMessage from'../../../components/confirm-alert/confirm-message.component';// import ReactTooltip from 'react-tooltip';\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var EmailConfig=/*#__PURE__*/function(_React$Component){_inherits(EmailConfig,_React$Component);var _super=_createSuper(EmailConfig);function EmailConfig(props){var _this;_classCallCheck(this,EmailConfig);_this=_super.call(this,props);_this.ConfirmDelete=function(screenname,SelectedEmailConfig,operation,ncontrolcode){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteRecord(//screenname, SelectedEmailConfig, \noperation,ncontrolcode);});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null,EmailUserQuery:[]}};_this.props.updateStore(updateInfo);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(fieldName==='nusercode'){selectedRecord[\"nusercode\"]=comboData;var availableDatas=\"\";var availableList=[];_this.state.selectedRecord.nusercode.map(function(data){availableDatas=availableDatas+\",\"+data.value;availableList.push(data.item);return availableDatas;});_this.setState({selectedRecord:selectedRecord,availableDatas:availableDatas,availableList:availableList});}else if(fieldName==='nemailscreencode'){selectedRecord[fieldName]=comboData;_this.props.getFormControls(selectedRecord,_this.props.Login.userInfo);}else{//  const selectedRecord = this.state.selectedRecord || {};\nselectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});}//     //const selectedRecord = this.state.selectedRecord || {};\n//     selectedRecord[\"nusercode\"] = comboData;\n//     let availableDatas =\"\";\n//     let availableList= [];\n//     this.state.selectedRecord.nusercode.map(data=> {\n//         availableDatas=availableDatas+\",\"+data.value;\n//         availableList.push(data.item);\n//     return availableDatas;\n//      });\n//     this.setState({ selectedRecord,availableDatas,availableList });\n// }\n// else if(fieldName==='nuserrolecode'){\n//     selectedRecord[\"nuserrolecode\"] = comboData;\n// }\n// else {\n//    // const selectedRecord = this.state.selectedRecord || {};\n//     selectedRecord[fieldName] = comboData;\n//     this.setState({ selectedRecord });\n// }\n// if(fieldName==='nuserrolecode'){\n//     this.props.onuseroleChange(this.props.Login.masterData,comboData.value,this.props.Login.userInfo,selectedRecord,this.state.availableList)\n// }\n};_this.deleteUsersRecord=function(inputData){var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"Users\",inputData:{\"emailuserconfig\":inputData.selectedRecord,\"userinfo\":_this.props.Login.userInfo},operation:'delete',displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState,isChild:true,postParam:{inputListName:\"EmailConfig\",selectedObject:\"SelectedEmailConfig\",primaryKeyField:\"nemailconfigcode\",fetchUrl:\"emailconfig/getEmailConfig\",fecthInputObject:{userinfo:_this.props.Login.userInfo}}};var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:'IDS_USERS',operation:'delete'}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.deleteRecord=function(//screenname, SelectedEmailConfig, \noperation,ncontrolcode){var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"EmailConfig\",inputData:{\"emailuserconfig\":_this.props.Login.masterData.SelectedEmailConfig,\"userinfo\":_this.props.Login.userInfo},operation:operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState,postParam:{inputListName:\"EmailConfig\",selectedObject:\"SelectedEmailConfig\",primaryKeyField:\"nemailconfigcode\",fetchUrl:\"emailconfig/getEmailConfig\",fecthInputObject:{userinfo:_this.props.Login.userInfo}}};var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolcode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");}};_this.reloadData=function(){_this.searchRef.current.value=\"\";var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"EmailConfig\",userInfo:_this.props.Login.userInfo,displayName:_this.props.Login.inputParam.displayName};_this.props.callService(inputParam);};_this.onSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;var selectedRecord=_this.state.selectedRecord;if(_this.props.Login.operation===\"update\"){// edit\npostParam={inputListName:\"EmailConfig\",selectedObject:\"SelectedEmailConfig\",primaryKeyField:\"nemailconfigcode\"};inputData[\"emailconfig\"]=JSON.parse(JSON.stringify(selectedRecord));//inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\n}else{inputData[\"emailconfig\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};// ALPD-4077 (15-05-2024) Changed this.state.availableDatas to selectedRecord[\"nusercode\"] to form nusercode as string by joining comma\ninputData[\"emailuserconfig\"]=selectedRecord[\"nusercode\"]&&selectedRecord[\"nusercode\"].length>0?selectedRecord[\"nusercode\"].map(function(item){return item.value;}).join(\",\"):null;}//inputData[\"emailconfig\"][\"ntranscode\"] = this.state.selectedRecord[\"ntranscode\"] ? this.state.selectedRecord[\"ntranscode\"] : 14;\ninputData[\"emailconfig\"][\"nneedattachment\"]=selectedRecord[\"nneedattachment\"]?selectedRecord[\"nneedattachment\"]:4;inputData[\"emailconfig\"][\"nenableemail\"]=selectedRecord[\"nenableemail\"]?selectedRecord[\"nenableemail\"]:transactionStatus.NO;//inputData[\"emailconfig\"][\"nactiontype\"] = selectedRecord[\"nactiontype\"] ? selectedRecord[\"nactiontype\"].value : -1;\ninputData[\"emailconfig\"][\"ncontrolcode\"]=selectedRecord[\"ncontrolcode\"]?selectedRecord[\"ncontrolcode\"].value:-1;inputData[\"emailconfig\"][\"nformcode\"]=selectedRecord[\"nemailscreencode\"]?selectedRecord.nemailscreencode.item.nformcode:-1;inputData[\"emailconfig\"][\"nemailtemplatecode\"]=selectedRecord[\"nemailtemplatecode\"]?selectedRecord[\"nemailtemplatecode\"].value:-1;inputData[\"emailconfig\"][\"nemailscreencode\"]=selectedRecord[\"nemailscreencode\"]?selectedRecord[\"nemailscreencode\"].value:-1;inputData[\"emailconfig\"][\"nemailhostcode\"]=selectedRecord[\"nemailhostcode\"]?selectedRecord[\"nemailhostcode\"].value:-1;inputData[\"emailconfig\"][\"nemailuserquerycode\"]=selectedRecord[\"nemailuserquerycode\"]?selectedRecord[\"nemailuserquerycode\"].value:-1;inputData[\"emailconfig\"][\"nstatus\"]=transactionStatus.ACTIVE;if(inputData[\"emailconfig\"][\"nemailuserquerycode\"]===undefined){inputData[\"emailconfig\"][\"nemailuserquerycode\"]=-1;}var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"EmailConfig\",displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}// this.props.crudMaster(inputParam, this.props.Login.masterData,\"openModal\");\n};_this.onUserSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;var selectedId=null;var selectedRecord=_this.state.selectedRecord;// ALPD-4077 (15-05-2024) Changed this.state.availableDatas to selectedRecord[\"nusercode\"] to form nusercode as string by joining comma\ninputData[\"nusercode\"]=selectedRecord[\"nusercode\"]&&selectedRecord[\"nusercode\"].length>0?selectedRecord[\"nusercode\"].map(function(item){return item.value;}).join(\",\"):null;inputData[\"nemailconfigcode\"]=_this.props.Login.masterData.SelectedEmailConfig.nemailconfigcode?_this.props.Login.masterData.SelectedEmailConfig.nemailconfigcode:-1;inputData[\"nstatus\"]=transactionStatus.ACTIVE;var inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"Users\",displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:inputData,operation:_this.props.Login.operation,isChild:true,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,selectedId:selectedId};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}// this.props.crudMaster(inputParam, this.props.Login.masterData,\"openModal\");\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.formRef=React.createRef();// this.closeModal = this.closeModal.bind(this);\n_this.extractedColumnList=[];_this.userColumnList=[];_this.fieldList=[];_this.state={availableDatas:\"\",availableList:\"\",dataSource:[],masterStatus:\"\",error:\"\",selectedRecord:{},isOpen:false,EmailHost:[],EmailScreen:[],ActionType:[],EmailTemplate:[],userRoleControlRights:[],controlMap:new Map()};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.searchFieldList=[\"shostname\",\"sscreenname\",\"scontrolids\",\"sformname\",\"stemplatename\"];return _this;}_createClass(EmailConfig,[{key:\"render\",value:function render(){var _this2=this;this.extractedColumnList=[{\"controlType\":\"textbox\",\"idsName\":\"IDS_USERS\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"controlType\":\"textbox\",\"idsName\":\"IDS_EMAILID\",\"dataField\":\"semail\",\"width\":\"200px\"}];var mandatoryFieldsEmailConfig=[{\"mandatory\":true,\"idsName\":\"IDS_HOSTNAME\",\"dataField\":\"nemailhostcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_SCREENNAME\",\"dataField\":\"nemailscreencode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_TEMPLATENAME\",\"dataField\":\"nemailtemplatecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"mandatory\":true,\"idsName\":\"IDS_CONTROLNAME\",\"dataField\":\"ncontrolcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var mandatoryFieldsUsers=[{\"mandatory\":true,\"idsName\":\"IDS_USERS\",\"dataField\":\"nusercode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var addId=this.props.Login.inputParam&&this.state.controlMap.has(\"AddEmailConfig\")&&this.state.controlMap.get(\"AddEmailConfig\").ncontrolcode;var editID=this.props.Login.inputParam&&this.state.controlMap.has(\"EditEmailConfig\")&&this.state.controlMap.get(\"EditEmailConfig\").ncontrolcode;var deleteID=this.props.Login.inputParam&&this.state.controlMap.has(\"DeleteEmailConfig\")&&this.state.controlMap.get(\"DeleteEmailConfig\").ncontrolcode;var addUserId=this.props.Login.inputParam&&this.state.controlMap.has(\"AddEmailConfigUsers\")&&this.state.controlMap.get(\"AddEmailConfigUsers\").ncontrolcode;var editParam={SelectedEmailConfig:this.props.Login.masterData.SelectedEmailConfig,screenName:\"IDS_MAILCONFIG\",primaryKeyField:\"nemailconfigcode\",operation:\"update\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editID};var deleteParam={operation:\"delete\"};var filterParam={inputListName:\"EmailConfig\",selectedObject:\"SelectedEmailConfig\",primaryKeyField:\"nemailconfigcode\",fetchUrl:\"emailconfig/getEmailConfig\",fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(\"div\",{className:\"list-fixed-wrap\"},/*#__PURE__*/React.createElement(ListMaster,{screenName:this.props.intl.formatMessage({id:\"IDS_MAILCONFIG\"}),masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.EmailConfig,getMasterDetail:function getMasterDetail(emailconfig){return _this2.props.getEmailConfigDetail(emailconfig,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.SelectedEmailConfig,primaryKeyField:\"nemailconfigcode\",mainField:\"stemplatename\",firstField:\"sscreenname\",secondField:\"scontrolids\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,openModal:function openModal(){return _this2.props.openEmailConfigModal(\"IDS_MAILCONFIG\",\"create\",_this2.props.Login.userInfo,addId);},isMultiSelecct:false,hidePaging:true}))))),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.EmailConfig&&this.props.Login.masterData.EmailConfig.length>0&&this.props.Login.masterData.SelectedEmailConfig?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedEmailConfig.stemplatename),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category title-grid-wrap-width-md\"},/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h6\",{className:\"title-grid-width-md product-title-sub flex-grow-1\"},this.props.Login.masterData.SelectedEmailConfig.shostname,' | ',this.props.Login.masterData.SelectedEmailConfig.senablestatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"product-category\",style:{float:\"right\"}},/*#__PURE__*/React.createElement(Nav.Link,{name:\"editUser\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"})//    data-for=\"tooltip_list_wrap\"\n,hidden:this.state.userRoleControlRights.indexOf(editID)===-1,className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",onClick:function onClick(){return _this2.props.fetchEmailConfigById(editParam);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteUser\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"})//   data-for=\"tooltip_list_wrap\"\n,className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",hidden:this.state.userRoleControlRights.indexOf(deleteID)===-1,onClick:function onClick(){return _this2.ConfirmDelete(\"IDS_MAILCONFIG\",_this2.props.Login.masterData.SelectedEmailConfig,\"delete\",deleteID);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Text,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_HOSTNAME\",message:\"Host Name\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedEmailConfig.shostname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SCREENNAME\",message:\"Screen Name\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedEmailConfig.sformname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MAILENABLE\",message:\"Mail Enable\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedEmailConfig.senablestatus))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CONTROLNAME\",message:\"Control Name\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedEmailConfig.scontrolids))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EMAILQUERY\",message:\"Email Query\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedEmailConfig.sdisplayname===null||this.props.Login.masterData.SelectedEmailConfig.sdisplayname.length===0||this.props.Login.masterData.SelectedEmailConfig.sdisplayname==='NA'?'-':this.props.Login.masterData.SelectedEmailConfig.sdisplayname))))),/*#__PURE__*/React.createElement(EmailConfigTab,{getUserEmailConfig:this.props.getUserEmailConfig,addUserId:addUserId,userInfo:this.props.Login.userInfo,inputParam:this.props.Login.inputParam,userRoleControlRights:this.state.userRoleControlRights,controlMap:this.state.controlMap,masterData:{\"users\":this.props.Login.masterData.users||[]}//  crudMaster={this.props.crudMaster}\n,methodUrl:\"EmailConfigUsers\",deleteRecord:this.deleteUsersRecord,deleteParam:deleteParam,SelectedEmailConfig:this.props.Login.masterData.SelectedEmailConfig,masterdata:this.props.Login.masterData}))):\"\"))))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.props.Login.screenName===\"IDS_USERS\"?this.onUserSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"IDS_USERS\"?mandatoryFieldsUsers:mandatoryFieldsEmailConfig,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName===\"IDS_MAILCONFIG\"?/*#__PURE__*/React.createElement(AddEmailConfig,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,emailHost:this.state.EmailHost||[],emailTemplate:this.state.EmailTemplate||[],emailScreen:this.state.EmailScreen||[]//actionType={this.state.ActionType || []}\n,formName:this.state.FormName,formControls:this.state.FormControls,emailQueryList:this.state.emailQueryList||[],users:this.props.Login.AvailableUsers||[],operation:this.props.Login.operation}):/*#__PURE__*/React.createElement(AddUsersEmailConfig,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,users:this.props.Login.users||[],operation:this.props.Login.operation})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.EmailHost!==previousProps.Login.EmailHost||this.props.Login.EmailTemplate!==previousProps.Login.EmailTemplate||this.props.Login.EmailScreen!==previousProps.Login.EmailScreen||this.props.Login.FormControls!==previousProps.Login.FormControls||this.props.Login.FormName!==previousProps.Login.FormName||this.props.Login.EmailUserQuery!==previousProps.Login.EmailUserQuery){var EmailHost=constructOptionList(this.props.Login.EmailHost||[],\"nemailhostcode\",\"shostname\",undefined,undefined,undefined);var EmailHostList=EmailHost.get(\"OptionList\");var EmailTemplate=constructOptionList(this.props.Login.EmailTemplate||[],\"nemailtemplatecode\",\"stemplatename\",undefined,undefined,undefined);var EmailTemplateList=EmailTemplate.get(\"OptionList\");var EmailScreen=constructOptionList(this.props.Login.EmailScreen||[],\"nemailscreencode\",\"sscreenname\",undefined,undefined,undefined);var EmailScreenList=EmailScreen.get(\"OptionList\");// const ActionType = constructOptionList(this.props.Login.ActionType || [], \"nactiontype\",\n//     \"stransdisplaystatus\", undefined, undefined, undefined);\n// const ActionTypeList = ActionType.get(\"OptionList\");\nvar FormName=constructOptionList(this.props.Login.FormName||[],\"nformcode\",\"sformname\",undefined,undefined,undefined);var FormNameList=FormName.get(\"OptionList\");var FormControls=constructOptionList(this.props.Login.FormControls||[],\"ncontrolcode\",\"scontrolids\",undefined,undefined,undefined);var FormControlList=FormControls.get(\"OptionList\");var EmailQuery=constructOptionList(this.props.Login.EmailUserQuery||[],\"nemailuserquerycode\",\"sdisplayname\",undefined,undefined,undefined);var EmailQueryList=EmailQuery.get(\"OptionList\");this.setState({EmailHost:EmailHostList,EmailTemplate:EmailTemplateList,EmailScreen:EmailScreenList,FormName:FormNameList,FormControls:FormControlList,emailQueryList:EmailQueryList});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return EmailConfig;}(React.Component);export default connect(mapStateToProps,{getEmailConfigDetail:getEmailConfigDetail,callService:callService,filterColumnData:filterColumnData,getUserEmailConfig:getUserEmailConfig,crudMaster:crudMaster,fetchEmailConfigById:fetchEmailConfigById,validateEsignCredential:validateEsignCredential,openEmailConfigModal:openEmailConfigModal,getFormControls:getFormControls,updateStore:updateStore})(injectIntl(EmailConfig));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/mail/emailconfig/EmailConfig.jsx"],"names":["React","connect","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","toast","AddEmailConfig","EmailConfigTab","AddUsersEmailConfig","Esign","SlideOutModal","getEmailConfigDetail","callService","crudMaster","fetchEmailConfigById","getUserEmailConfig","filterColumnData","validateEsignCredential","openEmailConfigModal","getFormControls","updateStore","constructOptionList","getControlMap","showEsign","DEFAULT_RETURN","transactionStatus","ContentPanel","ReadOnlyText","faPencilAlt","faTrashAlt","FontAwesomeIcon","ListMaster","ConfirmMessage","mapStateToProps","state","Login","EmailConfig","props","ConfirmDelete","screenname","SelectedEmailConfig","operation","ncontrolcode","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","closeModal","loadEsign","openModal","selectedRecord","updateInfo","typeName","data","selectedId","EmailUserQuery","onInputOnChange","event","target","type","name","checked","YES","NO","value","setState","onComboChange","comboData","fieldName","availableDatas","availableList","nusercode","map","push","item","userInfo","deleteUsersRecord","inputData","inputParam","classUrl","methodUrl","displayName","dataState","isChild","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","esignNeeded","userRoleControlRights","nformcode","ncontrolCode","screenData","masterData","screenName","reloadData","searchRef","current","onSaveClick","saveType","formRef","undefined","JSON","parse","stringify","nmastersitecode","length","join","nemailscreencode","ACTIVE","onUserSaveClick","nemailconfigcode","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","createRef","extractedColumnList","userColumnList","fieldList","dataSource","masterStatus","error","isOpen","EmailHost","EmailScreen","ActionType","EmailTemplate","controlMap","Map","searchFieldList","mandatoryFieldsEmailConfig","mandatoryFieldsUsers","addId","has","get","editID","deleteID","addUserId","editParam","deleteParam","filterParam","searchedData","emailconfig","stemplatename","shostname","senablestatus","float","indexOf","sformname","scontrolids","sdisplayname","users","FormName","FormControls","emailQueryList","AvailableUsers","previousProps","Object","values","EmailHostList","EmailTemplateList","EmailScreenList","FormNameList","FormControlList","EmailQuery","EmailQueryList","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport AddEmailConfig from './AddEmailConfig';\r\nimport EmailConfigTab from './EmailConfigTab';\r\nimport AddUsersEmailConfig from './AddUsersEmailConfig';\r\nimport Esign from '../../audittrail/Esign';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { getEmailConfigDetail, callService, crudMaster, fetchEmailConfigById, getUserEmailConfig, filterColumnData, validateEsignCredential, openEmailConfigModal, getFormControls, updateStore } from '../../../actions';\r\nimport { constructOptionList, getControlMap, showEsign } from '../../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport { ContentPanel, ReadOnlyText, } from '../../../components/App.styles';\r\nimport { faPencilAlt, faTrashAlt, } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import ConfirmDialog from '../../../components/confirm-alert/confirm-alert.component';\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\n// import ReactTooltip from 'react-tooltip';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass EmailConfig extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        // this.closeModal = this.closeModal.bind(this);\r\n        this.extractedColumnList = [];\r\n        this.userColumnList = [];\r\n        this.fieldList = [];\r\n\r\n\r\n\r\n        this.state = {\r\n            availableDatas: \"\",\r\n            availableList: \"\",\r\n            dataSource: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            isOpen: false,\r\n            EmailHost: [],\r\n            EmailScreen: [],\r\n            ActionType: [],\r\n            EmailTemplate: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchFieldList = [\"shostname\", \"sscreenname\", \"scontrolids\", \"sformname\", \"stemplatename\"];\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    };\r\n\r\n    ConfirmDelete = (screenname, SelectedEmailConfig, operation, ncontrolcode) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(//screenname, SelectedEmailConfig, \r\n                operation, ncontrolcode));\r\n    };\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            } else {\r\n                loadEsign = false;\r\n            }\r\n        } else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        \r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null, EmailUserQuery:[] }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    render() {\r\n        this.extractedColumnList = [\r\n                                    { \"controlType\": \"textbox\", \"idsName\": \"IDS_USERS\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n                                    { \"controlType\": \"textbox\", \"idsName\": \"IDS_EMAILID\", \"dataField\": \"semail\", \"width\": \"200px\" },\r\n                                ];\r\n\r\n        const mandatoryFieldsEmailConfig = [\r\n                                            { \"mandatory\": true, \"idsName\": \"IDS_HOSTNAME\", \"dataField\": \"nemailhostcode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                                            { \"mandatory\": true, \"idsName\": \"IDS_SCREENNAME\", \"dataField\": \"nemailscreencode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                                            { \"mandatory\": true, \"idsName\": \"IDS_TEMPLATENAME\", \"dataField\": \"nemailtemplatecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n                                            { \"mandatory\": true, \"idsName\": \"IDS_CONTROLNAME\", \"dataField\": \"ncontrolcode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}\r\n                                        ];\r\n\r\n        const mandatoryFieldsUsers = [{ \"mandatory\": true, \"idsName\": \"IDS_USERS\", \"dataField\": \"nusercode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"}];\r\n        \r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"AddEmailConfig\")\r\n            && this.state.controlMap.get(\"AddEmailConfig\").ncontrolcode;\r\n\r\n        const editID = this.props.Login.inputParam && this.state.controlMap.has(\"EditEmailConfig\")\r\n            && this.state.controlMap.get(\"EditEmailConfig\").ncontrolcode;\r\n\r\n        const deleteID = this.props.Login.inputParam && this.state.controlMap.has(\"DeleteEmailConfig\")\r\n            && this.state.controlMap.get(\"DeleteEmailConfig\").ncontrolcode;\r\n\r\n\r\n        const addUserId = this.props.Login.inputParam && this.state.controlMap.has(\"AddEmailConfigUsers\")\r\n            && this.state.controlMap.get(\"AddEmailConfigUsers\").ncontrolcode;\r\n\r\n        const editParam = {\r\n            SelectedEmailConfig: this.props.Login.masterData.SelectedEmailConfig,\r\n            screenName: \"IDS_MAILCONFIG\", primaryKeyField: \"nemailconfigcode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editID\r\n        };\r\n\r\n        const deleteParam = { operation: \"delete\" };\r\n\r\n        const filterParam = {  inputListName: \"EmailConfig\", selectedObject: \"SelectedEmailConfig\", primaryKeyField: \"nemailconfigcode\",\r\n                                fetchUrl: \"emailconfig/getEmailConfig\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                                masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n                            };\r\n        return (<>\r\n            {/* Start of get display*/}\r\n            <div className=\"client-listing-wrap mtop-4\">\r\n                <Row noGutters={true}>\r\n                    <Col md={4}>\r\n                        <Row noGutters={true}><Col md={12}>\r\n                            <div className=\"list-fixed-wrap\">\r\n                                <ListMaster\r\n                                    screenName={this.props.intl.formatMessage({ id: \"IDS_MAILCONFIG\" })}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.EmailConfig}\r\n                                    getMasterDetail={(emailconfig) => this.props.getEmailConfigDetail(emailconfig, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                    selectedMaster={this.props.Login.masterData.SelectedEmailConfig}\r\n                                    primaryKeyField=\"nemailconfigcode\"\r\n                                    mainField=\"stemplatename\"\r\n                                    firstField= \"sscreenname\"\r\n                                    secondField= \"scontrolids\"\r\n                                    filterColumnData={this.props.filterColumnData}\r\n                                    filterParam={filterParam}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    addId={addId}\r\n                                    searchRef={this.searchRef}\r\n                                    reloadData={this.reloadData}\r\n                                    openModal={() => this.props.openEmailConfigModal(\"IDS_MAILCONFIG\", \"create\", this.props.Login.userInfo, addId)}\r\n                                    isMultiSelecct={false}\r\n                                    hidePaging={true}\r\n                                />\r\n                            </div>\r\n                        </Col></Row>\r\n                    </Col>\r\n                    <Col md={8}>\r\n                        <Row><Col md={12}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.EmailConfig && this.props.Login.masterData.EmailConfig.length > 0 && this.props.Login.masterData.SelectedEmailConfig ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                                                <Card.Title className=\"product-title-main\">\r\n                                                    {this.props.Login.masterData.SelectedEmailConfig.stemplatename}\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category title-grid-wrap-width-md\">\r\n                                                        <div>\r\n                                                        <h6 className=\"title-grid-width-md product-title-sub flex-grow-1\">\r\n                                                            {this.props.Login.masterData.SelectedEmailConfig.shostname}{' | '}{this.props.Login.masterData.SelectedEmailConfig.senablestatus}\r\n                                                            {/* <FormattedMessage id= {this.props.Login.masterData.SelectedUser.sactivestatus}/> */}\r\n                                                        </h6>\r\n                                                        </div>\r\n                                                       \r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                        <div className=\"product-category\" style={{ float: \"right\" }}>\r\n                                                            <Nav.Link name=\"editUser\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //    data-for=\"tooltip_list_wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editID) === -1}\r\n                                                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                onClick={() => this.props.fetchEmailConfigById(editParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link name=\"deleteUser\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                             //   data-for=\"tooltip_list_wrap\"\r\n                                                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteID) === -1}\r\n                                                                onClick={() => this.ConfirmDelete(\"IDS_MAILCONFIG\", this.props.Login.masterData.SelectedEmailConfig, \"delete\", deleteID)}>\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <ConfirmDialog \r\n                                                                name=\"deleteMessage\" \r\n                                                                message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\"})}\r\n                                                                doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}  \r\n                                                                doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                icon={faTrashAlt}\r\n                                                               // title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                //hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                handleClickDelete={() => this.deleteRecord(\"IDS_MAILCONFIG\", this.props.Login.masterData.SelectedEmailConfig, \r\n                                                                \"delete\", deleteID)} \r\n                                                            /> */}\r\n                                                            </Nav.Link>\r\n                                                        </div>\r\n                                                        {/* </Tooltip> */}\r\n                                                    </div>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Text>\r\n                                                    <Row>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_HOSTNAME\" message=\"Host Name\" /></FormLabel>\r\n                                                                <ReadOnlyText>{this.props.Login.masterData.SelectedEmailConfig.shostname}</ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_SCREENNAME\" message=\"Screen Name\" /></FormLabel>\r\n                                                                <ReadOnlyText>{this.props.Login.masterData.SelectedEmailConfig.sformname}</ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MAILENABLE\" message=\"Mail Enable\" /></FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.SelectedEmailConfig.senablestatus}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        {/* <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_FORMNAME\" message=\"Form Name\" /></FormLabel>\r\n                                                                <ReadOnlyText>{this.props.Login.masterData.SelectedEmailConfig.sformname}</ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col> */}\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_CONTROLNAME\" message=\"Control Name\" /></FormLabel>\r\n                                                                <ReadOnlyText>{this.props.Login.masterData.SelectedEmailConfig.scontrolids}</ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_EMAILQUERY\" message=\"Email Query\" /></FormLabel>\r\n                                                                <ReadOnlyText>{this.props.Login.masterData.SelectedEmailConfig.sdisplayname === null || \r\n                                                                this.props.Login.masterData.SelectedEmailConfig.sdisplayname.length === 0 ||\r\n                                                                this.props.Login.masterData.SelectedEmailConfig.sdisplayname === 'NA' ? '-' :\r\n                                                                    this.props.Login.masterData.SelectedEmailConfig.sdisplayname}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n\r\n                                                        {/* <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_ACTIONTYPE\" message=\"Action Type\" /></FormLabel>\r\n                                                                <ReadOnlyText>{this.props.Login.masterData.SelectedEmailConfig.sactiontype}</ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col> */}\r\n                                                    </Row>\r\n                                                </Card.Text>\r\n                                                <EmailConfigTab\r\n                                                    getUserEmailConfig={this.props.getUserEmailConfig}\r\n                                                    addUserId={addUserId}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    masterData={{\r\n                                                        \"users\": this.props.Login.masterData.users || [],\r\n                                                    }}\r\n                                                    //  crudMaster={this.props.crudMaster}\r\n                                                    methodUrl=\"EmailConfigUsers\"\r\n                                                    deleteRecord={this.deleteUsersRecord}\r\n                                                    deleteParam={deleteParam}\r\n                                                    SelectedEmailConfig={this.props.Login.masterData.SelectedEmailConfig}\r\n                                                    masterdata={this.props.Login.masterData}\r\n                                                />\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col></Row>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            {this.props.Login.openModal &&\r\n                <SlideOutModal\r\n                    show={this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.operation}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.props.Login.screenName === \"IDS_USERS\" ? this.onUserSaveClick : this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    mandatoryFields={this.props.Login.screenName === \"IDS_USERS\" ? mandatoryFieldsUsers : mandatoryFieldsEmailConfig}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    updateStore={this.props.updateStore}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign\r\n                            operation={this.props.Login.operation}\r\n                            formatMessage={this.props.intl.formatMessage}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        />\r\n                        : this.props.Login.screenName === \"IDS_MAILCONFIG\" ? <AddEmailConfig\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onComboChange={this.onComboChange}\r\n                            emailHost={this.state.EmailHost || []}\r\n                            emailTemplate={this.state.EmailTemplate || []}\r\n                            emailScreen={this.state.EmailScreen || []}\r\n                            //actionType={this.state.ActionType || []}\r\n                            formName={this.state.FormName}\r\n                            formControls={this.state.FormControls}\r\n                            emailQueryList={this.state.emailQueryList||[]}\r\n                            users={this.props.Login.AvailableUsers || []}\r\n                            operation={this.props.Login.operation}\r\n                        /> : <AddUsersEmailConfig\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onComboChange={this.onComboChange}\r\n                            users={this.props.Login.users || []}\r\n                            operation={this.props.Login.operation}\r\n                        />\r\n                    }\r\n                />\r\n            }\r\n        </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({userRoleControlRights, controlMap});\r\n            }\r\n        } \r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n        if (this.props.Login.EmailHost !== previousProps.Login.EmailHost\r\n             || this.props.Login.EmailTemplate !== previousProps.Login.EmailTemplate \r\n             || this.props.Login.EmailScreen !== previousProps.Login.EmailScreen\r\n            || this.props.Login.FormControls !== previousProps.Login.FormControls \r\n            || this.props.Login.FormName !== previousProps.Login.FormName\r\n            || this.props.Login.EmailUserQuery  !== previousProps.Login.EmailUserQuery) {\r\n\r\n            const EmailHost = constructOptionList(this.props.Login.EmailHost || [], \"nemailhostcode\",\r\n                \"shostname\", undefined, undefined, undefined);\r\n            const EmailHostList = EmailHost.get(\"OptionList\");\r\n\r\n            const EmailTemplate = constructOptionList(this.props.Login.EmailTemplate || [], \"nemailtemplatecode\",\r\n                \"stemplatename\", undefined, undefined, undefined);\r\n            const EmailTemplateList = EmailTemplate.get(\"OptionList\");\r\n\r\n            const EmailScreen = constructOptionList(this.props.Login.EmailScreen || [], \"nemailscreencode\",\r\n                \"sscreenname\", undefined, undefined, undefined);\r\n            const EmailScreenList = EmailScreen.get(\"OptionList\");\r\n\r\n            // const ActionType = constructOptionList(this.props.Login.ActionType || [], \"nactiontype\",\r\n            //     \"stransdisplaystatus\", undefined, undefined, undefined);\r\n            // const ActionTypeList = ActionType.get(\"OptionList\");\r\n\r\n            const FormName = constructOptionList(this.props.Login.FormName || [], \"nformcode\",\r\n                \"sformname\", undefined, undefined, undefined);\r\n            const FormNameList = FormName.get(\"OptionList\");\r\n\r\n            const FormControls = constructOptionList(this.props.Login.FormControls || [], \"ncontrolcode\",\r\n                \"scontrolids\", undefined, undefined, undefined);\r\n            const FormControlList = FormControls.get(\"OptionList\");\r\n\r\n            const EmailQuery = constructOptionList(this.props.Login.EmailUserQuery || [], \"nemailuserquerycode\",\r\n                \"sdisplayname\", undefined, undefined, undefined);\r\n            const EmailQueryList = EmailQuery.get(\"OptionList\");\r\n\r\n            this.setState({ EmailHost: EmailHostList, EmailTemplate: EmailTemplateList,\r\n                 EmailScreen: EmailScreenList, FormName: FormNameList, FormControls: FormControlList,emailQueryList:EmailQueryList });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (fieldName === 'nusercode') {\r\n\r\n            selectedRecord[\"nusercode\"] = comboData;\r\n            let availableDatas = \"\";\r\n            let availableList = [];\r\n            this.state.selectedRecord.nusercode.map(data => {\r\n                availableDatas = availableDatas + \",\" + data.value;\r\n                availableList.push(data.item);\r\n                return availableDatas;\r\n            });\r\n            this.setState({ selectedRecord, availableDatas, availableList });\r\n        }\r\n        else if (fieldName === 'nemailscreencode') {\r\n            selectedRecord[fieldName] = comboData;\r\n            this.props.getFormControls(selectedRecord, this.props.Login.userInfo);\r\n        }\r\n        else {\r\n            //  const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n        //     //const selectedRecord = this.state.selectedRecord || {};\r\n        //     selectedRecord[\"nusercode\"] = comboData;\r\n        //     let availableDatas =\"\";\r\n        //     let availableList= [];\r\n        //     this.state.selectedRecord.nusercode.map(data=> {\r\n        //         availableDatas=availableDatas+\",\"+data.value;\r\n        //         availableList.push(data.item);\r\n        //     return availableDatas;\r\n        //      });\r\n        //     this.setState({ selectedRecord,availableDatas,availableList });\r\n        // }\r\n        // else if(fieldName==='nuserrolecode'){\r\n        //     selectedRecord[\"nuserrolecode\"] = comboData;\r\n        // }\r\n        // else {\r\n        //    // const selectedRecord = this.state.selectedRecord || {};\r\n        //     selectedRecord[fieldName] = comboData;\r\n        //     this.setState({ selectedRecord });\r\n\r\n        // }\r\n        // if(fieldName==='nuserrolecode'){\r\n        //     this.props.onuseroleChange(this.props.Login.masterData,comboData.value,this.props.Login.userInfo,selectedRecord,this.state.availableList)\r\n\r\n        // }\r\n\r\n    }\r\n\r\n    deleteUsersRecord = (inputData) => {\r\n        const inputParam = {\r\n                            classUrl: this.props.Login.inputParam.classUrl,\r\n                            methodUrl: \"Users\",\r\n\r\n                            inputData: {\r\n                                \"emailuserconfig\": inputData.selectedRecord,\r\n                                \"userinfo\": this.props.Login.userInfo\r\n                            },\r\n                            operation: 'delete',\r\n                            displayName: this.props.Login.inputParam.displayName,\r\n                            dataState: this.state.dataState, isChild:true,\r\n                            postParam :{ inputListName: \"EmailConfig\", selectedObject: \"SelectedEmailConfig\", \r\n                                          primaryKeyField: \"nemailconfigcode\",\r\n                                          fetchUrl:\"emailconfig/getEmailConfig\",\r\n                                          fecthInputObject: { userinfo: this.props.Login.userInfo } }\r\n                        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: 'IDS_USERS',\r\n                    operation: 'delete'\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    deleteRecord = (//screenname, SelectedEmailConfig, \r\n        operation, ncontrolcode) => {\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"EmailConfig\",\r\n\r\n            inputData: {\r\n                \"emailuserconfig\": this.props.Login.masterData.SelectedEmailConfig,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: operation,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            dataState: this.state.dataState,\r\n            postParam :{ inputListName: \"EmailConfig\", selectedObject: \"SelectedEmailConfig\", \r\n                            primaryKeyField: \"nemailconfigcode\",\r\n                            fetchUrl:\"emailconfig/getEmailConfig\",\r\n                            fecthInputObject: { userinfo: this.props.Login.userInfo } }\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                    operation: operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"EmailConfig\",\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: this.props.Login.inputParam.displayName\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n\r\n        const selectedRecord = this.state.selectedRecord;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"EmailConfig\", selectedObject: \"SelectedEmailConfig\", \r\n                            primaryKeyField: \"nemailconfigcode\" }\r\n            inputData[\"emailconfig\"] = JSON.parse(JSON.stringify(selectedRecord));\r\n            //inputData[this.props.Login.inputParam.methodUrl.toLowerCase()] = JSON.parse(JSON.stringify(this.state.selectedRecord));\r\n\r\n        } else {\r\n            inputData[\"emailconfig\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n// ALPD-4077 (15-05-2024) Changed this.state.availableDatas to selectedRecord[\"nusercode\"] to form nusercode as string by joining comma\r\n            inputData[\"emailuserconfig\"] = selectedRecord[\"nusercode\"] && selectedRecord[\"nusercode\"].length > 0 ? selectedRecord[\"nusercode\"].map(item => item.value).join(\",\") : null;\r\n        }\r\n        //inputData[\"emailconfig\"][\"ntranscode\"] = this.state.selectedRecord[\"ntranscode\"] ? this.state.selectedRecord[\"ntranscode\"] : 14;\r\n        inputData[\"emailconfig\"][\"nneedattachment\"] = selectedRecord[\"nneedattachment\"] ? selectedRecord[\"nneedattachment\"] : 4;\r\n        inputData[\"emailconfig\"][\"nenableemail\"] = selectedRecord[\"nenableemail\"] ? selectedRecord[\"nenableemail\"] : transactionStatus.NO;\r\n        //inputData[\"emailconfig\"][\"nactiontype\"] = selectedRecord[\"nactiontype\"] ? selectedRecord[\"nactiontype\"].value : -1;\r\n        inputData[\"emailconfig\"][\"ncontrolcode\"] = selectedRecord[\"ncontrolcode\"] ? selectedRecord[\"ncontrolcode\"].value : -1;\r\n        inputData[\"emailconfig\"][\"nformcode\"] = selectedRecord[\"nemailscreencode\"] ? selectedRecord.nemailscreencode.item.nformcode  : -1;\r\n        inputData[\"emailconfig\"][\"nemailtemplatecode\"] = selectedRecord[\"nemailtemplatecode\"] ? selectedRecord[\"nemailtemplatecode\"].value : -1;\r\n        inputData[\"emailconfig\"][\"nemailscreencode\"] = selectedRecord[\"nemailscreencode\"] ? selectedRecord[\"nemailscreencode\"].value : -1;\r\n        inputData[\"emailconfig\"][\"nemailhostcode\"] = selectedRecord[\"nemailhostcode\"] ? selectedRecord[\"nemailhostcode\"].value : -1;\r\n        inputData[\"emailconfig\"][\"nemailuserquerycode\"] = selectedRecord[\"nemailuserquerycode\"] ? selectedRecord[\"nemailuserquerycode\"].value : -1;\r\n        inputData[\"emailconfig\"][\"nstatus\"] = transactionStatus.ACTIVE;\r\n\r\n        if (inputData[\"emailconfig\"][\"nemailuserquerycode\"] === undefined){\r\n            inputData[\"emailconfig\"][\"nemailuserquerycode\"] = -1;\r\n        }\r\n\r\n            const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"EmailConfig\",\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n        // this.props.crudMaster(inputParam, this.props.Login.masterData,\"openModal\");\r\n    }\r\n\r\n    onUserSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        let selectedId = null;\r\n        const selectedRecord = this.state.selectedRecord;\r\n// ALPD-4077 (15-05-2024) Changed this.state.availableDatas to selectedRecord[\"nusercode\"] to form nusercode as string by joining comma\r\n        inputData[\"nusercode\"] = selectedRecord[\"nusercode\"] && selectedRecord[\"nusercode\"].length > 0 ? selectedRecord[\"nusercode\"].map(item => item.value).join(\",\") : null;\r\n        inputData[\"nemailconfigcode\"] = this.props.Login.masterData.SelectedEmailConfig.nemailconfigcode ? this.props.Login.masterData.SelectedEmailConfig.nemailconfigcode : -1;\r\n        inputData[\"nstatus\"] = transactionStatus.ACTIVE;\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Users\",\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,isChild:true,\r\n            saveType, formRef, postParam, searchRef: this.searchRef, selectedId\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n        // this.props.crudMaster(inputParam, this.props.Login.masterData,\"openModal\");\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, { getEmailConfigDetail, callService, filterColumnData, getUserEmailConfig, crudMaster, fetchEmailConfigById, validateEsignCredential, openEmailConfigModal, getFormControls, updateStore })(injectIntl(EmailConfig));"]},"metadata":{},"sourceType":"module"}