{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\MatrixComponent.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from './form-input/form-input.component';\nimport { Col, Row, Card } from 'react-bootstrap';\nimport CustomComponent from './CustomComponent';\nimport { MediaHeader } from '../components/App.styles'; // import { Spreadsheet } from 'react-spreadsheet';\n//import { Spreadsheet } from \"@progress/kendo-react-spreadsheet\"; \n// import { DataSheetGrid, checkboxColumn, textColumn } from 'react-datasheet-grid';\n//simport { Spreadsheet } from 'react-spreadsheet';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nclass AvailableSpaceComponent extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"pl-0 mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"Available Space :  \", this.props.navailablespace)), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }));\n  }\n\n}\n\nclass MatrixComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.Rows = Array(this.props.Rows).fill(0, 0, Array(this.props.Rows).length);\n    this.columns = Array(this.props.columns).fill(0, 0, Array(this.props.columns).length);\n    this.alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\", \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\n\n    this.onChange = sheetdata => {\n      console.log(sheetdata); //  this.props.childDataChange(selectedRecord);\n\n      this.setState({\n        data: sheetdata\n      });\n    };\n\n    this.comparator = (a, b) => {\n      return a.toString().localeCompare(b.toString(), 'en', {\n        numeric: true\n      });\n    };\n\n    this.handleKeyDown = (e, nrow, ncolumn, ndirectionmastercode) => {\n      let orderArray = [];\n      let activeElement = document.activeElement; // for (var i = 0; i < document.forms.length; i++) {\n      //     let form = document.forms[i].elements;\n      //     for (var j = 0; j < form.length; j++) {\n      //         let element = form[j];\n      //         if (activeElement === element) {\n      //             form.elements[i].focus();\n      //         };\n      //     }\n      // }\n\n      if (ndirectionmastercode === 1) {\n        Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\n          Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\n            // ndirectionmastercode===1?\n            // orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\n            // :\n            orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1));\n          });\n        });\n      } else {\n        Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\n          Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\n            // ndirectionmastercode===1?\n            // orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\n            // :\n            orderArray.push(this.alphabet[columnIndex] + (rowIndex + 1)); ///  orderArray.push({id:this.alphabet[columnIndex] ,value: (rowIndex + 1)})\n          });\n        });\n      }\n\n      if (e.keyCode === 13 // && e.target.nodeName == 'SELECT'\n      ) {\n        var form = e.target.closest('form'); //var index = Array.prototype.indexOf.call(form, e.target);\n        // form.elements[index + 3].focus();\n        // return false;\n\n        let index = orderArray.sort(this.comparator).findIndex(item => item === activeElement.placeholder);\n\n        for (var i = 0; i < form.elements.length; i++) {\n          let element = form.elements[i];\n\n          if (element.placeholder === orderArray[index + 1]) {\n            // if (element.disabled) {\n            if (element.value !== \"\") {\n              index++;\n              i = 0;\n            } else {\n              form.elements[i].focus();\n              break;\n            }\n          }\n\n          ;\n        } // for (var i = 0; i < document.forms.length; i++) {\n        //     let form = document.forms[i].elements;\n        //     for (var j = 0; j < form.length; j++) {\n        //         let element = form[j];\n        //         if (element.placeholder === orderArray[index + 1]) {\n        //             if (element.disabled) {\n        //                 index++;\n        //             } else {\n        //                 element.focus();\n        //                 form.elements[j].focus();\n        //             }\n        //         };\n        //     }\n        // }\n\n      }\n    };\n\n    this.availablepsacechange = data => {\n      this.setState({\n        navailablespace: data.navailablespace\n      });\n    };\n\n    this.state = {\n      data: [],\n      sheetData: this.props.sheetData\n    };\n  }\n\n  componentDidUpdate(previousProps, previousState) {\n    if (this.props.sheetData !== previousProps.sheetData) {\n      let sheetData = this.props.sheetData;\n      this.setState({\n        sheetData\n      });\n    }\n  }\n\n  genId(Row //i\n  , Column //j\n  ) {\n    let object = {};\n    object = {\n      label: this.alphabet[Column] + (Row + 1)\n    };\n    return object;\n  }\n\n  createDimensions(Rows, columns) {\n    //3X3\n    Rows = Rows - 1;\n    columns = columns - 1;\n    let spreadsheetdata = [];\n    let rowArray = [];\n\n    for (var i = 0; i <= Rows; i++) {\n      spreadsheetdata = [];\n\n      for (var j = 0; j <= columns; j++) {\n        let object = this.genId(i, j);\n        spreadsheetdata.push(object);\n      }\n\n      rowArray.push(spreadsheetdata);\n    }\n\n    return rowArray;\n  }\n\n  // shouldComponentUpdate(nextProps, nextState) {\n  //     if (this.state.navailablespace !== nextState.navailablespace) {\n  //         return false;\n  //     } else {\n  //         return true;\n  //     }\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"mb-1 test-box-status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      name: 'ncolumn',\n      value: \"\",\n      style: {\n        'border': `2px solid #aaa`,\n        'width': `45px`,\n        'user-select': `none`,\n        'height': `32px`,\n        'cursor': `not-allowed`\n      },\n      isDisabled: true,\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MediaHeader, {\n      className: `labelfont`,\n      style: {\n        color: \"#172b4d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_FILLEDNOTEDITABLE\"\n    }))), /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      name: 'ncolumn',\n      value: \"\",\n      style: {\n        'border': `2px solid #7ca84c`,\n        'width': `45px`,\n        'user-select': `none`,\n        'height': `32px`\n      },\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MediaHeader, {\n      className: `labelfont`,\n      style: {\n        color: \"#172b4d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_AVAILABLE\"\n    }))), /*#__PURE__*/React.createElement(Col, {\n      className: \"d-flex text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      name: 'ncolumn',\n      value: \"\",\n      style: {\n        'border': `2px solid #fbb0a5`,\n        'width': `45px`,\n        'user-select': `none`,\n        'height': `32px`\n      },\n      className: \"mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(MediaHeader, {\n      className: `labelfont`,\n      style: {\n        color: \"#172b4d\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_CURRENTLYFILLED\"\n    }))))), this.props.isMultiSampleAdd ? this.props.multipleSheetData.map((groupedItem, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        className: \"pl-0 mt-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Card.Title, {\n        className: \"product-title-main mb-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 41\n        }\n      }, groupedItem.value ? groupedItem.value : \"\")))), groupedItem.items.map((item, index) => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          className: \"pl-0 mt-3 mb-2\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 41\n          }\n        }, /*#__PURE__*/React.createElement(MediaHeader, {\n          className: `labelfont`,\n          style: {\n            color: \"#007bff\",\n            fontSize: \"18px\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 45\n          }\n        }, item.scontainerpath ? item.scontainerpath : \"\"))), /*#__PURE__*/React.createElement(\"form\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 37\n          }\n        }, /*#__PURE__*/React.createElement(Row, {\n          className: \"test-box-wrap overflow-auto\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 43\n          }\n        }, Array(item.nrow).fill(0, 0, Array(item.nrow).length).map((component, rowIndex) => {\n          return /*#__PURE__*/React.createElement(Row, {\n            className: \"flex-nowrap m-0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 48\n            }\n          }, Array(item.ncolumn).fill(0, 0, Array(item.ncolumn).length).map((component, columnIndex) => {\n            return (\n              /*#__PURE__*/\n              // (this.state.sheetData[item.nsamplestoragemappingcode] &&\n              //     (this.state.sheetData[item.nsamplestoragemappingcode]\n              //     [this.alphabet[columnIndex] + (rowIndex + 1)] === undefined)\n              //     || (this.state.sheetData[item.nsamplestoragemappingcode]\n              //     [this.alphabet[columnIndex] + (rowIndex + 1)] === \"\")) &&\n              React.createElement(CustomComponent, {\n                availablepsacechange: this.availablepsacechange,\n                userInfo: this.props.userInfo,\n                columnIndex: columnIndex,\n                ndirectionmastercode: item.ndirectionmastercode,\n                handleKeyDown: e => this.handleKeyDown(e, item.nrow, item.ncolumn, item.ndirectionmastercode),\n                rowIndex: rowIndex,\n                nsamplestoragelocationcode: item.nsamplestoragelocationcode,\n                nsamplestoragemappingcode: item.nsamplestoragemappingcode,\n                nprojecttypecode: item.nprojecttypecode,\n                nquantity: item.nquantity,\n                sunitname: item.sunitname,\n                nbarcodedescription: this.props.nbarcodedescription,\n                nbarcodeLength: this.props.nbarcodeLength,\n                sheetData: this.props.sheetData,\n                childSheetDataChange: this.props.childSheetDataChange,\n                isMultiSampleAdd: this.props.isMultiSampleAdd,\n                isDisabled: item.ndirectionmastercode === 1 ? this.state.sheetData[item.nsamplestoragemappingcode] ? this.state.sheetData[item.nsamplestoragemappingcode][this.alphabet[rowIndex] + (columnIndex + 1)] === undefined || this.state.sheetData[item.nsamplestoragemappingcode][this.alphabet[rowIndex] + (columnIndex + 1)] === \"\" ? false : true : false : this.state.sheetData[item.nsamplestoragemappingcode] ? this.state.sheetData[item.nsamplestoragemappingcode][this.alphabet[columnIndex] + (rowIndex + 1)] === undefined || this.state.sheetData[item.nsamplestoragemappingcode][this.alphabet[columnIndex] + (rowIndex + 1)] === \"\" ? false : true : false,\n                boxWidth: this.props.sbarcodeboxWidth //boxWidth =\"100px\"\n                ,\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 61\n                }\n              })\n            );\n          }));\n        }))));\n      }));\n    }) : /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      className: \"test-box-wrap overflow-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 25\n      }\n    }, this.Rows.map((component, rowIndex) => {\n      return /*#__PURE__*/React.createElement(Row, {\n        className: \"flex-nowrap m-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 32\n        }\n      }, this.columns.map((component, columnIndex) => {\n        return /*#__PURE__*/React.createElement(CustomComponent, {\n          inputs: this.columns,\n          availablepsacechange: this.availablepsacechange,\n          userInfo: this.props.userInfo,\n          handleKeyDown: e => this.handleKeyDown(e, this.props.Rows, this.props.columns, this.props.editedsheetData.ndirectionmastercode),\n          ndirectionmastercode: this.props.editedsheetData.ndirectionmastercode,\n          columnIndex: columnIndex,\n          rowIndex: rowIndex,\n          nsamplestoragemappingcode: this.props.editedsheetData.nsamplestoragemappingcode,\n          nsamplestoragelocationcode: this.props.editedsheetData.nsamplestoragelocationcode,\n          nprojecttypecode: this.props.editedsheetData.nprojecttypecode,\n          nquantity: this.props.editedsheetData.nquantity,\n          nbarcodedescription: this.props.nbarcodedescription,\n          sunitname: this.props.editedsheetData.sunitname,\n          nbarcodeLength: this.props.nbarcodeLength,\n          sheetData: this.props.sheetData,\n          childSheetDataChange: this.props.childSheetDataChange,\n          isDisabled: this.props.editedsheetData.ndirectionmastercode === 1 ? this.state.sheetData ? this.state.sheetData[this.alphabet[rowIndex] + (columnIndex + 1)] === undefined || this.state.sheetData[this.alphabet[rowIndex] + (columnIndex + 1)] === \"\" ? false : true : false : this.state.sheetData ? this.state.sheetData[this.alphabet[columnIndex] + (rowIndex + 1)] === undefined || this.state.sheetData[this.alphabet[columnIndex] + (rowIndex + 1)] === \"\" ? false : true : false,\n          boxWidth: this.props.sbarcodeboxWidth //boxWidth =\"100px\"\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 41\n          }\n        });\n      }));\n    }))));\n  }\n\n}\n\nexport default MatrixComponent;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/MatrixComponent.jsx"],"names":["React","Component","FormInput","Col","Row","Card","CustomComponent","MediaHeader","PerfectScrollbar","AvailableSpaceComponent","constructor","props","render","navailablespace","MatrixComponent","Rows","Array","fill","length","columns","alphabet","onChange","sheetdata","console","log","setState","data","comparator","a","b","toString","localeCompare","numeric","handleKeyDown","e","nrow","ncolumn","ndirectionmastercode","orderArray","activeElement","document","map","component","columnIndex","rowIndex","push","keyCode","form","target","closest","index","sort","findIndex","item","placeholder","i","elements","element","value","focus","availablepsacechange","state","sheetData","componentDidUpdate","previousProps","previousState","genId","Column","object","label","createDimensions","spreadsheetdata","rowArray","j","color","intl","formatMessage","id","isMultiSampleAdd","multipleSheetData","groupedItem","items","fontSize","scontainerpath","userInfo","nsamplestoragelocationcode","nsamplestoragemappingcode","nprojecttypecode","nquantity","sunitname","nbarcodedescription","nbarcodeLength","childSheetDataChange","undefined","sbarcodeboxWidth","editedsheetData"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport FormInput from './form-input/form-input.component';\r\nimport { Col, Row, Card } from 'react-bootstrap';\r\nimport CustomComponent from './CustomComponent';\r\nimport { MediaHeader } from '../components/App.styles';\r\n// import { Spreadsheet } from 'react-spreadsheet';\r\n//import { Spreadsheet } from \"@progress/kendo-react-spreadsheet\"; \r\n\r\n// import { DataSheetGrid, checkboxColumn, textColumn } from 'react-datasheet-grid';\r\n//simport { Spreadsheet } from 'react-spreadsheet';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'; \r\n\r\n\r\nclass AvailableSpaceComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (<Col md={12} className=\"pl-0 mt-2\">\r\n            <Card.Header>\r\n                <Card.Title className=\"product-title-main\">\r\n                    Available Space :  {this.props.navailablespace\r\n                    }\r\n                </Card.Title>\r\n            </Card.Header>\r\n            <br />\r\n        </Col>);\r\n\r\n    }\r\n}\r\n\r\nclass MatrixComponent extends Component {\r\n    Rows = Array(this.props.Rows).fill(0, 0, Array(this.props.Rows).length)\r\n    columns = Array(this.props.columns).fill(0, 0, Array(this.props.columns).length)\r\n    alphabet = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\", \"M\", \"N\",\r\n        \"O\", \"P\", \"Q\", \"R\", \"S\", \"T\", \"U\", \"V\", \"W\", \"X\", \"Y\", \"Z\"];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            sheetData: this.props.sheetData\r\n        }\r\n    }\r\n    componentDidUpdate(previousProps, previousState) {\r\n        if (this.props.sheetData !== previousProps.sheetData) {\r\n            let sheetData = this.props.sheetData\r\n            this.setState({ sheetData })\r\n        }\r\n    }\r\n    genId(Row//i\r\n        , Column//j\r\n    ) {\r\n        let object = {}\r\n        object = { label: this.alphabet[Column] + (Row + 1) }\r\n        return object\r\n    }\r\n    createDimensions(Rows, columns) {\r\n        //3X3\r\n        Rows = Rows - 1\r\n        columns = columns - 1\r\n        let spreadsheetdata = [];\r\n        let rowArray = [];\r\n        for (var i = 0; i <= Rows; i++) {\r\n            spreadsheetdata = []\r\n            for (var j = 0; j <= columns; j++) {\r\n                let object = this.genId(i, j)\r\n                spreadsheetdata.push(object);\r\n            }\r\n            rowArray.push(spreadsheetdata);\r\n        }\r\n        return rowArray;\r\n    }\r\n    onChange = (sheetdata) => {\r\n        console.log(sheetdata)\r\n        //  this.props.childDataChange(selectedRecord);\r\n        this.setState({ data: sheetdata })\r\n    }\r\n\r\n    comparator = (a, b) => {\r\n        return a.toString().localeCompare(b.toString(), 'en', { numeric: true })\r\n    };\r\n\r\n    handleKeyDown = (e, nrow, ncolumn, ndirectionmastercode) => {\r\n        let orderArray = [];\r\n        let activeElement = document.activeElement;\r\n\r\n        // for (var i = 0; i < document.forms.length; i++) {\r\n        //     let form = document.forms[i].elements;\r\n        //     for (var j = 0; j < form.length; j++) {\r\n        //         let element = form[j];\r\n        //         if (activeElement === element) {\r\n        //             form.elements[i].focus();\r\n        //         };\r\n        //     }\r\n        // }\r\n        if (ndirectionmastercode === 1) {\r\n            Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\r\n                Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\r\n                    // ndirectionmastercode===1?\r\n                    // orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\r\n                    // :\r\n                    orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\r\n                })\r\n            })\r\n        } else {\r\n            Array(nrow).fill(0, 0, Array(nrow).length).map((component, rowIndex) => {\r\n                Array(ncolumn).fill(0, 0, Array(ncolumn).length).map((component, columnIndex) => {\r\n                    // ndirectionmastercode===1?\r\n                    // orderArray.push(this.alphabet[rowIndex] + (columnIndex + 1))\r\n                    // :\r\n                    orderArray.push(this.alphabet[columnIndex] + (rowIndex + 1))\r\n                    ///  orderArray.push({id:this.alphabet[columnIndex] ,value: (rowIndex + 1)})\r\n\r\n                })\r\n            })\r\n        }\r\n\r\n\r\n\r\n\r\n        if (e.keyCode === 13// && e.target.nodeName == 'SELECT'\r\n        ) {\r\n            var form = e.target.closest('form');\r\n            //var index = Array.prototype.indexOf.call(form, e.target);\r\n            // form.elements[index + 3].focus();\r\n            // return false;\r\n\r\n\r\n            let index = orderArray.sort(this.comparator).findIndex(item => item === activeElement.placeholder);\r\n\r\n            for (var i = 0; i < form.elements.length; i++) {\r\n                let element = form.elements[i];\r\n                if (element.placeholder === orderArray[index + 1]) {\r\n                    // if (element.disabled) {\r\n                    if (element.value !== \"\") {\r\n                        index++;\r\n                        i = 0;\r\n                    } else {\r\n                        form.elements[i].focus();\r\n                        break;\r\n                    }\r\n                };\r\n            }\r\n            // for (var i = 0; i < document.forms.length; i++) {\r\n            //     let form = document.forms[i].elements;\r\n            //     for (var j = 0; j < form.length; j++) {\r\n            //         let element = form[j];\r\n            //         if (element.placeholder === orderArray[index + 1]) {\r\n            //             if (element.disabled) {\r\n            //                 index++;\r\n            //             } else {\r\n            //                 element.focus();\r\n            //                 form.elements[j].focus();\r\n            //             }\r\n            //         };\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n    availablepsacechange = (data) => {\r\n        this.setState({ navailablespace: data.navailablespace })\r\n    }\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     if (this.state.navailablespace !== nextState.navailablespace) {\r\n    //         return false;\r\n    //     } else {\r\n    //         return true;\r\n    //     }\r\n    // }\r\n    render() {\r\n        return (\r\n            <>\r\n                {/* <AvailableSpaceComponent navailablespace={this.state.navailablespace || 0} /> */}\r\n                <Row>\r\n                    <Row className='mb-1 test-box-status'>\r\n                        <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #aaa`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px`, 'cursor' : `not-allowed` }}\r\n                                isDisabled={true}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                                {  this.props.intl.formatMessage({ id: \"IDS_FILLEDNOTEDITABLE\" })} \r\n                            </MediaHeader>\r\n                        </Col>\r\n                        {/* <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #f96049`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                {  this.props.intl.formatMessage({ id: \"IDS_FILLEDEDITABLE\" })}\r\n                            </MediaHeader>\r\n                        </Col> */}\r\n                        <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #7ca84c`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                {  this.props.intl.formatMessage({ id: \"IDS_AVAILABLE\" })}\r\n                            </MediaHeader>\r\n                        </Col>\r\n                        <Col className='d-flex text-center'>\r\n                            <div\r\n                                name={'ncolumn'}\r\n                                value={\"\"}\r\n                                style={{ 'border': `2px solid #fbb0a5`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                className=\"mb-3\"\r\n                            />\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                {  this.props.intl.formatMessage({ id: \"IDS_CURRENTLYFILLED\" })}\r\n                            </MediaHeader>\r\n                        </Col>\r\n                    </Row>\r\n                </Row>\r\n                {this.props.isMultiSampleAdd ?\r\n                    this.props.multipleSheetData.map((groupedItem, index) => {\r\n                        return <>\r\n                            <Row>\r\n                                {/* {index === 0 ?\r\n                                    <Row className='mb-1 test-box-status'>\r\n                                        <Col className='d-flex text-center'>\r\n                                            <div\r\n                                                name={'ncolumn'}\r\n                                                value={\"\"}\r\n                                                style={{ 'border': `2px solid #aaa`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px`, 'cursor' : `not-allowed` }}\r\n                                                isDisabled={true}\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                                                {  this.props.intl.formatMessage({ id: \"IDS_FILLEDNOTEDITABLE\" })} \r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                        <Col className='d-flex text-center'>\r\n                                            <div\r\n                                                name={'ncolumn'}\r\n                                                value={\"\"}\r\n                                                style={{ 'border': `2px solid #f96049`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                                {  this.props.intl.formatMessage({ id: \"IDS_FILLEDEDITABLE\" })}\r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                        <Col className='d-flex text-center'>\r\n                                            <div\r\n                                                name={'ncolumn'}\r\n                                                value={\"\"}\r\n                                                style={{ 'border': `2px solid #7ca84c`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                                {  this.props.intl.formatMessage({ id: \"IDS_AVAILABLE\" })}\r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                        <Col className='d-flex text-center'>\r\n                                            <div\r\n                                                name={'ncolumn'}\r\n                                                value={\"\"}\r\n                                                style={{ 'border': `2px solid #fbb0a5`, 'width' : `45px` , 'user-select' : `none`, 'height' : `32px` }}\r\n                                                className=\"mb-3\"\r\n                                            />\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}> \r\n                                                {  this.props.intl.formatMessage({ id: \"IDS_CURRENTLYFILLED\" })}\r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                    </Row> : \"\"} */}\r\n                                <Col md={12} className=\"pl-0 mt-0\">\r\n                                    <Card.Header>\r\n                                        <Card.Title className=\"product-title-main mb-0\">\r\n                                            {groupedItem.value ?\r\n                                                groupedItem.value\r\n                                                : \"\"}\r\n                                        </Card.Title>\r\n                                    </Card.Header>\r\n                                </Col>\r\n                            </Row>\r\n                            {groupedItem.items.map((item, index) => {\r\n                                return <>\r\n                                    <Row>\r\n                                        <Col md={12} className=\"pl-0 mt-3 mb-2\">\r\n                                            <MediaHeader className={`labelfont`} style={{ color: \"#007bff\", fontSize: \"18px\" }}>\r\n                                                {item.scontainerpath ?\r\n                                                    item.scontainerpath\r\n                                                    : \"\"}\r\n                                            </MediaHeader>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    \r\n                                    <form><Row className='test-box-wrap overflow-auto'>{Array(item.nrow).fill(0, 0, Array(item.nrow).length).map((component, rowIndex) => {\r\n                                        return <Row className='flex-nowrap m-0'>\r\n                                            {Array(item.ncolumn).fill(0, 0, Array(item.ncolumn).length).map((component, columnIndex) => {\r\n                                                return (\r\n                                                        \r\n                                                            // (this.state.sheetData[item.nsamplestoragemappingcode] &&\r\n                                                            //     (this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                            //     [this.alphabet[columnIndex] + (rowIndex + 1)] === undefined)\r\n                                                            //     || (this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                            //     [this.alphabet[columnIndex] + (rowIndex + 1)] === \"\")) &&\r\n                                                            <CustomComponent\r\n                                                                availablepsacechange={this.availablepsacechange}\r\n                                                                userInfo={this.props.userInfo}\r\n                                                                columnIndex={columnIndex}\r\n                                                                ndirectionmastercode={item.ndirectionmastercode}\r\n                                                                handleKeyDown={(e) => this.handleKeyDown(e, item.nrow, item.ncolumn,\r\n                                                                    item.ndirectionmastercode)}\r\n                                                                rowIndex={rowIndex}\r\n                                                                nsamplestoragelocationcode={item.nsamplestoragelocationcode}\r\n                                                                nsamplestoragemappingcode={item.nsamplestoragemappingcode}\r\n                                                                nprojecttypecode={item.nprojecttypecode}\r\n                                                                nquantity={item.nquantity}\r\n                                                                sunitname={item.sunitname}\r\n                                                                nbarcodedescription={this.props.nbarcodedescription}\r\n                                                                nbarcodeLength={this.props.nbarcodeLength}\r\n                                                                sheetData={this.props.sheetData}\r\n                                                                childSheetDataChange={this.props.childSheetDataChange}\r\n                                                                isMultiSampleAdd={this.props.isMultiSampleAdd}\r\n                                                                isDisabled={\r\n                                                                    item.ndirectionmastercode === 1 ?\r\n                                                                        this.state.sheetData[item.nsamplestoragemappingcode] ?\r\n                                                                            ((this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                                            [this.alphabet[rowIndex] + (columnIndex + 1)] === undefined)\r\n                                                                                || (this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                                                [this.alphabet[rowIndex] + (columnIndex + 1)] === \"\") ?\r\n                                                                                false : true) : false :\r\n                                                                        this.state.sheetData[item.nsamplestoragemappingcode] ?\r\n                                                                            (((this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                                            [this.alphabet[columnIndex] + (rowIndex + 1)] === undefined)\r\n                                                                                || (this.state.sheetData[item.nsamplestoragemappingcode]\r\n                                                                                [this.alphabet[columnIndex] + (rowIndex + 1)] === \"\")) ? false :\r\n                                                                                true) : false\r\n                                                                }\r\n                                                                boxWidth ={this.props.sbarcodeboxWidth}\r\n                                                                //boxWidth =\"100px\"\r\n\r\n                                                            />\r\n                                                )\r\n\r\n                                            })}\r\n                                        </Row>\r\n                                    })} \r\n                                    </Row></form></>\r\n                            })}\r\n\r\n                        </>\r\n                    }) :\r\n                    <form>\r\n                        <Row className='test-box-wrap overflow-auto'>\r\n                        {this.Rows.map((component, rowIndex) => {\r\n                        return <Row className='flex-nowrap m-0'>                            \r\n                            {this.columns.map((component, columnIndex) => {\r\n                                return (\r\n                                        <CustomComponent\r\n                                            inputs={this.columns}\r\n                                            availablepsacechange={this.availablepsacechange}\r\n                                            userInfo={this.props.userInfo}\r\n                                            handleKeyDown={(e) => this.handleKeyDown(e, this.props.Rows, this.props.columns,\r\n                                                this.props.editedsheetData.ndirectionmastercode)}\r\n                                            ndirectionmastercode={this.props.editedsheetData.ndirectionmastercode}\r\n                                            columnIndex={columnIndex}\r\n                                            rowIndex={rowIndex}\r\n                                            nsamplestoragemappingcode={this.props.editedsheetData.nsamplestoragemappingcode}\r\n                                            nsamplestoragelocationcode={this.props.editedsheetData.nsamplestoragelocationcode}\r\n                                            nprojecttypecode={this.props.editedsheetData.nprojecttypecode}\r\n                                            nquantity={this.props.editedsheetData.nquantity}\r\n                                            nbarcodedescription={this.props.nbarcodedescription}\r\n                                            sunitname={this.props.editedsheetData.sunitname}\r\n                                            nbarcodeLength={this.props.nbarcodeLength}\r\n                                            sheetData={this.props.sheetData}\r\n                                            childSheetDataChange={this.props.childSheetDataChange}\r\n                                            isDisabled={\r\n                                                this.props.editedsheetData.ndirectionmastercode === 1 ?\r\n                                                    this.state.sheetData ?\r\n                                                        ((this.state.sheetData\r\n                                                        [this.alphabet[rowIndex] + (columnIndex + 1)] === undefined)\r\n                                                            || (this.state.sheetData\r\n                                                            [this.alphabet[rowIndex] + (columnIndex + 1)] === \"\") ?\r\n                                                            false : true) : false :\r\n                                                    this.state.sheetData ?\r\n                                                        (((this.state.sheetData\r\n                                                        [this.alphabet[columnIndex] + (rowIndex + 1)] === undefined)\r\n                                                            || (this.state.sheetData\r\n                                                            [this.alphabet[columnIndex] + (rowIndex + 1)] === \"\")) ? false :\r\n                                                            true) : false\r\n                                            }\r\n                                            boxWidth ={this.props.sbarcodeboxWidth}\r\n                                            //boxWidth =\"100px\"\r\n                                        />\r\n                                )\r\n                            })}\r\n                        </Row>\r\n                    })}</Row></form>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n}\r\nexport default MatrixComponent;\r\n\r\n"]},"metadata":{},"sourceType":"module"}