{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\sidebar\\\\sidebar.component.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport { Tab, Nav, Image, Accordion, Button } from 'react-bootstrap';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Preloader from '../preloader/preloader.component';\nimport ContextAwareToggle from './ContextAwareToggle';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore } from '../../actions';\nimport { SidebarNav, SidebarBrand, SidebarBrandTxt, NavHeader, CollapseInner } from '../../components/sidebar/sidebar.styles';\nimport MenuExpand from \"../../assets/image/menu-expand.svg\"; // import HomeListLogo from '../../assets/image/homelist.svg';\n\nimport toggleExpand from \"../../assets/image/expand-icon.svg\";\nimport toggleCollapse from \"../../assets/image/collapse-icon.svg\";\nimport PrimaryLogo from '../../assets/image/sidebar-logo.png';\nimport Logo from '../../assets/image/qualis-lims@3x.png';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { formatInputDate } from '../CommonScript'; //import LogiLabLogo from '../../assets/image/logilablogo.png'\n//import SDMSLogo from '../../assets/image/sdmslogo.png'\n\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Menu extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, modulename) => {\n      if (this.props.inputRef.current) this.props.inputRef.current.value = \"\";\n\n      if (this.props.Login.userInfo.nformcode !== formCode) {\n        const userInfo = { ...this.props.Login.userInfo,\n          \"nformcode\": formCode,\n          \"nmodulecode\": moduleCode,\n          \"sformname\": formname.sdisplayname,\n          \"smodulename\": modulename.sdisplayname\n        };\n        const inputParam = {\n          inputData: {\n            \"userinfo\": userInfo,\n            currentdate: formatInputDate(new Date(), true)\n          },\n          classUrl,\n          methodUrl,\n          displayName,\n          key: `MenuId_${formname.nmenucode}`,\n          serviceNeed: true\n        };\n        this.props.menuHide();\n        this.props.callService(inputParam);\n      }\n    };\n\n    this.onELNLoginClick = () => {\n      if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[3]) {\n        const serverUrl = this.props.Login.sdmselnsettings[3] + \"Login/Validateuser\";\n        const uiUrl = this.props.Login.sdmselnsettings[4];\n        const userInfo = this.props.Login.userInfo;\n        const inputParam = {\n          username: userInfo.sloginid,\n          lssitemaster: {\n            \"sitecode\": \"1\"\n          },\n          password: userInfo.spassword,\n          lsusergroup: {\n            \"usergroupname\": userInfo.suserrolename\n          }\n        };\n        this.props.elnLoginAction(inputParam, serverUrl, uiUrl);\n      } else {\n        toast.info(this.intl.FormattedMessage({\n          id: \"IDS_ELNSERVERURLNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.onSDMSLoginClick = () => {\n      if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[1]) {\n        const serverUrl = this.props.Login.sdmselnsettings[1] + \"/Login/validatelinkUser\";\n        const uiUrl = this.props.Login.sdmselnsettings[2];\n        const userInfo = this.props.Login.userInfo;\n        const inputParam = {\n          sUserName: userInfo.sloginid,\n          sSiteCode: \"DEFAULT\",\n          sGroupName: userInfo.suserrolename\n        };\n        this.props.sdmsLoginAction(inputParam, serverUrl, uiUrl);\n      } else {\n        toast.info(this.intl.FormattedMessage({\n          id: \"IDS_ELNSERVERURLNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.setKey = k => {\n      // this.props.inputRef.current.value=\"\"\n      this.setState({\n        key: k\n      });\n    };\n\n    this.getDetailHome = () => {\n      const userInfo = { ...this.props.Login.userInfo\n      };\n      userInfo['nformcode'] = -1;\n      userInfo['nmodulecode'] = -1;\n      userInfo['sformname'] = null;\n      userInfo['smodulename'] = null; // const inputParam = {\n      //     inputData: { \"userinfo\": userInfo, currentdate: formatInputDate(new Date(), true) }\n      //     ,serviceNeed:false\n      // };\n      // const { history } = this.props;\n      // history.push('/home');\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: {},\n          userInfo,\n          organisation: undefined,\n          loading: false,\n          displayName: \"\"\n        }\n      }; //     this.props.updateStore(updateInfo);\n\n      this.props.layOutGetHome(updateInfo); //  this.props.callService(inputParam);\n    };\n\n    this.toggleSearch = () => {\n      this.setState({\n        showSearch: !this.state.showSearch\n      });\n    };\n\n    this.ToggleAction = value => {\n      this.setState({\n        isSidebarActive: value,\n        MenuVisible: !value\n      }); //this.setState({MenuVisible: !this.state.MenuVisible})\n    };\n\n    this.pinnedEvent = () => {\n      let {\n        isPinned\n      } = this.state;\n      this.setState({\n        isPinned: !isPinned\n      });\n    };\n\n    this.formRef = React.createRef();\n    this.state = {\n      show: false,\n      nusermultirolecode: -1,\n      selectedRecord: {},\n      isSidebarActive: false,\n      isPinned: false,\n      MenuVisible: false,\n      key: this.props.Login.menuDesign && this.props.Login.menuDesign[0] ? `MenuId_${this.props.Login.menuDesign[0].nmenucode}` : \"MenuId_-2\" // oldKey:this.props.Login.menuDesign &&\n      // this.props.Login.menuDesign[0] ?\n      // `MenuId_${this.props.Login.menuDesign[0].nmenucode}` :\n      // \"MenuId_0\",\n\n    };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu() {\n    this.setState({\n      MenuVisible: !this.state.MenuVisible\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.Login.menuDesign !== prevProps.Login.menuDesign) {\n      this.setState({\n        key: this.props.Login.menuDesign && this.props.Login.menuDesign[0] ? `MenuId_${this.props.Login.menuDesign[0].nmenucode}` : \"MenuId_-2\"\n      });\n    } // if(this.props.Login.key!==prevProps.Login.key){\n    //         this.setState({ key: this.props.Login.key})\n    // }\n\n  }\n\n  render() {\n    const {\n      isSidebarActive\n    } = this.state;\n    const {\n      menuDesign,\n      loading\n    } = this.props.Login; //  console.log(this.props.history.location.pathname);\n    //console.log(this.state.MenuVisible);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, !this.props.fullView && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"text-center menu-toggle-btn\",\n      onMouseEnter: () => this.setState({\n        MenuVisible: !this.state.MenuVisible\n      }),\n      onMouseLeave: () => this.ToggleAction(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MenuExpand,\n      alt: \"Lims-Logo\",\n      width: \"40\",\n      height: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 28\n      }\n    })), (this.props.fullView || this.state.MenuVisible) && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SidebarNav, {\n      className: `d-flex side-nav sidebar sidebar-dark bg-gradient-primary  ${!this.state.MenuVisible || this.state.key === \"MenuId_-2\" ? 'toggled' : ''} ${this.props.fullView && 'sidebar-fullview'}`,\n      onMouseEnter: () => this.ToggleAction(false),\n      onMouseLeave: () => this.ToggleAction(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      activeKey: this.state.key,\n      onSelect: k => this.setKey(k),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav flex-column side-nav\",\n      variant: \"pills\",\n      key: \"MenuIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"text-center menu-toggle-btn menu-toggle-btn1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MenuExpand,\n      alt: \"Lims-Logo\",\n      width: \"40\",\n      height: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 39\n      }\n    })), menuDesign && menuDesign.map(menu => {\n      return menu.nmenucode !== -2 ? /*#__PURE__*/React.createElement(Nav.Link, {\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 47\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/${menu.smenuname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        width: \"34\",\n        height: \"34\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 51\n        }\n      }, menu.sdisplayname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/home',\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        onClick: e => this.getDetailHome(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faHome,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 51\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 51\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_HOME\"\n      })));\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: PrimaryLogo,\n      alt: \"Primary-Logo\",\n      width: \"45\",\n      height: \"60\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 39\n      }\n    }))), /*#__PURE__*/React.createElement(Tab.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 31\n      }\n    }, menuDesign && menuDesign.map(menu => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        className: \"navbar-nav position-relative\",\n        as: \"ul\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 47\n        }\n      }, /*#__PURE__*/React.createElement(SidebarBrand, {\n        className: \"sidebar-brand d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 51\n        }\n      }, /*#__PURE__*/React.createElement(SidebarBrandTxt, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 55\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: menu.sdisplayname,\n        defaultMessage: menu.sdisplayname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 59\n        }\n      }))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n        className: \"sidebar-scroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 51\n        }\n      }, menu.nmenucode !== -2 && menu.lstmodule.map(module => {\n        return /*#__PURE__*/React.createElement(Nav.Item, {\n          key: module.nmodulecode,\n          as: \"li\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 67\n          }\n        }, /*#__PURE__*/React.createElement(ContextAwareToggle, {\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 71\n          }\n        }, /*#__PURE__*/React.createElement(NavHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 75\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: module.sdisplayname,\n          defaultMessage: module.sdisplayname,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 79\n          }\n        }))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 71\n          }\n        }, /*#__PURE__*/React.createElement(CollapseInner, {\n          className: \"bg-transparent py-2 collapse-inner rounded\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 75\n          }\n        }, module.lstforms !== null && module.lstforms.map(forms => {\n          return /*#__PURE__*/React.createElement(NavLink, {\n            className: `collapse-item ${forms.nformcode === this.props.Login.userInfo.nformcode ? 'active-form' : ''}`,\n            key: forms.nformcode,\n            nformcode: forms.nformcode,\n            to: '/' + forms.sclassname,\n            onClick: () => this.getDetail(forms.sclassname.toLowerCase(), forms.surl, forms.nformcode, forms.sdisplayname, module.nmodulecode, forms, module),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 91\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: forms.sdisplayname,\n            defaultMessage: forms.sdisplayname,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 95\n            }\n          }));\n        }))));\n      }))));\n    })))))), /*#__PURE__*/React.createElement(Preloader, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 17\n      }\n    }));\n  } // selectInputOnChange = (ComboVal, fieldName) =>  {\n  //     this.setState({ [fieldName] : ComboVal }); \n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  navPage,\n  elnLoginAction,\n  sdmsLoginAction,\n  updateStore\n})(injectIntl(Menu));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/sidebar/sidebar.component.jsx"],"names":["React","PureComponent","connect","NavLink","withRouter","Tab","Nav","Image","Accordion","Button","FormattedMessage","injectIntl","Preloader","ContextAwareToggle","PerfectScrollbar","callService","navPage","elnLoginAction","sdmsLoginAction","updateStore","SidebarNav","SidebarBrand","SidebarBrandTxt","NavHeader","CollapseInner","PrimaryLogo","Logo","formatInputDate","toast","DEFAULT_RETURN","FontAwesomeIcon","faHome","mapStateToProps","state","Login","Menu","constructor","props","getDetail","classUrl","methodUrl","formCode","displayName","moduleCode","formname","modulename","inputRef","current","value","userInfo","nformcode","sdisplayname","inputParam","inputData","currentdate","Date","key","nmenucode","serviceNeed","menuHide","onELNLoginClick","sdmselnsettings","serverUrl","uiUrl","username","sloginid","lssitemaster","password","spassword","lsusergroup","suserrolename","info","intl","id","onSDMSLoginClick","sUserName","sSiteCode","sGroupName","setKey","k","setState","getDetailHome","updateInfo","typeName","data","masterData","organisation","undefined","loading","layOutGetHome","toggleSearch","showSearch","ToggleAction","isSidebarActive","MenuVisible","pinnedEvent","isPinned","formRef","createRef","show","nusermultirolecode","selectedRecord","menuDesign","toggleMenu","bind","componentDidUpdate","prevProps","render","fullView","MenuExpand","map","menu","require","smenuname","toLowerCase","e","formatMessage","lstmodule","module","nmodulecode","lstforms","forms","sclassname","surl"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink, withRouter } from 'react-router-dom';\r\nimport { Tab, Nav, Image, Accordion, Button } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport Preloader from '../preloader/preloader.component';\r\nimport ContextAwareToggle from './ContextAwareToggle';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nimport { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore } from '../../actions'\r\nimport { SidebarNav, SidebarBrand, SidebarBrandTxt, NavHeader, CollapseInner } from '../../components/sidebar/sidebar.styles';\r\nimport MenuExpand from '../../assets/image/menu-expand.svg';\r\n// import HomeListLogo from '../../assets/image/homelist.svg';\r\nimport toggleExpand from '../../assets/image/expand-icon.svg';\r\nimport toggleCollapse from '../../assets/image/collapse-icon.svg';\r\nimport PrimaryLogo from '../../assets/image/sidebar-logo.png';\r\nimport Logo from '../../assets/image/qualis-lims@3x.png';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { formatInputDate } from '../CommonScript';\r\n//import LogiLabLogo from '../../assets/image/logilablogo.png'\r\n//import SDMSLogo from '../../assets/image/sdmslogo.png'\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { Login: state.Login }\r\n}\r\n\r\nclass Menu extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            show: false,\r\n            nusermultirolecode: -1,\r\n            selectedRecord: {},\r\n            isSidebarActive: false,\r\n            isPinned: false,\r\n            MenuVisible: false,\r\n            key: this.props.Login.menuDesign &&\r\n                this.props.Login.menuDesign[0] ?\r\n                `MenuId_${this.props.Login.menuDesign[0].nmenucode}` :\r\n                \"MenuId_-2\",\r\n                // oldKey:this.props.Login.menuDesign &&\r\n                // this.props.Login.menuDesign[0] ?\r\n                // `MenuId_${this.props.Login.menuDesign[0].nmenucode}` :\r\n                // \"MenuId_0\",\r\n        }\r\n        this.toggleMenu = this.toggleMenu.bind(this);\r\n    }\r\n    toggleMenu() {\r\n        this.setState({MenuVisible: !this.state.MenuVisible})\r\n    }\r\n    \r\n\r\n    getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, modulename) => {\r\n        if( this.props.inputRef.current) \r\n        this.props.inputRef.current.value=\"\"\r\n        if (this.props.Login.userInfo.nformcode !== formCode) {\r\n            const userInfo = {\r\n                ...this.props.Login.userInfo, \"nformcode\": formCode,\r\n                \"nmodulecode\": moduleCode, \"sformname\": formname.sdisplayname, \"smodulename\": modulename.sdisplayname\r\n            }\r\n            const inputParam = {\r\n                inputData: { \"userinfo\": userInfo, currentdate: formatInputDate(new Date(), true) },\r\n                classUrl, methodUrl, displayName, key: `MenuId_${formname.nmenucode}`, serviceNeed: true\r\n            };\r\n            this.props.menuHide();\r\n            this.props.callService(inputParam);\r\n        }\r\n    }\r\n\r\n    onELNLoginClick = () => {\r\n        if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[3]) {\r\n            const serverUrl = this.props.Login.sdmselnsettings[3] + \"Login/Validateuser\";\r\n            const uiUrl = this.props.Login.sdmselnsettings[4];\r\n            const userInfo = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                username: userInfo.sloginid,\r\n                lssitemaster: { \"sitecode\": \"1\" },\r\n                password: userInfo.spassword,\r\n                lsusergroup: { \"usergroupname\": userInfo.suserrolename }\r\n            };\r\n            this.props.elnLoginAction(inputParam, serverUrl, uiUrl);\r\n        } else {\r\n            toast.info(this.intl.FormattedMessage({ id: \"IDS_ELNSERVERURLNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n    onSDMSLoginClick = () => {\r\n        if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[1]) {\r\n            const serverUrl = this.props.Login.sdmselnsettings[1] + \"/Login/validatelinkUser\";\r\n            const uiUrl = this.props.Login.sdmselnsettings[2];\r\n            const userInfo = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                sUserName: userInfo.sloginid,\r\n                sSiteCode: \"DEFAULT\",\r\n                sGroupName: userInfo.suserrolename\r\n            };\r\n            this.props.sdmsLoginAction(inputParam, serverUrl, uiUrl);\r\n        } else {\r\n            toast.info(this.intl.FormattedMessage({ id: \"IDS_ELNSERVERURLNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n    setKey = (k) => {\r\n       // this.props.inputRef.current.value=\"\"\r\n        this.setState({ key: k })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.Login.menuDesign !== prevProps.Login.menuDesign) {\r\n            this.setState({ key: this.props.Login.menuDesign && this.props.Login.menuDesign[0] ? \r\n                `MenuId_${this.props.Login.menuDesign[0].nmenucode}` : \"MenuId_-2\" })\r\n        }\r\n\r\n        // if(this.props.Login.key!==prevProps.Login.key){\r\n        //         this.setState({ key: this.props.Login.key})\r\n        // }\r\n    }\r\n\r\n\r\n    getDetailHome = () => {\r\n        const userInfo = {\r\n            ...this.props.Login.userInfo\r\n        }\r\n         userInfo['nformcode']=-1\r\n         userInfo['nmodulecode']=-1\r\n         userInfo['sformname']=null\r\n         userInfo['smodulename']=null\r\n        // const inputParam = {\r\n        //     inputData: { \"userinfo\": userInfo, currentdate: formatInputDate(new Date(), true) }\r\n        //     ,serviceNeed:false\r\n        // };\r\n\r\n        // const { history } = this.props;\r\n        // history.push('/home');\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData: {}, userInfo, organisation: undefined, loading: false, displayName: \"\" }\r\n        }\r\n   //     this.props.updateStore(updateInfo);\r\n        this.props.layOutGetHome(updateInfo)\r\n\r\n        //  this.props.callService(inputParam);\r\n    }\r\n    toggleSearch = () => {      \r\n        \r\n        this.setState({\r\n            showSearch: !this.state.showSearch\r\n        })\r\n    }\r\n    \r\n\r\n    render() {\r\n\r\n        const { isSidebarActive } = this.state;\r\n        const { menuDesign, loading } = this.props.Login;\r\n        \r\n  //  console.log(this.props.history.location.pathname);\r\n    \r\n   //console.log(this.state.MenuVisible);\r\n\r\n        return (\r\n            <>\r\n            \r\n                <>            \r\n                                  \r\n                    {!this.props.fullView &&\r\n                        <Nav.Link className=\"text-center menu-toggle-btn\"  onMouseEnter={()=>this.setState({MenuVisible:!this.state.MenuVisible})}  onMouseLeave={() => this.ToggleAction(true)}>\r\n                           <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" /> \r\n                        </Nav.Link>\r\n                    }\r\n                    {(this.props.fullView || this.state.MenuVisible) &&\r\n                    <>\r\n                            {/* <Nav.Link className=\"text-center menu-toggle-btn\" onClick={this.props.menuFullview} >\r\n                                <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" /> \r\n                            </Nav.Link> */}\r\n                           \r\n                      <SidebarNav className={`d-flex side-nav sidebar sidebar-dark bg-gradient-primary  ${!this.state.MenuVisible || this.state.key===\"MenuId_-2\" ? 'toggled' : ''} ${this.props.fullView && 'sidebar-fullview'}`} onMouseEnter={() => this.ToggleAction(false)} onMouseLeave={() => this.ToggleAction(true)}\r\n                      >\r\n                          <Tab.Container\r\n                              activeKey={this.state.key}\r\n                              onSelect={(k) => this.setKey(k)}>\r\n                              {/* Left Menu Icon */}\r\n                              < Nav className=\"nav flex-column side-nav\" variant=\"pills\" key='MenuIcon' >\r\n                                  {/* <Nav.Link key={this.state.key} eventKey={this.state.key} onClick={() => this.ToggleAction1(false)}>\r\n                                      <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" />\r\n                                  </Nav.Link> */}\r\n                                  \r\n                                  \r\n                                  {/* <Nav.Link to={'/home'} onClick={(e) => this.getDetailHome()}  >\r\n                                      <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n                                  </Nav.Link> */}\r\n                                \r\n                                      <Nav.Link className=\"text-center menu-toggle-btn menu-toggle-btn1\"  >\r\n                                      <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" /> \r\n                                      </Nav.Link>\r\n                                  \r\n         \r\n                                  {menuDesign && menuDesign.map((menu) => {\r\n                                      return (\r\n                                          menu.nmenucode !== -2 ?\r\n                                              <Nav.Link key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`} >\r\n                                                  <Image src={require(`../../assets/image/${menu.smenuname.toLowerCase()}.svg`)} alt=\"sidebar\" width=\"34\" height=\"34\" />\r\n                                                  <span>{menu.sdisplayname}</span>\r\n                                              </Nav.Link> : <Nav.Link to={'/home'} key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`}  \r\n                                              onClick={(e) => this.getDetailHome()}  >\r\n                                                  {/* <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" /> */}\r\n                                                  <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n                                                  <span>{this.props.intl.formatMessage({id: \"IDS_HOME\"})}</span>\r\n                                              </Nav.Link>)\r\n                                  })}\r\n                                  {/* <Nav.Link key={6} onClick={() => this.onELNLoginClick()}>\r\n                                      <Image src={LogiLabLogo} alt=\"logilablogo\" width=\"45\" height=\"55\" />\r\n                                  </Nav.Link>\r\n                                  <Nav.Link key={7} onClick={() => this.onSDMSLoginClick()}>\r\n                                      <Image src={SDMSLogo} alt=\"sdmslogo\" width=\"45\" height=\"55\" />\r\n                                  </Nav.Link> */}\r\n                                  {/* //key={this.state.key} eventKey={this.state.key}  */}\r\n                                  \r\n                                  <Nav.Link className=\"mt-auto\">\r\n                                      <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" />\r\n                                  </Nav.Link>\r\n                               \r\n      \r\n                              </Nav>\r\n                              {/* <Button className=\"rounded-circle border-0\" id=\"sidebarToggle\" ></Button> */}\r\n                              <Tab.Content>\r\n                                  {menuDesign && menuDesign.map(menu => {\r\n                                      return (\r\n                                          <Tab.Pane key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`}>\r\n                                              <Accordion className=\"navbar-nav position-relative\" as=\"ul\" >\r\n                                                  {/* onClick={() => this.pinnedEvent()} */}\r\n                                                  <SidebarBrand className=\"sidebar-brand d-flex align-items-center\">\r\n                                                      <SidebarBrandTxt>\r\n                                                          <FormattedMessage id={menu.sdisplayname}\r\n                                                              defaultMessage={menu.sdisplayname} />\r\n                                                      </SidebarBrandTxt>\r\n                                                  </SidebarBrand>\r\n                                                  <PerfectScrollbar className=\"sidebar-scroll\">\r\n                                                      {\r\n                                                        menu.nmenucode!==-2&&(menu.lstmodule).map(module => {\r\n      \r\n                                                              return (\r\n      \r\n                                                                  <Nav.Item key={module.nmodulecode} as=\"li\">\r\n                                                                      <ContextAwareToggle eventKey={module.nmodulecode} >\r\n                                                                          <NavHeader>\r\n                                                                              {/* {console.log(module.smodulename)}\r\n                                                                              {console.log(module.sdisplayname)} */}\r\n                                                                              <FormattedMessage id={module.sdisplayname}\r\n                                                                                  defaultMessage={module.sdisplayname} />\r\n                                                                          </NavHeader>\r\n                                                                      </ContextAwareToggle>\r\n      \r\n                                                                      <Accordion.Collapse eventKey={module.nmodulecode}>\r\n                                                                          <CollapseInner className=\"bg-transparent py-2 collapse-inner rounded\">\r\n                                                                              {\r\n                                                                                 module.lstforms!==null&& (module.lstforms).map(forms => {\r\n                                                                                      return (\r\n                                                                                          <NavLink className={`collapse-item ${forms.nformcode === this.props.Login.userInfo.nformcode ? 'active-form' : ''}`} key={forms.nformcode}\r\n                                                                                              nformcode={forms.nformcode} to={'/' + forms.sclassname}\r\n                                                                                              onClick={() => this.getDetail(forms.sclassname.toLowerCase(), forms.surl,\r\n                                                                                                  forms.nformcode, forms.sdisplayname, module.nmodulecode, forms, module)}\r\n                                                                                          >\r\n                                                                                              <FormattedMessage id={forms.sdisplayname}\r\n                                                                                                  defaultMessage={forms.sdisplayname} />\r\n                                                                                          </NavLink>\r\n                                                                                      )\r\n                                                                                  })\r\n                                                                              }\r\n                                                                          </CollapseInner>\r\n                                                                      </Accordion.Collapse>\r\n                                                                  </Nav.Item>\r\n                                                              )\r\n                                                          })\r\n                                                      }\r\n                                                  </PerfectScrollbar>\r\n      \r\n                                              </Accordion>\r\n                                          </Tab.Pane>)\r\n                                  })}\r\n      \r\n                              </Tab.Content>\r\n                          </Tab.Container>\r\n                      </SidebarNav>\r\n                      </>\r\n                        }\r\n                      {/* } */}\r\n                </>\r\n          \r\n                <Preloader loading={loading} />\r\n               \r\n            </>\r\n        );\r\n    }\r\n    ToggleAction = (value) => {\r\n\r\n        this.setState({\r\n            isSidebarActive: value,\r\n            MenuVisible: !value\r\n        })\r\n        \r\n        //this.setState({MenuVisible: !this.state.MenuVisible})\r\n    }\r\n    // ToggleAction1 = (value) => {\r\n    // let isSidebarActive = this.state.isSidebarActive;\r\n    // let isPinned  = this.state.isPinned;\r\n    //     this.setState({\r\n    //         isSidebarActive: !isSidebarActive,\r\n    //         isPinned: !isPinned\r\n    //     })\r\n    // }\r\n    pinnedEvent = () => {\r\n        let { isPinned } = this.state;\r\n        this.setState({\r\n            isPinned: !isPinned\r\n        })\r\n    }\r\n    // selectInputOnChange = (ComboVal, fieldName) =>  {\r\n    //     this.setState({ [fieldName] : ComboVal }); \r\n    // }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore })(injectIntl(Menu));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}