{"ast":null,"code":"import { blockNodes, addStyles, changeBlockNode } from './blockNode';\n/**\n * Aligning block elements in the selection.\n *\n * @returns {boolean} - Returns true if any alignment is applied.\n */\n\nexport var alignBlocks = function alignBlocks(actions, commandName) {\n  return function (state, dispatch) {\n    var blocks = blockNodes(state);\n    var tr = state.tr;\n    tr.setMeta('commandName', commandName);\n    var result = false;\n    blocks.forEach(function (node) {\n      if (node.type.isTextblock) {\n        var newAttrs = {};\n        var action = actions.find(function (n) {\n          return n.node === node.type.name;\n        });\n\n        if (action) {\n          newAttrs = addStyles(node, action.style);\n        }\n\n        result = changeBlockNode(state, dispatch, tr, node, node.type, newAttrs) || result;\n      }\n    });\n\n    if (result) {\n      dispatch(tr.scrollIntoView());\n    }\n\n    return result;\n  };\n};\nexport var isAligned = function isAligned(state, actions) {\n  var blocks = blockNodes(state);\n  var result = false;\n  blocks.forEach(function (node) {\n    if (!result && node.type.isTextblock && node.attrs.style) {\n      var action = actions.find(function (a) {\n        return a.node === node.type.name;\n      });\n\n      if (action) {\n        result = action.style.every(function (style) {\n          return !!style.value && new RegExp(style.name + \":\\\\s?\" + style.value, 'i').test(node.attrs.style);\n        });\n      }\n    }\n  });\n  return result;\n};","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/node_modules/@progress/kendo-editor-common/dist/es/align.js"],"names":["blockNodes","addStyles","changeBlockNode","alignBlocks","actions","commandName","state","dispatch","blocks","tr","setMeta","result","forEach","node","type","isTextblock","newAttrs","action","find","n","name","style","scrollIntoView","isAligned","attrs","a","every","value","RegExp","test"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,eAAhC,QAAuD,aAAvD;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,WAAW,GAAG,SAAdA,WAAc,CAAUC,OAAV,EAAmBC,WAAnB,EAAgC;AAAE,SAAO,UAAUC,KAAV,EAAiBC,QAAjB,EAA2B;AACzF,QAAIC,MAAM,GAAGR,UAAU,CAACM,KAAD,CAAvB;AACA,QAAIG,EAAE,GAAGH,KAAK,CAACG,EAAf;AACAA,IAAAA,EAAE,CAACC,OAAH,CAAW,aAAX,EAA0BL,WAA1B;AACA,QAAIM,MAAM,GAAG,KAAb;AACAH,IAAAA,MAAM,CAACI,OAAP,CAAe,UAAUC,IAAV,EAAgB;AAC3B,UAAIA,IAAI,CAACC,IAAL,CAAUC,WAAd,EAA2B;AACvB,YAAIC,QAAQ,GAAG,EAAf;AACA,YAAIC,MAAM,GAAGb,OAAO,CAACc,IAAR,CAAa,UAAUC,CAAV,EAAa;AAAE,iBAAOA,CAAC,CAACN,IAAF,KAAWA,IAAI,CAACC,IAAL,CAAUM,IAA5B;AAAmC,SAA/D,CAAb;;AACA,YAAIH,MAAJ,EAAY;AACRD,UAAAA,QAAQ,GAAGf,SAAS,CAACY,IAAD,EAAOI,MAAM,CAACI,KAAd,CAApB;AACH;;AACDV,QAAAA,MAAM,GAAGT,eAAe,CAACI,KAAD,EAAQC,QAAR,EAAkBE,EAAlB,EAAsBI,IAAtB,EAA4BA,IAAI,CAACC,IAAjC,EAAuCE,QAAvC,CAAf,IAAmEL,MAA5E;AACH;AACJ,KATD;;AAUA,QAAIA,MAAJ,EAAY;AACRJ,MAAAA,QAAQ,CAACE,EAAE,CAACa,cAAH,EAAD,CAAR;AACH;;AACD,WAAOX,MAAP;AACH,GAnB0D;AAmBvD,CAnBG;AAoBP,OAAO,IAAIY,SAAS,GAAG,SAAZA,SAAY,CAAUjB,KAAV,EAAiBF,OAAjB,EAA0B;AAC7C,MAAII,MAAM,GAAGR,UAAU,CAACM,KAAD,CAAvB;AACA,MAAIK,MAAM,GAAG,KAAb;AACAH,EAAAA,MAAM,CAACI,OAAP,CAAe,UAAUC,IAAV,EAAgB;AAC3B,QAAI,CAACF,MAAD,IAAWE,IAAI,CAACC,IAAL,CAAUC,WAArB,IAAoCF,IAAI,CAACW,KAAL,CAAWH,KAAnD,EAA0D;AACtD,UAAIJ,MAAM,GAAGb,OAAO,CAACc,IAAR,CAAa,UAAUO,CAAV,EAAa;AAAE,eAAOA,CAAC,CAACZ,IAAF,KAAWA,IAAI,CAACC,IAAL,CAAUM,IAA5B;AAAmC,OAA/D,CAAb;;AACA,UAAIH,MAAJ,EAAY;AACRN,QAAAA,MAAM,GAAGM,MAAM,CAACI,KAAP,CAAaK,KAAb,CAAmB,UAAUL,KAAV,EAAiB;AACzC,iBAAO,CAAC,CAACA,KAAK,CAACM,KAAR,IAAiB,IAAIC,MAAJ,CAAWP,KAAK,CAACD,IAAN,GAAa,OAAb,GAAuBC,KAAK,CAACM,KAAxC,EAA+C,GAA/C,EAAoDE,IAApD,CAAyDhB,IAAI,CAACW,KAAL,CAAWH,KAApE,CAAxB;AACH,SAFQ,CAAT;AAGH;AACJ;AACJ,GATD;AAUA,SAAOV,MAAP;AACH,CAdM","sourcesContent":["import { blockNodes, addStyles, changeBlockNode } from './blockNode';\n/**\n * Aligning block elements in the selection.\n *\n * @returns {boolean} - Returns true if any alignment is applied.\n */\nexport var alignBlocks = function (actions, commandName) { return function (state, dispatch) {\n    var blocks = blockNodes(state);\n    var tr = state.tr;\n    tr.setMeta('commandName', commandName);\n    var result = false;\n    blocks.forEach(function (node) {\n        if (node.type.isTextblock) {\n            var newAttrs = {};\n            var action = actions.find(function (n) { return n.node === node.type.name; });\n            if (action) {\n                newAttrs = addStyles(node, action.style);\n            }\n            result = changeBlockNode(state, dispatch, tr, node, node.type, newAttrs) || result;\n        }\n    });\n    if (result) {\n        dispatch(tr.scrollIntoView());\n    }\n    return result;\n}; };\nexport var isAligned = function (state, actions) {\n    var blocks = blockNodes(state);\n    var result = false;\n    blocks.forEach(function (node) {\n        if (!result && node.type.isTextblock && node.attrs.style) {\n            var action = actions.find(function (a) { return a.node === node.type.name; });\n            if (action) {\n                result = action.style.every(function (style) {\n                    return !!style.value && new RegExp(style.name + \":\\\\s?\" + style.value, 'i').test(node.attrs.style);\n                });\n            }\n        }\n    });\n    return result;\n};\n"]},"metadata":{},"sourceType":"module"}