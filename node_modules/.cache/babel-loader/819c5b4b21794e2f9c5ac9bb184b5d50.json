{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\registration\\\\AddTestMethod.jsx\";\nimport React from 'react';\nimport { Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { injectIntl } from 'react-intl';\n\nconst AddTestMethod = props => {\n  return (\n    /*#__PURE__*/\n    //<Col md=\"12\">\n    React.createElement(FormSelectSearch, {\n      formLabel: props.intl.formatMessage({\n        id: \"IDS_METHOD\"\n      }),\n      name: \"nmethodcode\",\n      isDisabled: false,\n      placeholder: props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: false,\n      options: props.testMethodList,\n      optionId: \"nmethodcode\",\n      optionValue: \"smethodname\",\n      onChange: value => props.onComboChange(value, \"nmethodcode\"),\n      value: props.selectedRecord && props.selectedRecord[\"nmethodcode\"] ? props.selectedRecord[\"nmethodcode\"] : [],\n      isSearchable: true,\n      alphabeticalSort: true,\n      isClearable: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }\n    }) //</Col>\n\n  );\n};\n\nexport default injectIntl(AddTestMethod);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/registration/AddTestMethod.jsx"],"names":["React","Col","FormSelectSearch","injectIntl","AddTestMethod","props","intl","formatMessage","id","testMethodList","value","onComboChange","selectedRecord"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7B;AAAA;AACI;AACI,wBAAC,gBAAD;AACI,MAAA,SAAS,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CADf;AAEI,MAAA,IAAI,EAAE,aAFV;AAGI,MAAA,UAAU,EAAE,KAHhB;AAII,MAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAAzB,CAJjB;AAKI,MAAA,WAAW,EAAE,KALjB;AAMI,MAAA,OAAO,EAAEH,KAAK,CAACI,cANnB;AAOI,MAAA,QAAQ,EAAC,aAPb;AAQI,MAAA,WAAW,EAAC,aARhB;AASI,MAAA,QAAQ,EAAEC,KAAK,IAAIL,KAAK,CAACM,aAAN,CAAoBD,KAApB,EAA2B,aAA3B,CATvB;AAUI,MAAA,KAAK,EAAEL,KAAK,CAACO,cAAN,IAAwBP,KAAK,CAACO,cAAN,CAAqB,aAArB,CAAxB,GACPP,KAAK,CAACO,cAAN,CAAqB,aAArB,CADO,GAC+B,EAX1C;AAYI,MAAA,YAAY,EAAE,IAZlB;AAaI,MAAA,gBAAgB,EAAE,IAbtB;AAcI,MAAA,WAAW,EAAE,IAdjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFR,CAmBI;;AAnBJ;AAqBH,CAtBD;;AAwBA,eAAeT,UAAU,CAACC,aAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst AddTestMethod = (props) => {\r\n    return (\r\n        //<Col md=\"12\">\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_METHOD\" })}\r\n                name={\"nmethodcode\"}\r\n                isDisabled={false}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={false}\r\n                options={props.testMethodList}\r\n                optionId='nmethodcode'\r\n                optionValue='smethodname'\r\n                onChange={value => props.onComboChange(value, \"nmethodcode\")}\r\n                value={props.selectedRecord && props.selectedRecord[\"nmethodcode\"] ?\r\n                props.selectedRecord[\"nmethodcode\"] : []}    \r\n                isSearchable={true}\r\n                alphabeticalSort={true}\r\n                isClearable={true}\r\n            >\r\n            </FormSelectSearch>\r\n        //</Col>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTestMethod);"]},"metadata":{},"sourceType":"module"}