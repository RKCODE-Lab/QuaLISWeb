{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\QuaLISWeb\\\\src\\\\components\\\\sidebar\\\\sidebar.component.jsx\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Tab, Nav, Image, Badge, Accordion } from 'react-bootstrap';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport Preloader from '../preloader/preloader.component';\nimport { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore, getDashBoardForHome } from '../../actions';\nimport { SidebarNav, SidebarBrand, SidebarBrandTxt, NavHeader, CollapseInner } from '../../components/sidebar/sidebar.styles';\nimport MenuExpand from \"../../assets/image/menu-expand.svg\";\nimport MenuCollapse from \"../../assets/image/menu-collapse.svg\";\nimport PrimaryLogo from '../../assets/image/sidebar-logo.png'; //import Logo from '../../assets/image/qualis-lims@3x.png';\n\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { formatInputDate } from '../CommonScript'; //import LogiLabLogo from '../../assets/image/logilablogo.png'\n//import SDMSLogo from '../../assets/image/sdmslogo.png'\n\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBell, faHome, faServer } from '@fortawesome/free-solid-svg-icons'; //import ContextAwareToggle from './ContextAwareToggle';\n\nimport PerfectScrollbar from 'react-perfect-scrollbar';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Menu extends PureComponent {\n  constructor(props) {\n    super(props);\n\n    this.getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, modulename) => {\n      if (this.props.inputRef.current) this.props.inputRef.current.value = \"\";\n\n      if (this.props.Login.userInfo.nformcode !== formCode) {\n        const userInfo = { ...this.props.Login.userInfo,\n          \"nformcode\": formCode,\n          \"nmodulecode\": moduleCode,\n          \"sformname\": formname.sdisplayname,\n          \"smodulename\": modulename.sdisplayname\n        };\n        const inputParam = {\n          inputData: {\n            \"userinfo\": userInfo,\n            settings: this.props.Login.settings,\n            currentdate: formatInputDate(new Date(), true)\n          },\n          classUrl,\n          methodUrl,\n          displayName,\n          key: `MenuId_${formname.nmenucode}`,\n          serviceNeed: true\n        };\n        this.props.menuHide();\n        this.props.callService(inputParam);\n      }\n    };\n\n    this.onELNLoginClick = () => {\n      if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[3]) {\n        const serverUrl = this.props.Login.sdmselnsettings[3] + \"Login/Validateuser\";\n        const uiUrl = this.props.Login.sdmselnsettings[4];\n        const userInfo = this.props.Login.userInfo;\n        const inputParam = {\n          username: userInfo.sloginid,\n          lssitemaster: {\n            \"sitecode\": \"1\"\n          },\n          password: userInfo.spassword,\n          lsusergroup: {\n            \"usergroupname\": userInfo.suserrolename\n          }\n        };\n        this.props.elnLoginAction(inputParam, serverUrl, uiUrl);\n      } else {\n        toast.info(this.intl.FormattedMessage({\n          id: \"IDS_ELNSERVERURLNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.onSDMSLoginClick = () => {\n      if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[1]) {\n        const serverUrl = this.props.Login.sdmselnsettings[1] + \"/Login/validatelinkUser\";\n        const uiUrl = this.props.Login.sdmselnsettings[2];\n        const userInfo = this.props.Login.userInfo;\n        const inputParam = {\n          sUserName: userInfo.sloginid,\n          sSiteCode: \"DEFAULT\",\n          sGroupName: userInfo.suserrolename\n        };\n        this.props.sdmsLoginAction(inputParam, serverUrl, uiUrl);\n      } else {\n        toast.info(this.intl.FormattedMessage({\n          id: \"IDS_ELNSERVERURLNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.setKey = k => {\n      this.setState({\n        key: k\n      });\n    };\n\n    this.setKeyMenu = k => {\n      this.setState({\n        keyMenu: k\n      });\n    };\n\n    this.getDetailHome = menu => {\n      const userInfo = { ...this.props.Login.userInfo\n      };\n      userInfo['nformcode'] = -1;\n      userInfo['nmodulecode'] = -1;\n      userInfo['sformname'] = null;\n      userInfo['smodulename'] = null;\n      let inputParam = {};\n\n      if (menu.shomename === 'apiservice') {\n        inputParam = {\n          classUrl: menu.shomename,\n          methodUrl: menu.smethodurl\n        };\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: {},\n          userInfo,\n          organisation: undefined,\n          loading: false,\n          displayName: menu.sdisplayname,\n          shomename: menu.shomename,\n          ...inputParam\n        }\n      };\n      this.props.layOutGetHome(updateInfo);\n    };\n\n    this.toggleSearch = () => {\n      this.setState({\n        showSearch: !this.state.showSearch\n      });\n    };\n\n    this.ToggleAction = value => {\n      if (!this.state.isPinned) {\n        this.setState({\n          isSidebarActive: value,\n          MenuVisible: !value\n        });\n      }\n    };\n\n    this.pinnedEvent = () => {\n      let {\n        isPinned\n      } = this.state;\n      this.setState({\n        isPinned: !isPinned\n      });\n    };\n\n    this.formRef = React.createRef();\n    this.state = {\n      show: false,\n      nusermultirolecode: -1,\n      selectedRecord: {},\n      isSidebarActive: false,\n      isPinned: false,\n      MenuVisible: false,\n      HomeMenuVisible: false,\n      key: this.props.Login.defaultMenuHome && this.props.Login.defaultMenuHome ? `MenuId_${this.props.Login.defaultMenuHome.nhomedesigncode}` : \"MenuId_1\",\n      keyMenu: this.props.Login.menuDesign && this.props.Login.menuDesign ? `MenuId_${this.props.Login.menuDesign[0].nmenucode}` : \"MenuId_-2\",\n      alert: []\n    };\n    this.toggleMenu = this.toggleMenu.bind(this);\n  }\n\n  toggleMenu() {\n    this.setState({\n      HomeMenuVisible: !this.state.HomeMenuVisible\n    });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.Login.menuDesign !== prevProps.Login.menuDesign) {\n      this.setState({\n        key: this.props.Login.HomeDesign && this.props.Login.HomeDesign[0] ? `MenuId_${this.props.Login.defaultMenuHome.nhomedesigncode}` : \"MenuId_1\"\n      });\n    }\n  }\n\n  render() {\n    //const { isSidebarActive } = this.state;\n    const {\n      HomeDesign,\n      loading,\n      menuDesign\n    } = this.props.Login;\n    const activePage = this.props.Login.userInfo.nmodulecode;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(React.Fragment, null, this.props.history.history.location.pathname === \"/home\" || this.props.history.history.location.pathname === \"/dashboard\" || this.props.history.history.location.pathname === \"/alert\" || this.props.history.history.location.pathname === \"/apiservice\" ? /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"text-center menu-toggle-btn\",\n      onMouseEnter: () => this.setState({\n        HomeMenuVisible: true\n      }),\n      onMouseLeave: () => this.setState({\n        HomeMenuVisible: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MenuExpand,\n      alt: \"Lims-Logo\",\n      width: \"40\",\n      height: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, !this.props.isPinned ? /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"text-center menu-toggle-btn\",\n      style: {\n        zIndex: 1079\n      },\n      onClick: this.props.pinMenu,\n      onMouseEnter: () => this.setState({\n        MenuVisible: true\n      }),\n      onMouseLeave: () => this.setState({\n        MenuVisible: false\n      }),\n      ref: this.props.carRef1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MenuExpand,\n      alt: \"Lims-Logo\",\n      width: \"40\",\n      height: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 37\n      }\n    })) : /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"text-center menu-toggle-btn\",\n      style: {\n        zIndex: 1079\n      },\n      onClick: this.props.pinMenu,\n      ref: this.props.carRef1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: MenuCollapse,\n      alt: \"Lims-Logo\",\n      width: \"40\",\n      height: \"40\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 37\n      }\n    }))), this.props.history.history.location.pathname === \"/home\" || this.props.history.history.location.pathname === \"/dashboard\" || this.props.history.history.location.pathname === \"/alert\" || this.props.history.history.location.pathname === \"/apiservice\" ? /*#__PURE__*/React.createElement(React.Fragment, null, this.state.HomeMenuVisible ? /*#__PURE__*/React.createElement(\"div\", {\n      className: `sidebar-block ${this.props.isPinned ? \"pinned-sidebar\" : ''} ${this.state.keyMenu === 'MenuId_-2' && 'toggled'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(SidebarNav, {\n      className: `d-flex side-nav sidebar sidebar-dark bg-gradient-primary ${this.props.isPinned ? \"pinned-sidebar\" : ''} ${this.state.keyMenu === 'MenuId_-2' && 'toggled'}  ${this.props.fullView && 'sidebar-fullview'}`,\n      onMouseEnter: () => this.setState({\n        HomeMenuVisible: true\n      }),\n      onMouseLeave: () => this.setState({\n        HomeMenuVisible: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      activeKey: this.state.keyMenu,\n      onSelect: k => this.setKeyMenu(k),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 32\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav flex-column side-nav\",\n      variant: \"pills\",\n      key: \"MenuIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 36\n      }\n    }, menuDesign && menuDesign.map(menu => {\n      return menu.nmenucode !== -2 ? /*#__PURE__*/React.createElement(Nav.Link, {\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/${menu.smenuname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        width: \"34\",\n        height: \"34\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 52\n        }\n      }, menu.sdisplayname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/home',\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        onClick: e => this.getDetailHome(HomeDesign.filter(x => x.shomename === 'home')[0]),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 62\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faHome,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 52\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 52\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_HOME\"\n      })));\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: PrimaryLogo,\n      alt: \"Primary-Logo\",\n      width: \"45\",\n      height: \"60\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 44\n      }\n    }))), /*#__PURE__*/React.createElement(Tab.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 36\n      }\n    }, menuDesign && menuDesign.map(menu => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 48\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        className: \"navbar-nav position-relative\",\n        as: \"ul\",\n        defaultActiveKey: activePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 52\n        }\n      }, /*#__PURE__*/React.createElement(SidebarBrand, {\n        className: \"sidebar-brand d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 56\n        }\n      }, /*#__PURE__*/React.createElement(SidebarBrandTxt, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 60\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: menu.sdisplayname,\n        defaultMessage: menu.sdisplayname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 64\n        }\n      }))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n        className: \"sidebar-scroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 56\n        }\n      }, menu.nmenucode !== -2 && menu.lstmodule.map(module => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav.Item, {\n          key: module.nmodulecode,\n          as: \"li\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 72\n          }\n        }, /*#__PURE__*/React.createElement(Card.Header, {\n          className: \"pr-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 76\n          }\n        }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n          as: Button,\n          className: `${activePage === module.nmodulecode ? 'show' : ''}`,\n          variant: \"link\",\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 80\n          }\n        }, /*#__PURE__*/React.createElement(NavHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 84\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: module.sdisplayname,\n          defaultMessage: module.sdisplayname,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 88\n          }\n        })), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 84\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 88\n          }\n        })))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 76\n          }\n        }, /*#__PURE__*/React.createElement(CollapseInner, {\n          className: \"bg-transparent py-2 collapse-inner rounded\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 80\n          }\n        }, module.lstforms !== null && module.lstforms.map(forms => {\n          return /*#__PURE__*/React.createElement(NavLink, {\n            className: `collapse-item ${forms.nformcode === this.props.Login.userInfo.nformcode ? 'active-form' : ''}`,\n            key: forms.nformcode,\n            nformcode: forms.nformcode,\n            to: '/' + forms.sclassname,\n            onClick: () => this.getDetail(forms.sclassname.toLowerCase(), forms.surl, forms.nformcode, forms.sdisplayname, module.nmodulecode, forms, module),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 92\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: forms.sdisplayname,\n            defaultMessage: forms.sdisplayname,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 96\n            }\n          }));\n        })))));\n      }))));\n    }))))) : /*#__PURE__*/React.createElement(SidebarNav, {\n      className: `d-flex side-nav sidebar sidebar-dark bg-gradient-primary toggled ${this.props.fullView && 'sidebar-fullview'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      activeKey: this.state.key,\n      onSelect: k => this.setKey(k),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav flex-column side-nav\",\n      variant: \"pills\",\n      key: \"MenuIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, HomeDesign && HomeDesign.map(menu => {\n      return menu.shomename === 'dashboard' ? /*#__PURE__*/React.createElement(Nav.Link, {\n        key: menu.nhomedesigncode,\n        eventKey: `MenuId_${menu.nhomedesigncode}`,\n        onClick: e => this.getDetailHome(menu),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/${menu.shomename.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        width: \"34\",\n        height: \"34\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 49\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 49\n        }\n      }, menu.sdisplayname)) : menu.shomename === 'home' ? /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/home',\n        key: menu.nhomedesigncode,\n        eventKey: `MenuId_${menu.nhomedesigncode}`,\n        onClick: e => this.getDetailHome(menu),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faHome,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 53\n        }\n      }, menu.sdisplayname)) : menu.shomename === 'apiservice' ? /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/apiservice',\n        key: menu.nhomedesigncode,\n        eventKey: `MenuId_${menu.nhomedesigncode}`,\n        onClick: e => this.getDetailHome(menu),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faServer,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 325,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 53\n        }\n      }, menu.sdisplayname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/alert',\n        key: menu.nhomedesigncode,\n        eventKey: `MenuId_${menu.nhomedesigncode}`,\n        onClick: e => this.getDetailHome(menu),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faBell,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 57\n        }\n      }, menu.sdisplayname), this.props.Login.alert && this.props.Login.alert.length > 0 ? /*#__PURE__*/React.createElement(Badge, {\n        style: {\n          \"position\": \"relative\",\n          \"bottom\": \"56px\",\n          \"font-size\": \"0.7rem\",\n          \"width\": \"20px\",\n          \"left\": \"30px\"\n        },\n        pill: true,\n        variant: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 61\n        }\n      }, this.props.Login.alert && this.props.Login.alert.length) : \"\");\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: PrimaryLogo,\n      alt: \"Primary-Logo\",\n      width: \"45\",\n      height: \"60\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 41\n      }\n    })))))) : /*#__PURE__*/React.createElement(React.Fragment, null, this.state.MenuVisible && /*#__PURE__*/React.createElement(\"div\", {\n      className: `sidebar-block ${this.props.isPinned ? \"pinned-sidebar\" : ''} ${this.state.keyMenu === 'MenuId_-2' && 'toggled'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SidebarNav, {\n      className: `d-flex side-nav sidebar sidebar-dark bg-gradient-primary ${this.props.isPinned ? \"pinned-sidebar\" : ''} ${this.state.keyMenu === 'MenuId_-2' && 'toggled'}  ${this.props.fullView && 'sidebar-fullview'}`,\n      onMouseEnter: () => this.setState({\n        MenuVisible: true\n      }),\n      onMouseLeave: () => this.props.isPinned ? this.setState({\n        MenuVisible: true\n      }) : this.setState({\n        MenuVisible: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Tab.Container, {\n      activeKey: this.state.keyMenu,\n      onSelect: k => this.setKeyMenu(k),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"nav flex-column side-nav\",\n      variant: \"pills\",\n      key: \"MenuIcon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 37\n      }\n    }, menuDesign && menuDesign.map(menu => {\n      return menu.nmenucode !== -2 ? /*#__PURE__*/React.createElement(Nav.Link, {\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Image, {\n        src: require(`../../assets/image/${menu.smenuname.toLowerCase()}.svg`),\n        alt: \"sidebar\",\n        width: \"34\",\n        height: \"34\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 53\n        }\n      }, menu.sdisplayname)) : /*#__PURE__*/React.createElement(Nav.Link, {\n        to: '/home',\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        onClick: e => this.getDetailHome(HomeDesign.filter(x => x.shomename === 'home')[0], this.props.isPinned ? this.setState({\n          MenuVisible: true\n        }) : this.setState({\n          MenuVisible: false\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faHome,\n        size: \"2x\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374,\n          columnNumber: 53\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 53\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_HOME\"\n      })));\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"mt-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Image, {\n      src: PrimaryLogo,\n      alt: \"Primary-Logo\",\n      width: \"45\",\n      height: \"60\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 45\n      }\n    }))), /*#__PURE__*/React.createElement(Tab.Content, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 37\n      }\n    }, menuDesign && menuDesign.map(menu => {\n      return /*#__PURE__*/React.createElement(Tab.Pane, {\n        key: menu.nmenucode,\n        eventKey: `MenuId_${menu.nmenucode}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Accordion, {\n        className: \"navbar-nav position-relative\",\n        as: \"ul\",\n        defaultActiveKey: activePage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(SidebarBrand, {\n        className: \"sidebar-brand d-flex align-items-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 57\n        }\n      }, /*#__PURE__*/React.createElement(SidebarBrandTxt, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: menu.sdisplayname,\n        defaultMessage: menu.sdisplayname,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 65\n        }\n      }))), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n        className: \"sidebar-scroll\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 57\n        }\n      }, menu.nmenucode !== -2 && menu.lstmodule.map(module => {\n        return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Nav.Item, {\n          key: module.nmodulecode,\n          as: \"li\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 409,\n            columnNumber: 73\n          }\n        }, /*#__PURE__*/React.createElement(Card.Header, {\n          className: \"pr-0\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(Accordion.Toggle, {\n          as: Button,\n          className: `${activePage === module.nmodulecode ? 'show' : ''}`,\n          variant: \"link\",\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 81\n          }\n        }, /*#__PURE__*/React.createElement(NavHeader, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(FormattedMessage, {\n          id: module.sdisplayname,\n          defaultMessage: module.sdisplayname,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414,\n            columnNumber: 89\n          }\n        })), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417,\n            columnNumber: 89\n          }\n        })))), /*#__PURE__*/React.createElement(Accordion.Collapse, {\n          eventKey: module.nmodulecode,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 77\n          }\n        }, /*#__PURE__*/React.createElement(CollapseInner, {\n          className: \"bg-transparent py-2 collapse-inner rounded\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 81\n          }\n        }, module.lstforms !== null && module.lstforms.map(forms => {\n          return /*#__PURE__*/React.createElement(NavLink, {\n            className: `collapse-item ${forms.nformcode === this.props.Login.userInfo.nformcode ? 'active-form' : ''}`,\n            key: forms.nformcode,\n            nformcode: forms.nformcode,\n            to: '/' + forms.sclassname,\n            onClick: () => this.getDetail(forms.sclassname.toLowerCase(), forms.surl, forms.nformcode, forms.sdisplayname, module.nmodulecode, forms, module),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 93\n            }\n          }, /*#__PURE__*/React.createElement(FormattedMessage, {\n            id: forms.sdisplayname,\n            defaultMessage: forms.sdisplayname,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 97\n            }\n          }));\n        })))));\n      }))));\n    }))))))), /*#__PURE__*/React.createElement(Preloader, {\n      loading: loading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  navPage,\n  elnLoginAction,\n  sdmsLoginAction,\n  updateStore,\n  getDashBoardForHome\n})(injectIntl(Menu));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/QuaLISWeb/src/components/sidebar/sidebar.component.jsx"],"names":["React","PureComponent","connect","NavLink","Tab","Nav","Image","Badge","Accordion","Card","Button","FormattedMessage","injectIntl","Preloader","callService","navPage","elnLoginAction","sdmsLoginAction","updateStore","getDashBoardForHome","SidebarNav","SidebarBrand","SidebarBrandTxt","NavHeader","CollapseInner","PrimaryLogo","formatInputDate","toast","DEFAULT_RETURN","FontAwesomeIcon","faBell","faHome","faServer","PerfectScrollbar","mapStateToProps","state","Login","Menu","constructor","props","getDetail","classUrl","methodUrl","formCode","displayName","moduleCode","formname","modulename","inputRef","current","value","userInfo","nformcode","sdisplayname","inputParam","inputData","settings","currentdate","Date","key","nmenucode","serviceNeed","menuHide","onELNLoginClick","sdmselnsettings","serverUrl","uiUrl","username","sloginid","lssitemaster","password","spassword","lsusergroup","suserrolename","info","intl","id","onSDMSLoginClick","sUserName","sSiteCode","sGroupName","setKey","k","setState","setKeyMenu","keyMenu","getDetailHome","menu","shomename","smethodurl","updateInfo","typeName","data","masterData","organisation","undefined","loading","layOutGetHome","toggleSearch","showSearch","ToggleAction","isPinned","isSidebarActive","MenuVisible","pinnedEvent","formRef","createRef","show","nusermultirolecode","selectedRecord","HomeMenuVisible","defaultMenuHome","nhomedesigncode","menuDesign","alert","toggleMenu","bind","componentDidUpdate","prevProps","HomeDesign","render","activePage","nmodulecode","history","location","pathname","MenuExpand","zIndex","pinMenu","carRef1","MenuCollapse","fullView","map","require","smenuname","toLowerCase","e","filter","x","formatMessage","lstmodule","module","lstforms","forms","sclassname","surl","length"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Tab, Nav, Image, Badge,Accordion } from 'react-bootstrap';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { FormattedMessage,injectIntl } from 'react-intl';\r\nimport Preloader from '../preloader/preloader.component';\r\nimport { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore, getDashBoardForHome } from '../../actions'\r\nimport { SidebarNav, SidebarBrand, SidebarBrandTxt, NavHeader, CollapseInner } from '../../components/sidebar/sidebar.styles';\r\nimport MenuExpand from '../../assets/image/menu-expand.svg';\r\nimport MenuCollapse from '../../assets/image/menu-collapse.svg';\r\nimport PrimaryLogo from '../../assets/image/sidebar-logo.png';\r\n//import Logo from '../../assets/image/qualis-lims@3x.png';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { formatInputDate } from '../CommonScript';\r\n//import LogiLabLogo from '../../assets/image/logilablogo.png'\r\n//import SDMSLogo from '../../assets/image/sdmslogo.png'\r\nimport { toast } from 'react-toastify';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faBell, faHome, faServer } from '@fortawesome/free-solid-svg-icons';\r\n//import ContextAwareToggle from './ContextAwareToggle';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar'\r\nconst mapStateToProps = (state) => {\r\n    return { Login: state.Login }\r\n}\r\nclass Menu extends PureComponent {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            show: false,\r\n            nusermultirolecode: -1,\r\n            selectedRecord: {},\r\n            isSidebarActive: false,\r\n            isPinned: false,\r\n            MenuVisible: false,\r\n            HomeMenuVisible: false,\r\n            key: this.props.Login.defaultMenuHome &&\r\n                this.props.Login.defaultMenuHome ?\r\n                `MenuId_${this.props.Login.defaultMenuHome.nhomedesigncode}` :\r\n                \"MenuId_1\",\r\n                keyMenu: this.props.Login.menuDesign &&\r\n                this.props.Login.menuDesign ?\r\n                `MenuId_${this.props.Login.menuDesign[0].nmenucode}` :\r\n                \"MenuId_-2\",\r\n            alert: []\r\n        }\r\n        this.toggleMenu = this.toggleMenu.bind(this);\r\n    }\r\n    toggleMenu() {\r\n        this.setState({ HomeMenuVisible: !this.state.HomeMenuVisible })\r\n    }\r\n\r\n\r\n    getDetail = (classUrl, methodUrl, formCode, displayName, moduleCode, formname, modulename) => {\r\n        if (this.props.inputRef.current)\r\n            this.props.inputRef.current.value = \"\"\r\n        if (this.props.Login.userInfo.nformcode !== formCode) {\r\n            const userInfo = {\r\n                ...this.props.Login.userInfo, \"nformcode\": formCode,\r\n                \"nmodulecode\": moduleCode, \"sformname\": formname.sdisplayname, \"smodulename\": modulename.sdisplayname\r\n            }\r\n            const inputParam = {\r\n                inputData: { \"userinfo\": userInfo, \r\n                settings : this.props.Login.settings,\r\n                currentdate: formatInputDate(new Date(), true) },\r\n                classUrl, methodUrl, displayName, key: `MenuId_${formname.nmenucode}`, serviceNeed: true\r\n            };\r\n            this.props.menuHide();\r\n            this.props.callService(inputParam);\r\n        }\r\n    }\r\n\r\n    onELNLoginClick = () => {\r\n        if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[3]) {\r\n            const serverUrl = this.props.Login.sdmselnsettings[3] + \"Login/Validateuser\";\r\n            const uiUrl = this.props.Login.sdmselnsettings[4];\r\n            const userInfo = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                username: userInfo.sloginid,\r\n                lssitemaster: { \"sitecode\": \"1\" },\r\n                password: userInfo.spassword,\r\n                lsusergroup: { \"usergroupname\": userInfo.suserrolename }\r\n            };\r\n            this.props.elnLoginAction(inputParam, serverUrl, uiUrl);\r\n        } else {\r\n            toast.info(this.intl.FormattedMessage({ id: \"IDS_ELNSERVERURLNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n\r\n    onSDMSLoginClick = () => {\r\n        if (this.props.Login.sdmselnsettings && this.props.Login.sdmselnsettings[1]) {\r\n            const serverUrl = this.props.Login.sdmselnsettings[1] + \"/Login/validatelinkUser\";\r\n            const uiUrl = this.props.Login.sdmselnsettings[2];\r\n            const userInfo = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                sUserName: userInfo.sloginid,\r\n                sSiteCode: \"DEFAULT\",\r\n                sGroupName: userInfo.suserrolename\r\n            };\r\n            this.props.sdmsLoginAction(inputParam, serverUrl, uiUrl);\r\n        } else {\r\n            toast.info(this.intl.FormattedMessage({ id: \"IDS_ELNSERVERURLNOTAVAILABLE\" }));\r\n        }\r\n    }\r\n    setKey = (k) => {\r\n        this.setState({ key: k })\r\n    }\r\n\r\n    setKeyMenu = (k) => {\r\n        this.setState({ keyMenu: k })\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.Login.menuDesign !== prevProps.Login.menuDesign) {\r\n            this.setState({\r\n                key: this.props.Login.HomeDesign && this.props.Login.HomeDesign[0] ?\r\n                    `MenuId_${this.props.Login.defaultMenuHome.nhomedesigncode}` : \"MenuId_1\"\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n\r\n    getDetailHome = (menu) => {\r\n        const userInfo = {\r\n            ...this.props.Login.userInfo\r\n        }\r\n        userInfo['nformcode'] = -1\r\n        userInfo['nmodulecode'] = -1\r\n        userInfo['sformname'] = null\r\n        userInfo['smodulename'] = null\r\n\r\n        let inputParam = {}\r\n\r\n        if (menu.shomename === 'apiservice') {\r\n            inputParam = { classUrl: menu.shomename, methodUrl: menu.smethodurl }\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData: {}, userInfo, organisation: undefined, loading: false, displayName: menu.sdisplayname, shomename: menu.shomename, ...inputParam }\r\n        }\r\n        this.props.layOutGetHome(updateInfo)\r\n\r\n\r\n\r\n    }\r\n    toggleSearch = () => {\r\n\r\n        this.setState({\r\n            showSearch: !this.state.showSearch\r\n        })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        //const { isSidebarActive } = this.state;\r\n        const { HomeDesign, loading,menuDesign } = this.props.Login;\r\n        const activePage = this.props.Login.userInfo.nmodulecode;\r\n        return (\r\n            <>\r\n                <>     \r\n                  \r\n                    {(this.props.history.history.location.pathname === \"/home\" || this.props.history.history.location.pathname === \"/dashboard\" || this.props.history.history.location.pathname === \"/alert\" || this.props.history.history.location.pathname === \"/apiservice\") ?\r\n                        <Nav.Link className=\"text-center menu-toggle-btn\"\r\n                        onMouseEnter={() => this.setState({ HomeMenuVisible: true })}     \r\n                        onMouseLeave={() => this.setState({ HomeMenuVisible: false })}  \r\n                        >\r\n                            <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" />\r\n                        </Nav.Link> : \r\n                        <>\r\n                            {/* {!this.props.isPinned ?\r\n                                <Nav.Link className=\"text-center menu-toggle-btn\"\r\n                                onMouseEnter={() => this.setState({ MenuVisible: true })} \r\n                                onMouseLeave={() => this.setState({ MenuVisible: false })}\r\n                                onClick={() => this.setState({ isPinned: !this.state.isPinned})}>\r\n                                    <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" />\r\n                                </Nav.Link>\r\n                                :\r\n                                <Nav.Link className=\"text-center menu-toggle-btn\" onClick={() => this.setState({ isPinned: !this.state.isPinned })}>\r\n                                    <img src={MenuCollapse} alt=\"Lims-Logo\" width=\"40\" height=\"40\" />\r\n                                </Nav.Link>\r\n                            }  */}\r\n                              {!this.props.isPinned ?    \r\n                                <Nav.Link className=\"text-center menu-toggle-btn\"  style={{ zIndex: 1079 }}\r\n                                    onClick={this.props.pinMenu}            \r\n                                    onMouseEnter={() => this.setState({ MenuVisible: true })} \r\n                                    onMouseLeave={() => this.setState({ MenuVisible: false })}\r\n                                    ref={this.props.carRef1}>\r\n                                    <img src={MenuExpand} alt=\"Lims-Logo\" width=\"40\" height=\"40\" />\r\n                                </Nav.Link>  :\r\n                                <Nav.Link className=\"text-center menu-toggle-btn\"  style={{ zIndex: 1079 }}\r\n                                    onClick={this.props.pinMenu}            \r\n                                    ref={this.props.carRef1}>\r\n                                    <img src={MenuCollapse} alt=\"Lims-Logo\" width=\"40\" height=\"40\" />\r\n                                </Nav.Link>\r\n                                }\r\n                        </>\r\n                    }   \r\n                    {(this.props.history.history.location.pathname === \"/home\" || this.props.history.history.location.pathname === \"/dashboard\" || this.props.history.history.location.pathname === \"/alert\" || this.props.history.history.location.pathname === \"/apiservice\")?\r\n                        <>\r\n                        {this.state.HomeMenuVisible ?\r\n                           <div className={`sidebar-block ${this.props.isPinned ? \"pinned-sidebar\" :''} ${this.state.keyMenu==='MenuId_-2' && 'toggled'}` }> \r\n                           <SidebarNav \r\n                               className={`d-flex side-nav sidebar sidebar-dark bg-gradient-primary ${this.props.isPinned ? \"pinned-sidebar\" :''} ${this.state.keyMenu==='MenuId_-2' && 'toggled'}  ${this.props.fullView && 'sidebar-fullview'}`} \r\n                               onMouseEnter={() => this.setState({ HomeMenuVisible: true })} \r\n                               onMouseLeave={() => this.setState({ HomeMenuVisible: false })} >\r\n                               <Tab.Container\r\n                                   activeKey={this.state.keyMenu}\r\n                                   onSelect={(k) => this.setKeyMenu(k)}>\r\n                                   <Nav className=\"nav flex-column side-nav\" variant=\"pills\" key='MenuIcon'>\r\n                                       {menuDesign && menuDesign.map((menu) => {\r\n                                           return(menu.nmenucode !== -2 ?\r\n                                               <Nav.Link key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`} >\r\n                                                   <Image src={require(`../../assets/image/${menu.smenuname.toLowerCase()}.svg`)} alt=\"sidebar\" width=\"34\" height=\"34\" />\r\n                                                   <span>{menu.sdisplayname}</span>\r\n                                               </Nav.Link> : <Nav.Link to={'/home'} key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`}  \r\n                                               onClick={(e) => this.getDetailHome(HomeDesign.filter(x=>x.shomename==='home')[0])}  >\r\n                                                   {/* <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" /> */}\r\n                                                   <FontAwesomeIcon icon={faHome} size=\"2x\" />                                                        \r\n                                                   <span>{this.props.intl.formatMessage({id: \"IDS_HOME\"})}</span>\r\n                                               </Nav.Link>\r\n                                           )\r\n                                       })}\r\n                                               {/* <Nav.Link key={6} onClick={() => this.onELNLoginClick()}>\r\n                                                   <Image src={LogiLabLogo} alt=\"logilablogo\" width=\"45\" height=\"55\" />\r\n                                               </Nav.Link>\r\n                                               <Nav.Link key={7} onClick={() => this.onSDMSLoginClick()}>\r\n                                                   <Image src={SDMSLogo} alt=\"sdmslogo\" width=\"45\" height=\"55\" />\r\n                                               </Nav.Link> */}\r\n                                               {/* //key={this.state.key} eventKey={this.state.key}  */}\r\n                                               \r\n                                       <Nav.Link className=\"mt-auto\">\r\n                                           <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" />\r\n                                       </Nav.Link>                    \r\n                                   </Nav>\r\n                                           {/* <Button className=\"rounded-circle border-0\" id=\"sidebarToggle\" ></Button> */}\r\n                                   <Tab.Content>   \r\n                                       {menuDesign && menuDesign.map(menu => {\r\n                                           return (\r\n                                               <Tab.Pane key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`}>\r\n                                                   <Accordion className=\"navbar-nav position-relative\" as=\"ul\" defaultActiveKey={activePage} >\r\n                                                       {/* onClick={() => this.pinnedEvent()} */}\r\n                                                       <SidebarBrand className=\"sidebar-brand d-flex align-items-center\">\r\n                                                           <SidebarBrandTxt>\r\n                                                               <FormattedMessage id={menu.sdisplayname}\r\n                                                                   defaultMessage={menu.sdisplayname} />\r\n                                                           </SidebarBrandTxt>\r\n                                                       </SidebarBrand>\r\n                                                       <PerfectScrollbar className=\"sidebar-scroll\">\r\n                                                           {\r\n                                                               menu.nmenucode!==-2&&(menu.lstmodule).map(module => {\r\n                                                               return (\r\n                                                                       <>\r\n                                                                       <Nav.Item key={module.nmodulecode} as=\"li\">\r\n                                                                           <Card.Header className='pr-0'>\r\n                                                                               <Accordion.Toggle as={Button} className={`${activePage === module.nmodulecode  ? 'show' : ''}`}\r\n                                                                               variant=\"link\" eventKey={module.nmodulecode}  >\r\n                                                                                   <NavHeader >\r\n                                                                                       <FormattedMessage id={module.sdisplayname} defaultMessage={module.sdisplayname} />\r\n                                                                                   </NavHeader>\r\n                                                                                   <Accordion.Collapse eventKey={module.nmodulecode}>\r\n                                                                                       <Card.Body></Card.Body>\r\n                                                                                   </Accordion.Collapse>\r\n                                                                               </Accordion.Toggle>\r\n                                                                               \r\n                                                                           </Card.Header>\r\n                                                                               {/* <ContextAwareToggle eventKey={module.nmodulecode}>\r\n                                                                                   <NavHeader >\r\n                                                                                       <FormattedMessage id={module.sdisplayname}\r\n                                                                                           defaultMessage={module.sdisplayname} />\r\n                                                                                   </NavHeader>\r\n                                                                               </ContextAwareToggle> */}                    \r\n                                                                           <Accordion.Collapse eventKey={module.nmodulecode}  >\r\n                                                                               <CollapseInner className=\"bg-transparent py-2 collapse-inner rounded\">\r\n                                                                                   {module.lstforms!==null&& (module.lstforms).map(forms => {\r\n                                                                                       return (\r\n                                                                                           <NavLink className={`collapse-item ${forms.nformcode === this.props.Login.userInfo.nformcode ? 'active-form' : ''}`} key={forms.nformcode}\r\n                                                                                               nformcode={forms.nformcode} to={'/' + forms.sclassname}\r\n                                                                                               onClick={() => this.getDetail(forms.sclassname.toLowerCase(), forms.surl,\r\n                                                                                                   forms.nformcode, forms.sdisplayname, module.nmodulecode, forms, module)}\r\n                                                                                           >\r\n                                                                                               <FormattedMessage id={forms.sdisplayname}\r\n                                                                                                   defaultMessage={forms.sdisplayname} />\r\n                                                                                           </NavLink>\r\n                                                                                       )\r\n                                                                                   })}\r\n                                                                               </CollapseInner>\r\n                                                                           </Accordion.Collapse>\r\n                                                                       </Nav.Item>\r\n                                                                       </>\r\n                                                                   )\r\n                                                               })\r\n                                                           }\r\n                                                       </PerfectScrollbar>                    \r\n                                                   </Accordion>\r\n                                               </Tab.Pane>)\r\n                                       })}            \r\n                                   </Tab.Content>\r\n                               </Tab.Container>\r\n                           </SidebarNav>\r\n                       </div>:\r\n                            <SidebarNav className={`d-flex side-nav sidebar sidebar-dark bg-gradient-primary toggled ${this.props.fullView && 'sidebar-fullview'}`}>\r\n                            <Tab.Container activeKey={this.state.key} onSelect={(k) => this.setKey(k)}>\r\n                                {/* Left Menu Icon */}\r\n                                < Nav className=\"nav flex-column side-nav\" variant=\"pills\" key='MenuIcon'>                                  \r\n                                    {HomeDesign && HomeDesign.map((menu) => {\r\n                                        return (menu.shomename === 'dashboard' ?\r\n                                            <Nav.Link key={menu.nhomedesigncode} eventKey={`MenuId_${menu.nhomedesigncode}`} onClick={(e) => this.getDetailHome(menu)}  >\r\n                                                <Image src={require(`../../assets/image/${menu.shomename.toLowerCase()}.svg`)} alt=\"sidebar\" width=\"34\" height=\"34\" />\r\n                                                <span>{menu.sdisplayname}</span>\r\n                                            </Nav.Link>\r\n                                            : menu.shomename === 'home' ?\r\n                                                <Nav.Link to={'/home'} key={menu.nhomedesigncode} eventKey={`MenuId_${menu.nhomedesigncode}`}\r\n                                                    onClick={(e) => this.getDetailHome(menu)} >\r\n                                                    <FontAwesomeIcon icon={faHome} size=\"2x\" />\r\n                                                    <span>{menu.sdisplayname}</span>\r\n                                                </Nav.Link>\r\n                                            : menu.shomename === 'apiservice' ?\r\n                                                <Nav.Link to={'/apiservice'} key={menu.nhomedesigncode} eventKey={`MenuId_${menu.nhomedesigncode}`}\r\n                                                    onClick={(e) => this.getDetailHome(menu)}  >\r\n                                                    <FontAwesomeIcon icon={faServer} size=\"2x\" />\r\n                                                    <span>{menu.sdisplayname}</span>\r\n                                                </Nav.Link>\r\n                                            : \r\n                                                <Nav.Link to={'/alert'} key={menu.nhomedesigncode} eventKey={`MenuId_${menu.nhomedesigncode}`}\r\n                                                    onClick={(e) => this.getDetailHome(menu)}  >\r\n                                                    <FontAwesomeIcon icon={faBell} size=\"2x\" />\r\n                                                        <span>{menu.sdisplayname}</span>\r\n                                                        {this.props.Login.alert && this.props.Login.alert.length > 0 ?\r\n                                                            <Badge style={{\r\n                                                                \"position\": \"relative\",\r\n                                                                \"bottom\": \"56px\",\r\n                                                                \"font-size\": \"0.7rem\",\r\n                                                                \"width\": \"20px\",\r\n                                                                \"left\": \"30px\"\r\n                                                            }} pill variant=\"danger\">{this.props.Login.alert && this.props.Login.alert.length}</Badge>\r\n                                                            : \"\"}\r\n                                                </Nav.Link>\r\n                                        )\r\n                                    })}\r\n                                    <Nav.Link className=\"mt-auto\">\r\n                                        <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" />\r\n                                    </Nav.Link>\r\n                                </Nav>\r\n                            </Tab.Container>                                      \r\n                        </SidebarNav>\r\n                        }\r\n                        </> :\r\n                        <>\r\n                         {this.state.MenuVisible && \r\n                        <div className={`sidebar-block ${this.props.isPinned ? \"pinned-sidebar\" :''} ${this.state.keyMenu==='MenuId_-2' && 'toggled'}` }> \r\n                            <SidebarNav \r\n                                className={`d-flex side-nav sidebar sidebar-dark bg-gradient-primary ${this.props.isPinned ? \"pinned-sidebar\" :''} ${this.state.keyMenu==='MenuId_-2' && 'toggled'}  ${this.props.fullView && 'sidebar-fullview'}`} \r\n                                onMouseEnter={() => this.setState({ MenuVisible: true })} \r\n                                onMouseLeave={() => this.props.isPinned? this.setState({ MenuVisible: true }):this.setState({ MenuVisible: false })} >\r\n                                <Tab.Container\r\n                                    activeKey={this.state.keyMenu}\r\n                                    onSelect={(k) => this.setKeyMenu(k)}>\r\n                                    <Nav className=\"nav flex-column side-nav\" variant=\"pills\" key='MenuIcon'>\r\n                                        {menuDesign && menuDesign.map((menu) => {\r\n                                            return(menu.nmenucode !== -2 ?\r\n                                                <Nav.Link key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`} >\r\n                                                    <Image src={require(`../../assets/image/${menu.smenuname.toLowerCase()}.svg`)} alt=\"sidebar\" width=\"34\" height=\"34\" />\r\n                                                    <span>{menu.sdisplayname}</span>\r\n                                                </Nav.Link> \r\n                                                :                                                 \r\n                                                <Nav.Link to={'/home'} key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`}  \r\n                                                onClick={(e) => this.getDetailHome(HomeDesign.filter(x=>x.shomename==='home')[0],this.props.isPinned? this.setState({ MenuVisible: true }):this.setState({ MenuVisible: false }))}  >\r\n                                                    {/* <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" /> */}\r\n                                                    <FontAwesomeIcon icon={faHome} size=\"2x\" />                                                        \r\n                                                    <span>{this.props.intl.formatMessage({id: \"IDS_HOME\"})}</span>\r\n                                                </Nav.Link>\r\n                                            )\r\n                                        })}\r\n                                                {/* <Nav.Link key={6} onClick={() => this.onELNLoginClick()}>\r\n                                                    <Image src={LogiLabLogo} alt=\"logilablogo\" width=\"45\" height=\"55\" />\r\n                                                </Nav.Link>\r\n                                                <Nav.Link key={7} onClick={() => this.onSDMSLoginClick()}>\r\n                                                    <Image src={SDMSLogo} alt=\"sdmslogo\" width=\"45\" height=\"55\" />\r\n                                                </Nav.Link> */}\r\n                                                {/* //key={this.state.key} eventKey={this.state.key}  */}\r\n                                                \r\n                                        <Nav.Link className=\"mt-auto\">\r\n                                            <Image src={PrimaryLogo} alt=\"Primary-Logo\" width=\"45\" height=\"60\" />\r\n                                        </Nav.Link>                    \r\n                                    </Nav>\r\n                                            {/* <Button className=\"rounded-circle border-0\" id=\"sidebarToggle\" ></Button> */}\r\n                                    <Tab.Content>   \r\n                                        {menuDesign && menuDesign.map(menu => {\r\n                                            return (\r\n                                                <Tab.Pane key={menu.nmenucode} eventKey={`MenuId_${menu.nmenucode}`}>\r\n                                                    <Accordion className=\"navbar-nav position-relative\" as=\"ul\" defaultActiveKey={activePage} >\r\n                                                        {/* onClick={() => this.pinnedEvent()} */}\r\n                                                        <SidebarBrand className=\"sidebar-brand d-flex align-items-center\">\r\n                                                            <SidebarBrandTxt>\r\n                                                                <FormattedMessage id={menu.sdisplayname}\r\n                                                                    defaultMessage={menu.sdisplayname} />\r\n                                                            </SidebarBrandTxt>\r\n                                                        </SidebarBrand>\r\n                                                        <PerfectScrollbar className=\"sidebar-scroll\">\r\n                                                            {\r\n                                                                menu.nmenucode!==-2&&(menu.lstmodule).map(module => {\r\n                                                                return (\r\n                                                                        <>\r\n                                                                        <Nav.Item key={module.nmodulecode} as=\"li\">\r\n                                                                            <Card.Header className='pr-0'>\r\n                                                                                <Accordion.Toggle as={Button} className={`${activePage === module.nmodulecode  ? 'show' : ''}`}\r\n                                                                                variant=\"link\" eventKey={module.nmodulecode}  >\r\n                                                                                    <NavHeader >\r\n                                                                                        <FormattedMessage id={module.sdisplayname} defaultMessage={module.sdisplayname} />\r\n                                                                                    </NavHeader>\r\n                                                                                    <Accordion.Collapse eventKey={module.nmodulecode}>\r\n                                                                                        <Card.Body></Card.Body>\r\n                                                                                    </Accordion.Collapse>\r\n                                                                                </Accordion.Toggle>\r\n                                                                                \r\n                                                                            </Card.Header>\r\n                                                                                {/* <ContextAwareToggle eventKey={module.nmodulecode}>\r\n                                                                                    <NavHeader >\r\n                                                                                        <FormattedMessage id={module.sdisplayname}\r\n                                                                                            defaultMessage={module.sdisplayname} />\r\n                                                                                    </NavHeader>\r\n                                                                                </ContextAwareToggle> */}                    \r\n                                                                            <Accordion.Collapse eventKey={module.nmodulecode}  >\r\n                                                                                <CollapseInner className=\"bg-transparent py-2 collapse-inner rounded\">\r\n                                                                                    {module.lstforms!==null&& (module.lstforms).map(forms => {\r\n                                                                                        return (\r\n                                                                                            <NavLink className={`collapse-item ${forms.nformcode === this.props.Login.userInfo.nformcode ? 'active-form' : ''}`} key={forms.nformcode}\r\n                                                                                                nformcode={forms.nformcode} to={'/' + forms.sclassname}\r\n                                                                                                onClick={() => this.getDetail(forms.sclassname.toLowerCase(), forms.surl,\r\n                                                                                                    forms.nformcode, forms.sdisplayname, module.nmodulecode, forms, module)}\r\n                                                                                            >\r\n                                                                                                <FormattedMessage id={forms.sdisplayname}\r\n                                                                                                    defaultMessage={forms.sdisplayname} />\r\n                                                                                            </NavLink>\r\n                                                                                        )\r\n                                                                                    })}\r\n                                                                                </CollapseInner>\r\n                                                                            </Accordion.Collapse>\r\n                                                                        </Nav.Item>\r\n                                                                        </>\r\n                                                                    )\r\n                                                                })\r\n                                                            }\r\n                                                        </PerfectScrollbar>                    \r\n                                                    </Accordion>\r\n                                                </Tab.Pane>)\r\n                                        })}            \r\n                                    </Tab.Content>\r\n                                </Tab.Container>\r\n                            </SidebarNav>\r\n                        </div>\r\n                        }\r\n                        </>\r\n                    }  \r\n                \r\n                </>\r\n                <Preloader loading={loading} />\r\n            </>\r\n        );\r\n    }\r\n    ToggleAction = (value) => {\r\n        if(!this.state.isPinned){\r\n            this.setState({\r\n                isSidebarActive: value,\r\n                MenuVisible: !value\r\n            })\r\n        }\r\n    }\r\n    pinnedEvent = () => {\r\n        let { isPinned } = this.state;\r\n        this.setState({\r\n            isPinned: !isPinned\r\n        })\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { callService, navPage, elnLoginAction, sdmsLoginAction, updateStore, getDashBoardForHome })(injectIntl(Menu));\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}