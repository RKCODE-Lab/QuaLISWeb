{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import Axios from'axios';import{initRequest}from'./LoginAction';import{transactionStatus}from'../components/Enumeration';import{constructOptionList}from'../components/CommonScript';export function openFTPConfigModal(userInfo,ncontrolcode){return function(dispatch){dispatch(initRequest(true));var uiArray=[rsapi.post(\"site/getSiteForFTP\",{\"userinfo\":userInfo})];uiArray.push(rsapi.post(\"ftpconfig/getFTPType\",{\"userinfo\":userInfo}));Axios.all(uiArray).then(function(response){var selectedRecord={};var siteList=response[0].data[\"SiteList\"]||[];var ftpTypeListMap=constructOptionList(response[1].data,'nftptypecode','sftptypename',undefined,undefined,undefined,'ndefaultstatus')||[];var ftpTypeList=ftpTypeListMap.get(\"OptionList\");var defaultftpTypeList=ftpTypeListMap.get(\"DefaultValue\");selectedRecord['nftptypecode']=defaultftpTypeList;selectedRecord['nsitecode']=siteList.length>0?siteList[0].ndefaultstatus===transactionStatus.YES?siteList[0].nsitecode:-1:-1;selectedRecord['siteValue']=siteList.length>0?siteList[0].ndefaultstatus===transactionStatus.YES?[{value:siteList[0].nsitecode,label:siteList[0].ssitename,item:siteList[0]}]:[]:[];selectedRecord[\"sphysicalpath\"]=response[0].data[\"CheckSumDefaultPath\"];dispatch({type:DEFAULT_RETURN,payload:{openModal:true,operation:\"create\",siteOptions:siteList,ftpTypeList:ftpTypeList,checkSumDefaultPath:response[0].data[\"CheckSumDefaultPath\"],selectedRecord:selectedRecord,ncontrolcode:ncontrolcode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};};export function fetchFTPConfigByID(editParam){return function(dispatch){var _rsapi$post;var url1=rsapi.post(\"site/getSiteForFTP\",{\"userinfo\":editParam.userInfo});var url2=rsapi.post(\"ftpconfig/getActiveFTPConfigById\",(_rsapi$post={},_defineProperty(_rsapi$post,editParam.primaryKeyField,editParam.primaryKeyValue),_defineProperty(_rsapi$post,\"userinfo\",editParam.userInfo),_rsapi$post));var url3=rsapi.post(\"ftpconfig/getFTPType\",{\"userinfo\":editParam.userInfo});dispatch(initRequest(true));Axios.all([url1,url2,url3]).then(function(response){var selectedId=editParam.primaryKeyValue;var selectedRecord=response[1].data;selectedRecord['siteValue']={value:response[1].data.nsitecode,label:response[1].data.ssitename};selectedRecord['nftptypecode']={value:response[1].data.nftptypecode,label:response[1].data.sftptypename};dispatch({type:DEFAULT_RETURN,payload:{openModal:true,selectedRecord:selectedRecord,ftpTypeList:constructOptionList(response[2].data,'nftptypecode','sftptypename').get(\"OptionList\"),operation:editParam.operation,screenName:editParam.screenName,siteOptions:response[0].data,ncontrolcode:editParam.ncontrolCode,inputparam:editParam.inputparam,loading:false,selectedId:selectedId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/FTPConfigAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","Axios","initRequest","transactionStatus","constructOptionList","openFTPConfigModal","userInfo","ncontrolcode","dispatch","uiArray","post","push","all","then","response","selectedRecord","siteList","data","ftpTypeListMap","undefined","ftpTypeList","get","defaultftpTypeList","length","ndefaultstatus","YES","nsitecode","value","label","ssitename","item","type","payload","openModal","operation","siteOptions","checkSumDefaultPath","loading","catch","error","status","message","warn","fetchFTPConfigByID","editParam","url1","url2","primaryKeyField","primaryKeyValue","url3","selectedId","nftptypecode","sftptypename","screenName","ncontrolCode","inputparam"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios'\r\nimport { initRequest } from './LoginAction';\r\nimport { transactionStatus } from '../components/Enumeration';\r\nimport { constructOptionList } from '../components/CommonScript';\r\n\r\nexport function openFTPConfigModal  (userInfo,ncontrolcode)  {\r\n\r\n    return function(dispatch){\r\n    dispatch(initRequest(true));\r\n   const uiArray=[rsapi.post(\"site/getSiteForFTP\",{\"userinfo\": userInfo})]\r\n   uiArray.push(rsapi.post(\"ftpconfig/getFTPType\",{\"userinfo\": userInfo}))\r\n   Axios.all(uiArray).then(response=> { \r\n        const selectedRecord={};\r\n        const siteList = response[0].data[\"SiteList\"] || [];\r\n        const ftpTypeListMap =constructOptionList(response[1].data,'nftptypecode','sftptypename',undefined, undefined, undefined,\r\n        'ndefaultstatus') || [];\r\n        const ftpTypeList =ftpTypeListMap.get(\"OptionList\");\r\n        const defaultftpTypeList =ftpTypeListMap.get(\"DefaultValue\");\r\n      \r\n        selectedRecord['nftptypecode']=defaultftpTypeList\r\n        \r\n        selectedRecord['nsitecode']=siteList.length>0?\r\n                                    siteList[0].ndefaultstatus===transactionStatus.YES?\r\n                                    siteList[0].nsitecode\r\n                                    :-1:-1\r\n        selectedRecord['siteValue']=siteList.length>0? siteList[0].ndefaultstatus===transactionStatus.YES?  \r\n                                    [{value:siteList[0].nsitecode,label:siteList[0].ssitename,item:siteList[0]}]\r\n                                    :[]:[]\r\n        selectedRecord[\"sphysicalpath\"]= response[0].data[\"CheckSumDefaultPath\"];\r\n        dispatch({\r\n            type: DEFAULT_RETURN, payload:{\r\n                openModal:true,\r\n                operation:\"create\",\r\n                siteOptions:siteList,\r\n                ftpTypeList,\r\n                checkSumDefaultPath: response[0].data[\"CheckSumDefaultPath\"],\r\n                selectedRecord,ncontrolcode    \r\n                ,loading:false           \r\n                }\r\n            }) \r\n    })\r\n    .catch(error => {\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n        if (error.response.status === 500){\r\n            toast.error(error.message);\r\n        } \r\n        else{               \r\n            toast.warn(error.response.data);\r\n        }         \r\n    })\r\n}\r\n};\r\n\r\nexport function fetchFTPConfigByID(editParam){\r\n\r\n    return function(dispatch){\r\n    const url1=rsapi.post(\"site/getSiteForFTP\",{\"userinfo\": editParam.userInfo})\r\n    const url2=rsapi.post(\"ftpconfig/getActiveFTPConfigById\",\r\n            { [editParam.primaryKeyField] :editParam.primaryKeyValue,\"userinfo\":editParam.userInfo} )\r\n     const url3=rsapi.post(\"ftpconfig/getFTPType\",{\"userinfo\": editParam.userInfo})\r\n    dispatch(initRequest(true));\r\n    Axios.all([url1,url2,url3])\r\n    .then(response=> { \r\n        let selectedId=editParam.primaryKeyValue\r\n        let selectedRecord=response[1].data\r\n        selectedRecord['siteValue']={value:response[1].data.nsitecode,label:response[1].data.ssitename}\r\n        selectedRecord['nftptypecode']={value:response[1].data.nftptypecode,label:response[1].data.sftptypename}\r\n        \r\n        dispatch({\r\n            type: DEFAULT_RETURN, payload:{\r\n            openModal:true, \r\n            selectedRecord ,\r\n            ftpTypeList:constructOptionList(response[2].data,'nftptypecode','sftptypename').get(\"OptionList\"),\r\n            operation:editParam.operation,\r\n            screenName:editParam.screenName,\r\n            siteOptions:response[0].data,\r\n            ncontrolcode:editParam.ncontrolCode,\r\n            inputparam:editParam.inputparam,\r\n            loading:false,selectedId\r\n        }}) \r\n    })\r\n    .catch(error => {\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n        if (error.response.status === 500){\r\n            toast.error(error.message);\r\n        } \r\n        else{               \r\n            toast.warn(error.response.data);\r\n        }         \r\n    })\r\n}\r\n}"]},"metadata":{},"sourceType":"module"}