{"ast":null,"code":"import _slicedToArray from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React from\"react\";import{connect}from'react-redux';import{parseAdjustDate}from\"../NewJobAlloct\";import{SchedulerEditSlot}from\"@progress/kendo-react-scheduler\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var CustomEditSlotForNonWorkingday=function CustomEditSlotForNonWorkingday(props){var _React$useState=React.useState(null),_React$useState2=_slicedToArray(_React$useState,2),formItem=_React$useState2[0],setFormItem=_React$useState2[1];var handleFormItemChange=React.useCallback(function(event){if(!(props.Login.personalLeaveRestrict&&props.Login.calenderUserHolidays.some(function(x){return parseAdjustDate(x.start)===parseAdjustDate(props.start);}))&&!(props.Login.holidaydateRestrict&&props.Login.calenderPublicHolidays.some(function(x){return parseAdjustDate(x.start)===parseAdjustDate(props.start);}))&&!(props.Login.commonHolidaydateRestrict&&Object.keys(props.Login.calenderCommonHolidays1).some(function(x){return props.Login.calenderCommonHolidays1[x]===3?new Date(props.start).getDay()===0?x===\"nsunday\":new Date(props.start).getDay()===1?x===\"nmonday\":new Date(props.start).getDay()===2?x===\"ntuesday\":new Date(props.start).getDay()===3?x===\"nwednesday\":new Date(props.start).getDay()===4?x===\"nthursday\":new Date(props.start).getDay()===5?x===\"nfriday\":new Date(props.start).getDay()===6?x===\"nsaturday\":false:false;}))&&props.isWorkDay){setFormItem(event.value);}},[props.isWorkDay]);return/*#__PURE__*/React.createElement(SchedulerEditSlot,Object.assign({},props,{formItem:formItem,onFormItemChange:handleFormItemChange}));};export default connect(mapStateToProps,{})(CustomEditSlotForNonWorkingday);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/joballocation/calender/ViewSlot/CustomEditSlotForNonWorkingday.jsx"],"names":["React","connect","parseAdjustDate","SchedulerEditSlot","mapStateToProps","state","Login","CustomEditSlotForNonWorkingday","props","useState","formItem","setFormItem","handleFormItemChange","useCallback","event","personalLeaveRestrict","calenderUserHolidays","some","x","start","holidaydateRestrict","calenderPublicHolidays","commonHolidaydateRestrict","Object","keys","calenderCommonHolidays1","Date","getDay","isWorkDay","value"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { connect } from 'react-redux'; \r\nimport { parseAdjustDate } from \"../NewJobAlloct\";\r\nimport { SchedulerEditSlot } from \"@progress/kendo-react-scheduler\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n \r\n \r\n const CustomEditSlotForNonWorkingday = (props) => {\r\n    const [formItem, setFormItem] = React.useState(null);\r\n    const handleFormItemChange = React.useCallback(\r\n        (event) => {\r\n            if ( !(props.Login.personalLeaveRestrict \r\n                && props.Login.calenderUserHolidays.some(x=>parseAdjustDate(x.start)===parseAdjustDate(props.start) )  )\r\n                && \r\n                \r\n                !(props.Login.holidaydateRestrict &&\r\n                    props.Login.calenderPublicHolidays.some(x => parseAdjustDate(x.start) === parseAdjustDate(props.start)))\r\n                &&\r\n                !(props.Login.commonHolidaydateRestrict\r\n                    && Object.keys(props.Login.calenderCommonHolidays1).some(x =>\r\n                        props.Login.calenderCommonHolidays1[x] === 3 ?\r\n                            new Date(props.start).getDay() === 0 ? x === \"nsunday\" :\r\n                                new Date(props.start).getDay() === 1 ? x === \"nmonday\" :\r\n                                    new Date(props.start).getDay() === 2 ? x === \"ntuesday\" :\r\n                                        new Date(props.start).getDay() === 3 ? x === \"nwednesday\" :\r\n                                            new Date(props.start).getDay() === 4 ? x === \"nthursday\" :\r\n                                                new Date(props.start).getDay() === 5 ? x === \"nfriday\" :\r\n                                                    new Date(props.start).getDay() === 6 ? x === \"nsaturday\" : false\r\n                            : false\r\n                    ))\r\n               \r\n               &&  props.isWorkDay) {\r\n                setFormItem(event.value);\r\n            }\r\n        },\r\n        [props.isWorkDay]\r\n    );\r\n    return (\r\n        <SchedulerEditSlot\r\n            {...props}\r\n            formItem={formItem}\r\n            onFormItemChange={handleFormItemChange}\r\n        />\r\n    );\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(CustomEditSlotForNonWorkingday);"]},"metadata":{},"sourceType":"module"}