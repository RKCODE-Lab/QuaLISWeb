{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\PasswordPolicy.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faCopy } from '@fortawesome/free-solid-svg-icons'; //, faUserTimes,faTrash,\n\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getPasswordPolicyDetail, getPasswordPolicyComboService, getCopyUseRolePolicy, comboChangeUserRolePolicy, filterColumnData } from '../../actions';\nimport rsapi from '../../rsapi'; //import { callService, crudMaster } from '../../actions';\n\nimport { ContentPanel } from '../../components/App.styles';\nimport { constructOptionList, searchData, sortData, showEsign, getControlMap } from '../../components/CommonScript';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Axios from 'axios';\nimport UserRoleFilter from './UserRoleFilter';\nimport AddPasswordPolicy from './AddPasswordPolicy';\nimport UserRolePolicy from './UserRolePolicy';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport Esign from '../audittrail/Esign';\nimport { transactionStatus } from '../../components/Enumeration'; // import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite'; // import ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass PasswordPolicy extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy, \"delete\", deleteId));\n    };\n\n    this.getPasswordPolicyComboService = (screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) => {\n      if (masterData.UserRole.length > 0) {\n        if (operation === \"create\" || operation === \"update\" && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.RETIRED && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.APPROVED) {\n          this.props.getPasswordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTRECORDTOEDIT\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLEFROMFILTER\"\n        }));\n      }\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.selectedcombo[\"nuserrolecode\"]) {\n        this.props.comboChangeUserRolePolicy(this.state.selectedcombo[\"nuserrolecode\"].value, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLE\"\n        }));\n      }\n    };\n\n    this.getPasswordPolicyDetail = passwordPolicy => {\n      return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\n        npolicycode: passwordPolicy.npolicycode,\n        \"userinfo\": this.props.Login.userInfo\n      }).then(response => {\n        const masterData = response.data;\n        sortData(masterData);\n        const selectedcombo = {\n          nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\n            \"value\": this.state.selectedcombo[\"nuserrolecode\"].value,\n            \"label\": this.state.selectedcombo[\"nuserrolecode\"].label\n          } : this.state.selectedcombo[\"nuserrolecode\"]\n        };\n        this.setState({\n          userRolePolicyDataData: masterData[\"UserRole\"],\n          selectedPasswordPolicy: masterData[\"SelectedPasswordPolicy\"],\n          selectedcombo\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    };\n\n    this.deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\n      if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED || this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\n        let message = \"IDS_SELECTDRAFTRECORDTODELETE\"; // if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\n        //     message = \"IDS_SELECTDRAFTRECORDTOAPPROVE\";\n        // }\n\n        toast.warn(this.props.intl.formatMessage({\n          id: message\n        })); //toast.warn(this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedPasswordPolicy.stransstatus }));\n      } else {\n        const postParam = {\n          inputListName: \"PasswordPolicy\",\n          selectedObject: \"SelectedPasswordPolicy\",\n          primaryKeyField: \"npolicycode\",\n          primaryKeyValue: this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,\n          fetchUrl: \"passwordpolicy/getPasswordPolicy\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            [methodUrl.toLowerCase()]: selectedRecord,\n            \"userinfo\": this.props.Login.userInfo,\n            \"passwordpolicy\": this.props.Login.masterData.SelectedPasswordPolicy\n          },\n          operation,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"PasswordPolicy\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\"; //selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null // operation: undefined\n\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData != null) {\n        const selectedcombo = this.state.selectedcombo || {}; // const selectedRecord = this.state.selectedRecord || {};\n\n        selectedcombo[fieldName] = comboData; // selectedRecord[fieldName] = comboData;\n\n        this.setState({\n          selectedcombo\n        }); // if (fieldName === \"nuserrolecode\") {\n        //   this.searchRef.current.value = \"\";\n        //   this.props.comboChangeUserRolePolicy(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\n        // }\n      }\n    };\n\n    this.onComboChangeUserRole = (comboData, fieldName) => {\n      //if (comboData != null) {\n      const selectedcomboUserRole = this.state.selectedcomboUserRole || {}; //this.state.selectedRecord || {};\n\n      selectedcomboUserRole[fieldName] = comboData;\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedcomboUserRole,\n        selectedRecord\n      }); //}\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO; //ALPD-4463 If expiry required false click save button alert message displayed.\n          //Issue fixed by Saravanan 13-11-2024\n\n          if (event.target.name === \"nexpirypolicyrequired\" && event.target.checked === false) {\n            selectedRecord[\"nexpirypolicy\"] = \"\";\n            selectedRecord[\"nremainderdays\"] = \"\";\n          }\n        }\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {}; // if (value === 0 || value === 0.0) {\n      //     selectedRecord[name] = '';\n      //     this.setState({ selectedRecord });\n      // } else {\n\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      }); //}\n    };\n\n    this.onApproveClick = (screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) => {\n      if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.DRAFT) {\n        const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode;\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo; //add               \n\n        let postParam = undefined;\n        inputData[\"passwordpolicy\"] = {\n          \"nuserrolecode\": this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"] ? this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"].Value : \"\"\n        };\n        inputData[\"passwordpolicy\"] = this.props.Login.masterData.SelectedPasswordPolicy;\n        postParam = {\n          inputListName: \"PasswordPolicy\",\n          selectedObject: \"SelectedPasswordPolicy\",\n          primaryKeyField: \"npolicycode\"\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"UserRolePolicy\",\n          inputData: inputData,\n          operation: \"approve\",\n          postParam,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        } //toast.info(this.props.intl.formatMessage({ id: \"IDS_APPROVEPOLICY\" }));\n\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\"\n        }));\n      }\n    };\n\n    this.validation = () => {\n      let ntotal = 0;\n      let nminpswlen = 0;\n      let nmaxpaslen = 0;\n      let nexpairyDays = 0;\n      let nremainderdays = 0;\n      ntotal = parseInt(this.state.selectedRecord.nminnoofnumberchar) + parseInt(this.state.selectedRecord.nminnooflowerchar) + parseInt(this.state.selectedRecord.nminnoofupperchar) + parseInt(this.state.selectedRecord.nminnoofspecialchar);\n      nminpswlen = parseInt(this.state.selectedRecord.nminpasslength);\n      nmaxpaslen = parseInt(this.state.selectedRecord.nmaxpasslength);\n      nexpairyDays = parseInt(this.state.selectedRecord.nexpirypolicy);\n      nremainderdays = parseInt(this.state.selectedRecord.nremainderdays);\n\n      if (ntotal === 0) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CANNOTTOTALPSWZERO\"\n        }));\n        return false;\n      }\n\n      if (nminpswlen === 0) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CANNOTMINPSWZERO\"\n        }));\n        return false;\n      }\n\n      if (nminpswlen < ntotal) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MINPSWCANTLESSTOTALLEN\"\n        }));\n        return false;\n      }\n\n      if (nmaxpaslen < nminpswlen) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MAXPSWCANTLESSMINPSWLEN\"\n        }));\n        return false;\n      }\n\n      if (nremainderdays > nexpairyDays) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REMAINDERSDAYSLESSTHANEXPIRYDAYS\"\n        }));\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_PASSWORDPOLICY\") {\n        if (this.validation()) {\n          inputParam = this.savePasswordPolicy(saveType, formRef);\n          const masterData = this.props.Login.masterData;\n          let clearSelectedRecordField = [{\n            \"idsName\": \"IDS_POLICYNAME\",\n            \"dataField\": \"spolicyname\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_MINNUMBERCHAR\",\n            \"dataField\": \"nminnoofnumberchar\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_MINLOWERCHAR\",\n            \"dataField\": \"nminnooflowerchar\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_MINUPPERCHAR\",\n            \"dataField\": \"nminnoofupperchar\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_MINSPECIALCHAR\",\n            \"dataField\": \"nminnoofspecialchar\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_MINPASSWORDLENGTH\",\n            \"dataField\": \"nminpasslength\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_MAXPASSWORDLENGTH\",\n            \"dataField\": \"nmaxpasslength\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_NOOFFAILEDATTEPT\",\n            \"dataField\": \"nnooffailedattempt\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_EXPIRYPOLICY\",\n            \"dataField\": \"nexpirypolicy\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_REMAINDERDAYS\",\n            \"dataField\": \"nremainderdays\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_COMMENTS\",\n            \"dataField\": \"scomments\",\n            \"width\": \"200px\",\n            \"controlType\": \"textbox\",\n            \"isClearField\": true\n          }, {\n            \"idsName\": \"IDS_EXPIRYREQUIRED\",\n            \"dataField\": \"nexpirypolicyrequired\",\n            \"width\": \"100px\",\n            \"isClearField\": true,\n            \"preSetValue\": 4\n          }];\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openModal\", \"\", \"\", clearSelectedRecordField);\n          }\n        }\n      } else if (this.props.Login.screenName === \"IDS_USERROLEPOLICYS\") {\n        const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode;\n        inputParam = this.copyUserRolePolicy(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n        let clearSelectedRecordField = [{\n          \"idsName\": \"IDS_POLICYNAME\",\n          \"dataField\": \"spolicyname\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }];\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, copyId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\", \"\", \"\", clearSelectedRecordField); // toast.info(this.props.intl.formatMessage({ id: \"IDS_COPYPOLICY\" }));\n        }\n      }\n    };\n\n    this.reloadData = () => {\n      //ALPD-4803 done by Dhanushya RI,To check searchref key is present or not\n      if (this.searchRef && this.searchRef.current) {\n        this.searchRef.current.value = \"\";\n      }\n\n      if (this.state.selectedcombo[\"nuserrolecode\"].value) {\n        let inputParam = {\n          inputData: {\n            nuserrolecode: this.props.Login.masterData.SelectedUserRole.nuserrolecode,\n            userinfo: this.props.Login.userInfo\n          },\n          classUrl: \"passwordpolicy\",\n          methodUrl: \"PasswordPolicyByUserRoleCode\"\n        };\n        this.props.comboChangeUserRolePolicy(inputParam.inputData.nuserrolecode, this.props.Login.masterData, inputParam.inputData.userinfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_USERROLENOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.state = {\n      isOpen: false,\n      passwordPolicyData: [],\n      userRolePolicyData: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      userLogged: true,\n      selectedPasswordPolicy: undefined,\n      selectedcombo: undefined,\n      selectedcomboUserRole: undefined,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      sidebarview: false,\n      showAccordian: true,\n      userRole: []\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.policyFieldList = ['spolicyname', 'nminnoofnumberchar', 'nminnooflowerchar', 'nminnoofupperchar', 'nminnoofspecialchar', 'nminpasslength', 'nmaxpasslength', 'nnooffailedattempt', 'nideallocktime', 'nexpirypolicyrequired', 'nexpirypolicy', 'nremainderdays', 'scomments']; //'nmahcode',\n\n    this.searchFieldList = [\"nexpirypolicy\", \"nideallocktime\", \"nmaxpasslength\", \"nminnooflowerchar\", \"nminnoofnumberchar\", \"nminnoofspecialchar\", \"nminnoofupperchar\", \"nminpasslength\", \"nnooffailedattempt\", \"scomments\", \"sexpirystatus\", \"spolicyname\", \"stransstatus\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    } // if (props.Login.selectedRecord === undefined) {\n    //     return { selectedRecord: {} }\n    // }\n\n\n    return null;\n  }\n\n  render() {\n    let userStatusCSS = \"outline-secondary\";\n\n    if (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.ACTIVE || this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\n      userStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED) {\n      userStatusCSS = \"outline-danger\";\n    }\n\n    const addId = this.state.controlMap.has(\"AddPasswordPolicy\") && this.state.controlMap.get(\"AddPasswordPolicy\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditPasswordPolicy\") && this.state.controlMap.get(\"EditPasswordPolicy\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeletePasswordPolicy\") && this.state.controlMap.get(\"DeletePasswordPolicy\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode;\n    const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"PasswordPolicy\",\n      selectedObject: \"SelectedPasswordPolicy\",\n      primaryKeyField: \"npolicycode\",\n      fetchUrl: \"passwordpolicy/getPasswordPolicy\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    this.validationColumnList = [{\n      \"idsName\": \"IDS_POLICYNAME\",\n      \"dataField\": \"spolicyname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINNUMBERCHAR\",\n      \"dataField\": \"nminnoofnumberchar\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINLOWERCHAR\",\n      \"dataField\": \"nminnooflowerchar\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINUPPERCHAR\",\n      \"dataField\": \"nminnoofupperchar\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINSPECIALCHAR\",\n      \"dataField\": \"nminnoofspecialchar\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINPASSWORDLENGTH\",\n      \"dataField\": \"nminpasslength\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MAXPASSWORDLENGTH\",\n      \"dataField\": \"nmaxpasslength\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_NOOFFAILEDATTEPT\",\n      \"dataField\": \"nnooffailedattempt\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    } //{ \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\",\"mandatory\": true },\n    //{ \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\",\"mandatory\": true },\n    ];\n\n    if (this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3) {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_POLICYNAME\",\n        \"dataField\": \"spolicyname\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINNUMBERCHAR\",\n        \"dataField\": \"nminnoofnumberchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINLOWERCHAR\",\n        \"dataField\": \"nminnooflowerchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINUPPERCHAR\",\n        \"dataField\": \"nminnoofupperchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINSPECIALCHAR\",\n        \"dataField\": \"nminnoofspecialchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINPASSWORDLENGTH\",\n        \"dataField\": \"nminpasslength\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MAXPASSWORDLENGTH\",\n        \"dataField\": \"nmaxpasslength\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_NOOFFAILEDATTEPT\",\n        \"dataField\": \"nnooffailedattempt\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_EXPIRYPOLICY\",\n        \"dataField\": \"nexpirypolicy\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REMAINDERDAYS\",\n        \"dataField\": \"nremainderdays\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }];\n    } else {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_POLICYNAME\",\n        \"dataField\": \"spolicyname\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINNUMBERCHAR\",\n        \"dataField\": \"nminnoofnumberchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINLOWERCHAR\",\n        \"dataField\": \"nminnooflowerchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINUPPERCHAR\",\n        \"dataField\": \"nminnoofupperchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINSPECIALCHAR\",\n        \"dataField\": \"nminnoofspecialchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINPASSWORDLENGTH\",\n        \"dataField\": \"nminpasslength\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MAXPASSWORDLENGTH\",\n        \"dataField\": \"nmaxpasslength\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_NOOFFAILEDATTEPT\",\n        \"dataField\": \"nnooffailedattempt\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }];\n    }\n\n    this.copyValidationColumnList = [{\n      \"idsName\": \"IDS_POLICYNAME\",\n      \"dataField\": \"spolicyname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_USERROLEPOLICY\",\n      \"dataField\": \"nuserrolecode\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const mandatoryFields = [];\n    this.validationColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    const copyMandatoryFields = [];\n    this.copyValidationColumnList.forEach(item => item.mandatory === true ? copyMandatoryFields.push(item) : \"\");\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Password Policy\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.PasswordPolicy,\n      getMasterDetail: passwordPolicy => this.props.getPasswordPolicyDetail(passwordPolicy, this.props.Login.userInfo, this.props.Login.masterData, this.state.selectedcombo),\n      selectedMaster: this.props.Login.masterData.SelectedPasswordPolicy,\n      primaryKeyField: \"npolicycode\",\n      mainField: \"spolicyname\",\n      firstField: \"stransstatus\" // secondField=\"stransstatus\"\n      // isIDSField=\"Yes\"\n      //filterColumnData={this.props.filterColumnDataPasswordPolicy}\n      ,\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"create\", \"npolicycode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId),\n      hidePaging: true,\n      needAccordianFilter: false,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_USERROLEPOLICYS\": /*#__PURE__*/React.createElement(UserRoleFilter, {\n          formatMessage: this.props.intl.formatMessage,\n          filterUserRole: this.state.userRole || [] //{this.props.Login.masterData.UserRole || []}\n          ,\n          selectedCombo: this.state.selectedcombo || {} //\n          ,\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '8' : \"10\"}`,\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn \",\n      onClick: this.props.parentFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 33\n      }\n    }, !this.props.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.PasswordPolicy && this.props.Login.masterData.PasswordPolicy.length > 0 && this.props.Login.masterData.SelectedPasswordPolicy ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.spolicyname)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-muted font-weight-normal d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.Login.masterData.SelectedPasswordPolicy.stransstatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      onClick: () => this.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"update\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode, this.props.Login.masterData, this.props.Login.userInfo, editId),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletePassword Policy\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      onClick: () => this.ConfirmDelete(deleteId) // data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      onClick: () => this.onApproveClick(\"PasswordPolicy\", \"approve\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode, approveId),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(copyId) === -1,\n      onClick: () => this.props.getCopyUseRolePolicy(\"IDS_USERROLEPOLICYS\", \"copy\", \"nuserrolecode\", undefined),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINNUMBERCHAR\",\n      message: \"Division\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminnoofnumberchar))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINLOWERCHAR\",\n      message: \"nminnooflowerchar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminnooflowerchar))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINUPPERCHAR\",\n      message: \"nminnoofupperchar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminnoofupperchar))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINSPECIALCHAR\",\n      message: \"nminnoofspecialchar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminnoofspecialchar))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINPASSWORDLENGTH\",\n      message: \"nminpasslength\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminpasslength))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MAXPASSWORDLENGTH\",\n      message: \"nmaxpasslength\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nmaxpasslength))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_NOOFFAILEDATTEPT\",\n      message: \"nnooffailedattempt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nnooffailedattempt))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXPIRYREQUIRED\",\n      message: \"nexpirypolicyrequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.sexpirystatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXPIRYPOLICY\",\n      message: \"nexpirypolicy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nexpirypolicy))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REMAINDERDAYS\",\n      message: \"nremainderdays\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nremainderdays))), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COMMENTS\",\n      message: \"scomments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.scomments))))))) : \"\"))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      showSaveContinue: this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" || this.props.Login.screenName === \"IDS_USERROLEPOLICYS\" ? true : false,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ? mandatoryFields : copyMandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ? /*#__PURE__*/React.createElement(AddPasswordPolicy, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        onComboChange: this.onComboChange,\n        formatMessage: this.props.intl.formatMessage,\n        selectedPasswordPolicy: this.props.Login.masterData.SelectedPasswordPolicy,\n        operation: this.props.operation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(UserRolePolicy, {\n        selectedRecord: this.state.selectedRecord || this.props.Login.masterData.selectedcomboUserRole || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChangeUserRole,\n        formatMessage: this.props.intl.formatMessage,\n        operation: this.props.operation,\n        filterUserRole: this.state.userRole || [] //{this.props.Login.masterData.UserRole || []}\n        ,\n        selectedPasswordPolicy: this.props.Login.masterData.SelectedPasswordPolicy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.UserRole) {\n      breadCrumbData.push({\n        \"label\": \"IDS_USERROLE\",\n        \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    const masterData = this.props.Login.masterData;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\n      const selectedcombo = {\n        nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\n          \"value\": masterData.UserRole[0].nuserrolecode,\n          \"label\": masterData.UserRole[0].suserrolename\n        } : this.state.selectedRecord[\"nuserrolecode\"]\n      };\n      this.setState({\n        selectedcombo: selectedcombo\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n\n    if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\n      const userRole = constructOptionList(this.props.Login.masterData.UserRole || [], \"nuserrolecode\", \"suserrolename\", undefined, undefined, undefined);\n      const UserRoleList = userRole.get(\"OptionList\");\n      this.setState({\n        userRole: UserRoleList\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const filterData = this.generateBreadCrumData();\n      this.setState({\n        filterData\n      });\n    }\n  }\n\n  filterColumnData(event) {\n    let filterValue = event.target.value;\n\n    if (filterValue === \"\") {\n      this.setState({\n        passwordPolicyData: this.props.Login.masterData[\"PasswordPolicy\"],\n        //this.props.Login.masterData[\"Users\"],\n        userRolePolicyData: this.props.Login.masterData[\"UserRole\"],\n        selectedPasswordPolicy: this.props.Login.masterData[\"SelectedPasswordPolicy\"]\n      });\n    } else {\n      if (filterValue.length > 2) {\n        const searchedData = searchData(filterValue, this.props.Login.masterData[\"PasswordPolicy\"], \"spolicyname\");\n\n        if (searchedData && searchedData.length > 0) {\n          return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\n            nmahcode: searchedData[0].nmahcode,\n            userinfo: this.props.Login.userInfo\n          }).then(response => {\n            this.setState({\n              passwordPolicyData: searchedData,\n              userRolePolicyData: response.data[\"UserRole\"],\n              selectedPasswordPolicy: response.data[\"SelectedPasswordPolicy\"]\n            });\n          }).catch(error => {\n            if (error.response.status === 500) {\n              toast.error(error.message);\n            } else {\n              toast.warn(this.props.intl.formatMessage({\n                id: error.response.data\n              }));\n            }\n          });\n        } else {\n          this.setState({\n            passwordPolicyData: [],\n            userRolePolicyData: [],\n            selectedPasswordPolicy: {}\n          });\n        }\n      }\n    }\n  }\n\n  getCopyUseRolePolicy(screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) {\n    this.setState({\n      operation,\n      screenName,\n      isOpen: true\n    });\n  }\n\n  getPasswwordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue) {\n    if (operation === \"create\" || operation === \"update\" && this.state.selectedPasswordPolicy.ntransactionstatus !== transactionStatus.RETIRED) {\n      //ntransactionstatus = 7 -- User Retired           \n      let userLogged = this.state.userLogged;\n      let selectedRecord = {};\n      let urlArray = [];\n\n      if (operation === \"update\") {\n        const policyById = rsapi.post(\"passwordpolicy/getActivePasswordPolicyById\", {\n          [primaryKeyName]: primaryKeyValue,\n          \"userinfo\": this.props.Login.userInfo\n        });\n        urlArray = [policyById];\n        Axios.all(urlArray).then(response => {\n          selectedRecord = response[0].data;\n          this.setState({\n            operation,\n            screenName,\n            selectedRecord,\n            userLogged,\n            isOpen: true\n          });\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: error.response.data\n            }));\n          }\n        });\n      } else {\n        this.setState({\n          operation,\n          screenName,\n          selectedRecord,\n          isOpen: true\n        });\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: this.state.selectedPasswordPolicy.stransstatus\n      }));\n    }\n  }\n\n  savePasswordPolicy(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\n    let postParam = undefined;\n\n    if (this.props.Login.operation === \"update\") {\n      // edit\n      postParam = {\n        inputListName: \"PasswordPolicy\",\n        selectedObject: \"SelectedPasswordPolicy\",\n        primaryKeyField: \"npolicycode\"\n      };\n      inputData[\"passwordpolicy\"] = this.state.selectedRecord;\n      inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] !== null ? this.state.selectedRecord[\"scomments\"] : \"\"; // this.policyFieldList.map(item => {\n      //     return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : 0;\n      // })\n      // inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] ;\n    } else {\n      //add               \n      inputData[\"passwordpolicy\"] = {\n        \"nideallocktime\": 6000\n      }; //this.props.Login.userInfo.nmastersitecode };\n\n      this.policyFieldList.map(item => {\n        return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item];\n      });\n      inputData[\"nuserrolecode\"] = this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.nuserrolecode : \"\"; //inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\n    }\n\n    inputData[\"passwordpolicy\"][\"nexpirypolicy\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nexpirypolicy\"] : 0;\n    inputData[\"passwordpolicy\"][\"nremainderdays\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nremainderdays\"] : 0;\n    const inputParam = {\n      classUrl: this.props.Login.inputParam.classUrl,\n      methodUrl: \"PasswordPolicy\",\n      inputData: inputData,\n      operation: this.props.Login.operation,\n      saveType,\n      formRef,\n      postParam,\n      searchRef: this.searchRef,\n      selectedRecord: { ...this.state.selectedRecord\n      }\n    };\n    return inputParam;\n  }\n\n  copyUserRolePolicy(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\n    inputData[\"userrole\"] = {};\n    let postParam = undefined;\n    let userroleArray = [];\n    userroleArray = this.state.selectedcomboUserRole.nuserrolecode.map(item => {\n      let userrolelist = {};\n      userrolelist[\"nuserrolecode\"] = item.value;\n      userrolelist[\"suserrolename\"] = item.label;\n      userrolelist[\"sdescription\"] = \"a\";\n      userrolelist[\"nsitecode\"] = -1; //userroleArray.push(userrolelist);\n\n      return userrolelist;\n    });\n    inputData['userrole'] = userroleArray;\n    inputData['npolicycode'] = this.props.Login.masterData.SelectedPasswordPolicy.npolicycode;\n    inputData['spolicyname'] = this.state.selectedRecord.spolicyname;\n    postParam = {\n      inputListName: \"PasswordPolicy\",\n      selectedObject: \"SelectedPasswordPolicy\",\n      primaryKeyField: \"npolicycode\"\n    };\n    const inputParam = {\n      classUrl: this.props.Login.inputParam.classUrl,\n      methodUrl: \"PasswordPolicyToSelectedRole\",\n      inputData: inputData,\n      operation: this.props.Login.operation,\n      saveType,\n      formRef,\n      postParam,\n      searchRef: this.searchRef,\n      selectedRecord: { ...this.state.selectedRecord\n      }\n    };\n    return inputParam;\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getPasswordPolicyDetail,\n  getPasswordPolicyComboService,\n  getCopyUseRolePolicy,\n  comboChangeUserRolePolicy,\n  filterColumnData\n})(injectIntl(PasswordPolicy));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/configurationmaster/PasswordPolicy.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","faCopy","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","validateEsignCredential","updateStore","getPasswordPolicyDetail","getPasswordPolicyComboService","getCopyUseRolePolicy","comboChangeUserRolePolicy","filterColumnData","rsapi","ContentPanel","constructOptionList","searchData","sortData","showEsign","getControlMap","ListMaster","SlideOutModal","Axios","UserRoleFilter","AddPasswordPolicy","UserRolePolicy","DEFAULT_RETURN","Esign","transactionStatus","ConfirmMessage","BreadcrumbComponent","Affix","mapStateToProps","state","Login","PasswordPolicy","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","masterData","SelectedPasswordPolicy","screenName","operation","primaryKeyName","primaryKeyValue","userInfo","ncontrolCode","UserRole","length","ntransactionstatus","RETIRED","APPROVED","warn","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","searchRef","current","value","selectedcombo","passwordPolicy","post","npolicycode","then","response","nuserrolecode","label","userRolePolicyDataData","selectedPasswordPolicy","catch","error","status","message","methodUrl","selectedRecord","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","inputParam","classUrl","inputData","toLowerCase","userRoleControlRights","nformcode","loadEsign","screenData","openModal","validateEsign","sreason","nreasoncode","spredefinedreason","password","closeModal","selectedId","onComboChange","comboData","fieldName","onComboChangeUserRole","selectedcomboUserRole","onInputOnChange","event","target","type","name","checked","ACTIVE","DEACTIVE","YES","NO","onNumericInputOnChange","onApproveClick","DRAFT","approveId","controlMap","has","get","ncontrolcode","undefined","Value","saveType","esignNeeded","validation","ntotal","nminpswlen","nmaxpaslen","nexpairyDays","nremainderdays","parseInt","nminnoofnumberchar","nminnooflowerchar","nminnoofupperchar","nminnoofspecialchar","nminpasslength","nmaxpasslength","nexpirypolicy","onSaveClick","formRef","savePasswordPolicy","clearSelectedRecordField","copyId","copyUserRolePolicy","reloadData","SelectedUserRole","isOpen","passwordPolicyData","userRolePolicyData","masterStatus","userLogged","Map","showAccordian","userRole","createRef","policyFieldList","searchFieldList","getDerivedStateFromProps","render","userStatusCSS","addId","editId","filterParam","validationColumnList","copyValidationColumnList","mandatoryFields","forEach","item","mandatory","push","copyMandatoryFields","breadCrumbData","filterData","searchedData","parentFunction","spolicyname","stransstatus","indexOf","nnooffailedattempt","sexpirystatus","scomments","generateBreadCrumData","suserrolename","componentDidUpdate","previousProps","Object","values","map","UserRoleList","filterValue","nmahcode","getPasswwordPolicyComboService","urlArray","policyById","all","userroleArray","userrolelist","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faCopy } from '@fortawesome/free-solid-svg-icons';//, faUserTimes,faTrash,\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getPasswordPolicyDetail,\r\n    getPasswordPolicyComboService, getCopyUseRolePolicy, comboChangeUserRolePolicy, filterColumnData\r\n} from '../../actions';\r\nimport rsapi from '../../rsapi';\r\n//import { callService, crudMaster } from '../../actions';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { constructOptionList, searchData, sortData, showEsign, getControlMap } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Axios from 'axios';\r\nimport UserRoleFilter from './UserRoleFilter';\r\nimport AddPasswordPolicy from './AddPasswordPolicy';\r\nimport UserRolePolicy from './UserRolePolicy';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass PasswordPolicy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            isOpen: false,\r\n            passwordPolicyData: [], userRolePolicyData: [],\r\n\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            selectedPasswordPolicy: undefined,\r\n            selectedcombo: undefined, selectedcomboUserRole: undefined,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            sidebarview: false,\r\n            showAccordian: true, userRole: []\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.policyFieldList = ['spolicyname', 'nminnoofnumberchar', 'nminnooflowerchar', 'nminnoofupperchar', 'nminnoofspecialchar',\r\n            'nminpasslength', 'nmaxpasslength', 'nnooffailedattempt', 'nideallocktime', 'nexpirypolicyrequired', 'nexpirypolicy',\r\n            'nremainderdays', 'scomments'];//'nmahcode',\r\n\r\n        this.searchFieldList = [\"nexpirypolicy\", \"nideallocktime\", \"nmaxpasslength\", \"nminnooflowerchar\", \"nminnoofnumberchar\",\r\n            \"nminnoofspecialchar\", \"nminnoofupperchar\", \"nminpasslength\", \"nnooffailedattempt\", \"scomments\",\r\n            \"sexpirystatus\", \"spolicyname\", \"stransstatus\"];\r\n\r\n    }\r\n\r\n\r\n    sidebarExpandCollapse = () => {\r\n    this.setState({\r\n        sidebarview: true\r\n    })          \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        // if (props.Login.selectedRecord === undefined) {\r\n        //     return { selectedRecord: {} }\r\n        // }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        let userStatusCSS = \"outline-secondary\";\r\n        if ((this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.ACTIVE)\r\n            || (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED)) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED) {\r\n            userStatusCSS = \"outline-danger\";\r\n        }\r\n\r\n        const addId = this.state.controlMap.has(\"AddPasswordPolicy\") && this.state.controlMap.get(\"AddPasswordPolicy\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditPasswordPolicy\") && this.state.controlMap.get(\"EditPasswordPolicy\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeletePasswordPolicy\") && this.state.controlMap.get(\"DeletePasswordPolicy\").ncontrolcode\r\n        const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode\r\n        const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode\r\n        const filterParam = {\r\n            inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\",\r\n            fetchUrl: \"passwordpolicy/getPasswordPolicy\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            //{ \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\",\"mandatory\": true },\r\n            //{ \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\",\"mandatory\": true },\r\n        ]\r\n        if (this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            ]\r\n        }\r\n        else {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n\r\n            ]\r\n        }\r\n        this.copyValidationColumnList = [\r\n            { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_USERROLEPOLICY\", \"dataField\": \"nuserrolecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n        ]\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        const copyMandatoryFields = [];\r\n        this.copyValidationColumnList.forEach(item => item.mandatory === true ?\r\n            copyMandatoryFields.push(item) : \"\"\r\n        );\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* Start of get display*/}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix>\r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Password Policy\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.PasswordPolicy}\r\n                                getMasterDetail={(passwordPolicy) => this.props.getPasswordPolicyDetail(passwordPolicy, this.props.Login.userInfo, this.props.Login.masterData, this.state.selectedcombo)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                primaryKeyField=\"npolicycode\"\r\n                                mainField=\"spolicyname\"\r\n                                firstField=\"stransstatus\"\r\n                                // secondField=\"stransstatus\"\r\n                                // isIDSField=\"Yes\"\r\n                                //filterColumnData={this.props.filterColumnDataPasswordPolicy}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"create\", \"npolicycode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                hidePaging={true}\r\n                                needAccordianFilter={false}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_USERROLEPOLICYS\":\r\n                                            <UserRoleFilter\r\n                                                formatMessage={this.props.intl.formatMessage}\r\n                                                filterUserRole={this.state.userRole || []}//{this.props.Login.masterData.UserRole || []}\r\n                                                selectedCombo={this.state.selectedcombo || {}}//\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?                    \r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i> \r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.PasswordPolicy && this.props.Login.masterData.PasswordPolicy.length > 0 && this.props.Login.masterData.SelectedPasswordPolicy ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.SelectedPasswordPolicy.spolicyname}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal d-flex justify-content-between\">\r\n                                                    {/* <Row>\r\n                                                        <Col md={8} className=\"d-flex\"> */}\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                            {/* {((this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.ACTIVE)\r\n                                                                || (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED)) ? <i class=\"fas fa-check \"></i> : \"\"} */}\r\n                                                            <FormattedMessage id={this.props.Login.masterData.SelectedPasswordPolicy.stransstatus} />\r\n                                                        </span>\r\n\r\n                                                    </h2>\r\n                                                    {/* </Col>\r\n                                                        <Col md={4}> */}\r\n                                                    <div className=\"d-flex product-category\" >\r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                        <div className=\"d-inline \">\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"update\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,\r\n                                                                    this.props.Login.masterData, this.props.Login.userInfo, editId)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </Nav.Link>\r\n                                                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                    onClick={() => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy, \"delete\", deleteId)}>\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                </Nav.Link> */}\r\n                                                            <Nav.Link name=\"deletePassword Policy\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <ConfirmDialog\r\n                                                                        name=\"deleteMessage\"\r\n                                                                        message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                        doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                        doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                        icon={faTrashAlt}\r\n                                                                        //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        handleClickDelete={() => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy,\r\n                                                                            \"delete\", deleteId)}\r\n                                                                    /> */}\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                onClick={() => this.onApproveClick(\"PasswordPolicy\", \"approve\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode, approveId)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                onClick={() => this.props.getCopyUseRolePolicy(\"IDS_USERROLEPOLICYS\", \"copy\", \"nuserrolecode\", undefined)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCopy} />\r\n                                                            </Nav.Link>\r\n                                                        </div>\r\n                                                        {/* </Tooltip> */}\r\n                                                    </div>\r\n                                                    {/* </Col>\r\n                                                    </Row> */}\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Text>\r\n                                                    <Row>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINNUMBERCHAR\" message=\"Division\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofnumberchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINLOWERCHAR\" message=\"nminnooflowerchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnooflowerchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINUPPERCHAR\" message=\"nminnoofupperchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofupperchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINSPECIALCHAR\" message=\"nminnoofspecialchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofspecialchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINPASSWORDLENGTH\" message=\"nminpasslength\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminpasslength}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MAXPASSWORDLENGTH\" message=\"nmaxpasslength\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nmaxpasslength}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_NOOFFAILEDATTEPT\" message=\"nnooffailedattempt\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nnooffailedattempt}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_EXPIRYREQUIRED\" message=\"nexpirypolicyrequired\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.sexpirystatus}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_EXPIRYPOLICY\" message=\"nexpirypolicy\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nexpirypolicy}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_REMAINDERDAYS\" message=\"nremainderdays\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nremainderdays}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={8}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_COMMENTS\" message=\"scomments\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.scomments}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Text>\r\n\r\n\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                {/* End of get display*/}\r\n\r\n                {/* Start of Modal Sideout for User Creation */}\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        showSaveContinue={this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" || this.props.Login.screenName === \"IDS_USERROLEPOLICYS\"?true:false}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ? mandatoryFields : copyMandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ?\r\n                                <AddPasswordPolicy selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    selectedPasswordPolicy={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                    operation={this.props.operation}\r\n\r\n                                />\r\n                                : <UserRolePolicy selectedRecord={this.state.selectedRecord || this.props.Login.masterData.selectedcomboUserRole || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChangeUserRole}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    operation={this.props.operation}\r\n                                    filterUserRole={this.state.userRole || []}//{this.props.Login.masterData.UserRole || []}\r\n                                    selectedPasswordPolicy={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                />\r\n\r\n\r\n                        }\r\n                    />\r\n                }\r\n                {/* End of Modal Sideout for User Creation */}\r\n            </>\r\n        );\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy, \"delete\", deleteId));\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.UserRole) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_USERROLE\",\r\n                    \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\"\r\n\r\n                },\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    getPasswordPolicyComboService = (screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) => {\r\n        if (masterData.UserRole.length > 0) {\r\n            if (operation === \"create\" || (operation === \"update\" && masterData.SelectedPasswordPolicy.ntransactionstatus !==\r\n             transactionStatus.RETIRED && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.APPROVED)) {\r\n                this.props.getPasswordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode)\r\n             }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOEDIT\" }));\r\n             }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLEFROMFILTER\" }));\r\n        }\r\n\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedcombo[\"nuserrolecode\"]) {\r\n            this.props.comboChangeUserRolePolicy(this.state.selectedcombo[\"nuserrolecode\"].value, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\r\n\r\n            const selectedcombo = {\r\n                nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\r\n                    \"value\": masterData.UserRole[0].nuserrolecode,\r\n                    \"label\": masterData.UserRole[0].suserrolename\r\n                } : this.state.selectedRecord[\"nuserrolecode\"]\r\n\r\n            }\r\n            this.setState({ selectedcombo: selectedcombo });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n        if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\r\n\r\n            const userRole = constructOptionList(this.props.Login.masterData.UserRole || [], \"nuserrolecode\",\r\n                \"suserrolename\", undefined, undefined, undefined);\r\n            const UserRoleList = userRole.get(\"OptionList\");\r\n\r\n\r\n            this.setState({ userRole: UserRoleList });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n    }\r\n    getPasswordPolicyDetail = (passwordPolicy) => {\r\n        return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\r\n            npolicycode: passwordPolicy.npolicycode,\r\n            \"userinfo\": this.props.Login.userInfo\r\n        })\r\n            .then(response => {\r\n                const masterData = response.data;\r\n                sortData(masterData);\r\n                const selectedcombo = {\r\n                    nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\r\n                        \"value\": this.state.selectedcombo[\"nuserrolecode\"].value,\r\n                        \"label\": this.state.selectedcombo[\"nuserrolecode\"].label\r\n                    } : this.state.selectedcombo[\"nuserrolecode\"]\r\n                }\r\n                this.setState({\r\n                    userRolePolicyDataData: masterData[\"UserRole\"],\r\n\r\n                    selectedPasswordPolicy: masterData[\"SelectedPasswordPolicy\"],\r\n                    selectedcombo\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    filterColumnData(event) {\r\n        let filterValue = event.target.value;\r\n        if (filterValue === \"\") {\r\n            this.setState({\r\n                passwordPolicyData: this.props.Login.masterData[\"PasswordPolicy\"],//this.props.Login.masterData[\"Users\"],\r\n                userRolePolicyData: this.props.Login.masterData[\"UserRole\"],\r\n\r\n                selectedPasswordPolicy: this.props.Login.masterData[\"SelectedPasswordPolicy\"],\r\n\r\n            });\r\n        }\r\n        else {\r\n            if (filterValue.length > 2) {\r\n                const searchedData = searchData(filterValue, this.props.Login.masterData[\"PasswordPolicy\"], \"spolicyname\");\r\n\r\n                if (searchedData && searchedData.length > 0) {\r\n                    return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\r\n                        nmahcode: searchedData[0].nmahcode,\r\n                        userinfo: this.props.Login.userInfo\r\n                    })\r\n                        .then(response => {\r\n\r\n                            this.setState({\r\n                                passwordPolicyData: searchedData, userRolePolicyData: response.data[\"UserRole\"],\r\n\r\n                                selectedPasswordPolicy: response.data[\"SelectedPasswordPolicy\"]\r\n\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    this.setState({\r\n\r\n                        passwordPolicyData: [], userRolePolicyData: [], selectedPasswordPolicy: {}\r\n\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED ||\r\n            this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\r\n            let message = \"IDS_SELECTDRAFTRECORDTODELETE\";\r\n            // if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\r\n            //     message = \"IDS_SELECTDRAFTRECORDTOAPPROVE\";\r\n            // }\r\n            toast.warn(this.props.intl.formatMessage({ id: message }));\r\n            //toast.warn(this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedPasswordPolicy.stransstatus }));\r\n        }\r\n        else {\r\n\r\n            const postParam = {\r\n                inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\",\r\n                primaryKeyField: \"npolicycode\",\r\n                primaryKeyValue: this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,\r\n                fetchUrl: \"passwordpolicy/getPasswordPolicy\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl, postParam,\r\n                inputData: {\r\n                    [methodUrl.toLowerCase()]: selectedRecord,\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    \"passwordpolicy\": this.props.Login.masterData.SelectedPasswordPolicy\r\n                },\r\n                operation,\r\n                selectedRecord:{...this.state.selectedRecord}\r\n\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"PasswordPolicy\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    getCopyUseRolePolicy(screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) {\r\n\r\n        this.setState({\r\n\r\n            operation, screenName,\r\n            isOpen: true\r\n        });\r\n\r\n    }\r\n\r\n\r\n    getPasswwordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue) {\r\n\r\n        if (operation === \"create\" || (operation === \"update\" && this.state.selectedPasswordPolicy.ntransactionstatus !== transactionStatus.RETIRED)) {       //ntransactionstatus = 7 -- User Retired           \r\n\r\n\r\n            let userLogged = this.state.userLogged;\r\n\r\n            let selectedRecord = {};\r\n\r\n            let urlArray = [];\r\n\r\n            if (operation === \"update\") {\r\n                const policyById = rsapi.post(\"passwordpolicy/getActivePasswordPolicyById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": this.props.Login.userInfo });\r\n\r\n                urlArray = [policyById];\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n\r\n\r\n\r\n                        selectedRecord = response[0].data;\r\n\r\n                        this.setState({\r\n                            operation, screenName, selectedRecord, userLogged,\r\n                            isOpen: true\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    operation, screenName, selectedRecord, isOpen: true\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id: this.state.selectedPasswordPolicy.stransstatus }));\r\n        }\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n                //selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, selectedId: null,\r\n                // operation: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n\r\n            const selectedcombo = this.state.selectedcombo || {};\r\n           // const selectedRecord = this.state.selectedRecord || {};\r\n            selectedcombo[fieldName] = comboData;\r\n           // selectedRecord[fieldName] = comboData;\r\n\r\n            this.setState({ selectedcombo});\r\n            // if (fieldName === \"nuserrolecode\") {\r\n            //   this.searchRef.current.value = \"\";\r\n            //   this.props.comboChangeUserRolePolicy(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n\r\n            // }\r\n        }\r\n\r\n    }\r\n\r\n    onComboChangeUserRole = (comboData, fieldName) => {\r\n        //if (comboData != null) {\r\n            const selectedcomboUserRole = this.state.selectedcomboUserRole || {}; //this.state.selectedRecord || {};\r\n            selectedcomboUserRole[fieldName] = comboData;\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedcomboUserRole, selectedRecord });\r\n\r\n        //}\r\n\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            // else if (event.target.name === \"nlockmode\")\r\n            //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n            {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                //ALPD-4463 If expiry required false click save button alert message displayed.\r\n                //Issue fixed by Saravanan 13-11-2024\r\n                if(event.target.name===\"nexpirypolicyrequired\" && event.target.checked===false)\r\n                {\r\n                    selectedRecord[\"nexpirypolicy\"]=\"\";\r\n                    selectedRecord[\"nremainderdays\"]=\"\";\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        // if (value === 0 || value === 0.0) {\r\n        //     selectedRecord[name] = '';\r\n        //     this.setState({ selectedRecord });\r\n        // } else {\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n        //}\r\n    }\r\n    onApproveClick = (screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.DRAFT) {\r\n            const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            //add               \r\n            let postParam = undefined;\r\n            inputData[\"passwordpolicy\"] = { \"nuserrolecode\": this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"] ? this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"].Value : \"\" };\r\n            inputData[\"passwordpolicy\"] = this.props.Login.masterData.SelectedPasswordPolicy;\r\n            postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"UserRolePolicy\",\r\n                inputData: inputData,\r\n                operation: \"approve\", postParam,\r\n                selectedRecord:{...this.state.selectedRecord}\r\n\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n            //toast.info(this.props.intl.formatMessage({ id: \"IDS_APPROVEPOLICY\" }));\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\" }));\r\n        }\r\n    }\r\n    validation = () => {\r\n        let ntotal = 0;\r\n        let nminpswlen = 0;\r\n        let nmaxpaslen = 0;\r\n        let nexpairyDays = 0;\r\n        let nremainderdays = 0;\r\n        ntotal = parseInt(this.state.selectedRecord.nminnoofnumberchar) + parseInt(this.state.selectedRecord.nminnooflowerchar) + parseInt(this.state.selectedRecord.nminnoofupperchar) + parseInt(this.state.selectedRecord.nminnoofspecialchar);\r\n        nminpswlen = parseInt(this.state.selectedRecord.nminpasslength);\r\n        nmaxpaslen = parseInt(this.state.selectedRecord.nmaxpasslength);\r\n        nexpairyDays = parseInt(this.state.selectedRecord.nexpirypolicy);\r\n        nremainderdays = parseInt(this.state.selectedRecord.nremainderdays);\r\n        if (ntotal === 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTTOTALPSWZERO\" }));\r\n            return false;\r\n        }\r\n        if (nminpswlen === 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTMINPSWZERO\" }));\r\n            return false;\r\n        }\r\n        if (nminpswlen < ntotal) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MINPSWCANTLESSTOTALLEN\" }));\r\n            return false;\r\n        }\r\n        if (nmaxpaslen < nminpswlen) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MAXPSWCANTLESSMINPSWLEN\" }));\r\n            return false;\r\n        }\r\n        if (nremainderdays > nexpairyDays) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REMAINDERSDAYSLESSTHANEXPIRYDAYS\" }));\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        if (this.props.Login.screenName === \"IDS_PASSWORDPOLICY\") {\r\n\r\n            if (this.validation()) {\r\n                inputParam = this.savePasswordPolicy(saveType, formRef);\r\n\r\n                const masterData = this.props.Login.masterData;\r\n\r\n                let clearSelectedRecordField =[\r\n                    { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\" ,\"controlType\": \"textbox\",\"isClearField\":true},\r\n                    { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n                    { \"idsName\": \"IDS_EXPIRYREQUIRED\", \"dataField\": \"nexpirypolicyrequired\", \"width\": \"100px\",\"isClearField\":true,\"preSetValue\":4},\r\n                    \r\n                ]\r\n\r\n                if (\r\n                    showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\",\"\",\"\",clearSelectedRecordField);\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_USERROLEPOLICYS\") {\r\n            const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode\r\n            inputParam = this.copyUserRolePolicy(saveType, formRef);\r\n            const masterData = this.props.Login.masterData;\r\n            let clearSelectedRecordField =[\r\n                { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\" ,\"controlType\": \"textbox\",\"isClearField\":true},\r\n            ]\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, copyId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\",\"\",\"\",clearSelectedRecordField);\r\n                // toast.info(this.props.intl.formatMessage({ id: \"IDS_COPYPOLICY\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    savePasswordPolicy(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n            inputData[\"passwordpolicy\"] = this.state.selectedRecord;\r\n            inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] !== null ? this.state.selectedRecord[\"scomments\"] : \"\";\r\n\r\n            // this.policyFieldList.map(item => {\r\n            //     return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : 0;\r\n            // })\r\n\r\n            // inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] ;\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"passwordpolicy\"] = { \"nideallocktime\": 6000 };//this.props.Login.userInfo.nmastersitecode };\r\n\r\n            this.policyFieldList.map(item => {\r\n                return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item]\r\n            });\r\n            inputData[\"nuserrolecode\"] = this.props.Login.masterData.SelectedUserRole  ? this.props.Login.masterData.SelectedUserRole.nuserrolecode : \"\";\r\n            //inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\r\n\r\n        }\r\n        inputData[\"passwordpolicy\"][\"nexpirypolicy\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nexpirypolicy\"] : 0;\r\n        inputData[\"passwordpolicy\"][\"nremainderdays\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nremainderdays\"] : 0;\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"PasswordPolicy\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n    copyUserRolePolicy(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"userrole\"] = {};\r\n        let postParam = undefined;\r\n\r\n        let userroleArray = []\r\n        userroleArray = this.state.selectedcomboUserRole.nuserrolecode.map(item => {\r\n            let userrolelist = {}\r\n            userrolelist[\"nuserrolecode\"] = item.value;\r\n            userrolelist[\"suserrolename\"] = item.label;\r\n            userrolelist[\"sdescription\"] = \"a\";\r\n            userrolelist[\"nsitecode\"] = -1;\r\n            //userroleArray.push(userrolelist);\r\n            return userrolelist;\r\n        });\r\n        inputData['userrole'] = userroleArray;\r\n        inputData['npolicycode'] = this.props.Login.masterData.SelectedPasswordPolicy.npolicycode;\r\n        inputData['spolicyname'] = this.state.selectedRecord.spolicyname;\r\n        postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"PasswordPolicyToSelectedRole\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef,\r\n            selectedRecord: {...this.state.selectedRecord}\r\n        }\r\n        return inputParam;\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    reloadData = () => {\r\n        //ALPD-4803 done by Dhanushya RI,To check searchref key is present or not\r\n        if (this.searchRef && this.searchRef.current) {\r\n            this.searchRef.current.value = \"\";\r\n          }\r\n\r\n        if (this.state.selectedcombo[\"nuserrolecode\"].value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    nuserrolecode: this.props.Login.masterData.SelectedUserRole.nuserrolecode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                },\r\n                classUrl: \"passwordpolicy\",\r\n                methodUrl: \"PasswordPolicyByUserRoleCode\"\r\n            }\r\n            this.props.comboChangeUserRolePolicy(inputParam.inputData.nuserrolecode, this.props.Login.masterData, inputParam.inputData.userinfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_USERROLENOTAVAILABLE\" }));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getPasswordPolicyDetail, getPasswordPolicyComboService, getCopyUseRolePolicy, comboChangeUserRolePolicy, filterColumnData\r\n})(injectIntl(PasswordPolicy));\r\n\r\n"]},"metadata":{},"sourceType":"module"}