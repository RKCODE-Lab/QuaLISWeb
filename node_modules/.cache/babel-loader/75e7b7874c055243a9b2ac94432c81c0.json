{"ast":null,"code":"import rsapi from '../rsapi';\nimport Axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { transactionStatus } from './../components/Enumeration';\nexport function openEmailTemplateModal(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolcode) {\n  return function (dispatch) {\n    if (operation === \"create\" || operation === \"update\") {\n      const Tag = rsapi.post(\"/emailtemplate/getEmailTag\", {\n        \"userinfo\": userInfo\n      });\n      let urlArray = [];\n\n      if (operation === \"create\") {\n        urlArray = [Tag];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = {};\n        selectedRecord[\"nstatus\"] = transactionStatus.ACTIVE;\n        selectedRecord[\"nemailtemplatecode\"] = 0;\n        selectedRecord[\"nemailtagcode\"] = '';\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            Tag: response[0].data || [],\n            operation,\n            screenName,\n            selectedRecord,\n            openModal: true,\n            EmailTagParameter: [],\n            ncontrolcode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch(initRequest(false));\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    }\n  };\n}\nexport function fetchEmailTemplateById(editParam) {\n  return function (dispatch) {\n    const URL1 = rsapi.post('emailtemplate/getActiveEmailTemplateById', {\n      [editParam.primaryKeyField]: editParam.primaryKeyValue,\n      \"userinfo\": editParam.userInfo\n    }); // const URL2=rsapi.post(\"instrumentcategory/getActiveInstrumentCategoryById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\n    // const URL3= rsapi.post('instrumentcategory/getInterfacetype',{\"userinfo\":editParam.userInfo})\n\n    dispatch(initRequest(true));\n    Axios.all([URL1]).then(response => {\n      let selectedRecord = {};\n      let selectedId = editParam.primaryKeyValue;\n      selectedRecord = response[0].data[\"EmailTemplate\"][0];\n      let Tag = response[0].data[\"EmailTag\"];\n      selectedRecord[\"nemailtagcode\"] = {\n        label: response[0].data[\"EmailTemplate\"][0].stagname,\n        value: response[0].data[\"EmailTemplate\"][0].nemailtagcode\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          selectedRecord,\n          Tag: Tag || [],\n          EmailTagParameter: response[0].data[\"EmailParameter\"] || [],\n          operation: editParam.operation,\n          openModal: true,\n          screenName: editParam.screenName,\n          ncontrolcode: editParam.ncontrolCode,\n          loading: false,\n          selectedId\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function comboChangeEmailTag(Map, masterData, selectedRecord, value) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"/emailtemplate/getEmailTagFilter\", { ...Map\n    }).then(response => {\n      let EmailTagParameter = response.data;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          EmailTagParameter,\n          selectedRecord,\n          value\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n      toast.error(intl.formatMessage({\n        id: error.message\n      }));\n    });\n  };\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/EmailTemplateAction.js"],"names":["rsapi","Axios","toast","DEFAULT_RETURN","initRequest","intl","transactionStatus","openEmailTemplateModal","screenName","operation","primaryKeyName","masterData","userInfo","ncontrolcode","dispatch","Tag","post","urlArray","all","then","response","selectedRecord","ACTIVE","type","payload","data","openModal","EmailTagParameter","loading","catch","error","status","message","warn","formatMessage","id","fetchEmailTemplateById","editParam","URL1","primaryKeyField","primaryKeyValue","selectedId","label","stagname","value","nemailtagcode","ncontrolCode","comboChangeEmailTag","Map"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {\r\n    toast\r\n} from 'react-toastify';\r\nimport {\r\n    DEFAULT_RETURN\r\n} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus } from './../components/Enumeration';\r\n\r\n\r\nexport function openEmailTemplateModal(screenName, operation, primaryKeyName, masterData, userInfo, ncontrolcode) {\r\n    return function (dispatch) {\r\n        if (operation === \"create\" || operation === \"update\") {\r\n            const Tag = rsapi.post(\"/emailtemplate/getEmailTag\", {\r\n                \"userinfo\": userInfo\r\n            });\r\n            let urlArray = [];\r\n            if (operation === \"create\") {\r\n\r\n                urlArray = [Tag];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = {};\r\n                    selectedRecord[\"nstatus\"] = transactionStatus.ACTIVE;\r\n                    selectedRecord[\"nemailtemplatecode\"] = 0;\r\n                    selectedRecord[\"nemailtagcode\"] = '';\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            Tag: response[0].data || [],\r\n                            operation,\r\n                            screenName,\r\n                            selectedRecord,\r\n                            openModal: true,\r\n                            EmailTagParameter: [],\r\n                            ncontrolcode, loading: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch(initRequest(false));\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(intl.formatMessage({\r\n                            id: error.response.data\r\n                        }));\r\n                    }\r\n                })\r\n        }\r\n    }\r\n}\r\n\r\nexport function fetchEmailTemplateById(editParam) {\r\n    return function (dispatch) {\r\n        const URL1 = rsapi.post('emailtemplate/getActiveEmailTemplateById', { [editParam.primaryKeyField]: editParam.primaryKeyValue, \"userinfo\": editParam.userInfo })\r\n        // const URL2=rsapi.post(\"instrumentcategory/getActiveInstrumentCategoryById\", { [editParam.primaryKeyField] :editParam.primaryKeyValue , \"userinfo\": editParam.userInfo} )\r\n        // const URL3= rsapi.post('instrumentcategory/getInterfacetype',{\"userinfo\":editParam.userInfo})\r\n        dispatch(initRequest(true));\r\n        Axios.all([URL1])\r\n            .then(response => {\r\n                let selectedRecord = {}\r\n                let selectedId = editParam.primaryKeyValue;\r\n                selectedRecord = response[0].data[\"EmailTemplate\"][0]\r\n                let Tag = response[0].data[\"EmailTag\"];\r\n                selectedRecord[\"nemailtagcode\"]={label:response[0].data[\"EmailTemplate\"][0].stagname,value:response[0].data[\"EmailTemplate\"][0].nemailtagcode}\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        selectedRecord,\r\n                        Tag: Tag || [],\r\n                        EmailTagParameter: response[0].data[\"EmailParameter\"] || [],\r\n                        operation: editParam.operation,\r\n                        openModal: true,\r\n                        screenName: editParam.screenName,\r\n                        ncontrolcode: editParam.ncontrolCode,\r\n                        loading: false, selectedId\r\n                    }\r\n                });\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function comboChangeEmailTag(Map, masterData, selectedRecord, value) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/emailtemplate/getEmailTagFilter\", { ...Map })\r\n            .then(response => {\r\n                let EmailTagParameter = response.data;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData, loading: false, EmailTagParameter, selectedRecord, value\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                toast.error(intl.formatMessage({ id: error.message }));\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}