{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\ReleaseTestAttachment.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DropZone from '../../components/dropzone/dropzone.component';\nimport { attachmentType, transactionStatus } from '../../components/Enumeration';\nimport { deleteAttachmentDropZone, onDropAttachFileList } from '../../components/CommonScript';\nimport { viewAttachment } from '../../actions';\nimport { connect } from 'react-redux';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport { process } from '@progress/kendo-data-query';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport Esign from '../audittrail/Esign';\nimport rsapi from '../../rsapi';\nimport { toast } from 'react-toastify';\nimport { create_UUID, Lims_JSON_stringify, showEsign } from \"../../components/CommonScript\";\n\nclass ReleaseTestAttachment extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.closeModal = () => {\n      let loadEsign = this.state.loadEsign;\n      let openModal = this.state.openModal;\n      let selectedRecord = this.state.selectedRecord;\n      let operation = this.state.operation;\n\n      if (this.state.loadEsign) {\n        if (this.state.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n          operation = undefined;\n        } else {\n          loadEsign = false;\n          selectedRecord[\"esigncomments\"] = \"\";\n          selectedRecord[\"esignpassword\"] = \"\";\n          selectedRecord['esignreason'] = '';\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      this.setState({\n        loadEsign,\n        openModal,\n        selectedRecord,\n        operation\n      });\n    };\n\n    this.getSampleDetails = (event, ncontrolCode, operation) => {\n      const url = \"release/getActiveReleaseTestAttachmentById\";\n      let openModal = true;\n\n      if (operation === \"update\") {\n        rsapi.post(url, {\n          \"ncoaparentcode\": event.editRow.ncoaparentcode,\n          \"npreregno\": event.editRow.npreregno,\n          \"ntransactionsamplecode\": event.editRow.ntransactionsamplecode,\n          \"ntransactiontestcode\": event.editRow.ntransactiontestcode,\n          \"nreleasetestattachmentcode\": event.editRow.nreleasetestattachmentcode,\n          \"userinfo\": this.props.userInfo\n        }).then(response => {\n          let responseData = response.data;\n          let selectedReleaseTestAttachment = event.editRow;\n          let masterData = this.props.masterData;\n          let nneedreport = responseData && responseData.nneedreport ? responseData.nneedreport : transactionStatus.NO;\n          let sdescription = responseData && responseData.sdescription ? responseData.sdescription : \"\";\n          let sfilename = event.editRow && event.editRow.sfilename;\n          let npreregno;\n          let ntransactionsamplecode;\n          let ntransactiontestcode;\n          let sarno;\n          let ssamplearno;\n          let stestsynonym;\n          masterData.RegistrationArno.map(item => {\n            if (item.value === responseData.npreregno) {\n              npreregno = item;\n              sarno = item.label;\n            }\n          });\n          masterData.RegistrationSampleArno.map(item => {\n            if (item.value === responseData.ntransactionsamplecode) {\n              ntransactionsamplecode = item;\n              ssamplearno = item.label;\n            }\n          });\n          masterData.RegistrationTest.map(item => {\n            if (item.value === responseData.ntransactiontestcode) {\n              ntransactiontestcode = item;\n              stestsynonym = item.label;\n            }\n          });\n          let selectedRecord = { ...this.state.selectedRecord,\n            npreregno,\n            ntransactionsamplecode,\n            ntransactiontestcode,\n            sfilename,\n            sarno,\n            ssamplearno,\n            stestsynonym,\n            nneedreport,\n            sdescription,\n            selectedReleaseTestAttachment\n          };\n          this.setState({\n            selectedRecord,\n            openModal,\n            operation,\n            ncontrolCode\n          });\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(error.response.data);\n          }\n\n          this.setState({\n            loading: false\n          });\n        });\n      } else {\n        let RegistrationArno = this.props.masterData.RegistrationArno;\n        let selectedRecord = {\n          RegistrationArno: RegistrationArno,\n          ReleaseTestAttachmentDetails: this.props.masterData.ReleaseTestAttachmentDetails,\n          nneedreport: transactionStatus.NO\n        };\n        this.setState({\n          selectedRecord,\n          openModal,\n          operation,\n          ncontrolCode\n        });\n      }\n    };\n\n    this.deleteRecord = deleteParam => {\n      const url = \"release/deleteReleaseTestAttachment\";\n      let releasetestattachment = {\n        \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\n        \"npreregno\": deleteParam.selectedRecord.npreregno,\n        \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\n        \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\n        \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\n      };\n      rsapi.post(url, {\n        releasetestattachment,\n        \"userinfo\": this.props.userInfo\n      }).then(response => {\n        let ReleaseTestAttachmentDetails = response.data.ReleaseTestAttachmentDetails;\n        let selectedRecord = { ...this.state.selectedRecord,\n          ...response.data\n        };\n        this.setState({\n          selectedRecord,\n          ReleaseTestAttachmentDetails\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      let lstRegistrationSampleArno = this.props.masterData.RegistrationSampleArno;\n      let lstRegistrationTest = this.props.masterData.RegistrationTest;\n      let RegistrationSampleArno = [];\n      let RegistrationTest = [];\n      let ntransactionsamplecode = \"\";\n      let ntransactiontestcode = \"\";\n      let ssamplearno = null;\n      let stestsynonym = null;\n\n      if (fieldName === \"npreregno\") {\n        lstRegistrationSampleArno.map(item => {\n          if (item.item.npreregno === comboData.value) {\n            RegistrationSampleArno.push(item);\n          }\n        });\n        let npreregno = {\n          item: comboData.item,\n          label: comboData.label,\n          value: comboData.value\n        };\n        let sarno = comboData.item.sarno;\n        selectedRecord = { ...selectedRecord,\n          RegistrationSampleArno,\n          RegistrationTest,\n          npreregno,\n          sarno,\n          ntransactionsamplecode,\n          ntransactiontestcode,\n          ssamplearno,\n          stestsynonym\n        };\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"ntransactionsamplecode\") {\n        lstRegistrationTest.map(item => {\n          if (item.item.ntransactionsamplecode === comboData.value) {\n            RegistrationTest.push(item);\n          }\n        });\n        ntransactionsamplecode = {\n          item: comboData.item,\n          label: comboData.label,\n          value: comboData.value\n        };\n        ssamplearno = comboData.item.ssamplearno;\n        selectedRecord = { ...selectedRecord,\n          RegistrationTest,\n          ntransactionsamplecode,\n          ssamplearno,\n          ntransactiontestcode,\n          stestsynonym\n        };\n        this.setState({\n          selectedRecord\n        });\n      } else if (fieldName === \"ntransactiontestcode\") {\n        ntransactiontestcode = {\n          item: comboData.item,\n          label: comboData.label,\n          value: comboData.value\n        };\n        stestsynonym = comboData.item.stestsynonym;\n        selectedRecord = { ...selectedRecord,\n          ntransactiontestcode,\n          stestsynonym\n        };\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let fileFormat = true;\n      selectedRecord[event.target.name] = event.target.value;\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"nneedreport\") {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        }\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      if (selectedRecord[\"nneedreport\"] && selectedRecord[\"nneedreport\"] === transactionStatus.YES && selectedRecord[\"sfilename\"] !== undefined && selectedRecord[\"sfilename\"].length > 0) {\n        let fileNameSplit = selectedRecord[\"sfilename\"] && Array.isArray(selectedRecord[\"sfilename\"]) ? selectedRecord[\"sfilename\"][0].name.split(\".\") : selectedRecord[\"sfilename\"].split(\".\");\n        fileFormat = fileNameSplit[fileNameSplit.length - 1] === \"png\" || fileNameSplit[fileNameSplit.length - 1] === \"jpg\" || fileNameSplit[fileNameSplit.length - 1] === \"jpeg\";\n        selectedRecord[\"nneedreport\"] = fileFormat === false ? transactionStatus.NO : selectedRecord[\"nneedreport\"];\n      }\n\n      !fileFormat && toast.warn(this.props.intl.formatMessage({\n        id: \"IDS_REPORTSUPPORTSONLYFILEFORMATS\"\n      }));\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onDrop = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.ReleaseTestAttachmentDetails, event.dataState)\n      });\n    };\n\n    this.viewReleaseTestAttachmentFile = filedata => {\n      delete filedata.inputData.userinfo;\n      const inputParam = {\n        inputData: {\n          releasetestattachment: filedata.inputData,\n          userinfo: this.props.userInfo\n        },\n        classUrl: \"release\",\n        operation: \"view\",\n        methodUrl: \"ReleaseTestAttachment\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const userInfo = this.props.userInfo;\n      let isFileEdited = transactionStatus.NO;\n      let fileArray = [];\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        if (this.state.operation === 'create') {\n          acceptedFiles.forEach((file, index) => {\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData[\"nformcode\"] = userInfo.nformcode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n            tempData[\"ncoaparentcode\"] = this.props.masterData.ncoaparentcode;\n            tempData[\"nusercode\"] = userInfo.nusercode;\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n            tempData[\"jsondata\"] = {\n              stestsynonym: selectedRecord.ntransactiontestcode.label,\n              susername: userInfo.susername,\n              suserrolename: userInfo.suserrolename,\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\n            };\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            fileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          acceptedFiles.forEach((file, index) => {\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\n            tempData[\"nformcode\"] = userInfo.nformcode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n            tempData[\"ncoaparentcode\"] = this.props.masterData.ncoaparentcode;\n            tempData[\"nusercode\"] = userInfo.nusercode;\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n            tempData[\"jsondata\"] = {\n              stestsynonym: selectedRecord.ntransactiontestcode.label,\n              susername: userInfo.susername,\n              suserrolename: userInfo.suserrolename,\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\n            };\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            formData.append(\"filecount\", acceptedFiles.length);\n            isFileEdited = transactionStatus.YES;\n            fileArray.push(tempData);\n          });\n        }\n      } else {\n        let tempData = {};\n        tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\n        tempData[\"nformcode\"] = userInfo.nformcode;\n        tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n        tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n        tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n        tempData[\"ncoaparentcode\"] = this.props.masterData.ncoaparentcode;\n        tempData[\"nusercode\"] = userInfo.nusercode;\n        tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n        tempData[\"jsondata\"] = {\n          stestsynonym: selectedRecord.ntransactiontestcode.label,\n          susername: userInfo.susername,\n          suserrolename: userInfo.suserrolename,\n          nfilesize: selectedRecord.size,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n          slinkname: \"\",\n          sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\n        };\n        fileArray.push(tempData);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"releasetestattachment\", JSON.stringify(fileArray));\n      formData.append(\"nattachmenttypecode\", attachmentType.FTP);\n      formData.append(\"ncoaparentcode\", this.props.masterData.ncoaparentcode);\n      formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n        sformname: Lims_JSON_stringify(userInfo.sformname),\n        smodulename: Lims_JSON_stringify(userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n      }));\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          }\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.state.operation,\n        classUrl: \"release\",\n        saveType: saveType,\n        formRef: formRef,\n        methodUrl: \"ReleaseTestAttachment\"\n      };\n      formData.append(\"userinfo\", JSON.stringify(inputParam.inputData.userinfo));\n      const requestUrl = rsapi.post(\"release/\" + this.state.operation + \"ReleaseTestAttachment\", formData);\n      return requestUrl.then(response => {\n        let ReleaseTestAttachmentDetails = response.data.ReleaseTestAttachmentDetails;\n        let selectedRecord = {};\n        let openModal = false;\n        this.setState({\n          selectedRecord,\n          openModal,\n          ReleaseTestAttachmentDetails\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    const dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      loading: false,\n      ReleaseTestAttachmentDetails: this.props.ReleaseTestAttachmentDetails,\n      dataState: dataState,\n      openModal: false,\n      inputParam: this.props.inputParam,\n      loadEsign: false,\n      operation: \"\",\n      selectedRecord: {},\n      isneedReport: this.props.isneedReport\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.ReleaseTestAttachmentDetails !== prevProps.ReleaseTestAttachmentDetails) {\n      this.setState({\n        ReleaseTestAttachmentDetails: this.props.ReleaseTestAttachmentDetails\n      });\n    }\n\n    if (this.props.inputParam !== prevProps.inputParam) {\n      this.setState({\n        inputParam: this.props.inputParam\n      });\n    }\n  }\n\n  render() {\n    const addReleaseTestAttachment = this.props.controlMap.has(\"AddReleaseTestAttachment\") && this.props.controlMap.get(\"AddReleaseTestAttachment\").ncontrolcode;\n    const editReleaseTestAttachment = this.props.controlMap.has(\"EditReleaseTestAttachment\") && this.props.controlMap.get(\"EditReleaseTestAttachment\").ncontrolcode;\n    const editReleaseTestAttachmentParam = {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }),\n      operation: \"update\",\n      primaryKeyField: \"nreleasetestattachmentcode\",\n      inputParam: this.state.inputParam,\n      userInfo: this.props.userInfo,\n      ncontrolCode: editReleaseTestAttachment\n    };\n    this.fieldsForReleasedTestAttachmentGrid = [{\n      \"idsName\": \"IDS_FILENAME\",\n      \"dataField\": \"sfilename\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_TESTSYNONYM\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_SCREENNAME\",\n      \"dataField\": \"sformname\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_DESCRIPTION\",\n      \"dataField\": \"sdescription\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_INCULDEINREPORT\",\n      \"dataField\": \"sneedreport\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_USERNAME\",\n      \"dataField\": \"susername\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_USERROLENAME\",\n      \"dataField\": \"suserrolename\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_CREATEDDATE\",\n      \"dataField\": \"screateddate\",\n      \"width\": \"200px\"\n    }];\n    let mandatoryFields = [{\n      \"idsName\": \"IDS_FILE\",\n      \"dataField\": \"sfilename\",\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }, {\n      \"idsName\": \"IDS_ARNUMBER\",\n      \"dataField\": \"sarno\",\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }, {\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\",\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }, {\n      \"idsName\": \"IDS_TESTSYNONYM\",\n      \"dataField\": \"stestsynonym\",\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }];\n    const sdescrption = this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK ? \"slinkdescription\" : \"sdescription\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      primaryKeyField: \"nreleasetestattachmentcode\",\n      data: this.state.ReleaseTestAttachmentDetails || [],\n      dataResult: process(this.state.ReleaseTestAttachmentDetails && this.state.ReleaseTestAttachmentDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      isExportExcelRequired: false,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      userInfo: this.props.userInfo,\n      editParam: editReleaseTestAttachmentParam,\n      extractedColumnList: this.fieldsForReleasedTestAttachmentGrid,\n      pageable: true,\n      dataStateChange: this.dataStateChange,\n      scrollable: 'scrollable',\n      gridHeight: '630px',\n      isActionRequired: true,\n      addRecord: event => this.getSampleDetails(event, addReleaseTestAttachment, \"create\"),\n      isToolBarRequired: true,\n      methodUrl: 'ReleaseTestAttachment',\n      isAddRequired: this.props.isAddRequired,\n      isRefreshRequired: this.props.isRefreshRequired,\n      isImportRequired: this.props.isImportRequired,\n      isDownloadPDFRequired: this.props.isDownloadPDFRequired,\n      isDownloadExcelRequired: this.props.isDownloadExcelRequired,\n      fetchRecord: event => {\n        this.getSampleDetails(event, editReleaseTestAttachment, \"update\");\n      },\n      deleteRecord: this.deleteRecord,\n      viewDownloadFile: this.viewReleaseTestAttachmentFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }))), this.state.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.state.openModal,\n      size: \"xl\",\n      closeModal: this.closeModal,\n      operation: this.state.operation,\n      inputParam: this.state.inputParam,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_TESTATTACHMENTS\"\n      }),\n      onSaveClick: this.onSaveClick,\n      esign: this.state.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      addComponent: this.state.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.state.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.state.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(DropZone, {\n        name: \"AttachmentFile\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILE\"\n        }),\n        isMandatory: true,\n        accept: this.state.selectedRecord && this.state.selectedRecord.nneedreport === transactionStatus.YES ? \".jpeg,.png,.jpg\" : \"\",\n        maxFiles: this.state.operation === \"update\" ? 1 : 3,\n        minSize: 0,\n        maxSize: this.props.maxSize,\n        onDrop: event => this.onDrop(event, 'sfilename', 1),\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.actionType,\n        fileNameLength: this.fileNameLength,\n        editFiles: this.state.selectedRecord ? this.state.selectedRecord : {},\n        attachmentTypeCode: this.state.selectedRecord && this.state.selectedRecord.selectedAttachmentFile && this.state.selectedRecord.selectedAttachmentFile.nattachmenttypecode,\n        fileSizeName: \"nfilesize\",\n        fileName: \"sfilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_ARNUMBER\"\n        }),\n        isSearchable: true,\n        name: \"npreregno\",\n        isDisabled: this.state.operation === \"create\" ? false : true,\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        isMandatory: true,\n        options: this.state.selectedRecord ? this.state.selectedRecord.RegistrationArno : [],\n        optionId: \"npreregno\",\n        optionValue: \"sarno\",\n        value: this.state.selectedRecord ? this.state.selectedRecord.npreregno : \"\",\n        onChange: event => this.onComboChange(event, 'npreregno'),\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_SAMPLEARNO\"\n        }),\n        isSearchable: true,\n        name: \"ntransactionsamplecode\",\n        isDisabled: this.state.operation === \"create\" ? false : true,\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        isMandatory: true,\n        options: this.state.selectedRecord ? this.state.selectedRecord.RegistrationSampleArno : [],\n        optionId: \"ntransactionsamplecode\",\n        optionValue: \"ssamplearno\",\n        value: this.state.selectedRecord ? this.state.selectedRecord.ntransactionsamplecode : \"\",\n        onChange: event => this.onComboChange(event, 'ntransactionsamplecode'),\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_TESTSYNONYM\"\n        }),\n        isSearchable: true,\n        name: \"ntransactiontestcode\",\n        isDisabled: this.state.operation === \"create\" ? false : true,\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        isMandatory: true,\n        options: this.state.selectedRecord ? this.state.selectedRecord.RegistrationTest : [],\n        optionId: \"ntransactiontestcode\",\n        optionValue: \"stestsynonym\",\n        value: this.state.selectedRecord ? this.state.selectedRecord.ntransactiontestcode : \"\",\n        onChange: event => this.onComboChange(event, 'ntransactiontestcode'),\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FormTextarea, {\n        name: sdescrption,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        onChange: event => this.onInputOnChange(event, 1),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        value: this.state.selectedRecord && this.state.selectedRecord[sdescrption] ? this.state.selectedRecord[sdescrption] : \"\",\n        rows: \"2\",\n        required: false,\n        maxLength: 255,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        className: \"mt-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CustomSwitch, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_INCULDEINREPORT\"\n        }),\n        type: \"switch\",\n        name: \"nneedreport\",\n        onChange: event => this.onInputOnChange(event, 1),\n        defaultValue: false,\n        isMandatory: false,\n        required: true,\n        checked: this.state.selectedRecord ? this.state.selectedRecord.nneedreport === transactionStatus.YES ? true : false : false,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 37\n        }\n      }))),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n}\n\nexport default connect(null, {\n  viewAttachment\n})(injectIntl(ReleaseTestAttachment));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/ReleaseTestAttachment.jsx"],"names":["React","Col","Row","injectIntl","DropZone","attachmentType","transactionStatus","deleteAttachmentDropZone","onDropAttachFileList","viewAttachment","connect","DataGrid","SlideOutModal","process","CustomSwitch","FormTextarea","FormSelectSearch","Esign","rsapi","toast","create_UUID","Lims_JSON_stringify","showEsign","ReleaseTestAttachment","Component","constructor","props","closeModal","loadEsign","state","openModal","selectedRecord","operation","undefined","setState","getSampleDetails","event","ncontrolCode","url","post","editRow","ncoaparentcode","npreregno","ntransactionsamplecode","ntransactiontestcode","nreleasetestattachmentcode","userInfo","then","response","responseData","data","selectedReleaseTestAttachment","masterData","nneedreport","NO","sdescription","sfilename","sarno","ssamplearno","stestsynonym","RegistrationArno","map","item","value","label","RegistrationSampleArno","RegistrationTest","catch","error","status","message","warn","loading","ReleaseTestAttachmentDetails","deleteRecord","deleteParam","releasetestattachment","onComboChange","comboData","fieldName","lstRegistrationSampleArno","lstRegistrationTest","push","onInputOnChange","fileFormat","target","name","type","checked","YES","length","fileNameSplit","Array","isArray","split","intl","formatMessage","id","onDrop","attachedFiles","maxSize","deleteAttachment","file","dataStateChange","dataState","dataResult","viewReleaseTestAttachmentFile","filedata","inputData","userinfo","inputParam","classUrl","methodUrl","onSaveClick","saveType","formRef","formData","FormData","acceptedFiles","isFileEdited","fileArray","forEach","index","splittedFileName","fileExtension","fileName","ssystemfilename","uniquefilename","tempData","nformcode","nusercode","nuserrole","susername","suserrolename","nfilesize","size","replaceAll","trim","slinkname","append","JSON","stringify","FTP","sformname","smodulename","slanguagename","isFileupload","requestUrl","skip","take","settings","parseInt","isneedReport","componentDidUpdate","prevProps","render","addReleaseTestAttachment","controlMap","has","get","ncontrolcode","editReleaseTestAttachment","editReleaseTestAttachmentParam","screenName","primaryKeyField","fieldsForReleasedTestAttachmentGrid","mandatoryFields","sdescrption","nattachmenttypecode","LINK","userRoleControlRights","isAddRequired","isRefreshRequired","isImportRequired","isDownloadPDFRequired","isDownloadExcelRequired","validateEsign","actionType","fileNameLength","selectedAttachmentFile"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport { attachmentType, transactionStatus } from '../../components/Enumeration';\r\nimport { deleteAttachmentDropZone, onDropAttachFileList } from '../../components/CommonScript';\r\nimport { viewAttachment } from '../../actions';\r\nimport { connect } from 'react-redux';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport rsapi from '../../rsapi';\r\nimport { toast } from 'react-toastify';\r\nimport { create_UUID, Lims_JSON_stringify, showEsign } from \"../../components/CommonScript\";\r\n\r\nclass ReleaseTestAttachment extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            loading: false,\r\n            ReleaseTestAttachmentDetails: this.props.ReleaseTestAttachmentDetails,\r\n            dataState: dataState,\r\n            openModal: false,\r\n            inputParam: this.props.inputParam,\r\n            loadEsign: false,\r\n            operation: \"\",\r\n            selectedRecord: {},\r\n            isneedReport: this.props.isneedReport\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.ReleaseTestAttachmentDetails !== prevProps.ReleaseTestAttachmentDetails) {\r\n            this.setState({ ReleaseTestAttachmentDetails: this.props.ReleaseTestAttachmentDetails })\r\n        }\r\n        if (this.props.inputParam !== prevProps.inputParam) {\r\n            this.setState({ inputParam: this.props.inputParam })\r\n        }\r\n\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.state.loadEsign;\r\n        let openModal = this.state.openModal\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let operation = this.state.operation;\r\n        if (this.state.loadEsign) {\r\n            if (this.state.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"esigncomments\"] = \"\";\r\n                selectedRecord[\"esignpassword\"] = \"\";\r\n                selectedRecord['esignreason'] = '';\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        this.setState({ loadEsign, openModal, selectedRecord, operation })\r\n    }\r\n\r\n    render() {\r\n        const addReleaseTestAttachment =\r\n            this.props.controlMap.has(\"AddReleaseTestAttachment\") &&\r\n            this.props.controlMap.get(\"AddReleaseTestAttachment\").ncontrolcode;\r\n\r\n        const editReleaseTestAttachment =\r\n            this.props.controlMap.has(\"EditReleaseTestAttachment\") &&\r\n            this.props.controlMap.get(\"EditReleaseTestAttachment\").ncontrolcode;\r\n\r\n        const editReleaseTestAttachmentParam = {\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" }),\r\n            operation: \"update\", primaryKeyField: \"nreleasetestattachmentcode\",\r\n            inputParam: this.state.inputParam,\r\n            userInfo: this.props.userInfo,\r\n            ncontrolCode: editReleaseTestAttachment\r\n        };\r\n\r\n        this.fieldsForReleasedTestAttachmentGrid =\r\n            [\r\n                { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"sfilename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_SCREENNAME\", \"dataField\": \"sformname\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_INCULDEINREPORT\", \"dataField\": \"sneedreport\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_USERROLENAME\", \"dataField\": \"suserrolename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_CREATEDDATE\", \"dataField\": \"screateddate\", \"width\": \"200px\" },\r\n\r\n            ]\r\n\r\n        let mandatoryFields = [\r\n            { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n        ];\r\n\r\n        const sdescrption = this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK ? \"slinkdescription\" : \"sdescription\";\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <DataGrid\r\n                            primaryKeyField=\"nreleasetestattachmentcode\"\r\n                            data={this.state.ReleaseTestAttachmentDetails || []}\r\n                            dataResult={process(this.state.ReleaseTestAttachmentDetails && this.state.ReleaseTestAttachmentDetails || [], this.state.dataState)}\r\n                            dataState={this.state.dataState}\r\n                            isExportExcelRequired={false}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            userInfo={this.props.userInfo}\r\n                            editParam={editReleaseTestAttachmentParam}\r\n                            extractedColumnList={this.fieldsForReleasedTestAttachmentGrid}\r\n                            pageable={true}\r\n                            dataStateChange={this.dataStateChange}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'630px'}\r\n                            isActionRequired={true}\r\n                            addRecord={(event) => this.getSampleDetails(event, addReleaseTestAttachment, \"create\")}\r\n                            isToolBarRequired={true}\r\n                            methodUrl={'ReleaseTestAttachment'}\r\n                            isAddRequired={this.props.isAddRequired}\r\n                            isRefreshRequired={this.props.isRefreshRequired}\r\n                            isImportRequired={this.props.isImportRequired}\r\n                            isDownloadPDFRequired={this.props.isDownloadPDFRequired}\r\n                            isDownloadExcelRequired={this.props.isDownloadExcelRequired}\r\n                            fetchRecord={(event) => { this.getSampleDetails(event, editReleaseTestAttachment, \"update\") }}\r\n                            deleteRecord={this.deleteRecord}\r\n                            viewDownloadFile={this.viewReleaseTestAttachmentFile}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n\r\n                {this.state.openModal ?\r\n                    <SlideOutModal show={this.state.openModal}\r\n                        size={\"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.state.operation}\r\n                        inputParam={this.state.inputParam}\r\n                        screenName={this.props.intl.formatMessage({ id: \"IDS_TESTATTACHMENTS\" })}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.state.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.state.loadEsign ?\r\n                            <Esign operation={this.state.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.state.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <Row>\r\n                                {\r\n                                    <Col md={12}>\r\n                                        <DropZone\r\n                                            name='AttachmentFile'\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_FILE\" })}\r\n                                            isMandatory={true}\r\n                                            accept={this.state.selectedRecord && this.state.selectedRecord.nneedreport === transactionStatus.YES ? \".jpeg,.png,.jpg\" : \"\"}\r\n                                            maxFiles={this.state.operation === \"update\" ? 1 : 3}\r\n                                            minSize={0}\r\n                                            maxSize={this.props.maxSize}\r\n                                            onDrop={(event) => this.onDrop(event, 'sfilename', 1)}\r\n                                            deleteAttachment={this.deleteAttachment}\r\n                                            actionType={this.actionType}\r\n                                            fileNameLength={this.fileNameLength}\r\n                                            editFiles={this.state.selectedRecord ? this.state.selectedRecord : {}}\r\n                                            attachmentTypeCode={this.state.selectedRecord && this.state.selectedRecord.selectedAttachmentFile && this.state.selectedRecord.selectedAttachmentFile.nattachmenttypecode}\r\n                                            fileSizeName=\"nfilesize\"\r\n                                            fileName=\"sfilename\"\r\n                                        />\r\n                                    </Col>\r\n                                }\r\n\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_ARNUMBER\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"npreregno\"}\r\n                                        isDisabled={this.state.operation === \"create\" ? false : true}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        options={this.state.selectedRecord ? this.state.selectedRecord.RegistrationArno : []}\r\n                                        optionId='npreregno'\r\n                                        optionValue='sarno'\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord.npreregno : \"\"}\r\n                                        onChange={(event) => this.onComboChange(event, 'npreregno')}\r\n                                        closeMenuOnSelect={true}\r\n                                        alphabeticalSort={true}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLEARNO\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"ntransactionsamplecode\"}\r\n                                        isDisabled={this.state.operation === \"create\" ? false : true}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        options={this.state.selectedRecord ? this.state.selectedRecord.RegistrationSampleArno : []}\r\n                                        optionId='ntransactionsamplecode'\r\n                                        optionValue='ssamplearno'\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord.ntransactionsamplecode : \"\"}\r\n                                        onChange={(event) => this.onComboChange(event, 'ntransactionsamplecode')}\r\n                                        closeMenuOnSelect={true}\r\n                                        alphabeticalSort={true}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTSYNONYM\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"ntransactiontestcode\"}\r\n                                        isDisabled={this.state.operation === \"create\" ? false : true}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={true}\r\n                                        options={this.state.selectedRecord ? this.state.selectedRecord.RegistrationTest : []}\r\n                                        optionId='ntransactiontestcode'\r\n                                        optionValue='stestsynonym'\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord.ntransactiontestcode : \"\"}\r\n                                        onChange={(event) => this.onComboChange(event, 'ntransactiontestcode')}\r\n                                        closeMenuOnSelect={true}\r\n                                        alphabeticalSort={true}\r\n                                    />\r\n                                </Col>\r\n\r\n                                <Col md=\"12\" className=\"mt-4\">\r\n                                    <FormTextarea\r\n                                        name={sdescrption}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        onChange={(event) => this.onInputOnChange(event, 1)}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                        value={this.state.selectedRecord && this.state.selectedRecord[sdescrption] ? this.state.selectedRecord[sdescrption] : \"\"}\r\n                                        rows=\"2\"\r\n                                        required={false}\r\n                                        maxLength={255}\r\n                                    >\r\n                                    </FormTextarea>\r\n                                </Col>\r\n\r\n                                <Col md=\"12\" className=\"mt-4\">\r\n                                    <CustomSwitch\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_INCULDEINREPORT\" })}\r\n                                        type=\"switch\"\r\n                                        name={\"nneedreport\"}\r\n                                        onChange={(event) => this.onInputOnChange(event, 1)}\r\n                                        defaultValue={false}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        checked={this.state.selectedRecord ? this.state.selectedRecord.nneedreport === transactionStatus.YES ? true : false : false}\r\n                                    />\r\n                                </Col>\r\n                                {/* : \"\"} */}\r\n\r\n                            </Row>\r\n                        }\r\n                    /> : \"\"}\r\n            </>\r\n        );\r\n    };\r\n\r\n    getSampleDetails = (event, ncontrolCode, operation) => {\r\n        const url = \"release/getActiveReleaseTestAttachmentById\";\r\n        let openModal = true;\r\n        if (operation === \"update\") {\r\n            rsapi.post(url, {\r\n                \"ncoaparentcode\": event.editRow.ncoaparentcode,\r\n                \"npreregno\": event.editRow.npreregno,\r\n                \"ntransactionsamplecode\": event.editRow.ntransactionsamplecode,\r\n                \"ntransactiontestcode\": event.editRow.ntransactiontestcode,\r\n                \"nreleasetestattachmentcode\": event.editRow.nreleasetestattachmentcode,\r\n                \"userinfo\": this.props.userInfo\r\n            })\r\n                .then(response => {\r\n                    let responseData = response.data;\r\n                    let selectedReleaseTestAttachment = event.editRow;\r\n                    let masterData = this.props.masterData;\r\n                    let nneedreport = responseData && responseData.nneedreport ? responseData.nneedreport : transactionStatus.NO;\r\n                    let sdescription = responseData && responseData.sdescription ? responseData.sdescription : \"\";\r\n                    let sfilename = event.editRow && event.editRow.sfilename;\r\n                    let npreregno;\r\n                    let ntransactionsamplecode;\r\n                    let ntransactiontestcode;\r\n                    let sarno;\r\n                    let ssamplearno;\r\n                    let stestsynonym;\r\n                    masterData.RegistrationArno.map(item => {\r\n                        if (item.value === responseData.npreregno) {\r\n                            npreregno = item;\r\n                            sarno = item.label;\r\n                        }\r\n                    });\r\n                    masterData.RegistrationSampleArno.map(item => {\r\n                        if (item.value === responseData.ntransactionsamplecode) {\r\n                            ntransactionsamplecode = item;\r\n                            ssamplearno = item.label;\r\n                        }\r\n                    });\r\n                    masterData.RegistrationTest.map(item => {\r\n                        if (item.value === responseData.ntransactiontestcode) {\r\n                            ntransactiontestcode = item;\r\n                            stestsynonym = item.label;\r\n                        }\r\n                    });\r\n\r\n                    let selectedRecord = {\r\n                        ...this.state.selectedRecord, npreregno, ntransactionsamplecode, ntransactiontestcode, sfilename, sarno, ssamplearno, stestsynonym, nneedreport, sdescription, selectedReleaseTestAttachment\r\n                    };\r\n                    this.setState({\r\n                        selectedRecord, openModal, operation, ncontrolCode\r\n                    });\r\n                }).catch(error => {\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                    this.setState({\r\n                        loading: false\r\n                    });\r\n                });\r\n        } else {\r\n            let RegistrationArno = this.props.masterData.RegistrationArno;\r\n            let selectedRecord = {\r\n                RegistrationArno: RegistrationArno,\r\n                ReleaseTestAttachmentDetails: this.props.masterData.ReleaseTestAttachmentDetails,\r\n                nneedreport: transactionStatus.NO\r\n            };\r\n            this.setState({\r\n                selectedRecord, openModal, operation, ncontrolCode\r\n            });\r\n        }\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n        const url = \"release/deleteReleaseTestAttachment\";\r\n        let releasetestattachment = {\r\n            \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\r\n            \"npreregno\": deleteParam.selectedRecord.npreregno,\r\n            \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\r\n            \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\r\n            \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\r\n        }\r\n        rsapi.post(url, {\r\n            releasetestattachment, \"userinfo\": this.props.userInfo\r\n        })\r\n            .then(response => {\r\n                let ReleaseTestAttachmentDetails = response.data.ReleaseTestAttachmentDetails;\r\n                let selectedRecord = {\r\n                    ...this.state.selectedRecord, ...response.data\r\n                };\r\n                this.setState({\r\n                    selectedRecord, ReleaseTestAttachmentDetails\r\n                });\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let lstRegistrationSampleArno = this.props.masterData.RegistrationSampleArno;\r\n        let lstRegistrationTest = this.props.masterData.RegistrationTest;\r\n        let RegistrationSampleArno = [];\r\n        let RegistrationTest = [];\r\n        let ntransactionsamplecode = \"\";\r\n        let ntransactiontestcode = \"\";\r\n        let ssamplearno = null;\r\n        let stestsynonym = null;\r\n        if (fieldName === \"npreregno\") {\r\n            lstRegistrationSampleArno.map(item => {\r\n                if (item.item.npreregno === comboData.value) {\r\n                    RegistrationSampleArno.push(item);\r\n                }\r\n            });\r\n            let npreregno = {\r\n                item: comboData.item,\r\n                label: comboData.label,\r\n                value: comboData.value\r\n            };\r\n            let sarno = comboData.item.sarno;\r\n            selectedRecord = {\r\n                ...selectedRecord, RegistrationSampleArno, RegistrationTest, npreregno\r\n                , sarno, ntransactionsamplecode, ntransactiontestcode, ssamplearno, stestsynonym\r\n            };\r\n            this.setState({ selectedRecord });\r\n        } else if (fieldName === \"ntransactionsamplecode\") {\r\n            lstRegistrationTest.map(item => {\r\n                if (item.item.ntransactionsamplecode === comboData.value) {\r\n                    RegistrationTest.push(item);\r\n                }\r\n            });\r\n            ntransactionsamplecode = {\r\n                item: comboData.item,\r\n                label: comboData.label,\r\n                value: comboData.value\r\n            }\r\n            ssamplearno = comboData.item.ssamplearno;\r\n            selectedRecord = {\r\n                ...selectedRecord, RegistrationTest, ntransactionsamplecode\r\n                , ssamplearno, ntransactiontestcode, stestsynonym\r\n            };\r\n            this.setState({ selectedRecord });\r\n        } else if (fieldName === \"ntransactiontestcode\") {\r\n            ntransactiontestcode = {\r\n                item: comboData.item,\r\n                label: comboData.label,\r\n                value: comboData.value\r\n            }\r\n            stestsynonym = comboData.item.stestsynonym;\r\n            selectedRecord = {\r\n                ...selectedRecord, ntransactiontestcode\r\n                , stestsynonym\r\n            }\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let fileFormat = true;\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"nneedreport\") {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        if (selectedRecord[\"nneedreport\"] && selectedRecord[\"nneedreport\"] === transactionStatus.YES && selectedRecord[\"sfilename\"] !== undefined && selectedRecord[\"sfilename\"].length > 0) {\r\n            let fileNameSplit = selectedRecord[\"sfilename\"] && Array.isArray(selectedRecord[\"sfilename\"]) ? selectedRecord[\"sfilename\"][0].name.split(\".\") : selectedRecord[\"sfilename\"].split(\".\");\r\n            fileFormat = (fileNameSplit[fileNameSplit.length - 1] === \"png\" ||\r\n                fileNameSplit[fileNameSplit.length - 1] === \"jpg\" || fileNameSplit[fileNameSplit.length - 1] === \"jpeg\")\r\n            selectedRecord[\"nneedreport\"] = fileFormat === false ? transactionStatus.NO : selectedRecord[\"nneedreport\"];\r\n        }\r\n        !fileFormat && toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTSUPPORTSONLYFILEFORMATS\" }));\r\n        this.setState({ selectedRecord })\r\n    }\r\n\r\n    onDrop = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n        this.setState({\r\n            selectedRecord\r\n        });\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.ReleaseTestAttachmentDetails, event.dataState) })\r\n    }\r\n\r\n    viewReleaseTestAttachmentFile = (filedata) => {\r\n        delete (filedata.inputData.userinfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                releasetestattachment: filedata.inputData,\r\n                userinfo: this.props.userInfo\r\n            },\r\n            classUrl: \"release\",\r\n            operation: \"view\",\r\n            methodUrl: \"ReleaseTestAttachment\",\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const userInfo = this.props.userInfo;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let fileArray = [];\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            if (this.state.operation === 'create') {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData[\"nformcode\"] = userInfo.nformcode;\r\n                    tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n                    tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n                    tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n                    tempData[\"ncoaparentcode\"] = this.props.masterData.ncoaparentcode;\r\n                    tempData[\"nusercode\"] = userInfo.nusercode;\r\n                    tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n                    tempData[\"jsondata\"] = {\r\n                        stestsynonym: selectedRecord.ntransactiontestcode.label,\r\n                        susername: userInfo.susername,\r\n                        suserrolename: userInfo.suserrolename,\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                        slinkname: \"\",\r\n                        sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\r\n                    }\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    fileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\r\n                    tempData[\"nformcode\"] = userInfo.nformcode;\r\n                    tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n                    tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n                    tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n                    tempData[\"ncoaparentcode\"] = this.props.masterData.ncoaparentcode;\r\n                    tempData[\"nusercode\"] = userInfo.nusercode;\r\n                    tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n                    tempData[\"jsondata\"] = {\r\n                        stestsynonym: selectedRecord.ntransactiontestcode.label,\r\n                        susername: userInfo.susername,\r\n                        suserrolename: userInfo.suserrolename,\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                        slinkname: \"\",\r\n                        sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\r\n                    }\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    formData.append(\"filecount\", acceptedFiles.length);\r\n                    isFileEdited = transactionStatus.YES;\r\n\r\n                    fileArray.push(tempData);\r\n                });\r\n            }\r\n        } else {\r\n            let tempData = {};\r\n            tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\r\n            tempData[\"nformcode\"] = userInfo.nformcode;\r\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n            tempData[\"ncoaparentcode\"] = this.props.masterData.ncoaparentcode;\r\n            tempData[\"nusercode\"] = userInfo.nusercode;\r\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n            tempData[\"jsondata\"] = {\r\n                stestsynonym: selectedRecord.ntransactiontestcode.label,\r\n                susername: userInfo.susername,\r\n                suserrolename: userInfo.suserrolename,\r\n                nfilesize: selectedRecord.size,\r\n                ssystemfilename: selectedRecord.ssystemfilename,\r\n                sfilename: Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                slinkname: \"\",\r\n                sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\r\n            }\r\n            fileArray.push(tempData);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"releasetestattachment\", JSON.stringify(fileArray));\r\n        formData.append(\"nattachmenttypecode\", attachmentType.FTP);\r\n        formData.append(\"ncoaparentcode\", this.props.masterData.ncoaparentcode);\r\n        formData.append(\"userinfo\", JSON.stringify({\r\n            ...userInfo,\r\n            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n        }));\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                }\r\n            },\r\n            formData: formData,\r\n            isFileupload: true,\r\n            operation: this.state.operation,\r\n            classUrl: \"release\",\r\n            saveType: saveType,\r\n            formRef: formRef,\r\n            methodUrl: \"ReleaseTestAttachment\"\r\n        };\r\n        formData.append(\"userinfo\", JSON.stringify(inputParam.inputData.userinfo));\r\n\r\n        const requestUrl = rsapi.post(\"release/\" + this.state.operation + \"ReleaseTestAttachment\", formData);\r\n        return requestUrl\r\n            .then(response => {\r\n                let ReleaseTestAttachmentDetails = response.data.ReleaseTestAttachmentDetails;\r\n                let selectedRecord = {};\r\n                let openModal = false;\r\n                this.setState({ selectedRecord, openModal, ReleaseTestAttachmentDetails });\r\n\r\n            }).catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n                this.setState({\r\n                    loading: false\r\n                });\r\n            });\r\n    }\r\n\r\n}\r\n\r\nexport default connect(null, { viewAttachment })(injectIntl(ReleaseTestAttachment));"]},"metadata":{},"sourceType":"module"}