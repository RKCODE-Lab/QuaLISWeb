{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faAngleDoubleRight,faTimes}from'@fortawesome/free-solid-svg-icons';import{SampleType}from'../../components/Enumeration';var ReleaseFilter=/*#__PURE__*/function(_React$Component){_inherits(ReleaseFilter,_React$Component);var _super=_createSuper(ReleaseFilter);function ReleaseFilter(props){var _this;_classCallCheck(this,ReleaseFilter);_this=_super.call(this,props);_this.showMoreToggle=function(){_this.setState({showMore:!_this.state.showMore});};_this.state={showMore:false};return _this;}_createClass(ReleaseFilter,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(\"div\",{className:\"side_more_filter_wrap\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.intl.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:this.props.intl.formatMessage({id:\"IDS_FROM\"}),selected:this.props.fromDate,value:this.props.fromDate,dateFormat:this.props.userInfo.ssitedate,onChange:function onChange(date){return _this2.props.handleDateChange(\"fromDate\",date);},isClearable:false})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.intl.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:this.props.intl.formatMessage({id:\"IDS_TO\"}),selected:this.props.toDate,value:this.props.toDate,dateFormat:this.props.userInfo.ssitedate,onChange:function onChange(date){return _this2.props.handleDateChange(\"toDate\",date);},isClearable:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}),name:\"nsampletypecode\",optionId:\"nsampletypecode\",optionValue:\"ssampletypename\",className:\"form-control\",options:this.props.SampleType,value:this.props.SampleTypeValue?{\"label\":this.props.SampleTypeValue.ssampletypename,\"value\":this.props.SampleTypeValue.nsampletypecode}:\"\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nsampletypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPE\"}),name:\"nregtypecode\",className:\"form-control\",options:this.props.RegType,value:this.props.RegTypeValue?{\"label\":this.props.RegTypeValue.sregtypename,\"value\":this.props.RegTypeValue.nregtypecode}:\"\",optionId:\"nregtypecode\",optionValue:\"sregtypename\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nregtypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONSUBTYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONSUBTYPE\"}),name:\"nregsubtypecode\",optionId:\"nregsubtypecode\",optionValue:\"sregsubtypename\",className:\"form-control\",options:this.props.RegSubType,value:this.props.RegSubTypeValue?{\"label\":this.props.RegSubTypeValue.sregsubtypename,\"value\":this.props.RegSubTypeValue.nregsubtypecode}:\"\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"nregsubtypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_REPORTTYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_REPORTTYPE\"}),name:\"ncoareporttypecode\",className:\"form-control\",options:this.props.ReportType,value:this.props.ReportTypeValue?{\"label\":this.props.ReportTypeValue.scoareporttypename,\"value\":this.props.ReportTypeValue.ncoareporttypecode}:\"\",optionId:\"ncoareporttypecode\",optionValue:\"scoareporttypename\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"ncoareporttypecode\");}}))));}}]);return ReleaseFilter;}(React.Component);export default injectIntl(ReleaseFilter);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/ReleaseFilter.jsx"],"names":["React","Col","Row","injectIntl","DateTimePicker","FormSelectSearch","FontAwesomeIcon","faAngleDoubleRight","faTimes","SampleType","ReleaseFilter","props","showMoreToggle","setState","showMore","state","intl","formatMessage","id","fromDate","userInfo","ssitedate","date","handleDateChange","toDate","SampleTypeValue","ssampletypename","nsampletypecode","event","onFilterComboChange","RegType","RegTypeValue","sregtypename","nregtypecode","RegSubType","RegSubTypeValue","sregsubtypename","nregsubtypecode","ReportType","ReportTypeValue","scoareporttypename","ncoareporttypecode","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight, faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport {  SampleType } from '../../components/Enumeration';\r\n\r\n\r\nclass ReleaseFilter extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore: false\r\n        }\r\n    }\r\n    showMoreToggle = () => {\r\n        this.setState({\r\n            showMore: !this.state.showMore\r\n\r\n        })\r\n    }\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"side_more_filter_wrap\">\r\n                <Row>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"fromdate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_FROM\" })}\r\n                            selected={this.props.fromDate}\r\n                            value={this.props.fromDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.handleDateChange(\"fromDate\", date)}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <DateTimePicker\r\n                            name={\"todate\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            className='form-control'\r\n                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                            selected={this.props.toDate}\r\n                            value={this.props.toDate}\r\n                            dateFormat={this.props.userInfo.ssitedate}\r\n                            onChange={date => this.props.handleDateChange(\"toDate\", date)}\r\n                            isClearable={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                            name=\"nsampletypecode\"\r\n                            optionId=\"nsampletypecode\"\r\n                            optionValue=\"ssampletypename\"\r\n                            className='form-control'\r\n                            options={this.props.SampleType}\r\n                            value={this.props.SampleTypeValue ? { \"label\": this.props.SampleTypeValue.ssampletypename, \"value\": this.props.SampleTypeValue.nsampletypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nsampletypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                            name=\"nregtypecode\"\r\n                            className='form-control'\r\n                            options={this.props.RegType}\r\n                            value={this.props.RegTypeValue ? { \"label\": this.props.RegTypeValue.sregtypename, \"value\": this.props.RegTypeValue.nregtypecode } : \"\"}\r\n                            optionId=\"nregtypecode\"\r\n                            optionValue=\"sregtypename\"\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregtypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                            name=\"nregsubtypecode\"\r\n                            optionId=\"nregsubtypecode\"\r\n                            optionValue=\"sregsubtypename\"\r\n                            className='form-control'\r\n                            options={this.props.RegSubType}\r\n                            value={this.props.RegSubTypeValue ? { \"label\": this.props.RegSubTypeValue.sregsubtypename, \"value\": this.props.RegSubTypeValue.nregsubtypecode } : \"\"}\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nregsubtypecode\")}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_REPORTTYPE\" })}\r\n                                name=\"ncoareporttypecode\"\r\n                                className='form-control'\r\n                                options={this.props.ReportType}\r\n                                value={this.props.ReportTypeValue ? { \"label\": this.props.ReportTypeValue.scoareporttypename, \"value\": this.props.ReportTypeValue.ncoareporttypecode } : \"\"}\r\n                                optionId=\"ncoareporttypecode\"\r\n                                optionValue=\"scoareporttypename\"\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={false}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"ncoareporttypecode\")}\r\n                            />\r\n                                        </Col>\r\n\r\n                    {/* <Col md={12}>\r\n                        {this.props.SampleTypeValue && this.props.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                name=\"nprojecttypecode\"\r\n                                className='form-control'\r\n                                options={this.props.ProjectType}\r\n                                value={this.props.ProjectTypeValue ? { \"label\": this.props.ProjectTypeValue.sprojecttypename, \"value\": this.props.ProjectTypeValue.nprojecttypecode } : \"\"}\r\n                                optionId=\"nprojecttypecode\"\r\n                                optionValue=\"sprojecttypename\"\r\n                                isMandatory={false}\r\n                                isMulti={false}\r\n                                isSearchable={false}\r\n                                isDisabled={false}\r\n                                alphabeticalSort={false}\r\n                                isClearable={false}\r\n                                onChange={(event) => this.props.onFilterComboChange(event, \"nprojecttypecode\")}\r\n                            />\r\n                        }\r\n                      {this.props.SampleTypeValue && this.props.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTMASTER\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_PROJECTMASTER\" })}\r\n                            name=\"nprojectmastercode\"\r\n                            className='form-control'\r\n                            options={this.props.ProjectMaster}\r\n                            value={this.props.ProjectMasterValue ? { \"label\": this.props.ProjectMasterValue.sprojectcode, \"value\": this.props.ProjectMasterValue.nprojectmastercode } : \"\"}\r\n                            optionId=\"nprojectmastercode\"\r\n                            optionValue=\"sprojectcode\"\r\n                            isMandatory={false}\r\n                            isMulti={false}\r\n                            isSearchable={false}\r\n                            isDisabled={false}\r\n                            alphabeticalSort={false}\r\n                            isClearable={false}\r\n                            onChange={(event) => this.props.onFilterComboChange(event, \"nprojectmastercode\")}\r\n                        />\r\n                        }\r\n                    </Col> */}\r\n                </Row>              \r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(ReleaseFilter)"]},"metadata":{},"sourceType":"module"}