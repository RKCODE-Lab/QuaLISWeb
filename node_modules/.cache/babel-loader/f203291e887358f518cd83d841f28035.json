{"ast":null,"code":"import{faEye,faPencilAlt,faPlus,faThumbsUp,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{ReactComponent as Reject}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";import{Button,Card,Nav}from'react-bootstrap';import{injectIntl}from'react-intl';import TransactionListMasterJsonView from'../../components/TransactionListMasterJsonView';import{ProductList}from'../product/product.styled';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{rulesEngineMoreFields,rulesEngineSubFields}from'./TestGroupFields';import{sortData}from'../../components/CommonScript';import PerfectScrollbar from'react-perfect-scrollbar';var TestGroupRulesEngineTab=function TestGroupRulesEngineTab(props){console.log('props--->>>',props);var addId=props.controlMap.has(\"Add Rules Engine\")&&props.controlMap.get(\"Add Rules Engine\").ncontrolcode;var editId=props.controlMap.has(\"Edit Rules Engine\")&&props.controlMap.get(\"Edit Rules Engine\").ncontrolcode;var deleteId=props.controlMap.has(\"Delete Rules Engine\")&&props.controlMap.get(\"Delete Rules Engine\").ncontrolcode;var ApproveId=props.controlMap.has(\"Approve Rules Engine\")&&props.controlMap.get(\"Approve Rules Engine\").ncontrolcode;var RetireId=props.controlMap.has(\"Retire Rules Engine\")&&props.controlMap.get(\"Retire Rules Engine\").ncontrolcode;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"grouped-tab-inner\"},/*#__PURE__*/React.createElement(TransactionListMasterJsonView,{cardHead:167// componentBreadcrumbs={this.breadCrumbData ? this.breadCrumbData.length > 0 ? true : false : false}\n// notSearchable={false}\n,masterList:props.masterData.searchedDataRulesEngine||sortData(props.masterData.RulesEngine,'descending','ntestgrouprulesenginecode')||[],selectedMaster:[props.masterData.SelectedRulesEngine],clickIconGroup:true// selectedMaster={SelectedTest !== undefined ? [SelectedTest] : undefined}\n,primaryKeyField:\"ntestgrouprulesenginecode\",getMasterDetail:function getMasterDetail(param){return props.getSelectedTestGroupRulesEngine(param,props.userInfo,props.masterData);}//  inputParam={getTest}\n// additionalParam={[]}\n,mainField:\"srulename\",selectedListName:\"SelectedRulesEngine\",objectName:\"RulesEngine\",listName:\"IDS_RULESENGINE\",showStatusLink:true,statusFieldName:\"stransdisplaystatus\",statusField:\"ntransactionstatus\",subFields:rulesEngineSubFields,moreField:rulesEngineMoreFields,needValidation:false,needFilter:false,filterColumnData:props.filterTransactionList,searchListName:\"searchedDataRulesEngine\"//searchRef={this.searchRef}\n,hidePaging:false,filterParam:props.filterParamRulesEngine,handlePageChange:props.handlePageChangeRuleEngine,skip:props.skipRulesEngine,take:props.takeRulesEngine,pageSize:props.settings&&props.settings[13].split(\",\").map(function(setting){return parseInt(setting);}),actionIcons:[// {\n//     title: props.intl.formatMessage({ id: \"IDS_EDIT\" }),\n//     controlname: \"faPencilAlt\",\n//     objectName: \"SelectedRulesEngine\",\n//     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n//     hidden: false,\n//     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\n//     onClick:   props.getEditTestGroupRulesEngine(\n//         \"update\",  props.Login.masterData,    props.Login.userInfo\n//     ),\n//   //s  needConditionalIcon: true,\n//   //  conditionalIconFunction: this.fileViewIcon\n// }, \n// {\n//     title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\n//     controlname: \"faTrashAlt\",\n//     objectName: \"SelectedRulesEngine\",\n//     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n//     hidden: false,\n//     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\n//     //  onClick: (props) => this.getEditRulesEngine(props), \n// }, {\n//     title: props.intl.formatMessage({ id: \"IDS_APPROVE\" }),\n//     controlname: \"faThumbsUp\",\n//     objectName: \"SelectedRulesEngine\",\n//     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n//     hidden: false,\n//     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\n//     //  onClick: (props) => this.getEditRulesEngine(props), \n// },  \n{title:props.intl.formatMessage({id:\"IDS_VIEWRULE\"}),controlname:\"faEye\",objectName:\"SelectedRulesEngine\",// hidden: props.userRoleControlRights.indexOf(editId) === -1,\nhidden:false,inputData:{masterData:props.masterData,userInfo:props.userInfo},onClick:props.openflowview},{title:props.intl.formatMessage({id:\"IDS_VIEWOUTCOME\"}),controlname:\"faGift\",objectName:\"SelectedRulesEngine\",// hidden: props.userRoleControlRights.indexOf(editId) === -1,\nhidden:false,inputData:{masterData:props.masterData,userInfo:props.userInfo},onClick:props.viewOutcome}],commonActions:/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-icon-rounded btn-circle solid-blue mr-1\",role:\"button\",hidden:props.userRoleControlRights.indexOf(addId)===-1,\"data-tip\":props.intl.formatMessage({id:\"IDS_ADD\"})// data-for=\"tooltip-list-wrap\"\n,onClick:function onClick(){return props.getTestGroupRulesEngineAdd();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus,title:props.intl.formatMessage({id:\"IDS_EDIT\"})})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr0 mr-1\",href:\"#\",\"data-tip\":props.intl.formatMessage({id:\"IDS_EDIT\"}),hidden:props.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(e){return props.getEditTestGroupRulesEngine(\"update\",props.masterData,props.userInfo);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt,title:props.intl.formatMessage({id:\"IDS_EDIT\"})})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey \",href:\"\",\"data-tip\":props.intl.formatMessage({id:\"IDS_DELETE\"}),hidden:props.userRoleControlRights.indexOf(deleteId)===-1,onClick:props.ConfirmDeleteRule},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-1\",\"data-tip\":props.intl.formatMessage({id:\"IDS_APPROVE\"}),hidden:props.userRoleControlRights.indexOf(ApproveId)===-1,onClick:function onClick(e){return props.approveVersion(props.masterData,1);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-1\",\"data-tip\":props.intl.formatMessage({id:\"IDS_RETIRE\"}),hidden:props.userRoleControlRights.indexOf(RetireId)===-1,onClick:function onClick(e){return props.approveVersion(props.masterData,2);}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"20\",height:\"20\"}))))}))));};export default injectIntl(TestGroupRulesEngineTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/TestGroupRulesEngineTab.jsx"],"names":["faEye","faPencilAlt","faPlus","faThumbsUp","faTrashAlt","FontAwesomeIcon","React","Button","Card","Nav","injectIntl","TransactionListMasterJsonView","ProductList","ConfirmMessage","rulesEngineMoreFields","rulesEngineSubFields","sortData","PerfectScrollbar","TestGroupRulesEngineTab","props","console","log","addId","controlMap","has","get","ncontrolcode","editId","deleteId","ApproveId","RetireId","masterData","searchedDataRulesEngine","RulesEngine","SelectedRulesEngine","param","getSelectedTestGroupRulesEngine","userInfo","filterTransactionList","filterParamRulesEngine","handlePageChangeRuleEngine","skipRulesEngine","takeRulesEngine","settings","split","map","setting","parseInt","title","intl","formatMessage","id","controlname","objectName","hidden","inputData","onClick","openflowview","viewOutcome","userRoleControlRights","indexOf","getTestGroupRulesEngineAdd","e","getEditTestGroupRulesEngine","ConfirmDeleteRule","approveVersion"],"mappings":"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","sourcesContent":["import { faEye, faPencilAlt, faPlus, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg'\r\nimport { Button, Card, Nav } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { rulesEngineMoreFields, rulesEngineSubFields } from './TestGroupFields';\r\nimport { sortData } from '../../components/CommonScript';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\n\r\nconst TestGroupRulesEngineTab = (props) => {\r\n    console.log('props--->>>', props)\r\n    const addId = props.controlMap.has(\"Add Rules Engine\") && props.controlMap.get(\"Add Rules Engine\").ncontrolcode;\r\n    const editId = props.controlMap.has(\"Edit Rules Engine\") && props.controlMap.get(\"Edit Rules Engine\").ncontrolcode;\r\n    const deleteId = props.controlMap.has(\"Delete Rules Engine\") && props.controlMap.get(\"Delete Rules Engine\").ncontrolcode;\r\n    const ApproveId = props.controlMap.has(\"Approve Rules Engine\") && props.controlMap.get(\"Approve Rules Engine\").ncontrolcode;\r\n    const RetireId = props.controlMap.has(\"Retire Rules Engine\") && props.controlMap.get(\"Retire Rules Engine\").ncontrolcode;\r\n\r\n    return (\r\n        <>\r\n        <PerfectScrollbar>\r\n            <div className='grouped-tab-inner'>\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={167}\r\n                        // componentBreadcrumbs={this.breadCrumbData ? this.breadCrumbData.length > 0 ? true : false : false}\r\n                        // notSearchable={false}\r\n                        masterList={props.masterData.searchedDataRulesEngine||sortData(props.masterData.RulesEngine, 'descending', 'ntestgrouprulesenginecode') || []}\r\n                        selectedMaster={[props.masterData.SelectedRulesEngine]}\r\n                        clickIconGroup={true}\r\n                        // selectedMaster={SelectedTest !== undefined ? [SelectedTest] : undefined}\r\n                        primaryKeyField=\"ntestgrouprulesenginecode\"\r\n                        getMasterDetail={(param) => props.getSelectedTestGroupRulesEngine(param, props.userInfo, props.masterData)}\r\n                        //  inputParam={getTest}\r\n                        // additionalParam={[]}\r\n                        mainField=\"srulename\"\r\n                        selectedListName=\"SelectedRulesEngine\"\r\n                        objectName=\"RulesEngine\"\r\n                        listName=\"IDS_RULESENGINE\"\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        subFields={rulesEngineSubFields}\r\n                        moreField={rulesEngineMoreFields}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        filterColumnData={props.filterTransactionList}\r\n                        searchListName=\"searchedDataRulesEngine\"\r\n                        //searchRef={this.searchRef}\r\n                        hidePaging={false}\r\n                         filterParam={props.filterParamRulesEngine}\r\n                        handlePageChange={props.handlePageChangeRuleEngine}\r\n                        skip={props.skipRulesEngine}\r\n                        take={props.takeRulesEngine}\r\n                        pageSize={props.settings && props.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        actionIcons={\r\n                            [\r\n                                // {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                //     controlname: \"faPencilAlt\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     onClick:   props.getEditTestGroupRulesEngine(\r\n                                //         \"update\",  props.Login.masterData,    props.Login.userInfo\r\n                                //     ),\r\n                                //   //s  needConditionalIcon: true,\r\n                                //   //  conditionalIconFunction: this.fileViewIcon\r\n                                // }, \r\n                                // {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                //     controlname: \"faTrashAlt\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     //  onClick: (props) => this.getEditRulesEngine(props), \r\n                                // }, {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_APPROVE\" }),\r\n                                //     controlname: \"faThumbsUp\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     //  onClick: (props) => this.getEditRulesEngine(props), \r\n                                // },  \r\n                                {\r\n                                      title: props.intl.formatMessage({ id: \"IDS_VIEWRULE\" }),\r\n                                      controlname: \"faEye\",\r\n                                      objectName: \"SelectedRulesEngine\",\r\n                                      // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                      hidden: false,\r\n                                      inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                     onClick:   props.openflowview \r\n                                  }, {\r\n                                      title: props.intl.formatMessage({ id: \"IDS_VIEWOUTCOME\" }),\r\n                                      controlname: \"faGift\",\r\n                                      objectName: \"SelectedRulesEngine\",\r\n                                      // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                      hidden: false,\r\n                                      inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                        onClick:  props.viewOutcome  \r\n                                  }\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n                            <>\r\n                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                    <Nav.Link  className=\"btn btn-icon-rounded btn-circle solid-blue mr-1\"  role=\"button\"\r\n                                         hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        // data-for=\"tooltip-list-wrap\"\r\n                                        onClick={() => props.getTestGroupRulesEngineAdd()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link  className=\"btn btn-circle outline-grey mr0 mr-1\"  href=\"#\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(editId) === -1}\r\n\r\n                                        onClick={(e) =>\r\n                                            props.getEditTestGroupRulesEngine(\r\n                                                \"update\", props.masterData, props.userInfo\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPencilAlt}\r\n                                            title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey \" href=\"\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(deleteId) === -1}\r\n\r\n                                        onClick={props.ConfirmDeleteRule}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\" \r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(ApproveId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 1)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                                    </Nav.Link>\r\n                                      <Nav.Link className=\"btn btn-circle outline-grey ml-1\" \r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                          hidden={props.userRoleControlRights.indexOf(RetireId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 2)}\r\n                                    >\r\n                                        <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                    </Nav.Link> \r\n\r\n                                    {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_VIEWRULE\" })}\r\n                                        // hidden={props.userRoleControlRights.indexOf(approveVersionId) === -1}\r\n                                        onClick={() => props.openflowview()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faEye} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_VIEWOUTCOME\" })}\r\n                                        // hidden={props.userRoleControlRights.indexOf(approveVersionId) === -1}\r\n                                        onClick={() => props.viewOutcome()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faEye} />\r\n                                    </Nav.Link> */}\r\n                                </ProductList>\r\n\r\n                            </>\r\n                        }\r\n                    />\r\n        </div>\r\n        </PerfectScrollbar>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupRulesEngineTab);"]},"metadata":{},"sourceType":"module"}