{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { constructOptionList, sortData } from '../components/CommonScript'; //, getComboLabelValue, searchData\n\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\nexport function getSupplierDetail(supplier, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"supplier/getSupplier\", {\n      nsuppliercode: supplier.nsuppliercode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}\nexport function getSupplierComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\n  return function (dispatch) {\n    if (operation === \"create\" || operation === \"update\" && masterData.SelectedSupplier.napprovalstatus === transactionStatus.DRAFT) {\n      const countryService = rsapi.post(\"country/getCountry\", {\n        userinfo: userInfo\n      });\n      let urlArray = [];\n\n      if (operation === \"create\") {\n        urlArray = [countryService];\n      } else {\n        const supplierById = rsapi.post(\"supplier/getActiveSupplierById\", {\n          [primaryKeyName]: primaryKeyValue,\n          \"userinfo\": userInfo\n        }); //this.props.Login.userInfo\n\n        urlArray = [countryService, supplierById];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let country = [];\n        let selectedRecord = {};\n\n        if (operation === \"update\") {\n          selectedRecord = response[1].data;\n          country.push({\n            \"value\": response[1].data[\"ncountrycode\"],\n            \"label\": response[1].data[\"scountryname\"]\n          });\n          selectedRecord[\"ncountrycode\"] = country[0];\n        } else {\n          selectedRecord[\"ntransactionstatus\"] = 1;\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            countryList: response[0].data || [],\n            operation,\n            screenName,\n            selectedRecord,\n            openModal: true,\n            ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: masterData.SelectedSupplier.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTDRAFTRECORDTOEDIT\"\n      }));\n    }\n  };\n}\nexport function getSupplierCategoryComboDataService(supplierparam) {\n  return function (dispatch) {\n    if (supplierparam.masterData.SelectedSupplier.napprovalstatus !== transactionStatus.RETIRED) {\n      const contactData = {\n        \"nsuppliercode\": supplierparam.masterData.SelectedSupplier.nsuppliercode,\n        \"userinfo\": supplierparam.userInfo\n      };\n      const contactService = rsapi.post(\"suppliercategory/getSupplierCategoryBySupplierCode\", contactData);\n      let urlArray = [];\n\n      if (supplierparam.operation === \"create\") {\n        urlArray = [contactService];\n      } else {\n        const contactById = rsapi.post(\"suppliercategory/getActiveSupplierCategoryById\", {\n          [supplierparam.primaryKeyField]: supplierparam.primaryKeyValue,\n          \"userinfo\": supplierparam.userInfo\n        });\n        urlArray = [contactService, contactById];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = {}; //let selectedSupplierCategory = {};\n\n        if (supplierparam.operation === \"update\") {\n          selectedRecord = response[1].data;\n          selectedRecord[\"nsuppliercatcode\"] = response[1].data[\"nsuppliercatcode\"];\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            supplierCategory: response[0].data || [],\n            selectedSupplierCategory: [],\n            selectedRecord,\n            openChildModal: true,\n            operation: supplierparam.operation,\n            screenName: supplierparam.screenName,\n            ncontrolCode: supplierparam.ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: supplierparam.masterData.SelectedSupplier.stranstatus\n      }));\n    }\n  };\n}\nexport function getMaterialCategoryComboDataService(materialparam) {\n  return function (dispatch) {\n    if (materialparam.masterData.SelectedSupplier.napprovalstatus !== transactionStatus.RETIRED) {\n      const materialData = {\n        \"nsuppliercode\": materialparam.masterData.SelectedSupplier.nsuppliercode,\n        \"userinfo\": materialparam.userInfo\n      };\n      const materialService = rsapi.post(\"materialcategory/getMaterialCategoryBYSupplierCode\", materialData);\n      let urlArray = [];\n\n      if (materialparam.operation === \"create\") {\n        urlArray = [materialService];\n      } else {\n        const contactById = rsapi.post(\"suppliercategory/getActiveSupplierCategoryById\", {\n          [materialparam.primaryKeyField]: materialparam.primaryKeyValue,\n          \"userinfo\": materialparam.userInfo\n        });\n        urlArray = [materialService, contactById];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = {};\n\n        if (materialparam.operation === \"update\") {\n          selectedRecord = response[1].data;\n          selectedRecord[\"nsuppliercatcode\"] = response[1].data[\"nsuppliercatcode\"];\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            materialCategory: response[0].data || [],\n            selectedMaterialCategory: [],\n            selectedRecord,\n            openChildModal: true,\n            operation: materialparam.operation,\n            screenName: materialparam.screenName,\n            ncontrolCode: materialparam.ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: materialparam.masterData.SelectedSupplier.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: materialparam.masterData.SelectedSupplier.stranstatus\n      }));\n    }\n  };\n}\nexport const addSupplierFile = inputParam => {\n  return dispatch => {\n    dispatch(initRequest(true));\n    let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\n      userinfo: inputParam.userInfo\n    })];\n\n    if (inputParam.operation === \"update\") {\n      urlArray.push(rsapi.post(\"/supplier/editSupplierFile\", {\n        userinfo: inputParam.userInfo,\n        supplierfile: inputParam.selectedRecord\n      }));\n    }\n\n    Axios.all(urlArray).then(response => {\n      const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\n      const linkmaster = linkMap.get(\"OptionList\");\n      let selectedRecord = {};\n      const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\n      let disabled = false;\n      let editObject = {};\n\n      if (inputParam.operation === \"update\") {\n        editObject = response[1].data;\n        let nlinkcode = {};\n        let link = {};\n\n        if (editObject.nattachmenttypecode === attachmentType.LINK) {\n          nlinkcode = {\n            \"label\": editObject.slinkname,\n            \"value\": editObject.nlinkcode\n          };\n          link = {\n            slinkfilename: editObject.sfilename,\n            slinkdescription: editObject.sdescription,\n            nlinkdefaultstatus: editObject.ndefaultstatus,\n            sfilesize: '',\n            nfilesize: 0,\n            ndefaultstatus: 4,\n            sfilename: ''\n          };\n        } else {\n          nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\"; //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\n\n          link = {\n            slinkfilename: '',\n            slinkdescription: '',\n            nlinkdefaultstatus: 4,\n            sfilesize: editObject.sfilesize,\n            nfilesize: editObject.nfilesize,\n            ndefaultstatus: editObject.ndefaultstatus,\n            sfilename: editObject.sfilename,\n            sdescription: editObject.sdescription //ALPD-855 Fix\n\n          };\n        }\n\n        selectedRecord = { ...link,\n          nsupplierfilecode: editObject.nsupplierfilecode,\n          nattachmenttypecode: editObject.nattachmenttypecode,\n          // sdescription:editObject.sdescription,    //ALPD-855 Fix\n          nlinkcode // disabled: true\n\n        };\n      } else {\n        selectedRecord = {\n          nattachmenttypecode: response[0].data.AttachmentType.length > 0 ? response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\n          nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\",\n          //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\n          disabled\n        };\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          [inputParam.modalName]: true,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolCode,\n          selectedRecord,\n          loading: false,\n          linkMaster: linkmaster,\n          showSaveContinue: false,\n          editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport function getSupplierContactComboDataService(supplierparam) {\n  return function (dispatch) {\n    if (supplierparam.masterData.SelectedSupplier.napprovalstatus !== transactionStatus.RETIRED) {\n      const contactData = {\n        \"nsuppliercode\": supplierparam.masterData.SelectedSupplier.nsuppliercode,\n        \"userinfo\": supplierparam.userInfo\n      };\n      const countryService = rsapi.post(\"country/getCountry\", contactData);\n      const contactService = rsapi.post(\"supplier/getSupplierContact\", contactData);\n      let urlArray = [];\n\n      if (supplierparam.operation === \"create\") {\n        urlArray = [contactService, countryService];\n      } else {\n        const contactById = rsapi.post(\"supplier/getActiveSupplierContactById\", {\n          [supplierparam.primaryKeyField]: supplierparam.primaryKeyValue,\n          \"userinfo\": supplierparam.userInfo\n        });\n        urlArray = [countryService, contactById];\n      }\n\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = {};\n        let country = [];\n        selectedRecord = {\n          countryList: response[1].data || []\n        }; //let selectedSupplierCategory = {};\n\n        if (supplierparam.operation === \"update\") {\n          selectedRecord = response[1].data;\n          country.push({\n            \"value\": response[1].data[\"ncountrycode\"],\n            \"label\": response[1].data[\"scountryname\"]\n          });\n          selectedRecord[\"ncountrycode\"] = country[0];\n          selectedRecord[\"countryList\"] = response[0].data;\n          selectedRecord[\"nsuppliercontactcode\"] = response[1].data[\"nsuppliercontactcode\"];\n        }\n\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            supplierContact: response[0].data.SupplierContact || [],\n            countryList: response[0].data || [],\n            selectedSupplierContact: [],\n            selectedId: supplierparam.primaryKeyValue,\n            selectedRecord,\n            openChildModal: true,\n            operation: supplierparam.operation,\n            screenName: supplierparam.screenName,\n            ncontrolCode: supplierparam.ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      //toast.warn(this.props.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\n      toast.warn(intl.formatMessage({\n        id: supplierparam.masterData.SelectedSupplier.stranstatus\n      }));\n    }\n  };\n} // export function filterColumnDataSupplier(filterValue, masterData, userInfo) {\n//     return function (dispatch) {\n//         let supplierCode = 0;\n//         let searchedData = undefined;\n//         if (filterValue === \"\") {\n//             supplierCode = masterData[\"Supplier\"][0].nsuppliercode;\n//         }\n//         else {\n//             searchedData = searchData(filterValue, masterData[\"Supplier\"], \"ssuppliername\");\n//             if (searchedData.length > 0) {\n//                 supplierCode = searchedData[0].nsuppliercode;\n//             }\n//             else {\n//                 masterData[\"Supplier\"] = [];\n//                 masterData[\"SupplierCategory\"] = [];\n//                 masterData[\"MaterialCategory\"] = [];\n//                 masterData[\"SelectedSupplier\"] = [];\n//                 masterData[\"searchedData\"] = [];\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\n//             }\n//         }\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"supplier/getSupplier\", { nsuppliercode: supplierCode, userinfo: userInfo })\n//             .then(response => {\n//                 masterData[\"Supplier\"] = response.data[\"Supplier\"];\n//                 masterData[\"SupplierCategory\"] = response.data[\"SupplierCategory\"];\n//                 masterData[\"MaterialCategory\"] = response.data[\"MaterialCategory\"];\n//                 masterData[\"SelectedSupplier\"] = response.data[\"SelectedSupplier\"];\n//                 masterData[\"searchedData\"] = searchedData;\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//     }\n// }","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/SupplierAction.js"],"names":["rsapi","DEFAULT_RETURN","constructOptionList","sortData","toast","Axios","initRequest","intl","transactionStatus","attachmentType","getSupplierDetail","supplier","userInfo","masterData","dispatch","post","nsuppliercode","then","response","data","type","payload","loading","catch","error","status","formatMessage","id","message","warn","getSupplierComboService","screenName","operation","primaryKeyName","primaryKeyValue","ncontrolCode","SelectedSupplier","napprovalstatus","DRAFT","countryService","userinfo","urlArray","supplierById","all","country","selectedRecord","push","countryList","openModal","getSupplierCategoryComboDataService","supplierparam","RETIRED","contactData","contactService","contactById","primaryKeyField","supplierCategory","selectedSupplierCategory","openChildModal","stranstatus","getMaterialCategoryComboDataService","materialparam","materialData","materialService","materialCategory","selectedMaterialCategory","addSupplierFile","inputParam","supplierfile","linkMap","LinkMaster","linkmaster","get","defaultLink","filter","items","item","ndefaultlink","YES","disabled","editObject","nlinkcode","link","nattachmenttypecode","LINK","slinkname","slinkfilename","sfilename","slinkdescription","sdescription","nlinkdefaultstatus","ndefaultstatus","sfilesize","nfilesize","length","nsupplierfilecode","AttachmentType","FTP","modalName","linkMaster","showSaveContinue","editFiles","getSupplierContactComboDataService","supplierContact","SupplierContact","selectedSupplierContact","selectedId"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { constructOptionList, sortData } from '../components/CommonScript'//, getComboLabelValue, searchData\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { transactionStatus, attachmentType } from '../components/Enumeration';\r\n\r\nexport function getSupplierDetail(supplier, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"supplier/getSupplier\", {\r\n            nsuppliercode: supplier.nsuppliercode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSupplierComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) {\r\n    return function (dispatch) {\r\n        if (operation === \"create\" || (operation === \"update\" && masterData.SelectedSupplier.napprovalstatus === transactionStatus.DRAFT)) {\r\n\r\n\r\n            const countryService = rsapi.post(\"country/getCountry\", { userinfo: userInfo });\r\n\r\n\r\n\r\n            let urlArray = [];\r\n\r\n            if (operation === \"create\") {\r\n\r\n\r\n\r\n                urlArray = [countryService];\r\n\r\n            }\r\n\r\n            else {\r\n\r\n                const supplierById = rsapi.post(\"supplier/getActiveSupplierById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": userInfo });//this.props.Login.userInfo\r\n\r\n\r\n\r\n                urlArray = [countryService, supplierById];\r\n\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let country = [];\r\n\r\n                    let selectedRecord = {};\r\n\r\n                    if (operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n                         country.push({ \"value\": response[1].data[\"ncountrycode\"], \"label\": response[1].data[\"scountryname\"] });\r\n\r\n\r\n                  selectedRecord[\"ncountrycode\"] = country[0];\r\n\r\n\r\n                    }\r\n                    else {\r\n                        selectedRecord[\"ntransactionstatus\"] = 1;\r\n\r\n\r\n                    }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            countryList: response[0].data || [],\r\n\r\n                            operation, screenName, selectedRecord, openModal: true,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: masterData.SelectedSupplier.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOEDIT\" }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getSupplierCategoryComboDataService(supplierparam) {\r\n    return function (dispatch) {\r\n        if (supplierparam.masterData.SelectedSupplier.napprovalstatus !== transactionStatus.RETIRED) {\r\n\r\n            const contactData = {\r\n                \"nsuppliercode\": supplierparam.masterData.SelectedSupplier.nsuppliercode,\r\n                \"userinfo\": supplierparam.userInfo\r\n\r\n            };\r\n\r\n            const contactService = rsapi.post(\"suppliercategory/getSupplierCategoryBySupplierCode\", contactData);\r\n\r\n            let urlArray = [];\r\n            if (supplierparam.operation === \"create\") {\r\n\r\n                urlArray = [contactService];\r\n            }\r\n            else {\r\n                const contactById = rsapi.post(\"suppliercategory/getActiveSupplierCategoryById\", { [supplierparam.primaryKeyField]: supplierparam.primaryKeyValue, \"userinfo\": supplierparam.userInfo });\r\n                urlArray = [contactService, contactById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let selectedRecord = {};\r\n                    //let selectedSupplierCategory = {};\r\n                    if (supplierparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n\r\n                        selectedRecord[\"nsuppliercatcode\"] = response[1].data[\"nsuppliercatcode\"];\r\n                    }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            supplierCategory: response[0].data || [],\r\n                            selectedSupplierCategory: [],\r\n\r\n                            selectedRecord,\r\n                            openChildModal: true,\r\n\r\n                            operation: supplierparam.operation, screenName: supplierparam.screenName,\r\n                            ncontrolCode: supplierparam.ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getMaterialCategoryComboDataService(materialparam) {\r\n    return function (dispatch) {\r\n        if (materialparam.masterData.SelectedSupplier.napprovalstatus !== transactionStatus.RETIRED) {\r\n\r\n            const materialData = {\r\n                \"nsuppliercode\": materialparam.masterData.SelectedSupplier.nsuppliercode,\r\n                \"userinfo\": materialparam.userInfo\r\n\r\n            };\r\n\r\n            const materialService = rsapi.post(\"materialcategory/getMaterialCategoryBYSupplierCode\", materialData);\r\n\r\n            let urlArray = [];\r\n            if (materialparam.operation === \"create\") {\r\n\r\n                urlArray = [materialService];\r\n            }\r\n            else {\r\n                const contactById = rsapi.post(\"suppliercategory/getActiveSupplierCategoryById\", { [materialparam.primaryKeyField]: materialparam.primaryKeyValue, \"userinfo\": materialparam.userInfo });\r\n                urlArray = [materialService, contactById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n                    let selectedRecord = {};\r\n                    if (materialparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n\r\n\r\n                        selectedRecord[\"nsuppliercatcode\"] = response[1].data[\"nsuppliercatcode\"];\r\n                    }\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            materialCategory: response[0].data || [],\r\n                            selectedMaterialCategory: [],\r\n\r\n                            selectedRecord,\r\n                            openChildModal: true,\r\n\r\n                            operation: materialparam.operation, screenName: materialparam.screenName,\r\n                            ncontrolCode: materialparam.ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: materialparam.masterData.SelectedSupplier.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: materialparam.masterData.SelectedSupplier.stranstatus }));\r\n        }\r\n    }\r\n}\r\n\r\nexport const addSupplierFile = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        let urlArray = [rsapi.post(\"/linkmaster/getLinkMaster\", {\r\n            userinfo: inputParam.userInfo\r\n        })];\r\n        if (inputParam.operation === \"update\") {\r\n            urlArray.push(rsapi.post(\"/supplier/editSupplierFile\", {\r\n                userinfo: inputParam.userInfo,\r\n                supplierfile: inputParam.selectedRecord\r\n            }))\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                const linkMap = constructOptionList(response[0].data.LinkMaster, \"nlinkcode\", \"slinkname\", false, false, true);\r\n                const linkmaster = linkMap.get(\"OptionList\");\r\n                let selectedRecord = {};\r\n                const defaultLink = linkmaster.filter(items => items.item.ndefaultlink === transactionStatus.YES);\r\n                let disabled = false;\r\n                let editObject = {};\r\n                if (inputParam.operation === \"update\") {\r\n                    editObject = response[1].data;\r\n                    let nlinkcode = {};\r\n                    let link = {};\r\n                    if (editObject.nattachmenttypecode === attachmentType.LINK) {\r\n                        nlinkcode = {\r\n                            \"label\": editObject.slinkname,\r\n                            \"value\": editObject.nlinkcode\r\n                        }\r\n\r\n                        link = {\r\n                            slinkfilename: editObject.sfilename,\r\n                            slinkdescription: editObject.sdescription,\r\n                            nlinkdefaultstatus: editObject.ndefaultstatus,\r\n                            sfilesize: '',\r\n                            nfilesize: 0,\r\n                            ndefaultstatus: 4,\r\n                            sfilename: '',\r\n                        }\r\n\r\n                    } else {\r\n                        nlinkcode = defaultLink.length > 0 ? defaultLink[0] : \"\" //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\"\r\n                        link = {\r\n                            slinkfilename: '',\r\n                            slinkdescription: '',\r\n                            nlinkdefaultstatus: 4,\r\n                            sfilesize: editObject.sfilesize,\r\n                            nfilesize: editObject.nfilesize,\r\n                            ndefaultstatus: editObject.ndefaultstatus,\r\n                            sfilename: editObject.sfilename,\r\n                            sdescription:editObject.sdescription    //ALPD-855 Fix\r\n                        }\r\n                    }\r\n\r\n\r\n\r\n                    selectedRecord = {\r\n                        ...link,\r\n                        nsupplierfilecode: editObject.nsupplierfilecode,\r\n                        nattachmenttypecode: editObject.nattachmenttypecode,\r\n                        // sdescription:editObject.sdescription,    //ALPD-855 Fix\r\n                        nlinkcode,\r\n                        // disabled: true\r\n                    };\r\n                } else {\r\n                    selectedRecord = {\r\n                        nattachmenttypecode: response[0].data.AttachmentType.length > 0 ?\r\n                            response[0].data.AttachmentType[0].nattachmenttypecode : attachmentType.FTP,\r\n                        nlinkcode: defaultLink.length > 0 ? defaultLink[0] : \"\", //{\"label\": defaultLink[0].slinkname, \"value\": defaultLink[0].nlinkcode}:\"\",\r\n                        disabled\r\n                    };\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        [inputParam.modalName]: true,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        linkMaster: linkmaster,\r\n                        showSaveContinue: false,\r\n                        editFiles: editObject.nattachmenttypecode === attachmentType.FTP ? editObject : {}\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\nexport function getSupplierContactComboDataService(supplierparam) {\r\n    return function (dispatch) {\r\n        if (supplierparam.masterData.SelectedSupplier.napprovalstatus !== transactionStatus.RETIRED) {\r\n\r\n            const contactData = {\r\n                \"nsuppliercode\": supplierparam.masterData.SelectedSupplier.nsuppliercode,\r\n                \"userinfo\": supplierparam.userInfo\r\n\r\n            };\r\n            const countryService = rsapi.post(\"country/getCountry\", contactData);\r\n\r\n            const contactService = rsapi.post(\"supplier/getSupplierContact\", contactData);\r\n\r\n            let urlArray = [];\r\n            if (supplierparam.operation === \"create\") {\r\n\r\n                urlArray = [contactService, countryService];\r\n            }\r\n            else {\r\n                const contactById = rsapi.post(\"supplier/getActiveSupplierContactById\", { [supplierparam.primaryKeyField]: supplierparam.primaryKeyValue, \"userinfo\": supplierparam.userInfo });\r\n                urlArray = [countryService, contactById];\r\n            }\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n                    let selectedRecord = {};\r\n                    let country = [];\r\n                    selectedRecord = { countryList: response[1].data || [] };\r\n                    //let selectedSupplierCategory = {};\r\n                    if (supplierparam.operation === \"update\") {\r\n                        selectedRecord = response[1].data;\r\n                        country.push({ \"value\": response[1].data[\"ncountrycode\"], \"label\": response[1].data[\"scountryname\"] });\r\n                        selectedRecord[\"ncountrycode\"] = country[0];\r\n                        selectedRecord[\"countryList\"] = response[0].data;\r\n\r\n\r\n\r\n                        selectedRecord[\"nsuppliercontactcode\"] = response[1].data[\"nsuppliercontactcode\"];\r\n                    }\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            supplierContact: response[0].data.SupplierContact || [],\r\n                            countryList: response[0].data || [],\r\n                            selectedSupplierContact: [],\r\n                            selectedId:supplierparam.primaryKeyValue,\r\n                            selectedRecord,\r\n                            openChildModal: true,\r\n\r\n                            operation: supplierparam.operation, screenName: supplierparam.screenName,\r\n                            ncontrolCode: supplierparam.ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(this.props.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\r\n            toast.warn(intl.formatMessage({ id: supplierparam.masterData.SelectedSupplier.stranstatus }));\r\n        }\r\n    }\r\n}\r\n// export function filterColumnDataSupplier(filterValue, masterData, userInfo) {\r\n//     return function (dispatch) {\r\n\r\n//         let supplierCode = 0;\r\n//         let searchedData = undefined;\r\n//         if (filterValue === \"\") {\r\n//             supplierCode = masterData[\"Supplier\"][0].nsuppliercode;\r\n//         }\r\n//         else {\r\n\r\n//             searchedData = searchData(filterValue, masterData[\"Supplier\"], \"ssuppliername\");\r\n\r\n//             if (searchedData.length > 0) {\r\n//                 supplierCode = searchedData[0].nsuppliercode;\r\n//             }\r\n//             else {\r\n//                 masterData[\"Supplier\"] = [];\r\n//                 masterData[\"SupplierCategory\"] = [];\r\n//                 masterData[\"MaterialCategory\"] = [];\r\n//                 masterData[\"SelectedSupplier\"] = [];\r\n//                 masterData[\"searchedData\"] = [];\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData } });\r\n//             }\r\n\r\n//         }\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"supplier/getSupplier\", { nsuppliercode: supplierCode, userinfo: userInfo })\r\n//             .then(response => {\r\n//                 masterData[\"Supplier\"] = response.data[\"Supplier\"];\r\n//                 masterData[\"SupplierCategory\"] = response.data[\"SupplierCategory\"];\r\n//                 masterData[\"MaterialCategory\"] = response.data[\"MaterialCategory\"];\r\n//                 masterData[\"SelectedSupplier\"] = response.data[\"SelectedSupplier\"];\r\n//                 masterData[\"searchedData\"] = searchedData;\r\n\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n//             })\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n\r\n\r\n\r\n//     }\r\n// }\r\n\r\n"]},"metadata":{},"sourceType":"module"}