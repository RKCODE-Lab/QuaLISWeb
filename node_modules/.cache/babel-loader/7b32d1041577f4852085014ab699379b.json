{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\goodsin\\\\AddGoodsIn.js\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport { transactionStatus } from '../../components/Enumeration';\n\nconst AddGoodsIn = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nclientcatcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CLIENTCATEGORY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.ClientCategory,\n    value: props.selectedRecord[\"nclientcatcode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    defaultValue: props.selectedRecord[\"nclientcatcode\"],\n    onChange: event => props.onComboChange(event, 'nclientcatcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nclientcode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_CLIENT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.selectedRecord[\"nclientcatcode\"] !== undefined ? props.Client : [],\n    value: props.selectedRecord[\"nclientcode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    defaultValue: props.selectedRecord[\"nclientcode\"],\n    onChange: event => props.onComboChange(event, 'nclientcode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nprojecttypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROJECTTYPE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.selectedRecord[\"nclientcode\"] !== undefined && props.selectedRecord[\"nclientcode\"] !== \"\" ? props.ProjectType : [],\n    value: props.selectedRecord[\"nprojecttypecode\"] || \"\",\n    isMandatory: false,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    defaultValue: props.selectedRecord[\"nprojecttypecode\"],\n    onChange: event => props.onComboChange(event, 'nprojecttypecode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nprojectmastercode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_PROJECT\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.selectedRecord[\"nprojecttypecode\"] !== null && props.selectedRecord[\"nprojecttypecode\"] !== undefined && props.selectedRecord[\"nprojecttypecode\"] !== \"\" ? props.Project : [],\n    value: props.selectedRecord[\"nprojecttypecode\"] !== null && props.selectedRecord[\"nprojecttypecode\"] !== undefined ? props.selectedRecord[\"nprojectmastercode\"] || \"\" : \"\",\n    isMandatory: false,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    defaultValue: props.selectedRecord[\"nprojectmastercode\"],\n    onChange: event => props.onComboChange(event, 'nprojectmastercode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ncouriercode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_COURIERCARRIER\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.Courier,\n    value: props.selectedRecord[\"ncouriercode\"] || \"\",\n    isMandatory: false,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    defaultValue: props.selectedRecord[\"ncouriercode\"],\n    onChange: event => props.onComboChange(event, 'ncouriercode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nnoofpackages\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NOOFPACKAGES\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NOOFPACKAGES\"\n    }),\n    value: props.selectedRecord[\"nnoofpackages\"],\n    type: \"number\",\n    strict: true,\n    maxLength: 9,\n    noStyle: true,\n    onChange: event => props.onNumericInputOnChange(event, \"nnoofpackages\"),\n    precision: 0,\n    min: 1,\n    className: \"form-control\",\n    isMandatory: true,\n    required: true,\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 31\n    }\n  })))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 16\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sconsignmentno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CONSIGNMENTNO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_CONSIGNMENTNO\"\n    }),\n    value: props.selectedRecord[\"sconsignmentno\"] || \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dgoodsindatetime\",\n    label: props.intl.formatMessage({\n      id: \"IDS_GOODSINDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"dgoodsindatetime\"],\n    dateFormat: props.userInfo.ssitedatetime,\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: true,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dgoodsindatetime\", date),\n    value: props.selectedRecord[\"dgoodsindatetime\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 31\n    }\n  }), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntimezonecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZone,\n    value: props.selectedRecord[\"ntimezonecode\"] || \"\",\n    isMandatory: true,\n    isMulti: false,\n    isSearchable: true,\n    isClearable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    defaultValue: props.selectedRecord[\"ntimezonecode\"],\n    onChange: event => props.onComboChange(event, 'ntimezonecode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 36\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    name: \"noutofhours\",\n    type: \"switch\",\n    label: props.intl.formatMessage({\n      id: \"IDS_OUTOFHOURS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_OUTOFHOURS\"\n    }),\n    defaultValue: props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true : false,\n    isMandatory: false,\n    required: false,\n    checked: props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true : false,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"ssecurityrefno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_SECURITYREFNO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SECURITYREFNO\"\n    }),\n    value: props.selectedRecord[\"ssecurityrefno\"] || \"\",\n    isMandatory: props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true : false,\n    required: props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true : false,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"scomments\",\n    label: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    value: props.selectedRecord[\"scomments\"] || \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 31\n    }\n  })))));\n};\n\nexport default injectIntl(AddGoodsIn);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/goodsin/AddGoodsIn.js"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","DateTimePicker","FormNumericInput","transactionStatus","AddGoodsIn","props","intl","formatMessage","id","ClientCategory","selectedRecord","event","onComboChange","undefined","Client","ProjectType","Project","Courier","onNumericInputOnChange","onInputOnChange","userInfo","ssitedatetime","currentTime","date","handleDateChange","istimezoneshow","YES","TimeZone"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport {transactionStatus} from '../../components/Enumeration';\r\n\r\nconst AddGoodsIn = (props) =>{    \r\n    \r\n       return (\r\n           <Row>                                \r\n                <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}>\r\n\r\n                              <FormSelectSearch\r\n                                   name={\"nclientcatcode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_CLIENTCATEGORY\"})}                                \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                                   options={ props.ClientCategory}\r\n                                   value = { props.selectedRecord[\"nclientcatcode\"] || \"\"}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   defaultValue={props.selectedRecord[\"nclientcatcode\"]}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nclientcatcode')}  \r\n                              />\r\n\r\n                              <FormSelectSearch\r\n                                   name={\"nclientcode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_CLIENT\"})}                                \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                                   options={props.selectedRecord[\"nclientcatcode\"]!==undefined? props.Client : []}\r\n                                   value = { props.selectedRecord[\"nclientcode\"] || \"\"}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   defaultValue={props.selectedRecord[\"nclientcode\"]}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nclientcode')}  \r\n                              />\r\n\r\n                              <FormSelectSearch\r\n                                   name={\"nprojecttypecode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_PROJECTTYPE\"})}                                \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                              \r\n                                   options={ props.selectedRecord[\"nclientcode\"]!==undefined && props.selectedRecord[\"nclientcode\"]!==\"\" ? props.ProjectType:[]}\r\n                                   value = { props.selectedRecord[\"nprojecttypecode\"] || \"\"}\r\n                                   isMandatory={false}\r\n                                   isClearable={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   defaultValue={props.selectedRecord[\"nprojecttypecode\"]}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nprojecttypecode')}  \r\n                              />\r\n                   \r\n                              <FormSelectSearch\r\n                                   name={\"nprojectmastercode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_PROJECT\"})}                                \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                \r\n                                   options={props.selectedRecord[\"nprojecttypecode\"] !==null&&props.selectedRecord[\"nprojecttypecode\"] !==undefined &&props.selectedRecord[\"nprojecttypecode\"]!==\"\" ? props.Project :[]}\r\n                                   value = {props.selectedRecord[\"nprojecttypecode\"] !==null && props.selectedRecord[\"nprojecttypecode\"] !==undefined?\r\n                                             props.selectedRecord[\"nprojectmastercode\"] || \"\" : \"\"}\r\n                                   isMandatory={false}\r\n                                   isClearable={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}                               \r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   defaultValue={props.selectedRecord[\"nprojectmastercode\"]}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nprojectmastercode')}  \r\n                              />\r\n                    \r\n                              <FormSelectSearch\r\n                                  name={\"ncouriercode\"}\r\n                                  formLabel={ props.intl.formatMessage({ id:\"IDS_COURIERCARRIER\"})}                                \r\n                                  placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                \r\n                                  options={ props.Courier}\r\n                                  value = { props.selectedRecord[\"ncouriercode\"] || \"\"}\r\n                                  isMandatory={false}\r\n                                  isClearable={true}\r\n                                  isMulti={false}\r\n                                  isSearchable={true}                               \r\n                                  isDisabled={false}\r\n                                  closeMenuOnSelect={true}\r\n                                  defaultValue={props.selectedRecord[\"ncouriercode\"]}\r\n                                  onChange = {(event)=> props.onComboChange(event, 'ncouriercode')}  \r\n                              />\r\n                                             \r\n                              <FormNumericInput\r\n                                   name={\"nnoofpackages\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_NOOFPACKAGES\"})}  \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_NOOFPACKAGES\"})}                        \r\n                                   value ={ props.selectedRecord[\"nnoofpackages\"]}\r\n                                   type=\"number\"                               \r\n                                   strict={true}\r\n                                   maxLength={9}\r\n                                   noStyle={true}\r\n                                   onChange={(event) => props.onNumericInputOnChange(event, \"nnoofpackages\")}\r\n                                   precision={0}\r\n                                   min={1}\r\n                                   className=\"form-control\"\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   errors=\"Please provide a valid number.\"\r\n                              />                       \r\n                         </Col>                   \r\n                    </Row>\r\n               </Col>\r\n               <Col md={6}>\r\n                    <Row>\r\n                         <Col md={12}> \r\n\r\n                              <FormInput\r\n                                   name={\"sconsignmentno\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_CONSIGNMENTNO\"})}                  \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_CONSIGNMENTNO\"})}\r\n                                   value ={ props.selectedRecord[\"sconsignmentno\"] || \"\"}\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              /> \r\n                               \r\n                              <DateTimePicker\r\n                                        name={\"dgoodsindatetime\"} \r\n                                        label={ props.intl.formatMessage({ id:\"IDS_GOODSINDATE\"})}                     \r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={props.selectedRecord[\"dgoodsindatetime\"]}\r\n                                        dateFormat={props.userInfo.ssitedatetime}\r\n                                        timeInputLabel=  {props.intl.formatMessage({ id:\"IDS_TIME\"})}\r\n                                        showTimeInput={true}\r\n                                        isClearable={false}\r\n                                        isMandatory={true}                       \r\n                                        required={true}\r\n                                        maxTime={props.currentTime}\r\n                                        onChange={date => props.handleDateChange(\"dgoodsindatetime\", date)}\r\n                                        value={props.selectedRecord[\"dgoodsindatetime\"]}\r\n                              />\r\n                              {props.userInfo.istimezoneshow === transactionStatus.YES &&\r\n                                   <FormSelectSearch\r\n                                        name={\"ntimezonecode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_TIMEZONE\"})}                                \r\n                                        placeholder={ props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                               \r\n                                        options={ props.TimeZone}\r\n                                        value = { props.selectedRecord[\"ntimezonecode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={true}\r\n                                        isClearable={false}                               \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        defaultValue={props.selectedRecord[\"ntimezonecode\"]}\r\n                                        onChange = {(event)=> props.onComboChange(event, 'ntimezonecode')}\r\n                                   />\r\n                              }\r\n                        \r\n                              <CustomSwitch\r\n                                   name={\"noutofhours\"}\r\n                                   type=\"switch\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_OUTOFHOURS\"})}\r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_OUTOFHOURS\"})}                            \r\n                                   defaultValue ={ props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true :false }  \r\n                                   isMandatory={false}                       \r\n                                   required={false}\r\n                                   checked={ props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true :false}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n                         \r\n                              <FormInput\r\n                                   name={\"ssecurityrefno\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_SECURITYREFNO\"})}                  \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_SECURITYREFNO\"})}\r\n                                   value ={ props.selectedRecord[\"ssecurityrefno\"] || \"\"}\r\n                                   isMandatory={props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true :false}\r\n                                   required={props.selectedRecord[\"noutofhours\"] === transactionStatus.YES ? true :false}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n                         \r\n                              <FormTextarea\r\n                                   name={\"scomments\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}                    \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_COMMENTS\"})}\r\n                                   value ={ props.selectedRecord[\"scomments\"] || \"\"}\r\n                                   rows=\"2\"\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n                         </Col>         \r\n                   </Row>\r\n               </Col>              \r\n          </Row>   \r\n       )\r\n   }\r\n   export default injectIntl(AddGoodsIn);\r\n"]},"metadata":{},"sourceType":"module"}