{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\instrumentmanagement\\\\Instrument.jsx\";\nimport React, { Component } from \"react\";\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport { toast } from \"react-toastify\";\nimport { FormattedMessage } from \"react-intl\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt, faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\nimport { injectIntl } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getInstrumentCombo, getInstrumentDetail, getSectionUsers, getAvailableInstData, changeInstrumentCategoryFilter, filterColumnData, getTabDetails, getDataForAddEditValidation, addInstrumentFile, getDataForAddEditCalibration, getDataForAddEditMaintenance, OpenDate, CloseDate, viewAttachment, getCalibrationRequired, getInstrumentSiteSection, updateAutoCalibration } from \"../../actions\";\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { attachmentType, transactionStatus } from \"../../components/Enumeration\";\nimport AddInstrument from \"../../pages/instrumentmanagement/AddInstrument\";\nimport AddInstrumentSection from \"../../pages/instrumentmanagement/AddInstrumentSection\";\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\nimport Esign from \"../audittrail/Esign\";\nimport { showEsign, getControlMap, constructOptionList, formatInputDate, onDropAttachFileList, create_UUID, deleteAttachmentDropZone, rearrangeDateFormatDateOnly, Lims_JSON_stringify, replaceBackSlash } from \"../../components/CommonScript\";\nimport { ReadOnlyText, ContentPanel, MediaLabel } from \"../../components/App.styles\";\nimport InstrumentSectionTab from \"./InstrumentSectionTab\";\nimport { process } from \"@progress/kendo-data-query\";\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\nimport InstrumentCategoryFilter from \"./InstrumentCategoryFilter\";\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\nimport { Affix } from \"rsuite\"; // import ReactTooltip from \"react-tooltip\";\n\nimport InstrumentValidationTab from \"./InstrumentValidationTab\";\nimport AddInstrumentValidation from \"../../pages/instrumentmanagement/AddInstrumentValidation\";\nimport AddInstrumentFile from \"../../pages/instrumentmanagement/AddInstrumentFile\";\nimport InstrumentCalibrationTab from \"./InstrumentCalibrationTab\";\nimport AddInstrumentCalibration from \"./AddInstrumentCalibration\";\nimport ModalShow from \"../../components/ModalShow\";\nimport AddOpenDate from \"./AddOpenDate\";\nimport AddCloseDate from \"./AddCloseDate\";\nimport InstrumentMaintenanceTab from \"./InstrumentMaintenanceTab\";\nimport AddInstrumentMaintenance from \"./AddInstrumentMaintenance\";\nimport rsapi from '../../rsapi';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Instrument extends Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, optional, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (name === \"nnextcalibration\") {\n        selectedRecord[name] = event;\n      } else if (name === \"npurchasecost\") {\n        selectedRecord[name] = event;\n      } else {\n        if (event.target.type === \"checkbox\") {\n          selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n        } else if (event.target.type === 'radio') {\n          selectedRecord[event.target.name] = optional;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveModalClick = () => {\n      let inputData = [];\n      let inputParam = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sopenreason: this.state.selectedRecord.sopenreason !== null ? this.state.selectedRecord.sopenreason : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dopendate\"]) {\n            inputData[\"instrumentcalibration\"][\"dopendate\"] = formatInputDate(this.state.selectedRecord[\"dopendate\"], false);\n          }\n        } else {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sclosereason: this.state.selectedRecord.sclosereason !== null ? this.state.selectedRecord.sclosereason : \"\",\n            ncloseusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dclosedate\"]) {\n            inputData[\"instrumentcalibration\"][\"dclosedate\"] = formatInputDate(this.state.selectedRecord[\"dclosedate\"], false);\n          }\n        }\n\n        inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentCalibration\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          searchRef: this.searchRef // modalShow: false,\n          // openModal:true,\n\n        };\n      } else {\n        if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sopenreason: this.state.selectedRecord.sopenreason !== null ? this.state.selectedRecord.sopenreason : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dopendate\"]) {\n            inputData[\"instrumentmaintenance\"][\"dopendate\"] = formatInputDate(this.state.selectedRecord[\"dopendate\"], false);\n          }\n        } else {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\n            sclosereason: this.state.selectedRecord.sclosereason !== null ? this.state.selectedRecord.sclosereason : \"\",\n            ncloseusercode: this.props.Login.userInfo.nusercode\n          };\n\n          if (this.state.selectedRecord[\"dclosedate\"]) {\n            inputData[\"instrumentmaintenance\"][\"dclosedate\"] = formatInputDate(this.state.selectedRecord[\"dclosedate\"], false);\n          }\n        }\n\n        inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentMaintenance\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          searchRef: this.searchRef //  modalShow: false,\n          //  openModal:true,\n\n        };\n      }\n\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openModal: true,\n            modalShow: false,\n            //openChildModal:false,\n            //openModal:false,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            }\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"modalShow\");\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let instSection = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n        let postParam = undefined;\n        let fieldList = [\"ninstrumentcode\", \"ninstrumentcatcode\", \"ninstrumentlocationcode\", \"nsuppliercode\", \"nservicecode\", \"nmanufcode\", \"nusercode\", \"sinstrumentid\", \"sinstrumentname\", \"smodelnumber\", \"spono\", \"sdescription\", \"sassociateddocument\", \"smovement\", \"nwindowsperiodminus\", \"nwindowsperiodplus\", \"nwindowsperiodminusunit\", \"nwindowsperiodplusunit\", \"sserialno\", \"sremarks\", \"npurchasecost\", \"ssoftwareinformation\", \"sperformancecapabilities\", \"sacceptancecriteria\", \"nnextcalibration\", \"nnextcalibrationperiod\", \"nregionalsitecode\", \"ndefaultstatus\", \"nsitecode\", \"nstatus\"];\n        inputData[\"instrument\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n\n        if (this.props.Login.operation === \"update\") {\n          postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrument\",\n            primaryKeyField: \"ninstrumentcode\"\n          };\n          inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\"dmanufacdate\"] ? this.state.selectedRecord[\"dmanufacdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\"dpodate\"] ? this.state.selectedRecord[\"dpodate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\"dreceiveddate\"] ? this.state.selectedRecord[\"dreceiveddate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sinstallationdate\"] = this.state.selectedRecord[\"dinstallationdate\"] ? this.state.selectedRecord[\"dinstallationdate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\"dexpirydate\"] ? this.state.selectedRecord[\"dexpirydate\"] : transactionStatus.NA;\n          inputData[\"instrument\"][\"sservicedate\"] = this.state.selectedRecord[\"dservicedate\"] ? this.state.selectedRecord[\"dservicedate\"] : transactionStatus.NA;\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n          });\n        } else {\n          inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntransactionstatus\"];\n          inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\n          fieldList.map(item => {\n            return inputData[\"instrument\"][item] = this.state.selectedRecord[item];\n          });\n          inputData[\"instrumentvalidation\"] = {\n            sremark: this.state.selectedRecord.sremark ? this.state.selectedRecord.sremark : \"\",\n            nusercode: this.props.Login.userInfo.nusercode,\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : transactionStatus.NA,\n            nvalidationstatus: this.state.selectedRecord[\"validation\"] ? this.state.selectedRecord[\"validation\"].value : transactionStatus.VALIDATION,\n            dvalidationdate: formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false)\n          };\n          inputData[\"instrumentcalibration\"] = {\n            sopenreason: this.state.selectedRecord[\"sopenreason\"] ? this.state.selectedRecord[\"sopenreason\"] : \"\",\n            sclosereason: this.state.selectedRecord[\"sclosereason\"] ? this.state.selectedRecord[\"sclosereason\"] : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode,\n            ncloseusercode: this.props.Login.userInfo.nusercode,\n            dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n            ncalibrationstatus: this.state.selectedRecord[\"calibration\"] ? this.state.selectedRecord[\"calibration\"].value : transactionStatus.CALIBRATION,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : transactionStatus.NA,\n            dopendate: this.state.selectedRecord[\"calibration\"] && this.state.selectedRecord[\"calibration\"].value === transactionStatus.UNDERCALIBIRATION ? \"\" : formatInputDate(this.state.selectedRecord[\"dopendate\"], false),\n            dclosedate: this.state.selectedRecord[\"calibration\"] && this.state.selectedRecord[\"calibration\"].value === transactionStatus.UNDERCALIBIRATION ? \"\" : formatInputDate(this.state.selectedRecord[\"dclosedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : transactionStatus.NA,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : transactionStatus.NA,\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : transactionStatus.NA,\n            npreregno: transactionStatus.NA,\n            sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\"\n          };\n          inputData[\"instrumentmaintenance\"] = {\n            sopenreason: this.state.selectedRecord[\"sopenreason\"] ? this.state.selectedRecord[\"sopenreason\"] : \"\",\n            sclosereason: this.state.selectedRecord[\"sclosereason\"] ? this.state.selectedRecord[\"sclosereason\"] : \"\",\n            nopenusercode: this.props.Login.userInfo.nusercode,\n            ncloseusercode: this.props.Login.userInfo.nusercode,\n            ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : transactionStatus.NA,\n            nmaintenancestatus: this.state.selectedRecord[\"maintenance\"] ? this.state.selectedRecord[\"maintenance\"].value : transactionStatus.NA,\n            ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : transactionStatus.NA,\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : transactionStatus.NA,\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : transactionStatus.NA,\n            dopendate: this.state.selectedRecord[\"maintenance\"] && this.state.selectedRecord[\"maintenance\"].value === transactionStatus.UNDERMAINTANENCE ? \"\" : formatInputDate(this.state.selectedRecord[\"dopendate\"], false),\n            dclosedate: this.state.selectedRecord[\"maintenance\"] && this.state.selectedRecord[\"maintenance\"].value === transactionStatus.UNDERMAINTANENCE ? \"\" : formatInputDate(this.state.selectedRecord[\"dclosedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false)\n          };\n        }\n\n        inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\"ninstrumentcatcode\"] ? this.state.selectedRecord[\"ninstrumentcatcode\"].value : transactionStatus.NA;\n        inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\"nmanufcode\"] ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\"nsuppliercode\"] ? this.state.selectedRecord[\"nsuppliercode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ninstrumentlocationcode\"] = this.state.selectedRecord[\"ninstrumentlocationcode\"] ? this.state.selectedRecord[\"ninstrumentlocationcode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nsitecode\"] = this.props.Login.userInfo.nmastersitecode;\n        inputData[\"instrument\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nregionalsitecode\"] ? this.state.selectedRecord[\"nregionalsitecode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\"nservicecode\"] ? this.state.selectedRecord[\"nservicecode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\"ntranscode\"] ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\"nwindowsperiodplus\"] ? this.state.selectedRecord[\"nwindowsperiodplus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state.selectedRecord[\"nwindowsperiodminus\"] ? this.state.selectedRecord[\"nwindowsperiodminus\"] : 0;\n        inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state.selectedRecord[\"nwindowsperiodminusunit\"] ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state.selectedRecord[\"nwindowsperiodplusunit\"] ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"nnextcalibrationperiod\"] = this.state.selectedRecord[\"nnextcalibrationperiod\"] ? this.state.selectedRecord[\"nnextcalibrationperiod\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzmanufdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\"ntzmanufdate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\"ntzpodate\"] ? this.state.selectedRecord[\"ntzpodate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\"ntzreceivedate\"] ? this.state.selectedRecord[\"ntzreceivedate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzinstallationdate\"] = this.state.selectedRecord[\"ntzinstallationdate\"] ? this.state.selectedRecord[\"ntzinstallationdate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\"ntzexpirydate\"] ? this.state.selectedRecord[\"ntzexpirydate\"].label : transactionStatus.NA;\n        inputData[\"instrument\"][\"ntzservicedate\"] = this.state.selectedRecord[\"ntzservicedate\"] ? this.state.selectedRecord[\"ntzservicedate\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"instrument\"][\"stzservicedate\"] = this.state.selectedRecord[\"ntzservicedate\"] ? this.state.selectedRecord[\"ntzservicedate\"].label : transactionStatus.NA;\n\n        if (this.state.selectedRecord[\"dpodate\"]) {\n          inputData[\"instrument\"][\"dpodate\"] = formatInputDate(this.state.selectedRecord[\"dpodate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dreceiveddate\"]) {\n          inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(this.state.selectedRecord[\"dreceiveddate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dinstallationdate\"]) {\n          inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(this.state.selectedRecord[\"dinstallationdate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dexpirydate\"]) {\n          inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(this.state.selectedRecord[\"dexpirydate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dmanufacdate\"]) {\n          inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(this.state.selectedRecord[\"dmanufacdate\"], false);\n        }\n\n        if (this.state.selectedRecord[\"dservicedate\"]) {\n          inputData[\"instrument\"][\"dservicedate\"] = formatInputDate(this.state.selectedRecord[\"dservicedate\"], false);\n        }\n\n        inputData[\"instrument\"][\"nusercode\"] = this.props.Login.userInfo.nusercode;\n        inputData[\"instrument\"][\"sinstrumentname\"] = this.state.selectedRecord.ninstrumentnamecode && this.state.selectedRecord.ninstrumentnamecode.label;\n\n        if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\n          if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\n            this.state.selectedRecord[\"nusercode\"].map(item => {\n              return instSection.push({\n                nusercode: item.value\n              });\n            });\n            inputData[\"instrumentsection\"] = instSection;\n          }\n        }\n\n        let clearSelectedRecordField = [{\n          \"idsName\": \"IDS_INSTRUMENTID\",\n          \"dataField\": \"sinstrumentid\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_SERIALNO\",\n          \"dataField\": \"sserialno\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_PONO\",\n          \"dataField\": \"spono\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_CALIBRATIONINTERVAL\",\n          \"dataField\": \"nnextcalibration\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_MODELNO\",\n          \"dataField\": \"smodelnumber\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_REMARKS\",\n          \"dataField\": \"sremarks\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_MOVEMENT\",\n          \"dataField\": \"smovement\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_ASSOCIATEDDOCUMENT\",\n          \"dataField\": \"sassociateddocument\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_PURCHASECOST\",\n          \"dataField\": \"npurchasecost\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_DESCRIPTION\",\n          \"dataField\": \"sdescription\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_SOFTWAREINFORMATION\",\n          \"dataField\": \"ssoftwareinformation\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_PERFORMNACECAPABILITIES\",\n          \"dataField\": \"sperformancecapabilities\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_ACCEPTANCECRETERIA\",\n          \"dataField\": \"sacceptancecriteria\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_DEFAULT\",\n          \"dataField\": \"ndefaultstatus\",\n          \"width\": \"100px\",\n          \"isClearField\": true,\n          \"preSetValue\": 4\n        }];\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Instrument\",\n          inputData: inputData,\n          filtercombochange: this.props.Login.masterData.searchedData !== undefined ? this.state.selectedRecord['ninstrumentcatcode'].value === this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode ? false : true : false,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          postParam,\n          searchRef: this.searchRef,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\", \"\", \"\", clearSelectedRecordField);\n        }\n      } else if (this.props.Login.screenName === \"IDS_SECTION\") {\n        let postParam = {\n          inputListName: \"Instrument\",\n          selectedObject: \"selectedInstrument\",\n          primaryKeyField: \"ninstrumentcode\",\n          isSingleGet: true\n        };\n        inputData[\"instrumentsection\"] = {\n          nsitecode: this.props.Login.userInfo.nmastersitecode\n        };\n        inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state.selectedRecord[\"nsectioncode\"] ? this.state.selectedRecord[\"nsectioncode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\"nusercode\"] ? this.state.selectedRecord[\"nusercode\"].value : transactionStatus.NA;\n        inputData[\"instrumentsection\"][\"ninstrumentcode\"] = this.props.Login.instItem[\"ninstrumentcode\"];\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Section\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef,\n          postParam: postParam,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openChildModal: true\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n        let postParam = undefined;\n\n        if (this.props.Login.operation === \"update\") {\n          inputData[\"instrumentvalidation\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentvalidationcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\n            nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\n            nvalidationstatus: this.state.selectedRecord.ntranscode.value,\n            dvalidationdate: formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false),\n            sremark: this.state.selectedRecord.sremark !== null ? this.state.selectedRecord.sremark : \"\",\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : \"-1\"\n          };\n          postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrument\",\n            primaryKeyField: \"ninstrumentcode\",\n            isSingleGet: true\n          };\n        } else {\n          inputData[\"instrumentvalidation\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\n            nvalidationstatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n            ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"] ? this.state.selectedRecord[\"ntzvalidationdate\"].value : \"-1\",\n            sremark: this.state.selectedRecord.sremark !== null ? this.state.selectedRecord.sremark : \"\"\n          };\n        }\n\n        if (this.state.selectedRecord[\"dvalidationdate\"]) {\n          inputData[\"instrumentvalidation\"][\"dvalidationdate\"] = formatInputDate(this.state.selectedRecord[\"dvalidationdate\"], false);\n        }\n\n        let clearSelectedRecordField = [{\n          \"idsName\": \"IDS_REMARKS\",\n          \"dataField\": \"sremark\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }];\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentValidation\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef,\n          postParam: postParam ? postParam : undefined,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openChildModal: true\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\", \"\", \"\", clearSelectedRecordField);\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\n        const inputParam = this.onSaveInstrumentFile(saveType, formRef);\n\n        if (this.props.Login.operation === \"update\") {\n          let postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrumentValidation\",\n            primaryKeyField: \"ninstrumentvalidationcode\"\n          };\n          inputParam[\"postParam\"] = postParam;\n        }\n\n        let clearSelectedRecordField = [{\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_DESCRIPTION\",\n          \"dataField\": \"sfiledesc\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_DESCRIPTION\",\n          \"dataField\": \"slinkdescription\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }];\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType // openChildModal: true,\n\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\", \"\", \"\", clearSelectedRecordField);\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        let postParam = undefined;\n        if (this.props.Login.operation === \"create\") inputData[\"instrumentcalibration\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          nopenusercode: this.props.Login.userInfo.nusercode,\n          ncloseusercode: this.props.Login.userInfo.nusercode,\n          ncalibrationstatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n          dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n          dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : \"-1\",\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n          sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\",\n          npreregno: transactionStatus.NA\n        };else {\n          inputData[\"instrumentcalibration\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.state.selectedRecord.ntranscode.value,\n            dlastcalibrationdate: formatInputDate(this.state.selectedRecord[\"dlastcalibrationdate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzlastcalibrationdate: this.state.selectedRecord[\"ntzlastcalibrationdate\"] ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value : \"-1\",\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n            sarno: this.state.selectedRecord[\"sarno\"] ? this.state.selectedRecord[\"sarno\"] : \"\"\n          };\n          postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrument\",\n            primaryKeyField: \"ninstrumentcode\",\n            isSingleGet: true\n          };\n        }\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentCalibration\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef,\n          postParam: postParam ? postParam : undefined\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType // openChildModal: true,\n\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\n        const inputParam = this.onSaveInstrumentCalibrationFile(saveType, formRef);\n\n        if (this.props.Login.operation === \"update\") {\n          let postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrumentCalibration\",\n            primaryKeyField: \"ninstrumentcalibrationcode\"\n          };\n          inputParam[\"postParam\"] = postParam;\n        }\n\n        let clearSelectedRecordField = [{\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_DESCRIPTION\",\n          \"dataField\": \"sfiledesc\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_DESCRIPTION\",\n          \"dataField\": \"slinkdescription\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }];\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              popUp: undefined // openChildModal: true,\n\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\", \"\", \"\", clearSelectedRecordField);\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n        let postParam = undefined;\n        if (this.props.Login.operation === \"create\") inputData[\"instrumentmaintenance\"] = {\n          ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          nopenusercode: this.props.Login.userInfo.nusercode,\n          ncloseusercode: this.props.Login.userInfo.nusercode,\n          nmaintenancestatus: this.state.selectedRecord.ntranscode.item.ntranscode,\n          dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"], false),\n          dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"] ? this.state.selectedRecord[\"ntzopendate\"].value : \"-1\",\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"] ? this.state.selectedRecord[\"ntzclosedate\"].value : \"-1\",\n          ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : \"-1\",\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\"\n        };else {\n          inputData[\"instrumentmaintenance\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            nmaintenancestatus: this.state.selectedRecord.ntranscode.value,\n            dlastmaintenancedate: formatInputDate(this.state.selectedRecord[\"dlastmaintenancedate\"] && this.state.selectedRecord[\"dlastmaintenancedate\"], false),\n            dduedate: formatInputDate(this.state.selectedRecord[\"dduedate\"], false),\n            ntzduedate: this.state.selectedRecord[\"ntzduedate\"] ? this.state.selectedRecord[\"ntzduedate\"].value : \"-1\",\n            ntzlastmaintenancedate: this.state.selectedRecord[\"ntzlastmaintenancedate\"] ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value : \"-1\"\n          };\n          postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrument\",\n            primaryKeyField: \"ninstrumentcode\",\n            isSingleGet: true\n          };\n        }\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"InstrumentMaintenance\",\n          inputData: inputData,\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          searchRef: this.searchRef,\n          postParam: postParam ? postParam : undefined\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType // openChildModal: true,\n\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n        }\n      } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n        const inputParam = this.onSaveInstrumentMaintenanceFile(saveType, formRef);\n\n        if (this.props.Login.operation === \"update\") {\n          let postParam = {\n            inputListName: \"Instrument\",\n            selectedObject: \"selectedInstrumentMaintenance\",\n            primaryKeyField: \"ninstrumentmaintenancecode\"\n          };\n          inputParam[\"postParam\"] = postParam;\n        }\n\n        let clearSelectedRecordField = [{\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_DESCRIPTION\",\n          \"dataField\": \"sfiledesc\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }, {\n          \"idsName\": \"IDS_DESCRIPTION\",\n          \"dataField\": \"slinkdescription\",\n          \"width\": \"200px\",\n          \"controlType\": \"textbox\",\n          \"isClearField\": true\n        }];\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              popUp: undefined // openChildModal: true,\n\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\", \"\", \"\", clearSelectedRecordField);\n        }\n      }\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.validateEsign = () => {\n      let modalName;\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      }; // if (this.props.Login.Action === \"OPENDATE\") {\n\n      if (this.props.Login.screenName === \"IDS_INSTRUMENT\" || this.props.Login.screenName === \"Instrument\") {\n        modalName = \"openModal\";\n      } else {\n        if (this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCEOPENDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCECLOSEDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONOPENDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONCLOSEDATE\") {\n          modalName = \"openModal\";\n        } else {\n          modalName = \"openChildModal\";\n        }\n      }\n\n      this.props.validateEsignCredential(inputParam, modalName); //  } else if (this.props.Login.Action === \"Edit\") {\n      //  this.props.validateEsignCredential(inputParam, \"openModal\");\n      //  } else if (this.props.Login.Action === \"Delete\") {\n      //  this.props.validateEsignCredential(inputParam, \"openModal\");\n      // } else if (this.props.Login.Action === \"Add\") {\n      //   this.props.validateEsignCredential(inputParam, \"openModal\");\n      // } else if (this.props.Login.Action === \"Closedate\") {\n      //   this.props.validateEsignCredential(inputParam, \"modalShow\");\n      // } else {\n      //  this.props.validateEsignCredential(inputParam, \"openModal\");\n      //  }\n    };\n\n    this.defaultRecord = defaultParam => {\n      const methodUrl = defaultParam.methodUrl;\n      let dataItem = defaultParam.selectedRecord;\n      dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\n      let dataState = undefined;\n\n      if (defaultParam.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          [methodUrl]: dataItem,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"instrument\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl,\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, defaultParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Test\",\n            operation: defaultParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.onSwitchChange = (item, key, methodUrl) => {\n      let dataItem = item;\n      dataItem[\"ndefaultstatus\"] = 3;\n      const inputParam = {\n        inputData: {\n          [key]: dataItem,\n          userinfo: this.props.userInfo\n        },\n        classUrl: \"testmaster\",\n        operation: \"setDefault\",\n        methodUrl: methodUrl\n      };\n      this.props.crudMaster(inputParam, this.props.masterData, \"openChildModal\", {});\n    };\n\n    this.deleteTabFileRecord = deleteParam => {\n      let inputData = [];\n      const screenName = deleteParam.screenName;\n\n      if (screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\n        if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n          const dataState = this.state.sectionDataState;\n          inputData[\"InstrumentFile\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n            ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\n            sfilename: deleteParam.selectedRecord.sfilename,\n            sfiledesc: deleteParam.selectedRecord.sfiledesc,\n            nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\n            nlinkcode: deleteParam.selectedRecord.nlinkcode,\n            ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\n            slinkname: deleteParam.selectedRecord.slinkname,\n            screateddate: deleteParam.selectedRecord.screateddate,\n            ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n            sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\n          };\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          const inputParam = {\n            methodUrl: \"InstrumentValidationFile\",\n            classUrl: this.props.Login.inputParam.classUrl,\n            inputData: inputData,\n            operation: deleteParam.operation,\n            dataState: dataState,\n            selectedRecord: { ...this.state.selectedRecord\n            },\n            postParam: {\n              inputListName: \"Instrument\",\n              selectedObject: \"selectedInstrument\",\n              primaryKeyField: \"ninstrumentcode\",\n              fetchUrl: \"instrument/getActiveInstrumentById\",\n              fecthInputObject: {\n                userinfo: this.props.Login.userInfo\n              }\n            }\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                screenName: screenName,\n                operation: deleteParam.operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DISPOSEDINSTRUMENT\"\n          }));\n        }\n      } else if (screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\n        if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n          const dataState = this.state.sectionDataState;\n          inputData[\"InstrumentFile\"] = {\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n            ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            sfilename: deleteParam.selectedRecord.sfilename,\n            sfiledesc: deleteParam.selectedRecord.sfiledesc,\n            nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\n            nlinkcode: deleteParam.selectedRecord.nlinkcode,\n            ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\n            slinkname: deleteParam.selectedRecord.slinkname,\n            screateddate: deleteParam.selectedRecord.screateddate,\n            ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n            sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\n          };\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          const inputParam = {\n            methodUrl: \"InstrumentCalibrationFile\",\n            classUrl: this.props.Login.inputParam.classUrl,\n            inputData: inputData,\n            operation: deleteParam.operation,\n            dataState: dataState,\n            selectedRecord: { ...this.state.selectedRecord\n            },\n            postParam: {\n              inputListName: \"Instrument\",\n              selectedObject: \"selectedInstrument\",\n              primaryKeyField: \"ninstrumentcode\",\n              fetchUrl: \"instrument/getActiveInstrumentById\",\n              fecthInputObject: {\n                userinfo: this.props.Login.userInfo\n              }\n            }\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                screenName: screenName,\n                operation: deleteParam.operation,\n                popUp: undefined\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DISPOSEDINSTRUMENT\"\n          }));\n        }\n      } else if (screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n        if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n          const dataState = this.state.sectionDataState;\n          inputData[\"InstrumentFile\"] = {\n            ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\n            ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode,\n            ninstrumentcode: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n            sfilename: deleteParam.selectedRecord.sfilename,\n            sfiledesc: deleteParam.selectedRecord.sfiledesc,\n            nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\n            nlinkcode: deleteParam.selectedRecord.nlinkcode,\n            ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\n            slinkname: deleteParam.selectedRecord.slinkname,\n            screateddate: deleteParam.selectedRecord.screateddate,\n            ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n            sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\n          };\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          const inputParam = {\n            methodUrl: \"InstrumentMaintenanceFile\",\n            classUrl: this.props.Login.inputParam.classUrl,\n            inputData: inputData,\n            operation: deleteParam.operation,\n            dataState: dataState,\n            selectedRecord: { ...this.state.selectedRecord\n            },\n            postParam: {\n              inputListName: \"Instrument\",\n              selectedObject: \"selectedInstrument\",\n              primaryKeyField: \"ninstrumentcode\",\n              fetchUrl: \"instrument/getActiveInstrumentById\",\n              fecthInputObject: {\n                userinfo: this.props.Login.userInfo\n              }\n            }\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                screenName: screenName,\n                operation: deleteParam.operation,\n                popUp: undefined\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DISPOSEDINSTRUMENT\"\n          }));\n        }\n      }\n    };\n\n    this.DeleteInstrument = (operation, ncontrolCode) => {\n      let inputData = [];\n\n      if (operation.screenName === \"IDS_SECTION\") {\n        if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n          const dataState = this.state.sectionDataState;\n          inputData[\"instrumentsection\"] = {\n            nsitecode: this.props.Login.userInfo.nmastersitecode\n          };\n          inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] = operation.selectedRecord.ninstrumentsectioncode;\n          inputData[\"instrumentsection\"][\"ninstrumentcode\"] = operation.selectedRecord.ninstrumentcode;\n          inputData[\"instrumentsection\"][\"ndefaultstatus\"] = operation.selectedRecord.ndefaultstatus;\n          inputData[\"instrumentsection\"][\"ssectionname\"] = operation.selectedRecord.ssectionname;\n          inputData[\"instrumentsection\"][\"susername\"] = operation.selectedRecord.susername;\n          inputData[\"instrumentsection\"][\"nusercode\"] = operation.selectedRecord.nusercode;\n          inputData[\"instrumentsection\"][\"nsectioncode\"] = operation.selectedRecord.nsectioncode;\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          const inputParam = {\n            methodUrl: \"Section\",\n            classUrl: this.props.Login.inputParam.classUrl,\n            inputData: inputData,\n            operation: \"delete\",\n            dataState: dataState,\n            selectedRecord: { ...this.state.selectedRecord\n            },\n            postParam: {\n              inputListName: \"Instrument\",\n              selectedObject: \"selectedInstrument\",\n              primaryKeyField: \"ninstrumentcode\",\n              fetchUrl: \"instrument/getActiveInstrumentById\",\n              fecthInputObject: {\n                userinfo: this.props.Login.userInfo\n              }\n            }\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, operation.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                screenName: operation.screenName,\n                operation: operation.operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DISPOSEDINSTRUMENT\"\n          }));\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n        if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n          const dataState = this.state.sectionDataState;\n          inputData[\"InstrumentValidation\"] = {\n            ninstrumentvalidationcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode\n          };\n          inputData[\"InstrumentValidation\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          const inputParam = {\n            methodUrl: \"InstrumentValidation\",\n            classUrl: this.props.Login.inputParam.classUrl,\n            inputData: inputData,\n            operation: \"delete\",\n            dataState: dataState,\n            selectedRecord: { ...this.state.selectedRecord\n            },\n            postParam: {\n              inputListName: \"Instrument\",\n              selectedObject: \"selectedInstrument\",\n              primaryKeyField: \"ninstrumentcode\",\n              fetchUrl: \"instrument/getActiveInstrumentById\",\n              fecthInputObject: {\n                userinfo: this.props.Login.userInfo\n              }\n            }\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                screenName: operation.screenName,\n                operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DISPOSEDINSTRUMENT\"\n          }));\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n        if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n          inputData[\"InstrumentCalibration\"] = {\n            ninstrumentcalibrationcode: this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\n            ncalibrationstatus: this.props.Login.masterData.selectedInstrumentCalibration.ncalibrationstatus\n          };\n          inputData[\"InstrumentCalibration\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n          inputData[\"nFlag\"] = operation.nFlag;\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          const inputParam = {\n            methodUrl: \"InstrumentCalibration\",\n            classUrl: this.props.Login.inputParam.classUrl,\n            inputData: inputData,\n            operation: \"delete\",\n            selectedRecord: { ...this.state.selectedRecord\n            },\n            postParam: {\n              inputListName: \"Instrument\",\n              selectedObject: \"selectedInstrument\",\n              primaryKeyField: \"ninstrumentcode\",\n              fetchUrl: \"instrument/getActiveInstrumentById\",\n              fecthInputObject: {\n                userinfo: this.props.Login.userInfo\n              }\n            }\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                screenName: operation.screenName,\n                operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DISPOSEDINSTRUMENT\"\n          }));\n        }\n      } else if (operation.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n        if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n          const dataState = this.state.sectionDataState;\n          inputData[\"InstrumentMaintenance\"] = {\n            ninstrumentmaintenancecode: this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode\n          };\n          inputData[\"InstrumentMaintenance\"][\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n          inputData[\"userinfo\"] = this.props.Login.userInfo;\n          const inputParam = {\n            methodUrl: \"InstrumentMaintenance\",\n            classUrl: this.props.Login.inputParam.classUrl,\n            inputData: inputData,\n            operation: \"delete\",\n            dataState: dataState,\n            selectedRecord: { ...this.state.selectedRecord\n            },\n            postParam: {\n              inputListName: \"Instrument\",\n              selectedObject: \"selectedInstrument\",\n              primaryKeyField: \"ninstrumentcode\",\n              fetchUrl: \"instrument/getActiveInstrumentById\",\n              fecthInputObject: {\n                userinfo: this.props.Login.userInfo\n              }\n            }\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                openChildModal: true,\n                screenName: operation.screenName,\n                operation: operation.operation,\n                popUp: 'IDS_INSTRUMENTMAINTENANCE'\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_DISPOSEDINSTRUMENT\"\n          }));\n        }\n      } else {\n        inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n        const postParam = {\n          inputListName: \"Instrument\",\n          selectedObject: \"selectedInstrument\",\n          primaryKeyField: \"ninstrumentcode\",\n          primaryKeyValue: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\n          fetchUrl: \"instrument/getInstrument\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          methodUrl: \"Instrument\",\n          postParam,\n          classUrl: this.props.Login.inputParam.classUrl,\n          inputData: inputData,\n          operation: operation.operation,\n          selectedRecord: { ...this.state.selectedRecord\n          }\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"Instrument\",\n              operation: operation.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n        let selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n        this.setState({\n          selectedRecord,\n          actionType: \"delete\"\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_DISPOSEDINSTRUMENT\"\n        }));\n      }\n    };\n\n    this.onSaveInstrumentFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, instrumentFile);\n            const splittedFileName = file.name.split(\".\");\n            const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" && selectedRecord.ssystemfilename !== undefined ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n            tempData[\"sfilename\"] = Lims_JSON_stringify(file.name, false);\n            tempData[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\"), false);\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n            tempData[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n            tempData[\"nattachmenttypecode\"] = 1;\n            tempData[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n            tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            instrumentFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          instrumentFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\n          instrumentFile[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\"), false);\n          instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n          instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n          instrumentFile[\"nattachmenttypecode\"] = 1;\n          instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n          instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n          instrumentFileArray.push(instrumentFile);\n        }\n      } else {\n        // const tempData = Object.assign({}, instrumentFile);\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\n        instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\n        instrumentFile[\"ssystemfilename\"] = \"\";\n        instrumentFile[\"nattachmenttypecode\"] = 2; // instrumentFileArray.push(tempData);\n\n        instrumentFile[\"sfilename\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkfilename ? selectedRecord.slinkfilename.trim() : \"\"), false);\n        instrumentFile[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkdescription ? selectedRecord.slinkdescription : \"\"), false);\n        instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1; // instrumentFile[\"ssystemfilename\"] = \"\";\n\n        instrumentFile[\"nfilesize\"] = 0;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\n        instrumentFile[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n            //ALPD-1628(while saving the file and link,audit trail is not captured the respective language)\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentFile\",\n        searchRef: this.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      return inputParam;\n    };\n\n    this.onSaveInstrumentCalibrationFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, instrumentFile);\n            const splittedFileName = file.name.split(\".\");\n            const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" && selectedRecord.ssystemfilename !== undefined ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n            tempData[\"sfilename\"] = Lims_JSON_stringify(file.name, false);\n            tempData[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\"), false);\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n            tempData[\"nattachmenttypecode\"] = 1;\n            tempData[\"ninstrumentlogtypecode\"] = 2;\n            tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n            tempData[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            instrumentFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          instrumentFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\n          instrumentFile[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\"), false);\n          instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n          instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n          instrumentFile[\"nattachmenttypecode\"] = 1;\n          instrumentFile[\"ninstrumentlogtypecode\"] = 2;\n          instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n          instrumentFileArray.push(instrumentFile);\n        }\n      } else {\n        // const tempData = Object.assign({}, instrumentFile);\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n        instrumentFile[\"ninstrumentlogtypecode\"] = 2;\n        instrumentFile[\"ssystemfilename\"] = \"\";\n        instrumentFile[\"nattachmenttypecode\"] = 2; // instrumentFileArray.push(tempData);\n\n        instrumentFile[\"sfilename\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkfilename.trim()), false);\n        instrumentFile[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkdescription ? selectedRecord.slinkdescription : \"\"), false);\n        instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1; // instrumentFile[\"ssystemfilename\"] = \"\";\n\n        instrumentFile[\"nfilesize\"] = 0;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\n        instrumentFile[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        // inputData: { userinfo: this.props.Login.userInfo },\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n            //ALPD-1628(while saving the file and link,audit trail is not captured the respective language)\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentCalibrationFile\",\n        searchRef: this.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      return inputParam;\n    };\n\n    this.onSaveInstrumentMaintenanceFile = (saveType, formRef) => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let instrumentFileArray = [];\n      let instrumentFile = {\n        ninstrumentfilecode: selectedRecord.ninstrumentfilecode ? selectedRecord.ninstrumentfilecode : 0,\n        nstatus: transactionStatus.ACTIVE\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, instrumentFile);\n            const splittedFileName = file.name.split(\".\");\n            const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split(\".\") : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split(\".\")[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ninstrumentfilecode && selectedRecord.ninstrumentfilecode > 0 && selectedRecord.ssystemfilename !== \"\" && selectedRecord.ssystemfilename !== undefined ? ssystemfilename[0] + \".\" + filesystemfileext : create_UUID() + \".\" + fileExtension : \"\";\n            tempData[\"sfilename\"] = Lims_JSON_stringify(file.name, false);\n            tempData[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\"), false);\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n            tempData[\"nattachmenttypecode\"] = 1;\n            tempData[\"ninstrumentlogtypecode\"] = 3;\n            tempData[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n            tempData[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            instrumentFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          instrumentFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename, false);\n          instrumentFile[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\"), false);\n          instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\n          instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n          instrumentFile[\"nattachmenttypecode\"] = 1;\n          instrumentFile[\"ninstrumentlogtypecode\"] = 3;\n          instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n          instrumentFileArray.push(instrumentFile);\n        }\n      } else {\n        // const tempData = Object.assign({}, instrumentFile);\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n        instrumentFile[\"ninstrumentlogtypecode\"] = 3;\n        instrumentFile[\"ssystemfilename\"] = \"\";\n        instrumentFile[\"nattachmenttypecode\"] = 2; // instrumentFileArray.push(tempData);\n\n        instrumentFile[\"sfilename\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkfilename.trim()), false);\n        instrumentFile[\"sfiledesc\"] = Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkdescription ? selectedRecord.slinkdescription : \"\"), false);\n        instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1; // instrumentFile[\"ssystemfilename\"] = \"\";\n\n        instrumentFile[\"nfilesize\"] = 0;\n        instrumentFile[\"ninstrumentlogcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\n        instrumentFile[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\n        instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\n        instrumentFileArray.push(instrumentFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\n      const inputParam = {\n        // inputData: { userinfo: this.props.Login.userInfo },\n        inputData: {\n          userinfo: { ...this.props.Login.userInfo,\n            sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\n            smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\n            //ALPD-1628(while saving the file and link,audit trail is not captured the respective language)\n            slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\n          }\n        },\n        formData: formData,\n        isFileupload: true,\n        operation: this.props.Login.operation,\n        classUrl: \"instrument\",\n        saveType,\n        formRef,\n        methodUrl: \"InstrumentMaintenanceFile\",\n        searchRef: this.searchRef,\n        selectedRecord: { ...this.state.selectedRecord\n        }\n      };\n      return inputParam;\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropTestFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\n        sectionDataState: event.dataState\n      });\n    };\n\n    this.viewInstrumentFile = filedata => {\n      const inputParam = {\n        inputData: {\n          instrumentfile: filedata,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"instrument\",\n        operation: \"view\",\n        methodUrl: \"AttachedInstrumentFile\",\n        screenName: \"IDS_INSTRUMENTVALIDATIONFILE\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      const deleteSecId = this.state.controlMap.has(\"DeleteSection\") && this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\n      const defaultSecId = this.state.controlMap.has(\"DefaultSection\") && this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\n      if (this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode) tabMap.set(\"IDS_SECTION\", /*#__PURE__*/React.createElement(InstrumentSectionTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        dataState: this.props.Login.dataState,\n        masterData: this.props.Login.masterData[\"selectedSection\"] || [],\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        deleteRecord: this.DeleteInstrument,\n        deleteSecId: deleteSecId,\n        defaultSecId: defaultSecId,\n        defaultRecord: this.defaultRecord,\n        getAvailableInstData: this.props.getAvailableInstData,\n        InstrumentSection: this.props.Login.masterData.selectedSection || [],\n        screenName: \"IDS_SECTION\",\n        selectedRecord: this.state.selectedRecord,\n        settings: this.props.Login.settings,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3581,\n          columnNumber: 7\n        }\n      }));\n      if (this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode) tabMap.set(\"IDS_INSTRUMENTVALIDATION\", /*#__PURE__*/React.createElement(InstrumentValidationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.ValidationFileData,\n        InstrumentValidation: this.props.Login.masterData.InstrumentValidation,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditValidation: this.props.getDataForAddEditValidation,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        getDataForEdit: this.props.getDataForEdit,\n        addfilecllick: this.addInstrumentFile,\n        viewInstrumentFile: this.viewInstrumentFile,\n        screenName: \"IDS_INSTRUMENTVALIDATION\",\n        formatMessage: this.props.intl.formatMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3603,\n          columnNumber: 7\n        }\n      }));\n      if (this.props.Login.masterData.selectedInstrument.ncalibrationreq === transactionStatus.YES && this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode) tabMap.set(\"IDS_INSTRUMENTCALIBRATION\", /*#__PURE__*/React.createElement(InstrumentCalibrationTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.CalibrationFileData,\n        InstrumentCalibration: this.props.Login.masterData.InstrumentCalibration,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditCalibration: this.props.getDataForAddEditCalibration,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        viewInstrumentFile: this.viewInstrumentFile,\n        addInstrumentFile: this.props.addInstrumentFile,\n        addfilecllick: this.addInstrumentCalibrationFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        addOpenDate: this.props.addOpenDate,\n        OpenDate: this.props.OpenDate,\n        CloseDate: this.props.CloseDate,\n        screenName: \"IDS_INSTRUMENTCALIBRATION\",\n        formatMessage: this.props.intl.formatMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3631,\n          columnNumber: 7\n        }\n      }));\n      if (this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode) tabMap.set(\"IDS_INSTRUMENTMAINTENANCE\", /*#__PURE__*/React.createElement(InstrumentMaintenanceTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstrument: this.props.Login.masterData.selectedInstrument,\n        FileData: this.props.Login.masterData.MaintenanceFileData,\n        InstrumentMaintenance: this.props.Login.masterData.InstrumentMaintenance,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getDataForAddEditMaintenance: this.props.getDataForAddEditMaintenance,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        viewInstrumentFile: this.viewInstrumentFile,\n        deleteRecord: this.DeleteInstrument,\n        deleteTabFileRecord: this.deleteTabFileRecord,\n        getTabDetails: this.props.getTabDetails,\n        addInstrumentFile: this.props.addInstrumentFile,\n        addfilecllick: this.addInstrumentMaintenanceFile,\n        deleteAction: this.props.deleteAction,\n        ConfirmDelete: this.ConfirmDelete,\n        addOpenDate: this.props.addOpenDate,\n        OpenDate: this.props.OpenDate,\n        CloseDate: this.props.CloseDate,\n        screenName: \"IDS_INSTRUMENTMAINTENANCE\",\n        formatMessage: this.props.intl.formatMessage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3662,\n          columnNumber: 7\n        }\n      }));\n      return tabMap;\n    };\n\n    this.ConfirmDelete = (operation, deleteId) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteInstrument(operation, deleteId, operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"));\n    };\n\n    this.addInstrumentFile = (ncontrolCode, screenName) => {\n      if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n        let inputData = [];\n        let openChildModal = this.props.Login.openChildModal;\n        let operation = \"create\";\n        screenName = this.props.Login.screenName;\n        screenName = \"IDS_INSTRUMENTVALIDATIONFILE\";\n        openChildModal = true;\n        const selectedRecord = this.state.selectedRecord;\n        const updateInfo = {\n          userInfo: this.props.Login.userInfo,\n          operation,\n          selectedRecord,\n          ncontrolCode,\n          screenName\n        };\n        this.props.addInstrumentFile(updateInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_DISPOSEDINSTRUMENT\"\n        }));\n      }\n    };\n\n    this.addInstrumentCalibrationFile = (ncontrolCode, screenName) => {\n      if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n        let inputData = [];\n        let openModal = this.props.Login.openModal;\n        let operation = \"create\";\n        screenName = this.props.Login.screenName;\n        screenName = \"IDS_INSTRUMENTCALIBRATIONFILE\";\n        openModal = true;\n        const selectedRecord = this.state.selectedRecord;\n        const updateInfo = {\n          userInfo: this.props.Login.userInfo,\n          operation,\n          selectedRecord,\n          ncontrolCode,\n          screenName\n        };\n        this.props.addInstrumentFile(updateInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_DISPOSEDINSTRUMENT\"\n        }));\n      }\n    };\n\n    this.addInstrumentMaintenanceFile = (ncontrolCode, screenName) => {\n      if (this.props.Login.masterData.selectedInstrument.ninstrumentstatus !== transactionStatus.Disposed) {\n        let inputData = [];\n        let openModal = this.props.Login.openModal;\n        let operation = \"create\";\n        screenName = this.props.Login.screenName;\n        screenName = \"IDS_INSTRUMENTMAINTENANCEFILE\";\n        openModal = true;\n        const selectedRecord = this.state.selectedRecord;\n        const updateInfo = {\n          userInfo: this.props.Login.userInfo,\n          operation,\n          selectedRecord,\n          ncontrolCode,\n          screenName\n        };\n        this.props.addInstrumentFile(updateInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_DISPOSEDINSTRUMENT\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      //ALPD-4803 done by Dhanushya RI,To check searchref key is present or not\n      if (this.searchRef && this.searchRef.current) {\n        this.searchRef.current.value = \"\";\n      }\n\n      if (this.state.nfilterInstrumentCategory && this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          //janakumar Ate234 -> ALPD-5197 Instrument-records are disappeared when refresh the screen\n          inputData: {\n            ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.props.Login.masterData.SelectedInsCat\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\",\n          masterData: { ...this.props.Login.masterData,\n            defaultInstrumentCatValue: this.props.Login.masterData.defaultInstrumentCatValue,\n            searchedData: undefined\n          }\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName, caseNo) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      const masterData = this.props.Login.masterData;\n\n      if (comboData !== null) {\n        switch (caseNo) {\n          case 1:\n            if (fieldName === \"ninstrumentcatcode\") {\n              selectedRecord[fieldName] = comboData;\n              this.props.getCalibrationRequired(this.state.selectedRecord.ninstrumentcatcode.value, this.props.Login.userInfo, selectedRecord, this.props.Login.screenName);\n            } else if (fieldName === \"nregionalsitecode\") {\n              selectedRecord[fieldName] = comboData;\n              this.props.getInstrumentSiteSection(comboData.item.nsitecode, this.props.Login.userInfo, selectedRecord);\n            } else {\n              selectedRecord[fieldName] = comboData;\n              this.setState({\n                selectedRecord\n              });\n            }\n\n            break;\n\n          case 2:\n            selectedRecord[fieldName] = comboData;\n            selectedRecord[\"nsectionusercode\"] = comboData.value;\n            this.props.getSectionUsers(this.state.selectedRecord.nsectionusercode, this.props.Login.userInfo, selectedRecord, // ALPD-3514\n            masterData, this.props.Login.screenName);\n            break;\n\n          case 3:\n            let nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n            nfilterInstrumentCategory = comboData;\n            this.searchRef.current.value = \"\";\n            this.setState({\n              nfilterInstrumentCategory\n            });\n            break;\n\n          default:\n            break;\n        }\n      } else {\n        //ALPD-5145 Instrument screen-->while edit the page in supplier field unable to clear the data\n        if (fieldName === \"nsectioncode\" && selectedRecord[\"nsectioncode\"]) {\n          delete selectedRecord[\"nsectioncode\"];\n          delete selectedRecord[\"nusercode\"];\n        } else if (fieldName === \"ninstrumentlocationcode\" && selectedRecord[\"ninstrumentlocationcode\"]) {\n          delete selectedRecord[\"ninstrumentlocationcode\"];\n        } else if (fieldName === \"nsuppliercode\" && selectedRecord[\"nsuppliercode\"]) {\n          delete selectedRecord[\"nsuppliercode\"];\n        } else if (fieldName === \"nmanufcode\" && selectedRecord[\"nmanufcode\"]) {\n          delete selectedRecord[\"nmanufcode\"];\n        }\n\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if ((this.props.Login.operation.operation ? this.props.Login.operation.operation : this.props.Login.operation) === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n\n          if (this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONOPENDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCEOPENDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONCLOSEDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCECLOSEDATE\") {\n            modalShow = true;\n            openModal = false;\n            openChildModal = false;\n          }\n        }\n\n        selectedRecord['esignpassword'] = \"\";\n        selectedRecord['esigncomments'] = \"\";\n        selectedRecord['esignreason'] = \"\";\n      } else {\n        openModal = false;\n        openChildModal = false;\n        modalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openChildModal,\n          modalShow,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let popUp = this.props.Login.popUp;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        selectedRecord = {};\n        popUp = undefined;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          popUp\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.nfilterInstrumentCategory && this.state.nfilterInstrumentCategory.value) {\n        let inputParam = {\n          inputData: {\n            ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\n            userinfo: this.props.Login.userInfo,\n            nfilterInstrumentCategory: this.state.nfilterInstrumentCategory\n          },\n          masterData: { ...this.props.Login.masterData,\n            defaultInstrumentCatValue: this.state.nfilterInstrumentCategory,\n            searchedData: undefined\n          },\n          classUrl: \"instrument\",\n          methodUrl: \"InsByInstrumentCat\"\n        };\n        this.props.changeInstrumentCategoryFilter(inputParam, this.props.Login.masterData.filterInstrumentCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\"\n        }));\n      }\n    };\n\n    this.getAutoCalibration = (masterData, userInfo, controlCode) => {\n      const url = \"instrument/getInstrumentBySchedulerDetail\";\n      rsapi.post(url, {\n        \"ninstrumentcode\": masterData.selectedInstrument.ninstrumentcode,\n        \"userinfo\": userInfo\n      }).then(response => {\n        if (response.data.InstrumentScheduled) {\n          this.autoCalibrationConfirmationAlert(masterData, userInfo);\n        } else {\n          this.props.updateAutoCalibration(masterData, userInfo, controlCode);\n        }\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n\n        this.setState({\n          loading: false\n        });\n      });\n    };\n\n    this.autoCalibrationConfirmationAlert = (masterData, userInfo) => {\n      this.confirmMessage.confirm(\"autoCalibrationMessage\", this.props.intl.formatMessage({\n        id: \"IDS_ENABLEDISABLEAUTOCALIBRATION\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_AUTOCALIBRATIONCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.props.updateAutoCalibration(masterData, userInfo));\n    };\n\n    const sectionDataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      selectedRecord: {},\n      error: \"\",\n      userRoleControlRights: [],\n      selectedInstrument: undefined,\n      controlMap: new Map(),\n      Instrument: [],\n      sectionDataState,\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sinstrumentname\", \"sinstrumentid\", \"smodelnumber\", \"spono\", \"sserialno\", \"sremarks\", \"sdefaultstatus\", \"smanufacdate\", \"spodate\", \"sreceiveddate\", \"sinstallationdate\", \"sexpirydate\", \"sactivestatus\"];\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  } // static getDerivedStateFromProps(props, state) {\n  //   if (props.Login.masterStatus !== \"\") {\n  //     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n  //       toast.warn(props.Login.masterStatus);\n  //       props.Login.masterStatus = \"\";\n  //     }\n  //   }\n  //   if (props.Login.error !== state.error) {\n  //     toast.error(props.Login.error);\n  //     props.Login.error = \"\";\n  //   }\n  //   if (props.Login.selectedRecord === undefined) {\n  //     return { selectedRecord: {} };\n  //   }\n  //   return null;\n  // }\n\n\n  render() {\n    console.log(\"master main\", this.props.Login);\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTCATEGORY\",\n        dataField: \"ninstrumentcatcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTID\",\n        dataField: \"sinstrumentid\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTNAME\",\n        dataField: \"ninstrumentnamecode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, // {\n      //   mandatory: true,\n      //   idsName: \"IDS_MANUFACTURERDATE\",\n      //   dataField: \"dmanufacdate\",\n      //   mandatoryLabel: \"IDS_CHOOSE\",\n      //   controlType: \"selectbox\",\n      // },\n      {\n        mandatory: true,\n        idsName: \"IDS_SERVICEBY\",\n        dataField: \"nservicecode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTAVAILABLESITE\",\n        dataField: \"nregionalsitecode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, //   {\n      //         mandatory: true,\n      //         idsName: \"IDS_VALIDATIONSTATUS\",\n      //         dataField: \"validation\",\n      //         mandatoryLabel: \"IDS_SELECT\",\n      //         controlType: \"selectbox\",\n      //   },\n      //   {\n      //         mandatory: true,\n      //         idsName: \"IDS_CALIBRATIONSTATUS\",\n      //         dataField: \"calibration\",\n      //         mandatoryLabel: \"IDS_SELECT\",\n      //         controlType: \"selectbox\",\n      //   },\n      //  {\n      //     mandatory: true,\n      //     idsName: \"IDS_MAINTENANCESTATUS\",\n      //     dataField: \"maintenance\",\n      //     mandatoryLabel: \"IDS_SELECT\",\n      //     controlType: \"selectbox\",\n      //   }, \n      {\n        mandatory: true,\n        idsName: \"IDS_INSTRUMENTSTATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_INCHARGE\",\n          dataField: \"nusercode\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.props.Login.operation === \"create\") {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_VALIDATIONSTATUS\",\n          dataField: \"validation\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.props.Login.operation === \"create\" && this.props.Login.CalibrationRequired === transactionStatus.YES) {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_CALIBRATIONSTATUS\",\n          dataField: \"calibration\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        }, {\n          mandatory: true,\n          idsName: \"IDS_CALIBRATIONINTERVAL\",\n          dataField: \"nnextcalibration\",\n          mandatoryLabel: \"IDS_ENTER\",\n          controlType: \"textbox\"\n        }, {\n          mandatory: true,\n          idsName: \"IDS_PERIOD\",\n          dataField: \"nnextcalibrationperiod\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n\n      if (this.props.Login.operation === \"create\") {\n        mandatoryFields.push({\n          mandatory: true,\n          idsName: \"IDS_MAINTENANCESTATUS\",\n          dataField: \"maintenance\",\n          mandatoryLabel: \"IDS_SELECT\",\n          controlType: \"selectbox\"\n        });\n      }\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") mandatoryFields.push({\n      mandatory: true,\n      idsName: \"IDS_SECTION\",\n      dataField: \"nsectioncode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    }, {\n      mandatory: true,\n      idsName: \"IDS_INCHARGE\",\n      dataField: \"nusercode\",\n      mandatoryLabel: \"IDS_SELECT\",\n      controlType: \"selectbox\"\n    });else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\n      if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        }, {\n          \"idsName\": \"IDS_LINKNAME\",\n          \"dataField\": \"nlinkcode\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        });\n      } else {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILE\",\n          \"dataField\": \"sfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        });\n      } // mandatoryFields.push({\n      //   idsName: \"IDS_FILE\",\n      //   dataField: \"sfilename\",\n      //   mandatory: true,\n      //   mandatoryLabel: \"IDS_CHOOSE\",\n      //   controlType: \"file\",\n      // });\n\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_STATUS\",\n        dataField: \"ntranscode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    }\n\n    const addId = this.state.controlMap.has(\"AddInstrument\") && this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditInstrument\") && this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteInstrument\") && this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode; //Added by sonia on 30th Sept 2024 for Jira idL:ALPD-4940  \n\n    const autoCalibrationId = this.state.controlMap.has(\"AutoCalibration\") && this.state.controlMap.get(\"AutoCalibration\").ncontrolcode;\n    const {\n      selectedInstrument\n    } = this.props.Login.masterData;\n    const filterParam = {\n      inputListName: \"Instrument\",\n      selectedObject: \"selectedInstrument\",\n      primaryKeyField: \"ninstrumentcode\",\n      fetchUrl: \"instrument/getInstrument\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    }; // const breadCrumbData = this.state.filterData || [];\n\n    let breadCrumbData = []; //this.props.Login.masterData.defaultInstrumentCatValue || [];\n\n    breadCrumbData = [{\n      \"label\": \"IDS_INSTRUMENTCATEGORY\",\n      //\"value\": this.props.Login.masterData.defaultInstrumentCatValue ? this.props.Login.masterData.defaultInstrumentCatValue.label : \"-\"\n      \"value\": this.props.Login.masterData.defaultInstrumentCatValue ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname : \"-\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2151,\n        columnNumber: 9\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2153,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2154,\n        columnNumber: 15\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2159,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2160,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Instrument\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Instrument,\n      getMasterDetail: Instrument => this.props.getInstrumentDetail(Instrument, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedInstrument,\n      primaryKeyField: \"ninstrumentcode\",\n      mainField: \"sinstrumentname\",\n      firstField: \"sinstrumentid\",\n      secondField: \"sinstrumentcatname\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      searchRef: this.searchRef,\n      addId: addId,\n      hidePaging: false,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"create\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, addId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        IDS_INSTRUMENTCATEGORYFILTER: /*#__PURE__*/React.createElement(InstrumentCategoryFilter, {\n          filterInstrumentCategory: this.state.filterInstrumentCategory || [],\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2208,\n            columnNumber: 23\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2161,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '8' : \"10\"}`,\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2222,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2223,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn \",\n      onClick: this.props.parentFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2224,\n        columnNumber: 21\n      }\n    }, !this.props.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2226,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2227,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2231,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2232,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2233,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2234,\n        columnNumber: 21\n      }\n    }, this.props.Login.masterData.selectedInstrument ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2237,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2243,\n        columnNumber: 29\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2249,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2250,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2251,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2252,\n        columnNumber: 33\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_STATUS\"\n    }), \" :\"), /*#__PURE__*/React.createElement(MediaLabel, {\n      className: `btn btn-outlined ${this.props.Login.masterData.selectedInstrument.ninstrumentstatus === transactionStatus.ACTIVE ? \"outline-success\" : this.props.Login.masterData.selectedInstrument.ninstrumentstatus === transactionStatus.DEACTIVE ? \"outline-danger\" : this.props.Login.masterData.selectedInstrument.ninstrumentstatus === transactionStatus.Offsite ? \"outline-secondary\" : this.props.Login.masterData.selectedInstrument.ninstrumentstatus === transactionStatus.Disposed ? \"outline-danger\" : \"\"} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2255,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedInstrument.sactivestatus && this.props.Login.masterData.selectedInstrument.sactivestatus)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2269,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.selectedInstrument.ncalibrationreq === transactionStatus.YES && this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode ? /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"autocalibrationInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ENABLEDISABLEAUTOCALIBRATION\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(autoCalibrationId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.getAutoCalibration(this.props.Login.masterData, this.props.Login.userInfo, autoCalibrationId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2275,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2282,\n        columnNumber: 33\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstrument\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getInstrumentCombo(\"IDS_INSTRUMENT\", \"update\", \"ninstrumentcode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2285,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2308,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstrument\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete({\n        operation: \"delete\",\n        screenName: \"IDS_INSTRUMENT\"\n      }, deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2310,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2332,\n        columnNumber: 37\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2338,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2339,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2340,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2341,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2342,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTNAME\",\n      message: \"Instrumentname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2343,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2348,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2356,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2357,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2358,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTID\",\n      message: \"Instrument Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2359,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2364,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstrumentid))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2374,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2375,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2376,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MODELNO\",\n      message: \"Modelno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2377,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2382,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.smodelnumber === null || this.props.Login.masterData.selectedInstrument.smodelnumber.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smodelnumber))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2396,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2397,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2398,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SERVICEBY\",\n      message: \"Service By\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2399,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2405,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.nservicecode === -1 ? '-' : this.props.Login.masterData.selectedInstrument.sserviceby))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2416,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2417,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2418,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PONO\",\n      message: \"PO No.\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2419,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2424,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.spono === null || this.props.Login.masterData.selectedInstrument.spono.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.spono))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2435,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2436,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2437,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PODATE\",\n      message: \"PoDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2438,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2443,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.dpodate === null || this.props.Login.masterData.selectedInstrument.dpodate === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.spodate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.spodate) : this.props.Login.spodate.selectedInstrument.spodate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2458,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2459,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2460,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MANUFACTURERDATE\",\n      message: \"ManufactureDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2461,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2466,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.smanufacdate === null || this.props.Login.masterData.selectedInstrument.smanufacdate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smanufacdate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.smanufacdate) : this.props.Login.masterData.selectedInstrument.smanufacdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2483,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2484,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2485,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MANUFACTURENAME\",\n      message: \"Manufacturename\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2486,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2492,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.nmanufcode === -1 ? '-' : this.props.Login.masterData.selectedInstrument.smanufname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2501,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2502,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2503,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTAVAILABLESITE\",\n      message: \"Instrument Location Site\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2504,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2509,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sregionalsitename === null || this.props.Login.masterData.selectedInstrument.sregionalsitename.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sregionalsitename))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2520,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2521,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2522,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTRUMENTLOCATION\",\n      message: \"Instrument Location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2523,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2529,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.ninstrumentlocationcode === -1 ? '-' : this.props.Login.masterData.selectedInstrument.sinstrumentlocationname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2537,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2538,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2539,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_RECEIVEDDATE\",\n      message: \"ReceiveDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2540,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2545,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sreceiveddate === null || this.props.Login.masterData.selectedInstrument.sreceiveddate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sreceiveddate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sreceiveddate) : this.props.Login.sreceiveddate.selectedInstrument.sreceiveddate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2563,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2564,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2565,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTALLATIONDATE\",\n      message: \"InstallationDate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2566,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2571,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sinstallationdate === null || this.props.Login.masterData.selectedInstrument.sinstallationdate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sinstallationdate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sinstallationdate) : this.props.Login.sinstallationdate.selectedInstrument.sinstallationdate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2589,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2590,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2591,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_WARRANTYEXPIRY\",\n      message: \"Warranty Expiry Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2592,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2597,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sexpirydate === null || this.props.Login.masterData.selectedInstrument.sexpirydate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sexpirydate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sexpirydate) : this.props.Login.sexpirydate.selectedInstrument.sexpirydate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2615,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2616,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2617,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SERVICEDATE\",\n      message: \"Service in Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2618,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2623,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sservicedate === null || this.props.Login.masterData.selectedInstrument.sservicedate.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sservicedate ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, this.props.Login.masterData.selectedInstrument.sservicedate) : this.props.Login.sservicedate.selectedInstrument.sservicedate))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2641,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2642,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2643,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SERIALNO\",\n      message: \"Serialno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2644,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2649,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sserialno === null || this.props.Login.masterData.selectedInstrument.sserialno.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sserialno))), this.props.Login.masterData.SelectedInsCat && this.props.Login.masterData.SelectedInsCat.ncalibrationreq !== undefined && this.props.Login.masterData.SelectedInsCat.ncalibrationreq === transactionStatus.YES ? /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2663,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2664,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2665,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_CALIBRATIONINTERVALPERIOD\",\n      message: \"Calibration Interval Period\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2666,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2671,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.nnextcalibration !== null && this.props.Login.masterData.selectedInstrument.nnextcalibration !== 0 ? this.props.Login.masterData.selectedInstrument.nnextcalibration : \"-\", \" \", this.props.Login.masterData.selectedInstrument.snextcalibrationperiod === null || this.props.Login.masterData.selectedInstrument.nnextcalibrationperiod === -1 ? \"\" : this.props.Login.masterData.selectedInstrument.snextcalibrationperiod))) : \"\", /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2704,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2705,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2706,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SUPPLIER\",\n      message: \"Supplier\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2707,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2713,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.nsuppliercode === -1 ? '-' : this.props.Login.masterData.selectedInstrument.ssuppliername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2722,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2723,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2724,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PURCHASECOST\",\n      message: \"Purchase Cost\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2725,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2730,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.npurchasecost === null || this.props.Login.masterData.selectedInstrument.npurchasecost === 0.00 ? \"-\" : this.props.Login.masterData.selectedInstrument.npurchasecost))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2744,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2745,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2746,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SOFTWAREINFORMATION\",\n      message: \"Software Information\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2747,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2752,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.ssoftwareinformation === null || this.props.Login.masterData.selectedInstrument.ssoftwareinformation.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.ssoftwareinformation))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2764,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2765,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2766,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_PERFORMNACECAPABILITIES\",\n      message: \"Performance Capabilities\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2767,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2772,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sperformancecapabilities === null || this.props.Login.masterData.selectedInstrument.sperformancecapabilities.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sperformancecapabilities))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2784,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2785,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2786,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ACCEPTANCECRETERIA\",\n      message: \"Acceptance Creteria\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2787,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2792,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sacceptancecriteria === null || this.props.Login.masterData.selectedInstrument.sacceptancecriteria.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sacceptancecriteria))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2804,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2805,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2806,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REMARKS\",\n      message: \"Remarks\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2807,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2812,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sremarks === null || this.props.Login.masterData.selectedInstrument.sremarks.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sremarks))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2823,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2824,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2825,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DESCRIPTION\",\n      message: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2826,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2831,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sdescription === null || this.props.Login.masterData.selectedInstrument.sdescription.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sdescription))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2845,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2846,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2847,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DEFAULTSTATUS\",\n      message: \"Default Status\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2848,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2853,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sdefaultstatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2861,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2862,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2863,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MOVEMENT\",\n      message: \"Movement\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2864,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2869,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData && this.props.Login.masterData.selectedInstrument.smovement === null || this.props.Login.masterData.selectedInstrument.smovement.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.smovement))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2880,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2881,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2882,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ASSOCIATEDDOCUMENT\",\n      message: \"Associated Document\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2883,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2888,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData && this.props.Login.masterData.selectedInstrument.sassociateddocument === null || this.props.Login.masterData.selectedInstrument.sassociateddocument.length === 0 ? \"-\" : this.props.Login.masterData.selectedInstrument.sassociateddocument))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2900,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2901,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2902,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ENABLEDISABLEAUTOCALIBRATION\",\n      message: \"Enable/Disable Auto Calibration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2903,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2908,\n        columnNumber: 35\n      }\n    }, this.props.Login.masterData.selectedInstrument.sautocalibration)))), selectedInstrument && /*#__PURE__*/React.createElement(CustomTab, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2920,\n        columnNumber: 31\n      }\n    }))) : \"\"))))))), (this.props.Login.openModal || this.props.Login.openChildModal) && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.props.Login.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      size: this.props.Login.loadEsign ? \"lg\" : this.props.Login.openModal ? \"xl\" : this.props.Login.openChildModal ? \"lg\" : \"lg\",\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      showSaveContinue: this.props.Login.screenName === \"IDS_INSTRUMENT\" || this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" || this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\" ? true : false,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2957,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? /*#__PURE__*/React.createElement(AddInstrument, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstrumentCategory: this.props.Login.InstrumentCategory,\n        Supplier: this.props.Login.Supplier,\n        InstrumentLocation: this.props.Login.InstrumentLocation,\n        Manufacturer: this.props.Login.Manufacturer,\n        InstrumentStatus: this.props.Login.InstrumentStatus,\n        handleDateChange: this.handleDateChange,\n        Lab: this.props.Login.Lab,\n        Period: this.props.Login.Period,\n        Site: this.props.Login.siteList,\n        validateOpenDate: this.props.Login.validateOpenDate,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        ValidationStatus: this.props.Login.ValidationStatus,\n        CalibrationStatus: this.props.Login.CalibrationStatus,\n        MaintenanceStatus: this.props.Login.MaintenanceStatus,\n        SectionUsers: this.props.Login.Users,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        defaultValue: this.props.Login.edqmManufacturer,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        expiryDate: this.props.Login.expiryDate,\n        CalibrationRequired: this.props.Login.CalibrationRequired,\n        InstrumentName: this.props.Login.instName,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2964,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_SECTION\" ? /*#__PURE__*/React.createElement(AddInstrumentSection, {\n        selectedRecord: this.state.selectedRecord || {},\n        Lab: this.props.Login.Lab,\n        Users: this.props.Login.Users,\n        onComboChange: this.onComboChange,\n        onSwitchChange: this.onSwitchChange,\n        onInputOnChange: this.onInputOnChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2994,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ? /*#__PURE__*/React.createElement(AddInstrumentValidation, {\n        selectedRecord: this.state.selectedRecord || {},\n        ValidationStatus: this.props.Login.ValidationStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3004,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        linkMaster: this.props.Login.linkMaster // addInstrumentFile={this.props.addInstrumentFile}\n        ,\n        onComboChange: this.onComboChange,\n        editFiles: this.props.Login.editFiles,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3019,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? /*#__PURE__*/React.createElement(AddInstrumentCalibration, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        CalibrationStatus: this.props.Login.CalibrationStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        nextcalibrationperiod: this.props.Login.masterData.selectedInstrument.nnextcalibration + \"-\" + this.props.Login.masterData.selectedInstrument.snextcalibrationperiod,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3034,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster // addInstrumentFile={this.props.addInstrumentFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3052,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\" ? /*#__PURE__*/React.createElement(AddInstrumentMaintenance, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        MaintenanceStatus: this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        instrumentid: this.props.Login.masterData.selectedInstrument.sinstrumentid,\n        onInputOnChange: this.onInputOnChange,\n        currentTime: this.props.Login.currentTime,\n        userInfo: this.props.Login.userInfo,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3066,\n          columnNumber: 17\n        }\n      }) : this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\" ? /*#__PURE__*/React.createElement(AddInstrumentFile, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropTestFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        maxSize: 20,\n        maxFiles: 1,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster // addInstrumentFile={this.props.addInstrumentFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3081,\n          columnNumber: 17\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2938,\n        columnNumber: 11\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.modalTitle === \"IDS_OPENDATE\" ? /*#__PURE__*/React.createElement(AddOpenDate, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        Status: this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? this.props.Login.CalibrationStatus : this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        esign: this.props.Login.loadEsign,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3113,\n          columnNumber: 17\n        }\n      }) : /*#__PURE__*/React.createElement(AddCloseDate, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        Status: this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\" ? this.props.Login.CalibrationStatus : this.props.Login.MaintenanceStatus,\n        TimeZoneList: this.props.Login.TimeZoneList,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        onComboChange: this.onComboChange,\n        userInfo: this.props.Login.userInfo,\n        currentTime: this.props.Login.currentTime,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3129,\n          columnNumber: 17\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3101,\n        columnNumber: 11\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let updateState = false;\n    let {\n      selectedRecord,\n      userRoleControlRights,\n      controlMap,\n      //filterData,\n      nfilterInstrumentCategory,\n      filterInstrumentCategory\n    } = this.state;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      updateState = true;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.operation === 'update') {\n        this.props.Login.masterData[\"InstrumentValidation\"] = this.props.Login.masterData[\"InstrumentValidation\"] ? this.props.Login.masterData.InstrumentValidation.map(item => {\n          if (item.ninstrumentvalidationcode === this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode) {\n            item = this.props.Login.masterData.selectedInstrumentValidation;\n          }\n\n          return item;\n        }) : [];\n        this.props.Login.masterData[\"InstrumentCalibration\"] = this.props.Login.masterData[\"InstrumentCalibration\"] ? this.props.Login.masterData.InstrumentCalibration.map(item => {\n          if (item.ninstrumentcalibrationcode === this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode) {\n            item = this.props.Login.masterData.selectedInstrumentCalibration;\n          }\n\n          return item;\n        }) : [];\n        this.props.Login.masterData[\"InstrumentMaintenance\"] = this.props.Login.masterData[\"InstrumentMaintenance\"] ? this.props.Login.masterData.InstrumentMaintenance.map(item => {\n          if (item.ninstrumentmaintenancecode === this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode) {\n            item = this.props.Login.masterData.selectedInstrumentMaintenance;\n          }\n\n          return item;\n        }) : [];\n      }\n\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\n\n      if (this.props.Login.masterData.SelectedInsCat && this.props.Login.masterData.SelectedInsCat !== previousProps.Login.masterData.SelectedInsCat) {\n        nfilterInstrumentCategory = {\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\n          item: this.props.Login.masterData.SelectedInsCat\n        };\n      } //filterData = this.generateBreadCrumData();\n\n\n      updateState = true;\n    }\n\n    if (this.props.Login.masterData.filterInstrumentCategory !== previousProps.Login.masterData.filterInstrumentCategory) {\n      const insCategoryMap = constructOptionList(this.props.Login.masterData.filterInstrumentCategory || [], \"ninstrumentcatcode\", \"sinstrumentcatname\", \"ntestcategorycode\", \"ascending\", false);\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\n\n      if (insCategoryMap.get(\"DefaultValue\")) {\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\n      } else if (filterInstrumentCategory && filterInstrumentCategory.length > 0) {\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\n      }\n\n      updateState = true;\n    }\n\n    if (updateState) {\n      this.setState({\n        selectedRecord,\n        userRoleControlRights,\n        controlMap,\n        //filterData,\n        nfilterInstrumentCategory,\n        filterInstrumentCategory\n      });\n    }\n  } // generateBreadCrumData() {\n  //   const breadCrumbData = [];\n  //   if (\n  //     this.props.Login.masterData &&\n  //     this.props.Login.masterData.filterInstrumentCategory\n  //   ) {\n  //     breadCrumbData.push({\n  //       label: \"IDS_INSTRUMENTCATEGORY\",\n  //       value: this.props.Login.masterData.SelectedInsCat\n  //         ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\n  //         : \"NA\",\n  //     });\n  //   }\n  //   return breadCrumbData;\n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  getInstrumentDetail,\n  filterColumnData,\n  getInstrumentCombo,\n  updateStore,\n  validateEsignCredential,\n  getSectionUsers,\n  getAvailableInstData,\n  changeInstrumentCategoryFilter,\n  getTabDetails,\n  getDataForAddEditValidation,\n  addInstrumentFile,\n  getDataForAddEditCalibration,\n  getDataForAddEditMaintenance,\n  OpenDate,\n  CloseDate,\n  viewAttachment,\n  getCalibrationRequired,\n  getInstrumentSiteSection,\n  updateAutoCalibration\n})(injectIntl(Instrument));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/instrumentmanagement/Instrument.jsx"],"names":["React","Component","Row","Col","Card","Nav","FormGroup","FormLabel","connect","toast","FormattedMessage","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","getInstrumentCombo","getInstrumentDetail","getSectionUsers","getAvailableInstData","changeInstrumentCategoryFilter","filterColumnData","getTabDetails","getDataForAddEditValidation","addInstrumentFile","getDataForAddEditCalibration","getDataForAddEditMaintenance","OpenDate","CloseDate","viewAttachment","getCalibrationRequired","getInstrumentSiteSection","updateAutoCalibration","ListMaster","attachmentType","transactionStatus","AddInstrument","AddInstrumentSection","DEFAULT_RETURN","SlideOutModal","CustomTab","Esign","showEsign","getControlMap","constructOptionList","formatInputDate","onDropAttachFileList","create_UUID","deleteAttachmentDropZone","rearrangeDateFormatDateOnly","Lims_JSON_stringify","replaceBackSlash","ReadOnlyText","ContentPanel","MediaLabel","InstrumentSectionTab","process","ConfirmMessage","InstrumentCategoryFilter","BreadcrumbComponent","Affix","InstrumentValidationTab","AddInstrumentValidation","AddInstrumentFile","InstrumentCalibrationTab","AddInstrumentCalibration","ModalShow","AddOpenDate","AddCloseDate","InstrumentMaintenanceTab","AddInstrumentMaintenance","rsapi","mapStateToProps","state","Login","Instrument","constructor","props","sidebarExpandCollapse","setState","sidebarview","handleDateChange","dateName","dateValue","selectedRecord","onInputOnChange","event","optional","name","target","type","checked","value","onSaveModalClick","inputData","inputParam","userInfo","screenName","modalTitle","ninstrumentcode","masterData","selectedInstrument","ntzopendate","ninstrumentcalibrationcode","selectedInstrumentCalibration","ncalibrationstatus","ntranscode","sopenreason","nopenusercode","nusercode","ntzclosedate","sclosereason","ncloseusercode","classUrl","methodUrl","operation","searchRef","ninstrumentmaintenancecode","selectedInstrumentMaintenance","nmaintenancestatus","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","openModal","modalShow","loadEsign","screenData","onSaveClick","saveType","formRef","instSection","postParam","undefined","fieldList","nsitecode","nmastersitecode","inputListName","selectedObject","primaryKeyField","NA","map","item","sremark","ntzvalidationdate","nvalidationstatus","VALIDATION","dvalidationdate","dlastcalibrationdate","CALIBRATION","dopendate","UNDERCALIBIRATION","dclosedate","dduedate","ntzlastcalibrationdate","ntzduedate","npreregno","sarno","ntzlastmaintenancedate","UNDERMAINTANENCE","dlastmaintenancedate","label","ninstrumentnamecode","push","clearSelectedRecordField","filtercombochange","searchedData","SelectedInsCat","ninstrumentcatcode","isSingleGet","instItem","openChildModal","ninstrumentvalidationcode","selectedInstrumentValidation","onSaveInstrumentFile","onSaveInstrumentCalibrationFile","popUp","onSaveInstrumentMaintenanceFile","onNumericInputOnChange","validateEsign","modalName","userinfo","sreason","nreasoncode","spredefinedreason","password","defaultRecord","defaultParam","dataItem","YES","dataState","sectionDataState","onSwitchChange","key","deleteTabFileRecord","deleteParam","ninstrumentstatus","Disposed","ninstrumentfilecode","ninstrumentlogcode","sfilename","sfiledesc","nattachmenttypecode","nlinkcode","ninstrumentlogtypecode","slinkname","screateddate","sinstrumentcatname","fetchUrl","fecthInputObject","warn","intl","formatMessage","id","DeleteInstrument","ninstrumentsectioncode","ndefaultstatus","ssectionname","susername","nsectioncode","nFlag","primaryKeyValue","deleteAttachment","file","fieldName","actionType","acceptedFiles","isFileEdited","NO","instrumentFileArray","instrumentFile","nstatus","ACTIVE","formData","FormData","FTP","Array","isArray","length","forEach","index","tempData","Object","assign","splittedFileName","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","trim","size","append","nfilesize","slinkfilename","slinkdescription","JSON","stringify","sformname","smodulename","slanguagename","isFileupload","onTabChange","tabProps","onDropTestFile","attachedFiles","maxSize","dataStateChange","dataResult","viewInstrumentFile","filedata","instrumentfile","tabDetail","tabMap","Map","deleteSecId","controlMap","has","get","ncontrolcode","defaultSecId","nregionalsitecode","ntranssitecode","set","selectedSection","settings","ValidationFileData","InstrumentValidation","deleteAction","ConfirmDelete","getDataForEdit","ncalibrationreq","CalibrationFileData","InstrumentCalibration","addInstrumentCalibrationFile","addOpenDate","MaintenanceFileData","InstrumentMaintenance","addInstrumentMaintenanceFile","deleteId","confirmMessage","confirm","reloadData","current","nfilterInstrumentCategory","defaultInstrumentCatValue","filterInstrumentCategory","onComboChange","comboData","caseNo","nsectionusercode","closeModal","selectedId","closeModalShow","openFilter","showFilter","closeFilter","onFilterSubmit","getAutoCalibration","controlCode","url","post","then","response","InstrumentScheduled","autoCalibrationConfirmationAlert","catch","error","status","message","loading","skip","take","createRef","searchFieldList","getDerivedStateFromProps","masterStatus","render","console","log","mandatoryFields","mandatory","idsName","dataField","mandatoryLabel","controlType","CalibrationRequired","LINK","addId","editId","autoCalibrationId","filterParam","breadCrumbData","IDS_INSTRUMENTCATEGORYFILTER","parentFunction","sinstrumentname","DEACTIVE","Offsite","sactivestatus","indexOf","e","sinstrumentid","smodelnumber","nservicecode","sserviceby","spono","dpodate","spodate","smanufacdate","nmanufcode","smanufname","sregionalsitename","ninstrumentlocationcode","sinstrumentlocationname","sreceiveddate","sinstallationdate","sexpirydate","sservicedate","sserialno","nnextcalibration","snextcalibrationperiod","nnextcalibrationperiod","nsuppliercode","ssuppliername","npurchasecost","ssoftwareinformation","sperformancecapabilities","sacceptancecriteria","sremarks","sdescription","sdefaultstatus","smovement","sassociateddocument","sautocalibration","InstrumentCategory","Supplier","InstrumentLocation","Manufacturer","InstrumentStatus","Lab","Period","siteList","validateOpenDate","TimeZoneList","ValidationStatus","CalibrationStatus","MaintenanceStatus","Users","edqmManufacturer","currentTime","expiryDate","instName","linkMaster","editFiles","componentDidUpdate","previousProps","updateState","values","insCategoryMap"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt,faThumbsUp } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  callService,\r\n  crudMaster,\r\n  validateEsignCredential,\r\n  updateStore,\r\n  getInstrumentCombo,\r\n  getInstrumentDetail,\r\n  getSectionUsers,\r\n  getAvailableInstData,\r\n  changeInstrumentCategoryFilter,\r\n  filterColumnData,\r\n  getTabDetails,\r\n  getDataForAddEditValidation,\r\n  addInstrumentFile,\r\n  getDataForAddEditCalibration,\r\n  getDataForAddEditMaintenance,\r\n  OpenDate,\r\n  CloseDate, viewAttachment,getCalibrationRequired,getInstrumentSiteSection,  updateAutoCalibration\r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport {\r\n  attachmentType,\r\n  transactionStatus,\r\n} from \"../../components/Enumeration\";\r\nimport AddInstrument from \"../../pages/instrumentmanagement/AddInstrument\";\r\nimport AddInstrumentSection from \"../../pages/instrumentmanagement/AddInstrumentSection\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\nimport CustomTab from \"../../components/custom-tabs/custom-tabs.component\";\r\nimport Esign from \"../audittrail/Esign\";\r\nimport {\r\n  showEsign,\r\n  getControlMap,\r\n  constructOptionList,\r\n  formatInputDate,\r\n  onDropAttachFileList,\r\n  create_UUID,\r\n  deleteAttachmentDropZone,\r\n  rearrangeDateFormatDateOnly,\r\n  Lims_JSON_stringify,\r\n  replaceBackSlash\r\n} from \"../../components/CommonScript\";\r\nimport { ReadOnlyText, ContentPanel ,MediaLabel} from \"../../components/App.styles\";\r\nimport InstrumentSectionTab from \"./InstrumentSectionTab\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport InstrumentCategoryFilter from \"./InstrumentCategoryFilter\";\r\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\r\nimport { Affix } from \"rsuite\";\r\n// import ReactTooltip from \"react-tooltip\";\r\nimport InstrumentValidationTab from \"./InstrumentValidationTab\";\r\nimport AddInstrumentValidation from \"../../pages/instrumentmanagement/AddInstrumentValidation\";\r\nimport AddInstrumentFile from \"../../pages/instrumentmanagement/AddInstrumentFile\";\r\nimport InstrumentCalibrationTab from \"./InstrumentCalibrationTab\";\r\nimport AddInstrumentCalibration from \"./AddInstrumentCalibration\";\r\nimport ModalShow from \"../../components/ModalShow\";\r\nimport AddOpenDate from \"./AddOpenDate\";\r\nimport AddCloseDate from \"./AddCloseDate\";\r\nimport InstrumentMaintenanceTab from \"./InstrumentMaintenanceTab\";\r\nimport AddInstrumentMaintenance from \"./AddInstrumentMaintenance\";\r\nimport rsapi from '../../rsapi';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass Instrument extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const sectionDataState = { skip: 0, take: 10 };\r\n    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedInstrument: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      sectionDataState,\r\n      sidebarview: false\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"sinstrumentname\",\"sinstrumentid\", \"smodelnumber\", \"spono\", \"sserialno\", \"sremarks\",\r\n    \"sdefaultstatus\",\"smanufacdate\",\"spodate\",\"sreceiveddate\",\"sinstallationdate\",\"sexpirydate\", \"sactivestatus\"];\r\n    this.confirmMessage = new ConfirmMessage();\r\n  }\r\n  sidebarExpandCollapse = () => {\r\n      this.setState({\r\n          sidebarview: true\r\n      })          \r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  onInputOnChange = (event, optional,name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    if(name===\"nnextcalibration\")\r\n    {\r\n      selectedRecord[name] = event;\r\n    }\r\n    else if(name===\"npurchasecost\")\r\n    {\r\n      selectedRecord[name] = event;\r\n    }\r\n    else\r\n    {\r\n    if (event.target.type === \"checkbox\") {\r\n      selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n    }  else if (event.target.type === 'radio') {\r\n      selectedRecord[event.target.name] = optional;\r\n  }else {\r\n      selectedRecord[event.target.name] = event.target.value;\r\n    }\r\n  }\r\n    this.setState({ selectedRecord });\r\n  };\r\n  \r\n  onSaveModalClick = () => {\r\n    let inputData = [];\r\n    let inputParam = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      if(this.props.Login.modalTitle === \"IDS_OPENDATE\"){\r\n      inputData[\"instrumentcalibration\"] = {\r\n        ninstrumentcode:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n          ? this.state.selectedRecord[\"ntzopendate\"].value\r\n          : \"-1\",\r\n          \r\n        ninstrumentcalibrationcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n        ncalibrationstatus:\r\n          this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n        sopenreason:\r\n          this.state.selectedRecord.sopenreason !== null\r\n            ? this.state.selectedRecord.sopenreason\r\n            : \"\",\r\n        \r\n        nopenusercode: this.props.Login.userInfo.nusercode\r\n      };\r\n      if (this.state.selectedRecord[\"dopendate\"]) {\r\n        inputData[\"instrumentcalibration\"][\"dopendate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dopendate\"],\r\n          false\r\n        );\r\n      }\r\n      }\r\n      else{\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          \r\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ninstrumentcalibrationcode:\r\n            this.props.Login.masterData.selectedInstrumentCalibration\r\n              .ninstrumentcalibrationcode,\r\n          ncalibrationstatus:\r\n            this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n          \r\n          sclosereason:\r\n            this.state.selectedRecord.sclosereason !== null\r\n              ? this.state.selectedRecord.sclosereason\r\n              : \"\",\r\n          ncloseusercode: this.props.Login.userInfo.nusercode,\r\n        };\r\n        if (this.state.selectedRecord[\"dclosedate\"]) {\r\n          inputData[\"instrumentcalibration\"][\"dclosedate\"] = formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          );\r\n        }\r\n      }\r\n      \r\n      inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentCalibration\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        searchRef: this.searchRef,\r\n       // modalShow: false,\r\n       // openModal:true,\r\n      };\r\n    } else {\r\n      if(this.props.Login.modalTitle === \"IDS_OPENDATE\"){\r\n\r\n      inputData[\"instrumentmaintenance\"] = {\r\n        ninstrumentcode:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n          ? this.state.selectedRecord[\"ntzopendate\"].value\r\n          : \"-1\",\r\n        \r\n        ninstrumentmaintenancecode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n        nmaintenancestatus:\r\n          this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n        sopenreason:\r\n          this.state.selectedRecord.sopenreason !== null\r\n            ? this.state.selectedRecord.sopenreason\r\n            : \"\",\r\n        nopenusercode: this.props.Login.userInfo.nusercode\r\n      };\r\n\r\n      if (this.state.selectedRecord[\"dopendate\"]) {\r\n        inputData[\"instrumentmaintenance\"][\"dopendate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dopendate\"],\r\n          false\r\n        );\r\n      }\r\n    }\r\n      else{\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n            ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          \r\n          ninstrumentmaintenancecode:\r\n            this.props.Login.masterData.selectedInstrumentMaintenance\r\n              .ninstrumentmaintenancecode,\r\n          nmaintenancestatus:\r\n            this.state.selectedRecord.ntranscode[\"item\"].ntranscode,\r\n            sclosereason:\r\n            this.state.selectedRecord.sclosereason !== null\r\n              ? this.state.selectedRecord.sclosereason\r\n              : \"\",\r\n          ncloseusercode: this.props.Login.userInfo.nusercode\r\n        };\r\n  \r\n        if (this.state.selectedRecord[\"dclosedate\"]) {\r\n          inputData[\"instrumentmaintenance\"][\"dclosedate\"] = formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          );\r\n        }\r\n      }\r\n      inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        searchRef: this.searchRef,\r\n      //  modalShow: false,\r\n      //  openModal:true,\r\n      };\r\n    }\r\n\r\n    const masterData = this.props.Login.masterData;\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        this.props.Login.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          openModal:true,\r\n          modalShow: false,\r\n          //openChildModal:false,\r\n          //openModal:false,\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"modalShow\");\r\n    }\r\n  };\r\n\r\n  onSaveClick = (saveType, formRef) => {\r\n    let inputData = [];\r\n    let instSection = [];\r\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n      let postParam = undefined;\r\n      let fieldList = [\r\n        \"ninstrumentcode\",\r\n        \"ninstrumentcatcode\",\r\n        \"ninstrumentlocationcode\",\r\n        \"nsuppliercode\",\r\n        \"nservicecode\",\r\n        \"nmanufcode\",\r\n        \"nusercode\",\r\n        \"sinstrumentid\",\r\n        \"sinstrumentname\",\r\n        \"smodelnumber\",\r\n        \"spono\",\r\n        \"sdescription\",\r\n        \"sassociateddocument\",\r\n        \"smovement\",\r\n        \"nwindowsperiodminus\",\r\n        \"nwindowsperiodplus\",\r\n        \"nwindowsperiodminusunit\",\r\n        \"nwindowsperiodplusunit\",\r\n        \"sserialno\",\r\n        \"sremarks\",\r\n        \"npurchasecost\",\r\n        \"ssoftwareinformation\",\r\n        \"sperformancecapabilities\",\r\n        \"sacceptancecriteria\",\r\n        \"nnextcalibration\",\r\n        \"nnextcalibrationperiod\",\r\n        \"nregionalsitecode\",\r\n        \"ndefaultstatus\",\r\n        \"nsitecode\",\r\n        \"nstatus\",\r\n      ];\r\n\r\n      inputData[\"instrument\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n\r\n      if (this.props.Login.operation === \"update\") {\r\n        postParam = {\r\n          inputListName: \"Instrument\",\r\n          selectedObject: \"selectedInstrument\",\r\n          primaryKeyField: \"ninstrumentcode\",\r\n        };\r\n\r\n        inputData[\"instrument\"][\"smanufacdate\"] = this.state.selectedRecord[\r\n          \"dmanufacdate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dmanufacdate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"spodate\"] = this.state.selectedRecord[\r\n          \"dpodate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dpodate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sreceiveddate\"] = this.state.selectedRecord[\r\n          \"dreceiveddate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dreceiveddate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sinstallationdate\"] = this.state\r\n          .selectedRecord[\"dinstallationdate\"]\r\n          ? this.state.selectedRecord[\"dinstallationdate\"]\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"sexpirydate\"] = this.state.selectedRecord[\r\n          \"dexpirydate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"dexpirydate\"]\r\n          : transactionStatus.NA;\r\n\r\n          inputData[\"instrument\"][\"sservicedate\"] = this.state.selectedRecord[\r\n            \"dservicedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"dservicedate\"]\r\n            : transactionStatus.NA;\r\n\r\n        fieldList.map((item) => {\r\n          return (inputData[\"instrument\"][item] = this.state.selectedRecord[\r\n            item\r\n          ]\r\n            ? this.state.selectedRecord[item]\r\n            : \"\");\r\n        });\r\n      } else {\r\n        inputData[\"instrument\"][\"ninstrumentstatus\"] =\r\n          this.state.selectedRecord[\"ntransactionstatus\"];\r\n        inputData[\"instrument\"][\"nsectioncode\"] = this.state.selectedRecord[\r\n          \"nsectioncode\"\r\n        ]\r\n          ? this.state.selectedRecord[\"nsectioncode\"].value\r\n          : transactionStatus.NA;\r\n        fieldList.map((item) => {\r\n          return (inputData[\"instrument\"][item] =\r\n            this.state.selectedRecord[item]);\r\n        });\r\n        inputData[\"instrumentvalidation\"] = {\r\n          sremark: this.state.selectedRecord.sremark\r\n  \r\n            ? this.state.selectedRecord.sremark\r\n            :\r\n            \"\",\r\n  \r\n          nusercode: this.props.Login.userInfo.nusercode,\r\n          ntzvalidationdate: this.state.selectedRecord[\r\n            \"ntzvalidationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : transactionStatus.NA,\r\n  \r\n          nvalidationstatus: this.state.selectedRecord[\r\n            \"validation\"\r\n          ]\r\n            ? this.state.selectedRecord[\"validation\"].value\r\n            : transactionStatus.VALIDATION,\r\n  \r\n          dvalidationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dvalidationdate\"],\r\n            false\r\n          )\r\n        };\r\n        inputData[\"instrumentcalibration\"] = {\r\n          sopenreason: this.state.selectedRecord[\r\n            \"sopenreason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sopenreason\"]\r\n            : \"\",\r\n          sclosereason: this.state.selectedRecord[\r\n            \"sclosereason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sclosereason\"]\r\n            : \"\",\r\n          nopenusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ncloseusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n  \r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n          ncalibrationstatus: this.state.selectedRecord[\r\n            \"calibration\"\r\n          ]\r\n            ? this.state.selectedRecord[\"calibration\"].value\r\n            : transactionStatus.CALIBRATION,\r\n          ntzopendate: this.state.selectedRecord[\r\n            \"ntzopendate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : transactionStatus.NA,\r\n          dopendate: this.state.selectedRecord[\"calibration\"] && this.state.selectedRecord[\"calibration\"].value===transactionStatus.UNDERCALIBIRATION?\"\": formatInputDate(\r\n            this.state.selectedRecord[\"dopendate\"],\r\n            false\r\n          ),\r\n          dclosedate: this.state.selectedRecord[\"calibration\"] && this.state.selectedRecord[\"calibration\"].value===transactionStatus.UNDERCALIBIRATION?\"\":formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : transactionStatus.NA,\r\n          ntzclosedate: this.state.selectedRecord[\r\n            \"ntzclosedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : transactionStatus.NA,\r\n          ntzduedate: this.state.selectedRecord[\r\n            \"ntzduedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : transactionStatus.NA,\r\n  \r\n          npreregno: transactionStatus.NA,\r\n  \r\n          sarno: this.state.selectedRecord[\r\n            \"sarno\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sarno\"]\r\n            : \"\"\r\n        }\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          sopenreason: this.state.selectedRecord[\r\n            \"sopenreason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sopenreason\"]\r\n            : \"\",\r\n          sclosereason: this.state.selectedRecord[\r\n            \"sclosereason\"\r\n          ]\r\n            ? this.state.selectedRecord[\"sclosereason\"]\r\n            : \"\",\r\n          nopenusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ncloseusercode:\r\n            this.props.Login.userInfo.nusercode,\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : transactionStatus.NA,\r\n          nmaintenancestatus: this.state.selectedRecord[\r\n            \"maintenance\"\r\n          ]\r\n            ? this.state.selectedRecord[\"maintenance\"].value\r\n            : transactionStatus.NA,\r\n          ntzopendate: this.state.selectedRecord[\r\n            \"ntzopendate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : transactionStatus.NA,\r\n          ntzclosedate: this.state.selectedRecord[\r\n            \"ntzclosedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : transactionStatus.NA,\r\n          ntzduedate: this.state.selectedRecord[\r\n            \"ntzduedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : transactionStatus.NA,\r\n          dopendate:this.state.selectedRecord[\"maintenance\"] && this.state.selectedRecord[\"maintenance\"].value===transactionStatus.UNDERMAINTANENCE?\"\": formatInputDate(\r\n            this.state.selectedRecord[\"dopendate\"],\r\n            false\r\n          ),\r\n          dclosedate:this.state.selectedRecord[\"maintenance\"] && this.state.selectedRecord[\"maintenance\"].value===transactionStatus.UNDERMAINTANENCE?\"\":formatInputDate(\r\n            this.state.selectedRecord[\"dclosedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          )\r\n  \r\n        }\r\n  \r\n      }\r\n      inputData[\"instrument\"][\"ninstrumentcatcode\"] = this.state.selectedRecord[\r\n        \"ninstrumentcatcode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ninstrumentcatcode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nmanufcode\"] = this.state.selectedRecord[\r\n        \"nmanufcode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nmanufcode\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nsuppliercode\"] = this.state.selectedRecord[\r\n        \"nsuppliercode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nsuppliercode\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n\r\n        inputData[\"instrument\"][\"ninstrumentlocationcode\"] = this.state.selectedRecord[\r\n          \"ninstrumentlocationcode\"\r\n        ]\r\n          ? this.state.selectedRecord[\"ninstrumentlocationcode\"].value ||\r\n          transactionStatus.NA\r\n          : transactionStatus.NA;\r\n\r\n        inputData[\"instrument\"][\"nsitecode\"] = this.props.Login.userInfo.nmastersitecode;\r\n\r\n        inputData[\"instrument\"][\"nregionalsitecode\"] = this.state.selectedRecord[\r\n          \"nregionalsitecode\"\r\n        ]\r\n          ? this.state.selectedRecord[\"nregionalsitecode\"].value ||\r\n          transactionStatus.NA\r\n          : transactionStatus.NA;\r\n\r\n      inputData[\"instrument\"][\"nservicecode\"] = this.state.selectedRecord[\r\n        \"nservicecode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nservicecode\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ninstrumentstatus\"] = this.state.selectedRecord[\r\n        \"ntranscode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntranscode\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nwindowsperiodplus\"] = this.state.selectedRecord[\r\n        \"nwindowsperiodplus\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nwindowsperiodplus\"]\r\n        : 0;\r\n      inputData[\"instrument\"][\"nwindowsperiodminus\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodminus\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodminus\"]\r\n        : 0;\r\n      inputData[\"instrument\"][\"nwindowsperiodminusunit\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodminusunit\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodminusunit\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"nwindowsperiodplusunit\"] = this.state\r\n        .selectedRecord[\"nwindowsperiodplusunit\"]\r\n        ? this.state.selectedRecord[\"nwindowsperiodplusunit\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"nnextcalibrationperiod\"] = this.state\r\n        .selectedRecord[\"nnextcalibrationperiod\"]\r\n        ? this.state.selectedRecord[\"nnextcalibrationperiod\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzmanufdate\"] = this.state.selectedRecord[\r\n        \"ntzmanufdate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzmanufdate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzmanufdate\"] = this.state.selectedRecord[\r\n        \"ntzmanufdate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzpodate\"] = this.state.selectedRecord[\r\n        \"ntzpodate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzpodate\"].value || transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzpodate\"] = this.state.selectedRecord[\r\n        \"ntzpodate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzpodate\"].label\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"ntzreceivedate\"] = this.state.selectedRecord[\r\n        \"ntzreceivedate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzreceivedate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzreceivedate\"] = this.state.selectedRecord[\r\n        \"ntzreceivedate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzreceivedate\"].label\r\n        : transactionStatus.NA;\r\n\r\n      inputData[\"instrument\"][\"ntzinstallationdate\"] = this.state\r\n        .selectedRecord[\"ntzinstallationdate\"]\r\n        ? this.state.selectedRecord[\"ntzinstallationdate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n\r\n      inputData[\"instrument\"][\"stzinstallationdate\"] = this.state\r\n        .selectedRecord[\"ntzinstallationdate\"]\r\n        ? this.state.selectedRecord[\"ntzinstallationdate\"].label\r\n        : transactionStatus.NA;\r\n\r\n      inputData[\"instrument\"][\"ntzexpirydate\"] = this.state.selectedRecord[\r\n        \"ntzexpirydate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n      inputData[\"instrument\"][\"stzexpirydate\"] = this.state.selectedRecord[\r\n        \"ntzexpirydate\"\r\n      ]\r\n        ? this.state.selectedRecord[\"ntzexpirydate\"].label\r\n        : transactionStatus.NA;\r\n\r\n\r\n        inputData[\"instrument\"][\"ntzservicedate\"] = this.state.selectedRecord[\r\n          \"ntzservicedate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"ntzservicedate\"].value ||\r\n          transactionStatus.NA\r\n          : transactionStatus.NA;\r\n        inputData[\"instrument\"][\"stzservicedate\"] = this.state.selectedRecord[\r\n          \"ntzservicedate\"\r\n        ]\r\n          ? this.state.selectedRecord[\"ntzservicedate\"].label\r\n          : transactionStatus.NA;\r\n        \r\n\r\n      if (this.state.selectedRecord[\"dpodate\"]) {\r\n        inputData[\"instrument\"][\"dpodate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dpodate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dreceiveddate\"]) {\r\n        inputData[\"instrument\"][\"dreceiveddate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dreceiveddate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dinstallationdate\"]) {\r\n        inputData[\"instrument\"][\"dinstallationdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dinstallationdate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dexpirydate\"]) {\r\n        inputData[\"instrument\"][\"dexpirydate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dexpirydate\"],\r\n          false\r\n        );\r\n      }\r\n      if (this.state.selectedRecord[\"dmanufacdate\"]) {\r\n        inputData[\"instrument\"][\"dmanufacdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dmanufacdate\"],\r\n          false\r\n        );\r\n      }\r\n\r\n\r\n      if (this.state.selectedRecord[\"dservicedate\"]) {\r\n        inputData[\"instrument\"][\"dservicedate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dservicedate\"],\r\n          false\r\n        );\r\n      }\r\n\r\n      inputData[\"instrument\"][\"nusercode\"] =\r\n        this.props.Login.userInfo.nusercode;\r\n        inputData[\"instrument\"][\"sinstrumentname\"] =\r\n        this.state.selectedRecord.ninstrumentnamecode &&  this.state.selectedRecord.ninstrumentnamecode.label;\r\n\r\n      if (this.state.selectedRecord[\"nsectionusercode\"] !== undefined) {\r\n        if (this.state.selectedRecord[\"nusercode\"] !== undefined) {\r\n          this.state.selectedRecord[\"nusercode\"].map((item) => {\r\n            return instSection.push({\r\n              nusercode: item.value,\r\n            });\r\n          });\r\n          inputData[\"instrumentsection\"] = instSection;\r\n        }\r\n      }\r\n     let clearSelectedRecordField =[\r\n        { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\", \"width\": \"200px\" ,\"controlType\": \"textbox\",\"isClearField\":true},\r\n        { \"idsName\": \"IDS_SERIALNO\", \"dataField\": \"sserialno\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_PONO\", \"dataField\": \"spono\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_CALIBRATIONINTERVAL\", \"dataField\": \"nnextcalibration\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_MODELNO\", \"dataField\": \"smodelnumber\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_REMARKS\", \"dataField\": \"sremarks\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_MOVEMENT\", \"dataField\": \"smovement\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_ASSOCIATEDDOCUMENT\", \"dataField\": \"sassociateddocument\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_PURCHASECOST\", \"dataField\": \"npurchasecost\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_SOFTWAREINFORMATION\", \"dataField\": \"ssoftwareinformation\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_PERFORMNACECAPABILITIES\", \"dataField\": \"sperformancecapabilities\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_ACCEPTANCECRETERIA\", \"dataField\": \"sacceptancecriteria\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_DEFAULT\", \"dataField\": \"ndefaultstatus\", \"width\": \"100px\",\"isClearField\":true,\"preSetValue\":4},\r\n        \r\n    ]\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"Instrument\",\r\n        inputData: inputData,\r\n        filtercombochange:this.props.Login.masterData.searchedData!==undefined?\r\n                     this.state.selectedRecord['ninstrumentcatcode'].value===\r\n                    this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode?false:true:false,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        postParam,\r\n        searchRef: this.searchRef,\r\n        selectedRecord: {...this.state.selectedRecord}\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\",\"\",\"\",clearSelectedRecordField);\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_SECTION\") {\r\n      let postParam = {\r\n        inputListName: \"Instrument\",\r\n        selectedObject: \"selectedInstrument\",\r\n        primaryKeyField: \"ninstrumentcode\",\r\n        isSingleGet: true\r\n      }\r\n      inputData[\"instrumentsection\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n      inputData[\"instrumentsection\"][\"nsectioncode\"] = this.state\r\n        .selectedRecord[\"nsectioncode\"]\r\n        ? this.state.selectedRecord[\"nsectioncode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrumentsection\"][\"nusercode\"] = this.state.selectedRecord[\r\n        \"nusercode\"\r\n      ]\r\n        ? this.state.selectedRecord[\"nusercode\"].value\r\n        : transactionStatus.NA;\r\n      inputData[\"instrumentsection\"][\"ninstrumentcode\"] =\r\n        this.props.Login.instItem[\"ninstrumentcode\"];\r\n\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"Section\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n        postParam: postParam,\r\n        selectedRecord: {...this.state.selectedRecord}\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n            openChildModal: true\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      let postParam = undefined;\r\n      if (this.props.Login.operation === \"update\") {\r\n        inputData[\"instrumentvalidation\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentvalidationcode:\r\n            this.props.Login.masterData.selectedInstrumentValidation\r\n              .ninstrumentvalidationcode,\r\n          nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\r\n          nvalidationstatus: this.state.selectedRecord.ntranscode.value,\r\n          dvalidationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dvalidationdate\"],\r\n            false\r\n          ),\r\n          sremark:\r\n            this.state.selectedRecord.sremark !== null\r\n              ? this.state.selectedRecord.sremark\r\n              : \"\",\r\n          ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : \"-1\",\r\n        };\r\n\r\n          postParam = {\r\n            inputListName: \"Instrument\",\r\n            selectedObject: \"selectedInstrument\",\r\n            primaryKeyField: \"ninstrumentcode\",\r\n            isSingleGet: true\r\n          };\r\n      } else {\r\n        inputData[\"instrumentvalidation\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nusercode: this.props.Login.masterData.selectedInstrument.nusercode,\r\n          nvalidationstatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          ntzvalidationdate: this.state.selectedRecord[\"ntzvalidationdate\"]\r\n            ? this.state.selectedRecord[\"ntzvalidationdate\"].value\r\n            : \"-1\",\r\n\r\n          sremark:\r\n            this.state.selectedRecord.sremark !== null\r\n              ? this.state.selectedRecord.sremark\r\n              : \"\",\r\n        };\r\n      }\r\n      if (this.state.selectedRecord[\"dvalidationdate\"]) {\r\n        inputData[\"instrumentvalidation\"][\"dvalidationdate\"] = formatInputDate(\r\n          this.state.selectedRecord[\"dvalidationdate\"],\r\n          false\r\n        );\r\n      }\r\n      let clearSelectedRecordField =[\r\n        { \"idsName\": \"IDS_REMARKS\", \"dataField\": \"sremark\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        \r\n        \r\n    ]\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentValidation\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n        postParam: postParam ? postParam : undefined,\r\n        selectedRecord: {...this.state.selectedRecord}\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n            openChildModal: true,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\",\"\",\"\",clearSelectedRecordField);\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\r\n      const inputParam = this.onSaveInstrumentFile(saveType, formRef);\r\n      if(this.props.Login.operation === \"update\"){\r\n        let postParam = {\r\n          inputListName: \"Instrument\",\r\n          selectedObject: \"selectedInstrumentValidation\",\r\n          primaryKeyField: \"ninstrumentvalidationcode\",\r\n        };\r\n        inputParam[\"postParam\"] = postParam;\r\n      }\r\n      let clearSelectedRecordField =[\r\n        { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sfiledesc\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"slinkdescription\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        \r\n        \r\n    ]\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n            // openChildModal: true,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\",\"\",\"\",clearSelectedRecordField);\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      let postParam = undefined;\r\n      if (this.props.Login.operation === \"create\")\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          nopenusercode: this.props.Login.userInfo.nusercode,\r\n          ncloseusercode: this.props.Login.userInfo.nusercode,\r\n          ncalibrationstatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : \"-1\",\r\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n            sarno:this.state.selectedRecord[\"sarno\"]\r\n            ? this.state.selectedRecord[\"sarno\"]:\"\",\r\n          npreregno: transactionStatus.NA\r\n        };\r\n      else {\r\n        inputData[\"instrumentcalibration\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentcalibrationcode:\r\n            this.props.Login.masterData.selectedInstrumentCalibration\r\n              .ninstrumentcalibrationcode,\r\n          ncalibrationstatus: this.state.selectedRecord.ntranscode.value,\r\n          dlastcalibrationdate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastcalibrationdate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzlastcalibrationdate: this.state.selectedRecord[\r\n            \"ntzlastcalibrationdate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastcalibrationdate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n            sarno:this.state.selectedRecord[\"sarno\"]\r\n            ? this.state.selectedRecord[\"sarno\"]:\"\"\r\n        };\r\n\r\n          postParam = {\r\n            inputListName: \"Instrument\",\r\n            selectedObject: \"selectedInstrument\",\r\n            primaryKeyField: \"ninstrumentcode\",\r\n            isSingleGet: true\r\n          };\r\n      }\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentCalibration\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n        postParam: postParam ? postParam : undefined\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n            // openChildModal: true,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n      }\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\"\r\n    ) {\r\n      const inputParam = this.onSaveInstrumentCalibrationFile(\r\n        saveType,\r\n        formRef\r\n      );\r\n      if(this.props.Login.operation === \"update\"){\r\n        let postParam = {\r\n          inputListName: \"Instrument\",\r\n          selectedObject: \"selectedInstrumentCalibration\",\r\n          primaryKeyField: \"ninstrumentcalibrationcode\",\r\n        };\r\n        inputParam[\"postParam\"] = postParam;\r\n      }\r\n      let clearSelectedRecordField =[\r\n        { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sfiledesc\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"slinkdescription\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        \r\n        \r\n    ]\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n            popUp: undefined,\r\n            // openChildModal: true,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\",\"\",\"\",clearSelectedRecordField);\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      let postParam = undefined;\r\n      if (this.props.Login.operation === \"create\")\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n            nopenusercode: this.props.Login.userInfo.nusercode,\r\n            ncloseusercode: this.props.Login.userInfo.nusercode,\r\n          nmaintenancestatus:\r\n            this.state.selectedRecord.ntranscode.item.ntranscode,\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"],\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzopendate: this.state.selectedRecord[\"ntzopendate\"]\r\n            ? this.state.selectedRecord[\"ntzopendate\"].value\r\n            : \"-1\",\r\n          ntzclosedate: this.state.selectedRecord[\"ntzclosedate\"]\r\n            ? this.state.selectedRecord[\"ntzclosedate\"].value\r\n            : \"-1\",\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : \"-1\",\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n        };\r\n      else {\r\n        inputData[\"instrumentmaintenance\"] = {\r\n          ninstrumentcode:\r\n            this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n          ninstrumentmaintenancecode:\r\n            this.props.Login.masterData.selectedInstrumentMaintenance\r\n              .ninstrumentmaintenancecode,\r\n          nmaintenancestatus: this.state.selectedRecord.ntranscode.value,\r\n          dlastmaintenancedate: formatInputDate(\r\n            this.state.selectedRecord[\"dlastmaintenancedate\"] && \r\n             this.state.selectedRecord[\"dlastmaintenancedate\"] ,\r\n            false\r\n          ),\r\n          dduedate: formatInputDate(\r\n            this.state.selectedRecord[\"dduedate\"],\r\n            false\r\n          ),\r\n          ntzduedate: this.state.selectedRecord[\"ntzduedate\"]\r\n            ? this.state.selectedRecord[\"ntzduedate\"].value\r\n            : \"-1\",\r\n          ntzlastmaintenancedate: this.state.selectedRecord[\r\n            \"ntzlastmaintenancedate\"\r\n          ]\r\n            ? this.state.selectedRecord[\"ntzlastmaintenancedate\"].value\r\n            : \"-1\",\r\n        };\r\n\r\n        postParam = {\r\n          inputListName: \"Instrument\",\r\n          selectedObject: \"selectedInstrument\",\r\n          primaryKeyField: \"ninstrumentcode\",\r\n          isSingleGet: true\r\n        };\r\n      }\r\n      const inputParam = {\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        inputData: inputData,\r\n        operation: this.props.Login.operation,\r\n        saveType,\r\n        formRef,\r\n        searchRef: this.searchRef,\r\n        postParam: postParam ? postParam : undefined\r\n      };\r\n\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n            // openChildModal: true,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n      }\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\"\r\n    ) {\r\n      const inputParam = this.onSaveInstrumentMaintenanceFile(\r\n        saveType,\r\n        formRef\r\n      );\r\n      if(this.props.Login.operation === \"update\"){\r\n        let postParam = {\r\n          inputListName: \"Instrument\",\r\n          selectedObject: \"selectedInstrumentMaintenance\",\r\n          primaryKeyField: \"ninstrumentmaintenancecode\",\r\n        };\r\n        inputParam[\"postParam\"] = postParam;\r\n      }\r\n      let clearSelectedRecordField =[\r\n        { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sfiledesc\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"slinkdescription\", \"width\": \"200px\",\"controlType\": \"textbox\",\"isClearField\":true },\r\n        \r\n        \r\n    ]\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          this.props.Login.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            saveType,\r\n            popUp: undefined,\r\n            // openChildModal: true,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\",\"\",\"\",clearSelectedRecordField);\r\n      }\r\n    }\r\n  };\r\n\r\n  onNumericInputOnChange = (value, name) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[name] = value;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n        toast.error(props.Login.error)\r\n        props.Login.error = \"\";\r\n    }\r\n    return null;\r\n}\r\n\r\n  // static getDerivedStateFromProps(props, state) {\r\n  //   if (props.Login.masterStatus !== \"\") {\r\n  //     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n  //       toast.warn(props.Login.masterStatus);\r\n  //       props.Login.masterStatus = \"\";\r\n  //     }\r\n  //   }\r\n  //   if (props.Login.error !== state.error) {\r\n  //     toast.error(props.Login.error);\r\n  //     props.Login.error = \"\";\r\n  //   }\r\n  //   if (props.Login.selectedRecord === undefined) {\r\n  //     return { selectedRecord: {} };\r\n  //   }\r\n  //   return null;\r\n  // }\r\n\r\n  validateEsign = () => {\r\n    let modalName;\r\n    const inputParam = {\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sreason: this.state.selectedRecord[\"esigncomments\"],\r\n          nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n          spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n     \r\n        },\r\n        password: this.state.selectedRecord[\"esignpassword\"],\r\n      },\r\n      screenData: this.props.Login.screenData,\r\n    };\r\n   // if (this.props.Login.Action === \"OPENDATE\") {\r\n    if(this.props.Login.screenName === \"IDS_INSTRUMENT\" || this.props.Login.screenName === \"Instrument\"){\r\n      modalName=\"openModal\";\r\n    }\r\n    else{\r\n      if(this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCEOPENDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCECLOSEDATE\"\r\n      || this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONOPENDATE\" || this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONCLOSEDATE\")\r\n      {\r\n        modalName = \"openModal\";\r\n      }\r\n      else\r\n      {\r\n        modalName=\"openChildModal\";\r\n      }\r\n     \r\n    }\r\n    this.props.validateEsignCredential(inputParam, modalName);\r\n  //  } else if (this.props.Login.Action === \"Edit\") {\r\n    //  this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  //  } else if (this.props.Login.Action === \"Delete\") {\r\n    //  this.props.validateEsignCredential(inputParam, \"openModal\");\r\n   // } else if (this.props.Login.Action === \"Add\") {\r\n   //   this.props.validateEsignCredential(inputParam, \"openModal\");\r\n   // } else if (this.props.Login.Action === \"Closedate\") {\r\n   //   this.props.validateEsignCredential(inputParam, \"modalShow\");\r\n   // } else {\r\n    //  this.props.validateEsignCredential(inputParam, \"openModal\");\r\n  //  }\r\n  };\r\n\r\n  defaultRecord = (defaultParam) => {\r\n    const methodUrl = defaultParam.methodUrl;\r\n    let dataItem = defaultParam.selectedRecord;\r\n    dataItem[\"ndefaultstatus\"] = transactionStatus.YES;\r\n    let dataState = undefined;\r\n    if (defaultParam.screenName === \"IDS_SECTION\") {\r\n      dataState = this.state.sectionDataState;\r\n    }\r\n    const inputParam = {\r\n      inputData: {\r\n        [methodUrl]: dataItem,\r\n        userinfo: this.props.Login.userInfo,\r\n      },\r\n      classUrl: \"instrument\",\r\n      operation: \"setDefault\",\r\n      methodUrl: methodUrl,\r\n      dataState,\r\n    };\r\n    const masterData = this.props.Login.masterData;\r\n\r\n    if (\r\n      showEsign(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode,\r\n        defaultParam.ncontrolCode\r\n      )\r\n    ) {\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: {\r\n          loadEsign: true,\r\n          screenData: { inputParam, masterData },\r\n          openChildModal: true,\r\n          screenName: \"Test\",\r\n          operation: defaultParam.operation,\r\n          selectedRecord: {},\r\n        },\r\n      };\r\n      this.props.updateStore(updateInfo);\r\n    } else {\r\n      this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n    }\r\n  };\r\n\r\n  onSwitchChange = (item, key, methodUrl) => {\r\n    let dataItem = item;\r\n    dataItem[\"ndefaultstatus\"] = 3;\r\n    const inputParam = {\r\n      inputData: {\r\n        [key]: dataItem,\r\n        userinfo: this.props.userInfo,\r\n      },\r\n      classUrl: \"testmaster\",\r\n      operation: \"setDefault\",\r\n      methodUrl: methodUrl,\r\n    };\r\n    this.props.crudMaster(\r\n      inputParam,\r\n      this.props.masterData,\r\n      \"openChildModal\",\r\n      {}\r\n    );\r\n  };\r\n\r\n  deleteTabFileRecord = (deleteParam) => {\r\n        let inputData = [];\r\n        const screenName = deleteParam.screenName;\r\n        if (screenName === \"IDS_INSTRUMENTVALIDATIONFILE\") {\r\n          if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n            const dataState = this.state.sectionDataState;\r\n            inputData[\"InstrumentFile\"] = {\r\n                                          ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n                                          ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n                                          ninstrumentlogcode: this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode,\r\n                                          sfilename: deleteParam.selectedRecord.sfilename,\r\n                                          sfiledesc: deleteParam.selectedRecord.sfiledesc,\r\n                                          nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\r\n                                          nlinkcode: deleteParam.selectedRecord.nlinkcode,\r\n                                          ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\r\n                                          slinkname: deleteParam.selectedRecord.slinkname,\r\n                                          screateddate: deleteParam.selectedRecord.screateddate,\r\n                                          ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n                                          sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n\r\n                                        };\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            const inputParam = {\r\n                    methodUrl: \"InstrumentValidationFile\",\r\n                    classUrl: this.props.Login.inputParam.classUrl,\r\n                    inputData: inputData,\r\n                    operation: deleteParam.operation,\r\n                    dataState: dataState,\r\n                    selectedRecord: {...this.state.selectedRecord},\r\n                    postParam: {\r\n                      inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\",\r\n                      fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                  }\r\n                };\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)) \r\n            {\r\n                const updateInfo = {\r\n                                    typeName: DEFAULT_RETURN,\r\n                                    data: {\r\n                                      loadEsign: true,\r\n                                      screenData: { inputParam, masterData },\r\n                                      openChildModal: true,\r\n                                      screenName: screenName,\r\n                                      operation: deleteParam.operation,\r\n                                    },\r\n                                  };\r\n                  this.props.updateStore(updateInfo);\r\n            } else {\r\n              this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n            }\r\n          }\r\n          else{\r\n toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_DISPOSEDINSTRUMENT\",\r\n        })\r\n      );\r\n\r\n          }\r\n        } \r\n        else if (screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\") {\r\n          if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n                const dataState = this.state.sectionDataState;\r\n                inputData[\"InstrumentFile\"] = {\r\n                                                ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n\r\n                                                ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n                                                ninstrumentlogcode:this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode,\r\n                                                sfilename: deleteParam.selectedRecord.sfilename,\r\n                                                sfiledesc: deleteParam.selectedRecord.sfiledesc,\r\n                                                nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\r\n                                                nlinkcode: deleteParam.selectedRecord.nlinkcode,\r\n                                                ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\r\n                                                slinkname: deleteParam.selectedRecord.slinkname,\r\n                                                screateddate: deleteParam.selectedRecord.screateddate,\r\n                                                ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n                                                sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n                                              };\r\n                inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                const inputParam = {\r\n                                  methodUrl: \"InstrumentCalibrationFile\",\r\n                                  classUrl: this.props.Login.inputParam.classUrl,\r\n                                  inputData: inputData,\r\n                                  operation: deleteParam.operation,\r\n                                  dataState: dataState,\r\n                                  selectedRecord: {...this.state.selectedRecord},\r\n                                  postParam: {\r\n                                    inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\",\r\n                                    fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                                }\r\n                              };\r\n                const masterData = this.props.Login.masterData;\r\n              if (showEsign( this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)  ) \r\n              {\r\n                    const updateInfo = {\r\n                                      typeName: DEFAULT_RETURN,\r\n                                      data: {\r\n                                        loadEsign: true,\r\n                                        screenData: { inputParam, masterData },\r\n                                        openChildModal: true,\r\n                                        screenName: screenName,\r\n                                        operation: deleteParam.operation,\r\n                                        popUp: undefined,\r\n                                      },\r\n                                    };\r\n                    this.props.updateStore(updateInfo);\r\n              } \r\n              else {\r\n                this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n              }\r\n            }\r\n            else{\r\n              toast.warn(\r\n                this.props.intl.formatMessage({\r\n                  id: \"IDS_DISPOSEDINSTRUMENT\",\r\n                })\r\n              );\r\n          \r\n            }\r\n    } else if (screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\") {\r\n      if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentFile\"] = {\r\n\r\n        ninstrumentfilecode: deleteParam.selectedRecord.ninstrumentfilecode,\r\n        ninstrumentlogcode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n            ninstrumentcode:this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n\r\n        sfilename: deleteParam.selectedRecord.sfilename,\r\n        sfiledesc: deleteParam.selectedRecord.sfiledesc,\r\n        nattachmenttypecode: deleteParam.selectedRecord.nattachmenttypecode,\r\n        nlinkcode: deleteParam.selectedRecord.nlinkcode,\r\n        ninstrumentlogtypecode: deleteParam.selectedRecord.ninstrumentlogtypecode,\r\n        slinkname: deleteParam.selectedRecord.slinkname,\r\n        screateddate: deleteParam.selectedRecord.screateddate,\r\n        ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n        sinstrumentcatname: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n      };\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentMaintenanceFile\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: deleteParam.operation,\r\n        dataState: dataState,\r\n        selectedRecord: {...this.state.selectedRecord},\r\n        postParam: {\r\n          inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\",\r\n          fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      }\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          deleteParam.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openChildModal: true,\r\n            screenName: screenName,\r\n            operation: deleteParam.operation,\r\n            popUp: undefined,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n      }\r\n    \r\n  }\r\n  else{\r\n    toast.warn(\r\n      this.props.intl.formatMessage({\r\n        id: \"IDS_DISPOSEDINSTRUMENT\",\r\n      })\r\n    );\r\n\r\n  }\r\n}\r\n \r\n  \r\n  };\r\n\r\n\r\n  DeleteInstrument = (operation, ncontrolCode) => {\r\n    let inputData = [];\r\n    if (operation.screenName === \"IDS_SECTION\") {\r\n      if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"instrumentsection\"] = {\r\n        nsitecode: this.props.Login.userInfo.nmastersitecode,\r\n      };\r\n      inputData[\"instrumentsection\"][\"ninstrumentsectioncode\"] =\r\n        operation.selectedRecord.ninstrumentsectioncode;\r\n      inputData[\"instrumentsection\"][\"ninstrumentcode\"] =\r\n        operation.selectedRecord.ninstrumentcode;\r\n      inputData[\"instrumentsection\"][\"ndefaultstatus\"] =\r\n        operation.selectedRecord.ndefaultstatus;\r\n        inputData[\"instrumentsection\"][\"ssectionname\"] =\r\n        operation.selectedRecord.ssectionname;\r\n        inputData[\"instrumentsection\"][\"susername\"] =\r\n        operation.selectedRecord.susername;\r\n        inputData[\"instrumentsection\"][\"nusercode\"] =\r\n        operation.selectedRecord.nusercode;\r\n        inputData[\"instrumentsection\"][\"nsectioncode\"] =\r\n        operation.selectedRecord.nsectioncode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"Section\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n        selectedRecord: {...this.state.selectedRecord},\r\n        postParam: {\r\n          inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\",\r\n          fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      }\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          operation.ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openChildModal: true,\r\n            screenName: operation.screenName,\r\n            operation: operation.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n      }\r\n    }\r\n    else{\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_DISPOSEDINSTRUMENT\",\r\n        })\r\n      );\r\n\r\n    }\r\n    }\r\n    else if (operation.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentValidation\"] = {\r\n        ninstrumentvalidationcode:\r\n          this.props.Login.masterData.selectedInstrumentValidation\r\n            .ninstrumentvalidationcode,\r\n      };\r\n      inputData[\"InstrumentValidation\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentValidation\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n        selectedRecord: {...this.state.selectedRecord},\r\n        postParam: {\r\n          inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\",\r\n          fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      }\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openChildModal: true,\r\n            screenName: operation.screenName,\r\n            operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n      }\r\n    }\r\n    else{\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_DISPOSEDINSTRUMENT\",\r\n        })\r\n      );\r\n    }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n      inputData[\"InstrumentCalibration\"] = {\r\n        ninstrumentcalibrationcode:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ninstrumentcalibrationcode,\r\n            ncalibrationstatus:\r\n          this.props.Login.masterData.selectedInstrumentCalibration\r\n            .ncalibrationstatus,\r\n      };\r\n      inputData[\"InstrumentCalibration\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n      inputData[\"nFlag\"] = operation.nFlag;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentCalibration\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        selectedRecord: {...this.state.selectedRecord},\r\n        postParam: {\r\n          inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\",\r\n          fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      }\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openChildModal: true,\r\n            screenName: operation.screenName,\r\n            operation        \r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n      }\r\n    }\r\n    else{\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_DISPOSEDINSTRUMENT\",\r\n        })\r\n      );\r\n    }\r\n    } else if (operation.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n      const dataState = this.state.sectionDataState;\r\n      inputData[\"InstrumentMaintenance\"] = {\r\n        ninstrumentmaintenancecode:\r\n          this.props.Login.masterData.selectedInstrumentMaintenance\r\n            .ninstrumentmaintenancecode,\r\n      };\r\n      inputData[\"InstrumentMaintenance\"][\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n      const inputParam = {\r\n        methodUrl: \"InstrumentMaintenance\",\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: \"delete\",\r\n        dataState: dataState,\r\n        selectedRecord: {...this.state.selectedRecord},\r\n        postParam: {\r\n          inputListName: \"Instrument\", selectedObject: \"selectedInstrument\", primaryKeyField: \"ninstrumentcode\",\r\n          fetchUrl: \"instrument/getActiveInstrumentById\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      }\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openChildModal: true,\r\n            screenName: operation.screenName,\r\n            operation: operation.operation,\r\n            popUp: 'IDS_INSTRUMENTMAINTENANCE'\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n      }\r\n    }\r\n    else{\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_DISPOSEDINSTRUMENT\",\r\n        })\r\n      );\r\n    }\r\n\r\n    } else {\r\n      inputData[\"instrument\"] = this.props.Login.masterData.selectedInstrument;\r\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n      const postParam = {\r\n        inputListName: \"Instrument\",\r\n        selectedObject: \"selectedInstrument\",\r\n        primaryKeyField: \"ninstrumentcode\",\r\n        primaryKeyValue:\r\n          this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n        fetchUrl: \"instrument/getInstrument\",\r\n        fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      };\r\n\r\n      const inputParam = {\r\n        methodUrl: \"Instrument\",\r\n        postParam,\r\n        classUrl: this.props.Login.inputParam.classUrl,\r\n        inputData: inputData,\r\n        operation: operation.operation,\r\n        selectedRecord: {...this.state.selectedRecord}\r\n      };\r\n      const masterData = this.props.Login.masterData;\r\n      if (\r\n        showEsign(\r\n          this.props.Login.userRoleControlRights,\r\n          this.props.Login.userInfo.nformcode,\r\n          ncontrolCode\r\n        )\r\n      ) {\r\n        const updateInfo = {\r\n          typeName: DEFAULT_RETURN,\r\n          data: {\r\n            loadEsign: true,\r\n            screenData: { inputParam, masterData },\r\n            openModal: true,\r\n            screenName: \"Instrument\",\r\n            operation: operation.operation,\r\n          },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n      } else {\r\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n      }\r\n    }\r\n  \r\n \r\n  };\r\n\r\n  deleteAttachment = (event, file, fieldName) => {\r\n    if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = deleteAttachmentDropZone(\r\n      selectedRecord[fieldName],\r\n      file\r\n    );\r\n\r\n    this.setState({\r\n      selectedRecord,\r\n      actionType: \"delete\",\r\n    });\r\n  }\r\n  else{\r\n    toast.warn(\r\n      this.props.intl.formatMessage({\r\n        id: \"IDS_DISPOSEDINSTRUMENT\",\r\n      })\r\n    );\r\n  }\r\n  };\r\n\r\n  render() {\r\n    console.log(\"master main\", this.props.Login);\r\n    let mandatoryFields = [];\r\n    if (this.props.Login.screenName === \"IDS_INSTRUMENT\") {\r\n      mandatoryFields.push(\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTCATEGORY\",\r\n          dataField: \"ninstrumentcatcode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTID\",\r\n          dataField: \"sinstrumentid\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTNAME\",\r\n          dataField: \"ninstrumentnamecode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        // {\r\n        //   mandatory: true,\r\n        //   idsName: \"IDS_MANUFACTURERDATE\",\r\n        //   dataField: \"dmanufacdate\",\r\n        //   mandatoryLabel: \"IDS_CHOOSE\",\r\n        //   controlType: \"selectbox\",\r\n        // },\r\n       \r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SERVICEBY\",\r\n          dataField: \"nservicecode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTAVAILABLESITE\",\r\n          dataField: \"nregionalsitecode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n       \r\n      //   {\r\n         \r\n      //         mandatory: true,\r\n\r\n      //         idsName: \"IDS_VALIDATIONSTATUS\",\r\n      //         dataField: \"validation\",\r\n      //         mandatoryLabel: \"IDS_SELECT\",\r\n      //         controlType: \"selectbox\",\r\n      //   },\r\n      //   {\r\n      //         mandatory: true,\r\n      //         idsName: \"IDS_CALIBRATIONSTATUS\",\r\n      //         dataField: \"calibration\",\r\n      //         mandatoryLabel: \"IDS_SELECT\",\r\n      //         controlType: \"selectbox\",\r\n      //   },\r\n      //  {\r\n      //     mandatory: true,\r\n      //     idsName: \"IDS_MAINTENANCESTATUS\",\r\n      //     dataField: \"maintenance\",\r\n      //     mandatoryLabel: \"IDS_SELECT\",\r\n      //     controlType: \"selectbox\",\r\n      //   }, \r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INSTRUMENTSTATUS\",\r\n          dataField: \"ntranscode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n     \r\n      );\r\n      if (this.state.selectedRecord[\"nsectioncode\"]) {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_INCHARGE\",\r\n          dataField: \"nusercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n      if (this.props.Login.operation === \"create\") {\r\n        mandatoryFields.push({\r\n         \r\n          mandatory: true,\r\n          idsName: \"IDS_VALIDATIONSTATUS\",\r\n          dataField: \"validation\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n      if (this.props.Login.operation === \"create\" && this.props.Login.CalibrationRequired ===transactionStatus.YES) {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_CALIBRATIONSTATUS\",\r\n          dataField: \"calibration\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },  \r\n         {\r\n          mandatory: true,\r\n          idsName: \"IDS_CALIBRATIONINTERVAL\",\r\n          dataField: \"nnextcalibration\",\r\n          mandatoryLabel: \"IDS_ENTER\",\r\n          controlType: \"textbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_PERIOD\",\r\n          dataField: \"nnextcalibrationperiod\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        }\r\n        );\r\n\r\n      }\r\n      if (this.props.Login.operation === \"create\") {\r\n        mandatoryFields.push({\r\n          mandatory: true,\r\n          idsName: \"IDS_MAINTENANCESTATUS\",\r\n          dataField: \"maintenance\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        });\r\n      }\r\n    } else if (this.props.Login.screenName === \"IDS_SECTION\")\r\n      mandatoryFields.push(\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_SECTION\",\r\n          dataField: \"nsectioncode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        },\r\n        {\r\n          mandatory: true,\r\n          idsName: \"IDS_INCHARGE\",\r\n          dataField: \"nusercode\",\r\n          mandatoryLabel: \"IDS_SELECT\",\r\n          controlType: \"selectbox\",\r\n        }\r\n      );\r\n    else if (this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" ||\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ||\r\n      this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\"\r\n    ) {\r\n      if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n        mandatoryFields.push(\r\n          { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n          { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n          );\r\n            } else {\r\n              mandatoryFields.push(\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"file\"}\r\n                );\r\n            }\r\n      // mandatoryFields.push({\r\n      //   idsName: \"IDS_FILE\",\r\n      //   dataField: \"sfilename\",\r\n      //   mandatory: true,\r\n      //   mandatoryLabel: \"IDS_CHOOSE\",\r\n      //   controlType: \"file\",\r\n      // });\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCE\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    } else if (this.props.Login.modalTitle === \"IDS_OPENDATE\") {\r\n      mandatoryFields.push({\r\n        mandatory: true,\r\n        idsName: \"IDS_STATUS\",\r\n        dataField: \"ntranscode\",\r\n        mandatoryLabel: \"IDS_SELECT\",\r\n        controlType: \"selectbox\",\r\n      });\r\n    }\r\n\r\n    const addId =\r\n      this.state.controlMap.has(\"AddInstrument\") &&\r\n      this.state.controlMap.get(\"AddInstrument\").ncontrolcode;\r\n    const editId =\r\n      this.state.controlMap.has(\"EditInstrument\") &&\r\n      this.state.controlMap.get(\"EditInstrument\").ncontrolcode;\r\n    const deleteId =\r\n      this.state.controlMap.has(\"DeleteInstrument\") &&\r\n      this.state.controlMap.get(\"DeleteInstrument\").ncontrolcode;\r\n    //Added by sonia on 30th Sept 2024 for Jira idL:ALPD-4940  \r\n    const autoCalibrationId =\r\n      this.state.controlMap.has(\"AutoCalibration\") &&\r\n      this.state.controlMap.get(\"AutoCalibration\").ncontrolcode;\r\n\r\n    const { selectedInstrument } = this.props.Login.masterData;\r\n    const filterParam = {\r\n      inputListName: \"Instrument\",\r\n      selectedObject: \"selectedInstrument\",\r\n      primaryKeyField: \"ninstrumentcode\",\r\n      fetchUrl: \"instrument/getInstrument\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n    };\r\n   // const breadCrumbData = this.state.filterData || [];\r\n    let breadCrumbData = []; //this.props.Login.masterData.defaultInstrumentCatValue || [];\r\n  \r\n    breadCrumbData = [\r\n      {\r\n          \"label\": \"IDS_INSTRUMENTCATEGORY\",\r\n          //\"value\": this.props.Login.masterData.defaultInstrumentCatValue ? this.props.Login.masterData.defaultInstrumentCatValue.label : \"-\"\r\n           \"value\": this.props.Login.masterData.defaultInstrumentCatValue ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname : \"-\"\r\n        } \r\n  ];\r\n\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          {breadCrumbData.length > 0 ? (\r\n            <Affix top={53}>\r\n              <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row noGutters={true}>\r\n            <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n              <ListMaster\r\n                formatMessage={this.props.intl.formatMessage}\r\n                screenName={\"Instrument\"}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={\r\n                  this.props.Login.masterData.searchedData ||\r\n                  this.props.Login.masterData.Instrument\r\n                }\r\n                getMasterDetail={(Instrument) =>\r\n                  this.props.getInstrumentDetail(\r\n                    Instrument,\r\n                    this.props.Login.userInfo,\r\n                    this.props.Login.masterData\r\n                  )\r\n                }\r\n                selectedMaster={this.props.Login.masterData.selectedInstrument}\r\n                primaryKeyField=\"ninstrumentcode\"\r\n                mainField=\"sinstrumentname\"\r\n                firstField=\"sinstrumentid\"\r\n                secondField=\"sinstrumentcatname\"\r\n                isIDSField=\"Yes\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                searchRef={this.searchRef}\r\n                addId={addId}\r\n                hidePaging={false}\r\n                reloadData={this.reloadData}\r\n                openModal={() =>\r\n                  this.props.getInstrumentCombo(\r\n                    \"IDS_INSTRUMENT\",\r\n                    \"create\",\r\n                    \"ninstrumentcode\",\r\n                    this.props.Login.masterData,\r\n                    this.props.Login.userInfo,\r\n                    addId\r\n                  )\r\n                }\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilterIcon={true}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    IDS_INSTRUMENTCATEGORYFILTER: (\r\n                      <InstrumentCategoryFilter\r\n                        filterInstrumentCategory={\r\n                          this.state.filterInstrumentCategory || []\r\n                        }\r\n                        nfilterInstrumentCategory={\r\n                          this.state.nfilterInstrumentCategory || {}\r\n                        }\r\n                        onComboChange={this.onComboChange}\r\n                      />\r\n                    ),\r\n                  },\r\n                ]}\r\n              />\r\n            </Col>\r\n            <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                <div className=\"sidebar-view-btn-block\">\r\n                    <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                        {!this.props.sidebarview ?                    \r\n                            <i class=\"fa fa-less-than\"></i> :\r\n                            <i class=\"fa fa-greater-than\"></i> \r\n                        }\r\n                    </div>\r\n                </div>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <ContentPanel className=\"panel-main-content\">\r\n                    <Card className=\"border-0\">\r\n                      {this.props.Login.masterData.selectedInstrument ? (\r\n                        <>\r\n                          <Card.Header>\r\n                            {/* <ReactTooltip\r\n                              place=\"bottom\"\r\n                              globalEventOff=\"click\"\r\n                              id=\"tooltip_list_wrap\"\r\n                            /> */}\r\n                            <Card.Title className=\"product-title-main\">\r\n                              {\r\n                                this.props.Login.masterData.selectedInstrument\r\n                                  .sinstrumentname\r\n                              }\r\n                            </Card.Title>\r\n                            <Card.Subtitle>\r\n                              <div className=\"d-flex product-category\">\r\n                                <h2 className=\"product-title-sub flex-grow-1\">\r\n                                <MediaLabel >\r\n                                  {this.props.intl.formatMessage({ id: \"IDS_STATUS\" })} :\r\n                                                                </MediaLabel>\r\n                                                                <MediaLabel\r\n                                                                    className={`btn btn-outlined ${this.props.Login.masterData\r\n                                                                      .selectedInstrument.ninstrumentstatus===transactionStatus.ACTIVE?\"outline-success\":this.props.Login.masterData\r\n                                                                      .selectedInstrument.ninstrumentstatus===transactionStatus.DEACTIVE?\r\n                                                                        \"outline-danger\":this.props.Login.masterData\r\n                                                                        .selectedInstrument.ninstrumentstatus===transactionStatus.Offsite ?\"outline-secondary\":this.props.Login.masterData\r\n                                                                        .selectedInstrument.ninstrumentstatus ===transactionStatus.Disposed ?\"outline-danger\":\"\" } btn-sm ml-3`}>\r\n                                                                    {this.props.Login.masterData\r\n                                                                      .selectedInstrument.sactivestatus &&\r\n                                                                      this.props.Login.masterData\r\n                                                                      .selectedInstrument.sactivestatus }\r\n                                                                </MediaLabel>\r\n\r\n                                </h2>\r\n                                <div className=\"d-inline\">\r\n                                {/* Added by sonia on 30th Sept 2024 for Jira idL:ALPD-4940  */}\r\n                                {\r\n                                (this.props.Login.masterData.selectedInstrument.ncalibrationreq ===transactionStatus.YES &&\r\n                                  this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode)? \r\n                                  \r\n                                  <Nav.Link\r\n                                  name=\"autocalibrationInstrument\"\r\n                                  data-tip={this.props.intl.formatMessage({id: \"IDS_ENABLEDISABLEAUTOCALIBRATION\",})}\r\n                                  hidden={this.state.userRoleControlRights.indexOf(autoCalibrationId ) === -1}\r\n                                  className=\"btn btn-circle outline-grey mr-2\" onClick={(e) =>\r\n                                  this.getAutoCalibration(this.props.Login.masterData,this.props.Login.userInfo, autoCalibrationId)}\r\n                                >\r\n                                <FontAwesomeIcon icon={faThumbsUp} />\r\n                                </Nav.Link>\r\n  :\"\"}\r\n                                  <Nav.Link\r\n                                    name=\"editInstrument\"\r\n                                    data-tip={this.props.intl.formatMessage({\r\n                                      id: \"IDS_EDIT\",\r\n                                    })}\r\n                                 //   data-for=\"tooltip_list_wrap\"\r\n                                    hidden={\r\n                                      this.state.userRoleControlRights.indexOf(\r\n                                        editId\r\n                                      ) === -1\r\n                                    }\r\n                                    className=\"btn btn-circle outline-grey mr-2\"\r\n                                    onClick={(e) =>\r\n                                      this.props.getInstrumentCombo(\r\n                                        \"IDS_INSTRUMENT\",\r\n                                        \"update\",\r\n                                        \"ninstrumentcode\",\r\n                                        this.props.Login.masterData,\r\n                                        this.props.Login.userInfo,\r\n                                        editId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                  </Nav.Link>\r\n                                  <Nav.Link\r\n                                    name=\"deleteInstrument\"\r\n                                    className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                    data-tip={this.props.intl.formatMessage({\r\n                                      id: \"IDS_DELETE\",\r\n                                    })}\r\n                                 //   data-for=\"tooltip_list_wrap\"\r\n                                    hidden={\r\n                                      this.state.userRoleControlRights.indexOf(\r\n                                        deleteId\r\n                                      ) === -1\r\n                                    }\r\n                                    onClick={() =>\r\n                                      this.ConfirmDelete(\r\n                                        {\r\n                                          operation: \"delete\",\r\n                                          screenName: \"IDS_INSTRUMENT\",\r\n                                        },\r\n                                        deleteId\r\n                                      )\r\n                                    }\r\n                                  >\r\n                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                  </Nav.Link>\r\n                                </div>\r\n                              </div>\r\n                            </Card.Subtitle>\r\n                          </Card.Header>\r\n                          <Card.Body>\r\n                            <Row>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTNAME\"\r\n                                      message=\"Instrumentname\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentname\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTID\"\r\n                                      message=\"Instrument Id\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentid\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MODELNO\"\r\n                                      message=\"Modelno\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.smodelnumber ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.smodelnumber\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.smodelnumber}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_SERVICEBY\"\r\n                                      message=\"Service By\"\r\n                                    />\r\n                                  </FormLabel>\r\n\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.nservicecode ===-1?'-'\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sserviceby}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PONO\"\r\n                                      message=\"PO No.\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.spono === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.spono.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.spono}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PODATE\"\r\n                                      message=\"PoDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.dpodate === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.dpodate === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.spodate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.spodate) : this.props.Login.spodate\r\n                                              .selectedInstrument.spodate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MANUFACTURERDATE\"\r\n                                      message=\"ManufactureDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.smanufacdate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.smanufacdate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.smanufacdate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.smanufacdate) : this.props.Login.masterData\r\n                                              .selectedInstrument.smanufacdate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MANUFACTURENAME\"\r\n                                      message=\"Manufacturename\"\r\n                                    />\r\n                                  </FormLabel>\r\n\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.nmanufcode ===-1?'-'\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.smanufname}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                             \r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTAVAILABLESITE\"\r\n                                      message=\"Instrument Location Site\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sregionalsitename === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sregionalsitename.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sregionalsitename}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTRUMENTLOCATION\"\r\n                                      message=\"Instrument Location\"\r\n                                    />\r\n                                  </FormLabel>\r\n\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.ninstrumentlocationcode ===-1?'-'\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sinstrumentlocationname}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_RECEIVEDDATE\"\r\n                                      message=\"ReceiveDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sreceiveddate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sreceiveddate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sreceiveddate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sreceiveddate) : this.props.Login.sreceiveddate\r\n                                              .selectedInstrument.sreceiveddate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_INSTALLATIONDATE\"\r\n                                      message=\"InstallationDate\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sinstallationdate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sinstallationdate\r\n                                        .length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sinstallationdate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sinstallationdate) : this.props.Login.sinstallationdate\r\n                                              .selectedInstrument.sinstallationdate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_WARRANTYEXPIRY\"\r\n                                      message=\"Warranty Expiry Date\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sexpirydate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sexpirydate.length ===\r\n                                      0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sexpirydate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sexpirydate) : this.props.Login.sexpirydate\r\n                                              .selectedInstrument.sexpirydate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_SERVICEDATE\"\r\n                                      message=\"Service in Date\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sservicedate ===\r\n                                      null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sservicedate.length ===\r\n                                      0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sservicedate ?\r\n                                        rearrangeDateFormatDateOnly(this.props.Login.userInfo,\r\n                                          this.props.Login.masterData\r\n                                            .selectedInstrument.sservicedate) : this.props.Login.sservicedate\r\n                                              .selectedInstrument.sservicedate}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_SERIALNO\"\r\n                                      message=\"Serialno\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sserialno===null||\r\n                                        this.props.Login.masterData.selectedInstrument.sserialno.length===0?\"-\":\r\n                                        this.props.Login.masterData.selectedInstrument.sserialno\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n\r\n                            {this.props.Login.masterData.SelectedInsCat && this.props.Login.masterData.SelectedInsCat.ncalibrationreq !== undefined && this.props.Login.masterData.SelectedInsCat.ncalibrationreq === transactionStatus.YES?\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_CALIBRATIONINTERVALPERIOD\"\r\n                                      message=\"Calibration Interval Period\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData.selectedInstrument.nnextcalibration !== null\r\n                                     && this.props.Login.masterData.selectedInstrument.nnextcalibration !== 0 ? \r\n                                       this.props.Login.masterData.selectedInstrument.nnextcalibration : \"-\"} { }\r\n                                    {this.props.Login.masterData.selectedInstrument.snextcalibrationperiod === null ||\r\n                                      this.props.Login.masterData.selectedInstrument.nnextcalibrationperiod === -1\r\n                                      ? \"\"\r\n                                      : this.props.Login.masterData.selectedInstrument.snextcalibrationperiod}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col> :\"\"}\r\n\r\n                              {/* <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PERIOD\"\r\n                                      message=\"Period\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.snextcalibrationperiod === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.snextcalibrationperiod.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.snextcalibrationperiod}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col> */}\r\n\r\n                              \r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_SUPPLIER\"\r\n                                      message=\"Supplier\"\r\n                                    />\r\n                                  </FormLabel>\r\n\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.nsuppliercode ===-1?'-'\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.ssuppliername}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PURCHASECOST\"\r\n                                      message=\"Purchase Cost\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.npurchasecost === null ||this.props.Login.masterData\r\n                                      .selectedInstrument.npurchasecost===0.00\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.npurchasecost}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              \r\n                            \r\n\r\n                             \r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_SOFTWAREINFORMATION\"\r\n                                      message=\"Software Information\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.ssoftwareinformation === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.ssoftwareinformation.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.ssoftwareinformation}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_PERFORMNACECAPABILITIES\"\r\n                                      message=\"Performance Capabilities\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sperformancecapabilities === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sperformancecapabilities.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sperformancecapabilities}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_ACCEPTANCECRETERIA\"\r\n                                      message=\"Acceptance Creteria\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sacceptancecriteria === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sacceptancecriteria.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sacceptancecriteria}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_REMARKS\"\r\n                                      message=\"Remarks\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sremarks === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sremarks.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sremarks}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_DESCRIPTION\"\r\n                                      message=\"Description\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData\r\n                                      .selectedInstrument.sdescription === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sdescription.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sdescription}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                             \r\n                             \r\n                            \r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_DEFAULTSTATUS\"\r\n                                      message=\"Default Status\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sdefaultstatus\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_MOVEMENT\"\r\n                                      message=\"Movement\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData && this.props.Login.masterData\r\n                                      .selectedInstrument.smovement === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.smovement.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.smovement}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              <Col md={4}>\r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_ASSOCIATEDDOCUMENT\"\r\n                                      message=\"Associated Document\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {this.props.Login.masterData && this.props.Login.masterData\r\n                                      .selectedInstrument.sassociateddocument === null ||\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sassociateddocument.length === 0\r\n                                      ? \"-\"\r\n                                      : this.props.Login.masterData\r\n                                        .selectedInstrument.sassociateddocument}\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>\r\n                              {/* Added by sonia on 30th Sept 2024 for Jira idL:ALPD-4940        */}\r\n                              <Col md={4}>   \r\n                                <FormGroup>\r\n                                  <FormLabel>\r\n                                    <FormattedMessage\r\n                                      id=\"IDS_ENABLEDISABLEAUTOCALIBRATION\"\r\n                                      message=\"Enable/Disable Auto Calibration\"\r\n                                    />\r\n                                  </FormLabel>\r\n                                  <ReadOnlyText>\r\n                                    {\r\n                                      this.props.Login.masterData\r\n                                        .selectedInstrument.sautocalibration\r\n                                    }\r\n                                  </ReadOnlyText>\r\n                                </FormGroup>\r\n                              </Col>        \r\n                              \r\n                              \r\n                            </Row>\r\n                            {selectedInstrument && (\r\n                              <CustomTab\r\n                                tabDetail={this.tabDetail()}\r\n                                onTabChange={this.onTabChange}\r\n                              />\r\n                            )}\r\n                          </Card.Body>\r\n                        </>\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </Card>\r\n                  </ContentPanel>\r\n                </Col>\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n        {(this.props.Login.openModal || this.props.Login.openChildModal) && (\r\n          <SlideOutModal\r\n            show={(this.props.Login.openModal || this.props.Login.openChildModal)}\r\n            closeModal={this.closeModal}\r\n            operation={this.props.Login.operation}\r\n            size={this.props.Login.loadEsign ? \"lg\" : this.props.Login.openModal ? \"xl\" : this.props.Login.openChildModal ? \"lg\" : \"lg\"}\r\n            inputParam={this.props.Login.inputParam}\r\n            screenName={this.props.Login.screenName}\r\n            showSaveContinue={this.props.Login.screenName === \"IDS_INSTRUMENT\" || this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ||\r\n                              this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATIONFILE\" || this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATIONFILE\" ||\r\n                              this.props.Login.screenName === \"IDS_INSTRUMENTMAINTENANCEFILE\" ?true:false}\r\n            onSaveClick={this.onSaveClick}\r\n            esign={this.props.Login.loadEsign}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            addComponent={\r\n              this.props.Login.loadEsign ? (\r\n                <Esign\r\n                  operation={this.props.Login.operation}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  inputParam={this.props.Login.inputParam}\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_INSTRUMENT\" ? (\r\n                <AddInstrument\r\n                  onNumericInputOnChange={this.onNumericInputOnChange}\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onComboChange={this.onComboChange}\r\n                  InstrumentCategory={this.props.Login.InstrumentCategory}\r\n                  Supplier={this.props.Login.Supplier}\r\n                  InstrumentLocation={this.props.Login.InstrumentLocation}\r\n                  Manufacturer={this.props.Login.Manufacturer}\r\n                  InstrumentStatus={this.props.Login.InstrumentStatus}\r\n                  handleDateChange={this.handleDateChange}\r\n                  Lab={this.props.Login.Lab}\r\n                  Period={this.props.Login.Period}\r\n                  Site={this.props.Login.siteList}\r\n                  validateOpenDate={this.props.Login.validateOpenDate}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  ValidationStatus={this.props.Login.ValidationStatus}\r\n                  CalibrationStatus={this.props.Login.CalibrationStatus}\r\n                  MaintenanceStatus={this.props.Login.MaintenanceStatus}\r\n                  SectionUsers={this.props.Login.Users}\r\n                  operation={this.props.Login.operation}\r\n                  inputParam={this.props.inputParam}\r\n                  defaultValue={this.props.Login.edqmManufacturer}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  expiryDate={this.props.Login.expiryDate}\r\n                  CalibrationRequired ={this.props.Login.CalibrationRequired}\r\n                  InstrumentName={this.props.Login.instName}\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_SECTION\" ? (\r\n                <AddInstrumentSection\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  Lab={this.props.Login.Lab}\r\n                  Users={this.props.Login.Users}\r\n                  onComboChange={this.onComboChange}\r\n                  onSwitchChange={this.onSwitchChange}\r\n                  onInputOnChange={this.onInputOnChange}\r\n\r\n                />\r\n              ) : this.props.Login.screenName === \"IDS_INSTRUMENTVALIDATION\" ? (\r\n                <AddInstrumentValidation\r\n                  selectedRecord={this.state.selectedRecord || {}}\r\n                  ValidationStatus={this.props.Login.ValidationStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTVALIDATIONFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                  linkMaster={this.props.Login.linkMaster}\r\n                  // addInstrumentFile={this.props.addInstrumentFile}\r\n                  onComboChange={this.onComboChange}\r\n                  editFiles={this.props.Login.editFiles}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTCALIBRATION\" ? (\r\n                <AddInstrumentCalibration\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  CalibrationStatus={this.props.Login.CalibrationStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  nextcalibrationperiod={\r\n                    this.props.Login.masterData.selectedInstrument.nnextcalibration + \"-\"+this.props.Login.masterData.selectedInstrument.snextcalibrationperiod\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTCALIBRATIONFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                  onComboChange={this.onComboChange}\r\n                  linkMaster={this.props.Login.linkMaster}\r\n                  // addInstrumentFile={this.props.addInstrumentFile}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTMAINTENANCE\" ? (\r\n                <AddInstrumentMaintenance\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  MaintenanceStatus={this.props.Login.MaintenanceStatus}\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  instrumentid={\r\n                    this.props.Login.masterData.selectedInstrument.sinstrumentid\r\n                  }\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  currentTime={this.props.Login.currentTime}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                />\r\n              ) : this.props.Login.screenName ===\r\n                \"IDS_INSTRUMENTMAINTENANCEFILE\" ? (\r\n                <AddInstrumentFile\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  onDrop={this.onDropTestFile}\r\n                  label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                  deleteAttachment={this.deleteAttachment}\r\n                  maxSize={20}\r\n                  maxFiles={1}\r\n                  onComboChange={this.onComboChange}\r\n                  linkMaster={this.props.Login.linkMaster}\r\n                  // addInstrumentFile={this.props.addInstrumentFile}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )\r\n            }\r\n          />\r\n        )}\r\n\r\n        {this.props.Login.modalShow ? (\r\n          <ModalShow\r\n            modalShow={this.props.Login.modalShow}\r\n            closeModal={this.closeModalShow}\r\n            onSaveClick={this.onSaveModalClick}\r\n            validateEsign={this.validateEsign}\r\n            masterStatus={this.props.Login.masterStatus}\r\n            mandatoryFields={mandatoryFields}\r\n            updateStore={this.props.updateStore}\r\n            selectedRecord={this.state.selectedRecord || {}}\r\n            modalTitle={this.props.Login.modalTitle}\r\n            modalBody={\r\n                this.props.Login.modalTitle === \"IDS_OPENDATE\" ? (\r\n                <AddOpenDate\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  Status={\r\n                    this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\"\r\n                      ? this.props.Login.CalibrationStatus\r\n                      : this.props.Login.MaintenanceStatus\r\n                  }\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  esign={this.props.Login.loadEsign}\r\n                  currentTime={this.props.Login.currentTime}\r\n                />\r\n              ) : (\r\n                <AddCloseDate\r\n                  selectedRecord={this.props.Login.selectedRecord || {}}\r\n                  Status={\r\n                    this.props.Login.screenName === \"IDS_INSTRUMENTCALIBRATION\"\r\n                      ? this.props.Login.CalibrationStatus\r\n                      : this.props.Login.MaintenanceStatus\r\n                  }\r\n                  TimeZoneList={this.props.Login.TimeZoneList}\r\n                  onInputOnChange={this.onInputOnChange}\r\n                  handleDateChange={this.handleDateChange}\r\n                  onComboChange={this.onComboChange}\r\n                  userInfo={this.props.Login.userInfo}\r\n                  currentTime={this.props.Login.currentTime}\r\n                />\r\n              )\r\n            }\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n\r\n  onSaveInstrumentFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\" && selectedRecord.ssystemfilename !== undefined\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] =Lims_JSON_stringify(file.name,false) ;\r\n        tempData[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\"),false) ;\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n          tempData[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] =Lims_JSON_stringify( selectedRecord.sfilename,false) ;\r\n      instrumentFile[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\"),false)  ;\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n  }else {\r\n    // const tempData = Object.assign({}, instrumentFile);\r\n    instrumentFile[\"ninstrumentlogcode\"]=this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode;\r\n    instrumentFile[\"ninstrumentlogtypecode\"] = transactionStatus.ACTIVE;\r\n    instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nattachmenttypecode\"] =2;\r\n    // instrumentFileArray.push(tempData);\r\n    instrumentFile[\"sfilename\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkfilename?selectedRecord.slinkfilename.trim():\"\"),false) ;\r\n    instrumentFile[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkdescription ? selectedRecord.slinkdescription : \"\"),false) ;\r\n    instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n    // instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nfilesize\"] = 0;\r\n    instrumentFile[\"ninstrumentcode\"] = this.props.Login.masterData.selectedInstrumentValidation.ninstrumentcode;\r\n    instrumentFile[\"ninstrumentcatcode\"] = this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n    instrumentFileArray.push(instrumentFile);\r\n}\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n      \r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n          smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n           //ALPD-1628(while saving the file and link,audit trail is not captured the respective language)\r\n          slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n        },\r\n      },\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentFile\",\r\n      searchRef: this.searchRef,\r\n      selectedRecord: {...this.state.selectedRecord}\r\n    };\r\n    return inputParam;\r\n  };\r\n  onSaveInstrumentCalibrationFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\" && selectedRecord.ssystemfilename !== undefined\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] =Lims_JSON_stringify(file.name,false) ;\r\n        tempData[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash( selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\"),false);\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = 2;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n        tempData[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] =Lims_JSON_stringify(selectedRecord.sfilename,false) ;\r\n      instrumentFile[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\"),false) ;\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = 2;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n  }else {\r\n    // const tempData = Object.assign({}, instrumentFile);\r\n    instrumentFile[\"ninstrumentlogcode\"]=this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n    instrumentFile[\"ninstrumentlogtypecode\"] = 2;\r\n    instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nattachmenttypecode\"] = 2;\r\n    // instrumentFileArray.push(tempData);\r\n    instrumentFile[\"sfilename\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkfilename.trim()),false) ;\r\n    instrumentFile[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkdescription ? selectedRecord.slinkdescription : \"\"),false) ;\r\n    instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n    // instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nfilesize\"] = 0;\r\n    instrumentFile[\"ninstrumentlogcode\"] =\r\n    this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode;\r\n    instrumentFile[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n    instrumentFile[\"ninstrumentcode\"]=this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcode;\r\n    instrumentFileArray.push(instrumentFile);\r\n}\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n\r\n      // inputData: { userinfo: this.props.Login.userInfo },\r\n\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n          smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n          //ALPD-1628(while saving the file and link,audit trail is not captured the respective language)\r\n          slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n        },\r\n      },\r\n\r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentCalibrationFile\",\r\n      searchRef: this.searchRef,\r\n      selectedRecord: {...this.state.selectedRecord}\r\n    };\r\n    return inputParam;\r\n  };\r\n  onSaveInstrumentMaintenanceFile = (saveType, formRef) => {\r\n    const selectedRecord = this.state.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n\r\n    let isFileEdited = transactionStatus.NO;\r\n    let instrumentFileArray = [];\r\n    let instrumentFile = {\r\n      ninstrumentfilecode: selectedRecord.ninstrumentfilecode\r\n        ? selectedRecord.ninstrumentfilecode\r\n        : 0,\r\n      nstatus: transactionStatus.ACTIVE,\r\n    };\r\n    const formData = new FormData();\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n    if (\r\n      acceptedFiles &&\r\n      Array.isArray(acceptedFiles) &&\r\n      acceptedFiles.length > 0\r\n    ) {\r\n      acceptedFiles.forEach((file, index) => {\r\n        const tempData = Object.assign({}, instrumentFile);\r\n        const splittedFileName = file.name.split(\".\");\r\n        const fileExtension = file.name.split(\".\")[splittedFileName.length - 1];\r\n        const ssystemfilename = selectedRecord.ssystemfilename\r\n          ? selectedRecord.ssystemfilename.split(\".\")\r\n          : \"\";\r\n        const filesystemfileext = selectedRecord.ssystemfilename\r\n          ? file.name.split(\".\")[ssystemfilename.length - 1]\r\n          : \"\";\r\n        const uniquefilename =\r\n          nattachmenttypecode === attachmentType.FTP\r\n            ? selectedRecord.ninstrumentfilecode &&\r\n              selectedRecord.ninstrumentfilecode > 0 &&\r\n              selectedRecord.ssystemfilename !== \"\" && selectedRecord.ssystemfilename !== undefined\r\n              ? ssystemfilename[0] + \".\" + filesystemfileext\r\n              : create_UUID() + \".\" + fileExtension\r\n            : \"\";\r\n        tempData[\"sfilename\"] =Lims_JSON_stringify(file.name,false) ;\r\n        tempData[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.sfiledesc\r\n          ? selectedRecord.sfiledesc.trim()\r\n          : \"\"),false) ;\r\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n        tempData[\"ssystemfilename\"] = uniquefilename;\r\n        tempData[\"nfilesize\"] = file.size;\r\n        tempData[\"ninstrumentcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n        tempData[\"nattachmenttypecode\"] = 1;\r\n        tempData[\"ninstrumentlogtypecode\"] = 3;\r\n        tempData[\"ninstrumentlogcode\"] =\r\n          this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n          tempData[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n\r\n        formData.append(\"uploadedFile\" + index, file);\r\n        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n        instrumentFileArray.push(tempData);\r\n      });\r\n      formData.append(\"filecount\", acceptedFiles.length);\r\n      isFileEdited = transactionStatus.YES;\r\n    } else {\r\n      instrumentFile[\"sfilename\"] =Lims_JSON_stringify(selectedRecord.sfilename,false) ;\r\n      instrumentFile[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash (selectedRecord.sfiledesc\r\n        ? selectedRecord.sfiledesc.trim()\r\n        : \"\"),false) ;\r\n      instrumentFile[\"nlinkcode\"] = transactionStatus.NA;\r\n      instrumentFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n      instrumentFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n      instrumentFile[\"ninstrumentcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n      instrumentFile[\"nattachmenttypecode\"] = 1;\r\n      instrumentFile[\"ninstrumentlogtypecode\"] = 3;\r\n      instrumentFile[\"ninstrumentlogcode\"] =\r\n        this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n\r\n      instrumentFileArray.push(instrumentFile);\r\n    }\r\n  } else {\r\n    // const tempData = Object.assign({}, instrumentFile);\r\n    instrumentFile[\"ninstrumentlogcode\"]=this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n    instrumentFile[\"ninstrumentlogtypecode\"] = 3;\r\n    instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nattachmenttypecode\"] = 2;\r\n    // instrumentFileArray.push(tempData);\r\n    instrumentFile[\"sfilename\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkfilename.trim()),false) ;\r\n    instrumentFile[\"sfiledesc\"] =Lims_JSON_stringify(replaceBackSlash(selectedRecord.slinkdescription ? selectedRecord.slinkdescription : \"\"),false) ;\r\n    instrumentFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n    // instrumentFile[\"ssystemfilename\"] = \"\";\r\n    instrumentFile[\"nfilesize\"] = 0;\r\n    instrumentFile[\"ninstrumentlogcode\"] =\r\n    this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode;\r\n    instrumentFile[\"ninstrumentcatcode\"]=this.props.Login.masterData.selectedInstrument.ninstrumentcatcode;\r\n    instrumentFile[\"ninstrumentcode\"]=this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentcode;\r\n    instrumentFileArray.push(instrumentFile);\r\n}\r\n\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"instrumentFile\", JSON.stringify(instrumentFileArray));\r\n    const inputParam = {\r\n\r\n      // inputData: { userinfo: this.props.Login.userInfo },\r\n\r\n      inputData: {\r\n        userinfo: {\r\n          ...this.props.Login.userInfo,\r\n          sformname: Lims_JSON_stringify(this.props.Login.userInfo.sformname),\r\n          smodulename: Lims_JSON_stringify(this.props.Login.userInfo.smodulename),\r\n          //ALPD-1628(while saving the file and link,audit trail is not captured the respective language)\r\n          slanguagename: Lims_JSON_stringify(this.props.Login.userInfo.slanguagename)\r\n        },\r\n      },\r\n      \r\n      formData: formData,\r\n      isFileupload: true,\r\n      operation: this.props.Login.operation,\r\n      classUrl: \"instrument\",\r\n      saveType,\r\n      formRef,\r\n      methodUrl: \"InstrumentMaintenanceFile\",\r\n      searchRef: this.searchRef,\r\n      selectedRecord: {...this.state.selectedRecord}\r\n    };\r\n    return inputParam;\r\n  };\r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onDropTestFile = (attachedFiles, fieldName, maxSize) => {\r\n    let selectedRecord = this.state.selectedRecord || {};\r\n    selectedRecord[fieldName] = onDropAttachFileList(\r\n      selectedRecord[fieldName],\r\n      attachedFiles,\r\n      maxSize\r\n    );\r\n    this.setState({ selectedRecord, actionType: \"new\" });\r\n  };\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(\r\n        this.props.Login.masterData[\"selectedSection\"],\r\n        event.dataState\r\n      ),  \r\n      sectionDataState: event.dataState,\r\n    });\r\n  };\r\n  viewInstrumentFile = (filedata) => {\r\n    const inputParam = {\r\n      inputData: {\r\n        instrumentfile: filedata,\r\n        userinfo: this.props.Login.userInfo\r\n      },\r\n      classUrl: \"instrument\",\r\n      operation: \"view\",\r\n      methodUrl: \"AttachedInstrumentFile\",\r\n      screenName: \"IDS_INSTRUMENTVALIDATIONFILE\"\r\n    }\r\n    this.props.viewAttachment(inputParam);\r\n  }\r\n\r\n  // commonGetInsrumentCombo(screenName,addId){\r\n  //   if(screenName===\"IDS_SECTION\")\r\n  //   this.props.getAvailableInstData(this.props.Login.masterData.selectedInstrument,\"getInstrumentSection\",\"section\",screenName,this.props.Login.userInfo,addId,this.state.selectedRecord)\r\n  //   if(screenName===\"IDS_ADDINSTRUMENTMAINTENANCE\")\r\n  //   this.props.getDataForAddEditMaintenance(screenName,\"create\", this.props.Login.userInfo, addId,this.state.selectedRecord,this.props.Login.masterData)\r\n  //   if(screenName===\"IDS_INSTRUMENTCALIBRATION\")\r\n  //   this.props.getDataForAddEditCalibration(screenName,\"create\",\"section\",this.props.Login.userInfo,addId,this.state.selectedRecord,this.props.Login.masterData)\r\n  //   if(screenName===\"IDS_ADDINSTRUMENTMAINTENANCE\")\r\n\r\n  // }\r\n  \r\n  tabDetail = () => {\r\n    const tabMap = new Map();\r\n    const deleteSecId =\r\n      this.state.controlMap.has(\"DeleteSection\") &&\r\n      this.state.controlMap.get(\"DeleteSection\").ncontrolcode;\r\n    const defaultSecId =\r\n      this.state.controlMap.has(\"DefaultSection\") &&\r\n      this.state.controlMap.get(\"DefaultSection\").ncontrolcode;\r\n      if(this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode)\r\n    tabMap.set(\r\n      \"IDS_SECTION\",\r\n      <InstrumentSectionTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        dataState={this.props.Login.dataState}\r\n        masterData={this.props.Login.masterData[\"selectedSection\"] || []}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        userInfo={this.props.Login.userInfo}\r\n        inputParam={this.props.Login.inputParam}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteSecId={deleteSecId}\r\n        defaultSecId={defaultSecId}\r\n        defaultRecord={this.defaultRecord}\r\n        getAvailableInstData={this.props.getAvailableInstData}\r\n        InstrumentSection={this.props.Login.masterData.selectedSection || []}\r\n        screenName=\"IDS_SECTION\"\r\n        selectedRecord={this.state.selectedRecord}\r\n        settings={this.props.Login.settings}\r\n      />\r\n    );\r\n    if(this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode)\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTVALIDATION\",\r\n      <InstrumentValidationTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.ValidationFileData}\r\n        InstrumentValidation={this.props.Login.masterData.InstrumentValidation}\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditValidation={this.props.getDataForAddEditValidation}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        getDataForEdit={this.props.getDataForEdit}\r\n        addfilecllick={this.addInstrumentFile}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        screenName=\"IDS_INSTRUMENTVALIDATION\"\r\n        formatMessage={this.props.intl.formatMessage}\r\n      />\r\n    );\r\n    if(this.props.Login.masterData.selectedInstrument.ncalibrationreq ===transactionStatus.YES &&\r\n      this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode)\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTCALIBRATION\",\r\n      <InstrumentCalibrationTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.CalibrationFileData}\r\n        InstrumentCalibration={\r\n          this.props.Login.masterData.InstrumentCalibration\r\n        }\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditCalibration={this.props.getDataForAddEditCalibration}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        addfilecllick={this.addInstrumentCalibrationFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        addOpenDate={this.props.addOpenDate}\r\n        OpenDate={this.props.OpenDate}\r\n        CloseDate={this.props.CloseDate}\r\n        screenName=\"IDS_INSTRUMENTCALIBRATION\"\r\n        formatMessage={this.props.intl.formatMessage}\r\n      />\r\n    );\r\n    if(this.props.Login.masterData.selectedInstrument.nregionalsitecode === this.props.Login.userInfo.ntranssitecode)\r\n    tabMap.set(\r\n      \"IDS_INSTRUMENTMAINTENANCE\",\r\n      <InstrumentMaintenanceTab\r\n        controlMap={this.state.controlMap}\r\n        userRoleControlRights={this.state.userRoleControlRights}\r\n        selectedInstrument={this.props.Login.masterData.selectedInstrument}\r\n        FileData={this.props.Login.masterData.MaintenanceFileData}\r\n        InstrumentMaintenance={\r\n          this.props.Login.masterData.InstrumentMaintenance\r\n        }\r\n        masterData={this.props.Login.masterData}\r\n        userInfo={this.props.Login.userInfo}\r\n        getDataForAddEditMaintenance={this.props.getDataForAddEditMaintenance}\r\n        inputParam={this.props.inputParam}\r\n        selectedRecord={this.state.selectedRecord}\r\n        viewInstrumentFile={this.viewInstrumentFile}\r\n        deleteRecord={this.DeleteInstrument}\r\n        deleteTabFileRecord={this.deleteTabFileRecord}\r\n        getTabDetails={this.props.getTabDetails}\r\n        addInstrumentFile={this.props.addInstrumentFile}\r\n        addfilecllick={this.addInstrumentMaintenanceFile}\r\n        deleteAction={this.props.deleteAction}\r\n        ConfirmDelete={this.ConfirmDelete}\r\n        addOpenDate={this.props.addOpenDate}\r\n        OpenDate={this.props.OpenDate}\r\n        CloseDate={this.props.CloseDate}\r\n        screenName=\"IDS_INSTRUMENTMAINTENANCE\"\r\n        formatMessage={this.props.intl.formatMessage}\r\n      />\r\n    );\r\n\r\n    return tabMap;\r\n  };\r\n\r\n  ConfirmDelete = (operation, deleteId) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteInstrument(\r\n          operation,\r\n          deleteId,\r\n          operation.screenName ? operation.screenName : \"IDS_INSTRUMENT\"\r\n        )\r\n    );\r\n  };\r\n\r\n  addInstrumentFile = (ncontrolCode, screenName) => {\r\n    if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n    let inputData = [];\r\n    let openChildModal = this.props.Login.openChildModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTVALIDATIONFILE\";\r\n    openChildModal = true;\r\n    const selectedRecord = this.state.selectedRecord\r\n    const updateInfo = {\r\n     userInfo: this.props.Login.userInfo, operation, selectedRecord, ncontrolCode, screenName\r\n    };\r\n    this.props.addInstrumentFile(updateInfo);\r\n  }\r\n  else{\r\n    toast.warn(\r\n      this.props.intl.formatMessage({\r\n        id: \"IDS_DISPOSEDINSTRUMENT\",\r\n      })\r\n    );\r\n  }\r\n  };\r\n\r\n  addInstrumentCalibrationFile = (ncontrolCode, screenName) => {\r\n    if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTCALIBRATIONFILE\";\r\n    openModal = true;\r\n    const selectedRecord = this.state.selectedRecord\r\n    const updateInfo = {\r\n      userInfo: this.props.Login.userInfo, operation, selectedRecord, ncontrolCode, screenName\r\n    };\r\n    this.props.addInstrumentFile(updateInfo);\r\n  }\r\n  else{\r\n    toast.warn(\r\n      this.props.intl.formatMessage({\r\n        id: \"IDS_DISPOSEDINSTRUMENT\",\r\n      })\r\n    );\r\n  }\r\n  };\r\n\r\n  addInstrumentMaintenanceFile = (ncontrolCode, screenName) => {\r\n    if(this.props.Login.masterData.selectedInstrument.ninstrumentstatus!==transactionStatus.Disposed){\r\n    let inputData = [];\r\n    let openModal = this.props.Login.openModal;\r\n    let operation = \"create\";\r\n    screenName = this.props.Login.screenName;\r\n    screenName = \"IDS_INSTRUMENTMAINTENANCEFILE\";\r\n    openModal = true;\r\n    const selectedRecord = this.state.selectedRecord\r\n    const updateInfo = {\r\n      userInfo: this.props.Login.userInfo, operation, selectedRecord, ncontrolCode, screenName\r\n    };\r\n    this.props.addInstrumentFile(updateInfo);\r\n  }\r\n  else{\r\n    toast.warn(\r\n      this.props.intl.formatMessage({\r\n        id: \"IDS_DISPOSEDINSTRUMENT\",\r\n      })\r\n    );\r\n  }\r\n  };\r\n\r\n  reloadData = () => {\r\n    //ALPD-4803 done by Dhanushya RI,To check searchref key is present or not\r\n    if (this.searchRef && this.searchRef.current) {\r\n      this.searchRef.current.value = \"\";\r\n    }    \r\n    if (this.state.nfilterInstrumentCategory && this.state.nfilterInstrumentCategory.value) {\r\n      let inputParam = {\r\n          //janakumar Ate234 -> ALPD-5197 Instrument-records are disappeared when refresh the screen\r\n        inputData: {\r\n          ninstrumentcatcode: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterInstrumentCategory: this.props.Login.masterData.SelectedInsCat,\r\n        },\r\n        classUrl: \"instrument\",\r\n        methodUrl: \"InsByInstrumentCat\",\r\n        masterData: { ...this.props.Login.masterData,\r\n          defaultInstrumentCatValue:this.props.Login.masterData.defaultInstrumentCatValue,  searchedData:undefined }\r\n        \r\n      };\r\n      this.props.changeInstrumentCategoryFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterInstrumentCategory\r\n      );\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVAILABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    const masterData = this.props.Login.masterData;\r\n    if (comboData !== null) {\r\n      switch (caseNo) {\r\n        case 1:\r\n          if(fieldName===\"ninstrumentcatcode\"){\r\n            selectedRecord[fieldName] =comboData;\r\n            this.props.getCalibrationRequired(\r\n              this.state.selectedRecord.ninstrumentcatcode.value,\r\n              this.props.Login.userInfo,\r\n              selectedRecord,\r\n              this.props.Login.screenName\r\n          );\r\n          }else if(fieldName===\"nregionalsitecode\"){\r\n            selectedRecord[fieldName] =comboData;\r\n            this.props.getInstrumentSiteSection(\r\n              comboData.item.nsitecode, \r\n              this.props.Login.userInfo,\r\n              selectedRecord\r\n              ); \r\n          }\r\n          else{\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n          }          \r\n          break;\r\n        case 2:\r\n          selectedRecord[fieldName] = comboData;\r\n          selectedRecord[\"nsectionusercode\"] = comboData.value;\r\n          this.props.getSectionUsers(\r\n            this.state.selectedRecord.nsectionusercode,\r\n            this.props.Login.userInfo,\r\n            selectedRecord,\r\n            // ALPD-3514\r\n            masterData,\r\n            this.props.Login.screenName\r\n          );\r\n          break;\r\n        case 3:\r\n          let nfilterInstrumentCategory =\r\n            this.state.nfilterInstrumentCategory || {};\r\n          nfilterInstrumentCategory = comboData;\r\n          this.searchRef.current.value = \"\";\r\n          this.setState({ nfilterInstrumentCategory });\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    else {\r\n      //ALPD-5145 Instrument screen-->while edit the page in supplier field unable to clear the data\r\n      if (fieldName === \"nsectioncode\" && selectedRecord[\"nsectioncode\"]) {\r\n        delete selectedRecord[\"nsectioncode\"];\r\n        delete selectedRecord[\"nusercode\"];\r\n      }\r\n      else if(fieldName === \"ninstrumentlocationcode\" && selectedRecord[\"ninstrumentlocationcode\"]){\r\n        delete selectedRecord[\"ninstrumentlocationcode\"];\r\n      }\r\n      else if(fieldName === \"nsuppliercode\" && selectedRecord[\"nsuppliercode\"]){\r\n        delete selectedRecord[\"nsuppliercode\"];\r\n      }\r\n      else if(fieldName === \"nmanufcode\" && selectedRecord[\"nmanufcode\"]){\r\n        delete selectedRecord[\"nmanufcode\"];\r\n      }\r\n      const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { selectedRecord }\r\n      }\r\n      this.props.updateStore(updateInfo);\r\n    }\r\n  };\r\n\r\n  closeModal = () => {\r\n      let loadEsign = this.props.Login.loadEsign;\r\n      let openModal = this.props.Login.openModal;\r\n      let openChildModal = this.props.Login.openChildModal;\r\n      let modalShow = this.props.Login.modalShow;\r\n      let selectedRecord = this.props.Login.selectedRecord;\r\n\r\n      if (this.props.Login.loadEsign) {\r\n          if ((this.props.Login.operation.operation ? \r\n                this.props.Login.operation.operation:this.props.Login.operation)  === \"delete\") {\r\n              loadEsign = false;\r\n              openModal = false;\r\n              openChildModal = false;\r\n              selectedRecord = {};\r\n          } \r\n          else \r\n          {\r\n              loadEsign = false;\r\n              if (this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONOPENDATE\" ||\r\n                    this.props.Login.popUp === \"IDS_INSTRUMENTMAINTENANCEOPENDATE\" ||\r\n                    this.props.Login.popUp === \"IDS_INSTRUMENTCALIBRATIONCLOSEDATE\" ||\r\n                    this.props.Login.popUp===\"IDS_INSTRUMENTMAINTENANCECLOSEDATE\") \r\n              {\r\n                    modalShow = true;\r\n                    openModal = false;\r\n                    openChildModal = false;\r\n              }\r\n          }\r\n          selectedRecord['esignpassword'] = \"\"\r\n          selectedRecord['esigncomments'] = \"\"\r\n          selectedRecord['esignreason']=\"\"\r\n      } \r\n      else {\r\n            openModal = false;\r\n            openChildModal = false;\r\n            modalShow = false;\r\n            selectedRecord = {};\r\n      }\r\n\r\n      const updateInfo = {typeName: DEFAULT_RETURN,\r\n                            data: { openModal, openChildModal, modalShow, loadEsign, \r\n                                    selectedRecord, selectedId: null },\r\n                          };\r\n      this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeModalShow = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n\r\n    let modalShow = this.props.Login.modalShow;\r\n    let popUp = this.props.Login.popUp;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    if (this.props.Login.loadEsign) {\r\n      loadEsign = false;\r\n    } else {\r\n      modalShow = false;\r\n      selectedRecord = {};\r\n      popUp = undefined;\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { modalShow, selectedRecord, selectedId: null, loadEsign, popUp },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let updateState = false;\r\n    let {\r\n      selectedRecord,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      //filterData,\r\n      nfilterInstrumentCategory,\r\n      filterInstrumentCategory,\r\n    } = this.state;\r\n    if (\r\n      this.props.Login.selectedRecord !== previousProps.Login.selectedRecord\r\n    ) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.userInfo.nformcode !==\r\n      previousProps.Login.userInfo.nformcode\r\n    ) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[\r\n          this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      updateState = true;\r\n    }\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n      if(this.props.Login.operation==='update'){\r\n        this.props.Login.masterData[\"InstrumentValidation\"] =  this.props.Login.masterData[\"InstrumentValidation\"] ?  \r\n         this.props.Login.masterData.InstrumentValidation.map(item=>{\r\n         if(item.ninstrumentvalidationcode=== this.props.Login.masterData.selectedInstrumentValidation.ninstrumentvalidationcode){\r\n         item= this.props.Login.masterData.selectedInstrumentValidation\r\n        }\r\n        return item  \r\n       }) : [] \r\n       this.props.Login.masterData[\"InstrumentCalibration\"] =  this.props.Login.masterData[\"InstrumentCalibration\"] ? \r\n        this.props.Login.masterData.InstrumentCalibration.map(item=>{\r\n        if(item.ninstrumentcalibrationcode=== this.props.Login.masterData.selectedInstrumentCalibration.ninstrumentcalibrationcode){\r\n        item= this.props.Login.masterData.selectedInstrumentCalibration\r\n       }\r\n       return item\r\n      }) : []\r\n      this.props.Login.masterData[\"InstrumentMaintenance\"] = this.props.Login.masterData[\"InstrumentMaintenance\"] ? \r\n       this.props.Login.masterData.InstrumentMaintenance.map(item=>{\r\n        if(item.ninstrumentmaintenancecode=== this.props.Login.masterData.selectedInstrumentMaintenance.ninstrumentmaintenancecode){\r\n        item= this.props.Login.masterData.selectedInstrumentMaintenance\r\n       }\r\n       return item\r\n      }) : []\r\n         }\r\n      nfilterInstrumentCategory = this.state.nfilterInstrumentCategory || {};\r\n      if (\r\n        this.props.Login.masterData.SelectedInsCat &&\r\n        this.props.Login.masterData.SelectedInsCat !==\r\n        previousProps.Login.masterData.SelectedInsCat\r\n      ) {\r\n        nfilterInstrumentCategory = {\r\n          label: this.props.Login.masterData.SelectedInsCat.sinstrumentcatname,\r\n          value: this.props.Login.masterData.SelectedInsCat.ninstrumentcatcode,\r\n          item: this.props.Login.masterData.SelectedInsCat,\r\n        };\r\n      }\r\n      //filterData = this.generateBreadCrumData();\r\n      updateState = true;\r\n    }\r\n    if (\r\n      this.props.Login.masterData.filterInstrumentCategory !==\r\n      previousProps.Login.masterData.filterInstrumentCategory\r\n    ) {\r\n      const insCategoryMap = constructOptionList(\r\n        this.props.Login.masterData.filterInstrumentCategory || [],\r\n        \"ninstrumentcatcode\",\r\n        \"sinstrumentcatname\",\r\n        \"ntestcategorycode\",\r\n        \"ascending\",\r\n        false\r\n      );\r\n      filterInstrumentCategory = insCategoryMap.get(\"OptionList\");\r\n      if (insCategoryMap.get(\"DefaultValue\")) {\r\n        nfilterInstrumentCategory = insCategoryMap.get(\"DefaultValue\");\r\n      } else if (\r\n        filterInstrumentCategory &&\r\n        filterInstrumentCategory.length > 0\r\n      ) {\r\n        nfilterInstrumentCategory = filterInstrumentCategory[0];\r\n      }\r\n      updateState = true;\r\n    }\r\n    if (updateState) {\r\n      this.setState({\r\n        selectedRecord,\r\n        userRoleControlRights,\r\n        controlMap,\r\n        //filterData,\r\n        nfilterInstrumentCategory,\r\n        filterInstrumentCategory,\r\n      });\r\n    }\r\n  }\r\n  // generateBreadCrumData() {\r\n  //   const breadCrumbData = [];\r\n  //   if (\r\n  //     this.props.Login.masterData &&\r\n  //     this.props.Login.masterData.filterInstrumentCategory\r\n  //   ) {\r\n  //     breadCrumbData.push({\r\n  //       label: \"IDS_INSTRUMENTCATEGORY\",\r\n  //       value: this.props.Login.masterData.SelectedInsCat\r\n  //         ? this.props.Login.masterData.SelectedInsCat.sinstrumentcatname\r\n  //         : \"NA\",\r\n  //     });\r\n  //   }\r\n  //   return breadCrumbData;\r\n  // }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onFilterSubmit = () => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    if (this.state.nfilterInstrumentCategory && this.state.nfilterInstrumentCategory.value) {\r\n      let inputParam = {\r\n        inputData: {\r\n          ninstrumentcatcode: this.state.nfilterInstrumentCategory.value,\r\n          userinfo: this.props.Login.userInfo,\r\n          nfilterInstrumentCategory: this.state.nfilterInstrumentCategory,\r\n        },\r\n         masterData : {\r\n          ...this.props.Login.masterData,\r\n          defaultInstrumentCatValue :this.state.nfilterInstrumentCategory,\r\n          searchedData:undefined\r\n        },\r\n        classUrl: \"instrument\",\r\n        methodUrl: \"InsByInstrumentCat\",\r\n      };\r\n      this.props.changeInstrumentCategoryFilter(\r\n        inputParam,\r\n        this.props.Login.masterData.filterInstrumentCategory\r\n      );\r\n    } else {\r\n      toast.warn(\r\n        this.props.intl.formatMessage({\r\n          id: \"IDS_INSTRUMENTCATEGORYNOTAVALIABLE\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  //Added by sonia on 30th Sept 2024 for Jira idL:ALPD-4940\r\n  getAutoCalibration =(masterData, userInfo,controlCode) => {\r\n    const url = \"instrument/getInstrumentBySchedulerDetail\";\r\n    rsapi.post(url, {\"ninstrumentcode\":masterData.selectedInstrument.ninstrumentcode,\"userinfo\": userInfo })\r\n    .then(response => {\r\n      if(response.data.InstrumentScheduled){\r\n            this.autoCalibrationConfirmationAlert(masterData,userInfo);\r\n      }else {\r\n        this.props.updateAutoCalibration(masterData,userInfo,controlCode)\r\n}\r\n  }).catch(error => {\r\n      if (error.response.status === 500) {\r\n          toast.error(error.message);\r\n      } else {\r\n          toast.warn(error.response.data);\r\n      }\r\n      this.setState({\r\n          loading: false\r\n      });\r\n  });\r\n\r\n  }\r\n//Added by sonia on 30th Sept 2024 for Jira idL:ALPD-4940\r\n  autoCalibrationConfirmationAlert = (masterData,userInfo) => {\r\n    this.confirmMessage.confirm(\r\n      \"autoCalibrationMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_ENABLEDISABLEAUTOCALIBRATION\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_AUTOCALIBRATIONCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.props.updateAutoCalibration(masterData,userInfo)\r\n    );\r\n  }\r\n  \r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  getInstrumentDetail,\r\n  filterColumnData,\r\n  getInstrumentCombo,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  getSectionUsers,\r\n  getAvailableInstData,\r\n  changeInstrumentCategoryFilter,\r\n  getTabDetails,\r\n  getDataForAddEditValidation,\r\n  addInstrumentFile,\r\n  getDataForAddEditCalibration,\r\n  getDataForAddEditMaintenance,\r\n  OpenDate,\r\n  CloseDate, viewAttachment,getCalibrationRequired,getInstrumentSiteSection,updateAutoCalibration\r\n})(injectIntl(Instrument));\r\n"]},"metadata":{},"sourceType":"module"}