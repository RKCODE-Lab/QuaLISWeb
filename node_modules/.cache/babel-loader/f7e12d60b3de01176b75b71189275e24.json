{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\pages\\\\storagemanagement\\\\AddRetrievalCertificate.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst AddRetrievalCertificate = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.formatMessage({\n      id: \"IDS_BIOLOGICALMATERIALTYPE\"\n    }),\n    name: \"sbiomaterialtype\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_BIOLOGICALMATERIALTYPE\"\n    }),\n    value: props.selectedRecord[\"sbiomaterialtype\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_REQUESTID\"\n    }),\n    name: \"srequestid\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_REQUESTID\"\n    }),\n    value: props.selectedRecord[\"srequestid\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 30,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_PROJECTTYPE\"\n    }),\n    isSearchable: true,\n    name: \"nprojecttypecode\",\n    placeholder: props.formatMessage({\n      id: \"IDS_PROJECTTYPE\"\n    }),\n    isMandatory: true,\n    options: props.projectTypeList,\n    optionId: \"nprojecttypecode\",\n    optionValue: \"sprojecttypename\",\n    value: props.selectedRecord[\"nprojecttypecode\"],\n    onChange: event => props.onComboChange(event, 'nprojecttypecode', 1),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_PROJECTNAME\"\n    }),\n    isSearchable: true,\n    name: \"nprojectmastercode\",\n    placeholder: props.formatMessage({\n      id: \"IDS_PROJECTNAME\"\n    }),\n    isMandatory: true,\n    options: props.projectList,\n    optionId: \"nprojectmastercode\",\n    optionValue: \"sprojectname\",\n    value: props.selectedRecord[\"nprojectmastercode\"] //defaultValue={props.selectedRecord[\"ncountrycode\"]}\n    ,\n    onChange: event => props.onComboChange(event, 'nprojectmastercode', 1),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.formatMessage({\n      id: \"IDS_INVESTIGATORNAME\"\n    }),\n    name: \"sinvestigatorname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_INVESTIGATORNAME\"\n    }),\n    value: props.selectedRecord[\"sinvestigatorname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 50,\n    isDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_EMAILID\"\n    }),\n    name: \"semail\",\n    type: \"email\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_EMAILID\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"semail\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    name: \"sphoneno\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sphoneno\"] : \"\",\n    isMandatory: false,\n    required: false,\n    maxLength: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sorganizationaddress\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ORGANIZATIONADDRESS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ORGANIZATIONADDRESS\"\n    }),\n    value: props.selectedRecord[\"sorganizationaddress\"],\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.formatMessage({\n      id: \"IDS_PREPARATIONMETHOD\"\n    }),\n    name: \"spreparationmethod\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_PREPARATIONMETHOD\"\n    }),\n    value: props.selectedRecord[\"spreparationmethod\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.formatMessage({\n      id: \"IDS_TESTINGMETHOD\"\n    }),\n    name: \"stestingmethod\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.formatMessage({\n      id: \"IDS_TESTINGMETHOD\"\n    }),\n    value: props.selectedRecord[\"stestingmethod\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.formatMessage({\n      id: \"IDS_STORAGECONDITION\"\n    }),\n    isSearchable: true,\n    name: \"nstorageconditioncode\",\n    placeholder: props.formatMessage({\n      id: \"IDS_STORAGECONDITION\"\n    }),\n    isMandatory: true,\n    options: props.storageconditionList,\n    optionId: \"nstorageconditioncode\",\n    optionValue: \"sstorageconditionname\",\n    value: props.selectedRecord[\"nstorageconditioncode\"],\n    onChange: event => props.onComboChange(event, 'nstorageconditioncode', 2),\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dretrievalcertificatedate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_RETRIEVALCERTIFICATEDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    maxDate: props.currentTime,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dretrievalcertificatedate\", date),\n    selected: props.selectedRecord ? props.selectedRecord[\"dretrievalcertificatedate\"] : new Date(),\n    value: props.selectedRecord ? props.selectedRecord[\"dretrievalcertificatedate\"] : new Date(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"scomment\",\n    label: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_COMMENTS\"\n    }),\n    value: props.selectedRecord[\"scomment\"],\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(AddRetrievalCertificate);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/storagemanagement/AddRetrievalCertificate.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","DateTimePicker","FormSelectSearch","AddRetrievalCertificate","props","formatMessage","id","event","onInputOnChange","selectedRecord","projectTypeList","onComboChange","projectList","intl","storageconditionList","userInfo","ssitedate","currentTime","date","handleDateChange","Date"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddRetrievalCertificate = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={6}>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        label={props.formatMessage({ id: \"IDS_BIOLOGICALMATERIALTYPE\" })}\r\n                        name={\"sbiomaterialtype\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.formatMessage({ id: \"IDS_BIOLOGICALMATERIALTYPE\" })}\r\n                        value={props.selectedRecord[\"sbiomaterialtype\"]}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={255}\r\n\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.formatMessage({ id: \"IDS_REQUESTID\" })}\r\n                        name={\"srequestid\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.formatMessage({ id: \"IDS_REQUESTID\" })}\r\n                        value={props.selectedRecord[\"srequestid\"]}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={30}\r\n\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                        isSearchable={true}\r\n                        name={\"nprojecttypecode\"}\r\n                        placeholder={props.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                        isMandatory={true}\r\n                        options={props.projectTypeList}\r\n                        optionId='nprojecttypecode'\r\n                        optionValue='sprojecttypename'\r\n                        value={props.selectedRecord[\"nprojecttypecode\"]}\r\n                        onChange={(event) => props.onComboChange(event, 'nprojecttypecode', 1)}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_PROJECTNAME\" })}\r\n                        isSearchable={true}\r\n                        name={\"nprojectmastercode\"}\r\n                        placeholder={props.formatMessage({ id: \"IDS_PROJECTNAME\" })}\r\n                        isMandatory={true}\r\n                        options={props.projectList}\r\n                        optionId='nprojectmastercode'\r\n                        optionValue='sprojectname'\r\n                        value={props.selectedRecord[\"nprojectmastercode\"]}\r\n                        //defaultValue={props.selectedRecord[\"ncountrycode\"]}\r\n                        onChange={(event) => props.onComboChange(event, 'nprojectmastercode', 1)}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.formatMessage({ id: \"IDS_INVESTIGATORNAME\" })}\r\n                        name={\"sinvestigatorname\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.formatMessage({ id: \"IDS_INVESTIGATORNAME\" })}\r\n                        value={props.selectedRecord[\"sinvestigatorname\"]}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={50}\r\n                        isDisabled={true}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_EMAILID\" })}\r\n                        name={\"semail\"}\r\n                        type=\"email\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_EMAILID\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"semail\"] : \"\"}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={50}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                        name={\"sphoneno\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"sphoneno\"] : \"\"}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={50}\r\n                    />\r\n                </Col>\r\n            </Col>\r\n            <Col md={6}>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        name={\"sorganizationaddress\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_ORGANIZATIONADDRESS\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_ORGANIZATIONADDRESS\" })}\r\n                        value={props.selectedRecord[\"sorganizationaddress\"]}\r\n                        rows=\"2\"\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={255}\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        label={props.formatMessage({ id: \"IDS_PREPARATIONMETHOD\" })}\r\n                        name={\"spreparationmethod\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.formatMessage({ id: \"IDS_PREPARATIONMETHOD\" })}\r\n                        value={props.selectedRecord[\"spreparationmethod\"]}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={255}\r\n\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        label={props.formatMessage({ id: \"IDS_TESTINGMETHOD\" })}\r\n                        name={\"stestingmethod\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.formatMessage({ id: \"IDS_TESTINGMETHOD\" })}\r\n                        value={props.selectedRecord[\"stestingmethod\"]}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={255}\r\n\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.formatMessage({ id: \"IDS_STORAGECONDITION\" })}\r\n                        isSearchable={true}\r\n                        name={\"nstorageconditioncode\"}\r\n                        placeholder={props.formatMessage({ id: \"IDS_STORAGECONDITION\" })}\r\n                        isMandatory={true}\r\n                        options={props.storageconditionList}\r\n                        optionId='nstorageconditioncode'\r\n                        optionValue='sstorageconditionname'\r\n                        value={props.selectedRecord[\"nstorageconditioncode\"]}\r\n                        onChange={(event) => props.onComboChange(event, 'nstorageconditioncode', 2)}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <DateTimePicker\r\n                        name={\"dretrievalcertificatedate\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_RETRIEVALCERTIFICATEDATE\" })}\r\n                        className='form-control'\r\n                        placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                        dateFormat={props.userInfo.ssitedate}\r\n                        isClearable={false}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxDate={props.currentTime}\r\n                        maxTime={props.currentTime}\r\n                        onChange={date => props.handleDateChange(\"dretrievalcertificatedate\", date)}\r\n                        selected={props.selectedRecord ? props.selectedRecord[\"dretrievalcertificatedate\"] : new Date()}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"dretrievalcertificatedate\"] : new Date()}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        name={\"scomment\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        value={props.selectedRecord[\"scomment\"]}\r\n                        rows=\"2\"\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={255}\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                    />\r\n            </Col>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddRetrievalCertificate);\r\n"]},"metadata":{},"sourceType":"module"}