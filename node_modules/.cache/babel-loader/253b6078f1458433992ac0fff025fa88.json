{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{toast}from'react-toastify';import Axios from'axios';import rsapi from'../rsapi';import{initRequest}from'./LoginAction';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData,getComboLabelValue,constructOptionList,formatInputDate,rearrangeDateFormat,formatDate}from'../components/CommonScript';import{intl}from'../components/App';import{transactionStatus}from'../components/Enumeration';export function getGrapicalSchedulerViewDetail(scheduler,userInfo,masterData,sscheduletype){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"graphicalschedulerview/getGraphicalSchedulerView\",{nschedulecode:scheduler.nschedulecode,userinfo:userInfo,sscheduletype:sscheduletype}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,operation:null,modalName:undefined,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function changeGrapicalScheduleTypeFilter(inputParam,filterScheduleType){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/graphicalschedulerview/get\"+inputParam.methodUrl,inputParam.inputData).then(function(response){var masterData=response.data;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:_objectSpread(_objectSpread({},masterData),{},{filterScheduleType:filterScheduleType,nfilterScheduleType:inputParam.inputData.nfilterScheduleType})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/actions/GrapicalSchedulerViewAction.js"],"names":["toast","Axios","rsapi","initRequest","DEFAULT_RETURN","sortData","getComboLabelValue","constructOptionList","formatInputDate","rearrangeDateFormat","formatDate","intl","transactionStatus","getGrapicalSchedulerViewDetail","scheduler","userInfo","masterData","sscheduletype","dispatch","post","nschedulecode","userinfo","then","response","data","type","payload","operation","modalName","undefined","loading","catch","error","status","message","warn","changeGrapicalScheduleTypeFilter","inputParam","filterScheduleType","methodUrl","inputData","nfilterScheduleType"],"mappings":"yLAAA,OAASA,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,WAAT,KAA4B,eAA5B,CACA,OAAQC,cAAR,KAA6B,cAA7B,CACA,OAAQC,QAAR,CAAkBC,kBAAlB,CAAsCC,mBAAtC,CAA0DC,eAA1D,CAA2EC,mBAA3E,CAAgGC,UAAhG,KAAiH,4BAAjH,CACA,OAASC,IAAT,KAAqB,mBAArB,CACA,OAAQC,iBAAR,KAAgC,2BAAhC,CAEA,MAAO,SAASC,CAAAA,8BAAT,CAAyCC,SAAzC,CAAmDC,QAAnD,CAA6DC,UAA7D,CAAwEC,aAAxE,CAAuF,CAC1F,MAAO,UAAUC,QAAV,CAAoB,CAC3BA,QAAQ,CAACf,WAAW,CAAC,IAAD,CAAZ,CAAR,CACA,MAAOD,CAAAA,KAAK,CAACiB,IAAN,CAAW,kDAAX,CAA+D,CAACC,aAAa,CAACN,SAAS,CAACM,aAAzB,CAAwCC,QAAQ,CAACN,QAAjD,CAA0DE,aAAa,CAACA,aAAxE,CAA/D,EACPK,IADO,CACF,SAAAC,QAAQ,CAAE,CACXP,UAAU,gCAAOA,UAAP,EAAsBO,QAAQ,CAACC,IAA/B,CAAV,CACAnB,QAAQ,CAACW,UAAD,CAAR,CACAE,QAAQ,CAAC,CAACO,IAAI,CAAErB,cAAP,CAAuBsB,OAAO,CAAC,CAACV,UAAU,CAAVA,UAAD,CAAaW,SAAS,CAAC,IAAvB,CAA6BC,SAAS,CAACC,SAAvC,CACnCC,OAAO,CAAC,KAD2B,CAA/B,CAAD,CAAR,CAEJ,CANO,EAOPC,KAPO,CAOD,SAAAC,KAAK,CAAE,CACTd,QAAQ,CAAC,CAACO,IAAI,CAAErB,cAAP,CAAuBsB,OAAO,CAAE,CAACI,OAAO,CAAC,KAAT,CAAhC,CAAD,CAAR,CACD,GAAIE,KAAK,CAACT,QAAN,CAAeU,MAAf,GAA0B,GAA9B,CAAkC,CAC9BjC,KAAK,CAACgC,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAFD,IAGI,CACAlC,KAAK,CAACmC,IAAN,CAAWH,KAAK,CAACT,QAAN,CAAeC,IAA1B,EACH,CAEJ,CAhBO,CAAP,CAiBH,CAnBG,CAoBH,CAED,MAAO,SAASY,CAAAA,gCAAT,CAA2CC,UAA3C,CAAuDC,kBAAvD,CAA4E,CAC/E,MAAO,UAACpB,QAAD,CAAc,CACjBA,QAAQ,CAACf,WAAW,CAAC,IAAD,CAAZ,CAAR,CACAD,KAAK,CAACiB,IAAN,CAAW,8BAAgCkB,UAAU,CAACE,SAAtD,CAAiEF,UAAU,CAACG,SAA5E,EACKlB,IADL,CACU,SAAAC,QAAQ,CAAI,CACd,GAAMP,CAAAA,UAAU,CAAGO,QAAQ,CAACC,IAA5B,CACAnB,QAAQ,CAACW,UAAD,CAAR,CACAE,QAAQ,CAAC,CACLO,IAAI,CAAErB,cADD,CAELsB,OAAO,CAAE,CACLI,OAAO,CAAE,KADJ,CAELd,UAAU,gCACHA,UADG,MAENsB,kBAAkB,CAAlBA,kBAFM,CAGNG,mBAAmB,CAAEJ,UAAU,CAACG,SAAX,CAAqBC,mBAHpC,EAFL,CAFJ,CAAD,CAAR,CAWH,CAfL,EAgBKV,KAhBL,CAgBW,SAAAC,KAAK,CAAI,CACZd,QAAQ,CAAC,CACLO,IAAI,CAAErB,cADD,CAELsB,OAAO,CAAE,CACLI,OAAO,CAAE,KADJ,CAFJ,CAAD,CAAR,CAMA9B,KAAK,CAACgC,KAAN,CAAYA,KAAK,CAACE,OAAlB,EACH,CAxBL,EAyBH,CA3BD,CA4BH","sourcesContent":["import { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport rsapi from '../rsapi';\r\nimport { initRequest } from './LoginAction';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport {sortData, getComboLabelValue, constructOptionList,formatInputDate, rearrangeDateFormat, formatDate} from '../components/CommonScript';\r\nimport { intl } from '../components/App';\r\nimport {transactionStatus} from '../components/Enumeration';\r\n\r\nexport function getGrapicalSchedulerViewDetail (scheduler,userInfo, masterData,sscheduletype) {\r\n    return function (dispatch) {   \r\n    dispatch(initRequest(true));\r\n    return rsapi.post(\"graphicalschedulerview/getGraphicalSchedulerView\", {nschedulecode:scheduler.nschedulecode, userinfo:userInfo,sscheduletype:sscheduletype})\r\n   .then(response=>{     \r\n        masterData = {...masterData, ...response.data};       \r\n        sortData(masterData);\r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData, operation:null, modalName:undefined, \r\n             loading:false}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(error.message);\r\n       } \r\n       else{               \r\n           toast.warn(error.response.data);\r\n       }  \r\n  \r\n   })\r\n}\r\n}\r\n\r\nexport function changeGrapicalScheduleTypeFilter (inputParam, filterScheduleType)  {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/graphicalschedulerview/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            filterScheduleType,\r\n                            nfilterScheduleType: inputParam.inputData.nfilterScheduleType\r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}