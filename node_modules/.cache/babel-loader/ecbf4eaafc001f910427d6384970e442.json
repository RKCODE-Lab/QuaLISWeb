{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\Approval.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { faBolt, faEye, faPencilAlt, faSync } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card, Col, Nav, Row } from 'react-bootstrap';\nimport { ContentPanel } from '../../components/App.styles';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { ProductList } from '../testmanagement/testmaster-styled'; //import SplitPane from \"react-splitter-layout\";\n\nimport SplitterLayout from \"react-splitter-layout\";\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport, getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest, getEnforceCommentsHistory, reportGenerate, getSubSampleChildTabDetail } from '../../actions';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport ApprovalResultsTab from './ApprovalResultsTab';\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\nimport ApprovalFilter from './ApprovalFilter';\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType } from '../../components/Enumeration';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport SampleInfoGrid from './SampleInfoGrid';\nimport SampleInfoView from './SampleInfoView';\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport Esign from '../audittrail/Esign';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport EditApprovalParameter from './EditApprovalParameter'; //import ApprovalHistoryTab from './ApprovalHistoryTab';\n\nimport SampleApprovalHistory from './SampleApprovalHistory';\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\nimport ApprovalTask from './ApprovalTask';\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\nimport TemplateForm from '../checklist/checklist/TemplateForm';\nimport Attachments from '../attachmentscomments/attachments/Attachments';\nimport { onSaveSampleAttachment, onSaveSubSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\nimport Comments from '../attachmentscomments/comments/Comments';\nimport { onSaveSampleComments, onSaveSubSampleComments, onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions'; //import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport CustomPopOver from '../../components/customPopover';\nimport ScrollBar from 'react-perfect-scrollbar';\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport ReportHistoryTab from './ReportHistoryTab'; // import ReactTooltip from 'react-tooltip';\n\nimport ApprovalUsedMaterial from './ApprovalUsedMaterial';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Approval extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.handleSubSamplePageChange = e => {\n      this.setState({\n        subSampleSkip: e.skip,\n        subSampleTake: e.take\n      });\n      setTimeout(() => {\n        this._scrollBarRef.updateScroll();\n      });\n    };\n\n    this.showAPSampleinfo = () => {\n      this.setState({\n        showSample: true,\n        showTest: false\n      });\n    };\n\n    this.sampleInfoDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.verticalPaneSizeChange = val => {\n      if (this.state.enableAutoHeight) {\n        this.setState({\n          initialVerticalWidth: val - 150\n        });\n      }\n    };\n\n    this.changeSplitterOption = () => {\n      this.setState({\n        enableAutoHeight: !this.state.enableAutoHeight,\n        initialVerticalWidth: \"57vh\"\n      });\n    };\n\n    this.downloadReport = input => {\n      let inputParam = {\n        inputData: {\n          selectedRecord: { ...input.inputData\n          },\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"approval\",\n        operation: \"view\",\n        methodUrl: \"Report\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.subsampleTabDetail = () => {\n      let ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\n      const tabMap = new Map();\n      let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\n      let {\n        subSampleSkip,\n        subSampleTake\n      } = this.state;\n      subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\n      let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\n      tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n        screenName: \"IDS_SUBSAMPLEATTACHMENTS\",\n        onSaveClick: this.onAttachmentSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        attachments: this.props.Login.masterData.RegistrationSampleAttachment || [],\n        deleteRecord: this.props.deleteAttachment,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDATTACHMENT\",\n        fetchRecord: this.props.getAttachmentCombo,\n        viewFile: this.props.viewAttachment,\n        addName: \"AddSubSampleAttachment\",\n        editName: \"EditSubSampleAttachment\",\n        deleteName: \"DeleteSubSampleAttachment\",\n        viewName: \"ViewSubSampleAttachment\",\n        methodUrl: \"SubSampleAttachment\",\n        skip: this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0,\n        take: this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\n        deleteParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights\n        },\n        editParam: {\n          methodUrl: \"SubSampleAttachment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\n        },\n        selectedListName: \"IDS_SUBSAMPLE\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1519,\n          columnNumber: 48\n        }\n      }));\n      tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n        screenName: \"IDS_SUBSAMPLECOMMENTS\",\n        onSaveClick: this.onCommentsSaveClick,\n        selectedMaster: \"APSelectedSubSample\",\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        Comments: this.props.Login.masterData.RegistrationSampleComment || [],\n        fetchRecord: this.props.getCommentsCombo,\n        addName: \"AddSubSampleComment\",\n        editName: \"EditSubSampleComment\",\n        deleteName: \"DeleteSubSampleComment\",\n        methodUrl: \"SubSampleComment\",\n        isTestComment: false,\n        masterList: this.props.Login.masterData.APSelectedSubSample,\n        masterAlertStatus: \"IDS_SELECTSUBSAMPLETOADDCOMMENTS\",\n        primaryKeyField: \"nsamplecommentcode\",\n        dataState: this.state.subSampleCommentDataState,\n        dataStateChange: this.subSampledataStateChange,\n        deleteParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\"\n        },\n        editParam: {\n          methodUrl: \"SubSampleComment\",\n          ntransactionsamplecode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          esignRights: this.props.Login.userRoleControlRights,\n          screenName: \"IDS_SUBSAMPLECOMMENTS\",\n          operation: \"update\",\n          masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\n          ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\n        },\n        selectedListName: \"IDS_SUBSAMPLES\",\n        displayName: \"ssamplearno\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1559,\n          columnNumber: 45\n        }\n      }));\n      return tabMap;\n    };\n\n    this.testTabDetail = () => {\n      const testTabMap = new Map();\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\n      const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\"); // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n\n      let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\n\n      if (this.state.showTest) {\n        testTabMap.set(\"IDS_RESULTS\", /*#__PURE__*/React.createElement(ApprovalResultsTab, {\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          inputParam: this.props.Login.inputParam,\n          dataState: this.state.resultDataState,\n          dataStateChange: this.testDataStateChange,\n          screenName: \"IDS_RESULTS\",\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          getStatusCombo: this.props.getStatusCombo,\n          selectedId: this.props.Login.masterData.selectedParamId,\n          viewFile: this.props.viewAttachment,\n          checkListRecord: this.props.checkListRecord,\n          getEnforceCommentsHistory: this.props.getEnforceCommentsHistory,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1617,\n            columnNumber: 43\n          }\n        }));\n        testTabMap.set(\"IDS_INSTRUMENT\", /*#__PURE__*/React.createElement(ApprovalInstrumentTab, {\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          inputParam: this.props.Login.inputParam,\n          dataState: this.state.instrumentDataState,\n          dataStateChange: this.testDataStateChange,\n          screenName: \"IDS_INSTRUMENT\",\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          selectedId: null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1632,\n            columnNumber: 46\n          }\n        }));\n        testTabMap.set(\"IDS_MATERIAL\", /*#__PURE__*/React.createElement(ApprovalUsedMaterial, {\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          inputParam: this.props.Login.inputParam,\n          methodUrl: \"ResultUsedMaterial\",\n          controlMap: this.state.controlMap,\n          deleteParam: {\n            masterData: this.props.Login.masterData,\n            userInfo: this.props.Login.userInfo\n          },\n          editParam: {\n            masterData: this.props.Login.masterData,\n            userInfo: this.props.Login.userInfo\n          },\n          dataState: this.state.materialDataState,\n          selectedId: this.props.Login.selectedId || null,\n          isActionRequired: true,\n          dataStateChange: this.dataStateChange,\n          deleteRecord: this.deleteMaterialRecord,\n          fetchRecord: this.props.fetchMaterialRecord,\n          userRoleControlRights: this.state.userRoleControlRights,\n          screenName: \"IDS_MATERIAL\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1643,\n            columnNumber: 44\n          }\n        }));\n        testTabMap.set(\"IDS_TASK\", /*#__PURE__*/React.createElement(ApprovalTask, {\n          userInfo: this.props.Login.userInfo,\n          ResultUsedTasks: this.props.Login.masterData.ResultUsedTasks,\n          inputParam: this.props.Login.inputParam,\n          dataState: this.state.taskDataState,\n          masterData: this.props.Login.masterData,\n          dataStateChange: this.testDataStateChange,\n          screenName: \"IDS_TASK\",\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          selectedId: null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1660,\n            columnNumber: 40\n          }\n        }));\n        testTabMap.set(\"IDS_TESTATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n          screenName: \"IDS_TESTATTACHMENTS\",\n          selectedMaster: selectedTestList,\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          attachments: this.props.Login.masterData.RegistrationTestAttachment || [],\n          deleteRecord: this.props.deleteAttachment,\n          fetchRecord: this.props.getAttachmentCombo,\n          onSaveClick: this.onAttachmentSaveClick,\n          masterList: selectedTestList,\n          masterAlertStatus: \"IDS_SELECTTESTTOADDATTACHEMENT\",\n          addName: \"AddTestAttachment\",\n          editName: \"EditTestAttachment\",\n          deleteName: \"DeleteTestAttachment\",\n          viewName: \"ViewTestAttachment\",\n          methodUrl: \"TestAttachment\",\n          nsubsampleneed: this.props.Login.masterData.nneedsubsample,\n          subFields: [{\n            [designProperties.VALUE]: \"stestsynonym\"\n          }, {\n            [designProperties.VALUE]: \"dcreateddate\"\n          }],\n          deleteParam: {\n            methodUrl: \"TestAttachment\",\n            ntransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            esignRights: this.props.Login.userRoleControlRights,\n            screenName: \"IDS_TESTATTACHMENTS\"\n          },\n          editParam: {\n            methodUrl: \"TestAttachment\",\n            ntransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            esignRights: this.props.Login.userRoleControlRights,\n            screenName: \"IDS_TESTATTACHMENTS\",\n            masterList: selectedTestList\n          },\n          selectedListName: \"IDS_TESTS\",\n          displayName: \"stestsynonym\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1672,\n            columnNumber: 51\n          }\n        }));\n        testTabMap.set(\"IDS_TESTCOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n          screenName: \"IDS_TESTCOMMENTS\",\n          selectedMaster: selectedTestList,\n          onSaveClick: this.onCommentsSaveClick,\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          Comments: this.props.Login.masterData.RegistrationTestComment || [],\n          fetchRecord: this.props.getCommentsCombo,\n          masterList: selectedTestList,\n          masterAlertStatus: \"IDS_SELECTTESTTOADDCOMMENTS\",\n          addName: \"AddTestComment\",\n          editName: \"EditTestComment\",\n          deleteName: \"DeleteTestComment\",\n          methodUrl: \"TestComment\",\n          isTestComment: false,\n          primaryKeyField: \"ntestcommentcode\",\n          dataState: this.state.testCommentDataState,\n          dataStateChange: this.testDataStateChange,\n          deleteParam: {\n            methodUrl: \"TestComment\",\n            ntransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            esignRights: this.props.Login.userRoleControlRights,\n            screenName: \"IDS_TESTCOMMENTS\"\n          },\n          editParam: {\n            methodUrl: \"TestComment\",\n            ntransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData,\n            esignRights: this.props.Login.userRoleControlRights,\n            screenName: \"IDS_TESTCOMMENTS\",\n            operation: \"update\",\n            masterList: selectedTestList,\n            ncontrolCode: editTestCommentsId\n          },\n          selectedListName: \"IDS_TESTS\",\n          displayName: \"stestsynonym\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1714,\n            columnNumber: 48\n          }\n        }));\n        testTabMap.set(\"IDS_RESULTCHANGEHISTORY\", /*#__PURE__*/React.createElement(ResultChangeHistoryTab, {\n          userInfo: this.props.Login.userInfo,\n          ApprovalResultChangeHistory: this.props.Login.masterData.ApprovalResultChangeHistory,\n          inputParam: this.props.Login.inputParam,\n          dataState: this.state.resultChangeDataState,\n          dataStateChange: this.testDataStateChange,\n          screenName: \"IDS_RESULTCHANGEHISTORY\",\n          controlMap: this.state.controlMap,\n          masterData: this.props.Login.masterData,\n          userRoleControlRights: this.state.userRoleControlRights,\n          selectedId: null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1759,\n            columnNumber: 55\n          }\n        }));\n        testTabMap.set(\"IDS_TESTAPPROVALHISTORY\", /*#__PURE__*/React.createElement(ApprovalHistoryTab, {\n          userInfo: this.props.Login.userInfo,\n          ApprovalHistory: this.props.Login.masterData.ApprovalHistory,\n          inputParam: this.props.Login.inputParam,\n          dataState: this.state.historyDataState,\n          masterData: this.props.Login.masterData,\n          dataStateChange: this.testDataStateChange,\n          screenName: \"IDS_TESTAPPROVALHISTORY\",\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          selectedId: null,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1777,\n            columnNumber: 17\n          }\n        }));\n      }\n\n      return testTabMap;\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (value === 0 || value === 0.0) {\n        selectedRecord[name] = \"\";\n        this.setState({\n          selectedRecord\n        });\n      } else {\n        selectedRecord[name] = value;\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onTestTabChange = tabProps => {\n      const activeTestTab = tabProps.screenName;\n\n      if (activeTestTab !== this.props.Login.activeTestTab) {\n        if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\n          let inputData = {\n            masterData: this.props.Login.masterData,\n            APSelectedTest: this.props.Login.masterData.APSelectedTest,\n            ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n            userinfo: this.props.Login.userInfo,\n            activeTestTab,\n            screenName: activeTestTab,\n            resultDataState: this.state.resultDataState,\n            instrumentDataState: this.state.instrumentDataState,\n            materialDataState: this.state.materialDataState,\n            taskDataState: this.state.taskDataState,\n            documentDataState: this.state.documentDataState,\n            historyDataState: this.state.historyDataState,\n            resultChangeDataState: this.state.resultChangeDataState,\n            testCommentDataState: this.state.testCommentDataState\n          };\n          this.props.getTestChildTabDetail(inputData, true);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTTEST\"\n          }));\n        }\n      }\n    };\n\n    this.onSampleTabChange = tabProps => {\n      const activeSampleTab = tabProps.screenName;\n\n      if (activeSampleTab !== this.props.Login.activeSampleTab) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          selectedSample: this.props.Login.masterData.APSelectedSample,\n          npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          screenName: activeSampleTab,\n          activeSampleTab\n        };\n        this.props.getSampleChildTabDetail(inputData);\n      }\n    };\n\n    this.onSubSampleTabChange = tabProps => {\n      const activeSubSampleTab = tabProps.screenName;\n\n      if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\n        let inputData = {\n          masterData: this.props.Login.masterData,\n          selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n          ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\n          userinfo: this.props.Login.userInfo,\n          screenName: activeSubSampleTab,\n          activeSubSampleTab,\n          subSampleCommentDataState: this.state.subSampleCommentDataState,\n          subSampleAttachmentDataState: this.state.subSampleAttachmentDataState\n        };\n        this.props.getSubSampleChildTabDetail(inputData);\n      }\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n      setTimeout(() => {\n        this._scrollBarRef.updateScroll();\n      });\n    };\n\n    this.handleTestPageChange = e => {\n      this.setState({\n        testskip: e.skip,\n        testtake: e.take\n      });\n    };\n\n    this.checkRetestAction = (action, ncontrolCode) => {\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n\n      if (selectedTestList.length > 0) {\n        if (action.ntransactionstatus === transactionStatus.RETEST) {\n          if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\n            if (selectedTestList.length > 1) {\n              toast.warn(this.props.intl.formatMessage({\n                id: \"IDS_SELECTONETESTONLY\"\n              }));\n            } else {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  action,\n                  masterData: this.props.Login.masterData,\n                  openChildModal: true,\n                  screenName: \"IDS_RETESTCOUNT\",\n                  operation: \"dynamic\"\n                }\n              };\n              this.props.updateStore(updateInfo);\n            }\n          } else {\n            this.performTestActions(action, ncontrolCode);\n          }\n        } else {\n          this.performTestActions(action, ncontrolCode);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.performTestActions = (action, ncontrolCode) => {\n      if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_MAX\"\n        }) + \": \" + this.props.Login.masterData.retestcount);\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus;\n\n        if (ntransCode === transactionStatus.ALL) {\n          ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n        } else {\n          ntransCode = ntransCode + \",\" + action.ntransactionstatus;\n        }\n\n        let {\n          testskip,\n          testtake\n        } = this.state;\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n        testList = testList.slice(testskip, testskip + testtake);\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n        const inputParam = {\n          inputData: {\n            'performaction': {\n              npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\n              ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n              ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\n              nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              nTransStatus: action.ntransactionstatus,\n              ntransactionstatus: String(-1),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nflag: 2,\n              ntype: 1,\n              userinfo: this.props.Login.userInfo,\n              APSelectedSample: this.props.Login.masterData.APSelectedSample,\n              APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\n              APSelectedTest: this.props.Login.masterData.APSelectedTest,\n              retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n              ncontrolCode,\n              checkBoxOperation: 3,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n            },\n            userinfo: this.props.Login.userInfo\n          },\n          masterData: this.props.Login.masterData,\n          methodUrl: \"performaction\",\n          postParamList: this.postParamList\n        };\n\n        if (action.nesignneed === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: \"performaction\",\n              operation: \"dynamic\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.performAction(inputParam);\n        }\n      }\n    };\n\n    this.updateDecision = action => {\n      let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus;\n\n      if (ntransCode === transactionStatus.ALL) {\n        ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\n      }\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      let {\n        skip,\n        take\n      } = this.state;\n      let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\n      sampleList = sampleList.splice(skip, skip + take);\n      let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\n\n      if (selectedsampleList.length > 0) {\n        const inputData = {\n          'updatedecision': {\n            npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\n            nTransStatus: action.ntransactionstatus,\n            ntransactionstatus: String(ntransCode),\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\n            nflag: 1,\n            userinfo: this.props.Login.userInfo,\n            napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\n            napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\n            selectedSample: this.props.Login.masterData.selectedSample\n          },\n          userinfo: this.props.Login.userInfo\n        };\n        let inputParam = {\n          postParamList: this.postParamList,\n          inputData,\n          masterData: this.props.Login.masterData\n        };\n\n        if (action.nesignneed === transactionStatus.YES) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: \"updatedecision\",\n              operation: \"decision\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.updateDecision(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTSAMPLE\"\n        }));\n      }\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item\n            };\n            this.props.getRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item\n            };\n            this.props.getRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          const inputParamData = {\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            userinfo: this.props.Login.userInfo,\n            masterData: { ...this.props.Login.masterData\n            },\n            RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n            ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n            nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n            ndesigntemplatemappingcode: comboData.value,\n            DesignTemplateMappingValue: comboData.item\n          };\n          this.props.getFilterBasedTest(inputParamData);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getFilterStatus(inputParamData);\n          }\n        } else if (fieldName === 'nsectioncode') {\n          if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n            // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                UserSectionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              nsectioncode: comboData.value === -1 ? null // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              : comboData.value,\n              stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n              DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n            };\n            this.props.getFilterBasedTest(inputParamData);\n          }\n        } else if (fieldName === 'njobstatuscode') {\n          if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n            let masterData = { ...this.props.Login.masterData,\n              JobStatusValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else {\n          if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n            //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n            //  const updateInfo = {\n            //     typeName: DEFAULT_RETURN,\n            //    data: { masterData }\n            // }\n            inputParamData = {\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                FilterStatusValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ntransactionstatus: comboData.value,\n              stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n              nsectioncode: null //this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n              //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n              //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n\n            };\n            this.props.getFilterBasedTest(inputParamData);\n          }\n        }\n      }\n    };\n\n    this.onComboChange = comboData => {\n      if (comboData) {\n        let masterData = { ...this.props.Login.masterData,\n          GradeValue: comboData\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            masterData\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getApprovalVersion(inputParam);\n    };\n\n    this.changeMandatory = (event, dataItem) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO;\n      selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"],\n        [dataItem.ntransactionresultcode]: value\n      };\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onReload = () => {\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ntransactionstatus: realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0' ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\n        ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab || \"\",\n        activeSampleTab: this.props.Login.activeSampleTab || \"\",\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\n        checkBoxOperation: 3,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getApprovalSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onFilterSubmit = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n      let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n      let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        realUserSectionValue,\n        realTestValue,\n        realDesignTemplateMappingValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        activeTestTab: this.props.Login.activeTestTab,\n        activeSampleTab: this.props.Login.activeSampleTab,\n        activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n        checkBoxOperation: 3,\n        ntype: 2,\n        ndesigntemplatemappingcode: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\n        // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData,\n          searchSampleRef: this.searchSampleRef,\n          searchSubSampleRef: this.searchSubSampleRef,\n          searchTestRef: this.searchTestRef,\n          skip: this.state.skip,\n          take: this.state.take,\n          testskip: this.state.testskip,\n          testtake: this.state.testtake,\n          resultDataState: this.state.resultDataState,\n          instrumentDataState: this.state.instrumentDataState,\n          materialDataState: this.state.materialDataState,\n          taskDataState: this.state.taskDataState,\n          documentDataState: this.state.documentDataState,\n          resultChangeDataState: this.state.resultChangeDataState,\n          testCommentDataState: this.state.testCommentDataState,\n          historyDataState: this.state.historyDataState,\n          samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n          sampleHistoryDataState: this.state.sampleHistoryDataState\n        };\n        this.props.getApprovalSample(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.testDataStateChange = event => {\n      switch (this.props.Login.activeTestTab) {\n        case \"IDS_RESULTS\":\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_INSTRUMENT\":\n          this.setState({\n            instrumentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_MATERIAL\":\n          this.setState({\n            materialDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TASK\":\n          this.setState({\n            taskDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTATTACHMENTS\":\n          this.setState({\n            instrumentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTCOMMENTS\":\n          this.setState({\n            testCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_DOCUMENTS\":\n          this.setState({\n            documentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_RESULTCHANGEHISTORY\":\n          this.setState({\n            resultChangeDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_TESTAPPROVALHISTORY\":\n          this.setState({\n            historyDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            resultDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState\n      });\n    };\n\n    this.subSampledataStateChange = event => {\n      switch (this.props.Login.activeSubSampleTab) {\n        case \"IDS_SUBSAMPLECOMMENTS\":\n          this.setState({\n            subSampleCommentDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SUBSAMPLEATTACHMENTS\":\n          this.setState({\n            subSampleAttachmentDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            popUptestDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.sampleDataStateChange = event => {\n      switch (this.props.Login.activeSampleTab) {\n        case \"IDS_SAMPLEINFO\":\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_SAMPLEAPPROVALHISTORY\":\n          this.setState({\n            sampleHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_PRINTHISTORY\":\n          this.setState({\n            samplePrintHistoryDataState: event.dataState\n          });\n          break;\n\n        case \"IDS_REPORTHISTORY\":\n          this.setState({\n            reportHistoryDataState: event.dataState\n          });\n          break;\n\n        default:\n          this.setState({\n            sampleGridDataState: event.dataState\n          });\n          break;\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      let ok = true;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.operation === 'enforce') {\n        inputData[\"enforcestatus\"] = {\n          ngradecode: this.props.Login.masterData.GradeValue.value || -1,\n          ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\n          ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\n          senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\n          selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\")\n        };\n        inputParam = {\n          methodUrl: \"EnforceStatus\",\n          classUrl: 'approval',\n          inputData: inputData,\n          postParam: {\n            selectedObject: \"APSelectedTest\",\n            primaryKeyField: \"ntransactiontestcode\"\n          },\n          operation: \"update\"\n        };\n      } else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord: this.state.selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation\n        };\n        inputParam = onSaveSampleAttachment(saveParam);\n      } else {\n        let approvalparameter = [];\n\n        if (this.state.selectedRecord.approvalParameterEdit) {\n          Object.keys(this.state.selectedRecord.approvalParameterEdit).map(key => approvalparameter.push({\n            ntransactionresultcode: key,\n            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\n          }));\n          inputData[\"approvalparameter\"] = approvalparameter;\n          inputParam = {\n            methodUrl: \"ApprovalParameter\",\n            classUrl: 'approval',\n            inputData: inputData,\n            postParam: {\n              selectedObject: \"APSelectedTest\",\n              primaryKeyField: \"ntransactiontestcode\"\n            },\n            operation: \"update\"\n          };\n        } else {\n          ok = false;\n          this.handleClose();\n        }\n      }\n\n      if (ok) {\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openChildModal: true,\n              operation: this.props.Login.operation,\n              screenName: \"IDS_ENFORCESTATUS\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    this.handleClose = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let templateData = this.props.Login.templateData;\n      let operation = this.props.Login.operation;\n      let openTemplateModal = this.props.Login.openTemplateModal;\n\n      if (this.props.Login.loadEsign) {\n        if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = {};\n          templateData = {};\n          operation = undefined;\n        } else {\n          loadEsign = false;\n        }\n      } else {\n        openTemplateModal = false;\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = {};\n        templateData = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          openChildModal,\n          loadEsign,\n          selectedRecord,\n          templateData,\n          selectedParamId: null,\n          operation,\n          openTemplateModal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData,\n        operation: this.props.Login.operation\n      };\n\n      if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\n        this.props.validateEsignforApproval(inputParam, \"openChildModal\");\n      } else {\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\n      }\n    };\n\n    this.onTemplateInputChange = (event, control) => {\n      let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateComboChange = (comboData, control) => {\n      let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onTemplateDateChange = (dateData, control) => {\n      let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control);\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let {\n        testskip,\n        testtake\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n\n      if (selectedTestList.length > 0) {\n        if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveTestComments(saveParam, selectedTestList);\n        }\n\n        if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSample !== undefined) {\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\n          } else {\n            sampleList = this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\n          }\n\n          let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\"); // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\n\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveSampleComments(saveParam, acceptList);\n        }\n\n        if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\n          let sampleList = [];\n\n          if (this.props.Login.masterData.searchedSubSample !== undefined) {\n            sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\n          } else {\n            sampleList = this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\n          }\n\n          let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\"); // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\n\n          let saveParam = {\n            userInfo: this.props.Login.userInfo,\n            isTestComment: this.props.isTestComment,\n            selectedRecord,\n            masterData: this.props.Login.masterData,\n            saveType,\n            formRef,\n            operation: this.props.Login.operation,\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n          };\n          inputParam = onSaveSubSampleComments(saveParam, acceptList);\n        }\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTEST\"\n        }));\n      }\n    };\n\n    this.onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\n      const masterData = this.props.Login.masterData;\n      let inputData = {};\n      let inputParam = {};\n      let {\n        testskip,\n        testtake,\n        skip,\n        take\n      } = this.state;\n      let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\n      testList = testList.slice(testskip, testskip + testtake);\n      let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\n      let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\n      sampleList = sampleList.slice(skip, skip + take);\n      let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let ok = true;\n\n      if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\n        };\n\n        if (selectedSampleList.length > 0) {\n          inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      } else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\n        };\n        inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.APSelectedSubSample);\n      } else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\n        let saveParam = {\n          userInfo: this.props.Login.userInfo,\n          selectedRecord,\n          masterData: this.props.Login.masterData,\n          saveType,\n          formRef,\n          operation: this.props.Login.operation,\n          selectedMaster: this.props.selectedMaster,\n          ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\n        };\n\n        if (selectedTestList.length > 0) {\n          inputParam = onSaveTestAttachment(saveParam, selectedTestList);\n        } else {\n          ok = false;\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTSAMPLE\"\n          }));\n        }\n      }\n\n      if (ok) {\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              operation: this.props.Login.operation,\n              screenName: this.props.Login.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\n        }\n      }\n    };\n\n    this.generateCOAReport = (inputData, ncontrolCode) => {\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        let inputParam = {\n          reporparam: inputData\n        };\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            openChildModal: true,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: \"reportgeneration\",\n            screenName: this.props.Login.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.generateCOAReport(inputData);\n      }\n    };\n\n    this.searchSampleRef = React.createRef();\n    this.searchSubSampleRef = React.createRef();\n    this.searchTestRef = React.createRef();\n    this.formRef = React.createRef();\n    this.state = {\n      sampleGridDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      resultDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }]\n\n      },\n      instrumentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      materialDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      taskDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 // group: [{ field: 'sarno' }] \n\n      },\n      testCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      documentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      resultChangeDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'ssamplearno' }] \n\n      },\n      sampleHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      reportHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      historyDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }] \n\n      },\n      dataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n      },\n      samplePrintHistoryDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //group: [{ field: 'sarno' }]\n\n      },\n      subSampleCommentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      subSampleAttachmentDataState: {\n        skip: 0,\n        take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: 'groupingField' }] \n\n      },\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      masterStatus: \"\",\n      error: \"\",\n      oldComboData: {},\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      showSample: false,\n      showSubSample: false,\n      showTest: true,\n      sampleListColumns: [],\n      subSampleListColumns: [],\n      testListColumns: [],\n      TableExpandableItem: [],\n      SingleItem: [],\n      SampleGridItem: [],\n      SampleGridExpandableItem: [],\n      sampleListMainField: [],\n      subSampleListMainField: [],\n      testListMainField: [],\n      testMoreField: [],\n      firstPane: 0,\n      paneHeight: 0,\n      secondPaneHeight: 0,\n      tabPane: 0,\n      SampletypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      ConfigVersionList: [],\n      UserSectionList: [],\n      stateDynamicDesign: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      TestList: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      testskip: 0,\n      testtake: this.props.Login.settings && this.props.Login.settings[12],\n      splitChangeWidthPercentage: 22,\n      subSampleSkip: 0,\n      subSampleTake: 5,\n      initialVerticalWidth: \"57vh\",\n      enablePin: false\n    }; //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\") {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\n      toast.warn(props.intl.formatMessage({\n        id: props.Login.multilingualMsg\n      }));\n      props.Login.multilingualMsg = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  } // onSecondaryPaneSizeChange = (e, val) => {\n  //     this.setState({\n  //         firstPane: e - val,\n  //         tabPane: e - 80,\n  //         childPane: this.state.parentHeight - e - 80\n  //     })\n  // }\n\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height - 50\n      });\n    }\n  }\n\n  constructDesign(list) {\n    let newList = [];\n\n    if (list.length > 0) {\n      list.map(i => {\n        newList.push({\n          [designProperties.LABEL]: i,\n          [designProperties.VALUE]: i\n        });\n      });\n    }\n\n    return newList;\n  }\n\n  showAPTestList() {\n    this.setState({\n      showTest: true,\n      showSample: false,\n      showSubSample: false\n    });\n  }\n\n  showAPSubSampleinfo() {\n    this.setState({\n      showSample: false,\n      showTest: true,\n      showSubSample: !this.state.showSubSample\n    });\n  }\n\n  gridfillingColumn(data) {\n    //  const tempArray = [];\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    const filterSampleParam = {\n      inputListName: \"AP_SAMPLE\",\n      selectedObject: \"APSelectedSample\",\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"approval/getApprovalSubSample\",\n      isSortable: true,\n      sortValue: 'npreregno',\n      sortList: ['AP_TEST'],\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      fecthInputObject: {\n        ntype: 2,\n        nflag: 2,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode || -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\n        ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        userinfo: this.props.Login.userInfo,\n        checkBoxOperation: 3,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      },\n      masterData: this.props.Login.masterData,\n      // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\n      searchFieldList: this.state.sampleSearchField || [],\n      changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\n    };\n    const filterSubSampleParam = {\n      inputListName: \"AP_SUBSAMPLE\",\n      selectedObject: \"APSelectedSubSample\",\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      isSortable: true,\n      sortValue: 'npreregno',\n      sortList: ['AP_TEST'],\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      fecthInputObject: {\n        ntype: 2,\n        nflag: 2,\n        npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode || -1,\n        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode || -1,\n        nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\n        nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        userinfo: this.props.Login.userInfo,\n        checkBoxOperation: 3,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.subsampleSearchField || [],\n      changeList: [\"AP_TEST\", \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"]\n    };\n    const filterTestParam = {\n      inputListName: \"AP_TEST\",\n      selectedObject: \"APSelectedTest\",\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: {\n        ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\n        userinfo: this.props.Login.userInfo,\n        checkBoxOperation: 3,\n        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n      },\n      isSingleSelect: false,\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.state.testSearchField || [],\n      changeList: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"RegistrationAttachment\", \"APSelectedTest\"]\n    };\n    let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\n    let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\n    let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\n    let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\n    let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\n    let subSampleGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      searchSubSampleRef: this.searchSubSampleRef,\n      searchTestRef: this.searchTestRef,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      subSampleSkip: this.state.subSampleSkip,\n      subSampleTake: this.state.subSampleTake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      historyDataState: this.state.historyDataState,\n      samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n      sampleHistoryDataState: this.state.sampleHistoryDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n    };\n    let testGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\n      nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\n      ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      searchTestRef: this.searchTestRef,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      historyDataState: this.state.historyDataState,\n      samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\n      sampleHistoryDataState: this.state.sampleHistoryDataState,\n      subSampleCommentDataState: this.state.subSampleCommentDataState,\n      subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n      nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n      nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow\n    };\n    let testChildGetParam = {\n      masterData: this.props.Login.masterData,\n      ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n      userinfo: this.props.Login.userInfo,\n      nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n      nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n      nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n      npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\n      ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\n      activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\n      activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\n      screenName: this.props.Login.screenName,\n      postParamList: this.postParamList,\n      testskip: this.state.testskip,\n      testtake: this.state.testtake,\n      resultDataState: this.state.resultDataState,\n      instrumentDataState: this.state.instrumentDataState,\n      materialDataState: this.state.materialDataState,\n      taskDataState: this.state.taskDataState,\n      documentDataState: this.state.documentDataState,\n      historyDataState: this.state.historyDataState,\n      resultChangeDataState: this.state.resultChangeDataState,\n      testCommentDataState: this.state.testCommentDataState,\n      ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_SAMPLETYPE\",\n      \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" : this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_DESIGNTEMPLATE\",\n      \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_CONFIGVERSION\",\n      \"value\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" : this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_SECTION\",\n      \"value\": this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" : this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_Test\",\n      \"value\": this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" : this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_FILTERSTATUS\",\n      \"value\": this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\n    }];\n    const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\n    const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\n    const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\n    const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\n    const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\n    const coaReportId = this.state.controlMap.has(\"COAReport\") && this.state.controlMap.get(\"COAReport\").ncontrolcode;\n    this.postParamList = [{\n      filteredListName: \"searchedSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSampleRef,\n      primaryKeyField: \"npreregno\",\n      fetchUrl: \"approval/getApprovalSubSample\",\n      fecthInputObject: subSampleGetParam,\n      selectedObject: \"APSelectedSample\",\n      inputListName: \"AP_SAMPLE\",\n      updatedListname: \"updatedSample\",\n      childRefs: [{\n        ref: this.searchSubSampleRef,\n        childFilteredListName: \"searchedSubSample\"\n      }, {\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\n    }, {\n      filteredListName: \"searchedSubSample\",\n      updatedListname: \"updatedSubSample\",\n      clearFilter: \"no\",\n      searchRef: this.searchSubSampleRef,\n      primaryKeyField: \"ntransactionsamplecode\",\n      fetchUrl: \"approval/getApprovalTest\",\n      fecthInputObject: testGetParam,\n      selectedObject: \"APSelectedSubSample\",\n      childRefs: [{\n        ref: this.searchTestRef,\n        childFilteredListName: \"searchedTests\"\n      }],\n      inputListName: \"AP_SUBSAMPLE\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\n    }, {\n      filteredListName: \"searchedTests\",\n      clearFilter: \"no\",\n      searchRef: this.searchTestRef,\n      primaryKeyField: \"ntransactiontestcode\",\n      fetchUrl: this.getActiveTestURL(),\n      fecthInputObject: testChildGetParam,\n      selectedObject: \"APSelectedTest\",\n      inputListName: \"AP_TEST\",\n      updatedListname: \"updatedTest\",\n      unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\", \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\", \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\", \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\n    }];\n    const testDesign = /*#__PURE__*/React.createElement(ContentPanel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 566,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 568,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 569,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 25\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-padd-custom\",\n      style: {\n        float: \"right\"\n      },\n      onClick: () => this.showAPSampleinfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 572,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 25\n      }\n    }), \"  \", this.props.intl.formatMessage({\n      id: \"IDS_SAMPLE\"\n    }))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 580,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJson //clickIconGroup={true}\n    , {\n      paneHeight: this.state.initialVerticalWidth,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedTests || AP_TestList,\n      selectedMaster: this.props.Login.masterData.APSelectedTest,\n      primaryKeyField: \"ntransactiontestcode\",\n      getMasterDetail: this.props.getTestChildTabDetail,\n      inputParam: testChildGetParam,\n      additionalParam: [],\n      mainField: 'stestsynonym',\n      selectedListName: \"APSelectedTest\",\n      objectName: \"test\",\n      listName: \"IDS_TEST\",\n      pageSize: this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting)),\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      showStatusIcon: false,\n      showStatusName: true,\n      subFieldsLabel: true,\n      jsonField: 'jsondata',\n      jsonDesignFields: false,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"scolorhexcode\",\n      selectionList: this.props.Login.masterData.FilterStatus || [],\n      needSubFieldlabel: true,\n      subFields: this.state.DynamicTestColumns,\n      moreField: this.state.testMoreField,\n      needValidation: false,\n      needFilter: false,\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedTests\",\n      searchRef: this.searchTestRef,\n      filterParam: filterTestParam,\n      skip: this.state.testskip,\n      take: this.state.testtake,\n      showMoreResetList: true,\n      showMoreResetListName: \"AP_SAMPLE\",\n      handlePageChange: this.handleTestPageChange,\n      buttonCount: 5,\n      childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\", \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\"],\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category justify-content-end icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 632,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        hidden: this.state.userRoleControlRights.indexOf(editParamId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_EDITREPORTMANDATORY\"\n        }),\n        \"data-for\": \"tooltip-common-wrap\",\n        \"data-place\": \"left\",\n        className: \"btn btn-circle outline-grey\",\n        onClick: () => this.props.getParameterEdit({\n          APSelectedTest: this.props.Login.masterData.APSelectedTest,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPencilAlt,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 641,\n          columnNumber: 37\n        }\n      })), this.props.Login.masterData.actionStatus && this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 && actionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faBolt,\n        nav: true,\n        data: actionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2\",\n        dynamicButton: value => this.checkRetestAction(value, TestApprovalActionId),\n        textKey: \"stransdisplaystatus\",\n        iconKey: \"ntransactionstatus\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647,\n          columnNumber: 37\n        }\n      }) : \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 582,\n        columnNumber: 21\n      }\n    }))));\n    let mainDesign = \"\";\n\n    if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\n      mainDesign = /*#__PURE__*/React.createElement(SplitterLayout, {\n        borderColor: \"#999\",\n        primaryIndex: 1,\n        percentage: true,\n        secondaryInitialSize: this.state.splitChangeWidthPercentage // onSecondaryPaneSizeChange={this.paneSizeChange}\n        ,\n        primaryMinSize: 40,\n        secondaryMinSize: 30,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668,\n          columnNumber: 26\n        }\n      }, /*#__PURE__*/React.createElement(Card, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 675,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Card.Header, {\n        style: {\n          borderBottom: \"0px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 676,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          display: \"inline-block\",\n          marginTop: \"1%\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h4\", {\n        className: \"card-title\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 29\n        }\n      }, this.props.intl.formatMessage({\n        id: \"IDS_SUBSAMPLE\"\n      })))), /*#__PURE__*/React.createElement(Card.Body, {\n        className: \"p-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(TransactionListMasterJson //clickIconGroup={true}\n      , {\n        paneHeight: this.state.initialVerticalWidth,\n        masterList: this.props.Login.masterData.searchedSubSample || AP_SubSampleList,\n        selectedMaster: this.props.Login.masterData.APSelectedSubSample,\n        primaryKeyField: \"ntransactionsamplecode\",\n        getMasterDetail: this.props.getTestDetail,\n        inputParam: testGetParam,\n        additionalParam: [],\n        mainField: \"ssamplearno\",\n        selectedListName: \"APSelectedSubSample\",\n        objectName: \"subSample\",\n        listName: \"IDS_SUBSAMPLE\",\n        jsonField: 'jsondata',\n        jsonDesignFields: true,\n        showStatusLink: true,\n        showStatusName: true,\n        statusFieldName: \"stransdisplaystatus\",\n        statusField: \"ntransactionstatus\",\n        selectionList: this.state.selectedFilter,\n        selectionField: \"ntransactionstatus\",\n        selectionFieldName: \"sfilterstatus\",\n        selectionColorField: \"stranscolor\",\n        statusColor: \"stranscolor\",\n        subFields: this.state.DynamicSubSampleColumns,\n        moreField: this.state.subSampleMoreField,\n        needValidation: false,\n        needMultiSelect: true,\n        needFilter: false,\n        searchRef: this.searchSubSampleRef,\n        filterParam: filterSubSampleParam,\n        filterColumnData: this.props.filterTransactionList,\n        searchListName: \"searchedSubSample\",\n        skip: this.state.subSampleSkip,\n        take: this.state.subSampleTake,\n        handlePageChange: this.handleSubSamplePageChange,\n        childTabsKey: [\"AP_TEST\", \"ApprovalParameter\", \"Registration\", \"RegistrationSampleComment\", \"RegistrationSampleAttachment\"],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 25\n        }\n      }))), testDesign);\n    } else {\n      mainDesign = testDesign;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-4 screen-height-window\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 731,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 732,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Row, {\n      noGutters: \"true\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 735,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 736,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      percentage: true,\n      primaryIndex: 1,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage //onSecondaryPaneSizeChange={this.paneSizeChange} \n      ,\n      primaryMinSize: 40,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 737,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJson, {\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      needMultiSelect: true,\n      masterList: this.props.Login.masterData.searchedSample || AP_SampleList,\n      selectedMaster: this.props.Login.masterData.APSelectedSample,\n      primaryKeyField: \"npreregno\",\n      getMasterDetail: this.props.getsubSampleDetail,\n      inputParam: subSampleGetParam,\n      additionalParam: ['napprovalversioncode'],\n      mainField: 'sarno',\n      selectionList: this.state.selectedFilter,\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"sfilterstatus\",\n      selectionColorField: \"stranscolor\",\n      selectedListName: \"APSelectedSample\",\n      objectName: \"sample\",\n      listName: \"IDS_SAMPLE\",\n      filterColumnData: this.props.filterTransactionList,\n      searchListName: \"searchedSample\",\n      needValidation: true,\n      validationKey: \"napprovalversioncode\",\n      validationFailMsg: \"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: this.state.DynamicSampleColumns,\n      moreField: this.state.sampleMoreField,\n      jsonDesignFields: true,\n      jsonField: 'jsondata',\n      showStatusLink: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\" //statusColor=\"sdecisioncolor\"\n      ,\n      statusColor: \"stranscolor\",\n      showStatusIcon: false,\n      showStatusName: true,\n      needFilter: true,\n      searchRef: this.searchSampleRef,\n      filterParam: filterSampleParam,\n      skip: this.state.skip,\n      take: this.state.take,\n      handlePageChange: this.handlePageChange,\n      showStatusBlink: true //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\n      ,\n      childTabsKey: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\"],\n      actionIcons: [this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\n        // onClick: ()=>this.previewSampleReport(reportPreviewId),\n        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\n        onClick: this.props.previewSampleReport,\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: reportPreviewId\n        }\n      } : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ? {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\n        // onClick: ()=>this.previewSampleReport(reportPreviewId),\n        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\n        onClick: obj => this.generateCOAReport(obj, reportGenerateId),\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: reportPreviewId,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode\n        }\n      } : {\n        title: \"Report\",\n        controlname: \"reports\",\n        objectName: \"sample\",\n        hidden: this.state.userRoleControlRights.indexOf(coaReportId) === -1,\n        onClick: obj => this.props.reportGenerate(obj, reportGenerateId),\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncontrolcode: coaReportId\n        }\n      }],\n      commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 838,\n          columnNumber: 49\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        onClick: () => this.onReload() // title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\n        ,\n        \"data-for\": \"tooltip-common-wrap\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 57\n        }\n      })), this.props.Login.masterData.decisionStatus && this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 && this.props.Login.masterData.decisionStatus.length > 0 ? /*#__PURE__*/React.createElement(CustomPopOver, {\n        icon: faBolt,\n        nav: true,\n        data: decisionStatus,\n        btnClasses: \"btn-circle btn_grey ml-2\",\n        textKey: \"sdecisionstatus\",\n        iconKey: \"ntransactionstatus\",\n        dynamicButton: value => this.updateDecision(value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 57\n        }\n      }) : \"\")),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ApprovalFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          UserSection: this.state.UserSectionList || [],\n          UserSectionValue: this.props.Login.masterData.UserSectionValue || [],\n          JobStatus: this.props.Login.masterData.JobStatus || [],\n          Test: this.state.TestList || [],\n          TestValue: this.props.Login.masterData.TestValue || [],\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {},\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 66\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(ScrollBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      customClassName: \"detailed-inner no-height\",\n      vertical: true,\n      borderColor: \"#999\",\n      primaryIndex: 1 //onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\n      ,\n      secondaryInitialSize: window.outerHeight - 260,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 903,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 911,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: this.state.showTest === true ? {\n        display: \"block\",\n        background: \"#FFFF\"\n      } : {\n        display: \"none\",\n        background: \"#FFFF\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 912,\n        columnNumber: 49\n      }\n    }, mainDesign), /*#__PURE__*/React.createElement(ContentPanel, {\n      style: this.state.showSample === true ? {\n        display: \"block\"\n      } : {\n        display: \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 916,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 917,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 918,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 919,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 920,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"p-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 922,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\",\n        marginTop: \"1%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 923,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 924,\n        columnNumber: 81\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SAMPLE\"\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-padd-custom\",\n      style: {\n        float: \"right\"\n      },\n      onClick: () => this.showAPTestList(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 926,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 929,\n        columnNumber: 81\n      }\n    }), \" \", this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    }))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 933,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(ScrollBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 934,\n        columnNumber: 77\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        height: this.state.initialVerticalWidth\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 935,\n        columnNumber: 81\n      }\n    }, this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n      data: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0 ? this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {},\n      SingleItem: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ? this.state.SingleItem : [],\n      screenName: \"IDS_SAMPLEINFO\",\n      userInfo: this.props.Login.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 937,\n        columnNumber: 89\n      }\n    }) : /*#__PURE__*/React.createElement(SampleInfoGrid, {\n      selectedSample: this.props.Login.masterData.APSelectedSample,\n      userInfo: this.props.Login.userInfo || {},\n      masterData: this.props.Login.masterData,\n      inputParam: this.props.Login.inputParam,\n      dataState: this.state.sampleGridDataState,\n      dataStateChange: this.sampleInfoDataStateChange,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      detailedFieldList: this.gridfillingColumn(this.state.DynamicGridMoreField) || [],\n      primaryKeyField: \"npreregno\",\n      expandField: \"expanded\",\n      screenName: \"IDS_SAMPLEINFO\",\n      jsonField: \"jsondata\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948,\n        columnNumber: 89\n      }\n    }))))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 45\n      }\n    }, this.state.enablePin ? /*#__PURE__*/React.createElement(\"span\", {\n      className: `pin-icon ${this.state.enableAutoHeight ? \"active\" : \"\"}`,\n      onClick: this.changeSplitterOption,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 974,\n        columnNumber: 73\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      style: {\n        borderBottom: \"0px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 977,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        display: \"inline-block\",\n        marginTop: \"0%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      className: \"card-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 61\n      }\n    }, this.state.showSample ? this.props.intl.formatMessage({\n      id: \"IDS_SAMPLEATTACHMENTSCOMMENTS\"\n    }) : this.state.showSubSample ? this.props.intl.formatMessage({\n      id: \"IDS_SUBSAMPLEATTACHMENTSCOMMENTS\"\n    }) : this.props.intl.formatMessage({\n      id: \"IDS_PARAMETERRESULTS\"\n    }))), this.props.Login.masterData.realRegSubTypeValue && this.state.showTest && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample ? /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-padd-custom\",\n      style: {\n        \"float\": \"right\",\n        \"margin-right\": \"6px\"\n      },\n      onClick: () => {\n        this.state.showSubSample == true ? this.showAPTestList() : this.showAPSubSampleinfo();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 987,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEye,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990,\n        columnNumber: 65\n      }\n    }), \" \", this.state.showSubSample == true ? this.props.intl.formatMessage({\n      id: \"IDS_TEST\"\n    }) : this.props.intl.formatMessage({\n      id: \"IDS_SUBSAMPLE\"\n    })) : \"\")), this.state.showSample ? /*#__PURE__*/React.createElement(CustomTabs, {\n      paneHeight: this.state.tabPane,\n      activeKey: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\n      tabDetail: this.sampleTabDetail(),\n      onTabChange: this.onSampleTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 997,\n        columnNumber: 53\n      }\n    }) : this.state.showSubSample ? /*#__PURE__*/React.createElement(CustomTabs, {\n      activeKey: this.props.Login.activeSubSampleTab ? this.props.Login.activeSubSampleTab === 'IDS_SUBSAMPLEATTACHMENTS' ? 'IDS_SUBSAMPLEATTACHMENTS' : this.props.Login.activeSubSampleTab : 'IDS_SUBSAMPLEATTACHMENTS',\n      tabDetail: this.subsampleTabDetail(),\n      onTabChange: this.onSubSampleTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1000,\n        columnNumber: 57\n      }\n    }) : this.state.showTest ? /*#__PURE__*/React.createElement(CustomTabs, {\n      paneHeight: this.state.tabPane,\n      activeKey: this.props.Login.activeTestTab || \"IDS_RESULTS\",\n      tabDetail: this.testTabDetail(),\n      onTabChange: this.onTestTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1003,\n        columnNumber: 61\n      }\n    }) : \"\")))))))), this.props.Login.openChildModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      onSaveClick: this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.onSaveClick,\n      operation: this.props.Login.operation,\n      screenName: this.props.Login.screenName,\n      closeModal: this.handleClose,\n      show: this.props.Login.openChildModal,\n      inputParam: this.props.Login.inputParam,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.operation === 'enforce' ? [{\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"senforcestatuscomment\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }] : [],\n      loginoperation: this.props.Login.operation === 'view' ? true : false //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\n      ,\n      noSave: this.props.Login.operation === 'view' ? true : false,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1034,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === 'enforce' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1042,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1043,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"ngradecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_STATUS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_STATUS\"\n        }),\n        value: this.props.Login.masterData.GradeValue || [],\n        options: this.props.Login.masterData.Grade || [],\n        optionId: \"ngradecode\",\n        optionValue: \"sgradename\",\n        isMandatory: true,\n        isMulti: false,\n        isDisabled: false,\n        isSearchable: false,\n        closeMenuOnSelect: true,\n        isClearable: false,\n        onChange: event => this.onComboChange(event, 'ngradecode'),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1044,\n          columnNumber: 41\n        }\n      }), /*#__PURE__*/React.createElement(FormTextarea, {\n        name: \"senforcestatuscomment\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_COMMENTS\"\n        }),\n        value: this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\",\n        rows: \"2\",\n        isMandatory: true,\n        required: false,\n        maxLength: 255,\n        onChange: event => this.onInputOnChange(event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1060,\n          columnNumber: 41\n        }\n      }))) : this.props.Login.operation === 'dynamic' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1074,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1075,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FormNumericInput, {\n        name: \"retestcount\",\n        label: this.props.intl.formatMessage({\n          id: \"IDS_RETESTCOUNT\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_MAX\"\n        }) + \": \" + this.props.Login.masterData.retestcount,\n        type: \"text\",\n        strict: true,\n        className: \"form-control\",\n        value: this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\",\n        maxLength: 6,\n        onChange: event => this.onNumericInputOnChange(event, 'retestcount'),\n        isMandatory: \"*\",\n        required: true,\n        noStyle: true // min={1}\n        // max={this.props.Login.masterData.retestcount}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1088,\n          columnNumber: 45\n        }\n      }))) : this.props.Login.operation === 'view' ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1107,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1108,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"nresultparamcommenthistorycode\",\n        data: this.props.Login.masterData.enforceCommentsHistory || [],\n        dataResult: this.props.Login.masterData.enforceCommentsHistory || [],\n        dataState: {\n          skip: 0,\n          take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0\n        } // dataStateChange={this.dataStateChange}\n        ,\n        extractedColumnList: [{\n          \"idsName\": \"IDS_ENFORCESTATUSCOMMENT\",\n          \"dataField\": \"senforcestatuscomment\",\n          \"width\": \"450px\"\n        }],\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        pageable: false,\n        hideColumnFilter: true,\n        isActionRequired: false,\n        isToolBarRequired: false,\n        scrollable: \"scrollable\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1109,\n          columnNumber: 49\n        }\n      }))) : /*#__PURE__*/React.createElement(EditApprovalParameter, {\n        ApprovalParamEdit: this.props.Login.ApprovalParamEdit || [],\n        changeMandatory: this.changeMandatory,\n        selectedRecord: this.state.selectedRecord.approvalParameterEdit || {},\n        nsubsampleneed: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1133,\n          columnNumber: 41\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017,\n        columnNumber: 21\n      }\n    }) : \"\", this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ? /*#__PURE__*/React.createElement(TemplateForm, {\n      templateData: this.props.Login.masterData.ChecklistData,\n      needSaveButton: false,\n      formRef: this.formRef,\n      onTemplateInputChange: this.onTemplateInputChange,\n      handleClose: this.handleClose,\n      onTemplateComboChange: this.onTemplateComboChange,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.onSaveCheckList,\n      Login: this.props.Login,\n      viewScreen: this.props.Login.openTemplateModal,\n      selectedRecord: this.state.selectedRecord || [],\n      onTemplateDateChange: this.onTemplateDateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1143,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      sampleListColumns,\n      subSampleListColumns,\n      testListColumns,\n      SingleItem,\n      sampleListMainField,\n      subSampleListMainField,\n      testListMainField,\n      SampleGridItem,\n      SampleGridExpandableItem,\n      testMoreField,\n      resultDataState,\n      instrumentDataState,\n      materialDataState,\n      taskDataState,\n      documentDataState,\n      resultChangeDataState,\n      historyDataState,\n      testCommentDataState,\n      samplePrintHistoryDataState,\n      sampleHistoryDataState,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      UserSectionList,\n      TestList,\n      skip,\n      take,\n      testskip,\n      testtake,\n      selectedFilter,\n      DynamicSampleColumns,\n      DynamicSubSampleColumns,\n      DynamicTestColumns,\n      DynamicGridItem,\n      DynamicGridMoreField,\n      stateDynamicDesign,\n      sampleSearchField,\n      subsampleSearchField,\n      testSearchField\n    } = this.state;\n    let bool = false;\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      bool = true; // this.setState({userRoleControlRights, controlMap});\n    }\n\n    if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\n      if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\n        let dataState = {\n          skip: 0,\n          take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 //, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \n\n        };\n        resultDataState = dataState;\n        instrumentDataState = dataState;\n        materialDataState = dataState;\n        taskDataState = dataState;\n        documentDataState = dataState;\n        resultChangeDataState = dataState;\n        historyDataState = dataState;\n        testCommentDataState = dataState; // this.setState({\n        //     resultDataState: dataSate,instrumentDataState: dataSate,\n        //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\n        //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\n        //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\n        // });\n\n        bool = true;\n      }\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord; // this.setState({selectedRecord: this.props.Login.selectedRecord });\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\n      UserSectionList = UserSectionListMap.get(\"OptionList\");\n      TestList = TestListMap.get(\"OptionList\");\n      bool = true;\n      skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\n      take = this.props.Login.take || take;\n      testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip;\n      testtake = this.props.Login.testtake || testtake;\n      let selectFilterStatus = {\n        ntransactionstatus: transactionStatus.PARTIAL,\n        sfilterstatus: this.props.intl.formatMessage({\n          id: \"IDS_PARTIAL\"\n        }),\n        scolorhexcode: \"#800000\"\n      }; // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \n      //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \n      //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\n      // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\n      //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\n      //     this.props.Login.masterData.FilterStatus : [];\n\n      const selectedFilters = this.props.Login.masterData.FilterStatus || [];\n      const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\n      const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL);\n\n      if (selectedFiltersNew.length > 0 && index === -1) {\n        selectedFiltersNew.push(selectFilterStatus);\n      }\n\n      selectedFilter = selectedFiltersNew;\n\n      if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\n        resultDataState = this.props.Login.resultDataState;\n      }\n\n      if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\n        instrumentDataState = this.props.Login.instrumentDataState;\n      }\n\n      if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\n        taskDataState = this.props.Login.taskDataState;\n      }\n\n      if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\n        resultChangeDataState = this.props.Login.resultChangeDataState;\n      }\n\n      if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\n        historyDataState = this.props.Login.historyDataState;\n      }\n\n      if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\n        testCommentDataState = this.props.Login.testCommentDataState;\n      }\n\n      if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\n        samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\n      }\n\n      if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\n        sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\n      }\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\n      DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\n      testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\n      sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\n      subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\n      testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\n      bool = true; // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\n      // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\n      // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\n      // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\n      // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\n      // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\n      // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\n      // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\n      // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\n      // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\n      // let {selectedRecord}=this.state\n\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate; // this.setState({\n      //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\n      //     sampleListMainField, subSampleListMainField, testListMainField,\n      //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\n      // })\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        sampleListColumns,\n        subSampleListColumns,\n        testListColumns,\n        SingleItem,\n        sampleListMainField,\n        subSampleListMainField,\n        testListMainField,\n        SampleGridItem,\n        SampleGridExpandableItem,\n        testMoreField,\n        resultDataState,\n        instrumentDataState,\n        materialDataState,\n        taskDataState,\n        documentDataState,\n        resultChangeDataState,\n        historyDataState,\n        testCommentDataState,\n        samplePrintHistoryDataState,\n        sampleHistoryDataState,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        UserSectionList,\n        TestList,\n        skip,\n        take,\n        testskip,\n        testtake,\n        selectedFilter,\n        DynamicSampleColumns,\n        DynamicSubSampleColumns,\n        DynamicTestColumns,\n        DynamicGridItem,\n        DynamicGridMoreField,\n        stateDynamicDesign,\n        sampleSearchField,\n        subsampleSearchField,\n        testSearchField\n      });\n    }\n  } // previewSampleReport = (ncontrolCode) => {\n  //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\n  //     const selectedSample = this.props.Login.masterData.selectedSample[0];\n  //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\n  //                         userinfo:this.props.Login.userInfo,\n  //                         nprimarykey: selectedSample.npreregno,\n  //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\n  //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\n  //                         sprimarykeyname :\"npreregno\",\n  //                         ncontrolcode : ncontrolCode,\n  //                         nregtypecode:selectedSample.nregtypecode,\n  //                         nregsubtypecode: selectedSample.nregsubtypecode\n  //                         }\n  //     this.props.previewSampleReport(inputData);\n  // }\n\n\n  sampleTabDetail() {\n    const tabMap = new Map();\n    let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\n    tabMap.set(\"IDS_SAMPLEATTACHMENTS\", /*#__PURE__*/React.createElement(Attachments, {\n      screenName: \"IDS_SAMPLEATTACHMENTS\",\n      selectedMaster: this.props.Login.masterData.APSelectedSample,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      attachments: this.props.Login.masterData.RegistrationAttachment || [],\n      deleteRecord: this.props.deleteAttachment,\n      onSaveClick: this.onAttachmentSaveClick,\n      masterList: this.props.Login.masterData.APSelectedSample,\n      masterAlertStatus: \"IDS_SELECTSAMPLETOADDATTACHEMENT\",\n      fetchRecord: this.props.getAttachmentCombo,\n      addName: \"AddSampleAttachment\",\n      editName: \"EditSampleAttachment\",\n      deleteName: \"DeleteSampleAttachment\",\n      viewName: \"ViewSampleAttachment\",\n      methodUrl: \"SampleAttachment\",\n      deleteParam: {\n        methodUrl: \"SampleAttachment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: this.props.Login.screenName\n      },\n      editParam: {\n        methodUrl: \"SampleAttachment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        masterList: this.props.Login.masterData.APSelectedSample\n      },\n      selectedListName: \"IDS_SAMPLES\",\n      displayName: \"sarno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1375,\n        columnNumber: 13\n      }\n    }));\n    tabMap.set(\"IDS_SAMPLECOMMENTS\", /*#__PURE__*/React.createElement(Comments, {\n      screenName: \"IDS_SAMPLECOMMENTS\",\n      onSaveClick: this.onCommentsSaveClick,\n      selectedMaster: \"APSelectedSample\",\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      Comments: this.props.Login.masterData.RegistrationComment || [],\n      fetchRecord: this.props.getCommentsCombo,\n      addName: \"AddSampleComment\",\n      editName: \"EditSampleComment\",\n      deleteName: \"DeleteSampleComment\",\n      methodUrl: \"SampleComment\",\n      isTestComment: false,\n      masterList: this.props.Login.masterData.APSelectedSample,\n      masterAlertStatus: \"IDS_SELECTSAMPLETOADDCOMMENTS\",\n      primaryKeyField: \"nregcommentcode\",\n      dataState: this.state.testCommentDataState,\n      dataStateChange: this.testDataStateChange,\n      deleteParam: {\n        methodUrl: \"SampleComment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: \"IDS_SAMPLECOMMENTS\"\n      },\n      editParam: {\n        methodUrl: \"SampleComment\",\n        npreregno,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        esignRights: this.props.Login.userRoleControlRights,\n        screenName: \"IDS_SAMPLECOMMENTS\",\n        operation: \"update\",\n        masterList: this.props.Login.masterData.APSelectedSample || [],\n        ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\n      },\n      selectedListName: \"IDS_SAMPLES\",\n      displayName: \"sarno\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 42\n      }\n    }));\n    tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\", /*#__PURE__*/React.createElement(SampleApprovalHistory, {\n      userInfo: this.props.Login.userInfo,\n      ApprovalHistory: this.props.Login.masterData.SampleApprovalHistory,\n      inputParam: this.props.Login.inputParam,\n      dataState: this.state.sampleHistoryDataState,\n      dataStateChange: this.sampleDataStateChange,\n      screenName: \"IDS_SAMPLEAPPROVALHISTORY\",\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      selectedId: null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1459,\n        columnNumber: 13\n      }\n    })); // tabMap.set(\"IDS_PRINTHISTORY\",\n    //     <ApprovalPrintHistoryTab\n    //         userInfo={this.props.Login.userInfo}\n    //         ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\n    //         inputParam={this.props.Login.inputParam}\n    //         dataState={this.state.samplePrintHistoryDataState}\n    //         dataStateChange={this.sampleDataStateChange}\n    //         screenName=\"IDS_PRINTHISTORY\"\n    //         controlMap={this.state.controlMap}\n    //         userRoleControlRights={this.state.userRoleControlRights}\n    //         selectedId={null}\n    //     />);\n    // if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\n    //     tabMap.set(\"IDS_REPORTHISTORY\",\n    //         <ReportHistoryTab\n    //             userInfo={this.props.Login.userInfo}\n    //             COAHistory={this.props.Login.masterData.COAHistory}\n    //             inputParam={this.props.Login.inputParam}\n    //             dataState={this.state.reportHistoryDataState}\n    //             dataStateChange={this.sampleDataStateChange}\n    //             screenName=\"IDS_REPORTHISTORY\"\n    //             controlMap={this.state.controlMap}\n    //             userRoleControlRights={this.state.userRoleControlRights}\n    //             selectedId={null}\n    //             viewDownloadFile={this.downloadReport}\n    //         />);\n    // }\n\n    return tabMap;\n  }\n\n  showSampleInfo() {\n    this.setState({\n      showSample: true,\n      showTest: false\n    });\n  }\n\n  showTestList() {\n    this.setState({\n      showTest: true,\n      showSample: false\n    });\n  }\n\n  // covertDatetoString(startDateValue, endDateValue) {\n  //     const startDate = new Date(startDateValue);\n  //     const endDate = new Date(endDateValue);\n  //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\n  //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\n  //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\n  //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n  //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\n  //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\n  //     const fromDate = fromDateOnly + \"T00:00:00\";\n  //     const toDate = toDateOnly + \"T23:59:59\";\n  //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\n  // }\n  getActiveTestURL() {\n    let url = \"approval/getapprovalparameter\";\n\n    switch (this.props.Login.activeTestTab) {\n      case \"IDS_RESULTS\":\n        url = \"approval/getapprovalparameter\";\n        break;\n\n      case \"IDS_INSTRUMENT\":\n        url = \"resultentrybysample/getResultUsedInstrument\";\n        break;\n\n      case \"IDS_MATERIAL\":\n        url = \"resultentrybysample/getResultUsedMaterial\";\n        break;\n\n      case \"IDS_TASK\":\n        url = \"resultentrybysample/getResultUsedTask\";\n        break;\n\n      case \"IDS_TESTATTACHMENTS\":\n        url = \"attachment/getTestAttachment\";\n        break;\n\n      case \"IDS_TESTCOMMENTS\":\n        url = \"comments/getTestComment\";\n        break;\n\n      case \"IDS_RESULTCHANGEHISTORY\":\n        url = \"approval/getApprovalResultChangeHistory\";\n        break;\n\n      case \"IDS_TESTAPPROVALHISTORY\":\n        url = \"approval/getApprovalHistory\";\n        break;\n\n      default:\n        url = \"approval/getapprovalparameter\";\n        break;\n    }\n\n    return url;\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  getsubSampleDetail,\n  getTestDetail,\n  getTestChildTabDetail,\n  performAction,\n  updateStore,\n  viewAttachment,\n  checkListRecord,\n  updateDecision,\n  getRegistrationType,\n  getRegistrationSubType,\n  getFilterStatus,\n  getApprovalSample,\n  getStatusCombo,\n  validateEsignCredential,\n  crudMaster,\n  validateEsignforApproval,\n  getApprovalVersion,\n  getParameterEdit,\n  filterTransactionList,\n  getSampleChildTabDetail,\n  getAttachmentCombo,\n  deleteAttachment,\n  getCommentsCombo,\n  previewSampleReport,\n  getFilterBasedTest,\n  generateCOAReport,\n  getEnforceCommentsHistory,\n  reportGenerate,\n  getSubSampleChildTabDetail\n})(injectIntl(Approval));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/approval/Approval.jsx"],"names":["React","connect","injectIntl","faBolt","faEye","faPencilAlt","faSync","FontAwesomeIcon","Button","Card","Col","Nav","Row","ContentPanel","ListWrapper","ProductList","SplitterLayout","DEFAULT_RETURN","getsubSampleDetail","getTestDetail","getTestChildTabDetail","performAction","updateStore","updateDecision","getRegistrationType","getRegistrationSubType","getFilterStatus","getApprovalSample","getStatusCombo","validateEsignCredential","crudMaster","validateEsignforApproval","getApprovalVersion","getParameterEdit","filterTransactionList","checkListRecord","generateCOAReport","getSampleChildTabDetail","getAttachmentCombo","viewAttachment","deleteAttachment","getCommentsCombo","previewSampleReport","getFilterBasedTest","getEnforceCommentsHistory","reportGenerate","getSubSampleChildTabDetail","CustomTabs","ApprovalResultsTab","getControlMap","showEsign","sortData","constructOptionList","getSameRecordFromTwoArrays","convertDateValuetoString","rearrangeDateFormat","toast","TransactionListMasterJson","ApprovalFilter","designProperties","transactionStatus","RegistrationType","RegistrationSubType","BreadcrumbComponent","SampleInfoGrid","SampleInfoView","ApprovalInstrumentTab","FormSelectSearch","FormTextarea","Esign","SlideOutModal","EditApprovalParameter","SampleApprovalHistory","ResultChangeHistoryTab","ApprovalTask","templateChangeHandler","TemplateForm","Attachments","onSaveSampleAttachment","onSaveSubSampleAttachment","onSaveTestAttachment","Comments","onSaveSampleComments","onSaveSubSampleComments","onSaveTestComments","CustomPopOver","ScrollBar","ApprovalPrintHistoryTab","ApprovalHistoryTab","FormNumericInput","DataGrid","ReportHistoryTab","ApprovalUsedMaterial","mapStateToProps","state","Login","Approval","Component","constructor","props","paneSizeChange","d","setState","splitChangeWidthPercentage","handleSubSamplePageChange","e","subSampleSkip","skip","subSampleTake","take","setTimeout","_scrollBarRef","updateScroll","showAPSampleinfo","showSample","showTest","sampleInfoDataStateChange","event","sampleGridDataState","dataState","verticalPaneSizeChange","val","enableAutoHeight","initialVerticalWidth","changeSplitterOption","downloadReport","input","inputParam","inputData","selectedRecord","userinfo","userInfo","classUrl","operation","methodUrl","subsampleTabDetail","ntransactionsamplecode","masterData","APSelectedSubSample","map","sample","join","tabMap","Map","subsampleList","AP_SUBSAMPLE","slice","selectedSubSampleList","set","onAttachmentSaveClick","controlMap","userRoleControlRights","RegistrationSampleAttachment","attachmentskip","attachmenttake","settings","parseInt","esignRights","masterList","onCommentsSaveClick","RegistrationSampleComment","subSampleCommentDataState","subSampledataStateChange","screenName","ncontrolCode","has","get","ncontrolcode","testTabDetail","testTabMap","testskip","testtake","testList","searchedTests","AP_TEST","editTestCommentsId","selectedTestList","APSelectedTest","ntransactiontestcode","test","resultDataState","testDataStateChange","selectedParamId","instrumentDataState","materialDataState","selectedId","dataStateChange","deleteMaterialRecord","fetchMaterialRecord","ResultUsedTasks","taskDataState","RegistrationTestAttachment","nneedsubsample","VALUE","RegistrationTestComment","testCommentDataState","ApprovalResultChangeHistory","resultChangeDataState","ApprovalHistory","historyDataState","onNumericInputOnChange","value","name","onTestTabChange","tabProps","activeTestTab","length","String","item","npreregno","APSelectedSample","documentDataState","warn","intl","formatMessage","id","onSampleTabChange","activeSampleTab","selectedSample","onSubSampleTabChange","activeSubSampleTab","selectedSubSample","subSampleAttachmentDataState","handlePageChange","handleTestPageChange","checkRetestAction","action","ntransactionstatus","RETEST","retestcount","updateInfo","typeName","data","openChildModal","performTestActions","info","obj","realFromDate","realToDate","ntransCode","FilterStatusValue","ALL","FilterStatus","status","nsectioncode","UserSectionValue","UserSection","section","ntestcode","realTestValue","nTransStatus","nsampletypecode","realSampleTypeValue","nregtypecode","realRegTypeValue","nregsubtypecode","realRegSubTypeValue","napprovalversioncode","ApprovalVersionValue","napprovalconfigversioncode","nneedtemplatebasedflow","dfrom","fromDate","dto","toDate","nflag","ntype","undefined","checkBoxOperation","ndesigntemplatemappingcode","postParamList","nesignneed","YES","loadEsign","screenData","realFilterStatusValue","sampleList","AP_SAMPLE","splice","selectedsampleList","TestValue","napprovalconfigcode","onFilterComboChange","comboData","fieldName","inputParamData","SampleTypeValue","RegTypeValue","RegSubTypeValue","stransactionstatus","DesignTemplateMappingValue","napproveconfversioncode","JobStatusValue","njobstatuscode","onComboChange","GradeValue","onInputOnChange","target","type","checked","NO","handleDateChange","dateName","dateValue","Date","changeMandatory","dataItem","currentTarget","ntransactionresultcode","onReload","realApprovalVersionValue","realUserSectionValue","sfilterstatus","searchSampleRef","searchSubSampleRef","searchTestRef","samplePrintHistoryDataState","sampleHistoryDataState","onFilterSubmit","realDesignTemplateMappingValue","sampleGridDataStateChange","popUptestDataState","sampleDataStateChange","reportHistoryDataState","onSaveClick","saveType","formRef","ok","ngradecode","senforcestatuscomment","selectedTestCode","postParam","selectedObject","primaryKeyField","saveParam","approvalparameter","approvalParameterEdit","Object","keys","key","push","nreportmandatory","handleClose","nformcode","openModal","templateData","openTemplateModal","validateEsign","sreason","password","onTemplateInputChange","control","onTemplateComboChange","onTemplateDateChange","dateData","isTestComment","x","searchedSample","acceptList","searchedSubSample","selectedSampleList","selectedMaster","reporparam","createRef","masterStatus","error","oldComboData","showSubSample","sampleListColumns","subSampleListColumns","testListColumns","TableExpandableItem","SingleItem","SampleGridItem","SampleGridExpandableItem","sampleListMainField","subSampleListMainField","testListMainField","testMoreField","firstPane","paneHeight","secondPaneHeight","tabPane","SampletypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","ConfigVersionList","UserSectionList","stateDynamicDesign","sampleSearchField","subsampleSearchField","testSearchField","TestList","enablePin","getDerivedStateFromProps","multilingualMsg","componentDidMount","parentHeight","height","clientHeight","constructDesign","list","newList","i","LABEL","showAPTestList","showAPSubSampleinfo","gridfillingColumn","temparray","option","slanguagetypecode","render","filterSampleParam","inputListName","fetchUrl","isSortable","sortValue","sortList","childRefs","ref","childFilteredListName","fecthInputObject","searchFieldList","changeList","filterSubSampleParam","filterTestParam","getActiveTestURL","isSingleSelect","AP_SampleList","AP_SubSampleList","AP_TestList","decisionStatus","actionStatus","subSampleGetParam","testGetParam","testChildGetParam","breadCrumbData","breadCrumbFrom","breadCrumbto","ssampletypename","sregtypename","sregsubtypename","sregtemplatename","sversionname","ssectionname","stestsynonym","reportPreviewId","editParamId","TestDecisionActionId","TestApprovalActionId","reportGenerateId","coaReportId","filteredListName","clearFilter","searchRef","updatedListname","unchangeList","testDesign","borderBottom","display","float","split","setting","DynamicTestColumns","indexOf","mainDesign","marginTop","selectedFilter","DynamicSubSampleColumns","subSampleMoreField","showFilter","openFilter","closeFilter","DynamicSampleColumns","sampleMoreField","PLASMA_POOL","title","controlname","objectName","hidden","onClick","ROUTINE","JobStatus","onDesignTemplateChange","DesignTemplateMapping","window","outerHeight","background","DynamicGridItem","DynamicGridMoreField","sampleTabDetail","Grade","enforceCommentsHistory","ApprovalParamEdit","nsubsampleneed","ChecklistData","onSaveCheckList","componentDidUpdate","previousProps","bool","values","SampletypeListMap","SampleType","RegistrationTypeListMap","RegType","RegistrationSubTypeListMap","RegSubType","FilterStatusListMap","ConfigVersionListMap","ApprovalVersion","UserSectionListMap","TestListMap","Test","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","JSON","parse","stringify","index","findIndex","DynamicDesign","dynamicColumn","jsondata","samplelistitem","subsamplelistitem","testlistitem","samplegriditem","samplegridmoreitem","sampledisplayfields","testlistmoreitems","samplesearchfields","subsamplesearchfields","testsearchfields","DesignTemplateMappingMap","RegistrationAttachment","RegistrationComment","showSampleInfo","showTestList","url"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { faBolt, faEye, faPencilAlt, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card, Col, Nav, Row, } from 'react-bootstrap';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { ProductList } from '../testmanagement/testmaster-styled';\r\n//import SplitPane from \"react-splitter-layout\";\r\nimport SplitterLayout from \"react-splitter-layout\";\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, updateDecision,\r\n    getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo, validateEsignCredential,\r\n    crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList, checkListRecord, generateCOAReport,\r\n    getSampleChildTabDetail, getAttachmentCombo, viewAttachment, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    getEnforceCommentsHistory, reportGenerate,getSubSampleChildTabDetail\r\n} from '../../actions'\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport ApprovalResultsTab from './ApprovalResultsTab';\r\nimport { getControlMap, showEsign, sortData, constructOptionList, getSameRecordFromTwoArrays, convertDateValuetoString, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport { toast } from 'react-toastify';\r\nimport TransactionListMasterJson from '../../components/TransactionListMasterJson';\r\nimport ApprovalFilter from './ApprovalFilter'\r\nimport { designProperties, transactionStatus, RegistrationType, RegistrationSubType } from '../../components/Enumeration';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport SampleInfoGrid from './SampleInfoGrid';\r\nimport SampleInfoView from './SampleInfoView';\r\nimport ApprovalInstrumentTab from './ApprovalInstrumentTab'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport Esign from '../audittrail/Esign';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport EditApprovalParameter from './EditApprovalParameter';\r\n//import ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport SampleApprovalHistory from './SampleApprovalHistory';\r\nimport ResultChangeHistoryTab from './ResultChangeHistoryTab';\r\nimport ApprovalTask from './ApprovalTask';\r\nimport { templateChangeHandler } from '../checklist/checklist/checklistMethods';\r\nimport TemplateForm from '../checklist/checklist/TemplateForm';\r\nimport Attachments from '../attachmentscomments/attachments/Attachments';\r\nimport { onSaveSampleAttachment,onSaveSubSampleAttachment, onSaveTestAttachment } from '../attachmentscomments/attachments/AttachmentFunctions';\r\nimport Comments from '../attachmentscomments/comments/Comments';\r\nimport { onSaveSampleComments,onSaveSubSampleComments, onSaveTestComments } from '../attachmentscomments/comments/CommentFunctions';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport CustomPopOver from '../../components/customPopover';\r\nimport ScrollBar from 'react-perfect-scrollbar';\r\nimport ApprovalPrintHistoryTab from './ApprovalPrintHistoryTab';\r\nimport ApprovalHistoryTab from './ApprovalHistoryTab';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport ReportHistoryTab from './ReportHistoryTab';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport ApprovalUsedMaterial from './ApprovalUsedMaterial';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Approval extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.searchSampleRef = React.createRef();\r\n        this.searchSubSampleRef = React.createRef();\r\n        this.searchTestRef = React.createRef();\r\n        this.formRef = React.createRef();\r\n        this.state = {\r\n            sampleGridDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            resultDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }]\r\n            },\r\n            instrumentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            materialDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            taskDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,// group: [{ field: 'sarno' }] \r\n            },\r\n            testCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            documentDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            resultChangeDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'ssamplearno' }] \r\n            },\r\n            sampleHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            reportHistoryDataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            historyDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }] \r\n            },\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n            samplePrintHistoryDataState: {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5, //group: [{ field: 'sarno' }]\r\n            },\r\n            subSampleCommentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            subSampleAttachmentDataState: {\r\n                skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: 'groupingField' }] \r\n            },\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            oldComboData: {},\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: undefined,\r\n            showSample: false,\r\n            showSubSample: false,\r\n            showTest: true,\r\n            sampleListColumns: [],\r\n            subSampleListColumns: [],\r\n            testListColumns: [],\r\n            TableExpandableItem: [],\r\n            SingleItem: [],\r\n            SampleGridItem: [],\r\n            SampleGridExpandableItem: [],\r\n            sampleListMainField: [],\r\n            subSampleListMainField: [],\r\n            testListMainField: [],\r\n            testMoreField: [],\r\n            firstPane: 0,\r\n            paneHeight: 0,\r\n            secondPaneHeight: 0,\r\n            tabPane: 0,\r\n            SampletypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            ConfigVersionList: [],\r\n            UserSectionList: [],\r\n            stateDynamicDesign: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            TestList: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings && this.props.Login.settings[12],\r\n            splitChangeWidthPercentage: 22,\r\n            subSampleSkip: 0,\r\n            subSampleTake: 5,\r\n            initialVerticalWidth: \"57vh\",\r\n            enablePin: false\r\n        }\r\n        //this.onSecondaryPaneSizeChange = this.onSecondaryPaneSizeChange.bind(this);\r\n    }\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\") {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.multilingualMsg !== undefined && props.Login.multilingualMsg !== \"\") {\r\n            toast.warn(props.intl.formatMessage({ id: props.Login.multilingualMsg }));\r\n            props.Login.multilingualMsg = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n\r\n        return null;\r\n    }\r\n    // onSecondaryPaneSizeChange = (e, val) => {\r\n    //     this.setState({\r\n    //         firstPane: e - val,\r\n    //         tabPane: e - 80,\r\n    //         childPane: this.state.parentHeight - e - 80\r\n    //     })\r\n    // }\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height - 50\r\n            });\r\n        }\r\n    }\r\n\r\n    constructDesign(list) {\r\n\r\n        let newList = []\r\n        if (list.length > 0) {\r\n            list.map((i) => {\r\n                newList.push({ [designProperties.LABEL]: i, [designProperties.VALUE]: i })\r\n            })\r\n        }\r\n        return newList;\r\n    }\r\n\r\n    handleSubSamplePageChange = e => {\r\n        this.setState({ subSampleSkip: e.skip, subSampleTake: e.take });\r\n\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    }\r\n\r\n    showAPSampleinfo = () => {\r\n\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n\r\n    showAPTestList() {\r\n\r\n        this.setState({ showTest: true, showSample: false, showSubSample: false })\r\n    }\r\n    showAPSubSampleinfo() {\r\n        this.setState({ showSample: false, showTest: true, showSubSample: !this.state.showSubSample })\r\n    }\r\n    gridfillingColumn(data) {\r\n        //  const tempArray = [];\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n\r\n    sampleInfoDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n    verticalPaneSizeChange = (val) => {\r\n        if (this.state.enableAutoHeight) {\r\n            this.setState({\r\n                initialVerticalWidth: val - 150\r\n            })\r\n        }\r\n    }\r\n    changeSplitterOption = () => {\r\n        this.setState({\r\n            enableAutoHeight: !this.state.enableAutoHeight,\r\n            initialVerticalWidth: \"57vh\"\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const filterSampleParam = {\r\n            inputListName: \"AP_SAMPLE\",\r\n            selectedObject: \"APSelectedSample\",\r\n            primaryKeyField: \"npreregno\",\r\n            fetchUrl: \"approval/getApprovalSubSample\",\r\n            isSortable: true,\r\n            sortValue: 'npreregno',\r\n            sortList: ['AP_TEST'],\r\n            childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                nsampletypecode: (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ntransactionstatus: this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                nsectioncode: this.props.Login.masterData.realUserSectionValue ? this.props.Login.masterData.realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.realUserSectionValue.nsectioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue.ntestcode,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation: 3,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            // searchFieldList: [\"sarno\", \"dregdate\", \"sdecisionstatus\", \"ssampletypestatus\", \"smanuflotno\", \"smanufname\", \"smanufsitename\", \"sproductcatname\", \"sproductname\", \"sspecname\"],\r\n            searchFieldList: this.state.sampleSearchField || [],\r\n            changeList: [\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSample\", \"APSelectedSubSample\", \"APSelectedTest\", \"PrintHistory\", \"COAHistory\"]\r\n        };\r\n        const filterSubSampleParam = {\r\n            inputListName: \"AP_SUBSAMPLE\",\r\n            selectedObject: \"APSelectedSubSample\",\r\n            primaryKeyField: \"ntransactionsamplecode\",\r\n            fetchUrl: \"approval/getApprovalTest\",\r\n            isSortable: true,\r\n            sortValue: 'npreregno',\r\n            sortList: ['AP_TEST'],\r\n            childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n            fecthInputObject: {\r\n                ntype: 2,\r\n                nflag: 2,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: (this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode : null,\r\n                nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation: 3,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n            },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.subsampleSearchField || [],\r\n            changeList: [\"AP_TEST\", \"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedSubSample\", \"APSelectedTest\",\"RegistrationSampleComment\",\"RegistrationSampleAttachment\"]\r\n        };\r\n\r\n        const filterTestParam = {\r\n            inputListName: \"AP_TEST\",\r\n            selectedObject: \"APSelectedTest\",\r\n            primaryKeyField: \"ntransactiontestcode\",\r\n            fetchUrl: this.getActiveTestURL(),\r\n            fecthInputObject: {\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                checkBoxOperation: 3,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n            },\r\n            isSingleSelect: false,\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.state.testSearchField || [],\r\n            changeList: [\"ApprovalParameter\",\r\n                \"ApprovalResultChangeHistory\", \"ApprovalHistory\", \"SampleApprovalHistory\", \"ResultUsedInstrument\",\r\n                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\",\r\n                \"RegistrationAttachment\", \"APSelectedTest\"]\r\n        };\r\n\r\n        let AP_SampleList = this.props.Login.masterData.AP_SAMPLE ? sortData(this.props.Login.masterData.AP_SAMPLE, 'descending', 'npreregno') : [];\r\n        let AP_SubSampleList = this.props.Login.masterData.AP_SUBSAMPLE ? this.props.Login.masterData.AP_SUBSAMPLE : [];\r\n        let AP_TestList = this.props.Login.masterData.AP_TEST ? this.props.Login.masterData.AP_TEST : [];\r\n        let decisionStatus = this.props.Login.masterData.decisionStatus ? sortData(this.props.Login.masterData.decisionStatus, 'ascending', 'ntransactionstatus') : [];\r\n        let actionStatus = this.props.Login.masterData.actionStatus ? sortData(this.props.Login.masterData.actionStatus, 'descending', 'ntransactionstatus') : [];\r\n        let subSampleGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchSubSampleRef: this.searchSubSampleRef,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            subSampleSkip: this.state.subSampleSkip,\r\n            subSampleTake: this.state.subSampleTake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n        };\r\n        let testGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.realFilterStatusValue ? this.props.Login.masterData.realFilterStatusValue.ntransactionstatus : this.props.Login.masterData.FilterStatusValue ? this.props.Login.masterData.FilterStatusValue.ntransactionstatus : -1),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            napprovalversioncode: this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode : -1,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.realTestValue ? this.props.Login.masterData.realTestValue.ntestcode : -1,\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            searchTestRef: this.searchTestRef,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n            sampleHistoryDataState: this.state.sampleHistoryDataState,\r\n            subSampleCommentDataState:this.state.subSampleCommentDataState,\r\n            subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\r\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow,\r\n        };\r\n        let testChildGetParam = {\r\n            masterData: this.props.Login.masterData,\r\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n            userinfo: this.props.Login.userInfo,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n            npreregno: this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.map(sample => sample.npreregno).join(\",\"),\r\n            ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample && this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n            activeTestTab: this.props.Login.activeTestTab || \"IDS_RESULTS\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"IDS_SAMPLEINFO\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            screenName: this.props.Login.screenName,\r\n            postParamList: this.postParamList,\r\n            testskip: this.state.testskip,\r\n            testtake: this.state.testtake,\r\n            resultDataState: this.state.resultDataState,\r\n            instrumentDataState: this.state.instrumentDataState,\r\n            materialDataState: this.state.materialDataState,\r\n            taskDataState: this.state.taskDataState,\r\n            documentDataState: this.state.documentDataState,\r\n            historyDataState: this.state.historyDataState,\r\n            resultChangeDataState: this.state.resultChangeDataState,\r\n            testCommentDataState: this.state.testCommentDataState,\r\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\r\n\r\n        };\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            {\r\n                \"label\": \"IDS_SAMPLETYPE\",\r\n                \"value\": this.props.Login.masterData.realSampleTypeValue ? this.props.Login.masterData.realSampleTypeValue.ssampletypename || \"NA\" :\r\n                    this.props.Login.masterData.SampleTypeValue ? this.props.Login.masterData.SampleTypeValue.ssampletypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_DESIGNTEMPLATE\",\r\n                \"value\": this.props.Login.masterData.realDesignTemplateMappingValue ?\r\n                    this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" :\r\n                    this.props.Login.masterData.realDesignTemplateMappingValue ? this.props.Login.masterData.realDesignTemplateMappingValue.sregtemplatename || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_CONFIGVERSION\",\r\n                \"value\": this.props.Login.masterData.realApprovalVersionValue ?\r\n                    this.props.Login.masterData.realApprovalVersionValue.sversionname || \"NA\" :\r\n                    this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.sversionname || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_SECTION\",\r\n                \"value\": this.props.Login.masterData.realUserSectionValue ?\r\n                    this.props.Login.masterData.realUserSectionValue.ssectionname || \"NA\" :\r\n                    this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.ssectionname || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_Test\",\r\n                \"value\": this.props.Login.masterData.realTestValue ?\r\n                    this.props.Login.masterData.realTestValue.stestsynonym || \"NA\" :\r\n                    this.props.Login.masterData.TestValue ?\r\n                        this.props.Login.masterData.TestValue.stestsynonym || \"NA\" : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_FILTERSTATUS\",\r\n                \"value\": this.props.Login.masterData.realFilterStatusValue ?\r\n                    this.props.Login.masterData.realFilterStatusValue.sfilterstatus || \"NA\" :\r\n                    this.props.Login.masterData.FilterStatusValue ?\r\n                        this.props.Login.masterData.FilterStatusValue.sfilterstatus || \"NA\" : \"NA\"\r\n            }\r\n        ];\r\n\r\n        const reportPreviewId = this.state.controlMap.has(\"SamplePreviewReport\") && this.state.controlMap.get(\"SamplePreviewReport\").ncontrolcode;\r\n        const editParamId = this.state.controlMap.has(\"EditReportMandatory\") && this.state.controlMap.get(\"EditReportMandatory\").ncontrolcode;\r\n        const TestDecisionActionId = this.state.controlMap.has(\"TestDecisionAction\") && this.state.controlMap.get(\"TestDecisionAction\").ncontrolcode;\r\n        const TestApprovalActionId = this.state.controlMap.has(\"TestApprovalAction\") && this.state.controlMap.get(\"TestApprovalAction\").ncontrolcode;\r\n        const reportGenerateId = this.state.controlMap.has(\"GenerateCOA\") && this.state.controlMap.get(\"GenerateCOA\").ncontrolcode;\r\n        const coaReportId = this.state.controlMap.has(\"COAReport\") && this.state.controlMap.get(\"COAReport\").ncontrolcode;\r\n\r\n\r\n        this.postParamList = [\r\n            {\r\n                filteredListName: \"searchedSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSampleRef,\r\n                primaryKeyField: \"npreregno\",\r\n                fetchUrl: \"approval/getApprovalSubSample\",\r\n                fecthInputObject: subSampleGetParam,\r\n                selectedObject: \"APSelectedSample\",\r\n                inputListName: \"AP_SAMPLE\",\r\n                updatedListname: \"updatedSample\",\r\n                childRefs: [{ ref: this.searchSubSampleRef, childFilteredListName: \"searchedSubSample\" }, { ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedSubSample\",\r\n                updatedListname: \"updatedSubSample\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchSubSampleRef,\r\n                primaryKeyField: \"ntransactionsamplecode\",\r\n                fetchUrl: \"approval/getApprovalTest\",\r\n                fecthInputObject: testGetParam,\r\n                selectedObject: \"APSelectedSubSample\",\r\n                childRefs: [{ ref: this.searchTestRef, childFilteredListName: \"searchedTests\" }],\r\n                inputListName: \"AP_SUBSAMPLE\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\"]\r\n            }, {\r\n                filteredListName: \"searchedTests\",\r\n                clearFilter: \"no\",\r\n                searchRef: this.searchTestRef,\r\n                primaryKeyField: \"ntransactiontestcode\",\r\n                fetchUrl: this.getActiveTestURL(),\r\n                fecthInputObject: testChildGetParam,\r\n                selectedObject: \"APSelectedTest\",\r\n                inputListName: \"AP_TEST\",\r\n                updatedListname: \"updatedTest\",\r\n                unchangeList: [\"realSampleTypeValue\", \"SampleTypeValue\", \"realRegTypeValue\", \"RegTypeValue\", \"realRegSubTypeValue\", \"RegSubTypeValue\",\r\n                    \"realApprovalVersionValue\", \"ApprovalVersionValue\", \"realFilterStatusValue\", \"FilterStatusValue\", \"fromDate\", \"toDate\",\r\n                    \"UserSectionValue\", \"SampleType\", \"RegType\", \"RegSubType\", \"ApprovalVersion\", \"JobStatus\", \"JobStatusValue\", \"FilterStatus\",\r\n                    \"SampletypeList\", \"RegistrationTypeList\", \"RegistrationSubTypeList\", \"FilterStatusList\", \"UserSectionList\", \"TestList\"]\r\n            }]\r\n\r\n\r\n        const testDesign = <ContentPanel>\r\n            <Card>\r\n                <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                    <span style={{ display: \"inline-block\" }}>\r\n                        <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span>\r\n                    <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                        onClick={() => this.showAPSampleinfo()}\r\n                    >\r\n                        <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                        {this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n                    </button>\r\n                    {/* </div> */}\r\n                </Card.Header>\r\n                <Card.Body className='p-0'>\r\n\r\n                    <TransactionListMasterJson\r\n                        //clickIconGroup={true}\r\n                        paneHeight={this.state.initialVerticalWidth}\r\n                        needMultiSelect={true}\r\n                        masterList={this.props.Login.masterData.searchedTests || AP_TestList}\r\n                        selectedMaster={this.props.Login.masterData.APSelectedTest}\r\n                        primaryKeyField=\"ntransactiontestcode\"\r\n                        getMasterDetail={this.props.getTestChildTabDetail}\r\n                        inputParam={testChildGetParam}\r\n                        additionalParam={[]}\r\n                        mainField={'stestsynonym'}\r\n                        selectedListName=\"APSelectedTest\"\r\n                        objectName=\"test\"\r\n                        listName=\"IDS_TEST\"\r\n                        pageSize={this.props.Login.settings && this.props.Login.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        showStatusIcon={false}\r\n                        showStatusName={true}\r\n                        subFieldsLabel={true}\r\n                        jsonField={'jsondata'}\r\n                        jsonDesignFields={false}\r\n                        selectionField=\"ntransactionstatus\"\r\n                        selectionFieldName=\"sfilterstatus\"\r\n                        selectionColorField=\"scolorhexcode\"\r\n                        selectionList={this.props.Login.masterData.FilterStatus || []}\r\n                        needSubFieldlabel={true}\r\n                        subFields={this.state.DynamicTestColumns}\r\n                        moreField={this.state.testMoreField}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        filterColumnData={this.props.filterTransactionList}\r\n                        searchListName=\"searchedTests\"\r\n                        searchRef={this.searchTestRef}\r\n                        filterParam={filterTestParam}\r\n                        skip={this.state.testskip}\r\n                        take={this.state.testtake}\r\n                        showMoreResetList={true}\r\n                        showMoreResetListName=\"AP_SAMPLE\"\r\n                        handlePageChange={this.handleTestPageChange}\r\n                        buttonCount={5}\r\n                        childTabsKey={\r\n                            [\r\n                                \"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                                \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\", \"ApprovalHistory\"\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n\r\n                            <ProductList className=\"d-flex product-category justify-content-end icon-group-wrap\">\r\n                                <Nav.Link\r\n                                    hidden={this.state.userRoleControlRights.indexOf(editParamId) === -1}\r\n                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDITREPORTMANDATORY\" })}\r\n                                    data-for=\"tooltip-common-wrap\"\r\n                                    data-place=\"left\"\r\n                                    className=\"btn btn-circle outline-grey\"\r\n                                    onClick={() => this.props.getParameterEdit({ APSelectedTest: this.props.Login.masterData.APSelectedTest, userInfo: this.props.Login.userInfo, masterData: this.props.Login.masterData })}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faPencilAlt} />\r\n                                </Nav.Link>\r\n\r\n                                {this.props.Login.masterData.actionStatus &&\r\n                                    this.state.userRoleControlRights.indexOf(TestApprovalActionId) !== -1 &&\r\n                                    actionStatus.length > 0 ?\r\n                                    <CustomPopOver\r\n                                        icon={faBolt}\r\n                                        nav={true}\r\n                                        data={actionStatus}\r\n                                        btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                        dynamicButton={(value) => this.checkRetestAction(value, TestApprovalActionId)}\r\n                                        textKey=\"stransdisplaystatus\"\r\n                                        iconKey=\"ntransactionstatus\"\r\n                                    >\r\n                                    </CustomPopOver>\r\n                                    : \"\"}\r\n                            </ProductList>\r\n                        }\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </ContentPanel>\r\n\r\n        let mainDesign = \"\";\r\n        if (this.props.Login.masterData.realRegSubTypeValue &&\r\n            this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) {\r\n            mainDesign = <SplitterLayout borderColor=\"#999\"\r\n                primaryIndex={1} percentage={true}\r\n                secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n               // onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                primaryMinSize={40}\r\n                secondaryMinSize={30}\r\n            >\r\n                <Card>\r\n                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                        <span style={{ display: \"inline-block\", marginTop: \"1%\" }}>\r\n                            <h4 className=\"card-title\">{this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}</h4>\r\n                        </span>\r\n                    </Card.Header>\r\n                    <Card.Body className='p-0'>\r\n                        <TransactionListMasterJson\r\n                            //clickIconGroup={true}\r\n                            paneHeight={this.state.initialVerticalWidth}\r\n                            masterList={this.props.Login.masterData.searchedSubSample || AP_SubSampleList}\r\n                            selectedMaster={this.props.Login.masterData.APSelectedSubSample}\r\n                            primaryKeyField=\"ntransactionsamplecode\"\r\n                            getMasterDetail={this.props.getTestDetail}\r\n                            inputParam={testGetParam}\r\n                            additionalParam={[]}\r\n                            mainField=\"ssamplearno\"\r\n                            selectedListName=\"APSelectedSubSample\"\r\n                            objectName=\"subSample\"\r\n                            listName=\"IDS_SUBSAMPLE\"\r\n                            jsonField={'jsondata'}\r\n                            jsonDesignFields={true}\r\n                            showStatusLink={true}\r\n                            showStatusName={true}\r\n                            statusFieldName=\"stransdisplaystatus\"\r\n                            statusField=\"ntransactionstatus\"\r\n                            selectionList={this.state.selectedFilter}\r\n                            selectionField=\"ntransactionstatus\"\r\n                            selectionFieldName=\"sfilterstatus\"\r\n                            selectionColorField=\"stranscolor\"\r\n                            statusColor=\"stranscolor\"\r\n                            subFields={this.state.DynamicSubSampleColumns}\r\n                            moreField={this.state.subSampleMoreField}\r\n                            needValidation={false}\r\n                            needMultiSelect={true}\r\n                            needFilter={false}\r\n                            searchRef={this.searchSubSampleRef}\r\n                            filterParam={filterSubSampleParam}\r\n                            filterColumnData={this.props.filterTransactionList}\r\n                            searchListName=\"searchedSubSample\"\r\n                            skip={this.state.subSampleSkip}\r\n                            take={this.state.subSampleTake}\r\n                            handlePageChange={this.handleSubSamplePageChange}\r\n                            childTabsKey={[\"AP_TEST\", \"ApprovalParameter\",\"Registration\",\"RegistrationSampleComment\",\"RegistrationSampleAttachment\"]}\r\n                        />\r\n                    </Card.Body>\r\n                </Card>\r\n                {testDesign}\r\n            </SplitterLayout>\r\n        }\r\n        else {\r\n            mainDesign = testDesign\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                    <Row noGutters={\"true\"}>\r\n                        {/* sticky_head_parent' ref={(parentHeight) => { this.parentHeight = parentHeight }} */}\r\n                        <Col md={12} className='parent-port-height' >\r\n                            <ListWrapper>\r\n                                <SplitterLayout borderColor=\"#999\" percentage={true} primaryIndex={1} \r\n                                secondaryInitialSize={this.state.splitChangeWidthPercentage} \r\n                                //onSecondaryPaneSizeChange={this.paneSizeChange} \r\n                                primaryMinSize={40} secondaryMinSize={20}>\r\n                                    <TransactionListMasterJson\r\n                                        clickIconGroup={true}\r\n                                        splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                        needMultiSelect={true}\r\n                                        masterList={this.props.Login.masterData.searchedSample || AP_SampleList}\r\n                                        selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                                        primaryKeyField=\"npreregno\"\r\n                                        getMasterDetail={this.props.getsubSampleDetail}\r\n                                        inputParam={subSampleGetParam}\r\n                                        additionalParam={['napprovalversioncode']}\r\n                                        mainField={'sarno'}\r\n                                        selectionList={this.state.selectedFilter}\r\n                                        selectionField=\"ntransactionstatus\"\r\n                                        selectionFieldName=\"sfilterstatus\"\r\n                                        selectionColorField=\"stranscolor\"\r\n                                        selectedListName=\"APSelectedSample\"\r\n                                        objectName=\"sample\"\r\n                                        listName=\"IDS_SAMPLE\"\r\n                                        filterColumnData={this.props.filterTransactionList}\r\n                                        searchListName=\"searchedSample\"\r\n                                        needValidation={true}\r\n                                        validationKey=\"napprovalversioncode\"\r\n                                        validationFailMsg=\"IDS_SELECTSAMPLESOFSAMPLEAPPROVALVERSION\"\r\n                                        showFilter={this.props.Login.showFilter}\r\n                                        openFilter={this.openFilter}\r\n                                        closeFilter={this.closeFilter}\r\n                                        onFilterSubmit={this.onFilterSubmit}\r\n                                        subFields={this.state.DynamicSampleColumns}\r\n                                        moreField={this.state.sampleMoreField}\r\n                                        jsonDesignFields={true}\r\n                                        jsonField={'jsondata'}\r\n                                        showStatusLink={true}\r\n                                        statusFieldName=\"stransdisplaystatus\"\r\n                                        statusField=\"ntransactionstatus\"\r\n                                        //statusColor=\"sdecisioncolor\"\r\n                                        statusColor=\"stranscolor\"\r\n                                        showStatusIcon={false}\r\n                                        showStatusName={true}\r\n                                        needFilter={true}\r\n                                        searchRef={this.searchSampleRef}\r\n                                        filterParam={filterSampleParam}\r\n                                        skip={this.state.skip}\r\n                                        take={this.state.take}\r\n                                        handlePageChange={this.handlePageChange}\r\n                                        showStatusBlink={true}\r\n                                        //splitModeClass={this.state.splitChangeWidthPercentage && this.state.splitChangeWidthPercentage > 50 ? 'split-mode' : this.state.splitChangeWidthPercentage > 40 ? 'split-md' : ''}\r\n                                        childTabsKey={[\"AP_SUBSAMPLE\", \"AP_TEST\", \"ApprovalParameter\", \"SampleApprovalHistory\", \"RegistrationAttachment\", \"PrintHistory\", \"COAHistory\"]}\r\n                                        actionIcons={\r\n                                            [\r\n                                                this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ?\r\n                                                    {\r\n                                                        title: \"Report\",\r\n                                                        controlname: \"reports\",\r\n                                                        objectName: \"sample\",\r\n                                                        hidden: this.state.userRoleControlRights.indexOf(reportPreviewId) === -1,\r\n                                                        // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                        //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                        onClick: this.props.previewSampleReport,\r\n                                                        inputData: {\r\n                                                            userinfo: this.props.Login.userInfo,\r\n                                                            ncontrolcode: reportPreviewId\r\n                                                        },\r\n                                                    } :\r\n                                                    this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE ?\r\n                                                        {\r\n                                                            title: \"Report\",\r\n                                                            controlname: \"reports\",\r\n                                                            objectName: \"sample\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(reportGenerateId) === -1,\r\n                                                            // onClick: ()=>this.previewSampleReport(reportPreviewId),\r\n                                                            //inputData: { masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }\r\n                                                            onClick: (obj) => this.generateCOAReport(obj, reportGenerateId),\r\n                                                            inputData: {\r\n                                                                userinfo: this.props.Login.userInfo,\r\n                                                                ncontrolcode: reportPreviewId,\r\n                                                                nregtypecode: this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                                                                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                                                            },\r\n                                                        }\r\n                                                        : {\r\n                                                            title: \"Report\",\r\n                                                            controlname: \"reports\",\r\n                                                            objectName: \"sample\",\r\n                                                            hidden: this.state.userRoleControlRights.indexOf(coaReportId) === -1,\r\n                                                            onClick: (obj) => this.props.reportGenerate(obj, reportGenerateId),\r\n                                                            inputData: {\r\n                                                                userinfo: this.props.Login.userInfo,\r\n                                                                ncontrolcode: coaReportId,\r\n\r\n                                                            },\r\n\r\n                                                        }\r\n                                            ]\r\n                                        }\r\n\r\n                                        commonActions={\r\n                                            <>\r\n                                                <ProductList className=\"d-flex product-category float-right\">\r\n                                                    {/* <ReactTooltip place=\"bottom\" /> */}\r\n                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                        onClick={() => this.onReload()}\r\n                                                        // title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                        data-for=\"tooltip-common-wrap\"\r\n                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                                        <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                                    </Button>\r\n                                                    {/* </Tooltip> */}\r\n                                                    {this.props.Login.masterData.decisionStatus &&\r\n                                                        this.state.userRoleControlRights.indexOf(TestDecisionActionId) !== -1 &&\r\n                                                        this.props.Login.masterData.decisionStatus.length > 0 ?\r\n                                                        <CustomPopOver\r\n                                                            icon={faBolt}\r\n                                                            nav={true}\r\n                                                            data={decisionStatus}\r\n                                                            btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                            textKey=\"sdecisionstatus\"\r\n                                                            iconKey=\"ntransactionstatus\"\r\n                                                            dynamicButton={(value) => this.updateDecision(value)}\r\n                                                        >\r\n                                                        </CustomPopOver>\r\n\r\n                                                        : \"\"}\r\n                                                </ProductList>\r\n                                            </>\r\n                                        }\r\n                                        filterComponent={[\r\n                                            {\r\n                                                \"Sample Filter\": <ApprovalFilter\r\n                                                    SampleType={this.state.SampletypeList || []}\r\n                                                    SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                                    RegType={this.state.RegistrationTypeList || []}\r\n                                                    RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                                    RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                                    RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                                    ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                                    ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                                    UserSection={this.state.UserSectionList || []}\r\n                                                    UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                                    JobStatus={this.props.Login.masterData.JobStatus || []}\r\n                                                    Test={this.state.TestList || []}\r\n                                                    TestValue={this.props.Login.masterData.TestValue || []}\r\n                                                    FilterStatus={this.state.FilterStatusList || []}\r\n                                                    FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                                    fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                                    toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                                    onFilterComboChange={this.onFilterComboChange}\r\n                                                    handleDateChange={this.handleDateChange}\r\n                                                    onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                                    DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                                    DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                                    DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n\r\n                                                />\r\n                                            }\r\n                                        ]}\r\n\r\n                                    />\r\n\r\n\r\n                                    <ScrollBar>\r\n                                        <SplitterLayout\r\n                                            customClassName=\"detailed-inner no-height\"\r\n                                            vertical\r\n                                            borderColor=\"#999\"\r\n                                            primaryIndex={1}\r\n                                            //onSecondaryPaneSizeChange={this.verticalPaneSizeChange}\r\n                                            secondaryInitialSize={window.outerHeight - 260}\r\n                                        >\r\n                                            <div>\r\n                                                <div style={this.state.showTest === true ? { display: \"block\", background: \"#FFFF\" } : { display: \"none\", background: \"#FFFF\" }} >\r\n                                                    {mainDesign}\r\n                                                </div>\r\n\r\n                                                <ContentPanel style={this.state.showSample === true ? { display: \"block\" } : { display: \"none\" }}>\r\n                                                    <Card className=\"border-0\">\r\n                                                        <Card.Body className='p-0'>\r\n                                                            <Row>\r\n                                                                <Col md={12}>\r\n                                                                    <Card className='p-0'>\r\n                                                                        <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                                            <span style={{ display: \"inline-block\", marginTop: \"1%\" }} >\r\n                                                                                <h4 >{this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}</h4>\r\n                                                                            </span>\r\n                                                                            <button className=\"btn btn-primary btn-padd-custom\" style={{ float: \"right\" }}\r\n                                                                                onClick={() => this.showAPTestList()}\r\n                                                                            >\r\n                                                                                <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                                {this.props.intl.formatMessage({ id: \"IDS_TEST\" })}\r\n                                                                            </button>\r\n                                                                        </Card.Header>\r\n                                                                        <Card.Body>\r\n                                                                            <ScrollBar>\r\n                                                                                <div style={{ height: this.state.initialVerticalWidth }}>\r\n                                                                                    {this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length === 1 ?\r\n                                                                                        <SampleInfoView\r\n                                                                                            data={(this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample.length > 0) ?\r\n                                                                                                this.props.Login.masterData.APSelectedSample[this.props.Login.masterData.APSelectedSample.length - 1] : {}}\r\n                                                                                            SingleItem={this.props.Login.masterData.APSelectedSample && this.props.Login.masterData.APSelectedSample ?\r\n                                                                                                this.state.SingleItem : []}\r\n                                                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                                                        />\r\n\r\n                                                                                        :\r\n                                                                                        <SampleInfoGrid\r\n                                                                                            selectedSample={this.props.Login.masterData.APSelectedSample}\r\n                                                                                            userInfo={this.props.Login.userInfo || {}}\r\n                                                                                            masterData={this.props.Login.masterData}\r\n                                                                                            inputParam={this.props.Login.inputParam}\r\n                                                                                            dataState={this.state.sampleGridDataState}\r\n                                                                                            dataStateChange={this.sampleInfoDataStateChange}\r\n                                                                                            extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                            detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreField) || []}\r\n                                                                                            primaryKeyField={\"npreregno\"}\r\n                                                                                            expandField=\"expanded\"\r\n                                                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                                                            jsonField={\"jsondata\"}\r\n                                                                                        />\r\n                                                                                    }\r\n                                                                                </div>\r\n                                                                            </ScrollBar>\r\n                                                                        </Card.Body>\r\n                                                                    </Card>\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                </ContentPanel>\r\n                                            </div>\r\n                                            <div>\r\n                                                {this.state.enablePin ? <span className={`pin-icon ${this.state.enableAutoHeight ? \"active\" : \"\"}`} onClick={this.changeSplitterOption}></span>\r\n                                                    : \"\"}\r\n                                                <Card>\r\n                                                    <Card.Header style={{ borderBottom: \"0px\" }}>\r\n                                                        <span style={{ display: \"inline-block\", marginTop: \"0%\" }}>\r\n                                                            <h4 className=\"card-title\">\r\n                                                            {this.state.showSample ? this.props.intl.formatMessage({ id: \"IDS_SAMPLEATTACHMENTSCOMMENTS\" })  : this.state.showSubSample ?  this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLEATTACHMENTSCOMMENTS\" }) : this.props.intl.formatMessage({ id: \"IDS_PARAMETERRESULTS\" }) }\r\n                                                                </h4>\r\n                                                        </span>\r\n\r\n\r\n                                                        {this.props.Login.masterData.realRegSubTypeValue &&\r\n                                                            this.state.showTest && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample ?\r\n                                                            <button className=\"btn btn-primary btn-padd-custom\" style={{ \"float\": \"right\", \"margin-right\": \"6px\" }}\r\n                                                                onClick={() => { this.state.showSubSample == true ? this.showAPTestList() : this.showAPSubSampleinfo() }}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEye}></FontAwesomeIcon> { }\r\n                                                                {this.state.showSubSample == true ? this.props.intl.formatMessage({ id: \"IDS_TEST\" }) : this.props.intl.formatMessage({ id: \"IDS_SUBSAMPLE\" })}\r\n                                                            </button> : \"\"\r\n                                                        }\r\n                                                    </Card.Header>\r\n                                                </Card>\r\n                                                {this.state.showSample ?\r\n                                                    <CustomTabs paneHeight={this.state.tabPane} activeKey={this.props.Login.activeSampleTab || \"IDS_SAMPLEATTACHMENTS\"}\r\n                                                        tabDetail={this.sampleTabDetail()} onTabChange={this.onSampleTabChange} /> :\r\n                                                    this.state.showSubSample ?\r\n                                                        <CustomTabs activeKey={this.props.Login.activeSubSampleTab ? this.props.Login.activeSubSampleTab === 'IDS_SUBSAMPLEATTACHMENTS' ? 'IDS_SUBSAMPLEATTACHMENTS' : this.props.Login.activeSubSampleTab : 'IDS_SUBSAMPLEATTACHMENTS'}\r\n                                                            tabDetail={this.subsampleTabDetail()} onTabChange={this.onSubSampleTabChange} /> :\r\n                                                        this.state.showTest ?\r\n                                                            <CustomTabs paneHeight={this.state.tabPane} activeKey={this.props.Login.activeTestTab || \"IDS_RESULTS\"}\r\n                                                                tabDetail={this.testTabDetail()} onTabChange={this.onTestTabChange} />\r\n\r\n                                                            : \"\"}\r\n                                            </div>\r\n                                        </SplitterLayout>\r\n                                    </ScrollBar>\r\n\r\n                                </SplitterLayout>\r\n                            </ListWrapper >\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n                {this.props.Login.openChildModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.props.Login.operation === 'dynamic' ? () => this.performTestActions(this.props.Login.action, TestApprovalActionId) : this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.screenName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openChildModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === 'enforce' ? [{ \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"senforcestatuscomment\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }] : []}\r\n                        loginoperation={this.props.Login.operation === 'view' ? true : false}\r\n                        //graphView={this.props.Login.operation !=='enforce' ? this.props.Login.operation:undefined}\r\n                        noSave={this.props.Login.operation === 'view' ? true : false}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.operation === 'enforce' ?\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormSelectSearch\r\n                                            name={\"ngradecode\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                                            value={this.props.Login.masterData.GradeValue || []}\r\n                                            options={this.props.Login.masterData.Grade || []}\r\n                                            optionId=\"ngradecode\"\r\n                                            optionValue=\"sgradename\"\r\n                                            isMandatory={true}\r\n                                            isMulti={false}\r\n                                            isDisabled={false}\r\n                                            isSearchable={false}\r\n                                            closeMenuOnSelect={true}\r\n                                            isClearable={false}\r\n                                            onChange={(event) => this.onComboChange(event, 'ngradecode')}\r\n                                        />\r\n                                        <FormTextarea\r\n                                            name=\"senforcestatuscomment\"\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                                            value={this.state.selectedRecord ? this.state.selectedRecord[\"senforcestatuscomment\"] : \"\"}\r\n                                            rows=\"2\"\r\n                                            isMandatory={true}\r\n                                            required={false}\r\n                                            maxLength={255}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Col>\r\n                                </Row> :\r\n                                this.props.Login.operation === 'dynamic' ?\r\n                                    <Row>\r\n                                        <Col md=\"12\">\r\n                                            {/* <FormNumericInput\r\n                                            name={\"retestcount\"}\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                            type=\"number\"\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                            value={this.state.selectedRecord?this.state.selectedRecord.retestcount:\"\"}\r\n                                            isMandatory=\"*\" \r\n                                            required={true}\r\n                                            min={1}\r\n                                            max={10}\r\n                                        /> */}\r\n                                            <FormNumericInput\r\n                                                name=\"retestcount\"\r\n                                                label={this.props.intl.formatMessage({ id: \"IDS_RETESTCOUNT\" })}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount}\r\n                                                type=\"text\"\r\n                                                strict={true}\r\n                                                className=\"form-control\"\r\n                                                value={this.state.selectedRecord ? this.state.selectedRecord.retestcount : \"\"}\r\n                                                maxLength={6}\r\n                                                onChange={(event) => this.onNumericInputOnChange(event, 'retestcount')}\r\n                                                isMandatory=\"*\"\r\n                                                required={true}\r\n                                                noStyle={true}\r\n                                            // min={1}\r\n                                            // max={this.props.Login.masterData.retestcount}\r\n                                            />\r\n                                        </Col>\r\n                                    </Row> :\r\n                                    this.props.Login.operation === 'view' ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <DataGrid\r\n                                                    primaryKeyField={\"nresultparamcommenthistorycode\"}\r\n                                                    data={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                    dataResult={this.props.Login.masterData.enforceCommentsHistory || []}\r\n                                                    dataState={{ skip: 0, take: this.props.Login.masterData.enforceCommentsHistory ? this.props.Login.masterData.enforceCommentsHistory.length : 0 }}\r\n                                                    // dataStateChange={this.dataStateChange}\r\n                                                    extractedColumnList={\r\n                                                        [\r\n                                                            { \"idsName\": \"IDS_ENFORCESTATUSCOMMENT\", \"dataField\": \"senforcestatuscomment\", \"width\": \"450px\" }\r\n                                                        ]\r\n                                                    }\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    pageable={false}\r\n                                                    hideColumnFilter={true}\r\n                                                    isActionRequired={false}\r\n                                                    isToolBarRequired={false}\r\n                                                    scrollable={\"scrollable\"}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        :\r\n                                        <EditApprovalParameter\r\n                                            ApprovalParamEdit={this.props.Login.ApprovalParamEdit || []}\r\n                                            changeMandatory={this.changeMandatory}\r\n                                            selectedRecord={this.state.selectedRecord.approvalParameterEdit || {}}\r\n                                            nsubsampleneed={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed}\r\n                                        />\r\n                        }\r\n                    />\r\n                    : \"\"}\r\n                {this.props.Login.masterData.ChecklistData && this.props.Login.screenName === 'IDS_CHECKLISTRESULT' ?\r\n                    <TemplateForm\r\n                        templateData={this.props.Login.masterData.ChecklistData}\r\n                        needSaveButton={false}\r\n                        formRef={this.formRef}\r\n                        onTemplateInputChange={this.onTemplateInputChange}\r\n                        handleClose={this.handleClose}\r\n                        onTemplateComboChange={this.onTemplateComboChange}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.onSaveCheckList}\r\n                        Login={this.props.Login}\r\n                        viewScreen={this.props.Login.openTemplateModal}\r\n                        selectedRecord={this.state.selectedRecord || []}\r\n                        onTemplateDateChange={this.onTemplateDateChange}\r\n                    />\r\n                    : \"\"}\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            sampleListMainField, subSampleListMainField, testListMainField,\r\n            SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n            resultDataState, instrumentDataState,\r\n            materialDataState, taskDataState,\r\n            documentDataState, resultChangeDataState,\r\n            historyDataState, testCommentDataState,\r\n            samplePrintHistoryDataState, sampleHistoryDataState,\r\n            selectedRecord, SampletypeList, RegistrationTypeList,\r\n            RegistrationSubTypeList, FilterStatusList,\r\n            ConfigVersionList, UserSectionList, TestList, skip, take, testskip, testtake, selectedFilter,\r\n            DynamicSampleColumns, DynamicSubSampleColumns, DynamicTestColumns, DynamicGridItem,\r\n            DynamicGridMoreField, stateDynamicDesign, sampleSearchField, subsampleSearchField, testSearchField } = this.state;\r\n\r\n        let bool = false;\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            bool = true;\r\n            // this.setState({userRoleControlRights, controlMap});\r\n        }\r\n        if (this.props.Login.masterData.RegSubTypeValue !== previousProps.Login.masterData.RegSubTypeValue) {\r\n            if (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nsubsampleneed === transactionStatus.NO) {\r\n                let dataState = {\r\n                    skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5//, group: [{ field: `${this.props.Login.masterData.RegSubTypeValue.nsubsampleneed ? 'ssamplearno' : 'sarno'}` }] \r\n                }\r\n                resultDataState = dataState\r\n                instrumentDataState = dataState\r\n                materialDataState = dataState\r\n                taskDataState = dataState\r\n                documentDataState = dataState\r\n                resultChangeDataState = dataState\r\n                historyDataState = dataState\r\n                testCommentDataState = dataState\r\n                // this.setState({\r\n                //     resultDataState: dataSate,instrumentDataState: dataSate,\r\n                //     materialDataState: dataSate,taskDataState: dataSate,instrumentDataState: dataSate,\r\n                //     instrumentDataState: dataSate,documentDataState: dataSate,resultChangeDataState: dataSate,\r\n                //     historyDataState: dataSate,resultDataState: dataSate,testCommentDataState:dataSate,\r\n                // });\r\n                bool = true;\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            // this.setState({selectedRecord: this.props.Login.selectedRecord });\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const UserSectionListMap = constructOptionList(this.props.Login.masterData.UserSection || [], \"nsectioncode\", \"ssectionname\", undefined, undefined, true);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            TestList = TestListMap.get(\"OptionList\");\r\n            bool = true;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), scolorhexcode: \"#800000\" }\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue && \r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ? \r\n            //   JSON.stringify (JSON.parse(this.props.Login.masterData.FilterStatus)) : []\r\n\r\n            // const selectedFilters = this.props.Login.masterData.FilterStatusValue &&\r\n            //     this.props.Login.masterData.FilterStatusValue.ntransactionstatus === transactionStatus.ALL ?\r\n            //     this.props.Login.masterData.FilterStatus : [];\r\n\r\n            const selectedFilters = this.props.Login.masterData.FilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n            selectedFilter = selectedFiltersNew;\r\n            if (this.props.Login.resultDataState && this.props.Login.resultDataState !== previousProps.Login.resultDataState) {\r\n                resultDataState = this.props.Login.resultDataState;\r\n            }\r\n            if (this.props.Login.instrumentDataState && this.props.Login.instrumentDataState !== previousProps.Login.instrumentDataState) {\r\n                instrumentDataState = this.props.Login.instrumentDataState;\r\n            }\r\n            if (this.props.Login.taskDataState && this.props.Login.taskDataState !== previousProps.Login.taskDataState) {\r\n                taskDataState = this.props.Login.taskDataState;\r\n            }\r\n            if (this.props.Login.resultChangeDataState && this.props.Login.resultChangeDataState !== previousProps.Login.resultChangeDataState) {\r\n                resultChangeDataState = this.props.Login.resultChangeDataState;\r\n            }\r\n            if (this.props.Login.historyDataState && this.props.Login.historyDataState !== previousProps.Login.historyDataState) {\r\n                historyDataState = this.props.Login.historyDataState;\r\n            }\r\n            if (this.props.Login.testCommentDataState && this.props.Login.testCommentDataState !== previousProps.Login.testCommentDataState) {\r\n                testCommentDataState = this.props.Login.testCommentDataState;\r\n            }\r\n            if (this.props.Login.samplePrintHistoryDataState && this.props.Login.samplePrintHistoryDataState !== previousProps.Login.samplePrintHistoryDataState) {\r\n                samplePrintHistoryDataState = this.props.Login.samplePrintHistoryDataState;\r\n            }\r\n            if (this.props.Login.sampleHistoryDataState && this.props.Login.sampleHistoryDataState !== previousProps.Login.sampleHistoryDataState) {\r\n                sampleHistoryDataState = this.props.Login.sampleHistoryDataState;\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n            DynamicSampleColumns = dynamicColumn.samplelistitem ? dynamicColumn.samplelistitem : [];\r\n            DynamicSubSampleColumns = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            DynamicTestColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : []\r\n\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicGridMoreField = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            testMoreField = dynamicColumn.testlistmoreitems ? dynamicColumn.testlistmoreitems : [];\r\n            testListColumns = dynamicColumn.testlistitem ? dynamicColumn.testlistitem : [];\r\n\r\n            sampleSearchField = dynamicColumn.samplesearchfields ? dynamicColumn.samplesearchfields : [];\r\n            subsampleSearchField = dynamicColumn.subsamplesearchfields ? dynamicColumn.subsamplesearchfields : [];\r\n            testSearchField = dynamicColumn.testsearchfields ? dynamicColumn.testsearchfields : [];\r\n\r\n            bool = true;\r\n            // sampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTITEM);\r\n            // subSampleListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTITEM);\r\n            // testListColumns = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTITEM);\r\n            // sampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.LISTMAINFIELD);\r\n            // subSampleListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[2], designProperties.LISTMAINFIELD);\r\n            // testListMainField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMAINFIELD);\r\n            // SingleItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.SINGLEITEMDATA)\r\n            // SampleGridItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDITEM)\r\n            // SampleGridExpandableItem = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[1], designProperties.GRIDEXPANDABLEITEM)\r\n            // testMoreField = listDataFromDynamicArray(this.props.Login.masterData.DynamicColumns[3], designProperties.LISTMOREITEM)\r\n            // let {selectedRecord}=this.state\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n            // this.setState({\r\n            //     sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n            //     sampleListMainField, subSampleListMainField, testListMainField,\r\n            //     SampleGridItem, SampleGridExpandableItem, testMoreField,selectedRecord\r\n            // })\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n        if (bool) {\r\n            bool = false;\r\n            this.setState({\r\n                userRoleControlRights, controlMap,\r\n                sampleListColumns, subSampleListColumns, testListColumns, SingleItem,\r\n                sampleListMainField, subSampleListMainField, testListMainField,\r\n                SampleGridItem, SampleGridExpandableItem, testMoreField,\r\n                resultDataState, instrumentDataState,\r\n                materialDataState, taskDataState,\r\n                documentDataState, resultChangeDataState,\r\n                historyDataState, testCommentDataState,\r\n                samplePrintHistoryDataState, sampleHistoryDataState,\r\n                selectedRecord, SampletypeList, RegistrationTypeList,\r\n                RegistrationSubTypeList, FilterStatusList,\r\n                ConfigVersionList, UserSectionList, TestList,\r\n                skip, take, testskip, testtake, selectedFilter,\r\n                DynamicSampleColumns, DynamicSubSampleColumns,\r\n                DynamicTestColumns, DynamicGridItem,\r\n                DynamicGridMoreField, stateDynamicDesign,\r\n                sampleSearchField, subsampleSearchField, testSearchField\r\n            });\r\n        }\r\n    }\r\n\r\n    // previewSampleReport = (ncontrolCode) => {\r\n\r\n    //     console.log(\"report:\", this.props.Login.masterData.selectedSample);\r\n    //     const selectedSample = this.props.Login.masterData.selectedSample[0];\r\n\r\n    //     const inputData = {ndecisionstatus:selectedSample.ndecisionstatus,\r\n    //                         userinfo:this.props.Login.userInfo,\r\n    //                         nprimarykey: selectedSample.npreregno,\r\n    //                         ncoareporttypecode : reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n    //                         nreporttypecode :REPORTTYPE.SAMPLEREPORT,\r\n    //                         sprimarykeyname :\"npreregno\",\r\n    //                         ncontrolcode : ncontrolCode,\r\n    //                         nregtypecode:selectedSample.nregtypecode,\r\n    //                         nregsubtypecode: selectedSample.nregsubtypecode\r\n    //                         }\r\n    //     this.props.previewSampleReport(inputData);\r\n\r\n    // }\r\n\r\n    sampleTabDetail() {\r\n        const tabMap = new Map();\r\n        let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        tabMap.set(\"IDS_SAMPLEATTACHMENTS\",\r\n            <Attachments\r\n                screenName=\"IDS_SAMPLEATTACHMENTS\"\r\n                selectedMaster={this.props.Login.masterData.APSelectedSample}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={this.props.Login.masterData.APSelectedSample}\r\n                masterAlertStatus={\"IDS_SELECTSAMPLETOADDATTACHEMENT\"}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                addName={\"AddSampleAttachment\"}\r\n                editName={\"EditSampleAttachment\"}\r\n                deleteName={\"DeleteSampleAttachment\"}\r\n                viewName={\"ViewSampleAttachment\"}\r\n                methodUrl={\"SampleAttachment\"}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"SampleAttachment\",\r\n                        npreregno,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: this.props.Login.screenName\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"SampleAttachment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    masterList: this.props.Login.masterData.APSelectedSample\r\n\r\n                }}\r\n                selectedListName=\"IDS_SAMPLES\"\r\n                displayName=\"sarno\"\r\n            />)\r\n        tabMap.set(\"IDS_SAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSampleComment\"}\r\n            editName={\"EditSampleComment\"}\r\n            deleteName={\"DeleteSampleComment\"}\r\n            methodUrl={\"SampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.APSelectedSample}\r\n            masterAlertStatus=\"IDS_SELECTSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nregcommentcode\"}\r\n            dataState={this.state.testCommentDataState}\r\n            dataStateChange={this.testDataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SampleComment\",\r\n                    npreregno,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SampleComment\",\r\n                npreregno,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.APSelectedSample || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSampleComment\") && this.state.controlMap.get(\"EditSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SAMPLES\"\r\n            displayName=\"sarno\"\r\n        />)\r\n\r\n        tabMap.set(\"IDS_SAMPLEAPPROVALHISTORY\",\r\n            <SampleApprovalHistory\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalHistory={this.props.Login.masterData.SampleApprovalHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.sampleHistoryDataState}\r\n                dataStateChange={this.sampleDataStateChange}\r\n                screenName=\"IDS_SAMPLEAPPROVALHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n\r\n        // tabMap.set(\"IDS_PRINTHISTORY\",\r\n        //     <ApprovalPrintHistoryTab\r\n        //         userInfo={this.props.Login.userInfo}\r\n        //         ApprovalPrintHistory={this.props.Login.masterData.PrintHistory}\r\n        //         inputParam={this.props.Login.inputParam}\r\n        //         dataState={this.state.samplePrintHistoryDataState}\r\n        //         dataStateChange={this.sampleDataStateChange}\r\n        //         screenName=\"IDS_PRINTHISTORY\"\r\n        //         controlMap={this.state.controlMap}\r\n        //         userRoleControlRights={this.state.userRoleControlRights}\r\n        //         selectedId={null}\r\n        //     />);\r\n        // if (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode === RegistrationSubType.ROUTINE) {\r\n        //     tabMap.set(\"IDS_REPORTHISTORY\",\r\n        //         <ReportHistoryTab\r\n        //             userInfo={this.props.Login.userInfo}\r\n        //             COAHistory={this.props.Login.masterData.COAHistory}\r\n        //             inputParam={this.props.Login.inputParam}\r\n        //             dataState={this.state.reportHistoryDataState}\r\n        //             dataStateChange={this.sampleDataStateChange}\r\n        //             screenName=\"IDS_REPORTHISTORY\"\r\n        //             controlMap={this.state.controlMap}\r\n        //             userRoleControlRights={this.state.userRoleControlRights}\r\n        //             selectedId={null}\r\n        //             viewDownloadFile={this.downloadReport}\r\n        //         />);\r\n        // }\r\n        return tabMap;\r\n    }\r\n    downloadReport = (input) => {\r\n        let inputParam = {\r\n            inputData: { selectedRecord: { ...input.inputData }, userinfo: this.props.Login.userInfo },\r\n            classUrl: \"approval\",\r\n            operation: \"view\",\r\n            methodUrl: \"Report\"\r\n        }\r\n        this.props.viewAttachment(inputParam)\r\n    }\r\n\r\n    subsampleTabDetail = () => {\r\n        let ntransactionsamplecode = this.props.Login.masterData.APSelectedSubSample ?\r\n            this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\") : \"-1\";\r\n        const tabMap = new Map();\r\n        let subsampleList = this.props.Login.masterData.AP_SUBSAMPLE || [];\r\n        let { subSampleSkip, subSampleTake } = this.state\r\n        subsampleList = subsampleList.slice(subSampleSkip, subSampleSkip + subSampleTake);\r\n        let selectedSubSampleList = getSameRecordFromTwoArrays(subsampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n\r\n        tabMap.set(\"IDS_SUBSAMPLEATTACHMENTS\", <Attachments\r\n            screenName=\"IDS_SUBSAMPLEATTACHMENTS\"\r\n            onSaveClick={this.onAttachmentSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            attachments={this.props.Login.masterData.RegistrationSampleAttachment || []}\r\n            deleteRecord={this.props.deleteAttachment}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus={\"IDS_SELECTSUBSAMPLETOADDATTACHMENT\"}\r\n            fetchRecord={this.props.getAttachmentCombo}\r\n            viewFile={this.props.viewAttachment}\r\n            addName={\"AddSubSampleAttachment\"}\r\n            editName={\"EditSubSampleAttachment\"}\r\n            deleteName={\"DeleteSubSampleAttachment\"}\r\n            viewName={\"ViewSubSampleAttachment\"}\r\n            methodUrl={\"SubSampleAttachment\"}\r\n            skip={this.props.Login.inputParam ? this.props.Login.inputParam.attachmentskip || 0 : 0}\r\n            take={this.props.Login.inputParam ? this.props.Login.inputParam.attachmenttake || 10 : this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleAttachment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleAttachment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || []\r\n\r\n            }}\r\n            selectedListName=\"IDS_SUBSAMPLE\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n        tabMap.set(\"IDS_SUBSAMPLECOMMENTS\", <Comments\r\n            screenName=\"IDS_SUBSAMPLECOMMENTS\"\r\n            onSaveClick={this.onCommentsSaveClick}\r\n            selectedMaster=\"APSelectedSubSample\"\r\n            controlMap={this.state.controlMap}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            Comments={this.props.Login.masterData.RegistrationSampleComment || []}\r\n            fetchRecord={this.props.getCommentsCombo}\r\n            addName={\"AddSubSampleComment\"}\r\n            editName={\"EditSubSampleComment\"}\r\n            deleteName={\"DeleteSubSampleComment\"}\r\n            methodUrl={\"SubSampleComment\"}\r\n            isTestComment={false}\r\n            masterList={this.props.Login.masterData.APSelectedSubSample}\r\n            masterAlertStatus=\"IDS_SELECTSUBSAMPLETOADDCOMMENTS\"\r\n            primaryKeyField={\"nsamplecommentcode\"}\r\n            dataState={this.state.subSampleCommentDataState}\r\n            dataStateChange={this.subSampledataStateChange}\r\n            deleteParam={\r\n                {\r\n                    methodUrl: \"SubSampleComment\",\r\n                    ntransactionsamplecode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_SUBSAMPLECOMMENTS\"\r\n\r\n                }\r\n            }\r\n            editParam={{\r\n                methodUrl: \"SubSampleComment\",\r\n                ntransactionsamplecode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                esignRights: this.props.Login.userRoleControlRights,\r\n                screenName: \"IDS_SUBSAMPLECOMMENTS\",\r\n                operation: \"update\",\r\n                masterList: this.props.Login.masterData.AP_SUBSAMPLE || [],\r\n                ncontrolCode: this.state.controlMap.has(\"EditSubSampleComment\") && this.state.controlMap.get(\"EditSubSampleComment\").ncontrolcode\r\n            }}\r\n            selectedListName=\"IDS_SUBSAMPLES\"\r\n            displayName=\"ssamplearno\"\r\n        />)\r\n\r\n        return tabMap;\r\n    }\r\n\r\n\r\n    testTabDetail = () => {\r\n        const testTabMap = new Map();\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : this.props.Login.masterData.AP_TEST || [];\r\n        const editTestCommentsId = this.state.controlMap.has(\"EditTestComment\") && this.state.controlMap.get(\"EditTestComment\").ncontrolcode;\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        // let npreregno = this.props.Login.masterData.selectedSample ? this.props.Login.masterData.selectedSample.map(sample => sample.npreregno).join(\",\") : \"-1\";\r\n        let ntransactiontestcode = this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\") : \"-1\";\r\n        if (this.state.showTest) {\r\n            testTabMap.set(\"IDS_RESULTS\", <ApprovalResultsTab\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.resultDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_RESULTS\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                getStatusCombo={this.props.getStatusCombo}\r\n                selectedId={this.props.Login.masterData.selectedParamId}\r\n                viewFile={this.props.viewAttachment}\r\n                checkListRecord={this.props.checkListRecord}\r\n                getEnforceCommentsHistory={this.props.getEnforceCommentsHistory}\r\n            />)\r\n            testTabMap.set(\"IDS_INSTRUMENT\", <ApprovalInstrumentTab\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.instrumentDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_INSTRUMENT\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n            testTabMap.set(\"IDS_MATERIAL\", <ApprovalUsedMaterial\r\n                userInfo={this.props.Login.userInfo}\r\n                masterData={this.props.Login.masterData}\r\n                inputParam={this.props.Login.inputParam}\r\n                methodUrl={\"ResultUsedMaterial\"}\r\n                controlMap={this.state.controlMap}\r\n                deleteParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                editParam={{ masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo }}\r\n                dataState={this.state.materialDataState}\r\n                selectedId={this.props.Login.selectedId || null}\r\n                isActionRequired={true}\r\n                dataStateChange={this.dataStateChange}\r\n                deleteRecord={this.deleteMaterialRecord}\r\n                fetchRecord={this.props.fetchMaterialRecord}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                screenName=\"IDS_MATERIAL\"\r\n            />)\r\n            testTabMap.set(\"IDS_TASK\", <ApprovalTask\r\n                userInfo={this.props.Login.userInfo}\r\n                ResultUsedTasks={this.props.Login.masterData.ResultUsedTasks}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.taskDataState}\r\n                masterData={this.props.Login.masterData}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_TASK\"\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n            />)\r\n            testTabMap.set(\"IDS_TESTATTACHMENTS\", <Attachments\r\n                screenName=\"IDS_TESTATTACHMENTS\"\r\n                selectedMaster={selectedTestList}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                attachments={this.props.Login.masterData.RegistrationTestAttachment || []}\r\n                deleteRecord={this.props.deleteAttachment}\r\n                fetchRecord={this.props.getAttachmentCombo}\r\n                onSaveClick={this.onAttachmentSaveClick}\r\n                masterList={selectedTestList}\r\n                masterAlertStatus={\"IDS_SELECTTESTTOADDATTACHEMENT\"}\r\n                addName={\"AddTestAttachment\"}\r\n                editName={\"EditTestAttachment\"}\r\n                deleteName={\"DeleteTestAttachment\"}\r\n                viewName={\"ViewTestAttachment\"}\r\n                methodUrl={\"TestAttachment\"}\r\n                nsubsampleneed={this.props.Login.masterData.nneedsubsample}\r\n                subFields={[{ [designProperties.VALUE]: \"stestsynonym\" }, { [designProperties.VALUE]: \"dcreateddate\" }]}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"TestAttachment\",\r\n                        ntransactiontestcode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_TESTATTACHMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"TestAttachment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTATTACHMENTS\",\r\n                    masterList: selectedTestList\r\n\r\n                }}\r\n                selectedListName=\"IDS_TESTS\"\r\n                displayName=\"stestsynonym\"\r\n            />)\r\n            testTabMap.set(\"IDS_TESTCOMMENTS\", <Comments\r\n                screenName=\"IDS_TESTCOMMENTS\"\r\n                selectedMaster={selectedTestList}\r\n                onSaveClick={this.onCommentsSaveClick}\r\n                controlMap={this.state.controlMap}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                Comments={this.props.Login.masterData.RegistrationTestComment || []}\r\n                fetchRecord={this.props.getCommentsCombo}\r\n                masterList={selectedTestList}\r\n                masterAlertStatus={\"IDS_SELECTTESTTOADDCOMMENTS\"}\r\n                addName={\"AddTestComment\"}\r\n                editName={\"EditTestComment\"}\r\n                deleteName={\"DeleteTestComment\"}\r\n                methodUrl={\"TestComment\"}\r\n                isTestComment={false}\r\n                primaryKeyField={\"ntestcommentcode\"}\r\n                dataState={this.state.testCommentDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                deleteParam={\r\n                    {\r\n                        methodUrl: \"TestComment\",\r\n                        ntransactiontestcode,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        esignRights: this.props.Login.userRoleControlRights,\r\n                        screenName: \"IDS_TESTCOMMENTS\"\r\n\r\n                    }\r\n                }\r\n                editParam={{\r\n                    methodUrl: \"TestComment\",\r\n                    ntransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    esignRights: this.props.Login.userRoleControlRights,\r\n                    screenName: \"IDS_TESTCOMMENTS\",\r\n                    operation: \"update\",\r\n                    masterList: selectedTestList,\r\n                    ncontrolCode: editTestCommentsId\r\n\r\n                }}\r\n                selectedListName=\"IDS_TESTS\"\r\n                displayName=\"stestsynonym\"\r\n            />)\r\n\r\n            testTabMap.set(\"IDS_RESULTCHANGEHISTORY\", <ResultChangeHistoryTab\r\n                userInfo={this.props.Login.userInfo}\r\n                ApprovalResultChangeHistory={this.props.Login.masterData.ApprovalResultChangeHistory}\r\n                inputParam={this.props.Login.inputParam}\r\n                dataState={this.state.resultChangeDataState}\r\n                dataStateChange={this.testDataStateChange}\r\n                screenName=\"IDS_RESULTCHANGEHISTORY\"\r\n                controlMap={this.state.controlMap}\r\n                masterData={this.props.Login.masterData}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                selectedId={null}\r\n\r\n            />)\r\n\r\n\r\n\r\n\r\n            testTabMap.set(\"IDS_TESTAPPROVALHISTORY\",\r\n                <ApprovalHistoryTab\r\n                    userInfo={this.props.Login.userInfo}\r\n                    ApprovalHistory={this.props.Login.masterData.ApprovalHistory}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    dataState={this.state.historyDataState}\r\n                    masterData={this.props.Login.masterData}\r\n                    dataStateChange={this.testDataStateChange}\r\n                    screenName=\"IDS_TESTAPPROVALHISTORY\"\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    selectedId={null}\r\n                />)\r\n        }\r\n\r\n        return testTabMap;\r\n    }\r\n    onNumericInputOnChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (value === 0 || value === 0.0) {\r\n            selectedRecord[name] = \"\";\r\n            this.setState({ selectedRecord });\r\n        } else {\r\n\r\n            selectedRecord[name] = value;\r\n            this.setState({ selectedRecord });\r\n\r\n        }\r\n    }\r\n    onTestTabChange = (tabProps) => {\r\n\r\n        const activeTestTab = tabProps.screenName;\r\n        if (activeTestTab !== this.props.Login.activeTestTab) {\r\n            if (this.props.Login.masterData.APSelectedTest && this.props.Login.masterData.APSelectedTest.length > 0) {\r\n                let inputData = {\r\n                    masterData: this.props.Login.masterData,\r\n                    APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ?\r\n                        String(this.props.Login.masterData.APSelectedTest.map(item => item.ntransactiontestcode).join(\",\")) : \"-1\",\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ?\r\n                        this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                    userinfo: this.props.Login.userInfo,\r\n                    activeTestTab,\r\n                    screenName: activeTestTab,\r\n                    resultDataState: this.state.resultDataState,\r\n                    instrumentDataState: this.state.instrumentDataState,\r\n                    materialDataState: this.state.materialDataState,\r\n                    taskDataState: this.state.taskDataState,\r\n                    documentDataState: this.state.documentDataState,\r\n                    historyDataState: this.state.historyDataState,\r\n                    resultChangeDataState: this.state.resultChangeDataState,\r\n                    testCommentDataState: this.state.testCommentDataState,\r\n                }\r\n                this.props.getTestChildTabDetail(inputData, true)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n            }\r\n        }\r\n    }\r\n    onSampleTabChange = (tabProps) => {\r\n        const activeSampleTab = tabProps.screenName;\r\n        if (activeSampleTab !== this.props.Login.activeSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                selectedSample: this.props.Login.masterData.APSelectedSample,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(item => item.npreregno).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSampleTab,\r\n                activeSampleTab\r\n            }\r\n            this.props.getSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    onSubSampleTabChange = (tabProps) => {\r\n        const activeSubSampleTab = tabProps.screenName;\r\n        if (activeSubSampleTab !== this.props.Login.activeSubSampleTab) {\r\n            let inputData = {\r\n                masterData: this.props.Login.masterData,\r\n                selectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(item => item.ntransactionsamplecode).join(\",\") : \"-1\",\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: activeSubSampleTab,\r\n                activeSubSampleTab,\r\n                subSampleCommentDataState: this.state.subSampleCommentDataState,\r\n                subSampleAttachmentDataState: this.state.subSampleAttachmentDataState,\r\n            }\r\n            this.props.getSubSampleChildTabDetail(inputData)\r\n        }\r\n    }\r\n\r\n    showSampleInfo() {\r\n        this.setState({ showSample: true, showTest: false })\r\n    }\r\n    showTestList() {\r\n        this.setState({ showTest: true, showSample: false })\r\n    }\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n    handleTestPageChange = e => {\r\n        this.setState({\r\n            testskip: e.skip,\r\n            testtake: e.take\r\n        });\r\n    };\r\n    checkRetestAction = (action, ncontrolCode) => {\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n            if (action.ntransactionstatus === transactionStatus.RETEST) {\r\n\r\n                if (this.props.Login.masterData.retestcount && this.props.Login.masterData.retestcount > 1) {\r\n                    if (selectedTestList.length > 1) {\r\n                        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTONETESTONLY\" }));\r\n                    } else {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                action,\r\n                                masterData: this.props.Login.masterData,\r\n                                openChildModal: true,\r\n                                screenName: \"IDS_RETESTCOUNT\",\r\n                                operation: \"dynamic\"\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                } else {\r\n                    this.performTestActions(action, ncontrolCode);\r\n                }\r\n\r\n            } else {\r\n\r\n                this.performTestActions(action, ncontrolCode);\r\n\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    performTestActions = (action, ncontrolCode) => {\r\n        if (action.ntransactionstatus === transactionStatus.RETEST && this.state.selectedRecord && this.state.selectedRecord.retestcount > this.props.Login.masterData.retestcount) {\r\n\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_MAX\" }) + \": \" + this.props.Login.masterData.retestcount)\r\n\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            let ntransCode = this.props.Login.masterData.FilterStatusValue.ntransactionstatus\r\n            if (ntransCode === transactionStatus.ALL) {\r\n                ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n            } else {\r\n                ntransCode = ntransCode + \",\" + action.ntransactionstatus\r\n            }\r\n            let { testskip, testtake } = this.state\r\n            let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n            testList = testList.slice(testskip, testskip + testtake);\r\n            let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n            const inputParam = {\r\n                inputData: {\r\n                    'performaction': {\r\n                        npreregno: selectedTestList.map(sample => sample.npreregno).join(\",\"),\r\n                        ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample.map(sample => sample.ntransactionsamplecode).join(\",\"),\r\n                        ntransactiontestcode: selectedTestList.map(test => test.ntransactiontestcode).join(\",\"),\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                            this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                                this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                                String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                            null,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        nTransStatus: action.ntransactionstatus,\r\n                        ntransactionstatus: String(-1),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nflag: 2,\r\n                        ntype: 1,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        APSelectedSample: this.props.Login.masterData.APSelectedSample,\r\n                        APSelectedSubSample: this.props.Login.masterData.APSelectedSubSample,\r\n                        APSelectedTest: this.props.Login.masterData.APSelectedTest,\r\n                        retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                        ncontrolCode,\r\n                        checkBoxOperation: 3,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n                    },\r\n                    userinfo: this.props.Login.userInfo\r\n                },\r\n                masterData: this.props.Login.masterData,\r\n                methodUrl: \"performaction\",\r\n                postParamList: this.postParamList\r\n            }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"performaction\",\r\n                        operation: \"dynamic\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.performAction(inputParam)\r\n            }\r\n        }\r\n    }\r\n    updateDecision = (action) => {\r\n        let ntransCode = this.props.Login.masterData.realFilterStatusValue.ntransactionstatus\r\n        if (ntransCode === transactionStatus.ALL) {\r\n            ntransCode = this.props.Login.masterData.FilterStatus.map(status => status.ntransactionstatus).join(\",\");\r\n        }\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let { skip, take } = this.state\r\n        let sampleList = [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.splice(skip, skip + take);\r\n        let selectedsampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.selectedSample, \"npreregno\");\r\n        if (selectedsampleList.length > 0) {\r\n            const inputData = {\r\n                'updatedecision': {\r\n                    npreregno: selectedsampleList.map(sample => sample.npreregno).join(\",\"),\r\n                    nTransStatus: action.ntransactionstatus,\r\n                    ntransactionstatus: String(ntransCode),\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue ?\r\n                        this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ?\r\n                            this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') :\r\n                            String(this.props.Login.masterData.UserSectionValue.nsectioncode) :\r\n                        null,\r\n                    ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : 0,\r\n                    nflag: 1,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    napprovalversioncode: String(selectedsampleList[0].napprovalversioncode),\r\n                    napprovalconfigcode: selectedsampleList[0].napprovalconfigcode,\r\n                    selectedSample: this.props.Login.masterData.selectedSample,\r\n                }, userinfo: this.props.Login.userInfo\r\n\r\n            }\r\n            let inputParam = { postParamList: this.postParamList, inputData, masterData: this.props.Login.masterData }\r\n            if (action.nesignneed === transactionStatus.YES) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true,\r\n                        screenName: \"updatedecision\",\r\n                        operation: \"decision\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.updateDecision(inputParam)\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n        }\r\n\r\n    }\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item\r\n                    };\r\n                    this.props.getRegistrationType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item\r\n                    }\r\n                    this.props.getRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                const inputParamData = {\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: { ...this.props.Login.masterData },\r\n                    RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                    ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                    nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: comboData.value,\r\n                    DesignTemplateMappingValue: comboData.item\r\n                }\r\n                this.props.getFilterBasedTest(inputParamData)\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            else if (fieldName === 'nsectioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n                    // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        nsectioncode: comboData.value === -1 ? null\r\n                       // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                        : comboData.value,\r\n                        stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n                        DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            } else if (fieldName === 'njobstatuscode') {\r\n                if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n                    let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else {\r\n                if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n                    //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n                    //  const updateInfo = {\r\n                    //     typeName: DEFAULT_RETURN,\r\n                    //    data: { masterData }\r\n                    // }\r\n\r\n                    inputParamData = {\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ntransactionstatus: comboData.value,\r\n                        stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n                        nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n                        //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n                        //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    }\r\n\r\n                    this.props.getFilterBasedTest(inputParamData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    onComboChange = (comboData) => {\r\n        if (comboData) {\r\n            let masterData = { ...this.props.Login.masterData, GradeValue: comboData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { masterData }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getApprovalVersion(inputParam)\r\n    }\r\n    changeMandatory = (event, dataItem) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let value = event.currentTarget.checked ? transactionStatus.YES : transactionStatus.NO\r\n        selectedRecord[\"approvalParameterEdit\"] = { ...selectedRecord[\"approvalParameterEdit\"], [dataItem.ntransactionresultcode]: value }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onReload = () => {\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue } = this.props.Login.masterData\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: realUserSectionValue ? realUserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(realUserSectionValue.nsectioncode) : null,\r\n            ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab || \"\",\r\n            activeSampleTab: this.props.Login.activeSampleTab || \"\",\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"\",\r\n            checkBoxOperation: 3,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = { ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            nsectioncode: this.props.Login.masterData.UserSectionValue ? this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(section => section.nsectioncode).join(',') : String(this.props.Login.masterData.UserSectionValue.nsectioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            activeTestTab: this.props.Login.activeTestTab,\r\n            activeSampleTab: this.props.Login.activeSampleTab,\r\n            activeSubSampleTab: this.props.Login.activeSubSampleTab || \"IDS_SUBSAMPLEATTACHMENTS\",\r\n            checkBoxOperation: 3,\r\n            ntype: 2,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null && inputData.ntestcode !== undefined) {\r\n\r\n            // let obj = this.covertDatetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n                searchSampleRef: this.searchSampleRef,\r\n                searchSubSampleRef: this.searchSubSampleRef,\r\n                searchTestRef: this.searchTestRef,\r\n                skip: this.state.skip,\r\n                take: this.state.take,\r\n                testskip: this.state.testskip,\r\n                testtake: this.state.testtake,\r\n                resultDataState: this.state.resultDataState,\r\n                instrumentDataState: this.state.instrumentDataState,\r\n                materialDataState: this.state.materialDataState,\r\n                taskDataState: this.state.taskDataState,\r\n                documentDataState: this.state.documentDataState,\r\n                resultChangeDataState: this.state.resultChangeDataState,\r\n                testCommentDataState: this.state.testCommentDataState,\r\n                historyDataState: this.state.historyDataState,\r\n                samplePrintHistoryDataState: this.state.samplePrintHistoryDataState,\r\n                sampleHistoryDataState: this.state.sampleHistoryDataState\r\n            }\r\n            this.props.getApprovalSample(inputParam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    testDataStateChange = (event) => {\r\n\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                this.setState({\r\n                    materialDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TASK\":\r\n                this.setState({\r\n                    taskDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                this.setState({\r\n                    instrumentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                this.setState({\r\n                    testCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_DOCUMENTS\":\r\n                this.setState({\r\n                    documentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                this.setState({\r\n                    resultChangeDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                this.setState({\r\n                    historyDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    resultDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({\r\n            sampleGridDataState: event.dataState\r\n        });\r\n    }\r\n\r\n    subSampledataStateChange = (event) => {\r\n        switch (this.props.Login.activeSubSampleTab) {\r\n            case \"IDS_SUBSAMPLECOMMENTS\":\r\n                this.setState({\r\n                    subSampleCommentDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                this.setState({\r\n                    subSampleAttachmentDataState: event.dataState\r\n                });\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    popUptestDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n\r\n    }\r\n    sampleDataStateChange = (event) => {\r\n        switch (this.props.Login.activeSampleTab) {\r\n            case \"IDS_SAMPLEINFO\":\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n            case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                this.setState({\r\n                    sampleHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_PRINTHISTORY\":\r\n                this.setState({\r\n                    samplePrintHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            case \"IDS_REPORTHISTORY\":\r\n                this.setState({\r\n                    reportHistoryDataState: event.dataState\r\n                })\r\n                break;\r\n            default:\r\n                this.setState({\r\n                    sampleGridDataState: event.dataState\r\n                });\r\n                break;\r\n        }\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let ok = true;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        if (this.props.Login.operation === 'enforce') {\r\n            inputData[\"enforcestatus\"] = {\r\n                ngradecode: this.props.Login.masterData.GradeValue.value || -1,\r\n                ntransactiontestcode: this.state.selectedRecord.ntransactiontestcode,\r\n                ntransactionresultcode: this.state.selectedRecord.ntransactionresultcode,\r\n                senforcestatuscomment: this.state.selectedRecord.senforcestatuscomment || \"\",\r\n                selectedTestCode: this.props.Login.masterData.APSelectedTest.map(test => test.ntransactiontestcode).join(\",\")\r\n            }\r\n            inputParam = {\r\n                methodUrl: \"EnforceStatus\",\r\n                classUrl: 'approval',\r\n                inputData: inputData,\r\n                postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                operation: \"update\"\r\n            }\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord: this.state.selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation\r\n            }\r\n            inputParam = onSaveSampleAttachment(saveParam);\r\n        }\r\n        else {\r\n            let approvalparameter = []\r\n            if (this.state.selectedRecord.approvalParameterEdit) {\r\n                Object.keys(this.state.selectedRecord.approvalParameterEdit).map((key) =>\r\n                    approvalparameter.push(\r\n                        {\r\n                            ntransactionresultcode: key,\r\n                            nreportmandatory: this.state.selectedRecord.approvalParameterEdit[key]\r\n                        }\r\n                    )\r\n                )\r\n                inputData[\"approvalparameter\"] = approvalparameter\r\n                inputParam = {\r\n                    methodUrl: \"ApprovalParameter\",\r\n                    classUrl: 'approval',\r\n                    inputData: inputData,\r\n                    postParam: { selectedObject: \"APSelectedTest\", primaryKeyField: \"ntransactiontestcode\" },\r\n                    operation: \"update\"\r\n                }\r\n            } else {\r\n                ok = false;\r\n                this.handleClose()\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        openChildModal: true,\r\n                        operation: this.props.Login.operation,\r\n                        screenName: \"IDS_ENFORCESTATUS\",\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n            }\r\n        }\r\n    }\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let openChildModal = this.props.Login.openChildModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let templateData = this.props.Login.templateData;\r\n        let operation = this.props.Login.operation;\r\n        let openTemplateModal = this.props.Login.openTemplateModal;\r\n        if (this.props.Login.loadEsign) {\r\n            if (operation === \"delete\" || operation === \"dynamic\" || operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n                templateData = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openTemplateModal = false;\r\n            openModal = false;\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n            templateData = {}\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, openChildModal, loadEsign, selectedRecord, templateData, selectedParamId: null, operation, openTemplateModal }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData,\r\n            operation: this.props.Login.operation\r\n        }\r\n        if (this.props.Login.operation === 'dynamic' || this.props.Login.operation === 'reportgeneration' || this.props.Login.operation === 'decision') {\r\n            this.props.validateEsignforApproval(inputParam, \"openChildModal\");\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n        }\r\n    }\r\n    // covertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n\r\n\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n    getActiveTestURL() {\r\n        let url = \"approval/getapprovalparameter\"\r\n        switch (this.props.Login.activeTestTab) {\r\n            case \"IDS_RESULTS\":\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n            case \"IDS_INSTRUMENT\":\r\n                url = \"resultentrybysample/getResultUsedInstrument\"\r\n                break;\r\n            case \"IDS_MATERIAL\":\r\n                url = \"resultentrybysample/getResultUsedMaterial\"\r\n                break;\r\n            case \"IDS_TASK\":\r\n                url = \"resultentrybysample/getResultUsedTask\"\r\n                break;\r\n            case \"IDS_TESTATTACHMENTS\":\r\n                url = \"attachment/getTestAttachment\"\r\n                break;\r\n            case \"IDS_TESTCOMMENTS\":\r\n                url = \"comments/getTestComment\"\r\n                break;\r\n            case \"IDS_RESULTCHANGEHISTORY\":\r\n                url = \"approval/getApprovalResultChangeHistory\"\r\n                break;\r\n            case \"IDS_TESTAPPROVALHISTORY\":\r\n                url = \"approval/getApprovalHistory\"\r\n                break;\r\n\r\n            default:\r\n                url = \"approval/getapprovalparameter\"\r\n                break;\r\n        }\r\n        return url;\r\n    }\r\n    onTemplateInputChange = (event, control) => {\r\n        let selectedRecord = templateChangeHandler(1, this.state.selectedRecord, event, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateComboChange = (comboData, control) => {\r\n        let selectedRecord = templateChangeHandler(2, this.state.selectedRecord, comboData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onTemplateDateChange = (dateData, control) => {\r\n        let selectedRecord = templateChangeHandler(3, this.state.selectedRecord, dateData, control)\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onCommentsSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let { testskip, testtake } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        if (selectedTestList.length > 0) {\r\n\r\n            if (this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveTestComments(saveParam, selectedTestList);\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n                let sampleList = [];\r\n                if (this.props.Login.masterData.searchedSample !== undefined) {\r\n                    sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSample, this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take), \"npreregno\");\r\n                } else {\r\n                    sampleList = this.props.Login.masterData.AP_SAMPLE.slice(this.state.skip, this.state.skip + this.state.take);\r\n                }\r\n                let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n                // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n\r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveSampleComments(saveParam, acceptList);\r\n            }\r\n            if (this.props.Login.screenName === \"IDS_SUBSAMPLECOMMENTS\") {\r\n                let sampleList = [];\r\n                if (this.props.Login.masterData.searchedSubSample !== undefined) {\r\n                    sampleList = getSameRecordFromTwoArrays(this.props.Login.masterData.searchedSubSample, this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake), \"npreregno\");\r\n                } else {\r\n                    sampleList = this.props.Login.masterData.AP_SUBSAMPLE.slice(this.state.subSampleSkip, this.state.subSampleSkip + this.state.subSampleTake);\r\n                }\r\n                let acceptList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSubSample, \"ntransactionsamplecode\");\r\n                // let acceptList=getSameRecordFromTwoArrays(this.props.Login.masterData.searchedTest, this.props.Login.masterData.RegistrationGetTest.slice(this.state.testskip, this.state.testskip + this.state.testtake), \"npreregno\");\r\n    \r\n                let saveParam = {\r\n                    userInfo: this.props.Login.userInfo,\r\n                    isTestComment: this.props.isTestComment,\r\n                    selectedRecord,\r\n                    masterData: this.props.Login.masterData,\r\n                    saveType, formRef,\r\n                    operation: this.props.Login.operation,\r\n                    ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n                }\r\n                inputParam = onSaveSubSampleComments(saveParam, acceptList);\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTEST\" }))\r\n        }\r\n    }\r\n    onAttachmentSaveClick = (saveType, formRef, selectedRecord) => {\r\n        const masterData = this.props.Login.masterData;\r\n        let inputData = {}\r\n        let inputParam = {}\r\n        let { testskip, testtake, skip, take } = this.state\r\n        let testList = this.props.Login.masterData.searchedTests ? [...this.props.Login.masterData.searchedTests] : [...this.props.Login.masterData.AP_TEST];\r\n        testList = testList.slice(testskip, testskip + testtake);\r\n        let selectedTestList = getSameRecordFromTwoArrays(testList, this.props.Login.masterData.APSelectedTest, \"ntransactiontestcode\");\r\n        let sampleList = this.props.Login.masterData.searchedSample ? [...this.props.Login.masterData.searchedSample] : [...this.props.Login.masterData.AP_SAMPLE];\r\n        sampleList = sampleList.slice(skip, skip + take);\r\n        let selectedSampleList = getSameRecordFromTwoArrays(sampleList, this.props.Login.masterData.APSelectedSample, \"npreregno\");\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let ok = true;\r\n        if (this.props.Login.screenName === \"IDS_SAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                npreregno: this.props.Login.masterData.APSelectedSample ? this.props.Login.masterData.APSelectedSample.map(x => x.npreregno).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedSampleList.length > 0) {\r\n                inputParam = onSaveSampleAttachment(saveParam, selectedSampleList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        } \r\n        else if (this.props.Login.screenName === \"IDS_SUBSAMPLEATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactionsamplecode: this.props.Login.masterData.APSelectedSubSample ? this.props.Login.masterData.APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\") : \"-1\"\r\n            }\r\n            inputParam = onSaveSubSampleAttachment(saveParam, this.props.Login.masterData.APSelectedSubSample);\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_TESTATTACHMENTS\") {\r\n            let saveParam = {\r\n                userInfo: this.props.Login.userInfo,\r\n                selectedRecord,\r\n                masterData: this.props.Login.masterData,\r\n                saveType, formRef,\r\n                operation: this.props.Login.operation,\r\n                selectedMaster: this.props.selectedMaster,\r\n                ntransactiontestcode: this.props.Login.masterData.APSelectedTest ? this.props.Login.masterData.APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\"\r\n            }\r\n            if (selectedTestList.length > 0) {\r\n                inputParam = onSaveTestAttachment(saveParam, selectedTestList);\r\n            }\r\n            else {\r\n                ok = false\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLE\" }))\r\n            }\r\n        }\r\n        if (ok) {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        operation: this.props.Login.operation,\r\n                        screenName: this.props.Login.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openAttachmentModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    generateCOAReport = (inputData, ncontrolCode) => {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            let inputParam = { reporparam: inputData }\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openChildModal: true,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: \"reportgeneration\",\r\n                    screenName: this.props.Login.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n\r\n        } else {\r\n\r\n            this.props.generateCOAReport(inputData);\r\n\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    getsubSampleDetail, getTestDetail, getTestChildTabDetail, performAction, updateStore, viewAttachment, checkListRecord,\r\n    updateDecision, getRegistrationType, getRegistrationSubType, getFilterStatus, getApprovalSample, getStatusCombo,\r\n    validateEsignCredential, crudMaster, validateEsignforApproval, getApprovalVersion, getParameterEdit, filterTransactionList,\r\n    getSampleChildTabDetail, getAttachmentCombo, deleteAttachment, getCommentsCombo, previewSampleReport, getFilterBasedTest,\r\n    generateCOAReport, getEnforceCommentsHistory, reportGenerate,getSubSampleChildTabDetail\r\n})(injectIntl(Approval))"]},"metadata":{},"sourceType":"module"}