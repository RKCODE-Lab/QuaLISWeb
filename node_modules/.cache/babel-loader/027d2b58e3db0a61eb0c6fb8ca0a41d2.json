{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\credentialmanagement\\\\RegistrationSubTypeConfigUserRoleTab.jsx\";\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Nav, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { transactionStatus } from '../../components/Enumeration';\nimport { process } from '@progress/kendo-data-query'; //const InstrumentSectionTab = (props) =>\n\nclass RegistrationSubTypeConfigUserRoleTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      DataState: {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      }\n    };\n  }\n\n  render() {\n    const addUserroleId = this.props.controlMap.has(\"AddUserrole\") && this.props.controlMap.get(\"AddUserrole\").ncontrolcode;\n    const ColumnList = [{\n      \"idsName\": \"IDS_USERROLE\",\n      \"dataField\": \"sdeptname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_USERNAME\",\n      \"dataField\": \"susername\",\n      \"width\": \"150px\"\n    }];\n    const methodUrl = \"Userrole\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"actions-stripe\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"addtestsection\",\n      className: \"add-txt-btn\",\n      hidden: this.props.userRoleControlRights.indexOf(addUserroleId) === -1,\n      onClick: () => this.props.getUserroleData(this.props.selectedRegSubType, \"getInstrumentSection\", \"section\", \"IDS_USERROLE\", this.props.userInfo, addUserroleId, this.props.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_USERROLE\",\n      defaultMessage: \"Add UserRole\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 25\n      }\n    })))), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"transfiltertypeconfigkey\",\n      primaryKeyField: \"ntransfiltertypeconfigcode\",\n      data: this.props.DepartmentAndUser,\n      dataResult: process(this.props.DepartmentAndUser || [], this.state.DataState),\n      dataState: this.state.DataState,\n      dataStateChange: event => this.setState({\n        DataState: event.dataState\n      }),\n      extractedColumnList: ColumnList,\n      controlMap: this.props.controlMap,\n      userRoleControlRights: this.props.userRoleControlRights,\n      inputParam: this.props.inputParam,\n      userInfo: this.props.userInfo,\n      deleteRecord: this.props.deleteRecord,\n      onSwitchChange: this.props.defaultRecord,\n      pageable: true,\n      scrollable: 'scrollable' //gridHeight = {'600px'}\n      ,\n      isActionRequired: true,\n      deleteParam: {\n        operation: \"delete\",\n        methodUrl,\n        screenName: this.props.screenName\n      },\n      methodUrl: methodUrl //  switchParam={{operation:\"Default\", methodUrl,screenName:this.props.screenName}}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.DepartmentAndUser !== previousProps.DepartmentAndUser) {\n      let {\n        DataState\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        DataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n        };\n      }\n\n      this.setState({\n        DataState\n      });\n    }\n  }\n\n}\n\n;\nexport default injectIntl(RegistrationSubTypeConfigUserRoleTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/RegistrationSubTypeConfigUserRoleTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","FontAwesomeIcon","DataGrid","faPlus","transactionStatus","process","RegistrationSubTypeConfigUserRoleTab","Component","constructor","props","state","DataState","skip","take","settings","parseInt","render","addUserroleId","controlMap","has","get","ncontrolcode","ColumnList","methodUrl","userRoleControlRights","indexOf","getUserroleData","selectedRegSubType","userInfo","selectedRecord","DepartmentAndUser","event","setState","dataState","inputParam","deleteRecord","defaultRecord","operation","screenName","componentDidUpdate","previousProps","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { process } from '@progress/kendo-data-query';\r\n//const InstrumentSectionTab = (props) =>\r\nclass  RegistrationSubTypeConfigUserRoleTab extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n        DataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n    });\r\n}\r\n\r\nrender(){\r\n    const addUserroleId = this.props.controlMap.has(\"AddUserrole\") && this.props.controlMap.get(\"AddUserrole\").ncontrolcode;\r\n    const ColumnList = [\r\n        {\"idsName\":\"IDS_USERROLE\",\"dataField\":\"sdeptname\",\"width\":\"150px\"},\r\n        {\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"150px\"},\r\n        ];\r\n    const methodUrl = \"Userrole\";\r\nreturn (\r\n    <>\r\n        <div className=\"actions-stripe\">\r\n            <div className=\"d-flex justify-content-end\">\r\n                <Nav.Link name=\"addtestsection\" className=\"add-txt-btn\" \r\n                hidden={this.props.userRoleControlRights.indexOf(addUserroleId) === -1}\r\n                        onClick={()=>this.props.getUserroleData(this.props.selectedRegSubType, \r\n                            \"getInstrumentSection\", \"section\", \"IDS_USERROLE\", this.props.userInfo, addUserroleId,this.props.selectedRecord)}\r\n                        >\r\n                        <FontAwesomeIcon icon = { faPlus } /> { }\r\n                        <FormattedMessage id=\"IDS_USERROLE\" defaultMessage=\"Add UserRole\"></FormattedMessage>\r\n                    </Nav.Link>\r\n            </div>\r\n        </div>\r\n        <Row noGutters={true}>\r\n            <Col md=\"12\">\r\n                <DataGrid\r\n                   key=\"transfiltertypeconfigkey\"\r\n                   primaryKeyField = \"ntransfiltertypeconfigcode\"\r\n                   data = {this.props.DepartmentAndUser}\r\n                   dataResult = {process(this.props.DepartmentAndUser||[],this.state.DataState)}\r\n                   dataState = {this.state.DataState}\r\n                   dataStateChange = {(event) => this.setState({ DataState: event.dataState })}\r\n                   extractedColumnList = {ColumnList}\r\n                   controlMap = {this.props.controlMap}\r\n                   userRoleControlRights={this.props.userRoleControlRights}\r\n                   inputParam = {this.props.inputParam}\r\n                   userInfo = {this.props.userInfo}\r\n                   deleteRecord = {this.props.deleteRecord}\r\n                   onSwitchChange = {this.props.defaultRecord}\r\n                   pageable={true}\r\n                   scrollable={'scrollable'}\r\n                   //gridHeight = {'600px'}\r\n                   isActionRequired={true}\r\n                   deleteParam={{operation:\"delete\", methodUrl,screenName:this.props.screenName}}\r\n                   methodUrl={methodUrl}\r\n                 //  switchParam={{operation:\"Default\", methodUrl,screenName:this.props.screenName}}\r\n                   \r\n                >\r\n                </DataGrid>\r\n            </Col>\r\n        </Row>\r\n    </>\r\n);\r\n}\r\ncomponentDidUpdate(previousProps) {\r\n    if (this.props.DepartmentAndUser !== previousProps.DepartmentAndUser) {\r\n        let { DataState} = this.state;\r\n        if (this.props.dataState=== undefined) {\r\n            DataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n        }\r\n        this.setState({ DataState });\r\n    }\r\n\r\n}\r\n};\r\n\r\nexport default injectIntl(RegistrationSubTypeConfigUserRoleTab);"]},"metadata":{},"sourceType":"module"}