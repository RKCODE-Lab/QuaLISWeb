{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\configurationmaster\\\\PasswordPolicy.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faCopy } from '@fortawesome/free-solid-svg-icons'; //, faUserTimes,faTrash,\n\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getPasswordPolicyDetail, getPasswordPolicyComboService, getCopyUseRolePolicy, comboChangeUserRolePolicy, filterColumnData } from '../../actions';\nimport rsapi from '../../rsapi'; //import { callService, crudMaster } from '../../actions';\n\nimport { ContentPanel } from '../../components/App.styles';\nimport { constructOptionList, searchData, sortData, showEsign, getControlMap } from '../../components/CommonScript';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Axios from 'axios';\nimport UserRoleFilter from './UserRoleFilter';\nimport AddPasswordPolicy from './AddPasswordPolicy';\nimport UserRolePolicy from './UserRolePolicy';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport Esign from '../audittrail/Esign';\nimport { transactionStatus } from '../../components/Enumeration'; // import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\n\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport { Affix } from 'rsuite'; // import ReactTooltip from 'react-tooltip';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass PasswordPolicy extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy, \"delete\", deleteId));\n    };\n\n    this.getPasswordPolicyComboService = (screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) => {\n      if (masterData.UserRole.length > 0) {\n        if (operation === \"create\" || operation === \"update\" && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.RETIRED && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.APPROVED) {\n          this.props.getPasswordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTRECORDTOEDIT\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLEFROMFILTER\"\n        }));\n      }\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.selectedcombo[\"nuserrolecode\"]) {\n        this.props.comboChangeUserRolePolicy(this.state.selectedcombo[\"nuserrolecode\"].value, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLE\"\n        }));\n      }\n    };\n\n    this.getPasswordPolicyDetail = passwordPolicy => {\n      return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\n        npolicycode: passwordPolicy.npolicycode,\n        \"userinfo\": this.props.Login.userInfo\n      }).then(response => {\n        const masterData = response.data;\n        sortData(masterData);\n        const selectedcombo = {\n          nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\n            \"value\": this.state.selectedcombo[\"nuserrolecode\"].value,\n            \"label\": this.state.selectedcombo[\"nuserrolecode\"].label\n          } : this.state.selectedcombo[\"nuserrolecode\"]\n        };\n        this.setState({\n          userRolePolicyDataData: masterData[\"UserRole\"],\n          selectedPasswordPolicy: masterData[\"SelectedPasswordPolicy\"],\n          selectedcombo\n        });\n      }).catch(error => {\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    };\n\n    this.deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\n      if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED || this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\n        let message = \"IDS_SELECTDRAFTRECORDTODELETE\"; // if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\n        //     message = \"IDS_SELECTDRAFTRECORDTOAPPROVE\";\n        // }\n\n        toast.warn(this.props.intl.formatMessage({\n          id: message\n        })); //toast.warn(this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedPasswordPolicy.stransstatus }));\n      } else {\n        const postParam = {\n          inputListName: \"PasswordPolicy\",\n          selectedObject: \"SelectedPasswordPolicy\",\n          primaryKeyField: \"npolicycode\",\n          primaryKeyValue: this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,\n          fetchUrl: \"passwordpolicy/getPasswordPolicy\",\n          fecthInputObject: {\n            userinfo: this.props.Login.userInfo\n          }\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl,\n          postParam,\n          inputData: {\n            [methodUrl.toLowerCase()]: selectedRecord,\n            \"userinfo\": this.props.Login.userInfo,\n            \"passwordpolicy\": this.props.Login.masterData.SelectedPasswordPolicy\n          },\n          operation\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: \"PasswordPolicy\",\n              operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\"; //selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null // operation: undefined\n\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData != null) {\n        const selectedcombo = this.state.selectedcombo || {};\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedcombo[fieldName] = comboData;\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedcombo,\n          selectedRecord\n        }); // if (fieldName === \"nuserrolecode\") {\n        //   this.searchRef.current.value = \"\";\n        //   this.props.comboChangeUserRolePolicy(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\n        // }\n      }\n    };\n\n    this.onComboChangeUserRole = (comboData, fieldName) => {\n      //if (comboData != null) {\n      const selectedcomboUserRole = this.state.selectedcomboUserRole || {}; //this.state.selectedRecord || {};\n\n      selectedcomboUserRole[fieldName] = comboData;\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedcomboUserRole,\n        selectedRecord\n      }); //}\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE; // else if (event.target.name === \"nlockmode\")\n        //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\n        else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {}; // if (value === 0 || value === 0.0) {\n      //     selectedRecord[name] = '';\n      //     this.setState({ selectedRecord });\n      // } else {\n\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      }); //}\n    };\n\n    this.onApproveClick = (screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) => {\n      if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.DRAFT) {\n        const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode;\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo; //add               \n\n        let postParam = undefined;\n        inputData[\"passwordpolicy\"] = {\n          \"nuserrolecode\": this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"] ? this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"].Value : \"\"\n        };\n        inputData[\"passwordpolicy\"] = this.props.Login.masterData.SelectedPasswordPolicy;\n        postParam = {\n          inputListName: \"PasswordPolicy\",\n          selectedObject: \"SelectedPasswordPolicy\",\n          primaryKeyField: \"npolicycode\"\n        };\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"UserRolePolicy\",\n          inputData: inputData,\n          operation: \"approve\",\n          postParam\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        } //toast.info(this.props.intl.formatMessage({ id: \"IDS_APPROVEPOLICY\" }));\n\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\"\n        }));\n      }\n    };\n\n    this.validation = () => {\n      let ntotal = 0;\n      let nminpswlen = 0;\n      let nmaxpaslen = 0;\n      let nexpairyDays = 0;\n      let nremainderdays = 0;\n      ntotal = parseInt(this.state.selectedRecord.nminnoofnumberchar) + parseInt(this.state.selectedRecord.nminnooflowerchar) + parseInt(this.state.selectedRecord.nminnoofupperchar) + parseInt(this.state.selectedRecord.nminnoofspecialchar);\n      nminpswlen = parseInt(this.state.selectedRecord.nminpasslength);\n      nmaxpaslen = parseInt(this.state.selectedRecord.nmaxpasslength);\n      nexpairyDays = parseInt(this.state.selectedRecord.nexpirypolicy);\n      nremainderdays = parseInt(this.state.selectedRecord.nremainderdays);\n\n      if (ntotal === 0) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CANNOTTOTALPSWZERO\"\n        }));\n        return false;\n      }\n\n      if (nminpswlen === 0) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_CANNOTMINPSWZERO\"\n        }));\n        return false;\n      }\n\n      if (nminpswlen < ntotal) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MINPSWCANTLESSTOTALLEN\"\n        }));\n        return false;\n      }\n\n      if (nmaxpaslen < nminpswlen) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MAXPSWCANTLESSMINPSWLEN\"\n        }));\n        return false;\n      }\n\n      if (nremainderdays > nexpairyDays) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REMAINDERSDAYSLESSTHANEXPIRYDAYS\"\n        }));\n        return false;\n      }\n\n      return true;\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let inputParam = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n      if (this.props.Login.screenName === \"IDS_PASSWORDPOLICY\") {\n        if (this.validation()) {\n          inputParam = this.savePasswordPolicy(saveType, formRef);\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\n          }\n        }\n      } else if (this.props.Login.screenName === \"IDS_USERROLEPOLICYS\") {\n        const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode;\n        inputParam = this.copyUserRolePolicy(saveType, formRef);\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, copyId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\"); // toast.info(this.props.intl.formatMessage({ id: \"IDS_COPYPOLICY\" }));\n        }\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n\n      if (this.state.selectedcombo[\"nuserrolecode\"].value) {\n        let inputParam = {\n          inputData: {\n            nuserrolecode: this.props.Login.masterData.SelectedUserRole.nuserrolecode,\n            userinfo: this.props.Login.userInfo\n          },\n          classUrl: \"passwordpolicy\",\n          methodUrl: \"PasswordPolicyByUserRoleCode\"\n        };\n        this.props.comboChangeUserRolePolicy(inputParam.inputData.nuserrolecode, this.props.Login.masterData, inputParam.inputData.userinfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_USERROLENOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.state = {\n      isOpen: false,\n      passwordPolicyData: [],\n      userRolePolicyData: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      userLogged: true,\n      selectedPasswordPolicy: undefined,\n      selectedcombo: undefined,\n      selectedcomboUserRole: undefined,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      showAccordian: true,\n      userRole: []\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.policyFieldList = ['spolicyname', 'nminnoofnumberchar', 'nminnooflowerchar', 'nminnoofupperchar', 'nminnoofspecialchar', 'nminpasslength', 'nmaxpasslength', 'nnooffailedattempt', 'nideallocktime', 'nexpirypolicyrequired', 'nexpirypolicy', 'nremainderdays', 'scomments']; //'nmahcode',\n\n    this.searchFieldList = [\"nexpirypolicy\", \"nideallocktime\", \"nmaxpasslength\", \"nminnooflowerchar\", \"nminnoofnumberchar\", \"nminnoofspecialchar\", \"nminnoofupperchar\", \"nminpasslength\", \"nnooffailedattempt\", \"scomments\", \"sexpirystatus\", \"spolicyname\", \"stransstatus\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    } // if (props.Login.selectedRecord === undefined) {\n    //     return { selectedRecord: {} }\n    // }\n\n\n    return null;\n  }\n\n  render() {\n    let userStatusCSS = \"outline-secondary\";\n\n    if (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.ACTIVE || this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\n      userStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED) {\n      userStatusCSS = \"outline-danger\";\n    }\n\n    const addId = this.state.controlMap.has(\"AddPasswordPolicy\") && this.state.controlMap.get(\"AddPasswordPolicy\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditPasswordPolicy\") && this.state.controlMap.get(\"EditPasswordPolicy\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeletePasswordPolicy\") && this.state.controlMap.get(\"DeletePasswordPolicy\").ncontrolcode;\n    const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode;\n    const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"PasswordPolicy\",\n      selectedObject: \"SelectedPasswordPolicy\",\n      primaryKeyField: \"npolicycode\",\n      fetchUrl: \"passwordpolicy/getPasswordPolicy\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList\n    };\n    this.validationColumnList = [{\n      \"idsName\": \"IDS_POLICYNAME\",\n      \"dataField\": \"spolicyname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINNUMBERCHAR\",\n      \"dataField\": \"nminnoofnumberchar\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINLOWERCHAR\",\n      \"dataField\": \"nminnooflowerchar\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINUPPERCHAR\",\n      \"dataField\": \"nminnoofupperchar\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINSPECIALCHAR\",\n      \"dataField\": \"nminnoofspecialchar\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MINPASSWORDLENGTH\",\n      \"dataField\": \"nminpasslength\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_MAXPASSWORDLENGTH\",\n      \"dataField\": \"nmaxpasslength\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_NOOFFAILEDATTEPT\",\n      \"dataField\": \"nnooffailedattempt\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    } //{ \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\",\"mandatory\": true },\n    //{ \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\",\"mandatory\": true },\n    ];\n\n    if (this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3) {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_POLICYNAME\",\n        \"dataField\": \"spolicyname\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINNUMBERCHAR\",\n        \"dataField\": \"nminnoofnumberchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINLOWERCHAR\",\n        \"dataField\": \"nminnooflowerchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINUPPERCHAR\",\n        \"dataField\": \"nminnoofupperchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINSPECIALCHAR\",\n        \"dataField\": \"nminnoofspecialchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINPASSWORDLENGTH\",\n        \"dataField\": \"nminpasslength\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MAXPASSWORDLENGTH\",\n        \"dataField\": \"nmaxpasslength\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_NOOFFAILEDATTEPT\",\n        \"dataField\": \"nnooffailedattempt\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_EXPIRYPOLICY\",\n        \"dataField\": \"nexpirypolicy\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REMAINDERDAYS\",\n        \"dataField\": \"nremainderdays\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }];\n    } else {\n      this.validationColumnList = [{\n        \"idsName\": \"IDS_POLICYNAME\",\n        \"dataField\": \"spolicyname\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINNUMBERCHAR\",\n        \"dataField\": \"nminnoofnumberchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINLOWERCHAR\",\n        \"dataField\": \"nminnooflowerchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINUPPERCHAR\",\n        \"dataField\": \"nminnoofupperchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINSPECIALCHAR\",\n        \"dataField\": \"nminnoofspecialchar\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MINPASSWORDLENGTH\",\n        \"dataField\": \"nminpasslength\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_MAXPASSWORDLENGTH\",\n        \"dataField\": \"nmaxpasslength\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_NOOFFAILEDATTEPT\",\n        \"dataField\": \"nnooffailedattempt\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }];\n    }\n\n    this.copyValidationColumnList = [{\n      \"idsName\": \"IDS_POLICYNAME\",\n      \"dataField\": \"spolicyname\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_USERROLEPOLICY\",\n      \"dataField\": \"nuserrolecode\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const mandatoryFields = [];\n    this.validationColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    const copyMandatoryFields = [];\n    this.copyValidationColumnList.forEach(item => item.mandatory === true ? copyMandatoryFields.push(item) : \"\");\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Password Policy\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.PasswordPolicy,\n      getMasterDetail: passwordPolicy => this.props.getPasswordPolicyDetail(passwordPolicy, this.props.Login.userInfo, this.props.Login.masterData, this.state.selectedcombo),\n      selectedMaster: this.props.Login.masterData.SelectedPasswordPolicy,\n      primaryKeyField: \"npolicycode\",\n      mainField: \"spolicyname\",\n      firstField: \"stransstatus\" // secondField=\"stransstatus\"\n      // isIDSField=\"Yes\"\n      //filterColumnData={this.props.filterColumnDataPasswordPolicy}\n      ,\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      openModal: () => this.props.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"create\", \"npolicycode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId),\n      hidePaging: true,\n      needAccordianFilter: false,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_USERROLEPOLICYS\": /*#__PURE__*/React.createElement(UserRoleFilter, {\n          formatMessage: this.props.intl.formatMessage,\n          filterUserRole: this.state.userRole || [] //{this.props.Login.masterData.UserRole || []}\n          ,\n          selectedRecord: this.state.selectedcombo || {} //\n          ,\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.PasswordPolicy && this.props.Login.masterData.PasswordPolicy.length > 0 && this.props.Login.masterData.SelectedPasswordPolicy ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.spolicyname)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-muted font-weight-normal d-flex justify-content-between\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.Login.masterData.SelectedPasswordPolicy.stransstatus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 61\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      onClick: () => this.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"update\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode, this.props.Login.masterData, this.props.Login.userInfo, editId),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deletePassword Policy\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      onClick: () => this.ConfirmDelete(deleteId) // data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(approveId) === -1,\n      onClick: () => this.onApproveClick(\"PasswordPolicy\", \"approve\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode, approveId),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(copyId) === -1,\n      onClick: () => this.props.getCopyUseRolePolicy(\"IDS_USERROLEPOLICYS\", \"copy\", \"nuserrolecode\", undefined),\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }) //  data-for=\"tooltip_list_wrap\"\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 65\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Text, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINNUMBERCHAR\",\n      message: \"Division\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminnoofnumberchar))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINLOWERCHAR\",\n      message: \"nminnooflowerchar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminnooflowerchar))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINUPPERCHAR\",\n      message: \"nminnoofupperchar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminnoofupperchar))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINSPECIALCHAR\",\n      message: \"nminnoofspecialchar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminnoofspecialchar))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MINPASSWORDLENGTH\",\n      message: \"nminpasslength\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nminpasslength))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_MAXPASSWORDLENGTH\",\n      message: \"nmaxpasslength\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nmaxpasslength))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_NOOFFAILEDATTEPT\",\n      message: \"nnooffailedattempt\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nnooffailedattempt))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXPIRYREQUIRED\",\n      message: \"nexpirypolicyrequired\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.sexpirystatus))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_EXPIRYPOLICY\",\n      message: \"nexpirypolicy\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nexpirypolicy))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_REMAINDERDAYS\",\n      message: \"nremainderdays\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.nremainderdays))), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_COMMENTS\",\n      message: \"scomments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 76\n      }\n    })), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"readonly-text font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedPasswordPolicy.scomments))))))) : \"\"))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ? mandatoryFields : copyMandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ? /*#__PURE__*/React.createElement(AddPasswordPolicy, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        onComboChange: this.onComboChange,\n        formatMessage: this.props.intl.formatMessage,\n        selectedPasswordPolicy: this.props.Login.masterData.SelectedPasswordPolicy,\n        operation: this.props.operation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(UserRolePolicy, {\n        selectedRecord: this.state.selectedRecord || this.props.Login.masterData.selectedcomboUserRole || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChangeUserRole,\n        formatMessage: this.props.intl.formatMessage,\n        operation: this.props.operation,\n        filterUserRole: this.state.userRole || [] //{this.props.Login.masterData.UserRole || []}\n        ,\n        selectedPasswordPolicy: this.props.Login.masterData.SelectedPasswordPolicy,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 35\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.UserRole) {\n      breadCrumbData.push({\n        \"label\": \"IDS_USERROLE\",\n        \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    const masterData = this.props.Login.masterData;\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\n      const selectedcombo = {\n        nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\n          \"value\": masterData.UserRole[0].nuserrolecode,\n          \"label\": masterData.UserRole[0].suserrolename\n        } : this.state.selectedRecord[\"nuserrolecode\"]\n      };\n      this.setState({\n        selectedcombo: selectedcombo\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n\n    if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\n      const userRole = constructOptionList(this.props.Login.masterData.UserRole || [], \"nuserrolecode\", \"suserrolename\", undefined, undefined, undefined);\n      const UserRoleList = userRole.get(\"OptionList\");\n      this.setState({\n        userRole: UserRoleList\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const filterData = this.generateBreadCrumData();\n      this.setState({\n        filterData\n      });\n    }\n  }\n\n  filterColumnData(event) {\n    let filterValue = event.target.value;\n\n    if (filterValue === \"\") {\n      this.setState({\n        passwordPolicyData: this.props.Login.masterData[\"PasswordPolicy\"],\n        //this.props.Login.masterData[\"Users\"],\n        userRolePolicyData: this.props.Login.masterData[\"UserRole\"],\n        selectedPasswordPolicy: this.props.Login.masterData[\"SelectedPasswordPolicy\"]\n      });\n    } else {\n      if (filterValue.length > 2) {\n        const searchedData = searchData(filterValue, this.props.Login.masterData[\"PasswordPolicy\"], \"spolicyname\");\n\n        if (searchedData && searchedData.length > 0) {\n          return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\n            nmahcode: searchedData[0].nmahcode,\n            userinfo: this.props.Login.userInfo\n          }).then(response => {\n            this.setState({\n              passwordPolicyData: searchedData,\n              userRolePolicyData: response.data[\"UserRole\"],\n              selectedPasswordPolicy: response.data[\"SelectedPasswordPolicy\"]\n            });\n          }).catch(error => {\n            if (error.response.status === 500) {\n              toast.error(error.message);\n            } else {\n              toast.warn(this.props.intl.formatMessage({\n                id: error.response.data\n              }));\n            }\n          });\n        } else {\n          this.setState({\n            passwordPolicyData: [],\n            userRolePolicyData: [],\n            selectedPasswordPolicy: {}\n          });\n        }\n      }\n    }\n  }\n\n  getCopyUseRolePolicy(screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) {\n    this.setState({\n      operation,\n      screenName,\n      isOpen: true\n    });\n  }\n\n  getPasswwordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue) {\n    if (operation === \"create\" || operation === \"update\" && this.state.selectedPasswordPolicy.ntransactionstatus !== transactionStatus.RETIRED) {\n      //ntransactionstatus = 7 -- User Retired           \n      let userLogged = this.state.userLogged;\n      let selectedRecord = {};\n      let urlArray = [];\n\n      if (operation === \"update\") {\n        const policyById = rsapi.post(\"passwordpolicy/getActivePasswordPolicyById\", {\n          [primaryKeyName]: primaryKeyValue,\n          \"userinfo\": this.props.Login.userInfo\n        });\n        urlArray = [policyById];\n        Axios.all(urlArray).then(response => {\n          selectedRecord = response[0].data;\n          this.setState({\n            operation,\n            screenName,\n            selectedRecord,\n            userLogged,\n            isOpen: true\n          });\n        }).catch(error => {\n          if (error.response.status === 500) {\n            toast.error(error.message);\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: error.response.data\n            }));\n          }\n        });\n      } else {\n        this.setState({\n          operation,\n          screenName,\n          selectedRecord,\n          isOpen: true\n        });\n      }\n    } else {\n      toast.warn(this.props.intl.formatMessage({\n        id: this.state.selectedPasswordPolicy.stransstatus\n      }));\n    }\n  }\n\n  savePasswordPolicy(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\n    let postParam = undefined;\n\n    if (this.props.Login.operation === \"update\") {\n      // edit\n      postParam = {\n        inputListName: \"PasswordPolicy\",\n        selectedObject: \"SelectedPasswordPolicy\",\n        primaryKeyField: \"npolicycode\"\n      };\n      inputData[\"passwordpolicy\"] = this.state.selectedRecord;\n      inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] !== null ? this.state.selectedRecord[\"scomments\"] : \"\"; // this.policyFieldList.map(item => {\n      //     return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : 0;\n      // })\n      // inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] ;\n    } else {\n      //add               \n      inputData[\"passwordpolicy\"] = {\n        \"nideallocktime\": 6000\n      }; //this.props.Login.userInfo.nmastersitecode };\n\n      this.policyFieldList.map(item => {\n        return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item];\n      });\n      inputData[\"nuserrolecode\"] = this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.nuserrolecode : \"\"; //inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\n    }\n\n    inputData[\"passwordpolicy\"][\"nexpirypolicy\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nexpirypolicy\"] : 0;\n    inputData[\"passwordpolicy\"][\"nremainderdays\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nremainderdays\"] : 0;\n    const inputParam = {\n      classUrl: this.props.Login.inputParam.classUrl,\n      methodUrl: \"PasswordPolicy\",\n      inputData: inputData,\n      operation: this.props.Login.operation,\n      saveType,\n      formRef,\n      postParam,\n      searchRef: this.searchRef\n    };\n    return inputParam;\n  }\n\n  copyUserRolePolicy(saveType, formRef) {\n    let inputData = [];\n    inputData[\"userinfo\"] = this.props.Login.userInfo;\n    inputData[\"userrole\"] = {};\n    let postParam = undefined;\n    let userroleArray = [];\n    userroleArray = this.state.selectedcomboUserRole.nuserrolecode.map(item => {\n      let userrolelist = {};\n      userrolelist[\"nuserrolecode\"] = item.value;\n      userrolelist[\"suserrolename\"] = item.label;\n      userrolelist[\"sdescription\"] = \"a\";\n      userrolelist[\"nsitecode\"] = -1; //userroleArray.push(userrolelist);\n\n      return userrolelist;\n    });\n    inputData['userrole'] = userroleArray;\n    inputData['npolicycode'] = this.props.Login.masterData.SelectedPasswordPolicy.npolicycode;\n    inputData['spolicyname'] = this.state.selectedRecord.spolicyname;\n    postParam = {\n      inputListName: \"PasswordPolicy\",\n      selectedObject: \"SelectedPasswordPolicy\",\n      primaryKeyField: \"npolicycode\"\n    };\n    const inputParam = {\n      classUrl: this.props.Login.inputParam.classUrl,\n      methodUrl: \"PasswordPolicyToSelectedRole\",\n      inputData: inputData,\n      operation: this.props.Login.operation,\n      saveType,\n      formRef,\n      postParam,\n      searchRef: this.searchRef\n    };\n    return inputParam;\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getPasswordPolicyDetail,\n  getPasswordPolicyComboService,\n  getCopyUseRolePolicy,\n  comboChangeUserRolePolicy,\n  filterColumnData\n})(injectIntl(PasswordPolicy));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/PasswordPolicy.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","faCopy","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","validateEsignCredential","updateStore","getPasswordPolicyDetail","getPasswordPolicyComboService","getCopyUseRolePolicy","comboChangeUserRolePolicy","filterColumnData","rsapi","ContentPanel","constructOptionList","searchData","sortData","showEsign","getControlMap","ListMaster","SlideOutModal","Axios","UserRoleFilter","AddPasswordPolicy","UserRolePolicy","DEFAULT_RETURN","Esign","transactionStatus","ConfirmMessage","BreadcrumbComponent","Affix","mapStateToProps","state","Login","PasswordPolicy","Component","constructor","props","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","masterData","SelectedPasswordPolicy","screenName","operation","primaryKeyName","primaryKeyValue","userInfo","ncontrolCode","UserRole","length","ntransactionstatus","RETIRED","APPROVED","warn","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","searchRef","current","value","selectedcombo","passwordPolicy","post","npolicycode","then","response","nuserrolecode","label","setState","userRolePolicyDataData","selectedPasswordPolicy","catch","error","status","message","methodUrl","selectedRecord","postParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","userinfo","inputParam","classUrl","inputData","toLowerCase","userRoleControlRights","nformcode","loadEsign","screenData","openModal","validateEsign","sreason","nreasoncode","spredefinedreason","password","closeModal","selectedId","onComboChange","comboData","fieldName","onComboChangeUserRole","selectedcomboUserRole","onInputOnChange","event","target","type","name","checked","ACTIVE","DEACTIVE","YES","NO","onNumericInputOnChange","onApproveClick","DRAFT","approveId","controlMap","has","get","ncontrolcode","undefined","Value","saveType","esignNeeded","validation","ntotal","nminpswlen","nmaxpaslen","nexpairyDays","nremainderdays","parseInt","nminnoofnumberchar","nminnooflowerchar","nminnoofupperchar","nminnoofspecialchar","nminpasslength","nmaxpasslength","nexpirypolicy","onSaveClick","formRef","savePasswordPolicy","copyId","copyUserRolePolicy","reloadData","SelectedUserRole","isOpen","passwordPolicyData","userRolePolicyData","masterStatus","userLogged","Map","showAccordian","userRole","createRef","policyFieldList","searchFieldList","getDerivedStateFromProps","render","userStatusCSS","addId","editId","filterParam","validationColumnList","copyValidationColumnList","mandatoryFields","forEach","item","mandatory","push","copyMandatoryFields","breadCrumbData","filterData","searchedData","spolicyname","stransstatus","indexOf","nnooffailedattempt","sexpirystatus","scomments","generateBreadCrumData","suserrolename","componentDidUpdate","previousProps","Object","values","map","UserRoleList","filterValue","nmahcode","getPasswwordPolicyComboService","urlArray","policyById","all","userroleArray","userrolelist","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faCopy } from '@fortawesome/free-solid-svg-icons';//, faUserTimes,faTrash,\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getPasswordPolicyDetail,\r\n    getPasswordPolicyComboService, getCopyUseRolePolicy, comboChangeUserRolePolicy, filterColumnData\r\n} from '../../actions';\r\nimport rsapi from '../../rsapi';\r\n//import { callService, crudMaster } from '../../actions';\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { constructOptionList, searchData, sortData, showEsign, getControlMap } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Axios from 'axios';\r\nimport UserRoleFilter from './UserRoleFilter';\r\nimport AddPasswordPolicy from './AddPasswordPolicy';\r\nimport UserRolePolicy from './UserRolePolicy';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n// import ConfirmDialog from '../../components/confirm-alert/confirm-alert.component';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport { Affix } from 'rsuite';\r\n// import ReactTooltip from 'react-tooltip';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass PasswordPolicy extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n\r\n            isOpen: false,\r\n            passwordPolicyData: [], userRolePolicyData: [],\r\n\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            selectedPasswordPolicy: undefined,\r\n            selectedcombo: undefined, selectedcomboUserRole: undefined,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true, userRole: []\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.policyFieldList = ['spolicyname', 'nminnoofnumberchar', 'nminnooflowerchar', 'nminnoofupperchar', 'nminnoofspecialchar',\r\n            'nminpasslength', 'nmaxpasslength', 'nnooffailedattempt', 'nideallocktime', 'nexpirypolicyrequired', 'nexpirypolicy',\r\n            'nremainderdays', 'scomments'];//'nmahcode',\r\n\r\n        this.searchFieldList = [\"nexpirypolicy\", \"nideallocktime\", \"nmaxpasslength\", \"nminnooflowerchar\", \"nminnoofnumberchar\",\r\n            \"nminnoofspecialchar\", \"nminnoofupperchar\", \"nminpasslength\", \"nnooffailedattempt\", \"scomments\",\r\n            \"sexpirystatus\", \"spolicyname\", \"stransstatus\"];\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        // if (props.Login.selectedRecord === undefined) {\r\n        //     return { selectedRecord: {} }\r\n        // }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        let userStatusCSS = \"outline-secondary\";\r\n        if ((this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.ACTIVE)\r\n            || (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED)) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED) {\r\n            userStatusCSS = \"outline-danger\";\r\n        }\r\n\r\n        const addId = this.state.controlMap.has(\"AddPasswordPolicy\") && this.state.controlMap.get(\"AddPasswordPolicy\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditPasswordPolicy\") && this.state.controlMap.get(\"EditPasswordPolicy\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeletePasswordPolicy\") && this.state.controlMap.get(\"DeletePasswordPolicy\").ncontrolcode\r\n        const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode\r\n        const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode\r\n        const filterParam = {\r\n            inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\",\r\n            fetchUrl: \"passwordpolicy/getPasswordPolicy\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList\r\n        };\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            //{ \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\",\"mandatory\": true },\r\n            //{ \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\",\"mandatory\": true },\r\n        ]\r\n        if (this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3) {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_EXPIRYPOLICY\", \"dataField\": \"nexpirypolicy\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REMAINDERDAYS\", \"dataField\": \"nremainderdays\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            ]\r\n        }\r\n        else {\r\n            this.validationColumnList = [\r\n                { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINNUMBERCHAR\", \"dataField\": \"nminnoofnumberchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINLOWERCHAR\", \"dataField\": \"nminnooflowerchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINUPPERCHAR\", \"dataField\": \"nminnoofupperchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINSPECIALCHAR\", \"dataField\": \"nminnoofspecialchar\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MINPASSWORDLENGTH\", \"dataField\": \"nminpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_MAXPASSWORDLENGTH\", \"dataField\": \"nmaxpasslength\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_NOOFFAILEDATTEPT\", \"dataField\": \"nnooffailedattempt\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n\r\n            ]\r\n        }\r\n        this.copyValidationColumnList = [\r\n            { \"idsName\": \"IDS_POLICYNAME\", \"dataField\": \"spolicyname\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_USERROLEPOLICY\", \"dataField\": \"nuserrolecode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n\r\n        ]\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        const copyMandatoryFields = [];\r\n        this.copyValidationColumnList.forEach(item => item.mandatory === true ?\r\n            copyMandatoryFields.push(item) : \"\"\r\n        );\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* Start of get display*/}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix>\r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Password Policy\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.PasswordPolicy}\r\n                                getMasterDetail={(passwordPolicy) => this.props.getPasswordPolicyDetail(passwordPolicy, this.props.Login.userInfo, this.props.Login.masterData, this.state.selectedcombo)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                primaryKeyField=\"npolicycode\"\r\n                                mainField=\"spolicyname\"\r\n                                firstField=\"stransstatus\"\r\n                                // secondField=\"stransstatus\"\r\n                                // isIDSField=\"Yes\"\r\n                                //filterColumnData={this.props.filterColumnDataPasswordPolicy}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"create\", \"npolicycode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                hidePaging={true}\r\n                                needAccordianFilter={false}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_USERROLEPOLICYS\":\r\n                                            <UserRoleFilter\r\n                                                formatMessage={this.props.intl.formatMessage}\r\n                                                filterUserRole={this.state.userRole || []}//{this.props.Login.masterData.UserRole || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}//\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.PasswordPolicy && this.props.Login.masterData.PasswordPolicy.length > 0 && this.props.Login.masterData.SelectedPasswordPolicy ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.SelectedPasswordPolicy.spolicyname}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal d-flex justify-content-between\">\r\n                                                    {/* <Row>\r\n                                                        <Col md={8} className=\"d-flex\"> */}\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                            {/* {((this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.ACTIVE)\r\n                                                                || (this.props.Login.masterData.SelectedPasswordPolicy && this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED)) ? <i class=\"fas fa-check \"></i> : \"\"} */}\r\n                                                            <FormattedMessage id={this.props.Login.masterData.SelectedPasswordPolicy.stransstatus} />\r\n                                                        </span>\r\n\r\n                                                    </h2>\r\n                                                    {/* </Col>\r\n                                                        <Col md={4}> */}\r\n                                                    <div className=\"d-flex product-category\" >\r\n                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                        <div className=\"d-inline \">\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.getPasswordPolicyComboService(\"IDS_PASSWORDPOLICY\", \"update\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,\r\n                                                                    this.props.Login.masterData, this.props.Login.userInfo, editId)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </Nav.Link>\r\n                                                            {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                    onClick={() => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy, \"delete\", deleteId)}>\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                </Nav.Link> */}\r\n                                                            <Nav.Link name=\"deletePassword Policy\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <ConfirmDialog\r\n                                                                        name=\"deleteMessage\"\r\n                                                                        message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                        doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                        doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                        icon={faTrashAlt}\r\n                                                                        //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                        handleClickDelete={() => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy,\r\n                                                                            \"delete\", deleteId)}\r\n                                                                    /> */}\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                onClick={() => this.onApproveClick(\"PasswordPolicy\", \"approve\", \"npolicycode\", this.props.Login.masterData.SelectedPasswordPolicy.npolicycode, approveId)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                            // data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\" hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                onClick={() => this.props.getCopyUseRolePolicy(\"IDS_USERROLEPOLICYS\", \"copy\", \"nuserrolecode\", undefined)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                            //  data-for=\"tooltip_list_wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCopy} />\r\n                                                            </Nav.Link>\r\n                                                        </div>\r\n                                                        {/* </Tooltip> */}\r\n                                                    </div>\r\n                                                    {/* </Col>\r\n                                                    </Row> */}\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                <Card.Text>\r\n                                                    <Row>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINNUMBERCHAR\" message=\"Division\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofnumberchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINLOWERCHAR\" message=\"nminnooflowerchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnooflowerchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINUPPERCHAR\" message=\"nminnoofupperchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofupperchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINSPECIALCHAR\" message=\"nminnoofspecialchar\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminnoofspecialchar}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MINPASSWORDLENGTH\" message=\"nminpasslength\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nminpasslength}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_MAXPASSWORDLENGTH\" message=\"nmaxpasslength\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nmaxpasslength}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_NOOFFAILEDATTEPT\" message=\"nnooffailedattempt\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nnooffailedattempt}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_EXPIRYREQUIRED\" message=\"nexpirypolicyrequired\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.sexpirystatus}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_EXPIRYPOLICY\" message=\"nexpirypolicy\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nexpirypolicy}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_REMAINDERDAYS\" message=\"nremainderdays\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.nremainderdays}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={8}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id=\"IDS_COMMENTS\" message=\"scomments\" /></FormLabel>\r\n                                                                <span className=\"readonly-text font-weight-normal\">{this.props.Login.masterData.SelectedPasswordPolicy.scomments}</span>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Text>\r\n\r\n\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n\r\n                {/* End of get display*/}\r\n\r\n                {/* Start of Modal Sideout for User Creation */}\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ? mandatoryFields : copyMandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.screenName === \"IDS_PASSWORDPOLICY\" ?\r\n                                <AddPasswordPolicy selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    selectedPasswordPolicy={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                    operation={this.props.operation}\r\n\r\n                                />\r\n                                : <UserRolePolicy selectedRecord={this.state.selectedRecord || this.props.Login.masterData.selectedcomboUserRole || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChangeUserRole}\r\n                                    formatMessage={this.props.intl.formatMessage}\r\n                                    operation={this.props.operation}\r\n                                    filterUserRole={this.state.userRole || []}//{this.props.Login.masterData.UserRole || []}\r\n                                    selectedPasswordPolicy={this.props.Login.masterData.SelectedPasswordPolicy}\r\n                                />\r\n\r\n\r\n                        }\r\n                    />\r\n                }\r\n                {/* End of Modal Sideout for User Creation */}\r\n            </>\r\n        );\r\n    }\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(\"PasswordPolicy\", this.props.Login.masterData.SelectedPasswordPolicy, \"delete\", deleteId));\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.UserRole) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_USERROLE\",\r\n                    \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\"\r\n\r\n                },\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    getPasswordPolicyComboService = (screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode) => {\r\n        if (masterData.UserRole.length > 0) {\r\n            if (operation === \"create\" || (operation === \"update\" && masterData.SelectedPasswordPolicy.ntransactionstatus !==\r\n             transactionStatus.RETIRED && masterData.SelectedPasswordPolicy.ntransactionstatus !== transactionStatus.APPROVED)) {\r\n                this.props.getPasswordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue, masterData, userInfo, ncontrolCode)\r\n             }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOEDIT\" }));\r\n             }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLEFROMFILTER\" }));\r\n        }\r\n\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedcombo[\"nuserrolecode\"]) {\r\n            this.props.comboChangeUserRolePolicy(this.state.selectedcombo[\"nuserrolecode\"].value, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\r\n\r\n            const selectedcombo = {\r\n                nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\r\n                    \"value\": masterData.UserRole[0].nuserrolecode,\r\n                    \"label\": masterData.UserRole[0].suserrolename\r\n                } : this.state.selectedRecord[\"nuserrolecode\"]\r\n\r\n            }\r\n            this.setState({ selectedcombo: selectedcombo });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n        if (this.props.Login.masterData.UserRole !== previousProps.Login.masterData.UserRole) {\r\n\r\n            const userRole = constructOptionList(this.props.Login.masterData.UserRole || [], \"nuserrolecode\",\r\n                \"suserrolename\", undefined, undefined, undefined);\r\n            const UserRoleList = userRole.get(\"OptionList\");\r\n\r\n\r\n            this.setState({ userRole: UserRoleList });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n            this.setState({ filterData });\r\n        }\r\n    }\r\n    getPasswordPolicyDetail = (passwordPolicy) => {\r\n        return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\r\n            npolicycode: passwordPolicy.npolicycode,\r\n            \"userinfo\": this.props.Login.userInfo\r\n        })\r\n            .then(response => {\r\n                const masterData = response.data;\r\n                sortData(masterData);\r\n                const selectedcombo = {\r\n                    nuserrolecode: masterData.UserRole && masterData.UserRole.length > 0 ? {\r\n                        \"value\": this.state.selectedcombo[\"nuserrolecode\"].value,\r\n                        \"label\": this.state.selectedcombo[\"nuserrolecode\"].label\r\n                    } : this.state.selectedcombo[\"nuserrolecode\"]\r\n                }\r\n                this.setState({\r\n                    userRolePolicyDataData: masterData[\"UserRole\"],\r\n\r\n                    selectedPasswordPolicy: masterData[\"SelectedPasswordPolicy\"],\r\n                    selectedcombo\r\n                });\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                }\r\n\r\n            })\r\n    }\r\n\r\n    filterColumnData(event) {\r\n        let filterValue = event.target.value;\r\n        if (filterValue === \"\") {\r\n            this.setState({\r\n                passwordPolicyData: this.props.Login.masterData[\"PasswordPolicy\"],//this.props.Login.masterData[\"Users\"],\r\n                userRolePolicyData: this.props.Login.masterData[\"UserRole\"],\r\n\r\n                selectedPasswordPolicy: this.props.Login.masterData[\"SelectedPasswordPolicy\"],\r\n\r\n            });\r\n        }\r\n        else {\r\n            if (filterValue.length > 2) {\r\n                const searchedData = searchData(filterValue, this.props.Login.masterData[\"PasswordPolicy\"], \"spolicyname\");\r\n\r\n                if (searchedData && searchedData.length > 0) {\r\n                    return rsapi.post(\"passwordpolicy/getPasswordPolicy\", {\r\n                        nmahcode: searchedData[0].nmahcode,\r\n                        userinfo: this.props.Login.userInfo\r\n                    })\r\n                        .then(response => {\r\n\r\n                            this.setState({\r\n                                passwordPolicyData: searchedData, userRolePolicyData: response.data[\"UserRole\"],\r\n\r\n                                selectedPasswordPolicy: response.data[\"SelectedPasswordPolicy\"]\r\n\r\n                            });\r\n                        })\r\n                        .catch(error => {\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                            }\r\n                        })\r\n                }\r\n                else {\r\n                    this.setState({\r\n\r\n                        passwordPolicyData: [], userRolePolicyData: [], selectedPasswordPolicy: {}\r\n\r\n                    });\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    deleteRecord = (methodUrl, selectedRecord, operation, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.RETIRED ||\r\n            this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\r\n            let message = \"IDS_SELECTDRAFTRECORDTODELETE\";\r\n            // if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.APPROVED) {\r\n            //     message = \"IDS_SELECTDRAFTRECORDTOAPPROVE\";\r\n            // }\r\n            toast.warn(this.props.intl.formatMessage({ id: message }));\r\n            //toast.warn(this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedPasswordPolicy.stransstatus }));\r\n        }\r\n        else {\r\n\r\n            const postParam = {\r\n                inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\",\r\n                primaryKeyField: \"npolicycode\",\r\n                primaryKeyValue: this.props.Login.masterData.SelectedPasswordPolicy.npolicycode,\r\n                fetchUrl: \"passwordpolicy/getPasswordPolicy\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl, postParam,\r\n                inputData: {\r\n                    [methodUrl.toLowerCase()]: selectedRecord,\r\n                    \"userinfo\": this.props.Login.userInfo,\r\n                    \"passwordpolicy\": this.props.Login.masterData.SelectedPasswordPolicy\r\n                },\r\n                operation\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"PasswordPolicy\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    getCopyUseRolePolicy(screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) {\r\n\r\n        this.setState({\r\n\r\n            operation, screenName,\r\n            isOpen: true\r\n        });\r\n\r\n    }\r\n\r\n\r\n    getPasswwordPolicyComboService(screenName, operation, primaryKeyName, primaryKeyValue) {\r\n\r\n        if (operation === \"create\" || (operation === \"update\" && this.state.selectedPasswordPolicy.ntransactionstatus !== transactionStatus.RETIRED)) {       //ntransactionstatus = 7 -- User Retired           \r\n\r\n\r\n            let userLogged = this.state.userLogged;\r\n\r\n            let selectedRecord = {};\r\n\r\n            let urlArray = [];\r\n\r\n            if (operation === \"update\") {\r\n                const policyById = rsapi.post(\"passwordpolicy/getActivePasswordPolicyById\", { [primaryKeyName]: primaryKeyValue, \"userinfo\": this.props.Login.userInfo });\r\n\r\n                urlArray = [policyById];\r\n                Axios.all(urlArray)\r\n                    .then(response => {\r\n\r\n\r\n\r\n                        selectedRecord = response[0].data;\r\n\r\n                        this.setState({\r\n                            operation, screenName, selectedRecord, userLogged,\r\n                            isOpen: true\r\n                        });\r\n                    })\r\n                    .catch(error => {\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(this.props.intl.formatMessage({ id: error.response.data }));\r\n                        }\r\n                    })\r\n            }\r\n            else {\r\n                this.setState({\r\n                    operation, screenName, selectedRecord, isOpen: true\r\n                });\r\n            }\r\n\r\n\r\n        }\r\n        else {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id: this.state.selectedPasswordPolicy.stransstatus }));\r\n        }\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n                //selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign, selectedRecord, selectedId: null,\r\n                // operation: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n\r\n            const selectedcombo = this.state.selectedcombo || {};\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedcombo[fieldName] = comboData;\r\n            selectedRecord[fieldName] = comboData;\r\n\r\n            this.setState({ selectedcombo, selectedRecord });\r\n            // if (fieldName === \"nuserrolecode\") {\r\n            //   this.searchRef.current.value = \"\";\r\n            //   this.props.comboChangeUserRolePolicy(comboData.value, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n\r\n            // }\r\n        }\r\n\r\n    }\r\n\r\n    onComboChangeUserRole = (comboData, fieldName) => {\r\n        //if (comboData != null) {\r\n            const selectedcomboUserRole = this.state.selectedcomboUserRole || {}; //this.state.selectedRecord || {};\r\n            selectedcomboUserRole[fieldName] = comboData;\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedcomboUserRole, selectedRecord });\r\n\r\n        //}\r\n\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            // else if (event.target.name === \"nlockmode\")\r\n            //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        // if (value === 0 || value === 0.0) {\r\n        //     selectedRecord[name] = '';\r\n        //     this.setState({ selectedRecord });\r\n        // } else {\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n        //}\r\n    }\r\n    onApproveClick = (screenName, operation, primaryKeyName, primaryKeyValue, ncontrolCode) => {\r\n        if (this.props.Login.masterData.SelectedPasswordPolicy.ntransactionstatus === transactionStatus.DRAFT) {\r\n            const approveId = this.state.controlMap.has(\"ApprovePasswordPolicy\") && this.state.controlMap.get(\"ApprovePasswordPolicy\").ncontrolcode\r\n            let inputData = [];\r\n            inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n            //add               \r\n            let postParam = undefined;\r\n            inputData[\"passwordpolicy\"] = { \"nuserrolecode\": this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"] ? this.props.Login.masterData.SelectedPasswordPolicy[\"nuserrolecode\"].Value : \"\" };\r\n            inputData[\"passwordpolicy\"] = this.props.Login.masterData.SelectedPasswordPolicy;\r\n            postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"UserRolePolicy\",\r\n                inputData: inputData,\r\n                operation: \"approve\", postParam\r\n            }\r\n            let saveType;\r\n\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, approveId);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n            //toast.info(this.props.intl.formatMessage({ id: \"IDS_APPROVEPOLICY\" }));\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTRECORDTOAPPROVE\" }));\r\n        }\r\n    }\r\n    validation = () => {\r\n        let ntotal = 0;\r\n        let nminpswlen = 0;\r\n        let nmaxpaslen = 0;\r\n        let nexpairyDays = 0;\r\n        let nremainderdays = 0;\r\n        ntotal = parseInt(this.state.selectedRecord.nminnoofnumberchar) + parseInt(this.state.selectedRecord.nminnooflowerchar) + parseInt(this.state.selectedRecord.nminnoofupperchar) + parseInt(this.state.selectedRecord.nminnoofspecialchar);\r\n        nminpswlen = parseInt(this.state.selectedRecord.nminpasslength);\r\n        nmaxpaslen = parseInt(this.state.selectedRecord.nmaxpasslength);\r\n        nexpairyDays = parseInt(this.state.selectedRecord.nexpirypolicy);\r\n        nremainderdays = parseInt(this.state.selectedRecord.nremainderdays);\r\n        if (ntotal === 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTTOTALPSWZERO\" }));\r\n            return false;\r\n        }\r\n        if (nminpswlen === 0) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_CANNOTMINPSWZERO\" }));\r\n            return false;\r\n        }\r\n        if (nminpswlen < ntotal) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MINPSWCANTLESSTOTALLEN\" }));\r\n            return false;\r\n        }\r\n        if (nmaxpaslen < nminpswlen) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MAXPSWCANTLESSMINPSWLEN\" }));\r\n            return false;\r\n        }\r\n        if (nremainderdays > nexpairyDays) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REMAINDERSDAYSLESSTHANEXPIRYDAYS\" }));\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        if (this.props.Login.screenName === \"IDS_PASSWORDPOLICY\") {\r\n\r\n            if (this.validation()) {\r\n                inputParam = this.savePasswordPolicy(saveType, formRef);\r\n\r\n                const masterData = this.props.Login.masterData;\r\n\r\n                if (\r\n                    showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.screenName === \"IDS_USERROLEPOLICYS\") {\r\n            const copyId = this.state.controlMap.has(\"CopyPasswordPolicy\") && this.state.controlMap.get(\"CopyPasswordPolicy\").ncontrolcode\r\n            inputParam = this.copyUserRolePolicy(saveType, formRef);\r\n            const masterData = this.props.Login.masterData;\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, copyId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                // toast.info(this.props.intl.formatMessage({ id: \"IDS_COPYPOLICY\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    savePasswordPolicy(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n            inputData[\"passwordpolicy\"] = this.state.selectedRecord;\r\n            inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] !== null ? this.state.selectedRecord[\"scomments\"] : \"\";\r\n\r\n            // this.policyFieldList.map(item => {\r\n            //     return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : 0;\r\n            // })\r\n\r\n            // inputData[\"passwordpolicy\"][\"scomments\"] = this.state.selectedRecord[\"scomments\"] ;\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"passwordpolicy\"] = { \"nideallocktime\": 6000 };//this.props.Login.userInfo.nmastersitecode };\r\n\r\n            this.policyFieldList.map(item => {\r\n                return inputData[\"passwordpolicy\"][item] = this.state.selectedRecord[item]\r\n            });\r\n            inputData[\"nuserrolecode\"] = this.props.Login.masterData.SelectedUserRole  ? this.props.Login.masterData.SelectedUserRole.nuserrolecode : \"\";\r\n            //inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\r\n\r\n        }\r\n        inputData[\"passwordpolicy\"][\"nexpirypolicy\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nexpirypolicy\"] : 0;\r\n        inputData[\"passwordpolicy\"][\"nremainderdays\"] = this.state.selectedRecord[\"nexpirypolicyrequired\"] === 3 ? this.state.selectedRecord[\"nremainderdays\"] : 0;\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"PasswordPolicy\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n\r\n    copyUserRolePolicy(saveType, formRef) {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"userrole\"] = {};\r\n        let postParam = undefined;\r\n\r\n        let userroleArray = []\r\n        userroleArray = this.state.selectedcomboUserRole.nuserrolecode.map(item => {\r\n            let userrolelist = {}\r\n            userrolelist[\"nuserrolecode\"] = item.value;\r\n            userrolelist[\"suserrolename\"] = item.label;\r\n            userrolelist[\"sdescription\"] = \"a\";\r\n            userrolelist[\"nsitecode\"] = -1;\r\n            //userroleArray.push(userrolelist);\r\n            return userrolelist;\r\n        });\r\n        inputData['userrole'] = userroleArray;\r\n        inputData['npolicycode'] = this.props.Login.masterData.SelectedPasswordPolicy.npolicycode;\r\n        inputData['spolicyname'] = this.state.selectedRecord.spolicyname;\r\n        postParam = { inputListName: \"PasswordPolicy\", selectedObject: \"SelectedPasswordPolicy\", primaryKeyField: \"npolicycode\" };\r\n\r\n        const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"PasswordPolicyToSelectedRole\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        return inputParam;\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    reloadData = () => {\r\n\r\n        this.searchRef.current.value = \"\";\r\n        if (this.state.selectedcombo[\"nuserrolecode\"].value) {\r\n            let inputParam = {\r\n                inputData: {\r\n                    nuserrolecode: this.props.Login.masterData.SelectedUserRole.nuserrolecode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                },\r\n                classUrl: \"passwordpolicy\",\r\n                methodUrl: \"PasswordPolicyByUserRoleCode\"\r\n            }\r\n            this.props.comboChangeUserRolePolicy(inputParam.inputData.nuserrolecode, this.props.Login.masterData, inputParam.inputData.userinfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_USERROLENOTAVAILABLE\" }));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getPasswordPolicyDetail, getPasswordPolicyComboService, getCopyUseRolePolicy, comboChangeUserRolePolicy, filterColumnData\r\n})(injectIntl(PasswordPolicy));\r\n\r\n"]},"metadata":{},"sourceType":"module"}