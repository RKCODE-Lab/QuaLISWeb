{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\worklist\\\\WorklistHistoryTab.jsx\";\nimport React from 'react';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { Nav, Row, Col } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { transactionStatus } from '../../components/Enumeration';\nimport { process } from '@progress/kendo-data-query'; //const InstrumentSectionTab = (props) =>\n\nclass WorklistHistoryTab extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sectionDataState: {\n        skip: 0,\n        take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n      }\n    };\n  } // dataStateChange = (event) => {\n  //     this.setState({\n  //         dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\n  //         sectionDataState: event.dataState\n  //     });\n  //}\n\n\n  render() {\n    const instSectionColumnList = [{\n      \"idsName\": \"IDS_STATUS\",\n      \"dataField\": \"stransdisplaystatus\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_USERNAME\",\n      \"dataField\": \"username\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_ROLE\",\n      \"dataField\": \"suserrolename\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_TRANSDATE\",\n      \"dataField\": \"stransactiondate\",\n      \"width\": \"150px\"\n    } // {\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"150px\", \"componentName\": \"switch\", \n    // \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultSection\"}\n    ];\n    const methodUrl = \"Section\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(DataGrid, {\n      key: \"nworkhistorycode\",\n      primaryKeyField: \"nworkhistorycode\" //dataResult={process(this.props.selectedWorklistHistory ||[], { skip: 0, take: 10 })}\n      ,\n      dataResult: this.props.selectedWorklistHistory || [],\n      dataState: {},\n      data: this.props.InstrumentSection,\n      extractedColumnList: instSectionColumnList,\n      controlMap: this.state.controlMap //dataState={{ skip: 0, take: 10 }}\n      ,\n      pageable: false,\n      scrollable: 'scrollable',\n      gridHeight: '335px',\n      isActionRequired: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.InstrumentSection !== previousProps.InstrumentSection) {\n      let {\n        sectionDataState\n      } = this.state;\n\n      if (this.props.dataState === undefined) {\n        sectionDataState = {\n          skip: 0,\n          take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n        };\n      }\n\n      this.setState({\n        sectionDataState\n      });\n    }\n  }\n\n}\n\n;\nexport default injectIntl(WorklistHistoryTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/worklist/WorklistHistoryTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","FontAwesomeIcon","DataGrid","faPlus","transactionStatus","process","WorklistHistoryTab","Component","constructor","props","state","sectionDataState","skip","take","settings","parseInt","render","instSectionColumnList","methodUrl","selectedWorklistHistory","InstrumentSection","controlMap","componentDidUpdate","previousProps","dataState","undefined","setState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { process } from '@progress/kendo-data-query';\r\n//const InstrumentSectionTab = (props) =>\r\nclass WorklistHistoryTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            sectionDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n        });\r\n    }\r\n\r\n\r\n    // dataStateChange = (event) => {\r\n    //     this.setState({\r\n    //         dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\r\n    //         sectionDataState: event.dataState\r\n    //     });\r\n    //}\r\n    render() {\r\n\r\n        const instSectionColumnList = [\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"username\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_ROLE\", \"dataField\": \"suserrolename\", \"width\": \"150px\" },                               \r\n            { \"idsName\": \"IDS_TRANSDATE\", \"dataField\": \"stransactiondate\", \"width\": \"150px\" }\r\n            // {\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"150px\", \"componentName\": \"switch\", \r\n            // \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultSection\"}\r\n        ];\r\n        const methodUrl = \"Section\";\r\n        return (\r\n            <>\r\n\r\n                <Row noGutters={true}>\r\n                    <Col md=\"12\">\r\n                        <DataGrid\r\n                            key=\"nworkhistorycode\"\r\n                           primaryKeyField=\"nworkhistorycode\"\r\n                            //dataResult={process(this.props.selectedWorklistHistory ||[], { skip: 0, take: 10 })}\r\n                            dataResult={this.props.selectedWorklistHistory ||[]}\r\n                            dataState={{}}\r\n                            data={this.props.InstrumentSection}\r\n                            extractedColumnList={instSectionColumnList}\r\n                            controlMap={this.state.controlMap}\r\n                            //dataState={{ skip: 0, take: 10 }}\r\n                            pageable={false}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'335px'}\r\n                            isActionRequired={false}\r\n\r\n\r\n                        >\r\n                        </DataGrid>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.InstrumentSection !== previousProps.InstrumentSection) {\r\n            let { sectionDataState } = this.state;\r\n            if (this.props.dataState === undefined) {\r\n                sectionDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n            }\r\n            this.setState({ sectionDataState });\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default injectIntl(WorklistHistoryTab);"]},"metadata":{},"sourceType":"module"}