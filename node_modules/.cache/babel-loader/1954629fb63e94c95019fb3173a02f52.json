{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{Row,Col,Nav,Card,Button}from'react-bootstrap';import{Grid,GridColumn}from'@progress/kendo-react-grid';import{process}from'@progress/kendo-data-query';import{toast}from'react-toastify';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faTrashAlt,faSave,faCopy,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from'../audittrail/Esign';import ScreenRightsFilter from'./ScreenRightsFilter';import AddScreenRights from'./AddScreenRights';import UserRoleScreenRights from'./UserRoleScreenRights';import{showEsign,getControlMap,constructOptionList}from'../../components/CommonScript';import{callService,crudMaster,validateEsignCredential,updateStore,getScreenRightsDetail,copyScreenRights,filterTransactionList,getScreenRightsComboService,comboChangeUserRoleScreenRights,handleClickDelete,filterColumnData,getCopyUseRoleScreenRights,checkUserRoleScreenRights,reload}from'../../actions';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{transactionStatus}from'../../components/Enumeration';import{ContentPanel,AtSubCard}from'../../components/App.styles';import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import TransactionListMaster from'../../components/TransactionListMaster';import{ProductList}from'../product/product.styled';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import PerfectScrollbar from'react-perfect-scrollbar';import SplitterLayout from'react-splitter-layout';import BreadcrumbComponent from'../../components/Breadcrumb.Component';// import ReactTooltip from 'react-tooltip';\nimport{LocalizationProvider}from'@progress/kendo-react-intl';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var ScreenRights=/*#__PURE__*/function(_React$Component){_inherits(ScreenRights,_React$Component);var _super=_createSuper(ScreenRights);function ScreenRights(props){var _this;_classCallCheck(this,ScreenRights);_this=_super.call(this,props);_this.dataStateChange=function(event){// if (event.dataState.group.length === 1 && event.dataState.group[0].field === 'screenname')\n// {\n_this.setState({dataResult:process(_this.props.Login.masterData.ControlRights||[],event.dataState),dataState:event.dataState});//}\n};_this.expandChange=function(event){var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;event.dataItem.expanded=!isExpanded;_this.setState(_objectSpread({},_this.state));//this.setState({ ...this.state.dataState });\n};_this.paneSizeChange=function(d){_this.setState({splitChangeWidthPercentage:d});};_this.switchGroupBy=function(event){var selectedSwitch=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;var dataState=_this.state.dataState||{};if(selectedSwitch===transactionStatus.YES){dataState=_objectSpread(_objectSpread({},dataState),{},{group:[{field:'screenname'}]});}else{dataState={skip:dataState.skip,take:dataState.take};}_this.setState({selectedSwitch:selectedSwitch,dataState:dataState});};_this.ConfirmDelete=function(deleteId){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.handleClickDelete(_this.props.Login.masterData,deleteId,\"openModal\");});};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){// this.reloadData(this.state.selectedRecord, true);\nif(_this.state.selectedcombo[\"nuserrolecode\"]){_this.props.comboChangeUserRoleScreenRights(_this.state.selectedcombo,_this.props.Login.masterData,_this.props.Login.userInfo);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTUSERROLE\"}));}};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});//setTimeout(() => { this._scrollBarRef.updateScroll() })\n};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"retire\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){if(comboData!=null){if(fieldName===\"nuserrolecode\"){var selectedcombo=_this.state.selectedcombo||{};selectedcombo[fieldName]=comboData;_this.searchRef.current.value=\"\";_this.setState({selectedcombo:selectedcombo});// masterData[\"ControlRights\"]=[]\n// this.props.comboChangeUserRoleScreenRights(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedcombo);\n}else if(fieldName===\"value\"){var comboitem=_this.state.comboitem||{};comboitem[fieldName]=comboData;_this.setState({comboitem:comboitem});}else if(fieldName===\"nformcode\"){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"nformcode\"]=comboData;var availableDatas=[];_this.state.selectedRecord.nformcode.map(function(data){return availableDatas.push(data.item);});_this.setState({selectedRecord:selectedRecord,availableDatas:availableDatas});}}};_this.onComboChangeUserRole=function(comboData,fieldName){if(comboData!=null){var selectedRecord=_this.state.selectedRecord||{};//this.state.selectedRecord || {};\nselectedRecord[\"nuserrole\"]=comboData;if(fieldName===\"nuserrole\"){_this.props.checkUserRoleScreenRights(comboData.value,_this.props.Login.masterData,_this.props.Login.userInfo,selectedRecord);}}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.saveClick=function(selectedRecord,saveType,formRef){var operation=\"update\";var methodUrl=\"\";var inputData=[];var postParam={inputListName:\"ScreenRights\",selectedObject:\"SelectedScreenRights\",primaryKeyField:\"nuserrolescreencode\"};inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"selectedscreenrights\"]=_this.props.Login.masterData.SelectedScreenRights;inputData[\"nflag\"]=transactionStatus.ACTIVE;inputData[\"screenrights\"]=selectedRecord;if(saveType===1){inputData[\"nneedrights\"]=selectedRecord[\"nneedrights\"];inputData[\"nneedesign\"]=null;methodUrl=\"ControlRights\";}else{inputData[\"nneedesign\"]=selectedRecord[\"nneedesign\"];methodUrl=\"Esign\";}var inputParam={classUrl:\"screenrights\",methodUrl:methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,searchRef:_this.searchRef,postParam:postParam,dataState:_this.state.dataState};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");};_this.onSaveClick=function(saveType,formRef){var inputData=[];var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;inputData[\"screenrights\"]=_this.state.availableDatas;inputData[\"nuserrolecode\"]=_this.state.selectedcombo[\"nuserrolecode\"]?_this.state.selectedcombo[\"nuserrolecode\"].value:\"\";inputData[\"userrolecode\"]=_this.state.selectedRecord[\"nuserrole\"]?_this.state.selectedRecord[\"nuserrole\"].value:\"\";inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"ScreenRights\",inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,postParam:postParam,selectedRecord:_this.state.selectedRecord,searchRef:_this.searchRef,dataState:_this.state.dataState};var masterData=_this.props.Login.masterData;if(_this.props.Login.screenName===\"IDS_SCREENRIGHTS\"){if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}else{if(_this.props.Login.masterData.copyScreenRights?_this.props.Login.masterData.copyScreenRights.length>0:false){_this.ConfirmComponent();}else{if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var _updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(_updateInfo);}else{_this.props.copyScreenRights(_this.state.selectedRecord?_this.state.selectedRecord[\"nuserrole\"].value:\"\",_this.state.selectedcombo[\"nuserrolecode\"]?_this.state.selectedcombo[\"nuserrolecode\"].value:\"\",_this.props.Login.userInfo,_this.props.Login.masterData);}}}};_this.copyAlertSave=function(){var inputData=[];var inputParam={};inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;inputData[\"screenrights\"]=_this.state.availableDatas;inputData[\"nuserrolecode\"]=_this.state.selectedcombo[\"nuserrolecode\"]?_this.state.selectedcombo[\"nuserrolecode\"].value:\"\";inputData[\"userrolecode\"]=_this.state.selectedRecord?_this.state.selectedRecord[\"nuserrole\"].value:\"\";inputParam={classUrl:_this.props.Login.inputParam.classUrl,methodUrl:\"ScreenRights\",inputData:inputData,operation:_this.props.Login.operation,postParam:postParam,searchRef:_this.searchRef};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData}}};_this.props.updateStore(updateInfo);}else{_this.props.copyScreenRights(_this.state.selectedRecord?_this.state.selectedRecord[\"nuserrole\"].value:\"\",_this.state.selectedcombo[\"nuserrolecode\"]?_this.state.selectedcombo[\"nuserrolecode\"].value:\"\",_this.props.Login.userInfo,_this.props.Login.masterData);}};_this.onSaveAllControlAndEsign=function(skip,take,saveType,formRef){var value=_this.state.comboitem?_this.state.comboitem.value.value:_this.ControlButton[0].value;var operation=\"\";var methodUrl=\"\";var inputData=[];var postParam=undefined;inputData[\"userinfo\"]=_this.props.Login.userInfo;// inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights.slice(skip, skip + take);\ninputData[\"selectedscreenrights\"]=_this.props.Login.masterData.SelectedScreenRights;inputData[\"nflag\"]=transactionStatus.DEACTIVE;postParam={inputListName:\"ScreenRights\",selectedObject:\"SelectedScreenRights\",primaryKeyField:\"nuserrolescreencode\"};if(value===1){inputData[\"nneedrights\"]=transactionStatus.YES;inputData[\"nneedesign\"]=null;operation=\"update\";methodUrl=\"ControlRights\";}else if(value===2){inputData[\"nneedrights\"]=transactionStatus.NO;inputData[\"nneedesign\"]=null;operation=\"update\";methodUrl=\"ControlRights\";}else if(value===3){inputData[\"nneedesign\"]=transactionStatus.YES;operation=\"update\";methodUrl=\"Esign\";}else if(value===4){inputData[\"nneedesign\"]=transactionStatus.NO;operation=\"update\";methodUrl=\"Esign\";}var inputParam={classUrl:\"screenrights\",methodUrl:methodUrl,displayName:_this.props.Login.inputParam.displayName,inputData:inputData,operation:operation,saveType:saveType,formRef:formRef,postParam:postParam,searchRef:_this.searchRef,selectedcombo:_this.props.Login.selectedcombo};_this.props.crudMaster(inputParam,_this.props.Login.masterData,\"openModal\");};_this.ConfirmComponent=function(){_this.confirmMessage.confirm(\"confirmation\",_this.props.intl.formatMessage({id:\"IDS_CONFIRMATION\"}),_this.props.intl.formatMessage({id:\"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.copyAlertSave();});};_this.reloadData=function(){if(_this.props.Login.masterData.SelectedUserRole){var comboitem={};//let selectedcombo= this.state.selectedcombo;\ncomboitem[\"value\"]=_this.ControlButton[0];_this.searchRef.current.value=\"\";_this.props.Login.masterData.searchedData=undefined;var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo},classUrl:\"screenrights\",methodUrl:\"ScreenRights\",displayName:\"Screen Rights\",userInfo:_this.props.Login.userInfo,comboitem:comboitem,nuserrolecode:_this.props.Login.masterData.SelectedUserRole,masterData:_this.props.Login.masterData,skip:_this.state.skip,take:_this.state.take};_this.props.reload(inputParam);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTUSERROLE\"}));}};var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5//, group: [{ field: 'screenname' }]\n};_this.searchFieldList=[\"sdisplayname\"];_this.state={masterStatus:\"\",error:\"\",isOpen:false,ScreenRightsData:[],userRoleData:[],availableDatas:[],selectedRecord:{},userroleList:[],operation:\"\",comboitem:undefined,screenName:undefined,SelectedScreenrights:undefined,selectedcombo:undefined,selectedcomboUserRole:undefined,userRoleControlRights:[],ControlRights:undefined,ConfirmDialogScreen:false,controlMap:new Map(),showAccordian:true,dataResult:[],skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],dataState:_dataState,columnName:'',rowIndex:0,data:[],splitChangeWidthPercentage:30};_this.searchRef=React.createRef();_this.ControlButton=[{value:1,label:_this.props.intl.formatMessage({id:\"IDS_ENABLEALLCONTROLRIGHTS\"})},{value:2,label:_this.props.intl.formatMessage({id:\"IDS_DISABLEALLCONTROLRIGHTS\"})},{value:3,label:_this.props.intl.formatMessage({id:\"IDS_ENABLEALLESIGNRIGHTS\"})},{value:4,label:_this.props.intl.formatMessage({id:\"IDS_DISABLEALLESIGNRIGHTS\"})}];_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(ScreenRights,[{key:\"render\",value:function render(){var _this2=this;// console.log(\"master:\", this.props.Login.masterData, this.state.dataResult)\nvar searchedData=this.props.Login.masterData.searchedData;var _ScreenRights=this.props.Login.masterData.ScreenRights||[];var addId=this.state.controlMap.has(\"AddScreenRights\")&&this.state.controlMap.get(\"AddScreenRights\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteScreenRights\")&&this.state.controlMap.get(\"DeleteScreenRights\").ncontrolcode;var copyId=this.state.controlMap.has(\"CopyScreenRights\")&&this.state.controlMap.get(\"CopyScreenRights\").ncontrolcode;var filterParam={inputListName:\"ScreenRights\",selectedObject:\"SelectedScreenRights\",primaryKeyField:\"nuserrolescreencode\",fetchUrl:\"screenrights/getSearchScreenRights\",userinfo:this.props.Login.userInfo,fecthInputObject:{userinfo:this.props.Login.userInfo},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList,changeList:[],isSingleSelect:false};var mandatoryFieldsScreenRights=[{\"mandatory\":true,\"idsName\":\"IDS_SCREENRIGHTS\",\"dataField\":\"nformcode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];var mandatoryFieldsUsers=[{\"mandatory\":true,\"idsName\":\"IDS_USERROLE\",\"dataField\":\"nuserrole\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];// let screenlen = searchedData ? searchedData.length : ScreenRights.length\nvar breadCrumbData=this.state.filterData||[];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-4 screen-height-window\"},breadCrumbData.length>0?/*#__PURE__*/ // <Affix top={64}>\nReact.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})// </Affix> \n:\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12,className:\"parent-port-height sticky_head_parent\",ref:function ref(parentHeight){_this2.parentHeight=parentHeight;}},/*#__PURE__*/React.createElement(SplitterLayout,{borderColor:\"#999\",percentage:true,primaryIndex:1,secondaryInitialSize:this.state.splitChangeWidthPercentage,onSecondaryPaneSizeChange:this.paneSizeChange,primaryMinSize:40,secondaryMinSize:20},/*#__PURE__*/React.createElement(TransactionListMaster,{splitChangeWidthPercentage:this.state.splitChangeWidthPercentage,masterList:searchedData||_ScreenRights||[],selectedMaster:this.props.Login.masterData.SelectedScreenRights,primaryKeyField:\"nuserrolescreencode\",getMasterDetail:this.props.getScreenRightsDetail,inputParam:{userinfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,dataState:this.state.dataState,skip:this.state.skip,take:this.state.take},additionalParam:['napprovalversioncode'],mainField:\"sdisplayname\",selectedListName:\"SelectedScreenRights\",filterColumnData:this.props.filterTransactionList,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,objectName:\"screenrights\",listName:\"IDS_SCREENRIGHTS\",hideQuickSearch:true,skip:this.state.skip,take:this.state.take,handlePageChange:this.handlePageChange,hidePaging:false,needFilter:true,needAccordianFilter:false,childTabsKey:[\"ControlRights\"],openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterComponent:[{\"IDS_FILTER\":/*#__PURE__*/React.createElement(ScreenRightsFilter,{filterUserRole:this.state.userroleList||[],selectedRecord:this.state.selectedcombo||{}//\n,onComboChange:this.onComboChange})}]// accordianfilterComponent={[\n//     {\n//         \"IDS_USERROLE\":\n//             <ScreenRightsFilter\n//                 filterUserRole={this.state.userroleList || []}\n//                 selectedRecord={this.state.selectedcombo || {}}//\n//                 onComboChange={this.onComboChange}\n//             />\n//     }\n// ]}\n,needMultiSelect:true,commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"})//  data-for=\"tooltip_list_wrap\"\n,role:\"button\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this2.props.getScreenRightsComboService(\"IDS_SCREENRIGHTS\",\"create\",_this2.props.Login.userInfo,_this2.state.selectedcombo,addId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_RELOAD\"})//   data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.reloadData();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})))// </Tooltip>\n}),/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(\"div\",{className:\"fixed_list_height\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.ScreenRights&&this.props.Login.masterData.ScreenRights.length>0&&this.props.Login.masterData.SelectedScreenRights?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"pb-4\"},/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(\"p\",{className:\"product-title-main\"},this.props.intl.formatMessage({id:\"IDS_CONTROLRIGHTSANDESIGNRIGHTS\"}))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"d-flex justify-content-end d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,role:\"button\"//    data-for=\"screenrights_wrap\"\n,onClick:function onClick(){return _this2.ConfirmDelete(deleteId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COPY\"}),hidden:this.state.userRoleControlRights.indexOf(copyId)===-1//   data-for=\"screenrights_wrap\"\n,onClick:function onClick(){return _this2.props.getCopyUseRoleScreenRights(_this2.props.intl.formatMessage({id:\"IDS_USERROLESCREENRIGHTS\"}),\"copy\",copyId,_this2.state.selectedcombo,_this2.props.Login.userInfo,_this2.props.Login.masterData,2);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy})))),/*#__PURE__*/React.createElement(Row,null,this.props.Login.userInfo.nusercode===-1?/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(AtSubCard,{className:\"d-flex justify-content-start\"},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"value\",placeholder:this.props.intl.formatMessage({id:\"IDS_SELECT\"}),value:this.state.comboitem?this.state.comboitem[\"value\"]:this.ControlButton[0],options:this.ControlButton,optionId:\"label\",optionValue:\"label\",isMandatory:false,isMulti:false,isSearchable:false,closeMenuOnSelect:true,alphabeticalSort:false,as:\"select\",onChange:function onChange(event){return _this2.onComboChange(event,\"value\");}}),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey ml-2 \",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_SAVE\"})//  data-for=\"screenrights_wrap\"\n,onClick:function onClick(){return _this2.onSaveAllControlAndEsign(_this2.state.skip,_this2.state.take);},role:\"button\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSave}),\" \"))):\"\",/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(\"span\",{headerClassName:\"text-center\"//     data-for=\"screenrights_wrap\" \n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ENABLEDISABLEGROUPING\"})},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:\"groupbyswitch\",onChange:function onChange(event){return _this2.switchGroupBy(event);},checked:this.state.selectedSwitch===transactionStatus.YES?true:false,name:\"groupbyswitch\",parentClassName:\"paddingclass\"//data-tip={\"Enable to group by screen name\"}\n// data-for=\"screenrights_wrap\"\n}))))):\"\",this.props.Login.masterData.ScreenRights&&this.props.Login.masterData.ScreenRights.length>0&&this.props.Login.masterData.SelectedScreenRights?/*#__PURE__*/React.createElement(LocalizationProvider,{language:this.props.Login.userInfo.slanguagetypecode},/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(Grid,Object.assign({sortable:true,resizable:true,reorderable:false,scrollable:\"scrollable\",onExpandChange:this.expandChange,expandField:\"expanded\",pageable:{buttonCount:4,pageSizes:this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);}),previousNext:false}//data={this.state.dataResult}\n,data:process(this.props.Login.masterData.ControlRights||[],this.state.dataState)},this.state.dataState,{selectedField:\"selected\",onDataStateChange:this.dataStateChange//  groupable={true}\n}),/*#__PURE__*/React.createElement(GridColumn,{width:\"300px\",field:\"screenname\",title:this.props.intl.formatMessage({id:\"IDS_SCREENNAME\"})//headerClassName=\"text-center\"\n//groupable={this.isGroupable(\"screenname\")}\n,cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{// className={selectedId === row[\"dataItem\"][\"screenname\"] ? 'active' : ''}\n\"data-tip\":row[\"dataItem\"][\"screenname\"]//     data-for=\"tooltip_list_wrap\"\n,style:{textAlign:'left'}},row[\"dataItem\"][\"screenname\"]);}}),/*#__PURE__*/React.createElement(GridColumn,{width:\"300px\",field:\"scontrolids\",title:this.props.intl.formatMessage({id:\"IDS_CONTROLNAME\"})//headerClassName=\"text-center\"\n,cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:'left'},\"data-tip\":row[\"dataItem\"][\"scontrolids\"]//    data-for=\"tooltip_list_wrap\"\n},row[\"dataItem\"][\"scontrolids\"]);}}),/*#__PURE__*/React.createElement(GridColumn,{width:\"250px\",field:\"nneedrights\",title:this.props.intl.formatMessage({id:\"IDS_CONTROLRIGHTS\"}),headerClassName:\"text-center\",cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedrights\"],onChange:function onChange(event){return _this2.onInputOnControlRights(event,row[\"dataItem\"],\"nneedrights\",row.dataIndex,1);},checked:row[\"dataItem\"][\"nneedrights\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nuserrolescreencode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex}));}}),/*#__PURE__*/React.createElement(GridColumn,{width:\"230px\",field:\"nneedesign\",title:this.props.intl.formatMessage({id:\"IDS_ESIGN\"}),headerClassName:\"text-center\",cell:function cell(row){return row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}},row[\"dataItem\"][\"nisesigncontrol\"]===3?/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][\"nneedesign\"],onChange:function onChange(event){return _this2.onInputOnControlRights(event,row[\"dataItem\"],\"nneedesign\",row.dataIndex,undefined);},checked:row[\"dataItem\"][\"nneedesign\"]===transactionStatus.YES?true:false,name:row[\"dataItem\"][\"nuserrolescreencode\"]+\"_\"+row.dataIndex+\"_\"+row.columnIndex,disabled:row[\"dataItem\"][\"nisesigncontrol\"]===transactionStatus.NO?true:false}):\"\");}})))):\"\")))))))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.screenName===\"IDS_SCREENRIGHTS\"?mandatoryFieldsScreenRights:mandatoryFieldsUsers,updateStore:this.props.updateStore,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.screenName===\"IDS_SCREENRIGHTS\"?/*#__PURE__*/React.createElement(AddScreenRights,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,avaliableScreen:this.props.Login.AvaliableScreen,operation:this.props.operation}):/*#__PURE__*/React.createElement(UserRoleScreenRights,{selectedRecord:this.props.Login.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChangeUserRole,operation:this.props.operation,UserRole:this.props.Login.masterData.Userrole||[],SelectedUserRole:this.state.selectedcombo})}));}// commonActions = (skip, take, testskip, testtake)=>{\n//     const addId = this.state.controlMap.has(\"AddScreenRights\") && this.state.controlMap.get(\"AddScreenRights\").ncontrolcode;\n//     return(\n//          // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\n//          <ProductList className=\"d-flex product-category float-right\">\n//          {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\n//          <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" \n//              data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} \n//              data-for=\"tooltip_list_wrap\"\n//              role=\"button\"\n//              hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\n//              onClick={() => this.props.getScreenRightsComboService(\"IDS_SCREENRIGHTS\", \"create\", this.props.Login.userInfo, this.state.selectedcombo, addId)}>\n//              <FontAwesomeIcon icon={faPlus} />\n//          </Button>\n//          <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\n//              data-tip={\"Reload\"}\n//              data-for=\"tooltip_list_wrap\"\n//              onClick={() => this.reloadData()} >\n//              <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\n//          </Button>\n//      </ProductList>\n//      // </Tooltip>\n//     )\n// }\n},{key:\"componentDidMount\",value:function componentDidMount(){if(this.parentHeight){var height=this.parentHeight.clientHeight;this.setState({firstPane:height-80,parentHeight:height});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.userrole){breadCrumbData.push({\"label\":\"IDS_USERROLE\",\"value\":this.props.Login.masterData.SelectedUserRole?this.props.Login.masterData.SelectedUserRole.suserrolename:\"NA\"});}else{breadCrumbData.push({\"label\":\"IDS_USERROLE\",\"value\":\"NA\"});}return breadCrumbData;}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){// ReactTooltip.rebuild();\nvar masterData=this.props.Login.masterData;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.selectedcombo!==previousProps.Login.selectedcombo){this.setState({selectedcombo:this.props.Login.selectedcombo});}if(this.props.Login.comboitem!==previousProps.Login.comboitem){this.setState({comboitem:this.props.Login.comboitem});}if(this.props.Login.masterData.AvaliableScreen!==previousProps.Login.masterData.AvaliableScreen||this.props.Login.masterData.SelectedUserRole!==previousProps.Login.masterData.SelectedUserRole){var skip=this.state.skip;var take=this.state.take;skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;this.setState({skip:skip,take:take});}//     if(this.props.Login.masterData.ControlRights !== previousProps.Login.masterData.ControlRights){\n//         let skip=this.state.skip;\n//         let take=this.state.take;\n//         let dataState=this.state.dataState\n//         if (this.props.Login.dataState !== previousProps.Login.dataState) {\n//             dataState = this.props.Login.dataState || this.state.dataState\n//             dataState= {skip: dataState.skip,\n//             take: dataState.take\n//             , group: [{ field: 'screenname' }]} \n//             if(this.props.Login.dataState===undefined){\n//                 dataState= {skip: 0,\n//                     take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n//                     , group: [{ field: 'screenname' }]} \n//             }\n//     }\n//     skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\n//     take = this.props.Login.take || take\n//     this.setState({ dataState , dataResult: process(this.props.Login.masterData.ControlRights || [], dataState),skip,take});\n// }\n// if(this.props.Login.masterData.ControlRights !== previousProps.Login.masterData.ControlRights){\n//     this.setState({\n//           dataResult: process(this.props.Login.masterData.ControlRights || [], this.state.dataState)\n//     })\n// }\nif(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData.ControlRightst});}if(this.props.Login.masterData.userrole!==previousProps.Login.masterData.userrole){var userrole=constructOptionList(this.props.Login.masterData.userrole||[],\"nuserrolecode\",\"suserrolename\",undefined,undefined,undefined);var userroleList=userrole.get(\"OptionList\");var selectedcombo={nuserrolecode:masterData.userrole&&masterData.userrole.length>0?{\"value\":masterData.userrole[0].nuserrolecode,\"label\":masterData.userrole[0].suserrolename}:\"\"};this.setState({selectedcombo:selectedcombo,userroleList:userroleList});}if(this.props.Login.masterData!==previousProps.Login.masterData){var filterData=this.generateBreadCrumData();// let dataState = this.state.dataState || {};\n// dataState= {...dataState, group: [{ field: 'screenname' }]} ;\nthis.setState({filterData:filterData//, dataState\n});}}},{key:\"onInputOnControlRights\",value:function onInputOnControlRights(event,rowItem,columnName,rowIndex,saveType){var selectedRecord=rowItem||{};selectedRecord[columnName]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;this.saveClick(selectedRecord,saveType,undefined);}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}},{key:\"handleClickDelete\",value:function handleClickDelete(masterData,ncontrolcode,modalName){var fieldArray=[];this.props.Login.masterData.SelectedScreenRights.map(function(item){return fieldArray.push(item.nuserrolescreencode);});var postParam={inputListName:\"ScreenRights\",selectedObject:\"SelectedScreenRights\",primaryKeyField:\"nuserrolescreencode\",primaryKeyValue:fieldArray,fetchUrl:\"screenrights/getScreenRights\",fecthInputObject:{userinfo:this.props.Login.userInfo}};modalName='openModal';var inputParam={methodUrl:\"ScreenRights\",classUrl:\"screenrights\",inputData:{\"screenrights\":this.props.Login.masterData.SelectedScreenRights,\"userinfo\":this.props.Login.userInfo,\"nuserrolecode\":this.state.selectedcombo[\"nuserrolecode\"]?this.state.selectedcombo[\"nuserrolecode\"].value:\"\"},operation:\"delete\",postParam:postParam,displayName:\"Screen Rights\"// dataState: this.state.dataState\n};if(showEsign(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode,ncontrolcode)){var _data;var updateInfo={typeName:DEFAULT_RETURN,data:(_data={loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData}},_defineProperty(_data,modalName,true),_defineProperty(_data,\"operation\",'delete'),_defineProperty(_data,\"screenName\",\"ScreenRights\"),_defineProperty(_data,\"id\",\"screenrights\"),_data)};this.props.updateStore(updateInfo);}else{this.props.crudMaster(inputParam,masterData,modalName);}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return ScreenRights;}(React.Component);export default connect(mapStateToProps,{callService:callService,reload:reload,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,filterTransactionList:filterTransactionList,updateStore:updateStore,getScreenRightsDetail:getScreenRightsDetail,getScreenRightsComboService:getScreenRightsComboService,comboChangeUserRoleScreenRights:comboChangeUserRoleScreenRights,handleClickDelete:handleClickDelete,filterColumnData:filterColumnData,getCopyUseRoleScreenRights:getCopyUseRoleScreenRights,copyScreenRights:copyScreenRights,checkUserRoleScreenRights:checkUserRoleScreenRights})(injectIntl(ScreenRights));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/credentialmanagement/ScreenRights.jsx"],"names":["React","connect","injectIntl","Row","Col","Nav","Card","Button","Grid","GridColumn","process","toast","FontAwesomeIcon","faTrashAlt","faSave","faCopy","faPlus","faSync","FormSelectSearch","CustomSwitch","SlideOutModal","Esign","ScreenRightsFilter","AddScreenRights","UserRoleScreenRights","showEsign","getControlMap","constructOptionList","callService","crudMaster","validateEsignCredential","updateStore","getScreenRightsDetail","copyScreenRights","filterTransactionList","getScreenRightsComboService","comboChangeUserRoleScreenRights","handleClickDelete","filterColumnData","getCopyUseRoleScreenRights","checkUserRoleScreenRights","reload","DEFAULT_RETURN","transactionStatus","ContentPanel","AtSubCard","AtTableWrap","TransactionListMaster","ProductList","ConfirmMessage","PerfectScrollbar","SplitterLayout","BreadcrumbComponent","LocalizationProvider","mapStateToProps","state","Login","ScreenRights","props","dataStateChange","event","setState","dataResult","masterData","ControlRights","dataState","expandChange","isExpanded","dataItem","expanded","undefined","aggregates","paneSizeChange","d","splitChangeWidthPercentage","switchGroupBy","selectedSwitch","target","checked","YES","NO","group","field","skip","take","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","selectedcombo","userInfo","warn","handlePageChange","e","validateEsign","inputParam","inputData","sreason","selectedRecord","nreasoncode","value","spredefinedreason","label","password","screenData","closeModal","loadEsign","openModal","operation","selectedId","onComboChange","comboData","fieldName","searchRef","current","comboitem","availableDatas","nformcode","map","push","item","onComboChangeUserRole","onInputOnChange","type","name","ACTIVE","DEACTIVE","saveClick","saveType","formRef","methodUrl","postParam","inputListName","selectedObject","primaryKeyField","SelectedScreenRights","classUrl","displayName","onSaveClick","screenName","userRoleControlRights","ncontrolCode","length","ConfirmComponent","copyAlertSave","onSaveAllControlAndEsign","ControlButton","reloadData","SelectedUserRole","searchedData","nuserrolecode","settings","parseInt","searchFieldList","masterStatus","error","isOpen","ScreenRightsData","userRoleData","userroleList","SelectedScreenrights","selectedcomboUserRole","ConfirmDialogScreen","controlMap","Map","showAccordian","columnName","rowIndex","createRef","addId","has","get","ncontrolcode","copyId","filterParam","fetchUrl","userinfo","fecthInputObject","changeList","isSingleSelect","mandatoryFieldsScreenRights","mandatoryFieldsUsers","breadCrumbData","filterData","parentHeight","indexOf","nusercode","slanguagetypecode","buttonCount","pageSizes","split","setting","previousNext","row","rowType","textAlign","onInputOnControlRights","dataIndex","columnIndex","AvaliableScreen","Userrole","height","clientHeight","firstPane","userrole","suserrolename","previousProps","Object","values","ControlRightst","generateBreadCrumData","rowItem","modalName","fieldArray","nuserrolescreencode","primaryKeyValue","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, Card, Button } from 'react-bootstrap';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faSave, faCopy, faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport ScreenRightsFilter from './ScreenRightsFilter';\r\nimport AddScreenRights from './AddScreenRights';\r\nimport UserRoleScreenRights from './UserRoleScreenRights';\r\nimport { showEsign, getControlMap, constructOptionList } from '../../components/CommonScript';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getScreenRightsDetail, copyScreenRights, filterTransactionList,\r\n    getScreenRightsComboService, comboChangeUserRoleScreenRights, handleClickDelete, filterColumnData, getCopyUseRoleScreenRights, checkUserRoleScreenRights, reload\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { ContentPanel, AtSubCard } from '../../components/App.styles';\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport TransactionListMaster from '../../components/TransactionListMaster';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport {  LocalizationProvider } from '@progress/kendo-react-intl';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass ScreenRights extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n            //, group: [{ field: 'screenname' }]\r\n        };\r\n        this.searchFieldList = [\"sdisplayname\"]\r\n        this.state = {\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            isOpen: false,\r\n            ScreenRightsData: [], userRoleData: [],\r\n            availableDatas: [],\r\n            selectedRecord: {},\r\n            userroleList: [],\r\n            operation: \"\",\r\n            comboitem: undefined,\r\n            screenName: undefined,\r\n            SelectedScreenrights: undefined,\r\n            selectedcombo: undefined, selectedcomboUserRole: undefined,\r\n            userRoleControlRights: [],\r\n            ControlRights: undefined,\r\n            ConfirmDialogScreen: false,\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            dataResult: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            dataState: dataState,\r\n            columnName: '',\r\n             rowIndex: 0, \r\n             data: [], \r\n             splitChangeWidthPercentage: 30,\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.ControlButton = [{ value: 1, label: this.props.intl.formatMessage({ id: \"IDS_ENABLEALLCONTROLRIGHTS\" }) },\r\n        { value: 2, label: this.props.intl.formatMessage({ id: \"IDS_DISABLEALLCONTROLRIGHTS\" }) },\r\n        { value: 3, label: this.props.intl.formatMessage({ id: \"IDS_ENABLEALLESIGNRIGHTS\" }) },\r\n        { value: 4, label: this.props.intl.formatMessage({ id: \"IDS_DISABLEALLESIGNRIGHTS\" }) }\r\n        ];\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    dataStateChange = (event) => {\r\n       // if (event.dataState.group.length === 1 && event.dataState.group[0].field === 'screenname')\r\n       // {\r\n            this.setState({\r\n                dataResult: process(this.props.Login.masterData.ControlRights || [], event.dataState),\r\n                dataState: event.dataState\r\n            });\r\n        //}\r\n    }\r\n\r\n\r\n    expandChange = event => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined\r\n                ? event.dataItem.aggregates\r\n                : event.dataItem.expanded;\r\n        event.dataItem.expanded = !isExpanded;\r\n        this.setState({ ...this.state });\r\n        //this.setState({ ...this.state.dataState });\r\n    };\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    render() {\r\n\r\n       // console.log(\"master:\", this.props.Login.masterData, this.state.dataResult)\r\n        const searchedData = this.props.Login.masterData.searchedData \r\n        const ScreenRights = this.props.Login.masterData.ScreenRights || [];\r\n        const addId = this.state.controlMap.has(\"AddScreenRights\") && this.state.controlMap.get(\"AddScreenRights\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteScreenRights\") && this.state.controlMap.get(\"DeleteScreenRights\").ncontrolcode;\r\n        const copyId = this.state.controlMap.has(\"CopyScreenRights\") && this.state.controlMap.get(\"CopyScreenRights\").ncontrolcode;\r\n        const filterParam = {\r\n            inputListName: \"ScreenRights\",\r\n            selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nuserrolescreencode\",\r\n            fetchUrl: \"screenrights/getSearchScreenRights\",\r\n            userinfo: this.props.Login.userInfo,\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList, changeList: [], isSingleSelect: false\r\n        };\r\n\r\n        const mandatoryFieldsScreenRights = [\r\n            { \"mandatory\": true, \"idsName\": \"IDS_SCREENRIGHTS\", \"dataField\": \"nformcode\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n\r\n        const mandatoryFieldsUsers = [{ \"mandatory\": true, \"idsName\": \"IDS_USERROLE\", \"dataField\": \"nuserrole\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n        ];\r\n        // let screenlen = searchedData ? searchedData.length : ScreenRights.length\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\"/> */}\r\n                <div className=\"client-listing-wrap mtop-4 screen-height-window\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        // <Affix top={64}>\r\n                        <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        // </Affix> \r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters>\r\n                        <Col md={12} className=\"parent-port-height sticky_head_parent\" ref={(parentHeight) => { this.parentHeight = parentHeight }}>\r\n                            <SplitterLayout borderColor=\"#999\"\r\n                             percentage={true} primaryIndex={1}\r\n                                    secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                                    onSecondaryPaneSizeChange={this.paneSizeChange}\r\n                                    primaryMinSize={40}\r\n                                    secondaryMinSize={20}\r\n                              >\r\n                                <TransactionListMaster\r\n                                    splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                    masterList={searchedData || ScreenRights || []}\r\n                                    selectedMaster={this.props.Login.masterData.SelectedScreenRights}\r\n                                    primaryKeyField=\"nuserrolescreencode\"\r\n                                    getMasterDetail={this.props.getScreenRightsDetail}\r\n                                    inputParam={{ userinfo: this.props.Login.userInfo,\r\n                                         masterData: this.props.Login.masterData,\r\n                                          dataState: this.state.dataState,skip:this.state.skip,take:this.state.take }}\r\n                                    additionalParam={['napprovalversioncode']}\r\n                                    mainField=\"sdisplayname\"\r\n                                    selectedListName=\"SelectedScreenRights\"\r\n                                    filterColumnData={this.props.filterTransactionList}\r\n                                    searchListName=\"searchedData\"\r\n                                    searchRef={this.searchRef}\r\n                                    filterParam={filterParam}\r\n                                    objectName=\"screenrights\"\r\n                                    listName=\"IDS_SCREENRIGHTS\"\r\n                                    hideQuickSearch={true}\r\n                                    skip={this.state.skip}\r\n                                    take={this.state.take}   \r\n                                    handlePageChange={this.handlePageChange}\r\n                                    hidePaging={false}\r\n                                    needFilter={true}\r\n                                    needAccordianFilter={false}\r\n                                    childTabsKey={[\"ControlRights\"]}\r\n                                    openFilter={this.openFilter}\r\n                                    closeFilter={this.closeFilter}\r\n                                    onFilterSubmit={this.onFilterSubmit}\r\n                                    filterComponent={[\r\n                                        {\r\n                                            \"IDS_FILTER\":\r\n                                                <ScreenRightsFilter\r\n                                                    filterUserRole={this.state.userroleList || []}\r\n                                                    selectedRecord={this.state.selectedcombo || {}}//\r\n                                                    onComboChange={this.onComboChange}\r\n                                                />\r\n                                        }\r\n                                    ]}\r\n                                    // accordianfilterComponent={[\r\n                                    //     {\r\n                                    //         \"IDS_USERROLE\":\r\n                                    //             <ScreenRightsFilter\r\n                                    //                 filterUserRole={this.state.userroleList || []}\r\n                                    //                 selectedRecord={this.state.selectedcombo || {}}//\r\n                                    //                 onComboChange={this.onComboChange}\r\n                                    //             />\r\n                                    //     }\r\n                                    // ]}\r\n                                    needMultiSelect={true}\r\n                                    commonActions={\r\n                                          // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                            <ProductList className=\"d-flex product-category float-right\">\r\n                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" \r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} \r\n                                              //  data-for=\"tooltip_list_wrap\"\r\n                                                role=\"button\"\r\n                                                hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                                onClick={() => this.props.getScreenRightsComboService(\"IDS_SCREENRIGHTS\", \"create\", this.props.Login.userInfo, this.state.selectedcombo, addId)}>\r\n                                                <FontAwesomeIcon icon={faPlus} />\r\n                                            </Button>\r\n                                            <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELOAD\" })} \r\n                                             //   data-for=\"tooltip_list_wrap\"\r\n                                                onClick={() => this.reloadData()} >\r\n                                                <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                            </Button>\r\n                                        </ProductList>\r\n                                        // </Tooltip>\r\n                                    }\r\n                                />\r\n                                {/* <PerfectScrollbar> */}\r\n                                {/* <SplitterLayout vertical borderColor=\"#999\" percentage={true} primaryIndex={1} secondaryInitialSize={400} customClassName=\"fixed_list_height\"> */}\r\n                                {/* <Col md={9}> */}\r\n                                <PerfectScrollbar>\r\n                                    <div className=\"fixed_list_height\">\r\n                                        <Row >\r\n                                            <Col md={12}>\r\n                                                <ContentPanel className=\"panel-main-content\">\r\n                                                    <Card className=\"border-0\">\r\n                                                        {this.props.Login.masterData.ScreenRights && this.props.Login.masterData.ScreenRights.length > 0 && this.props.Login.masterData.SelectedScreenRights ?\r\n                                                            <>\r\n                                                            \r\n                                                                <Card.Header className=\"pb-4\" >\r\n                                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"screenrights_wrap\"/> */}\r\n                                                                    <Card.Title>\r\n                                                                        <p className=\"product-title-main\">\r\n                                                                            {this.props.intl.formatMessage({ id: \"IDS_CONTROLRIGHTSANDESIGNRIGHTS\" })}\r\n                                                                        </p>\r\n                                                                    </Card.Title>\r\n                                                                    <ContentPanel className=\"d-flex justify-content-end d-inline\">\r\n                                                                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" \r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1} \r\n                                                                            role=\"button\"\r\n                                                                        //    data-for=\"screenrights_wrap\"\r\n                                                                            onClick={() => this.ConfirmDelete(deleteId)}>\r\n                                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                            {/* <ConfirmDialog\r\n                                                                                    name=\"deleteMessage\"\r\n                                                                                    message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                                    doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                                    doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                                    icon={faTrashAlt}\r\n                                                                                    //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                    handleClickDelete={() => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\")}\r\n                                                                                /> */}\r\n                                                                        </Nav.Link>\r\n                                                                        <Nav.Link className=\"btn btn-circle outline-grey mr-2\" \r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })} \r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                         //   data-for=\"screenrights_wrap\"\r\n                                                                            onClick={() => this.props.getCopyUseRoleScreenRights(this.props.intl.formatMessage({ id: \"IDS_USERROLESCREENRIGHTS\" }), \"copy\", copyId, this.state.selectedcombo, this.props.Login.userInfo, this.props.Login.masterData, 2)}>\r\n                                                                            <FontAwesomeIcon icon={faCopy} />\r\n                                                                        </Nav.Link>\r\n                                                                        {/* </Tooltip> */}\r\n                                                                    </ContentPanel>\r\n                                                                </Card.Header>\r\n                                                                <Row>\r\n                                                                    {this.props.Login.userInfo.nusercode === -1 ?\r\n                                                                    <Col md='6'>\r\n                                                                        <AtSubCard className=\"d-flex justify-content-start\">\r\n                                                                            {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                                            <FormSelectSearch\r\n                                                                                name={\"value\"}\r\n                                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECT\" })}\r\n                                                                                value={this.state.comboitem ? this.state.comboitem[\"value\"] : this.ControlButton[0]}\r\n                                                                                options={this.ControlButton}\r\n                                                                                optionId=\"label\"\r\n                                                                                optionValue=\"label\"\r\n                                                                                isMandatory={false}\r\n                                                                                isMulti={false}\r\n                                                                                isSearchable={false}\r\n                                                                                closeMenuOnSelect={true}\r\n                                                                                alphabeticalSort={false}\r\n                                                                                as={\"select\"}\r\n                                                                                onChange={(event) => this.onComboChange(event, \"value\")}\r\n                                                                            />\r\n                                                                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                            <Nav.Link className=\"btn btn-circle outline-grey ml-2 \"\r\n                                                                                 data-tip={this.props.intl.formatMessage({ id: \"IDS_SAVE\" })} \r\n                                                                               //  data-for=\"screenrights_wrap\"\r\n                                                                                 onClick={() => this.onSaveAllControlAndEsign(this.state.skip, this.state.take)}\r\n                                                                                 role=\"button\">\r\n                                                                                <FontAwesomeIcon icon={faSave} /> { }\r\n                                                                            </Nav.Link>\r\n                                                                            {/* </Tooltip> */}\r\n                                                                        </AtSubCard>\r\n                                                                    </Col>:\"\"}\r\n                                                                    {/* <Col md='6' >\r\n                                                                        <Row>\r\n                                                                            <Col md={12}>\r\n                                                                                <strong>\r\n                                                                                    {this.props.intl.formatMessage({ id: \"Enable/Disable Grouping\" })}\r\n                                                                                </strong>\r\n                                                                            </Col> */}\r\n                                                                            <Col>\r\n                                                                               <span    headerClassName=\"text-center\" \r\n                                                                                   //     data-for=\"screenrights_wrap\" \r\n                                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ENABLEDISABLEGROUPING\" })}>\r\n                                                                            \r\n                                                                                    <CustomSwitch   type=\"switch\" \r\n                                                                                            id={\"groupbyswitch\"}\r\n                                                                                            onChange={(event) => this.switchGroupBy(event)}\r\n                                                                                            checked={this.state.selectedSwitch === transactionStatus.YES ? true : false}\r\n                                                                                            name={\"groupbyswitch\"} \r\n                                                                                            parentClassName= {\"paddingclass\"}\r\n                                                                                            //data-tip={\"Enable to group by screen name\"}\r\n                                                                                           // data-for=\"screenrights_wrap\"\r\n                                                                                            />\r\n                                                                                </span>\r\n                                                                            </Col>\r\n                                                                        {/* </Row>\r\n                                                                    </Col>*/}\r\n                                                                </Row> \r\n                                                            </> :\r\n                                                            \"\"}\r\n                                                        {this.props.Login.masterData.ScreenRights && this.props.Login.masterData.ScreenRights.length > 0 && this.props.Login.masterData.SelectedScreenRights ?\r\n                                                            <LocalizationProvider language={this.props.Login.userInfo.slanguagetypecode}>\r\n                                                          <AtTableWrap className=\"at-list-table\">\r\n                                                                <Grid\r\n                                                                    sortable\r\n                                                                    resizable\r\n                                                                    reorderable={false}\r\n                                                                    scrollable={\"scrollable\"}\r\n                                                                    onExpandChange={this.expandChange}\r\n                                                                    expandField=\"expanded\"\r\n                                                                    pageable={{ buttonCount: 4, pageSizes: this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting)), previousNext: false}}\r\n                                                                    //data={this.state.dataResult}\r\n                                                                    data={process(this.props.Login.masterData.ControlRights || [], this.state.dataState)}\r\n                                                                    {...this.state.dataState}\r\n                                                                    selectedField=\"selected\"\r\n                                                                    onDataStateChange={this.dataStateChange}\r\n                                                                  //  groupable={true}\r\n                                                                >\r\n                                                                     <GridColumn width=\"300px\"\r\n                                                                        field=\"screenname\"\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_SCREENNAME\" })}\r\n                                                                        //headerClassName=\"text-center\"\r\n                                                                        //groupable={this.isGroupable(\"screenname\")}\r\n                                                                        cell={(row) => (\r\n                                                                            row.rowType === \"groupHeader\" ? null :\r\n                                                                           \r\n                                                                                <td \r\n                                                                                   // className={selectedId === row[\"dataItem\"][\"screenname\"] ? 'active' : ''}\r\n                                                                                    data-tip={row[\"dataItem\"][\"screenname\"]}\r\n                                                                               //     data-for=\"tooltip_list_wrap\"\r\n                                                                                    style={{textAlign: 'left' }}>\r\n                                                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                                                    {row[\"dataItem\"][\"screenname\"]}\r\n                                                                                </td>)}\r\n                                                                    />\r\n                                                                    <GridColumn width=\"300px\"\r\n                                                                        field=\"scontrolids\"\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_CONTROLNAME\" })}\r\n                                                                        //headerClassName=\"text-center\"\r\n                                                                        cell={(row) => (\r\n                                                                            row.rowType === \"groupHeader\" ? null :\r\n                                                                                <td \r\n                                                                                    style={{textAlign: 'left' }}\r\n                                                                                    data-tip={row[\"dataItem\"][\"scontrolids\"]} \r\n                                                                                //    data-for=\"tooltip_list_wrap\"\r\n                                                                                    >\r\n                                                                                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                                                                    {row[\"dataItem\"][\"scontrolids\"]}\r\n                                                                                </td>)}\r\n                                                                    />\r\n\r\n                                                                    <GridColumn width=\"250px\"\r\n                                                                        field={\"nneedrights\"}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_CONTROLRIGHTS\" })}\r\n                                                                        headerClassName=\"text-center\"\r\n                                                                        cell={(row) => (\r\n                                                                            row.rowType === \"groupHeader\" ? null :\r\n                                                                                <td style={{ textAlign: \"center\" }} >\r\n                                                                                    <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedrights\"]}\r\n                                                                                        onChange={(event) => this.onInputOnControlRights(event, row[\"dataItem\"], \"nneedrights\", row.dataIndex, 1)}\r\n                                                                                        checked={row[\"dataItem\"][\"nneedrights\"] === transactionStatus.YES ? true : false}\r\n                                                                                        name={row[\"dataItem\"][\"nuserrolescreencode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                                                </td>)}\r\n                                                                    />\r\n                                                                    <GridColumn width=\"230px\"\r\n                                                                        field={\"nneedesign\"}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_ESIGN\" })}\r\n                                                                        headerClassName=\"text-center\"\r\n                                                                        cell={(row) => (\r\n                                                                            row.rowType === \"groupHeader\" ? null :\r\n                                                                                <td style={{ textAlign: \"center\" }} >\r\n                                                                                    {row[\"dataItem\"][\"nisesigncontrol\"] === 3 ?\r\n                                                                                        <CustomSwitch type=\"switch\" id={row[\"dataItem\"][\"nneedesign\"]}\r\n                                                                                            onChange={(event) => this.onInputOnControlRights(event, row[\"dataItem\"], \"nneedesign\", row.dataIndex, undefined)}\r\n                                                                                            checked={row[\"dataItem\"][\"nneedesign\"] === transactionStatus.YES ? true : false}\r\n                                                                                            name={row[\"dataItem\"][\"nuserrolescreencode\"] + \"_\" + row.dataIndex + \"_\" + row.columnIndex}\r\n                                                                                            disabled={row[\"dataItem\"][\"nisesigncontrol\"] === transactionStatus.NO ? true : false}\r\n                                                                                        /> :\r\n                                                                                        \"\"\r\n                                                                                    }\r\n                                                                                </td>\r\n                                                                        )\r\n                                                                        }\r\n                                                                    />\r\n                                                                </Grid>\r\n                                                            </AtTableWrap>\r\n                                                            </LocalizationProvider>\r\n                                                            : \"\"}\r\n                                                    </Card>\r\n                                                </ContentPanel>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </div>\r\n                                </PerfectScrollbar>\r\n                                {/* </SplitterLayout> */}\r\n                                {/* </PerfectScrollbar> */}\r\n                            </SplitterLayout >\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {/* End of get display*/}\r\n                {}\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === \"IDS_SCREENRIGHTS\" ? mandatoryFieldsScreenRights : mandatoryFieldsUsers}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.props.Login.screenName === \"IDS_SCREENRIGHTS\" ?\r\n                                <AddScreenRights selectedRecord={this.state.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    avaliableScreen={this.props.Login.AvaliableScreen}\r\n                                    operation={this.props.operation}\r\n                                />\r\n                                :\r\n                                <UserRoleScreenRights selectedRecord={this.props.Login.selectedRecord || {}}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChangeUserRole}\r\n                                    operation={this.props.operation}\r\n                                    UserRole={this.props.Login.masterData.Userrole || []}\r\n                                    SelectedUserRole={this.state.selectedcombo}\r\n                                />\r\n                        }\r\n                    />\r\n                }\r\n                {}\r\n            </>\r\n        );\r\n    }\r\n\r\n    // commonActions = (skip, take, testskip, testtake)=>{\r\n    //     const addId = this.state.controlMap.has(\"AddScreenRights\") && this.state.controlMap.get(\"AddScreenRights\").ncontrolcode;\r\n      \r\n    //     return(\r\n    //          // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n    //          <ProductList className=\"d-flex product-category float-right\">\r\n    //          {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n    //          <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" \r\n    //              data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })} \r\n    //              data-for=\"tooltip_list_wrap\"\r\n    //              role=\"button\"\r\n    //              hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n    //              onClick={() => this.props.getScreenRightsComboService(\"IDS_SCREENRIGHTS\", \"create\", this.props.Login.userInfo, this.state.selectedcombo, addId)}>\r\n    //              <FontAwesomeIcon icon={faPlus} />\r\n    //          </Button>\r\n    //          <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n    //              data-tip={\"Reload\"}\r\n    //              data-for=\"tooltip_list_wrap\"\r\n    //              onClick={() => this.reloadData()} >\r\n    //              <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n    //          </Button>\r\n    //      </ProductList>\r\n    //      // </Tooltip>\r\n    //     )\r\n    // }\r\n\r\n    switchGroupBy = (event)=>{\r\n       \r\n        const selectedSwitch = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        let dataState = this.state.dataState || {};\r\n         if (selectedSwitch === transactionStatus.YES){\r\n            dataState= {...dataState, group: [{ field: 'screenname' }]} ;\r\n         }\r\n        else{\r\n            dataState= {skip: dataState.skip,  take: dataState.take} \r\n        }\r\n        this.setState({selectedSwitch, dataState});\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        // this.reloadData(this.state.selectedRecord, true);\r\n        if (this.state.selectedcombo[\"nuserrolecode\"]) {\r\n            this.props.comboChangeUserRoleScreenRights(this.state.selectedcombo, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height\r\n            });\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.userrole) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_USERROLE\",\r\n                    \"value\": this.props.Login.masterData.SelectedUserRole ? this.props.Login.masterData.SelectedUserRole.suserrolename : \"NA\"\r\n\r\n                },\r\n            );\r\n        } else {\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_USERROLE\",\r\n                    \"value\": \"NA\"\r\n\r\n                },\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) { \r\n        // ReactTooltip.rebuild();\r\n        const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n\r\n        }\r\n        if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\r\n            this.setState({ selectedcombo: this.props.Login.selectedcombo });\r\n        }\r\n\r\n        if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\r\n            this.setState({ comboitem: this.props.Login.comboitem });\r\n        }\r\n        if(this.props.Login.masterData.AvaliableScreen !== previousProps.Login.masterData.AvaliableScreen\r\n            || this.props.Login.masterData.SelectedUserRole !== previousProps.Login.masterData.SelectedUserRole){\r\n            let skip=this.state.skip;\r\n            let take=this.state.take;\r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip;\r\n            take = this.props.Login.take || take;        \r\n\r\n            this.setState({ skip,take});          \r\n        }\r\n   \r\n\r\n    //     if(this.props.Login.masterData.ControlRights !== previousProps.Login.masterData.ControlRights){\r\n\r\n    //         let skip=this.state.skip;\r\n    //         let take=this.state.take;\r\n\r\n    //         let dataState=this.state.dataState\r\n    //         if (this.props.Login.dataState !== previousProps.Login.dataState) {\r\n               \r\n    //             dataState = this.props.Login.dataState || this.state.dataState\r\n    //             dataState= {skip: dataState.skip,\r\n    //             take: dataState.take\r\n    //             , group: [{ field: 'screenname' }]} \r\n    //             if(this.props.Login.dataState===undefined){\r\n    //                 dataState= {skip: 0,\r\n    //                     take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n    //                     , group: [{ field: 'screenname' }]} \r\n    //             }\r\n            \r\n    //     }\r\n    //     skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n    //     take = this.props.Login.take || take\r\n\r\n    //     this.setState({ dataState , dataResult: process(this.props.Login.masterData.ControlRights || [], dataState),skip,take});\r\n    // }\r\n        // if(this.props.Login.masterData.ControlRights !== previousProps.Login.masterData.ControlRights){\r\n        //     this.setState({\r\n        //           dataResult: process(this.props.Login.masterData.ControlRights || [], this.state.dataState)\r\n        //     })\r\n        // }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({\r\n                userRoleControlRights, controlMap, data: this.props.Login.masterData.ControlRightst\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.userrole !== previousProps.Login.masterData.userrole) {\r\n            const userrole = constructOptionList(this.props.Login.masterData.userrole || [], \"nuserrolecode\",\r\n                \"suserrolename\", undefined, undefined, undefined);\r\n            const userroleList = userrole.get(\"OptionList\");\r\n\r\n            const selectedcombo = {\r\n                nuserrolecode: masterData.userrole&&masterData.userrole.length > 0 ? {\r\n                    \"value\": masterData.userrole[0].nuserrolecode,\r\n                    \"label\": masterData.userrole[0].suserrolename\r\n                } : \"\"\r\n            }\r\n            this.setState({\r\n                selectedcombo: selectedcombo,\r\n                userroleList: userroleList\r\n            });\r\n        }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const filterData = this.generateBreadCrumData();\r\n\r\n            // let dataState = this.state.dataState || {};\r\n            // dataState= {...dataState, group: [{ field: 'screenname' }]} ;\r\n\r\n            this.setState({ filterData//, dataState\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n        //setTimeout(() => { this._scrollBarRef.updateScroll() })\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason']=\"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            if (fieldName === \"nuserrolecode\") {\r\n                const selectedcombo = this.state.selectedcombo || {};\r\n                selectedcombo[fieldName] = comboData;\r\n                this.searchRef.current.value = \"\";\r\n                this.setState({ selectedcombo });\r\n                // masterData[\"ControlRights\"]=[]\r\n                // this.props.comboChangeUserRoleScreenRights(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedcombo);\r\n            }\r\n            else if (fieldName === \"value\") {\r\n                const comboitem = this.state.comboitem || {};\r\n                comboitem[fieldName] = comboData;\r\n                this.setState({ comboitem });\r\n            }\r\n            else if (fieldName === \"nformcode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nformcode\"] = comboData;\r\n                let availableDatas = [];\r\n                this.state.selectedRecord.nformcode.map(data => {\r\n                    return availableDatas.push(data.item);\r\n                });\r\n                this.setState({ selectedRecord, availableDatas });\r\n            }\r\n        }\r\n    }\r\n\r\n    onComboChangeUserRole = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            const selectedRecord = this.state.selectedRecord || {}; //this.state.selectedRecord || {};\r\n            selectedRecord[\"nuserrole\"] = comboData;\r\n            if (fieldName === \"nuserrole\") {\r\n                this.props.checkUserRoleScreenRights(comboData.value, this.props.Login.masterData, this.props.Login.userInfo, selectedRecord);\r\n            }\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnControlRights(event, rowItem, columnName, rowIndex, saveType) {\r\n        const selectedRecord = rowItem || {};\r\n        selectedRecord[columnName] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        this.saveClick(selectedRecord, saveType, undefined);\r\n    }\r\n\r\n    saveClick = (selectedRecord, saveType, formRef) => {\r\n        let operation = \"update\";\r\n        let methodUrl = \"\";\r\n        let inputData = [];\r\n        let postParam = {\r\n            inputListName: \"ScreenRights\", selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nuserrolescreencode\"\r\n        }\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights;\r\n        inputData[\"nflag\"] = transactionStatus.ACTIVE;\r\n        inputData[\"screenrights\"] = selectedRecord;\r\n        if (saveType === 1) {\r\n            inputData[\"nneedrights\"] = selectedRecord[\"nneedrights\"];\r\n            inputData[\"nneedesign\"] = null;\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else {\r\n            inputData[\"nneedesign\"] = selectedRecord[\"nneedesign\"];\r\n            methodUrl = \"Esign\";\r\n        }\r\n        const inputParam = {\r\n            classUrl: \"screenrights\",\r\n            methodUrl: methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType, formRef, searchRef: this.searchRef, postParam,dataState: this.state.dataState\r\n        }\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        inputData[\"screenrights\"] = this.state.availableDatas;\r\n        inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\r\n        inputData[\"userrolecode\"] = this.state.selectedRecord[\"nuserrole\"] ? this.state.selectedRecord[\"nuserrole\"].value : \"\";\r\n        inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"ScreenRights\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n            searchRef: this.searchRef,\r\n            dataState: this.state.dataState\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (this.props.Login.screenName === \"IDS_SCREENRIGHTS\") {\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        } else {\r\n            if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\r\n                this.ConfirmComponent()\r\n            }\r\n            else {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.copyScreenRights(this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\", this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\", this.props.Login.userInfo, this.props.Login.masterData);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    copyAlertSave = () => {\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        inputData[\"screenrights\"] = this.state.availableDatas;\r\n        inputData[\"nuserrolecode\"] = this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\";\r\n        inputData[\"userrolecode\"] = this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\";\r\n        inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"ScreenRights\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.copyScreenRights(this.state.selectedRecord ? this.state.selectedRecord[\"nuserrole\"].value : \"\", this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\", this.props.Login.userInfo, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n    onSaveAllControlAndEsign = (skip,take,saveType, formRef) => {\r\n        let value = this.state.comboitem ? this.state.comboitem.value.value : this.ControlButton[0].value\r\n        let operation = \"\";\r\n        let methodUrl = \"\";\r\n        let inputData = [];\r\n        let postParam = undefined;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n       // inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights.slice(skip, skip + take);\r\n        inputData[\"selectedscreenrights\"] = this.props.Login.masterData.SelectedScreenRights;\r\n        inputData[\"nflag\"] = transactionStatus.DEACTIVE;\r\n        postParam = {\r\n            inputListName: \"ScreenRights\", selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nuserrolescreencode\"\r\n        }\r\n        if (value === 1) {\r\n            inputData[\"nneedrights\"] = transactionStatus.YES;\r\n            inputData[\"nneedesign\"] = null;\r\n            operation = \"update\";\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else if (value === 2) {\r\n            inputData[\"nneedrights\"] = transactionStatus.NO;\r\n            inputData[\"nneedesign\"] = null;\r\n            operation = \"update\";\r\n            methodUrl = \"ControlRights\";\r\n        }\r\n        else if (value === 3) {\r\n            inputData[\"nneedesign\"] = transactionStatus.YES;\r\n            operation = \"update\";\r\n            methodUrl = \"Esign\";\r\n        }\r\n        else if (value === 4) {\r\n            inputData[\"nneedesign\"] = transactionStatus.NO;\r\n            operation = \"update\";\r\n            methodUrl = \"Esign\";\r\n        }\r\n\r\n        const inputParam = {\r\n            classUrl: \"screenrights\",\r\n            methodUrl: methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: operation, saveType,\r\n             formRef, postParam, \r\n             searchRef: this.searchRef, \r\n             selectedcombo: this.props.Login.selectedcombo,\r\n        }\r\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n    }\r\n\r\n    //ALPD-1545\r\n    ConfirmComponent = () => {\r\n        this.confirmMessage.confirm(\"confirmation\", this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" }), this.props.intl.formatMessage({ id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\" }),\r\n        this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }), () => this.copyAlertSave());\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    handleClickDelete(masterData, ncontrolcode, modalName) {\r\n        const fieldArray = [];\r\n        this.props.Login.masterData.SelectedScreenRights.map(item => fieldArray.push(item.nuserrolescreencode));\r\n        let postParam = {\r\n            inputListName: \"ScreenRights\", selectedObject: \"SelectedScreenRights\",\r\n            primaryKeyField: \"nuserrolescreencode\",\r\n            primaryKeyValue: fieldArray,\r\n            fetchUrl: \"screenrights/getScreenRights\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        modalName = 'openModal'\r\n\r\n        const inputParam = {\r\n            methodUrl: \"ScreenRights\",\r\n            classUrl: \"screenrights\",\r\n            inputData: { \"screenrights\": this.props.Login.masterData.SelectedScreenRights, \"userinfo\": this.props.Login.userInfo, \"nuserrolecode\": this.state.selectedcombo[\"nuserrolecode\"] ? this.state.selectedcombo[\"nuserrolecode\"].value : \"\" },\r\n            operation: \"delete\", postParam,\r\n            displayName: \"Screen Rights\",\r\n           // dataState: this.state.dataState\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, [modalName]: true,\r\n                    operation: 'delete', screenName: \"ScreenRights\", id: \"screenrights\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, modalName);\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        if (this.props.Login.masterData.SelectedUserRole) {\r\n            let comboitem = {}\r\n            //let selectedcombo= this.state.selectedcombo;\r\n            comboitem[\"value\"] = this.ControlButton[0];\r\n            this.searchRef.current.value = \"\";\r\n            this.props.Login.masterData.searchedData= undefined;\r\n            const inputParam = {\r\n                inputData: { \"userinfo\": this.props.Login.userInfo },\r\n                classUrl: \"screenrights\",\r\n                methodUrl: \"ScreenRights\",\r\n                displayName: \"Screen Rights\",\r\n                userInfo: this.props.Login.userInfo,\r\n                comboitem,\r\n                nuserrolecode: this.props.Login.masterData.SelectedUserRole,\r\n                masterData: this.props.Login.masterData,\r\n                skip:this.state.skip,\r\n                take:this.state.take\r\n\r\n            };\r\n            this.props.reload(inputParam);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }))\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, reload, crudMaster, validateEsignCredential, filterTransactionList,\r\n    updateStore, getScreenRightsDetail, getScreenRightsComboService, comboChangeUserRoleScreenRights, handleClickDelete, filterColumnData, getCopyUseRoleScreenRights, copyScreenRights, checkUserRoleScreenRights\r\n})(injectIntl(ScreenRights));\r\n\r\n"]},"metadata":{},"sourceType":"module"}