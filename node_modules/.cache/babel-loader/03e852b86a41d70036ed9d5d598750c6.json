{"ast":null,"code":"import React from'react';import{Row,Col,Card}from\"react-bootstrap\";import{injectIntl}from'react-intl';import FormInput from'../../components/form-input/form-input.component';import{ReadOnlyText}from'../../components/App.styles';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';var EditQuotationTestPricing=function EditQuotationTestPricing(props){console.log(\"props.selected:\",props.selectedRecord);return Object.keys(props.selectedRecord).length>0?props.selectedRecord.map(function(item,index){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,{className:\"at-tabs mb-3\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,{className:\"mb-4 card-header\",Style:\"border-bottom: 0px;\"},/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(ReadOnlyText,null,item.stestsynonym)),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(ReadOnlyText,null,item.smethodname))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_DISCOUNTBAND\"}),isSearchable:true,name:\"ndiscountbandcode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,isClearable:false,options:props.DiscountBand//      value={{label:item['sdiscountbandname'],value:item['ndiscountbandcode']} || -1}\n,value:item.ndiscountbandcode.label!==\"\"?item.ndiscountbandcode:\"\"//      value={item.ndiscountbandcode || \"\"}\n//      defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\n,defaultValue:item,onChange:function onChange(event){return props.onComboChange(event,\"ndiscountbandcode\",5,item.nquotationtestcode);},closeMenuOnSelect:true// onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\n})),/*#__PURE__*/React.createElement(Col,{md:3},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_AMOUNT\"}),name:\"namount\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"})// value={props.selectedRecord.namount ? props.selectedRecord.namount : 0}\n,value:item.namount?item.namount:0,isMandatory:false,isDisabled:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormNumericInput,{label:props.intl.formatMessage({id:\"IDS_COST\"}),type:\"number\",value:item.ncost||0,placeholder:props.intl.formatMessage({id:\"IDS_COST\"}),strict:true,min:0,maxLength:10// onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\n,onChange:function onChange(event){return props.onNumericInputChange(event,\"ncost\",item.nquotationtestcode);},onBlur:function onBlur(){return props.onnetAmountEvent(item.nquotationtestcode);},noStyle:true,precision:2,className:\"form-control\",errors:\"Please provide a valid number.\"})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{name:\"nnoofsamples\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_NUMBEROFSAMPLES\"}),placeholder:props.intl.formatMessage({id:\"IDS_NUMBEROFSAMPLES\"}),isMandatory:true,required:true,className:\"form-control\",value:item.nnoofsamples||0// onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\n,onChange:function onChange(event){return props.onInputOnChange(event,item.nquotationtestcode);},onBlur:function onBlur(){return props.onnetAmountEvent(item.nquotationtestcode);},maxLength:9})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_TOTALNETAMOUNT\"}),name:\"ntotalamount\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,item.nquotationtestcode);},placeholder:props.intl.formatMessage({id:\"IDS_TOTALNETAMOUNT\"}),value:item.ntotalamount>0?item.ntotalamount:0//     value={(item.ncost * item.nnoofsamples) || 0}\n,isMandatory:true,required:true,maxLength:10,isDisabled:true,precision:2}))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"stestplatform\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,item.nquotationtestcode);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:item.stestplatform?item.stestplatform===\"-\"?\"\":item.stestplatform:\"\",isMandatory:false,isDisabled:false,required:true,maxLength:\"500\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormTextarea,{name:\"snotes\",type:\"text\",label:props.intl.formatMessage({id:\"IDS_NOTES\"}),placeholder:props.intl.formatMessage({id:\"IDS_NOTES\"}),isMandatory:false,required:true,className:\"form-control\",value:item.snotes?item.snotes===\"-\"?\"\":item.snotes:\"\",onChange:function onChange(event){return props.onInputOnChange(event,item.nquotationtestcode);},maxLength:500})))))))));}):\"\";};export default injectIntl(EditQuotationTestPricing);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/quotation/EditQuotationTestPricing.jsx"],"names":["React","Row","Col","Card","injectIntl","FormInput","ReadOnlyText","FormNumericInput","FormSelectSearch","FormTextarea","EditQuotationTestPricing","props","console","log","selectedRecord","Object","keys","length","map","item","index","stestsynonym","smethodname","intl","formatMessage","id","DiscountBand","ndiscountbandcode","label","event","onComboChange","nquotationtestcode","onInputOnChange","namount","ncost","onNumericInputChange","onnetAmountEvent","nnoofsamples","ntotalamount","stestplatform","snotes"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card  } from \"react-bootstrap\";\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\n\r\nconst EditQuotationTestPricing = (props) => {\r\n        console.log(\"props.selected:\", props.selectedRecord)\r\n        return (\r\n            Object.keys(props.selectedRecord).length > 0 ? \r\n                props.selectedRecord.map((item,index)=>\r\n                <>\r\n                \r\n        {/* <Row> */}\r\n          {/* <Card.Body className=\"form-static-wrap\"> */}\r\n            <Card className=\"at-tabs mb-3\">\r\n              <Row noGutters>\r\n               <Col md={12}>\r\n                <Card>\r\n                  <Card.Body>\r\n\r\n                <Row className=\"mb-4 card-header\" Style=\"border-bottom: 0px;\">\r\n                    <Col md={6}>  \r\n\r\n                            <ReadOnlyText>{item.stestsynonym}</ReadOnlyText>\r\n\r\n                    </Col>\r\n\r\n                    <Col md={6}>  \r\n\r\n                       <ReadOnlyText>{item.smethodname}</ReadOnlyText>\r\n\r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n\r\n                <Row>\r\n\r\n                    <Col md={3}>  \r\n\r\n                        <FormSelectSearch\r\n\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_DISCOUNTBAND\" })}\r\n                            isSearchable={true}\r\n                            name={\"ndiscountbandcode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={false}\r\n                            isClearable={false}\r\n                            options={props.DiscountBand}\r\n                            //      value={{label:item['sdiscountbandname'],value:item['ndiscountbandcode']} || -1}\r\n                            value={item.ndiscountbandcode.label !==\"\" ? item.ndiscountbandcode : \"\"} \r\n                            //      value={item.ndiscountbandcode || \"\"}\r\n                            //      defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\r\n                            defaultValue={item }\r\n                            onChange={(event) => props.onComboChange(event, \"ndiscountbandcode\", 5,item.nquotationtestcode)}\r\n                            closeMenuOnSelect={true}\r\n                            // onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                             \r\n                         /> \r\n\r\n                    </Col>\r\n\r\n                    <Col md={3}>  \r\n\r\n                    <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_AMOUNT\" })}\r\n                                name={\"namount\"}\r\n                                type=\"text\" \r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                             // value={props.selectedRecord.namount ? props.selectedRecord.namount : 0}\r\n                                value={item.namount ? item.namount : 0}\r\n                                isMandatory={false}\r\n                                isDisabled={true}\r\n                                required={true}\r\n                                maxLength={\"100\"}\r\n                    />\r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}>  \r\n\r\n                    <FormNumericInput\r\n                                        \r\n                                label={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                type=\"number\"\r\n                                value={item.ncost || 0}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_COST\" })}\r\n                                strict={true}\r\n                                min={0}\r\n                                maxLength={10}\r\n                                // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                onChange={(event) => props.onNumericInputChange(event, \"ncost\",item.nquotationtestcode)}\r\n                                onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                noStyle={true}\r\n                                precision={2}\r\n                                className=\"form-control\"\r\n                                errors=\"Please provide a valid number.\"\r\n                    /> \r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}>  \r\n\r\n                    <FormInput\r\n                                name={\"nnoofsamples\"}\r\n                                type=\"text\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_NUMBEROFSAMPLES\" })}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                className=\"form-control\"\r\n                                value={item.nnoofsamples || 0}\r\n                                // onChange={(event) => props.onNumericInputChange(event, item.nquotationtestcode)}\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                onBlur={() => props.onnetAmountEvent(item.nquotationtestcode)}\r\n                                maxLength={9}\r\n                     />  \r\n\r\n                    </Col>\r\n\r\n                    <Col md={2}> \r\n\r\n                    <FormInput\r\n                                label={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                name={\"ntotalamount\"}\r\n                                type=\"text\"\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                                value={ item.ntotalamount>0 ? item.ntotalamount : 0 }\r\n                            //     value={(item.ncost * item.nnoofsamples) || 0}\r\n                                isMandatory={true}\r\n                                required={true}\r\n                                maxLength={10}\r\n                                isDisabled={true}\r\n                                precision={2}\r\n                        /> \r\n                    \r\n                    </Col>\r\n\r\n                </Row>\r\n\r\n                <Row>\r\n                    \r\n                    <Col md={6}> \r\n                    \r\n                    <FormTextarea\r\n                                label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                name={\"stestplatform\"}\r\n                                type=\"text\" \r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                value={item.stestplatform ? item.stestplatform === \"-\" ? \"\" : item.stestplatform : \"\"}\r\n                                isMandatory={false}\r\n                                isDisabled={false}\r\n                                required={true}\r\n                                maxLength={\"500\"}\r\n                    />\r\n                    </Col> \r\n\r\n                    <Col md={6}> \r\n                \r\n                    <FormTextarea\r\n                                name={\"snotes\"}\r\n                                type=\"text\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_NOTES\" })}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_NOTES\" })}\r\n                                isMandatory={false}\r\n                                required={true}\r\n                                className=\"form-control\"\r\n                                value={item.snotes ? item.snotes === \"-\" ? \"\" : item.snotes : \"\"}\r\n                                onChange={(event) => props.onInputOnChange(event, item.nquotationtestcode)}\r\n                                maxLength={500}\r\n                    />\r\n                    </Col> \r\n\r\n                </Row>           \r\n\r\n                </Card.Body>\r\n             </Card>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n\r\n          {/* </Card.Body> */}\r\n        {/* </Row> */}\r\n\r\n                {/* { (Object.keys(props.selectedRecord).length > 1 && Object.keys(props.selectedRecord).length) !== item.length ? \r\n\r\n                    <Col md={12}>\r\n                          <div Style=\"border-top: 1px solid #007bff;  margin-bottom: 1rem;\"></div>\r\n                   </Col> : \"\"\r\n\r\n                } */}\r\n\r\n                  {/* { Object.keys(props.selectedRecord).length > 1   ? \r\n       ((Object.keys(props.selectedRecord).length > 1) && ((index+1)=== (Object.keys(props.selectedRecord).length))) ? \r\n            \"\":\r\n                    <Col md={12}>     \r\n                          <div Style=\"border-top: 1px solid #007bff;  margin-bottom: 1rem;\"></div>\r\n                   </Col> : \"\"  } */}\r\n                 </>\r\n          \r\n            ) :\"\"\r\n        )\r\n}\r\n\r\nexport default injectIntl(EditQuotationTestPricing);"]},"metadata":{},"sourceType":"module"}