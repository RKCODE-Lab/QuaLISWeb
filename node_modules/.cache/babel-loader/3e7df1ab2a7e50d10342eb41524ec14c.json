{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\customPopover.jsx\";\nimport React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { useRef, useState } from 'react';\nimport { Button, ListGroup, Overlay, Popover, Nav } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport '../pages/registration/registration.css';\nimport { getStatusIcon } from './StatusIcon';\nimport { ReactComponent as ReportIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../assets/image/report-Icon.svg\";\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons'; //import ReportIcon from '../image/report-Icon.svg';\n\nconst ActionPopOver = props => {\n  const [quickShow, setQuickShow] = useState(false); //const [show, setShow] = useState(false);\n\n  const [target, setTarget] = useState(null);\n  const ref = useRef(null); // const handleClick = (event) => {\n  //     setShow(!show);\n  //     setTarget(event.target);\n  // };\n\n  const handleQuickClick = event => {\n    setQuickShow(!quickShow);\n    setTarget(event.target);\n  };\n\n  const itemClick = action => {\n    setQuickShow(!quickShow);\n    props.dynamicButton(action);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"spacefromscroll\",\n    style: {\n      \"display\": props.Button && props.Button ? \"inline\" : \"block\"\n    },\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, props.Button && props.Button ? /*#__PURE__*/React.createElement(Nav.Link, {\n    name: \"Report\",\n    style: {\n      \"font-size\": \"11px\"\n    },\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_REPORT\"\n    }),\n    \"data-for\": \"tooltip-common-wrap\",\n    className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n    onClick: handleQuickClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ReportIcon, {\n    width: \"18\",\n    hieght: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faCaretDown,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  })) : /*#__PURE__*/React.createElement(Button, {\n    className: props.btnClasses,\n    onClick: handleQuickClick,\n    \"data-tip\": props.intl.formatMessage({\n      id: \"IDS_CLICKFORMOREACTIONS\"\n    }),\n    \"data-for\": \"tooltip-common-wrap\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: props.icon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Overlay, {\n    onHide: handleQuickClick,\n    rootClose: true,\n    show: quickShow,\n    target: target,\n    placement: \"bottom\",\n    container: ref.current,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Popover, {\n    id: \"popover-contained\",\n    className: \"list-styles-popover\",\n    class: \"float:left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ListGroup, {\n    as: \"ul\",\n    className: \"no-border w130\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, props.data.length > 0 && props.nav && props.data.map((action, key) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    as: \"li\",\n    key: key,\n    className: \"btn_list\",\n    onClick: () => itemClick(action),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Nav.Link, {\n    className: \"add-txt-btn blue-text link_icons\",\n    hidden: props.userRoleControlRights && props.userRoleControlRights ? props.userRoleControlRights.indexOf(action.controlId) === -1 : false,\n    style: {\n      color: action.scolorhexcode ? action.scolorhexcode : \"\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 33\n    }\n  }, props.hideIcon && props.hideIcon ? \"\" : getStatusIcon(action.ntransactionstatus), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"ml-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 37\n    }\n  }, action[props.textKey]))))))));\n};\n\nexport default injectIntl(ActionPopOver);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/customPopover.jsx"],"names":["React","FontAwesomeIcon","useRef","useState","Button","ListGroup","Overlay","Popover","Nav","injectIntl","getStatusIcon","faCaretDown","ActionPopOver","props","quickShow","setQuickShow","target","setTarget","ref","handleQuickClick","event","itemClick","action","dynamicButton","intl","formatMessage","id","btnClasses","icon","current","data","length","nav","map","key","userRoleControlRights","indexOf","controlId","color","scolorhexcode","hideIcon","ntransactionstatus","textKey"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { useRef, useState } from 'react';\r\nimport { Button, ListGroup, Overlay, Popover, Nav } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport '../pages/registration/registration.css'\r\nimport { getStatusIcon } from './StatusIcon';\r\nimport { ReactComponent as ReportIcon } from '../assets/image/report-Icon.svg';\r\nimport { faCaretDown } from '@fortawesome/free-solid-svg-icons';\r\n//import ReportIcon from '../image/report-Icon.svg';\r\n\r\n\r\nconst ActionPopOver = (props) => {\r\n    const [quickShow, setQuickShow] = useState(false);\r\n    //const [show, setShow] = useState(false);\r\n    const [target, setTarget] = useState(null);\r\n    const ref = useRef(null);\r\n\r\n    // const handleClick = (event) => {\r\n    //     setShow(!show);\r\n    //     setTarget(event.target);\r\n    // };\r\n    const handleQuickClick = (event) => {\r\n        setQuickShow(!quickShow);\r\n        setTarget(event.target);\r\n    };\r\n    const itemClick = (action) => {\r\n        setQuickShow(!quickShow);\r\n        props.dynamicButton(action);\r\n    }\r\n\r\n    return (<div className = \"spacefromscroll\" style={{ \"display\": props.Button && props.Button ? \"inline\" : \"block\" }} ref={ref}>\r\n        {props.Button && props.Button ?\r\n\r\n            <Nav.Link name=\"Report\" style={{ \"font-size\": \"11px\" }} data-tip={props.intl.formatMessage({ id: \"IDS_REPORT\" })} data-for=\"tooltip-common-wrap\"\r\n                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                onClick={handleQuickClick}>\r\n\r\n                <ReportIcon width=\"18\" hieght=\"18\" />\r\n\r\n                {/* <Image src={ReportIcon} alt=\"report-Icon\" width=\"18\" hieght=\"18\"\r\n           className=\"ActionIconColor img-normalize\" />*/}\r\n\r\n                <FontAwesomeIcon icon={faCaretDown} />\r\n\r\n\r\n            </Nav.Link>\r\n            :\r\n            <Button className={props.btnClasses} onClick={handleQuickClick}\r\n            data-tip={props.intl.formatMessage({ id: \"IDS_CLICKFORMOREACTIONS\" })} \r\n            data-for=\"tooltip-common-wrap\"\r\n            >\r\n            <FontAwesomeIcon icon={props.icon}></FontAwesomeIcon>\r\n            </Button>\r\n        }\r\n        <Overlay\r\n            onHide={handleQuickClick}\r\n            rootClose={true}\r\n            show={quickShow}\r\n            target={target}\r\n            placement=\"bottom\"\r\n            container={ref.current}\r\n        >\r\n            <Popover id=\"popover-contained\" className=\"list-styles-popover\" class=\"float:left\">\r\n                <ListGroup as=\"ul\" className=\"no-border w130\">\r\n                    {props.data.length > 0 && props.nav &&\r\n                        props.data.map((action, key) =>\r\n                            <ListGroup.Item as=\"li\" key={key} className=\"btn_list\" onClick={() => itemClick(action)}>\r\n                                <Nav.Link className='add-txt-btn blue-text link_icons' hidden={props.userRoleControlRights && props.userRoleControlRights ? props.userRoleControlRights.indexOf(action.controlId) === -1 : false}\r\n                                    style={{ color: action.scolorhexcode ? action.scolorhexcode : \"\" }}>\r\n                                    {props.hideIcon && props.hideIcon ? \"\" :\r\n                                        getStatusIcon(action.ntransactionstatus)}\r\n                                    {/* <FontAwesomeIcon icon={props.icon}></FontAwesomeIcon> */}\r\n                                    <span className='ml-1'>{action[props.textKey]}</span>\r\n                                </Nav.Link>\r\n                            </ListGroup.Item>\r\n                        )}\r\n                </ListGroup>\r\n            </Popover>\r\n        </Overlay>\r\n    </div >\r\n    )\r\n}\r\nexport default injectIntl(ActionPopOver);\r\n"]},"metadata":{},"sourceType":"module"}