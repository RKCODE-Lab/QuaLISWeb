{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\Release.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, Button, ListGroup } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { Utils as QbUtils } from \"@react-awesome-query-builder/ui\";\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType, getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport, previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise, getreportcomments, fetchReportInfoReleaseById, UpdateReportComments, getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData, fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory, downloadVersionReport, viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool, getPatientWiseSample, preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment, onDeleteReleaseTestComment, generatereport } from '../../actions';\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, showEsign, Lims_JSON_stringify, create_UUID, onSaveMandatoryValidation, checkFilterIsEmptyQueryBuilder, removeSpaceFromFirst } from '../../components/CommonScript';\nimport { SampleType, designProperties, ResultEntry, reportCOAType, transactionStatus, attachmentType } from '../../components/Enumeration';\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { Affix } from 'rsuite';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReleaseFilter from './ReleaseFilter';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\nimport { ContentPanel, ProductList } from '../product/product.styled';\nimport { faEdit, faPlus, faExpandArrowsAlt, faEye, faInfoCircle, faPencilAlt, faRecycle, faStore, faTrash, faFilePen, faFileCode, faDownload, faFilePdf, faHistory, faFile, faComments, faPaperclip, faCalculator, faSync, faSearch, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { ReactComponent as Generate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/generate-certificate.svg\";\nimport { ReactComponent as ReGenerate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/regenerate-icon.svg\";\nimport { ReactComponent as ResultCorrection } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/resultcorrection.svg\";\nimport { ReactComponent as Correction } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/correctionrelease.svg\";\nimport { ReactComponent as Comment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/comment-edit-svgrepo-com.svg\";\nimport { ReactComponent as DownloadCertificate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Download Certificate.svg\";\nimport { ReactComponent as PreliminaryReport } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/preliminary_report.svg\";\nimport { ReactComponent as ReportHistory } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reporthistory.svg\";\nimport { ReactComponent as ReleaseTestAttachmentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/releasetestattachment.svg\";\nimport { ReactComponent as ReleaseTestCommentIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/releasetestcomment.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fileViewUrl, reportUrl } from '../../rsapi';\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\nimport { REPORTTYPE } from \"../../components/Enumeration\";\nimport SampleInfoView from '../approval/SampleInfoView';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport ModalShow from '../../components/ModalShow';\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\nimport ReleaseTestAttachment from './ReleaseTestAttachment';\nimport ReleaseTestComment from './ReleaseTestComment';\nimport VersionHistGrid from './VersionHistGrid';\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport ReleaseReportHistory from './ReleaseReportHistory';\nimport { ReactComponent as Preview } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Preview.svg\";\nimport { ReactComponent as TestAttachment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Test Attachment.svg\";\nimport AddReleaseTestAttachment from './AddReleaseTestAttachment';\nimport AddReleaseTestComment from './AddReleaseTestComment';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport SplitterLayout from 'react-splitter-layout';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport SampleGridTab from '../registration/SampleGridTab';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { faTrashAlt, faThumbsUp, faChevronCircleDown } from '@fortawesome/free-solid-svg-icons'; //,faUserTimes, faTrash\n\nimport CustomPopover from '../../components/customPopover';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Release extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.outsourceFileDataStateChange = event => {\n      this.setState({\n        outsourceFileDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.reportInfoDataChange = event => {\n      this.setState({\n        reportInfoDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.correctionDataStateChange = event => {\n      this.setState({\n        correctionDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.versionHistoryDataStateChange = event => {\n      this.setState({\n        versionHistoryDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.preliminaryHistoryDataStateChange = event => {\n      this.setState({\n        preliminaryHistoryDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.testAttachmentDataStateChange = event => {\n      this.setState({\n        testAttachmentDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.testCommentDataStateChange = event => {\n      this.setState({\n        testCommentDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.sampleGridDataStateChange = event => {\n      this.setState({\n        sampleGridDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo,\n          realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n          realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n          realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n          realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n          realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n          realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n          realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleasedApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            this.props.getReleasedRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            this.props.getReleasedRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleasedApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          // const inputParamData = {\n          //     dfrom: obj.fromDate,\n          //     dto: obj.toDate,\n          //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          //     userinfo: this.props.Login.userInfo,\n          //     masterData: { ...this.props.Login.masterData },\n          //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n          //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     ndesigntemplatemappingcode: comboData.value,\n          //     DesignTemplateMappingValue: comboData.item\n          // }\n          // this.props.getReleaseFilterBasedTest(inputParamData)\n          let masterData = { ...this.props.Login.masterData,\n            DesignTemplateMappingValue: comboData.item\n          };\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleasedFilterStatus(inputParamData);\n          }\n        } //Don't Remove\n        // else if (fieldName === 'nsectioncode') {\n        //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n        //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             nsectioncode: comboData.value === -1 ? null\n        //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //                 : comboData.value,\n        //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n        //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleasedFilterBasedTest(inputParamData);\n        //     }\n        // }\n        // else if (fieldName === 'njobstatuscode') {\n        //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n        //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\n        //         const updateInfo = {\n        //             typeName: DEFAULT_RETURN,\n        //             data: { masterData }\n        //         }\n        //         this.props.updateStore(updateInfo);\n        //     }\n        // }\n        else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ncoareporttypecode') {\n          if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\n            let masterData = { ...this.props.Login.masterData,\n              ReportTypeValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } // else {\n        //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n        //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n        //         //  const updateInfo = {\n        //         //     typeName: DEFAULT_RETURN,\n        //         //    data: { masterData }\n        //         // }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: comboData.value,\n        //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n        //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n        //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n        //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n        //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleaseFilterBasedTest(inputParamData);\n        //     }\n        // }\n\n      }\n    };\n\n    this.closeFilter = () => {\n      let inputValues = {\n        fromDate: this.props.Login.masterData.realFromDate || new Date(),\n        //this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date() ,\n        toDate: this.props.Login.masterData.realToDate || new Date(),\n        //this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() ,\n        SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        ReportTypeValue: this.props.Login.masterData.realReportTypeValue || {},\n        RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\n        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\n        ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\n        SampleType: this.props.Login.masterData.realSampleTypeList || [],\n        ReportType: this.props.Login.masterData.realReportTypeList || [],\n        RegType: this.props.Login.masterData.realRegTypeList || [],\n        RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\n        FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\n        ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\n        DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...inputValues\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewDownloadFile = filedata => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          // change: this.props.Login.change,\n          // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          ncoareporthistorycode: filedata.inputData.ncoareporthistorycode ? filedata.inputData.ncoareporthistorycode : -1,\n          npreliminaryreporthistorycode: filedata.inputData.npreliminaryreporthistorycode ? filedata.inputData.npreliminaryreporthistorycode : -1,\n          //ntransactionstatus: String(transactionStatus.RELEASED),\n          //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n          // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          //nflag: 2,\n          userinfo: this.props.Login.userInfo,\n          //sreportcomments: \"\",\n          //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          //nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          action: \"DownloadVersionhistory\",\n          doAction: \"download\",\n          // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\n          openModal: true,\n          userInfo: this.props.Login.userInfo,\n          ncontrolCode: filedata.ncontrolCode\n        },\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RELEASEHISTORY\"\n        })\n      };\n      this.props.downloadVersionReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue; //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\n      //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\n\n      let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let realSampleTypeList = this.props.Login.masterData.SampleType || [];\n      let realReportTypeList = this.props.Login.masterData.ReportType || [];\n      let realRegTypeList = this.props.Login.masterData.RegType || [];\n      let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\n      let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\n      let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\n      let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        //  realUserSectionValue, realTestValue,\n        realDesignTemplateMappingValue,\n        realReportTypeList,\n        realRegSubTypeList,\n        realRegTypeList,\n        realReportTypeValue,\n        realSampleTypeList,\n        realFilterStatusList,\n        realApprovalVersionList,\n        realDesignTemplateMappingList\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTNOTGENERATED\"\n        }));\n      }\n    };\n\n    this.handleReportNoPageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.getApprovedSample = (inputParam, ncontrolCode) => {\n      if (inputParam.masterData && inputParam.masterData.realReportTypeValue) {\n        this.props.getApprovedSample(inputParam, ncontrolCode);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.onKeyPress = (event, index, paremterResultcode) => {\n      if (event.keyCode === 13) {\n        for (let i = 0; i < event.target.form.elements.length; i++) {\n          if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\n            event.target.form.elements[i].focus();\n            break;\n          }\n        }\n\n        event.preventDefault();\n      }\n    };\n\n    this.onResultInputChange = parameterResults => {\n      this.setState({\n        parameterResults: [...parameterResults],\n        isParameterInitialRender: false // currentAlertResultCode,\n        //  currentntestgrouptestpredefcode\n\n      });\n    };\n\n    this.fields = () => {};\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n\n      if (fieldName === 'nprojecttypecode') {\n        const inputParamData = {\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          nprojecttypecode: comboData.value,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getApprovedProjectByProjectType(inputParamData);\n      }\n\n      if (fieldName === 'nprojectmastercode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo); //let realFromDate = obj.fromDate;\n        //let realToDate = obj.toDate\n\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          //realFromDate, realToDate, \n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nprojectmastercode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n        let selectedRecord = { ...this.props.Login.selectedRecord\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData,\n            selectedRecord\n          };\n\n          if (inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || inputData.isneedsection === transactionStatus.YES) {\n            this.props.getSectionForSectionWise(inputParam);\n          } else {\n            this.props.getReleasedSample(inputParam);\n          }\n        }\n      }\n\n      if (fieldName === 'nsectioncode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nsectioncode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getReleasedSample(inputParam);\n        }\n      }\n    };\n\n    this.handleExecuteClicks = isClear => {\n      const filterquery = this.props.Login.filterquery;\n      const filterQueryTreeStr = this.props.Login.filterQueryTreeStr;\n      let isFilterEmpty = checkFilterIsEmptyQueryBuilder(filterQueryTreeStr);\n\n      if (isFilterEmpty) {\n        const val = removeSpaceFromFirst(filterquery, ''); // if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\n\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: 1,\n          //parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nsectioncode: -1,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1,\n          filterquery: !isClear ? val && val.replaceAll(/'/g, \"''\") : undefined,\n          screenName: this.props.Login.screenNameCopy,\n          isClear: isClear,\n          awesomeTree: this.props.Login.awesomeTree\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getReleasedSample(inputParam);\n        } // } else {\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\n        // }\n\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_PROVIDEVALUESFORINPUTS\"\n        }));\n      }\n    };\n\n    this.openFilterQuery = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal: true,\n          FilterQueryBuilder: true,\n          screenName: \"IDS_SAMPLEFILTER\",\n          screenNameCopy: this.props.Login.screenNameCopy\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let closeModal = true;\n      let modalShow = this.props.Login.modalShow;\n      let ReportmodalShow = this.props.Login.ReportmodalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedComment = this.props.Login.masterData.selectedComment;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        ReportmodalShow = false;\n        selectedRecord = {};\n        selectedComment = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          closeModal,\n          selectedComment,\n          ReportmodalShow\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.generatereport = generateid => {\n      // if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          syncaction: \"ManualSyncreport\",\n          userInfo: this.props.Login.userInfo\n        },\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_GENERATE\"\n        })\n      };\n      this.props.generatereport(inputParam, this.props.Login.masterData, inputParam.screenName); //   }else{\n      //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\n      //    }\n    };\n\n    this.downloadHistory = downloadReportId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            inputData: {\n              // change: this.props.Login.change,\n              // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n              //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n              //ncoareporthistorycode:filedata.inputData.ncoareporthistorycode,\n              //ntransactionstatus: String(transactionStatus.RELEASED),\n              //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n              // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              action: \"Download\",\n              doAction: \"preview\",\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n              //openModal:true,\n              userInfo: this.props.Login.userInfo,\n              ncontrolCode: downloadReportId\n            },\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_DOWNLOAD\"\n            })\n          };\n          this.props.downloadHistory(inputParam, this.props.Login.masterData, inputParam.screenName);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRELEASEDRECORD\"\n          }));\n        }\n      }\n    };\n\n    this.previewReport = previewId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            inputData: {\n              nflag: 2,\n              change: this.props.Login.change,\n              ncontrolcode: previewId,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              userinfo: this.props.Login.userInfo,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAPREVIEW,\n              sprimarykeyname: \"npreregno\",\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              action: 'DOWNLOADFILE',\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n              doAction: \"download\",\n              nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n              reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n              isSMTLFlow: parseInt(this.props.Login.settings[29])\n            },\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_PREVIEWREPORT\"\n            })\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                openModal: true,\n                modalShow: false,\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                screenName: inputParam.screenName,\n                ncontrolcode: previewId,\n                operation: \"download\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_FINALREPORTGEN\"\n          }));\n        }\n      }\n    };\n\n    this.preliminaryReport = preliminaryId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.DRAFT || this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION) {\n          let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n          const inputParam = {\n            inputData: {\n              nflag: 2,\n              change: this.props.Login.change,\n              ncontrolcode: preliminaryId,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              userinfo: this.props.Login.userInfo,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAPRELIMINARY,\n              sprimarykeyname: \"npreregno\",\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              action: 'preliminary',\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n              doAction: \"preliminary\",\n              nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n              reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n              isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n              ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n              isSMTLFlow: parseInt(this.props.Login.settings[29])\n            },\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.intl.formatMessage({\n              id: \"IDS_PRELIMINARYREPORT\"\n            })\n          };\n          const masterData = this.props.Login.masterData;\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, preliminaryId)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                openModal: true,\n                modalShow: false,\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                screenName: inputParam.screenName,\n                ncontrolcode: preliminaryId,\n                operation: \"preliminary\"\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.preliminaryReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n          }\n        } else {\n          let toastAlert = this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTCORRECTEDRECORDTO\"\n          }) + \" \" + (this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n            id: \"IDS_PRELIMINARYREPORT\"\n          }));\n          toast.warn(toastAlert);\n        }\n      }\n    };\n\n    this.downloadReleasedValidation = downloadId => {\n      const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory : [];\n      const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [];\n      const versionCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nversionno\"]))] : [];\n      const reportTemplateCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nreporttemplatecode\"]))] : [];\n\n      if (resultArray.length === 1) {\n        if (reportTemplateCheck.length === 1) {\n          if (resultArray[0] === transactionStatus.CORRECTION || resultArray[0] === transactionStatus.PRELIMINARYRELEASE && (versionCheck.length > 1 || versionCheck.length === 1 && versionCheck[0] !== -1)) {\n            this.CorrectionComments(downloadId);\n          } else {\n            this.downloadReleasedFile(downloadId);\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRECORDSWITHSAMEREPORTEMPLATE\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORDSWITHSAMESTATUS\"\n        }));\n      }\n    };\n\n    this.CorrectionComments = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: false,\n          screenData: {\n            masterData: this.props.Login.masterData\n          },\n          operation: this.props.Login.operation,\n          openModal: true,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_CORRECTIONCOMMENTS\"\n          })\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.downloadReleasedFile = () => {\n      const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          ncontrolcode: downloadId,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.ncoaparentcode).sort().join(\",\") : \"-1\",\n          // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\n          // ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.stransactionsamplecode).join(\",\") : \"-1\",\n          // ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.stransactiontestcode).join(\",\") : \"-1\",\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          // ntransactionsamplecode: ntransactionsamplecode,\n          //ntransactiontestcode: ntransactiontestcode,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          // ntransactionstatus: String(transactionStatus.RELEASED),\n          ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n          noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\n          listStatus: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          // nsectioncode: -1,\n          sreportcomments: this.state.selectedRecord && this.state.selectedRecord.sreportcomments ? this.state.selectedRecord.sreportcomments : \"\",\n          nversionno: this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno ? this.props.Login.masterData.nversionno : 0,\n          action: \"Generatefile\",\n          doAction: \"generate\",\n          nflag: 2,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n          nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode,\n          reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n          isSMTLFlow: parseInt(this.props.Login.settings[29]),\n          ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\n          confirmMessage: this.confirmMessage,\n          isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n          ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n          genericLabel: this.props.Login.genericLabel\n        },\n        userinfo: this.props.Login.userInfo,\n        methodUrl: \"ReleaseAfterCorrection\",\n        classUrl: \"release\",\n        operation: \"update\",\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_GENERATEFILE\"\n        })\n      };\n      const masterData = this.props.Login.masterData; // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\n      //              && this.state.selectedRecord && this.state.selectedRecord.sreportcomments===\"\" || this.state.selectedRecord.sreportcomments===undefined) {\n      //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERDESCRIPTION\" }));  \n      // }\n      //     else{\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, downloadId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncontrolcode: downloadId,\n            openModal: true,\n            modalShow: false,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION ? this.props.Login.screenName : this.props.intl.formatMessage({\n              id: \"IDS_GENERATEFILE\"\n            })\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, inputParam.screenName);\n      } // }\n\n    };\n\n    this.reportcomments = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n\n        if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n          const inputParam = {\n            inputData: {\n              change: this.props.Login.change,\n              ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n              npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n              ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n              url: this.props.Login.settings[24],\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              // ntransactionsamplecode: ntransactionsamplecode,\n              //ntransactiontestcode: ntransactiontestcode,\n              ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n              // nTransStatus: ntransCode,\n              // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n              //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n              //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n              // ntransactionstatus: String(transactionStatus.RELEASED),\n              ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n              nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n              nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n              napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n              nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n              nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              userinfo: this.props.Login.userInfo,\n              // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n              // ncontrolCode,\n              nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n              ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n              isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n              nreporttypecode: REPORTTYPE.COAREPORT,\n              sprimarykeyname: \"npreregno\",\n              // nsectioncode: -1,\n              nflag: 2,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n            },\n            userinfo: this.props.Login.userInfo\n          };\n          this.props.getreportcomments(inputParam.inputData, this.props.Login.masterData);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTDRAFTCORRECTEDRECORDTOEDITREPORTCOMMENTS\"\n          }));\n        }\n      }\n    };\n\n    this.regenerateReleasedFile = regenerateId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        const inputParam = {\n          inputData: {\n            change: this.props.Login.change,\n            npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            sreportno: this.props.Login.masterData.selectedReleaseHistory[0].sreportno,\n            ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\n            ntransactionstatus: String(transactionStatus.RELEASED),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            nflag: 2,\n            userinfo: this.props.Login.userInfo,\n            sreportcomments: \"\",\n            nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            nreporttypecode: REPORTTYPE.COAREPORT,\n            sprimarykeyname: \"npreregno\",\n            action: \"Regenerate\",\n            doAction: \"download\",\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n            ncontrolcode: regenerateId,\n            nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n            reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n            ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n            isSMTLFlow: parseInt(this.props.Login.settings[29])\n          },\n          userinfo: this.props.Login.userInfo,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_REGENERATEFILE\"\n          })\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, regenerateId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              ncontrolcode: regenerateId,\n              openModal: true,\n              modalShow: false,\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              screenName: inputParam.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n        }\n      }\n    };\n\n    this.CorrectionStatus = correctionId => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \n\n        const inputParam = {\n          inputData: {\n            change: this.props.Login.change,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            url: this.props.Login.settings[24],\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            // ntransactionsamplecode: ntransactionsamplecode,\n            //ntransactiontestcode: ntransactiontestcode,\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n            // nTransStatus: ntransCode,\n            // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n            //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n            //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n            // ntransactionstatus: String(transactionStatus.RELEASED),\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            userinfo: this.props.Login.userInfo,\n            // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n            // ncontrolCode,\n            nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            nreporttypecode: REPORTTYPE.COAREPORT,\n            sprimarykeyname: \"npreregno\",\n            doAction: \"correction\",\n            nflag: 2,\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n            isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\n            genericLabel: this.props.Login.genericLabel\n          },\n          userinfo: this.props.Login.userInfo,\n          methodUrl: \"CorrectionStatus\",\n          classUrl: \"release\",\n          operation: \"update\",\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_CORRECTION\"\n          })\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              ncontrolcode: correctionId,\n              openModal: true,\n              modalShow: false,\n              loadEsign: true,\n              operation: \"update\",\n              screenData: {\n                inputParam,\n                masterData\n              },\n              screenName: inputParam.screenName\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName);\n        }\n      }\n    };\n\n    this.onSaveModalResultClick = (saveType, data) => {\n      let ReleaseParameter = this.state.parameterResults || this.props.Login.parameterResults && this.props.Login.parameterResults[0];\n      let selectedRecord = this.state.selectedRecord || {};\n      let selectedId = this.props.Login.selectedId || null;\n      let additionalInfo = this.state.selectedRecord.additionalInfo || [];\n      const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\n      const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\n      const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      const classUrl = \"release\";\n      const formData = new FormData();\n      let neditable = 0;\n      let releaseParameters = [];\n      let inputParam = {};\n      let inputData = [];\n      let i = 0;\n\n      if (ReleaseParameter.length > 0 && ReleaseParameter !== undefined && ReleaseParameter[0].sresult !== \"\") {\n        ReleaseParameter.map((resultData, index) => {\n          let results = {};\n\n          if (resultData.editable === true) {\n            neditable = 1;\n\n            switch (resultData.nparametertypecode) {\n              case 1:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: resultData[\"ncalculatedresult\"],\n                  sresult: resultData.sresult,\n                  sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\",\n                  sunitname: resultData.nunitcode.label,\n                  sresultaccuracyname: resultData.nresultaccuracycode.label,\n                  nresultaccuracycode: resultData.nresultaccuracycode.value\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\n                results[\"sresult\"] = resultData.sresult;\n                results[\"sfinal\"] = resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\n                results[\"ngradecode\"] = resultData.sresult !== \"\" ? numericGrade(resultData, results[\"sfinal\"]) : -1;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                results['nunitcode'] = resultData.nunitcode.value;\n                break;\n\n              case 2:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: 4,\n                  sresult: Lims_JSON_stringify(resultData.sresult, false),\n                  sfinal: Lims_JSON_stringify(resultData.sfinal, false),\n                  sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\n                  salertmessage: resultData.salertmessage,\n                  additionalInfo: resultData['additionalInfo'],\n                  additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\n                  ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"sresult\"] = resultData.sresult;\n                results[\"ncalculatedresult\"] = 4;\n                results[\"sfinal\"] = resultData.sresult;\n                results[\"ngradecode\"] = resultData.ngradecode;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                results['nunitcode'] = resultData.nunitcode;\n                break;\n\n              case 3:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: 4,\n                  sresult: Lims_JSON_stringify(resultData.sresult, false),\n                  sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"sresult\"] = resultData.sresult;\n                results[\"ncalculatedresult\"] = 4;\n                results[\"sfinal\"] = resultData.sresult;\n                results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                results['nunitcode'] = resultData.nunitcode;\n                break;\n\n              case 4:\n                if (resultData.sfinal.length > 0) {\n                  const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                  const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                  const uniquefilename = create_UUID() + '.' + fileExtension;\n                  results[\"jsondata\"] = {\n                    ssystemfilename: uniquefilename,\n                    nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\n                    ncalculatedresult: 4,\n                    sresult: Lims_JSON_stringify(resultData.sresult, false),\n                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"sfinal\"] = resultData.sresult;\n                  results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                  results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                  results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                  results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                  results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results[\"ssystemfilename\"] = uniquefilename;\n                  results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\n                  results['nunitcode'] = resultData.nunitcode;\n                  formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\n                  formData.append(\"uniquefilename\" + index, uniquefilename);\n                  formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\n                  i++;\n                } else {\n                  const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                  const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                  const uniquefilename = \"\";\n                  results[\"jsondata\"] = {\n                    ssystemfilename: uniquefilename,\n                    nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\n                    ncalculatedresult: 4,\n                    sresult: \"\",\n                    sfinal: \"\"\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sresult\"] = \"\";\n                  results[\"sfinal\"] = \"\";\n                  results[\"ngradecode\"] = -1;\n                  results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                  results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                  results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                  results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results[\"ssystemfilename\"] = \"\";\n                  results[\"nfilesize\"] = \"\";\n                  formData.append(\"uploadedFile\" + index, \"\");\n                  formData.append(\"uniquefilename\" + index, \"\");\n                  formData.append(\"ntransactiontestcode\", \"\");\n                }\n\n                break;\n\n              default:\n                break;\n            }\n\n            if (Object.values(results).length > 0) {\n              releaseParameters.push(results);\n            }\n          }\n\n          return null;\n        });\n\n        if (neditable === 0) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loading: false,\n              openModal: false,\n              parameterResults: [],\n              selectedRecord: {}\n            }\n          };\n          return this.props.updateStore(updateInfo);\n        }\n\n        formData.append(\"filecount\", i);\n        formData.append(\"nregtypecode\", nregtypecode);\n        formData.append(\"nregsubtypecode\", nregsubtypecode);\n        formData.append(\"ncoaparentcode\", this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode);\n        formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\n        formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\n        formData.append(\"resultData\", JSON.stringify(releaseParameters));\n        inputParam = {\n          classUrl: classUrl,\n          methodUrl: \"ReleaseParameter\",\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            doAction: \"editresult\"\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"update\",\n          displayName: this.props.Login.inputParam.displayName,\n          saveType //, postParam\n\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              modalShow: false,\n              openModal: true,\n              ncontrolcode: editResultId,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\n        }\n      } // else {\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: { loading: false, openModal: false }\n      //     }\n      //     return this.props.updateStore(updateInfo);\n      // }\n      else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_ENTERRESULT\"\n        }));\n      }\n    };\n\n    this.onSaveModalClick = () => {\n      //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\n      if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\n        this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData);\n      } else {\n        let ntransactionsamplecode = \"\";\n        let ntransactiontestcode = \"\";\n        let npreregno = \"\";\n\n        if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n          if (this.state.npreregno && this.state.npreregno.length > 0) {\n            let sample = this.state.npreregno.filter((c, index) => {\n              return this.state.npreregno.indexOf(c) === index;\n            });\n            let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n              return this.state.ntransactionsamplecode.indexOf(c) === index;\n            });\n            let test = this.state.ntransactiontestcode.filter((c, index) => {\n              return this.state.ntransactiontestcode.indexOf(c) === index;\n            });\n            npreregno = sample.map(x => x).join(\",\");\n            ntransactionsamplecode = subsample.map(x => x).join(\",\");\n            ntransactiontestcode = test.map(x => x).join(\",\");\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n            const inputParam = {\n              inputData: {\n                change: this.props.Login.change,\n                npreregno: String(npreregno),\n                ntransactionsamplecode: ntransactionsamplecode,\n                ntransactiontestcode: ntransactiontestcode,\n                // ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\n                //     && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\n                ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode : -1,\n                ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n                url: this.props.Login.settings[24],\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n                dfrom: obj.fromDate,\n                dto: obj.toDate,\n                //  isPopup:true,\n                isAddPopup: false,\n                isEditPopup: false,\n                nflag: 2,\n                userinfo: this.props.Login.userInfo,\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n                doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\n                isSMTLFlow: parseInt(this.props.Login.settings[29]),\n                nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode ? this.state.selectedRecord.nreporttemplatecode.value : -1 // nmultiplesampleinsinglerelease: this.state.selectedRecord.nmultiplesampleinsinglerelease\n\n              },\n              userinfo: this.props.Login.userInfo,\n              methodUrl: \"Release\",\n              classUrl: \"release\",\n              operation: this.props.Login.operation\n            };\n            const masterData = this.props.Login.masterData;\n\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam,\n                    masterData\n                  },\n                  operation: this.props.Login.operation,\n                  screenName: this.props.Login.screenName,\n                  ncontrolcode: this.props.Login.ncontrolCode\n                }\n              };\n              this.props.updateStore(updateInfo);\n            } else {\n              if (this.props.Login.isDeletePopup) {\n                this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData);\n              } else if (this.props.Login.isEditPopup) {\n                this.props.UpdateApprovedSample(inputParam.inputData, this.props.Login.masterData);\n              } else {\n                this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData);\n              }\n            }\n          } else {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_SELECTANYONESAMPLE\"\n            }));\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTANYONESAMPLE\"\n          }));\n        }\n      }\n    };\n\n    this.sendToPortal = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          url: this.props.Login.settings[24],\n          isPortal: true,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          allPreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getReportForPortal(inputParam);\n      }\n    };\n\n    this.reportHistory = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.DRAFT) {\n          let inputParam = {\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n            stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n            stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n            userInfo: this.props.Login.userInfo,\n            masterData: this.props.Login.masterData\n          };\n          this.props.versionHistory(inputParam);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_SELECTRELEASEDRECORD\"\n          }));\n        }\n      }\n    };\n\n    this.releaseReportHistory = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        //if(this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus!==transactionStatus.DRAFT){\n        let inputParam = {\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n          spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\n          stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\n          stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_RELEASEHISTORY\"\n          })\n        };\n        this.props.releaseReportHistory(inputParam); //    }else{\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\n        //    }\n      }\n    };\n\n    this.patientInfo = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          isPatientDetails: true,\n          openModal: true,\n          hideSave: true,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.reportHistoryInfo = () => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode\n          },\n          masterData: this.props.Login.masterData\n        };\n        this.props.viewReportHistory(inputParam);\n      }\n    };\n\n    this.releaseTestAttachmentData = actionName => {\n      if (this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1) {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\"\n        }));\n      } else {\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\n            actionName: actionName\n          },\n          masterData: this.props.Login.masterData\n        };\n        this.props.viewReleaseTestAttachment(inputParam);\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData\"];\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ncoareporttypecode: realReportTypeValue && realReportTypeValue.ncoareporttypecode || -1,\n        isneedsection: parseInt(realReportTypeValue && realReportTypeValue.isneedsection) || transactionStatus.NO,\n        ntransactionstatus: realFilterStatusValue && (realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let isPatientDetails = this.props.Login.isPatientDetails;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let hideSave = this.props.Login.hideSave;\n      let isAddPopup = this.props.Login.isAddPopup;\n      let isEditPopup = this.props.Login.isEditPopup;\n      let isDeletePopup = this.props.Login.isDeletePopup;\n      let isCorrectionNeed = this.props.Login.isCorrectionNeed;\n      let ncontrolcode = this.props.Login.ncontrolcode;\n      let modalShow = this.props.Login.modalShow;\n      let screenName = this.props.Login.screenName;\n      let isPatientReports = this.props.Login.isPatientReports;\n      let openModalTitle = this.props.Login.openModalTitle;\n      let isReleaseTestAttachment = this.props.Login.isReleaseTestAttachment;\n      let isReleaseTestComment = this.props.Login.isReleaseTestComment;\n      let isAddReleaseTestAttachment = this.props.Login.isAddReleaseTestAttachment;\n      let isAddReleaseTestComment = this.props.Login.isAddReleaseTestComment;\n      let isInitialRender = this.props.Login.isInitialRender;\n      let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\n      let FilterQueryBuilder = this.props.Login.FilterQueryBuilder;\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode; //let projectMasterList =[];\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false; // openModal = false;\n\n          isPatientDetails = false;\n          hideSave = false;\n          isAddPopup = false;\n          isEditPopup = false;\n          isDeletePopup = false;\n          isCorrectionNeed = false;\n          isPatientReports = false;\n          isReleaseTestAttachment = false;\n          isReleaseTestComment = false;\n          screenName = undefined;\n          selectedRecord = {};\n          FilterQueryBuilder = false;\n        } else {\n          if (ncontrolcode && ncontrolcode === editResultId) {\n            modalShow = true;\n          }\n\n          if (this.props.Login.screenName !== undefined && this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_CORRECTION\"\n          }) // || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) \n          || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_REGENERATEFILE\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_GENERATEFILE\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_PREVIEWREPORT\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_PRELIMINARYREPORT\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_RELEASEHISTORY\"\n          })) {\n            openModal = false;\n            screenName = undefined;\n          }\n\n          loadEsign = false; // selectedRecord[\"agree\"] = 4;\n\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n          FilterQueryBuilder = false;\n        }\n      } // When using EsignStateHandle component\n      else if (this.props.Login.loadEsignStateHandle) {\n        loadEsignStateHandle = false;\n      } else if (this.props.Login.FilterQueryBuilder) {\n        FilterQueryBuilder = false;\n        screenName = this.props.Login.screenNameCopy;\n      } else {\n        openModal = isAddReleaseTestAttachment === true || isAddReleaseTestComment === true ? true : false;\n        isPatientDetails = false;\n        hideSave = false;\n        isAddPopup = false;\n        isEditPopup = false;\n        isDeletePopup = false;\n        isCorrectionNeed = false;\n        isPatientReports = false;\n        isReleaseTestAttachment = isAddReleaseTestAttachment === true ? true : false;\n        isReleaseTestComment = isAddReleaseTestComment === true ? true : false;\n        screenName = undefined;\n        selectedRecord = {};\n        openModalTitle = undefined;\n        isAddReleaseTestAttachment = false;\n        isAddReleaseTestComment = false;\n        isInitialRender = false;\n        FilterQueryBuilder = false;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          modalShow,\n          loadEsign,\n          screenName,\n          selectedRecord,\n          selectedId: null,\n          isPatientDetails,\n          hideSave,\n          isAddPopup,\n          isEditPopup,\n          isDeletePopup,\n          isCorrectionNeed,\n          isPatientReports,\n          openModalTitle,\n          isReleaseTestAttachment,\n          isReleaseTestComment,\n          isAddReleaseTestAttachment,\n          isAddReleaseTestComment,\n          isInitialRender,\n          loadEsignStateHandle,\n          FilterQueryBuilder\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let ReportmodalShow = this.props.Login.ReportmodalShow; // const editResultId =this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        ReportmodalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          ReportmodalShow\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeDocModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = { ...this.state.selectedRecord\n      } || {}; // if(event.target.type === \"checkbox\"){\n      //     selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      // } else {\n\n      selectedRecord[event.target.name] = event.target.value; // }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onChangeAwesomeQueryBuilder = (immutableTree, config) => {\n      //let selectedRecord = this.state.selectedRecord || {};\n      const filterquery = QbUtils.sqlFormat(immutableTree, config);\n      const filterQueryTreeStr = QbUtils.getTree(immutableTree);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          filterquery,\n          filterQueryTreeStr\n        }\n      };\n      this.props.updateStore(updateInfo); // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\n    };\n\n    this.onComboChangeAwesomeQueryBuilder = (immutableTree, config) => {\n      const filterquery = QbUtils.sqlFormat(immutableTree, config);\n      const filterQueryTreeStr = QbUtils.getTree(immutableTree);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          filterquery,\n          filterQueryTreeStr\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.handleExecuteClick = event => {\n      //const selectedRecord = this.state.selectedRecord\n      const filterquery = this.props.Login.filterquery;\n\n      if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\n        const inputparam = {\n          component: this.props.Login.seletedFilterComponent,\n          userinfo: this.props.Login.userInfo,\n          filterquery: filterquery // selectedRecord:this.state.selectedRecord\n\n        };\n        this.props.getPatientFilterExecuteData(inputparam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLINFILTER\"\n        }));\n      }\n    };\n\n    this.handleKendoRowClick = event => {\n      let patientinfo = event.dataItem;\n      const component = this.props.Login.seletedFilterComponent;\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputparam = {\n        realFromDate: obj.fromDate,\n        realToDate: obj.toDate,\n        realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n        realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n        realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n        realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n        realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n        realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        masterData: { ...this.props.Login.masterData\n        },\n        realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n        Login: this.props.Login,\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }),\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        userinfo: this.props.Login.userInfo,\n        patientinfo: event.dataItem,\n        spatientid: event.dataItem.spatientid // selectedRecord:this.state.selectedRecord\n\n      }; // if (component[\"childFields\"]) {\n      //     const index = this.props.Login.masterIndex;\n      //     let selectedRecord = this.state.selectedMaster || {};\n      //     component[\"childFields\"].map(item => {\n      //         let data = item1[item.columnname];\n      //         if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\n      //             //combocontrol\n      //             data = { label: item1[item.sdisplaymember], value: item1[item.svaluemember] };\n      //         }\n      //         else if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\n      //             //Date picker control\n      //             data = rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, data);\n      //         }\n      //         selectedRecord[index][item.columnname] = data;\n      //     })\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: { selectedMaster: selectedRecord, loadCustomSearchFilter: false, }\n      //     }\n      //     this.props.updateStore(updateInfo);\n      // }\n      // else {\n      //     const newdata = {\n      //         label: item1[component['displaymember']],\n      //         value: item1[component['valuemember']], item: { jsondata: { ...item1, jsondata: { ...item1 } } }\n      //     };\n      //     this.onComboChange(newdata, component, component['label']);\n      // }\n\n      this.props.getPatientWiseSample(inputparam);\n    };\n\n    this.onInputChange = event => {\n      let selectedComment = this.props.Login.masterData.selectedComment || {};\n      selectedComment[event.target.name] = event.target.value;\n      const coaFileInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedComment\n        }\n      };\n      this.props.updateStore(coaFileInfo);\n    };\n\n    this.validateEsign = () => {\n      let ncontrolcode = this.props.Login.ncontrolcode;\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      let modalName = \"\";\n\n      if (ncontrolcode && ncontrolcode === editResultId) {\n        modalName = \"modalShow\";\n      } else {\n        modalName = \"openModal\";\n      }\n\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforRelease(inputParam, modalName);\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      }\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          });\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      }\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = subsamplecode;\n\n      if (subsamplecode !== undefined) {\n        //  transactionsamplecode = subsamplecode\n        transactionsamplecode.map(value => {\n          this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n            item.selected = checked;\n            this.collectData(item, checkedflag);\n            return item;\n          });\n        });\n      } else {\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      }\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (event.dataItems.length !== 0) {\n        this.state.dataResult.data.map(item => {\n          item.selected = checked;\n          return item;\n        });\n        this.selectionChange(event, 1, checked);\n      } else {\n        this.setState({\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      }\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      }\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          this.collectData(item);\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n    };\n\n    this.collectData = (item, checkedflag) => {\n      let npreregno = this.state.npreregno || [];\n      let ntransactionsamplecode = this.state.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.state.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        } // Don't Remove\n\n\n        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n          ntransactiontestcode.push(item.ntransactiontestcode);\n        }\n      } else {\n        const preregno = npreregno.filter(data => data !== item.npreregno);\n        npreregno = preregno;\n        const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = transactionsamplecode; // Don't Remove\n\n        const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\n        ntransactiontestcode = transactiontestcode;\n      }\n\n      this.setState({\n        npreregno: checkedflag === false ? [] : npreregno,\n        ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode,\n        ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\n      });\n    };\n\n    this.viewSelectedReport = filedata => {\n      delete filedata.inputData.userinfo;\n      const inputParam = {\n        inputData: {\n          releasedcoareport: filedata.inputData,\n          userinfo: this.props.Login.userInfo,\n          ncontrolCode: filedata.ncontrolCode\n        },\n        classUrl: \"release\",\n        operation: \"view\",\n        methodUrl: \"ReleasedCOAReport\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.childDataChange = selectedRecord => {\n      let isInitialRender = false;\n      this.setState({\n        selectedRecord: { ...selectedRecord\n        },\n        isInitialRender\n      });\n    };\n\n    this.onMandatoryCheck = () => {\n      const mandatoryFields = this.props.Login.loadEsignStateHandle ? [{\n        \"idsName\": \"IDS_PASSWORD\",\n        \"dataField\": \"esignpassword\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_REASON\",\n        \"dataField\": \"esignreason\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"esigncomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      } // { \"idsName\": \"IDS_CHECKAGREE\",\"dataField\": \"agree\",  \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"checkbox\" },\n      ] : this.props.Login.isAddReleaseTestAttachment ? [{\n        \"idsName\": \"IDS_FILE\",\n        \"dataField\": \"sfilename\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"file\"\n      } //  { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\n      ] : this.props.Login.isAddReleaseTestComment ? this.state.selectedRecord && this.state.selectedRecord[\"ncommentsubtypecode\"] && this.state.selectedRecord[\"ncommentsubtypecode\"].value === 3 ? [{\n        \"idsName\": \"IDS_COMMENTNAME\",\n        \"dataField\": \"scommentsubtype\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_ABBREVIATIONNAME\",\n        \"dataField\": \"spredefinedname\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }] : [{\n        \"idsName\": \"IDS_COMMENTNAME\",\n        \"dataField\": \"scommentsubtype\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_COMMENTS\",\n        \"dataField\": \"scomments\",\n        \"mandatoryLabel\": \"IDS_ENTER\",\n        \"controlType\": \"textbox\"\n      }, {\n        \"idsName\": \"IDS_ARNUMBER\",\n        \"dataField\": \"sarno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }, {\n        \"idsName\": \"IDS_TESTSYNONYM\",\n        \"dataField\": \"stestsynonym\",\n        \"mandatoryLabel\": \"IDS_CHOOSE\",\n        \"controlType\": \"selectbox\"\n      }] : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }) && this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_REPORTTEMPLATE\",\n        \"dataField\": \"nreporttemplatecode\",\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }] : [];\n      {\n        this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) && this.props.Login.masterData && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE && this.props.Login.masterData && this.props.Login.masterData.reportTemplateList && this.props.Login.masterData.reportTemplateList.length === 0 ? toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTTEMPLATEISNOTFOUND\"\n        })) : onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields, this.props.Login.loadEsignStateHandle ? this.validateEsign : this.props.Login.isAddReleaseTestAttachment ? this.onSaveTestAttachment : this.props.Login.isAddReleaseTestComment ? this.onSaveTestComment : this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) ? this.onSaveModalClick : \"\", this.props.Login.screenName === this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }) ? this.props.Login.loadEsign : this.props.Login.loadEsignStateHandle);\n      }\n    };\n\n    this.onSaveTestAttachment = (saveType, formRef) => {\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const userInfo = this.props.Login.userInfo;\n      let isFileEdited = transactionStatus.NO;\n      let fileArray = [];\n\n      if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n        if (this.state.operation === 'create') {\n          acceptedFiles.forEach((file, index) => {\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData[\"nformcode\"] = userInfo.nformcode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n            tempData[\"nusercode\"] = userInfo.nusercode;\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n            tempData[\"jsondata\"] = {\n              stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n              susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n              suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n              sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n            };\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            fileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          acceptedFiles.forEach((file, index) => {\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\n            tempData[\"nformcode\"] = userInfo.nformcode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n            tempData[\"nusercode\"] = userInfo.nusercode;\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n            tempData[\"jsondata\"] = {\n              stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n              susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n              suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n              sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n            };\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            formData.append(\"filecount\", acceptedFiles.length);\n            isFileEdited = transactionStatus.YES;\n            fileArray.push(tempData);\n          });\n        }\n      } else {\n        let tempData = {};\n        tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\n        tempData[\"nformcode\"] = userInfo.nformcode;\n        tempData[\"npreregno\"] = selectedRecord.npreregno.value;\n        tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n        tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n        tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n        tempData[\"nusercode\"] = userInfo.nusercode;\n        tempData[\"nuserrolecode\"] = userInfo.nuserrole;\n        tempData[\"jsondata\"] = {\n          stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\n          susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\n          suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\n          nfilesize: selectedRecord.size,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\n          slinkname: \"\",\n          sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n          sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\n        };\n        fileArray.push(tempData);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"releasetestattachment\", JSON.stringify(fileArray));\n      formData.append(\"nattachmenttypecode\", attachmentType.FTP);\n      formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\n      formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\n      formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n        sformname: Lims_JSON_stringify(userInfo.sformname),\n        smodulename: Lims_JSON_stringify(userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n      }));\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          },\n          doAction: \"editReleaseTestAttachment\",\n          formData: formData,\n          isFileupload: true,\n          operation: this.props.Login.operation,\n          classUrl: \"release\",\n          saveType: saveType,\n          formRef: formRef,\n          methodUrl: \"ReleaseTestAttachment\",\n          selectedRecord: this.state.selectedRecord,\n          screenName: this.props.Login.screenName,\n          masterData: this.props.Login.masterData\n        }\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            screenData: {\n              inputParam\n            },\n            loadEsignStateHandle: true,\n            ncontrolcode: this.props.Login.ncontrolCode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.onSaveReleaseTestAttachment(inputParam);\n      }\n    };\n\n    this.deleteReleaseTestAttachment = deleteParam => {\n      const url = \"release/deleteReleaseTestAttachment\";\n\n      if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n        let releasetestattachment = {\n          \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\n          \"npreregno\": deleteParam.selectedRecord.npreregno,\n          \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\n          \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\n          \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\n        };\n        let inputParam = {\n          inputData: {\n            releasetestattachment,\n            url,\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.Login.screenName,\n            masterData: this.props.Login.masterData,\n            doAction: \"deleteReleaseTestAttachment\",\n            selectedRecord: this.state.selectedRecord\n          }\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              screenData: {\n                inputParam\n              },\n              loadEsignStateHandle: true,\n              ncontrolcode: deleteParam.ncontrolCode\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.onDeleteReleaseTestAttachment(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.onSaveTestComment = (saveType, formRef) => {\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const userInfo = this.props.Login.userInfo;\n      const inputData = {};\n      let commentArray = [];\n      let comment = {};\n      comment[\"nreleasetestcommentcode\"] = selectedRecord.selectedReleaseTestComment && selectedRecord.selectedReleaseTestComment.nreleasetestcommentcode;\n      comment[\"nformcode\"] = userInfo.nformcode;\n      comment[\"npreregno\"] = selectedRecord.npreregno.value;\n      comment[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\n      comment[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\n      comment[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\n      comment[\"nusercode\"] = userInfo.nusercode;\n      comment[\"nuserrolecode\"] = userInfo.nuserrole;\n      comment[\"ncommentsubtypecode\"] = selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.value;\n      comment[\"nsampletestcommentscode\"] = selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.value !== \"\" ? selectedRecord.nsampletestcommentscode.value : '-1';\n      comment[\"jsondata\"] = {\n        scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\n        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\n        stestsynonym: selectedRecord.stestsynonym,\n        scommentsubtype: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.label,\n        spredefinedname: selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.label !== \"\" ? selectedRecord.nsampletestcommentscode.label : '-',\n        ncommentsubtypecode: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode,\n        nsampletestcommentscode: selectedRecord.nsampletestcommentscode ? selectedRecord.nsampletestcommentscode : '-'\n      };\n      comment[\"nsamplecommentscode\"] = selectedRecord.nsamplecommentscode ? selectedRecord.nsamplecommentscode.value : -1;\n      commentArray.push(comment);\n      inputData[\"testcomment\"] = commentArray; // }\n\n      formData.append(\"userinfo\", JSON.stringify({ ...userInfo,\n        sformname: Lims_JSON_stringify(userInfo.sformname),\n        smodulename: Lims_JSON_stringify(userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n      }));\n      formData.append(\"releasetestcomment\", JSON.stringify(commentArray));\n      formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...userInfo,\n            sformname: Lims_JSON_stringify(userInfo.sformname),\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\n          },\n          doAction: \"editReleaseTestComment\",\n          formData: formData,\n          operation: this.props.Login.operation,\n          classUrl: \"release\",\n          saveType: saveType,\n          formRef: formRef,\n          methodUrl: \"ReleaseTestComment\",\n          selectedRecord: this.state.selectedRecord,\n          screenName: this.props.Login.screenName,\n          masterData: this.props.Login.masterData\n        }\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsignStateHandle: true,\n            screenData: {\n              inputParam\n            },\n            ncontrolcode: this.props.Login.ncontrolCode\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.onSaveReleaseTestComment(inputParam);\n      }\n    };\n\n    this.deleteReleaseTestComment = deleteParam => {\n      const url = \"release/deleteReleaseTestComment\";\n\n      if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\n        let releasetestcomment = {\n          \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\n          \"npreregno\": deleteParam.selectedRecord.npreregno,\n          \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\n          \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\n          \"nreleasetestcommentcode\": deleteParam.selectedRecord.nreleasetestcommentcode\n        };\n        let inputParam = {\n          inputData: {\n            releasetestcomment,\n            url,\n            userinfo: this.props.Login.userInfo,\n            screenName: this.props.Login.screenName,\n            masterData: this.props.Login.masterData,\n            doAction: \"deleteReleaseTestComment\",\n            selectedRecord: this.state.selectedRecord\n          }\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsignStateHandle: true,\n              screenData: {\n                inputParam\n              },\n              ncontrolcode: deleteParam.ncontrolCode\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.onDeleteReleaseTestComment(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTDRAFTCORRECTEDRECORD\"\n        }));\n      }\n    };\n\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const outsourceFileDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const reportInfoDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const correctionDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const versionHistoryDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const preliminaryHistoryDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const testAttachmentDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const testCommentDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const sampleGridDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      outsourceFileDataState: outsourceFileDataState,\n      reportInfoDataState: reportInfoDataState,\n      correctionDataState: correctionDataState,\n      versionHistoryDataState: versionHistoryDataState,\n      preliminaryHistoryDataState: preliminaryHistoryDataState,\n      childDataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      ProjecttypeList: [],\n      ProjectMasterList: [],\n      SectionList: [],\n      ReporttypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: [],\n      stateDynamicDesign: [],\n      sidebarview: false,\n      testAttachmentDataState: testAttachmentDataState,\n      testCommentDataState: testCommentDataState,\n      sampleGridDataState: sampleGridDataState,\n      splitChangeWidthPercentage: 28.6,\n      skip: 0,\n      take: this.props.Login.settings && parseInt(this.props.Login.settings[3]) // ,\n      // nmultiplesampleinsinglerelease: this.props.Login.masterData.realReportTypeValue && \n      //     this.props.Login.masterData.realReportTypeValue.nmultiplesampleinsinglerelease\n\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    const editReportParam = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"nreportinforeleasecode\",\n      operation: \"update\",\n      //selectedId:,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: -1,\n      masterData: this.props.Login.masterData,\n      selectedId: this.props.Login.selectedId\n    };\n    this.feildsForGrid = [// { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },  \n    {\n      \"idsName\": \"IDS_SCREEN\",\n      \"dataField\": \"testname\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_FIELDNAME\",\n      \"dataField\": \"sreportfieldname\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_VALUE\",\n      \"dataField\": \"sreportfieldvalue\",\n      \"width\": \"100px\"\n    }];\n    this.fieldsForReleasedReportGrid = [{\n      \"idsName\": \"IDS_RELEASENO\",\n      \"dataField\": \"sreleaseno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_VERSIONNO\",\n      \"dataField\": \"nversionno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_ORDERID\",\n      \"dataField\": \"sexternalorderid\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDSITE\",\n      \"dataField\": \"ssitename\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDDATE\",\n      \"dataField\": \"sreleasedate\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDUSER\",\n      \"dataField\": \"susername\",\n      \"width\": \"200px\"\n    }];\n    const mandatoryFields = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_DESCRIPTION\",\n      \"dataField\": \"sreportcomments\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    } //  { \"mandatory\": true, \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\n    // { \"mandatory\": true, \"idsName\": \"IDS_INTERFACETYPE\", \"dataField\": \"ninterfacetypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n    ];\n    let resultCorrectionColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"150px\"\n    }];\n    {\n      this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && resultCorrectionColumnList.push({\n        \"idsName\": \"IDS_SAMPLEARNO\",\n        \"dataField\": \"ssamplearno\",\n        \"width\": \"150px\"\n      });\n    }\n    resultCorrectionColumnList.push({\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETERNAME\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_FINALRESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_RESULTFLAG\",\n      \"dataField\": \"sgradename\",\n      \"width\": \"150px\",\n      \"fieldType\": \"gradeColumn\"\n    }, {\n      \"idsName\": \"IDS_UNIT\",\n      \"dataField\": \"sunitname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_RESULTACCURACY\",\n      \"dataField\": \"sresultaccuracyname\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_LOWA\",\n      \"dataField\": \"smina\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_LOWB\",\n      \"dataField\": \"sminb\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_HIGHA\",\n      \"dataField\": \"smaxa\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_HIGHB\",\n      \"dataField\": \"smaxb\",\n      \"width\": \"150px\"\n    }\n    /* { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"sminlod\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"smaxlod\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"sminloq\", \"width\": \"150px\" },\r\n     { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"smaxloq\", \"width\": \"150px\" }*/\n    );\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let filePath = \"\";\n\n    if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\n      filePath = reportUrl();\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    } // let userStatusCSS = \"\";\n    // let activeIconCSS = \"fa fa-check\";\n    // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\n    //     userStatusCSS = \"outline-secondary\";\n    //     activeIconCSS = \"\";\n    // }\n    // else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\n    //     userStatusCSS = \"outline-success\";\n    // }\n    // else {\n    //     userStatusCSS = \"outline-Final\";\n    // }\n\n\n    const filterParam = {\n      inputListName: \"ReleaseHistory\",\n      selectedObject: \"selectedReleaseHistory\",\n      primaryKeyField: \"ncoaparentcode\",\n      fetchUrl: \"release/getReleaseHistory\",\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      fecthInputObject: {\n        isSearch: true,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        masterData: this.props.Login.masterData,\n        searchFieldList: this.searchFieldList,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      }\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_REPORTTYPE\",\n      \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" : this.props.Login.masterData.ReportTypeValue ? this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get('AddSamples').ncontrolcode;\n    const preliminaryId = this.state.controlMap.has(\"PreliminaryReport\") && this.state.controlMap.get(\"PreliminaryReport\").ncontrolcode;\n    const previewId = this.state.controlMap.has(\"PreviewFinalReport\") && this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\n    const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n    const regenerateId = this.state.controlMap.has(\"RegenerateRelease\") && this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\n    const viewreportId = this.state.controlMap.has(\"ViewReportRelease\") && this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\n    const sendtoportalId = this.state.controlMap.has(\"SendToPortal\") && this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"AppendSamples\") && this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"RemoveSamples\") && this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\n    const patientinfoId = this.state.controlMap.has(\"PatientInfo\") && this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\n    const ResultCorrectionId = this.state.controlMap.has(\"ResultCorrection\") && this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\n    const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n    const editcommentsId = this.state.controlMap.has(\"EditComment\") && this.state.controlMap.get(\"EditComment\").ncontrolcode;\n    const correctionId = this.state.controlMap.has(\"Correction\") && this.state.controlMap.get(\"Correction\").ncontrolcode;\n    const releaseHistoryId = this.state.controlMap.has(\"ReleaseHistory\") && this.state.controlMap.get(\"ReleaseHistory\").ncontrolcode;\n    const downloadVersionHist = this.state.controlMap.has(\"DownloadReleaseVersion\") && this.state.controlMap.get(\"DownloadReleaseVersion\").ncontrolcode;\n    const downloadReportId = this.state.controlMap.has(\"DownloadReport\") && this.state.controlMap.get(\"DownloadReport\").ncontrolcode;\n    const reportHistoryId = this.state.controlMap.has(\"ReportHistory\") && this.state.controlMap.get(\"ReportHistory\").ncontrolcode;\n    const releaseTestAttachmentId = this.state.controlMap.has(\"ReleaseTestAttachment\") && this.state.controlMap.get(\"ReleaseTestAttachment\").ncontrolcode;\n    const releaseTestCommentId = this.state.controlMap.has(\"ReleaseTestComment\") && this.state.controlMap.get(\"ReleaseTestComment\").ncontrolcode;\n    const releaseReportHistoryId = this.state.controlMap.has(\"ReleaseReportHistory\") && this.state.controlMap.get(\"ReleaseReportHistory\").ncontrolcode;\n    const generateid = this.state.controlMap.has(\"Generate\") && this.state.controlMap.get(\"Generate\").ncontrolcode;\n    const editParam = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"ntransactionresultcode\",\n      operation: \"update\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editResultId,\n      masterData: this.props.Login.masterData\n    };\n    const ReleaseMasterDataParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].npreregno || \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    const ApprovedModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      Login: this.props.Login,\n      // selectedRecord: { ...this.props.Login.selectedRecord },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttype': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        // 'ncoareporttypecode': 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        })\n      },\n      DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem: this.state.DynamicDefaultStructureItem,\n      extractedColumnList: this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\n    };\n    const RemoveModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n        'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\n        ncontrolCode: deleteId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_REMOVESAMPLES\"\n        }),\n        spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\n        patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\n      }\n    };\n    const EditModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneededit': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\n        'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\n        ncontrolCode: editId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_EDITSAMPLES\"\n        }),\n        nsectioncode: this.props.Login.nsectioncode,\n        spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\n        patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\n      },\n      DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem: this.state.DynamicDefaultStructureItem,\n      extractedColumnList: this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\n    };\n    const jsonParam = {\n      screenName: \"IDS_RELEASE\",\n      operation: \"update\",\n      primaryKeyName: \"ncoaparentcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      selectedReleaseHistory: this.props.Login.masterData.selectedReleaseHistory\n    };\n    const ResultCorrectionParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\n        ncontrolCode: ResultCorrectionId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RESULTCORRECTION\"\n        })\n      }\n    };\n    const reportSubFields = [{\n      [designProperties.VALUE]: \"susername\",\n      [designProperties.LABEL]: \"IDS_USERNAME\"\n    }, {\n      [designProperties.VALUE]: \"sgenerateddate\",\n      [designProperties.LABEL]: \"IDS_GENERATEDDATE\"\n    }, {\n      [designProperties.VALUE]: \"sversionno\",\n      [designProperties.LABEL]: \"IDS_VERSIONNO\"\n    }, {\n      [designProperties.VALUE]: \"sreporttemplatename\",\n      [designProperties.LABEL]: \"IDS_REPORTTEMPLATE\"\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1182,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1185,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      className: \"parent-port-height\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1257,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(SplitterLayout, {\n      borderColor: \"#999\",\n      primaryIndex: 1,\n      percentage: true,\n      secondaryInitialSize: this.state.splitChangeWidthPercentage,\n      primaryMinSize: 30,\n      secondaryMinSize: 20,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1258,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n      listMasterShowIcon: 1,\n      clickIconGroup: true,\n      splitChangeWidthPercentage: this.state.splitChangeWidthPercentage,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory || [],\n      selectedMaster: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory : undefined // selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory !== undefined ? [this.props.Login.masterData.selectedReleaseHistory] : undefined}\n      ,\n      primaryKeyField: \"ncoaparentcode\",\n      filterColumnData: this.props.filterColumnData,\n      getMasterDetail: (ReleaseSample, status) => this.props.getReleasedDataDetails({ ...ReleaseMasterDataParam,\n        ...ReleaseSample\n      }, status) // getMasterDetail={this.props.getReleasedDataDetails}\n      // inputParam={{\n      // ...this.state.subSampleGetParam,\n      // searchTestRef: this.searchTestRef,\n      // searchSubSampleRef: this.searchSubSampleRef,\n      // testskip: this.state.testskip,\n      // subsampleskip: this.state.subsampleskip,\n      // resultDataState: this.state.resultDataState,\n      // activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\n      // }}\n      ,\n      selectionList: this.props.Login.masterData && this.props.Login.masterData.transactionStatusSelectionList && this.props.Login.masterData.transactionStatusSelectionList.length > 0 ? this.props.Login.masterData.transactionStatusSelectionList : [] // hideQuickSearch={true}\n      ,\n      selectionColorField: \"scolorhexcode\",\n      mainField: \"sreportno\",\n      showStatusLink: true,\n      showStatusName: true,\n      statusFieldName: \"stransdisplaystatus\",\n      statusField: \"ntransactionstatus\",\n      selectedListName: \"selectedReleaseHistory\",\n      searchListName: \"searchedData\",\n      searchRef: this.searchRef,\n      objectName: \"releaseno\",\n      listName: \"IDS_RELEASENO\",\n      selectionField: \"ntransactionstatus\",\n      selectionFieldName: \"stransdisplaystatus\",\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      subFields: reportSubFields,\n      moreField: [],\n      needMultiSelect: this.props.Login.settings && this.props.Login.settings[50] ? parseInt(this.props.Login.settings[50]) === transactionStatus.YES ? true : false : false,\n      showStatusBlink: true,\n      callCloseFunction: true,\n      filterParam: filterParam,\n      subFieldsLabel: true,\n      handlePageChange: this.handleReportNoPageChange,\n      skip: this.state.skip,\n      take: this.state.take,\n      childTabsKey: [\"selectedReleaseHistory\", \"releaseno\", \"ReleasedSampleDetails\", \"ReleasedSubSampleDetails\", \"ReleasedTestDetails\"],\n      actionIcons: [],\n      needFilter: true,\n      commonActions: /*#__PURE__*/React.createElement(ProductList, {\n        className: \"d-flex product-category float-right icon-group-wrap\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1326,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-icon-rounded btn-circle solid-blue\",\n        role: \"button\",\n        hidden: this.state.userRoleControlRights.indexOf(releaseId) === -1,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_ADD\"\n        }) // data-for=\"tooltip_list_wrap\"\n        ,\n        onClick: () => this.getApprovedSample(ApprovedModalParam, releaseId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1327,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPlus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1332,\n          columnNumber: 41\n        }\n      })), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn btn-circle outline-grey ml-2\",\n        variant: \"link\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REFRESH\"\n        }) //   data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: this.reloadData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1334,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        style: {\n          \"width\": \"0.6!important\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1338,\n          columnNumber: 45\n        }\n      }))),\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          ReportType: this.state.ReporttypeList || [],\n          ReportTypeValue: this.props.Login.masterData.ReportTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {} //   UserSection={this.state.UserSectionList || []}\n          //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\n          //   Test={this.state.TestList || []}\n          //  TestValue={this.props.Login.masterData.TestValue || []}\n          ,\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1344,\n            columnNumber: 58\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1266,\n        columnNumber: 29\n      }\n    }), this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1386,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1387,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1388,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1397,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1409,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(patientinfoId) === -1,\n      onClick: () => this.patientInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1414,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faInfoCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1421,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode !== reportCOAType.SAMPLEWISE && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode !== reportCOAType.SECTIONWISE &&\n    /*#__PURE__*/\n    // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      onClick: () => this.props.getEditApprovedSample(EditModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1461,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1467,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode !== reportCOAType.SAMPLEWISE && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode !== reportCOAType.SECTIONWISE &&\n    /*#__PURE__*/\n    // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\n    //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.props.getRemoveApprovedSample(RemoveModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1481,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1487,\n        columnNumber: 65\n      }\n    })),\n    /*#__PURE__*/\n    // (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESULTCORRECTION\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1,\n      onClick: () => this.props.getResultCorrectionData(ResultCorrectionParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1531,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ResultCorrection, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1537,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTHISTORY\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(reportHistoryId) === -1,\n      onClick: () => this.reportHistoryInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1563,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ReportHistory, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custon_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1569,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseReportHistoryId) === -1,\n      onClick: () => this.releaseReportHistory(releaseReportHistoryId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1592,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1599,\n        columnNumber: 61\n      }\n    })),\n    /*#__PURE__*/\n    // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \n    //  this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT ?\n    React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTCORRECTION\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(editcommentsId) === -1,\n      onClick: () => this.reportcomments('IDS_REPORTCORRECTION'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1605,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1611,\n        columnNumber: 65\n      }\n    })) // : \"\"\n    , /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseTestAttachmentId) === -1,\n      onClick: () => this.releaseTestAttachmentData(\"IDS_RELEASETESTATTACHMENT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1622,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReleaseTestAttachmentIcon, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1629,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTCOMMENT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseTestCommentId) === -1,\n      onClick: () => this.releaseTestAttachmentData(\"IDS_RELEASETESTCOMMENT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1639,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(ReleaseTestCommentIcon, {\n      width: \"20px\",\n      height: \"20px\",\n      className: \"custom_icons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1646,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(CustomPopover, {\n      nav: true,\n      data: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(previewId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1671,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_PREVIEWREPORT\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.previewReport(previewId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1672,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(Preview, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1677,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(preliminaryId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1680,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n          id: \"IDS_PRELIMINARYREPORT\"\n        }),\n        \"data-place\": \"left\" // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\n        ,\n        onClick: () => this.preliminaryReport(preliminaryId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1681,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(PreliminaryReport, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1689,\n          columnNumber: 85\n        }\n      }), \" \", this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode] : this.props.intl.formatMessage({\n        id: \"IDS_PRELIMINARYREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(downloadId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1694,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        // className=\"btn btn-circle outline-grey ml-2\"\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_GENERATEFILE\"\n        }),\n        \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n        ,\n        onClick: () => {\n          this.downloadReleasedValidation(downloadId);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1695,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(Generate, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1702,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(correctionId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1705,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_CORRECTION\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.CorrectionStatus(correctionId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1706,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(Correction, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1710,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(regenerateId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1713,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_REGENERATEFILE\"\n        }),\n        \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"                                                                                    \n        ,\n        onClick: () => this.regenerateReleasedFile(regenerateId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1714,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(ReGenerate, {\n        className: \"custom_icons\",\n        width: \"20\",\n        height: \"20\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1719,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(downloadReportId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1722,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_DOWNLOADFINALREPORT\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.downloadHistory(downloadReportId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1723,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(DownloadCertificate, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1727,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_DOWNLOADFINALREPORT\"\n      }))), /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list\",\n        hidden: this.state.userRoleControlRights.indexOf(generateid) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1731,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\",\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_PORTALSYNC\"\n        }),\n        \"data-place\": \"left\",\n        onClick: () => this.generatereport(generateid),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1732,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSync,\n        className: \"mr-2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1736,\n          columnNumber: 85\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_PORTALSYNC\"\n      }))), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES && /*#__PURE__*/React.createElement(ListGroup.Item, {\n        as: \"li\",\n        className: \"btn_list \",\n        hidden: this.state.userRoleControlRights.indexOf(sendtoportalId) === -1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1741,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(Nav.Link, {\n        className: \"add-txt-btn blue-text link_icons nav-link ml-2\" //   data-for=\"tooltip_list_wrap\"\n        ,\n        \"data-tip\": this.props.intl.formatMessage({\n          id: \"IDS_SENDTOPORTAL\"\n        }),\n        onClick: () => this.sendToPortal(sendtoportalId),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1742,\n          columnNumber: 89\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faStore,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1747,\n          columnNumber: 93\n        }\n      }), \" \", this.props.intl.formatMessage({\n        id: \"IDS_SENDTOPORTAL\"\n      })))),\n      Button: false,\n      hideIcon: true,\n      btnClasses: \"btn-circle btn_grey ml-2\",\n      textKey: \"value\",\n      icon: faChevronCircleDown // toolTip={this.props.intl.formatMessage({ id: \"IDS_CONFIGURE\" })}\n      ,\n      dynamicButton: value => this.actionMethod(value),\n      userRoleControlRights: this.state.userRoleControlRights,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1667,\n        columnNumber: 62\n      }\n    })))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1767,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '525px',\n      gridTop: '10px' //   isActionRequired={true}\n      //   isToolBarRequired={true}\n      //  isExpandRequired={true}\n      //   isDownloadRequired={true}\n      ,\n      isCheckBoxRequired: false,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.ReleasedSubSampleDetails,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.ReleasedTestDetails,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      selectionChange: this.selectionChange,\n      releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1779,\n        columnNumber: 45\n      }\n    })))) : \"\")))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeDocModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1846,\n        columnNumber: 25\n      }\n    }) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.state.openModal,\n      size: this.props.Login.loadEsign || this.props.Login.loadEsignStateHandle ? \"lg\" : \"xl\",\n      closeModal: this.closeModal,\n      inputParam: this.props.Login.inputParam,\n      mandatoryFields: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? mandatoryFields : \"\",\n      screenName: this.props.Login.loadEsignStateHandle ? this.props.intl.formatMessage({\n        id: \"IDS_ESIGN\"\n      }) : this.props.Login.isPatientDetails ? this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }) : this.props.Login.isPatientReports ? this.props.intl.formatMessage({\n        id: \"IDS_REPORTHISTORY\"\n      }) : this.props.Login.isReleaseTestAttachment ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }) : this.props.Login.isReleaseTestComment ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTCOMMENT\"\n      }) : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) : this.props.Login.screenName,\n      onSaveClick: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? this.downloadReleasedFile : this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle || this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }) ? this.onMandatoryCheck : this.onSaveModalClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {} //noSave={this.props.Login.openModalTitle=='versionhistory' ? true : false}\n      ,\n      hideSave: this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" || this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) || this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" ? true : this.props.Login.FilterQueryBuilder ? true : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? true : (this.props.Login.isReleaseTestAttachment || this.props.Login.isReleaseTestComment) && !this.props.Login.loadEsignStateHandle ? true : this.props.Login.hideSave,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1882,\n          columnNumber: 29\n        }\n      }) : this.props.Login.loadEsignStateHandle ? /*#__PURE__*/React.createElement(EsignStateHandle, {\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        childDataChange: this.childDataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1889,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) ? /*#__PURE__*/React.createElement(ReleaseReportHistory, {\n        operation: this.props.Login.operation // designData={this.props.Login.designData || {}}\n        ,\n        inputParam: this.props.Login.inputParam,\n        dataResult: this.props.Login.masterData //    this.props.Login.dataResult || [] :\n        //   this.props.Login.dataResult || {}}\n        //onChangeToggle={this.onChangeToggle}\n        ,\n        settings: this.props.Login.settings,\n        viewDownloadFile: this.viewDownloadFile,\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1896,\n          columnNumber: 37\n        }\n      }) : this.props.Login.screenName === \"IDS_PATIENTSEARCH\" ? /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: this.props.Login.gridColumns || [],\n        filterData: this.props.Login.lstPatient,\n        onRowClick: this.handleKendoRowClick,\n        handleExecuteClick: this.handleExecuteClick,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1910,\n          columnNumber: 41\n        }\n      }) : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? /*#__PURE__*/React.createElement(VersionHistGrid, {\n        versionHistory: this.props.Login.masterData.versionHistory,\n        isExportExcelRequired: false,\n        dataState: this.state.versionHistoryDataState,\n        dataResult: process(this.props.Login.masterData && this.props.Login.masterData.versionHistory || [], this.state.versionHistoryDataState),\n        dataStateChange: this.versionHistoryDataStateChange,\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        viewDownloadFile: this.viewDownloadFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1925,\n          columnNumber: 45\n        }\n      }) : this.props.Login.isPatientDetails ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length === 1 ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0 ? this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {},\n        SingleItem: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1938,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(SampleGridTab, {\n        userInfo: this.props.Login.masterData.userInfo || {},\n        GridData: this.props.Login.masterData.ReleasedSampleDetails || [],\n        masterData: this.props.Login.masterData,\n        inputParam: this.props.Login.inputParam,\n        dataState: this.state.sampleGridDataState,\n        dataStateChange: this.sampleGridDataStateChange,\n        extractedColumnList: this.gridfillingColumn(this.state.SingleItem) || [],\n        detailedFieldList: [],\n        primaryKeyField: \"npreregno\",\n        expandField: \"expanded\",\n        screenName: \"IDS_PATIENTINFO\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1947,\n          columnNumber: 49\n        }\n      }) : this.props.Login.isPatientReports && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid // key=\"nreleaseoutsourceattachcode\"\n      , {\n        primaryKeyField: \"nreleaseoutsourceattachcode\",\n        data: this.props.Login.masterData.PatientReports || [],\n        dataResult: process(this.props.Login.masterData.PatientReports && this.props.Login.masterData.PatientReports || [], this.state.outsourceFileDataState),\n        dataState: this.state.outsourceFileDataState,\n        isExportExcelRequired: false,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.fieldsForReleasedReportGrid,\n        selectedId: this.props.Login.selectedId,\n        pageable: true,\n        dataStateChange: this.outsourceFileDataStateChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'PatientReports',\n        viewDownloadFile: this.viewSelectedReport,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1961,\n          columnNumber: 53\n        }\n      }) : this.props.Login.isReleaseTestAttachment && this.props.Login.openModal ? /*#__PURE__*/React.createElement(ReleaseTestAttachment, {\n        ReleaseTestAttachmentDetails: this.props.Login.masterData.ReleaseTestAttachmentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestAttachment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_RELEASETESTATTACHMENT\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        isDataGrid: this.props.Login.isDataGrid,\n        selectedRecord: this.state.selectedRecord,\n        operation: this.props.Login.operation,\n        childDataChange: this.childDataChange,\n        deleteRecord: this.deleteReleaseTestAttachment,\n        dataState: this.state.testAttachmentDataState,\n        dataStateChange: this.testAttachmentDataStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1982,\n          columnNumber: 57\n        }\n      }) : this.props.Login.isAddReleaseTestAttachment ? /*#__PURE__*/React.createElement(AddReleaseTestAttachment, {\n        ReleaseTestAttachmentDetails: this.props.Login.masterData.ReleaseTestAttachmentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestAttachment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"ReleaseTestAttachment\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        isDataGrid: this.props.Login.isDataGrid,\n        selectedRecord: this.state.selectedRecord,\n        operation: this.props.Login.operation,\n        childDataChange: this.childDataChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2008,\n          columnNumber: 61\n        }\n      }) : this.props.Login.isReleaseTestComment && this.props.Login.openModal ? /*#__PURE__*/React.createElement(ReleaseTestComment, {\n        ReleaseTestCommentDetails: this.props.Login.masterData.ReleaseTestCommentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestComment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"IDS_RELEASETESTCOMMENT\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        CommentSubType: this.props.Login.masterData.CommentSubType,\n        deleteRecord: this.deleteReleaseTestComment,\n        dataState: this.state.testCommentDataState,\n        dataStateChange: this.testCommentDataStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2031,\n          columnNumber: 65\n        }\n      }) : this.props.Login.isAddReleaseTestComment ? /*#__PURE__*/React.createElement(AddReleaseTestComment, {\n        ReleaseTestCommentDetails: this.props.Login.masterData.ReleaseTestCommentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestComment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"ReleaseTestComment\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        CommentSubType: this.props.Login.masterData.CommentSubType,\n        selectedRecord: this.state.selectedRecord,\n        childDataChange: this.childDataChange,\n        operation: this.props.Login.operation,\n        SampleTestComments: this.props.Login.SampleTestComments,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2054,\n          columnNumber: 69\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"reportinforeleasecode\",\n        primaryKeyField: \"nreportinforeleasecode\",\n        data: this.props.Login.masterData.reportinforelease || [],\n        dataResult: process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState),\n        dataState: this.state.reportInfoDataState //dataResult={this.props.selectedWorklist || []}\n        //expandField=\"expanded\"\n        ,\n        isExportExcelRequired: false //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\n        ,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.feildsForGrid,\n        detailedFieldList: this.props.detailedFieldList,\n        editParam: editReportParam,\n        selectedId: this.props.Login.selectedId,\n        fetchRecord: this.props.fetchReportInfoReleaseById,\n        pageable: true,\n        dataStateChange: this.reportInfoDataChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'ReportComment' // actionIcons={[{\n        //     title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\n        //     controlname: \"faEye\",\n        //     objectName: \"ExceptionLogs\",\n        //     hidden: -1 === -1,\n        //    onClick: (viewSample) => this.props.viewSample(viewSample)\n        // }]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2078,\n          columnNumber: 73\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2111,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2112,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        name: \"sreportcomments\",\n        type: \"text\",\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        value: this.state.selectedRecord[\"sreportcomments\"] ? this.state.selectedRecord[\"sreportcomments\"] : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: 255,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2113,\n          columnNumber: 85\n        }\n      }))) : this.props.Login.FilterQueryBuilder ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2129,\n          columnNumber: 74\n        }\n      }, /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onComboChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: [],\n        filterData: this.props.Login.lstPatient || [] //onRowClick={this.handleKendoRowClick}\n        //handleExecuteClick={this.handleExecuteClick}\n        ,\n        userInfo: this.props.Login.userInfo,\n        static: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2130,\n          columnNumber: 76\n        }\n      }), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2146,\n          columnNumber: 74\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.handleExecuteClicks(false),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2147,\n          columnNumber: 76\n        }\n      }, /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_EXECUTE\",\n        defaultMessage: \"Execute\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2149,\n          columnNumber: 80\n        }\n      }))))) : /*#__PURE__*/React.createElement(React.Fragment, null, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && // //  this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\n      // //  (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\n      // this.props.Login.masterData.realReportTypeValue\n      // && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\n      //     this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\n      // //this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\n      this.props.Login.isDeletePopup !== true && //this.props.Login.isComboCheck !== true &&\n      //this.props.Login.isEditPopup === true &&\n      this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE &&\n      /*#__PURE__*/\n      // this.state.DynamicReportFilterTypeItem && this.state.DynamicReportFilterTypeItem.length>0 &&\n      React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2177,\n          columnNumber: 87\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2178,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.openFilterQuery(),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2179,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faSearch,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2180,\n          columnNumber: 97\n        }\n      }), \" \"), /*#__PURE__*/React.createElement(Button, {\n        className: \"btn-user btn-primary-blue\",\n        onClick: () => this.handleExecuteClicks(true),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2183,\n          columnNumber: 93\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2184,\n          columnNumber: 97\n        }\n      }), \" \", /*#__PURE__*/React.createElement(FormattedMessage, {\n        id: \"IDS_CLEARFILTER\",\n        defaultMessage: \"Clear Filter\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2185,\n          columnNumber: 97\n        }\n      }))), /*#__PURE__*/React.createElement(Col, {\n        md: 3,\n        className: \"pb-4\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2188,\n          columnNumber: 93\n        }\n      }, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_EDITSAMPLES\"\n      }) && /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nreporttemplatecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_REPORTTEMPLATE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.masterData.reportTemplateList || [],\n        value: this.state.selectedRecord[\"nreporttemplatecode\"] || \"\",\n        isMandatory: true,\n        isMulti: false,\n        isClearable: false,\n        isSearchable: true // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\n        ,\n        closeMenuOnSelect: true,\n        onChange: event => this.onComboChange(event, \"nreporttemplatecode\"),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2190,\n          columnNumber: 97\n        }\n      })))) // <Col md={4}>\n      //     <FormSelectSearch\n      //         name={\"nprojecttypecode\"}\n      //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\n      //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\n      //         options={this.props.Login.ProjectTypeList}\n      //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\n      //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\n      //         isMandatory={true}\n      //         isMulti={false}\n      //         isSearchable={true}\n      //         //  isDisabled={this.props.Login.isEditPopup === true ? true : false}\n      //         closeMenuOnSelect={true}\n      //         alphabeticalSort={true}\n      //         onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\n      //     />\n      // </Col>\n      , /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2322,\n          columnNumber: 82\n        }\n      }, this.props.Login.ReportmodalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n        modalShow: this.props.Login.ReportmodalShow,\n        closeModal: this.closeModalShow,\n        onSaveClick: this.onSaveModalClick,\n        validateEsign: this.validateEsign,\n        masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n        ,\n        updateStore: this.props.updateStore,\n        selectedRecord: this.state.selectedRecord || {},\n        modalTitle: this.props.Login.modalTitle,\n        modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n          operation: this.props.Login.operation,\n          onInputOnChange: this.onEsignInputOnChange,\n          inputParam: this.props.Login.inputParam,\n          selectedRecord: this.state.selectedRecord || {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2338,\n            columnNumber: 101\n          }\n        }) : /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2346,\n            columnNumber: 101\n          }\n        }, /*#__PURE__*/React.createElement(FormTextarea, {\n          label: this.props.intl.formatMessage({\n            id: this.props.Login.masterData.selectedComment.sreportfieldname\n          }),\n          name: \"sreportfieldvalue\",\n          type: \"text\",\n          onChange: this.onInputChange,\n          placeholder: this.props.intl.formatMessage({\n            id: this.props.Login.masterData.selectedComment.sreportfieldname\n          }),\n          value: this.state.selectedComment ? this.state.selectedComment.sreportfieldvalue : \"\",\n          isMandatory: true,\n          required: true,\n          maxLength: \"500\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2348,\n            columnNumber: 105\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2326,\n          columnNumber: 89\n        }\n      }) : \"\"), this.props.Login.isCorrectionNeed && this.props.Login.isCorrectionNeed ? /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"ntransactionresultcode\",\n        selectedId: this.props.Login.selectedId,\n        data: this.props.Login.masterData.ResultCorrection,\n        dataResult: process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.correctionDataState),\n        dataState: this.state.correctionDataState,\n        dataStateChange: this.correctionDataStateChange,\n        extractedColumnList: resultCorrectionColumnList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        methodUrl: \"Result\",\n        userInfo: this.props.Login.userInfo,\n        fetchRecord: this.props.fetchParameterById,\n        deleteRecord: this.deleteRecord //  reloadData={this.reloadData}\n        //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\n        ,\n        editParam: editParam //  deleteParam={deleteParam}\n        ,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        isActionRequired: true //  isToolBarRequired={true}\n        ,\n        pageable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2370,\n          columnNumber: 85\n        }\n      }) : this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENT\" && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" ? /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n        needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        data: this.state.data,\n        dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        dataState: this.state.dataState,\n        dataStateChange: this.dataStateChange,\n        expandNextData: this.expandNextData,\n        checkFunction: this.checkFunction,\n        checkFunction1: this.checkFunction1,\n        expandFunc: this.expandFunc,\n        childDataResult: this.state.childDataResult,\n        subChildDataResult: this.state.subChildDataResult,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange,\n        childHandleExpandChange: this.childHandleExpandChange,\n        isCheckBoxRequired: true,\n        reloadData: this.reloadData,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        gridTop: '10px' // isActionRequired={true}\n        //   isToolBarRequired={true}\n        //  isExpandRequired={true}\n        //   isDownloadRequired={true}\n        ,\n        isCollapseRequired: true,\n        selectedId: this.props.Login.selectedId,\n        hasChild: true,\n        hasSubChild: true,\n        childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n        childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n        childMappingField: \"npreregno\",\n        subChildMappingField: \"ntransactionsamplecode\",\n        subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n        selectedsubcild: this.props.Login.selectedsubcild,\n        methodUrl: \"Release\",\n        headerSelectionChange: this.headerSelectionChange,\n        childHeaderSelectionChange: this.childHeaderSelectionChange,\n        childSelectAll: this.props.Login.childSelectAll,\n        childSelectionChange: this.childSelectionChange,\n        subChildSelectionChange: this.subChildSelectionChange,\n        subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n        subChildSelectAll: this.props.Login.subChildSelectAll,\n        selectionChange: this.selectionChange,\n        selectAll: this.props.Login.selectAll,\n        releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2398,\n          columnNumber: 89\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"reportinforeleasecode\",\n        primaryKeyField: \"nreportinforeleasecode\",\n        data: this.props.Login.masterData.reportinforelease || [],\n        dataResult: process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState),\n        dataState: this.state.reportInfoDataState //dataResult={this.props.selectedWorklist || []}\n        //expandField=\"expanded\"\n        ,\n        isExportExcelRequired: false //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\n        ,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.feildsForGrid,\n        detailedFieldList: this.props.detailedFieldList,\n        editParam: editParam,\n        fetchRecord: this.props.fetchReportInfoReleaseById,\n        pageable: true,\n        dataStateChange: this.reportInfoDataChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'ReportComment',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2460,\n          columnNumber: 93\n        }\n      }) : //     <DataGridWithMultipleGrid\n      //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\n      //     data={this.state.data}\n      //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\n      //     dataState={this.state.dataState}\n      //     dataStateChange={this.dataStateChange}\n      //     expandNextData={this.expandNextData}\n      //     checkFunction={this.checkFunction}\n      //     checkFunction1={this.checkFunction1}\n      //     expandFunc={this.expandFunc}\n      //     childDataResult={this.state.childDataResult}\n      //     subChildDataResult={this.state.subChildDataResult}\n      //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\n      //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\n      //     expandField=\"expanded\"\n      //     handleExpandChange={this.handleExpandChange}\n      //     childHandleExpandChange={this.childHandleExpandChange}\n      //     isCheckBoxRequired={true}\n      //     reloadData={this.reloadData}\n      //     controlMap={this.state.controlMap}\n      //     userRoleControlRights={this.state.userRoleControlRights}\n      //     inputParam={this.props.Login.inputParam}\n      //     userInfo={this.props.Login.userInfo}\n      //     pageable={true}\n      //     scrollable={'scrollable'}\n      //     gridHeight={'600px'}\n      //     gridTop={'10px'}\n      //    // isActionRequired={true}\n      //     //   isToolBarRequired={true}\n      //     //  isExpandRequired={true}\n      //     //   isDownloadRequired={true}\n      //     isCollapseRequired={true}\n      //     selectedId={this.props.Login.selectedId}\n      //     hasChild={true}\n      //     hasSubChild={true}\n      //     childList={\n      //         this.props.Login.masterData.searchedData2 ||\n      //         this.props.Login.masterData.ReleaseSubSample\n      //     }\n      //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\n      //     childMappingField={\"npreregno\"}\n      //     subChildMappingField={\"ntransactionsamplecode\"}\n      //     subChildList={\n      //         this.props.Login.masterData.searchedData3 ||\n      //         this.props.Login.masterData.ReleaseTest\n      //     }\n      //     selectedsubcild={this.props.Login.selectedsubcild}\n      //     methodUrl={\"Release\"}\n      //     headerSelectionChange={this.headerSelectionChange}\n      //     childHeaderSelectionChange={this.childHeaderSelectionChange}\n      //     childSelectAll={this.props.Login.childSelectAll}\n      //     childSelectionChange={this.childSelectionChange}\n      //     subChildSelectionChange={this.subChildSelectionChange}\n      //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\n      //     subChildSelectAll={this.props.Login.subChildSelectAll}\n      //     selectionChange={this.selectionChange}\n      //     selectAll={this.props.Login.selectAll}\n      //     releaseRecord={this.onSaveModalClick}\n      //    // viewDownloadFile={this.viewDownloadFile}\n      // />\n      \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1855,\n        columnNumber: 21\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalResultClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n      ,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onEsignInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2657,\n          columnNumber: 33\n        }\n      }) : this.state.selectedRecord.ReleaseParameter && this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\n        return /*#__PURE__*/React.createElement(ResultEntryForm, {\n          index: index,\n          ResultParameter: [...this.state.selectedRecord.ReleaseParameter],\n          predefinedValues: this.props.Login.masterData.PredefinedValues,\n          defaultPredefinedValues: this.props.Login.masterData.PredefinedValues,\n          gradeValues: this.props.Login.masterData.GradeValues || [],\n          selectedNumericData: this.props.Login.masterData.selectedNumericData,\n          selectedResultGrade: this.state.selectedRecord.selectedResultGrade || [],\n          paremterResultcode: this.props.Login.masterData.paremterResultcode || [],\n          parameterResults: parameterResult || [],\n          Login: this.props.Login,\n          handleClose: this.handleClose,\n          onSaveClick: this.onSaveClick,\n          onResultInputChange: this.onResultInputChange //onGradeEvent={this.onGradeEvent}\n          ,\n          getFormula: this.getFormula,\n          onDropTestFile: this.onDropTestFile,\n          onKeyPress: this.onKeyPress //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\n          ,\n          viewAdditionalInfo: this.viewAdditionalInfo,\n          needSubSample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          needdelete: true,\n          needmandatory: true,\n          ResultAccuracy: this.props.Login.masterData.ResultAccuracy || [],\n          Unit: this.props.Login.masterData.Unit || [] //intl={this.props.intl}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2665,\n            columnNumber: 44\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2645,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  queryBuilderfillingColumns(data) {\n    // const temparray1 = [\n    //(this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\n    //this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\n    ////{ \"idsName\": \"IDS_SECTION\", \"dataField\": \"s.nsectioncode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" },\n    // { \"idsName\": \"IDS_TEST\", \"dataField\": \"rt.ntestgrouptestcode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" }];\n    const temparray2 = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.RECORDTYPE] === 'static' ? \"(jsondata->>'\" + option[designProperties.PRIMARYKEY] + \"')::int\" : option[designProperties.LISTITEM] === 'combo' ? \"(jsondata->'\" + option[designProperties.VALUE] + \"'->>'\" + option[designProperties.PRIMARYKEY] + \"')::int\" : option[designProperties.LISTITEM] === 'Numeric' ? \"(jsondata->>'\" + option[designProperties.VALUE] + \"')::int\" : \"(jsondata->>'\" + option[designProperties.VALUE] + \"')\",\n        \"width\": \"200px\",\n        \"filterinputtype\": option[designProperties.LISTITEM]\n      };\n    });\n    const newArray = [...temparray2];\n    return newArray;\n  }\n\n  //     onSaveModalClick = () => {\n  //         //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\n  //         if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\n  //             this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\n  //         }\n  //         else {\n  //             let ntransactionsamplecode = \"\"\n  //             let ntransactiontestcode = \"\"\n  //             let npreregno = \"\"\n  //             if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n  //                 if (this.state.npreregno && this.state.npreregno.length > 0) {\n  //                     let sample = this.state.npreregno.filter((c, index) => {\n  //                         return this.state.npreregno.indexOf(c) === index;\n  //                     });\n  //                     let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n  //                         return this.state.ntransactionsamplecode.indexOf(c) === index;\n  //                     });\n  //                     let test = this.state.ntransactiontestcode.filter((c, index) => {\n  //                         return this.state.ntransactiontestcode.indexOf(c) === index;\n  //                     });\n  //                     npreregno = sample.map(x => x).join(\",\")\n  //                     ntransactionsamplecode = subsample.map(x => x).join(\",\")\n  //                     ntransactiontestcode = test.map(x => x).join(\",\")\n  //                     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\n  //                     const inputParam = {\n  //                         inputData: {\n  //                             change: this.props.Login.change,\n  //                             npreregno: String(npreregno),\n  //                             ntransactionsamplecode: ntransactionsamplecode,\n  //                             ntransactiontestcode: ntransactiontestcode,\n  //                             ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\n  //                                 && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\n  //                             url: this.props.Login.settings[24],\n  //                             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n  //                             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n  //                             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n  //                             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n  //                             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n  //                             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n  //                             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n  //                             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n  //                             dfrom: obj.fromDate,\n  //                             dto: obj.toDate,\n  //                             isAddPopup: false,\n  //                             isEditPopup: false,\n  //                             nflag: 2,\n  //                             userinfo: this.props.Login.userInfo,\n  //                             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\n  //                             doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\n  //                         },\n  //                         userinfo: this.props.Login.userInfo,\n  //                         methodUrl: \"Release\",\n  //                         classUrl: \"release\",\n  //                         operation: this.props.Login.operation\n  //                     }\n  //                     const masterData = this.props.Login.masterData;\n  //                     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n  //                         const updateInfo = {\n  //                             typeName: DEFAULT_RETURN,\n  //                             data: {\n  //                                 loadEsign: true,\n  //                                 screenData: { inputParam, masterData },\n  //                                 operation: this.props.Login.operation,\n  //                                 screenName: this.props.Login.screenName,\n  //                                 ncontrolcode:this.props.Login.ncontrolCode\n  //                             }\n  //                         }\n  //                         this.props.updateStore(updateInfo);\n  //                     }\n  //                     else {\n  //                         if (this.props.Login.isDeletePopup) {\n  //                             this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\n  //                         }\n  //                         else if (this.props.Login.isEditPopup) {\n  // <<<<<<< .mine\n  //                             this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\n  // ||||||| .r76787\n  //                             this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \n  // =======\n  //                             this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \n  // >>>>>>> .r76792\n  //                         }\n  //                         else {\n  //                             this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\n  //                         }\n  //                     }\n  //                 }\n  //                 else {\n  //                     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\n  //                 }\n  //             }\n  //             else {\n  //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\n  //             }\n  //         }\n  //     }\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      SampleGridItem,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      ReporttypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      //UserSectionList, TestList,\n      SingleItem,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      stateDynamicDesign,\n      checkedflag,\n      dataState,\n      selectedComment,\n      isInitialRender,\n      DynamicReportFilterTypeItem,\n      DynamicDefaultStructureItem\n    } = this.state;\n    let bool = false;\n    let reportFilePath = \"\";\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      reportFilePath = this.props.Login.masterData.ReportPDFFile;\n      bool = true;\n    } // else {\n    //     if (this.state.dataState === undefined) {\n    //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\n    //     }\n    //     //  const npreregno =  [];\n    //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n    //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    }\n\n    if (this.props.Login.isInitialRender !== previousProps.Login.isInitialRender) {\n      isInitialRender = this.props.Login.isInitialRender;\n      bool = true;\n    } // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n    //     npreregno = this.props.Login.npreregno\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false); // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\n      // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \n\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      ReporttypeList = ReporttypeListMap.get(\"OptionList\"); // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\n      //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\n\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\"); //  UserSectionList = UserSectionListMap.get(\"OptionList\");\n      //   TestList = TestListMap.get(\"OptionList\");\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.selectedComment !== previousProps.Login.masterData.selectedComment) {\n      selectedComment = this.props.Login.masterData.selectedComment;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      DynamicReportFilterTypeItem = dynamicColumn.samplefiltertypefields ? dynamicColumn.samplefiltertypefields : [];\n      DynamicDefaultStructureItem = dynamicColumn.defaultstructure ? dynamicColumn.defaultstructure : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      let allData = {\n        userRoleControlRights,\n        controlMap,\n        SampleGridItem,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        ReporttypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        selectedComment,\n        //UserSectionList, TestList,\n        SingleItem,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        stateDynamicDesign,\n        checkedflag,\n        isInitialRender,\n        data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n        dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        reportFilePath,\n        DynamicReportFilterTypeItem,\n        DynamicDefaultStructureItem\n      };\n\n      if (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true) {\n        this.setState({ ...allData,\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      } else {\n        this.setState(allData);\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    if (this.props.Login.openModal && (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle) && nextState.isInitialRender === false && nextState.selectedRecord !== this.state.selectedRecord) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getApprovedRecordsAsDraft,\n  getReleasedRegistrationType,\n  getReleasedRegistrationSubType,\n  getReleasedFilterStatus,\n  getReleasedApprovalVersion,\n  getReleasedFilterBasedTest,\n  getReleasedSample,\n  getApprovedSample,\n  //, generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\n  previewAndFinalReport,\n  getRemoveApprovedSample,\n  getDeleteApprovedSample,\n  UpdateApprovedSample,\n  getEditApprovedSample,\n  getSectionForSectionWise,\n  getreportcomments,\n  fetchReportInfoReleaseById,\n  UpdateReportComments,\n  generateReleasedReport,\n  getReleasedDataDetails,\n  getApprovedProjectByProjectType,\n  getApprovedProjectType,\n  getReportForPortal,\n  getResultCorrectionData,\n  //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\n  getSectionForSectionWise,\n  fetchParameterById,\n  updateCorrectionStatus,\n  validateEsignforRelease,\n  viewReportHistory,\n  viewAttachment,\n  versionHistory,\n  downloadVersionReport,\n  viewReleaseTestAttachment,\n  downloadHistory,\n  getPatientFilterExecuteData,\n  rearrangeDateFormatforKendoDataTool,\n  getPatientWiseSample,\n  preliminaryReport,\n  releaseReportHistory,\n  onSaveReleaseTestAttachment,\n  onDeleteReleaseTestAttachment,\n  onSaveReleaseTestComment,\n  onDeleteReleaseTestComment,\n  generatereport\n})(injectIntl(Release));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/Release.jsx"],"names":["React","Row","Col","Card","Nav","Button","ListGroup","toast","process","Utils","QbUtils","connect","injectIntl","FormattedMessage","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","getApprovedRecordsAsDraft","getReleasedRegistrationType","getReleasedRegistrationSubType","getReleasedFilterStatus","getReleasedApprovalVersion","getReleasedFilterBasedTest","getReleasedSample","generateReleasedReport","previewAndFinalReport","getRemoveApprovedSample","getDeleteApprovedSample","UpdateApprovedSample","getEditApprovedSample","getSectionForSectionWise","getreportcomments","fetchReportInfoReleaseById","UpdateReportComments","getApprovedSample","getReleasedDataDetails","getApprovedProjectByProjectType","getApprovedProjectType","getReportForPortal","getResultCorrectionData","fetchParameterById","updateCorrectionStatus","validateEsignforRelease","viewReportHistory","viewAttachment","versionHistory","downloadVersionReport","viewReleaseTestAttachment","downloadHistory","getPatientFilterExecuteData","rearrangeDateFormatforKendoDataTool","getPatientWiseSample","preliminaryReport","releaseReportHistory","onSaveReleaseTestAttachment","onDeleteReleaseTestAttachment","onSaveReleaseTestComment","onDeleteReleaseTestComment","generatereport","ListMaster","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","showEsign","Lims_JSON_stringify","create_UUID","onSaveMandatoryValidation","checkFilterIsEmptyQueryBuilder","removeSpaceFromFirst","SampleType","designProperties","ResultEntry","reportCOAType","transactionStatus","attachmentType","DataGridWithMultipleGrid","DataGrid","Affix","DEFAULT_RETURN","BreadcrumbComponent","ReleaseFilter","SlideOutModal","Esign","EsignStateHandle","ContentPanel","ProductList","faEdit","faPlus","faExpandArrowsAlt","faEye","faInfoCircle","faPencilAlt","faRecycle","faStore","faTrash","faFilePen","faFileCode","faDownload","faFilePdf","faHistory","faFile","faComments","faPaperclip","faCalculator","faSync","faSearch","faTimes","FormSelectSearch","FontAwesomeIcon","fileViewUrl","reportUrl","DocViewer","REPORTTYPE","SampleInfoView","FormInput","FormTextarea","ModalShow","ResultEntryForm","numberConversion","numericGrade","ReleaseTestAttachment","ReleaseTestComment","VersionHistGrid","FilterQueryBuilder","ConfirmMessage","ReleaseReportHistory","AddReleaseTestAttachment","AddReleaseTestComment","TransactionListMasterJsonView","SplitterLayout","ListWrapper","SampleGridTab","CustomSwitch","faTrashAlt","faThumbsUp","faChevronCircleDown","CustomPopover","mapStateToProps","state","Login","Release","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","dataStateChange","event","dataState","dataResult","data","outsourceFileDataStateChange","outsourceFileDataState","reportInfoDataChange","reportInfoDataState","correctionDataStateChange","correctionDataState","versionHistoryDataStateChange","versionHistoryDataState","preliminaryHistoryDataStateChange","preliminaryHistoryDataState","testAttachmentDataStateChange","testAttachmentDataState","testCommentDataStateChange","testCommentDataState","sampleGridDataStateChange","sampleGridDataState","handleDateChange","dateName","dateValue","Date","dfrom","masterData","fromDate","userInfo","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","realSampleTypeList","realReportTypeList","realRegTypeList","realRegSubTypeList","realFilterStatusList","realApprovalVersionList","realDesignTemplateMappingList","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","DesignTemplateMappingValue","updateInfo","typeName","ApprovalVersionValue","napproveconfversioncode","napprovalversioncode","ndesigntemplatemappingcode","TestValue","ntestcode","ReportTypeValue","ncoareporttypecode","closeFilter","inputValues","realFromDate","realToDate","realSampleTypeValue","realReportTypeValue","realRegTypeValue","realRegSubTypeValue","realApprovalVersionValue","realDesignTemplateMappingValue","FilterStatusValue","realFilterStatusValue","ReportType","RegType","RegSubType","FilterStatus","ApprovalVersion","DesignTemplateMapping","showFilter","viewDownloadFile","filedata","ncoaparentcode","selectedReleaseHistory","length","ncoareporthistorycode","npreliminaryreporthistorycode","sprimarykeyname","action","doAction","openModal","ncontrolCode","screenName","intl","formatMessage","id","onFilterSubmit","searchRef","current","change","npreregno","parseInt","ntransactionstatus","undefined","RELEASED","isneedsection","NO","napprovalconfigcode","napprovalconfigversioncode","nneedsubsample","nneedtemplatebasedflow","info","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","isAddPopup","isEditPopup","isDeletePopup","checkFlag","viewReport","ReportPDFFile","showReport","warn","handleReportNoPageChange","e","skip","take","onKeyPress","index","paremterResultcode","keyCode","i","target","form","elements","focus","preventDefault","onResultInputChange","parameterResults","isParameterInitialRender","fields","onComboChange","selectedRecord","nprojecttypecode","realUserSectionValue","UserSectionValue","realTestValue","nprojectmastercode","isPopup","sfilterstatus","SECTIONWISEMULTIPLESAMPLE","YES","nsectioncode","handleExecuteClicks","isClear","filterquery","filterQueryTreeStr","isFilterEmpty","val","replaceAll","screenNameCopy","awesomeTree","openFilterQuery","closeModalShow","loadEsign","closeModal","modalShow","ReportmodalShow","selectedComment","selectedId","generateid","syncaction","downloadReportId","previewReport","previewId","ncontrolcode","spreregno","ntransactionsamplecode","stransactionsamplecode","ntransactiontestcode","stransactiontestcode","url","settings","nprimarykey","nreporttypecode","COAPREVIEW","nprojectcode","ReleasedSampleDetails","reportSectionCode","isSMTLFlow","userRoleControlRights","nformcode","screenData","operation","preliminaryId","DRAFT","CORRECTION","COAPRELIMINARY","isPreliminaryReportNoGenerate","ncoaparenttranscode","toastAlert","genericLabel","slanguagetypecode","downloadReleasedValidation","downloadId","resultArray","Set","map","versionCheck","reportTemplateCheck","PRELIMINARYRELEASE","CorrectionComments","downloadReleasedFile","controlMap","has","get","sort","join","nclinicaltyperequired","noutsourcerequired","listStatus","COAREPORT","sreportcomments","nversionno","confirmMessage","methodUrl","classUrl","reportcomments","regenerateReleasedFile","regenerateId","sreportno","CorrectionStatus","correctionId","onSaveModalResultClick","saveType","ReleaseParameter","additionalInfo","editResultId","formData","FormData","neditable","releaseParameters","sresult","resultData","results","editable","nparametertypecode","ncalculatedresult","sfinal","parseFloat","nroundingdigits","sunitname","nunitcode","label","sresultaccuracyname","nresultaccuracycode","JSON","stringify","nuserrole","nusercode","ntransactionresultcode","sresultcomment","salertmessage","additionalInfoUidata","ntestgrouptestpredefcode","ngradecode","trim","RESULTSTATUS_FIO","splittedFileName","name","split","fileExtension","uniquefilename","ssystemfilename","nfilesize","size","append","Object","values","push","loading","isFileupload","displayName","onSaveModalClick","ReleaseSample","sample","filter","c","indexOf","subsample","test","x","nreporttemplatecode","sendToPortal","isPortal","allPreregno","reportHistory","patientInfo","isPatientDetails","hideSave","reportHistoryInfo","releaseTestAttachmentData","actionName","reloadData","isCorrectionNeed","isPatientReports","openModalTitle","isReleaseTestAttachment","isReleaseTestComment","isAddReleaseTestAttachment","isAddReleaseTestComment","isInitialRender","loadEsignStateHandle","closeDocModal","onInputOnChange","onChangeAwesomeQueryBuilder","immutableTree","config","sqlFormat","getTree","awesomeConfig","onComboChangeAwesomeQueryBuilder","handleExecuteClick","includes","inputparam","component","seletedFilterComponent","handleKendoRowClick","patientinfo","dataItem","PARTIAL","spatientid","onInputChange","coaFileInfo","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","password","selectionChange","checkedflag","checked","syntheticEvent","selected","preregno","ncoahistorycode","childHeaderSelectionChange","dataItems","subsamplecode","ReleaseSubSample","subChildHeaderSelectionChange","transactionsamplecode","ReleaseTest","collectData","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","y1","transactiontestcode","viewSelectedReport","releasedcoareport","childDataChange","onMandatoryCheck","mandatoryFields","CLINICALTYPE","reportTemplateList","onSaveTestAttachment","onSaveTestComment","formRef","acceptedFiles","sfilename","isFileEdited","fileArray","Array","isArray","forEach","file","fileName","tempData","stestsynonym","susername","suserrolename","slinkname","sdescription","nneedreport","sheader","nsortorder","selectedReleaseTestAttachment","nreleasetestattachmentcode","FTP","sformname","smodulename","slanguagename","deleteReleaseTestAttachment","deleteParam","releasetestattachment","commentArray","comment","selectedReleaseTestComment","nreleasetestcommentcode","ncommentsubtypecode","nsampletestcommentscode","scomments","scommentsubtype","spredefinedname","nsamplecommentscode","deleteReleaseTestComment","releasetestcomment","createRef","masterStatus","error","childDataResult","Map","SampletypeList","ProjecttypeList","ProjectMasterList","SectionList","ReporttypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","searchedData","SampleGridItem","combinedSearchField","stateDynamicDesign","splitChangeWidthPercentage","searchFieldList","getDerivedStateFromProps","gridfillingColumn","temparray","option","LABEL","VALUE","render","editReportParam","primaryKeyField","feildsForGrid","fieldsForReleasedReportGrid","resultCorrectionColumnList","filePath","filetype","reportFilePath","filterParam","inputListName","selectedObject","fetchUrl","fecthInputObject","isSearch","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","scoareporttypename","releaseId","viewreportId","sendtoportalId","editId","deleteId","patientinfoId","ResultCorrectionId","editcommentsId","releaseHistoryId","downloadVersionHist","reportHistoryId","releaseTestAttachmentId","releaseTestCommentId","releaseReportHistoryId","editParam","ReleaseMasterDataParam","ApprovedModalParam","DynamicReportFilterTypeItem","DynamicDefaultStructureItem","extractedColumnList","queryBuilderfillingColumns","RemoveModalParam","PATIENTWISE","patientwise","EditModalParam","jsonParam","primaryKeyName","ResultCorrectionParam","reportSubFields","ReleaseHistory","status","transactionStatusSelectionList","openFilter","ConfigVersionList","onDesignTemplateChange","SAMPLEWISE","SECTIONWISE","nportalrequired","actionMethod","searchedData1","expandNextData","subChildDataResult","DynamicGridItem","DynamicTestGridItem","ReleasedSubSampleDetails","DynamicSubSampleGridItem","ReleasedTestDetails","selectedsubcild","kendoSkip","kendoTake","handlePageChange","gridColumns","lstPatient","SingleItem","PatientReports","ReleaseTestAttachmentDetails","isDataGrid","ReleaseTestCommentDetails","CommentSubType","SampleTestComments","reportinforelease","detailedFieldList","modalTitle","onEsignInputOnChange","sreportfieldname","sreportfieldvalue","ResultCorrection","deleteRecord","handleExpandChange","childHandleExpandChange","searchedData2","searchedData3","childSelectAll","subChildSelectAll","selectAll","parameterResult","PredefinedValues","GradeValues","selectedNumericData","selectedResultGrade","handleClose","onSaveClick","getFormula","onDropTestFile","viewAdditionalInfo","ResultAccuracy","Unit","temparray2","RECORDTYPE","PRIMARYKEY","LISTITEM","newArray","componentDidUpdate","previousProps","bool","SampletypeListMap","ReporttypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","FilterStatusListMap","ConfigVersionListMap","TestListMap","Test","DynamicDesign","dynamicColumn","parse","jsondata","samplegriditem","testListFields","releasetestfields","subsamplelistitem","sampledisplayfields","samplefiltertypefields","defaultstructure","DesignTemplateMappingMap","allData","shouldComponentUpdate","nextProps","nextState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, Nav,Button,ListGroup } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport {\r\n    Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl,FormattedMessage } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    filterColumnData,\r\n    getApprovedRecordsAsDraft,\r\n    getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample,\r\n    generateReleasedReport,\r\n    previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    getSectionForSectionWise, getreportcomments, fetchReportInfoReleaseById, UpdateReportComments,\r\n    getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData,\r\n    fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory, downloadVersionReport,\r\n    viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool, getPatientWiseSample,\r\n    preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment, onDeleteReleaseTestComment,generatereport\r\n} from '../../actions';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, showEsign,\r\n     Lims_JSON_stringify, create_UUID, onSaveMandatoryValidation,checkFilterIsEmptyQueryBuilder,\r\n     removeSpaceFromFirst } from '../../components/CommonScript';\r\nimport { SampleType, designProperties, ResultEntry, reportCOAType, transactionStatus, attachmentType} from '../../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { Affix } from 'rsuite';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReleaseFilter from './ReleaseFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport EsignStateHandle from '../audittrail/EsignStateHandle';\r\nimport { ContentPanel, ProductList } from '../product/product.styled';\r\nimport { faEdit, faPlus, faExpandArrowsAlt, faEye, faInfoCircle, faPencilAlt, faRecycle, faStore,\r\n     faTrash, faFilePen, faFileCode, faDownload, faFilePdf, faHistory, faFile, faComments,\r\n      faPaperclip,faCalculator,faSync,faSearch,faTimes} from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { ReactComponent as Generate } from '../../assets/image/generate-certificate.svg'\r\nimport { ReactComponent as ReGenerate } from '../../assets/image/regenerate-icon.svg'\r\nimport { ReactComponent as ResultCorrection } from '../../assets/image/resultcorrection.svg'\r\nimport { ReactComponent as Correction } from '../../assets/image/correctionrelease.svg'\r\nimport { ReactComponent as Comment } from '../../assets/image/comment-edit-svgrepo-com.svg'\r\nimport { ReactComponent as DownloadCertificate } from '../../assets/image/Download Certificate.svg';\r\nimport { ReactComponent as PreliminaryReport } from '../../assets/image/preliminary_report.svg';\r\nimport { ReactComponent as ReportHistory } from '../../assets/image/reporthistory.svg';\r\nimport { ReactComponent as ReleaseTestAttachmentIcon } from '../../assets/image/releasetestattachment.svg';\r\nimport { ReactComponent as ReleaseTestCommentIcon } from '../../assets/image/releasetestcomment.svg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fileViewUrl, reportUrl } from '../../rsapi';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\nimport { REPORTTYPE } from \"../../components/Enumeration\";\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\r\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\r\nimport ReleaseTestAttachment from './ReleaseTestAttachment';\r\nimport ReleaseTestComment from './ReleaseTestComment';\r\nimport VersionHistGrid from './VersionHistGrid';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport ReleaseReportHistory from './ReleaseReportHistory';\r\nimport { ReactComponent as Preview } from '../../assets/image/Preview.svg';\r\nimport { ReactComponent as TestAttachment } from '../../assets/image/Test Attachment.svg';\r\nimport AddReleaseTestAttachment from './AddReleaseTestAttachment';\r\nimport AddReleaseTestComment from './AddReleaseTestComment';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport SplitterLayout from 'react-splitter-layout';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport SampleGridTab from '../registration/SampleGridTab';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { faTrashAlt, faThumbsUp, faChevronCircleDown } from '@fortawesome/free-solid-svg-icons';//,faUserTimes, faTrash\r\nimport CustomPopover from '../../components/customPopover';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Release extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const outsourceFileDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const reportInfoDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const correctionDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const versionHistoryDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const preliminaryHistoryDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const testAttachmentDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const testCommentDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const sampleGridDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        }\r\n\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            outsourceFileDataState: outsourceFileDataState,\r\n            reportInfoDataState: reportInfoDataState,\r\n            correctionDataState: correctionDataState,\r\n            versionHistoryDataState: versionHistoryDataState,\r\n            preliminaryHistoryDataState: preliminaryHistoryDataState,\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            ProjecttypeList: [],\r\n            ProjectMasterList: [],\r\n            SectionList: [],\r\n            ReporttypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField: [],\r\n            npreregno: [],\r\n            ntransactiontestcode: [],\r\n            ntransactionsamplecode: [],\r\n            stateDynamicDesign: [],\r\n            sidebarview: false,\r\n            testAttachmentDataState: testAttachmentDataState,\r\n            testCommentDataState: testCommentDataState,\r\n            sampleGridDataState: sampleGridDataState,\r\n            splitChangeWidthPercentage: 28.6,\r\n            skip: 0,\r\n            take: this.props.Login.settings && parseInt(this.props.Login.settings[3])\r\n            // ,\r\n            // nmultiplesampleinsinglerelease: this.props.Login.masterData.realReportTypeValue && \r\n            //     this.props.Login.masterData.realReportTypeValue.nmultiplesampleinsinglerelease\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // expandNextData(y) {\r\n    //     let change = []\r\n    //     let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n    //     let data = x.data.every(item => {\r\n    //         return item.expanded === true\r\n    //     })\r\n    //     if (data === true) {\r\n    //         change = true\r\n    //     } else {\r\n    //         change = false\r\n    //     }\r\n    //     this.expandFunc({ change: change })\r\n\r\n    // }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    outsourceFileDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ outsourceFileDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    reportInfoDataChange = (event) => {\r\n\r\n\r\n        this.setState({ reportInfoDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    correctionDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ correctionDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    versionHistoryDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ versionHistoryDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    preliminaryHistoryDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ preliminaryHistoryDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    testAttachmentDataStateChange = (event) => {\r\n        this.setState({ testAttachmentDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n    testCommentDataStateChange = (event) => {\r\n        this.setState({ testCommentDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n    sampleGridDataStateChange = (event) => {\r\n        this.setState({ sampleGridDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo,\r\n                realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleasedApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    };\r\n                    this.props.getReleasedRegistrationType(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    }\r\n                    this.props.getReleasedRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleasedApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n\r\n\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                // const inputParamData = {\r\n                //     dfrom: obj.fromDate,\r\n                //     dto: obj.toDate,\r\n                //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     masterData: { ...this.props.Login.masterData },\r\n                //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     ndesigntemplatemappingcode: comboData.value,\r\n                //     DesignTemplateMappingValue: comboData.item\r\n                // }\r\n                // this.props.getReleaseFilterBasedTest(inputParamData)\r\n\r\n                let masterData = { ...this.props.Login.masterData, DesignTemplateMappingValue: comboData.item }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleasedFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            //Don't Remove\r\n            // else if (fieldName === 'nsectioncode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n            //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             nsectioncode: comboData.value === -1 ? null\r\n            //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //                 : comboData.value,\r\n            //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n            //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            //         }\r\n\r\n            //         this.props.getReleasedFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n            // else if (fieldName === 'njobstatuscode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n            //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: { masterData }\r\n            //         }\r\n            //         this.props.updateStore(updateInfo);\r\n            //     }\r\n            // }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ncoareporttypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\r\n                    let masterData = { ...this.props.Login.masterData, ReportTypeValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            // else {\r\n            //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n            //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n            //         //  const updateInfo = {\r\n            //         //     typeName: DEFAULT_RETURN,\r\n            //         //    data: { masterData }\r\n            //         // }\r\n\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: comboData.value,\r\n            //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n            //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n            //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n            //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n            //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n\r\n            //         }\r\n\r\n            //         this.props.getReleaseFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n    closeFilter = () => {\r\n        let inputValues = {\r\n            fromDate: this.props.Login.masterData.realFromDate || new Date(),//this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date() ,\r\n            toDate: this.props.Login.masterData.realToDate || new Date(),//this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() ,\r\n            SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\r\n            ReportTypeValue: this.props.Login.masterData.realReportTypeValue || {},\r\n            RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\r\n            RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\r\n            ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\r\n            DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\r\n            FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\r\n            SampleType: this.props.Login.masterData.realSampleTypeList || [],\r\n            ReportType: this.props.Login.masterData.realReportTypeList || [],\r\n            RegType: this.props.Login.masterData.realRegTypeList || [],\r\n            RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\r\n            FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\r\n            ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\r\n            DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...inputValues } },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    viewDownloadFile = (filedata) => {\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                // change: this.props.Login.change,\r\n                // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                    && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                ncoareporthistorycode: filedata.inputData.ncoareporthistorycode ? filedata.inputData.ncoareporthistorycode : -1,\r\n                npreliminaryreporthistorycode: filedata.inputData.npreliminaryreporthistorycode ? filedata.inputData.npreliminaryreporthistorycode : -1,\r\n                //ntransactionstatus: String(transactionStatus.RELEASED),\r\n                //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                //nflag: 2,\r\n                userinfo: this.props.Login.userInfo,\r\n                //sreportcomments: \"\",\r\n                //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                //nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                action: \"DownloadVersionhistory\",\r\n                doAction: \"download\",\r\n                // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                openModal: true,\r\n                userInfo: this.props.Login.userInfo,\r\n                ncontrolCode: filedata.ncontrolCode\r\n            },\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n\r\n        }\r\n        this.props.downloadVersionReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n    }\r\n\r\n    // downloadPreliminaryHistory = (filedata) => {\r\n\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             // change: this.props.Login.change,\r\n    //             // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //             //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //             //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //             npreliminaryreporthistorycode:filedata.inputData.npreliminaryreporthistorycode,\r\n    //             //ntransactionstatus: String(transactionStatus.RELEASED),\r\n    //             //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n    //             // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //             // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             //nflag: 2,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             //sreportcomments: \"\",\r\n    //             //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             //nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //             sprimarykeyname: \"npreregno\",\r\n    //             action: \"DownloadPreliminaryHistory\",\r\n    //             doAction: \"download\",\r\n    //            // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             openModal:true,\r\n    //             userInfo: this.props.Login.userInfo,\r\n    //             ncontrolCode:filedata.ncontrolCode\r\n    //         },\r\n    //       //  screenName: this.props.intl.formatMessage({ id: \"IDS_VERSIONHISTORY\" })\r\n\r\n    //     }\r\n    //     this.props.downloadPreliminaryHistory(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n    // }\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let realSampleTypeList = this.props.Login.masterData.SampleType || [];\r\n        let realReportTypeList = this.props.Login.masterData.ReportType || [];\r\n        let realRegTypeList = this.props.Login.masterData.RegType || [];\r\n        let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\r\n        let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\r\n        let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\r\n        let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            //  realUserSectionValue, realTestValue,\r\n            realDesignTemplateMappingValue, realReportTypeList, realRegSubTypeList, realRegTypeList,\r\n            realReportTypeValue, realSampleTypeList, realFilterStatusList, realApprovalVersionList, realDesignTemplateMappingList\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                isAddPopup: false,\r\n                isEditPopup: false,\r\n                isDeletePopup: false,\r\n                checkFlag: \"1\",\r\n                count: count,\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    viewReport = () => {\r\n        if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTNOTGENERATED\" }));\r\n        }\r\n    }\r\n\r\n    handleReportNoPageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n    getApprovedSample = (inputParam, ncontrolCode) => {\r\n        if(inputParam.masterData && inputParam.masterData.realReportTypeValue){\r\n            this.props.getApprovedSample(inputParam, ncontrolCode);\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const editReportParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"nreportinforeleasecode\", operation: \"update\",//selectedId:,\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: -1, masterData: this.props.Login.masterData, selectedId: this.props.Login.selectedId\r\n        };\r\n        this.feildsForGrid =\r\n            [\r\n                // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },  \r\n                { \"idsName\": \"IDS_SCREEN\", \"dataField\": \"testname\", \"width\": \"100px\" },\r\n                { \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sreportfieldname\", \"width\": \"100px\" },\r\n                { \"idsName\": \"IDS_VALUE\", \"dataField\": \"sreportfieldvalue\", \"width\": \"100px\" }\r\n            ];\r\n\r\n        this.fieldsForReleasedReportGrid =\r\n            [\r\n                { \"idsName\": \"IDS_RELEASENO\", \"dataField\": \"sreleaseno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_VERSIONNO\", \"dataField\": \"nversionno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_ORDERID\", \"dataField\": \"sexternalorderid\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDSITE\", \"dataField\": \"ssitename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDDATE\", \"dataField\": \"sreleasedate\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDUSER\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n            ];\r\n\r\n        const mandatoryFields = [{ \"mandatory\": true, \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sreportcomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            //  { \"mandatory\": true, \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n            // { \"mandatory\": true, \"idsName\": \"IDS_INTERFACETYPE\", \"dataField\": \"ninterfacetypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        ];\r\n\r\n        let resultCorrectionColumnList = [{ \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" }];\r\n        {this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample && \r\n        resultCorrectionColumnList.push(\r\n            { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\" }\r\n        )}\r\n        resultCorrectionColumnList.push(\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_FINALRESULT\", \"dataField\": \"sfinal\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"150px\", \"fieldType\": \"gradeColumn\" },\r\n            { \"idsName\": \"IDS_UNIT\", \"dataField\": \"sunitname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTACCURACY\", \"dataField\": \"sresultaccuracyname\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_LOWA\", \"dataField\": \"smina\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_LOWB\", \"dataField\": \"sminb\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_HIGHA\", \"dataField\": \"smaxa\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_HIGHB\", \"dataField\": \"smaxb\", \"width\": \"150px\" },\r\n            /* { \"idsName\": \"IDS_MINLOD\", \"dataField\": \"sminlod\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MAXLOD\", \"dataField\": \"smaxlod\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MINLOQ\", \"dataField\": \"sminloq\", \"width\": \"150px\" },\r\n             { \"idsName\": \"IDS_MAXLOQ\", \"dataField\": \"smaxloq\", \"width\": \"150px\" }*/\r\n        )\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let filePath = \"\";\r\n        if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\r\n            filePath = reportUrl();\r\n        } else {\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        // let userStatusCSS = \"\";\r\n        // let activeIconCSS = \"fa fa-check\";\r\n        // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\r\n        //     userStatusCSS = \"outline-secondary\";\r\n        //     activeIconCSS = \"\";\r\n        // }\r\n        // else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\r\n        //     userStatusCSS = \"outline-success\";\r\n        // }\r\n        // else {\r\n        //     userStatusCSS = \"outline-Final\";\r\n        // }\r\n        const filterParam = {\r\n            inputListName: \"ReleaseHistory\",\r\n            selectedObject: \"selectedReleaseHistory\",\r\n            primaryKeyField: \"ncoaparentcode\",\r\n            fetchUrl: \"release/getReleaseHistory\",\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList,\r\n            fecthInputObject: {\r\n                isSearch: true, userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: this.searchFieldList,\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined)\r\n                    || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REPORTTYPE\",\r\n                \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" :\r\n                    this.props.Login.masterData.ReportTypeValue ?\r\n                        this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\")\r\n            && this.state.controlMap.get('AddSamples').ncontrolcode;\r\n\r\n        const preliminaryId =\r\n            this.state.controlMap.has(\"PreliminaryReport\") &&\r\n            this.state.controlMap.get(\"PreliminaryReport\").ncontrolcode;\r\n        const previewId =\r\n            this.state.controlMap.has(\"PreviewFinalReport\") &&\r\n            this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\r\n        const downloadId =\r\n            this.state.controlMap.has(\"ReleaseReportGeneration\") &&\r\n            this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        const regenerateId =\r\n            this.state.controlMap.has(\"RegenerateRelease\") &&\r\n            this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\r\n        const viewreportId =\r\n            this.state.controlMap.has(\"ViewReportRelease\") &&\r\n            this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\r\n        const sendtoportalId =\r\n            this.state.controlMap.has(\"SendToPortal\") &&\r\n            this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\r\n        const editId =\r\n            this.state.controlMap.has(\"AppendSamples\") &&\r\n            this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\r\n        const deleteId =\r\n            this.state.controlMap.has(\"RemoveSamples\") &&\r\n            this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\r\n        const patientinfoId =\r\n            this.state.controlMap.has(\"PatientInfo\") &&\r\n            this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\r\n        const ResultCorrectionId =\r\n            this.state.controlMap.has(\"ResultCorrection\") &&\r\n            this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\r\n        const editResultId =\r\n            this.state.controlMap.has(\"EditResult\") &&\r\n            this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        const editcommentsId =\r\n            this.state.controlMap.has(\"EditComment\") &&\r\n            this.state.controlMap.get(\"EditComment\").ncontrolcode;\r\n        const correctionId =\r\n            this.state.controlMap.has(\"Correction\") &&\r\n            this.state.controlMap.get(\"Correction\").ncontrolcode;\r\n        const releaseHistoryId =\r\n            this.state.controlMap.has(\"ReleaseHistory\") &&\r\n            this.state.controlMap.get(\"ReleaseHistory\").ncontrolcode;\r\n        const downloadVersionHist =\r\n            this.state.controlMap.has(\"DownloadReleaseVersion\") &&\r\n            this.state.controlMap.get(\"DownloadReleaseVersion\").ncontrolcode;\r\n        const downloadReportId =\r\n            this.state.controlMap.has(\"DownloadReport\") &&\r\n            this.state.controlMap.get(\"DownloadReport\").ncontrolcode;\r\n        const reportHistoryId =\r\n            this.state.controlMap.has(\"ReportHistory\") &&\r\n            this.state.controlMap.get(\"ReportHistory\").ncontrolcode;\r\n        const releaseTestAttachmentId =\r\n            this.state.controlMap.has(\"ReleaseTestAttachment\") &&\r\n            this.state.controlMap.get(\"ReleaseTestAttachment\").ncontrolcode;\r\n        const releaseTestCommentId =\r\n            this.state.controlMap.has(\"ReleaseTestComment\") &&\r\n            this.state.controlMap.get(\"ReleaseTestComment\").ncontrolcode;\r\n        const releaseReportHistoryId =\r\n            this.state.controlMap.has(\"ReleaseReportHistory\") &&\r\n            this.state.controlMap.get(\"ReleaseReportHistory\").ncontrolcode;\r\n        const generateid =\r\n            this.state.controlMap.has(\"Generate\") &&\r\n            this.state.controlMap.get(\"Generate\").ncontrolcode;\r\n\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"ntransactionresultcode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editResultId, masterData: this.props.Login.masterData\r\n        };\r\n\r\n        const ReleaseMasterDataParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].npreregno) || \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n\r\n        const ApprovedModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            Login: this.props.Login,\r\n            // selectedRecord: { ...this.props.Login.selectedRecord },\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'isAddPopup': true,\r\n                'isPopup': true,\r\n                'ncoareporttype': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                // 'ncoareporttypecode': 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })\r\n\r\n\r\n            },\r\n            DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\r\n            DynamicDefaultStructureItem:this.state.DynamicDefaultStructureItem,\r\n            extractedColumnList:this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\r\n        };\r\n        const RemoveModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 &&  this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\r\n                ncontrolCode: deleteId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" }),\r\n                spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\r\n                patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\r\n\r\n            }\r\n        };\r\n        const EditModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'sregsubtypename': this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"\",\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneededit': true,\r\n                'isPopup': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                'ncoaparenttranscode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 &&  this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                'allowAppendRemoveSamples': this.props.Login.settings && this.props.Login.settings[46] ? parseInt(this.props.Login.settings[46]) : transactionStatus.NO,\r\n                ncontrolCode: editId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }),\r\n                nsectioncode: this.props.Login.nsectioncode,\r\n                spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\r\n                patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\r\n            },\r\n            DynamicReportFilterTypeItem: this.state.DynamicReportFilterTypeItem,\r\n            DynamicDefaultStructureItem:this.state.DynamicDefaultStructureItem,\r\n            extractedColumnList:this.state.DynamicReportFilterTypeItem ? this.queryBuilderfillingColumns(this.state.DynamicReportFilterTypeItem) : []\r\n        };\r\n\r\n        const jsonParam = {\r\n            screenName: \"IDS_RELEASE\", operation: \"update\", primaryKeyName: \"ncoaparentcode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, selectedReleaseHistory: this.props.Login.masterData.selectedReleaseHistory\r\n        };\r\n\r\n        const ResultCorrectionParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 &&  this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode || -1,\r\n                ncontrolCode: ResultCorrectionId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })\r\n\r\n\r\n\r\n            }\r\n        };\r\n       \r\n\r\n        const reportSubFields = [{\r\n            [designProperties.VALUE]: \"susername\",\r\n            [designProperties.LABEL]: \"IDS_USERNAME\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sgenerateddate\",\r\n            [designProperties.LABEL]: \"IDS_GENERATEDDATE\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sversionno\",\r\n            [designProperties.LABEL]: \"IDS_VERSIONNO\"\r\n        },\r\n        {\r\n            [designProperties.VALUE]: \"sreporttemplatename\",\r\n            [designProperties.LABEL]: \"IDS_REPORTTEMPLATE\"\r\n        }\r\n        ];\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        {/* <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory}\r\n                                getMasterDetail={(ReleaseSample) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...ReleaseMasterDataParam,\r\n                                            ...ReleaseSample\r\n                                        }\r\n                                    )\r\n                                }\r\n                                selectedMaster={this.props.Login.masterData.selectedReleaseHistory}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                mainField=\"sreportno\"\r\n                                firstField=\"susername\"\r\n                                secondField=\"sgenerateddate\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={releaseId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getApprovedSample(ApprovedModalParam, releaseId)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                callCloseFunction={true}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            //   UserSection={this.state.UserSectionList || []}\r\n                                            //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            //   Test={this.state.TestList || []}\r\n                                            //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col> */}\r\n                        <Col md={12} className=\"parent-port-height\">\r\n                        <SplitterLayout \r\n                            borderColor=\"#999\"\r\n                            primaryIndex={1} \r\n                            percentage={true}\r\n                            secondaryInitialSize={this.state.splitChangeWidthPercentage}\r\n                            primaryMinSize={30}\r\n                            secondaryMinSize={20}\r\n                        >\r\n                            <TransactionListMasterJsonView\r\n                                listMasterShowIcon={1}\r\n                                clickIconGroup={true}\r\n                                splitChangeWidthPercentage={this.state.splitChangeWidthPercentage}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory || []}\r\n                                selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ? this.props.Login.masterData.selectedReleaseHistory : undefined}\r\n                                // selectedMaster={this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory !== undefined ? [this.props.Login.masterData.selectedReleaseHistory] : undefined}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                getMasterDetail={(ReleaseSample, status) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...ReleaseMasterDataParam,\r\n                                            ...ReleaseSample\r\n                                        }, status\r\n                                    )}\r\n                                // getMasterDetail={this.props.getReleasedDataDetails}\r\n                                // inputParam={{\r\n                                    // ...this.state.subSampleGetParam,\r\n                                    // searchTestRef: this.searchTestRef,\r\n                                    // searchSubSampleRef: this.searchSubSampleRef,\r\n                                    // testskip: this.state.testskip,\r\n                                    // subsampleskip: this.state.subsampleskip,\r\n                                    // resultDataState: this.state.resultDataState,\r\n                                    // activeTabIndex: this.state.enableAutoClick && this.state.activeTabIndex == undefined ? 4 : this.state.enableAutoClick && this.state.activeTabIndex == 0 ? 4 : this.state.enableAutoClick ? this.state.activeTabIndex : 0,\r\n                                // }}\r\n                                selectionList={this.props.Login.masterData && this.props.Login.masterData.transactionStatusSelectionList && this.props.Login.masterData.transactionStatusSelectionList.length > 0 ? this.props.Login.masterData.transactionStatusSelectionList : []}\r\n                                // hideQuickSearch={true}\r\n                                selectionColorField=\"scolorhexcode\"\r\n                                mainField={\"sreportno\"}\r\n                                showStatusLink={true}\r\n                                showStatusName={true}\r\n                                statusFieldName=\"stransdisplaystatus\"\r\n                                statusField=\"ntransactionstatus\"\r\n                                selectedListName=\"selectedReleaseHistory\"\r\n                                searchListName=\"searchedData\"\r\n                                searchRef={this.searchRef}\r\n                                objectName=\"releaseno\"\r\n                                listName=\"IDS_RELEASENO\"\r\n                                selectionField=\"ntransactionstatus\"\r\n                                selectionFieldName=\"stransdisplaystatus\"\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                subFields={reportSubFields}\r\n                                moreField={[]}\r\n                                needMultiSelect={this.props.Login.settings && this.props.Login.settings[50] ? parseInt(this.props.Login.settings[50]) === transactionStatus.YES ? true : false : false}\r\n                                showStatusBlink={true}\r\n                                callCloseFunction={true}\r\n                                filterParam={filterParam}\r\n                                subFieldsLabel={true}\r\n                                handlePageChange={this.handleReportNoPageChange}\r\n                                skip={this.state.skip}\r\n                                take={this.state.take}\r\n                                childTabsKey={[\"selectedReleaseHistory\", \"releaseno\", \"ReleasedSampleDetails\", \"ReleasedSubSampleDetails\", \"ReleasedTestDetails\"]}\r\n                                actionIcons={[]}\r\n                                needFilter={true}\r\n                                commonActions={\r\n                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                            hidden={this.state.userRoleControlRights.indexOf(releaseId) === -1}\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                            // data-for=\"tooltip_list_wrap\"\r\n                                            onClick={() => this.getApprovedSample(ApprovedModalParam, releaseId)}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                        </Button>\r\n                                        <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                            //   data-for=\"tooltip-common-wrap\"\r\n                                            onClick={this.reloadData} >\r\n                                            <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                        </Button>\r\n                                    </ProductList>\r\n                                }\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            //   UserSection={this.state.UserSectionList || []}\r\n                                            //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            //   Test={this.state.TestList || []}\r\n                                            //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        {/* <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?\r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i>\r\n                                    }\r\n                                </div>\r\n                            </div> */}\r\n                            {/* {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ? */}\r\n                            {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            {/* <Card.Title className=\"product-title-main\"> */}\r\n\r\n                                                {/* {this.props.Login.masterData && this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno !== 0 ?\r\n                                                    this.props.intl.formatMessage({ id: \"IDS_VERSIONNUMBER\" }) + \" : \" + this.props.Login.masterData.nversionno : \"\"} */}\r\n\r\n                                                {/* {( this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno )\r\n                                                    +  (this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno!==0 ?'-'+ this.props.Login.masterData.nversionno: \"\") } */}\r\n                                            {/* </Card.Title> */}\r\n                                            <Card.Subtitle>\r\n                                                {/* <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}> */}\r\n                                                            {/* <i className={activeIconCSS}></i> */}\r\n                                                            {/* {this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus}\r\n                                                        </span> */}\r\n\r\n                                                    {/* </h2> */}\r\n\r\n\r\n\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n\r\n\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(patientinfoId) === -1}\r\n                                                                onClick={() => this.patientInfo()}>\r\n                                                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}\r\n                                                            onClick={() => this.previewReport(previewId)}\r\n\r\n                                                        >\r\n                                                            \r\n                                                            <Preview />\r\n\r\n                                                        </Nav.Link> */}\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                                                                this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                            data-place=\"left\"\r\n                                                            // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(preliminaryId) === -1}\r\n                                                            onClick={() => this.preliminaryReport(preliminaryId)}\r\n\r\n                                                        >\r\n                                                            <PreliminaryReport className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {/* {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) && */}\r\n                                                        {\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode \r\n                                                                && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode !== reportCOAType.SAMPLEWISE && \r\n                                                                this.props.Login.masterData.realReportTypeValue.ncoareporttypecode !== reportCOAType.SECTIONWISE)  &&\r\n                                                        // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.props.getEditApprovedSample(EditModalParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEdit} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                        {/* } */}\r\n                                                        {/* {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) && */}\r\n                                                        {\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode \r\n                                                                && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode !== reportCOAType.SAMPLEWISE && \r\n                                                                this.props.Login.masterData.realReportTypeValue.ncoareporttypecode !== reportCOAType.SECTIONWISE)  &&\r\n                                                        // ((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\r\n                                                        //     (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                onClick={() => this.props.getRemoveApprovedSample(RemoveModalParam)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrash} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                        {/* } */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => {\r\n                                                                this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                                    this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\r\n                                                                    ? this.CorrectionComments(downloadId) : this.downloadReleasedFile(downloadId)\r\n                                                            }}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => { this.downloadReleasedValidation(downloadId) }}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {\r\n                                                        // this.props.Login.masterData.realSampleTypeValue && (this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\r\n                                                            // <Nav.Link\r\n                                                            //     className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //     data-tip={this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })} data-place=\"left\"\r\n                                                            //     hidden={this.state.userRoleControlRights.indexOf(correctionId) === -1}\r\n                                                            //     onClick={() => this.CorrectionStatus(correctionId)}\r\n                                                            // >\r\n                                                            //     <Correction className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            // </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {\r\n                                                        // (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES || \r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT) &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1}\r\n                                                                onClick={() => this.props.getResultCorrectionData(ResultCorrectionParam)}\r\n                                                            >\r\n                                                                <ResultCorrection className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {/* <Nav.Link\r\n\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(viewreportId) === -1}\r\n                                                            onClick={() => this.viewReport()}>\r\n                                                            <FontAwesomeIcon icon={faExpandArrowsAlt} />\r\n                                                        </Nav.Link> */}\r\n                                                        {/* {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}\r\n                                                                onClick={() => this.sendToPortal(sendtoportalId)}>\r\n                                                                <FontAwesomeIcon icon={faStore} />\r\n                                                            </Nav.Link>\r\n                                                        } */}\r\n\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE &&\r\n                                                            this.props.Login.masterData.realSampleTypeValue.noutsourcerequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(reportHistoryId) === -1}\r\n                                                                onClick={() => this.reportHistoryInfo()}>\r\n                                                                    <ReportHistory width='20px' height='20px' className='custon_icons' />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        {/* <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(releaseHistoryId) === -1}\r\n                                                                onClick={() => this.reportHistory(releaseHistoryId)}\r\n                                                          \r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faHistory} />                                                                                                                \r\n                                                            </Nav.Link> */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}\r\n                                                            onClick={() => this.regenerateReleasedFile(regenerateId)}>\r\n                                                            <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseReportHistoryId) === -1}\r\n                                                            onClick={() => this.releaseReportHistory(releaseReportHistoryId)}\r\n                                                        >\r\n                                                            {/* <Correction className=\"custom_icons\" width=\"20\" height=\"20\" /> */}\r\n                                                            <FontAwesomeIcon icon={faHistory} />\r\n                                                        </Nav.Link>\r\n\r\n                                                        {\r\n                                                        // this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE || \r\n                                                        //  this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PRODUCT ?\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTCORRECTION\" })} data-place=\"left\"\r\n                                                                //  data-for=\"tooltip-common-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editcommentsId) === -1}\r\n                                                                onClick={() => this.reportcomments('IDS_REPORTCORRECTION')}>\r\n                                                                <Comment className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            </Nav.Link>\r\n                                                            // : \"\"\r\n                                                            }\r\n\r\n                                                        {/* \r\n                                                        // START ALPD-3632 VISHAKH\r\n                                                        {this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue \r\n                                                        && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE\r\n                                                        && this.props.Login.settings && (parseInt(this.props.Login.settings[29]) === transactionStatus.YES) &&  \r\n                                                        END ALPD-3632 VISHAKH*/}\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseTestAttachmentId) === -1}\r\n                                                            onClick={() => this.releaseTestAttachmentData(\"IDS_RELEASETESTATTACHMENT\")}>\r\n                                                            {/* <FontAwesomeIcon icon={faFile} /> */}\r\n                                                            <ReleaseTestAttachmentIcon width='20px' height='20px' className='custom_icons' />\r\n                                                        </Nav.Link>\r\n                                                        {/* } */}\r\n\r\n                                                        {/* \r\n                                                        START ALPD-3632 VISHAKH\r\n                                                        {this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue \r\n                                                        && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE\r\n                                                        && this.props.Login.settings && (parseInt(this.props.Login.settings[29]) === transactionStatus.YES) &&  \r\n                                                        END ALPD-3632 VISHAKH*/}\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(releaseTestCommentId) === -1}\r\n                                                            onClick={() => this.releaseTestAttachmentData(\"IDS_RELEASETESTCOMMENT\")}>\r\n                                                            {/* <FontAwesomeIcon icon={faComments} /> */}                                                            \r\n                                                            <ReleaseTestCommentIcon width='20px' height='20px' className='custom_icons' />\r\n                                                        </Nav.Link>\r\n                                                        {/* } */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadReportId) === -1}\r\n                                                            onClick={() => this.downloadHistory(downloadReportId)}\r\n                                                        >\r\n                                                            <DownloadCertificate />\r\n                                                        </Nav.Link> */}\r\n\r\n                                                        {/* <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id:\"IDS_SYNC\"})} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(generateid) === -1}\r\n                                                            onClick={() => this.generatereport(generateid)}\r\n                                                           >   <FontAwesomeIcon icon={faSync} /> \r\n                                                             </Nav.Link>  */}\r\n                                                        \r\n                                                             <CustomPopover\r\n                                                                        nav={true}\r\n                                                                        data={\r\n                                                                            <>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                                                    onClick={() => this.previewReport(previewId)}>\r\n                                                                                    {/* <FontAwesomeIcon icon={faEye} /> */}\r\n                                                                                    <Preview /> {this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(preliminaryId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                                                                                        this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                                        : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                                                    data-place=\"left\"\r\n                                                                                    // data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\r\n                                                                                    onClick={() => this.preliminaryReport(preliminaryId)}>\r\n                                                                                    <PreliminaryReport className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                                                                                        this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                                                                                        : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item  as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    // className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} \r\n                                                                                    data-place=\"left\"\r\n                                                                                    //  data-for=\"tooltip-common-wrap\"\r\n                                                                                    onClick={() => { this.downloadReleasedValidation(downloadId) }}>\r\n                                                                                    <Generate className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(correctionId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })} data-place=\"left\"\r\n                                                                                    onClick={() => this.CorrectionStatus(correctionId)}>\r\n                                                                                    <Correction className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                                                    //  data-for=\"tooltip-common-wrap\"                                                                                    \r\n                                                                                    onClick={() => this.regenerateReleasedFile(regenerateId)}>\r\n                                                                                    <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" /> {this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(downloadReportId) === -1}>\r\n                                                                                <Nav.Link\r\n                                                                                    className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })} data-place=\"left\"\r\n                                                                                    onClick={() => this.downloadHistory(downloadReportId)}>\r\n                                                                                    <DownloadCertificate /> {this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFINALREPORT\" })}\r\n                                                                                    {/* <FontAwesomeIcon icon={faDownload} /> */}\r\n                                                                                </Nav.Link>\r\n                                                                            </ListGroup.Item>\r\n                                                                            <ListGroup.Item as=\"li\" className=\"btn_list\" hidden={this.state.userRoleControlRights.indexOf(generateid) === -1}>                                                                            \r\n                                                                                <Nav.Link\r\n                                                                                className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                data-tip={this.props.intl.formatMessage({ id:\"IDS_PORTALSYNC\"})} data-place=\"left\"                                                                                \r\n                                                                                onClick={() => this.generatereport(generateid)}>\r\n                                                                                    <FontAwesomeIcon icon={faSync} className='mr-2' /> {this.props.intl.formatMessage({ id:\"IDS_PORTALSYNC\"})} \r\n                                                                                </Nav.Link> \r\n                                                                            </ListGroup.Item>\r\n                                                                                {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n                                                                                    \r\n                                                                                    <ListGroup.Item as=\"li\" className=\"btn_list \"  hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}>\r\n                                                                                        <Nav.Link\r\n                                                                                            className=\"add-txt-btn blue-text link_icons nav-link ml-2\"\r\n                                                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}                                                                                           \r\n                                                                                            onClick={() => this.sendToPortal(sendtoportalId)}>\r\n                                                                                            <FontAwesomeIcon icon={faStore} /> {this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                                        </Nav.Link>                                                                                            \r\n                                                                                    </ListGroup.Item>\r\n                                                                                }\r\n                                                                            </>\r\n                                                                        }\r\n                                                                        Button={false}\r\n                                                                        hideIcon={true}\r\n                                                                        btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                        textKey=\"value\"\r\n                                                                        icon={faChevronCircleDown}\r\n                                                                        // toolTip={this.props.intl.formatMessage({ id: \"IDS_CONFIGURE\" })}\r\n                                                                        dynamicButton={(value) => this.actionMethod(value)}\r\n                                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                    />\r\n\r\n                                                    </ProductList>\r\n                                                {/* </div> */}\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            {/* <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REPORTNO\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                            this.props.Login.masterData.selectedReleaseHistory.sreportno}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row> */}\r\n                                            <DataGridWithMultipleGrid\r\n                                                needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                data={this.state.data}\r\n                                                dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState)}\r\n                                                dataState={this.state.dataState}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                expandNextData={this.expandNextData}\r\n                                                checkFunction={this.checkFunction}\r\n                                                checkFunction1={this.checkFunction1}\r\n                                                expandFunc={this.expandFunc}\r\n                                                //expandData={this.expandData}\r\n                                                childDataResult={this.state.childDataResult}\r\n                                                subChildDataResult={this.state.subChildDataResult}\r\n                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                                expandField=\"expanded\"\r\n                                                reloadData={this.reloadData}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={'scrollable'}\r\n                                                gridHeight={'525px'}\r\n                                                gridTop={'10px'}\r\n                                                //   isActionRequired={true}\r\n                                                //   isToolBarRequired={true}\r\n                                                //  isExpandRequired={true}\r\n                                                //   isDownloadRequired={true}\r\n                                                isCheckBoxRequired={false}\r\n                                                isCollapseRequired={true}\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                hasChild={true}\r\n                                                hasSubChild={true}\r\n                                                childList={\r\n                                                    this.props.Login.masterData.ReleasedSubSampleDetails\r\n                                                }\r\n                                                childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                childMappingField={\"npreregno\"}\r\n                                                subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                                subChildList={\r\n                                                    this.props.Login.masterData.ReleasedTestDetails\r\n                                                }\r\n                                                selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                methodUrl={\"Release\"}\r\n                                                headerSelectionChange={this.headerSelectionChange}\r\n                                                childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                childSelectionChange={this.childSelectionChange}\r\n                                                subChildSelectionChange={this.subChildSelectionChange}\r\n                                                subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                selectionChange={this.selectionChange}\r\n                                                releaseRecord={this.onSaveModalClick}\r\n                                            // viewDownloadFile={this.viewDownloadFile}\r\n                                            />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n                            </SplitterLayout>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div >\r\n                {\r\n                    this.state.showReport ?\r\n                        <DocViewer file={filePath}\r\n                            showReport={this.state.showReport}\r\n                            closeModal={this.closeDocModal}\r\n                            type={\"pdf\"}>\r\n                        </DocViewer>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openModal || this.state.openModal}\r\n                        size={(this.props.Login.loadEsign || this.props.Login.loadEsignStateHandle) ? \"lg\" : \"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        mandatoryFields={this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) \r\n                            ? mandatoryFields  : \"\"}\r\n                        screenName={this.props.Login.loadEsignStateHandle ? this.props.intl.formatMessage({ id: \"IDS_ESIGN\" }) : this.props.Login.isPatientDetails ?\r\n                            this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })\r\n                            : this.props.Login.isPatientReports ? this.props.intl.formatMessage({ id: \"IDS_REPORTHISTORY\" })\r\n                                : this.props.Login.isReleaseTestAttachment ? this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" })\r\n                                    : this.props.Login.isReleaseTestComment ? this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" })\r\n                                        : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n                                            : this.props.Login.screenName}\r\n                        onSaveClick={this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ? this.downloadReleasedFile : \r\n                            (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle || \r\n                                this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })) ? this.onMandatoryCheck : \r\n                            this.onSaveModalClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        //noSave={this.props.Login.openModalTitle=='versionhistory' ? true : false}\r\n                        hideSave={this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) ||\r\n                            this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\"  ? true:this.props.Login.FilterQueryBuilder?true : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? true : ((this.props.Login.isReleaseTestAttachment || this.props.Login.isReleaseTestComment) && !this.props.Login.loadEsignStateHandle) ? true : this.props.Login.hideSave}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.Login.loadEsignStateHandle ?\r\n                                <EsignStateHandle\r\n                                    operation={this.props.Login.operation}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    childDataChange={this.childDataChange}\r\n                                />\r\n                                : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) ?\r\n                                    <ReleaseReportHistory\r\n                                        operation={this.props.Login.operation}\r\n                                        // designData={this.props.Login.designData || {}}\r\n                                        inputParam={this.props.Login.inputParam}\r\n                                        dataResult={this.props.Login.masterData}\r\n                                        //    this.props.Login.dataResult || [] :\r\n                                        //   this.props.Login.dataResult || {}}\r\n                                        //onChangeToggle={this.onChangeToggle}\r\n                                        settings={this.props.Login.settings}\r\n                                        viewDownloadFile={this.viewDownloadFile}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights} />\r\n                                    : this.props.Login.screenName === \"IDS_PATIENTSEARCH\" ?\r\n                                        <FilterQueryBuilder\r\n                                            fields={this.props.Login.fields || {}}\r\n                                            onChange={this.onChangeAwesomeQueryBuilder}\r\n                                            tree={this.props.Login.awesomeTree}\r\n                                            config={this.props.Login.awesomeConfig}\r\n                                            skip={this.props.Login.kendoSkip}\r\n                                            take={this.props.Login.kendoTake}\r\n                                            handlePageChange={this.handlePageChange}\r\n                                            gridColumns={this.props.Login.gridColumns || []}\r\n                                            filterData={this.props.Login.lstPatient}\r\n                                            onRowClick={this.handleKendoRowClick}\r\n                                            handleExecuteClick={this.handleExecuteClick}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                        />\r\n                                        : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ?\r\n                                            <VersionHistGrid\r\n                                                versionHistory={this.props.Login.masterData.versionHistory}\r\n                                                isExportExcelRequired={false}\r\n                                                dataState={this.state.versionHistoryDataState}\r\n                                                dataResult={process(this.props.Login.masterData && this.props.Login.masterData.versionHistory || [], this.state.versionHistoryDataState)}\r\n                                                dataStateChange={this.versionHistoryDataStateChange}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                viewDownloadFile={this.viewDownloadFile}\r\n                                            />\r\n                                            : this.props.Login.isPatientDetails ?\r\n                                            this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length === 1 ?\r\n                                                <SampleInfoView\r\n                                                    data={(this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0) ?\r\n                                                        this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {}}\r\n                                                    SingleItem={this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ?\r\n                                                        this.state.SingleItem : []}\r\n                                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                />\r\n                                                : \r\n                                                <SampleGridTab\r\n                                                    userInfo={this.props.Login.masterData.userInfo || {}}\r\n                                                    GridData={this.props.Login.masterData.ReleasedSampleDetails || []}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    dataState={this.state.sampleGridDataState}\r\n                                                    dataStateChange={this.sampleGridDataStateChange}\r\n                                                    extractedColumnList={this.gridfillingColumn(this.state.SingleItem) || []}\r\n                                                    detailedFieldList={[]}\r\n                                                    primaryKeyField={\"npreregno\"}\r\n                                                    expandField=\"expanded\"\r\n                                                    screenName=\"IDS_PATIENTINFO\"\r\n                                                />\r\n                                                : this.props.Login.isPatientReports && this.props.Login.openModal ?\r\n                                                    <DataGrid\r\n                                                        // key=\"nreleaseoutsourceattachcode\"\r\n                                                        primaryKeyField=\"nreleaseoutsourceattachcode\"\r\n                                                        data={this.props.Login.masterData.PatientReports || []}\r\n                                                        dataResult={process(this.props.Login.masterData.PatientReports && this.props.Login.masterData.PatientReports || [], this.state.outsourceFileDataState)}\r\n                                                        dataState={this.state.outsourceFileDataState}\r\n                                                        isExportExcelRequired={false}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        extractedColumnList={this.fieldsForReleasedReportGrid}\r\n                                                        selectedId={this.props.Login.selectedId}\r\n                                                        pageable={true}\r\n                                                        dataStateChange={this.outsourceFileDataStateChange}\r\n                                                        scrollable={'scrollable'}\r\n                                                        gridHeight={'630px'}\r\n                                                        isActionRequired={true}\r\n                                                        methodUrl={'PatientReports'}\r\n                                                        viewDownloadFile={this.viewSelectedReport}\r\n                                                    >\r\n                                                    </DataGrid>\r\n                                                    : this.props.Login.isReleaseTestAttachment && this.props.Login.openModal ?\r\n                                                        <ReleaseTestAttachment\r\n                                                            ReleaseTestAttachmentDetails={this.props.Login.masterData.ReleaseTestAttachmentDetails || []}\r\n                                                            controlMap={this.state.controlMap}\r\n                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                            storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                            userInfo={this.props.Login.userInfo}\r\n                                                            methodUrl={'ReleaseTestAttachment'}\r\n                                                            settings={this.props.Login.settings}\r\n                                                            isAddRequired={true}\r\n                                                            isRefreshRequired={false}\r\n                                                            isImportRequired={false}\r\n                                                            isDownloadPDFRequired={false}\r\n                                                            isDownloadExcelRequired={false}\r\n                                                            inputParam={this.props.Login.inputParam}\r\n                                                            screenName={\"IDS_RELEASETESTATTACHMENT\"}\r\n                                                            maxSize={20}\r\n                                                            masterData={this.props.Login.masterData}\r\n                                                            isDataGrid={this.props.Login.isDataGrid}\r\n                                                            selectedRecord={this.state.selectedRecord}\r\n                                                            operation={this.props.Login.operation}\r\n                                                            childDataChange={this.childDataChange}\r\n                                                            deleteRecord={this.deleteReleaseTestAttachment}\r\n                                                            dataState={this.state.testAttachmentDataState}\r\n                                                            dataStateChange={this.testAttachmentDataStateChange}\r\n                                                        />\r\n                                                        : this.props.Login.isAddReleaseTestAttachment ?\r\n                                                            <AddReleaseTestAttachment\r\n                                                                ReleaseTestAttachmentDetails={this.props.Login.masterData.ReleaseTestAttachmentDetails || []}\r\n                                                                controlMap={this.state.controlMap}\r\n                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                userInfo={this.props.Login.userInfo}\r\n                                                                methodUrl={'ReleaseTestAttachment'}\r\n                                                                settings={this.props.Login.settings}\r\n                                                                isAddRequired={true}\r\n                                                                isRefreshRequired={false}\r\n                                                                isImportRequired={false}\r\n                                                                isDownloadPDFRequired={false}\r\n                                                                isDownloadExcelRequired={false}\r\n                                                                inputParam={this.props.Login.inputParam}\r\n                                                                screenName={\"ReleaseTestAttachment\"}\r\n                                                                maxSize={20}\r\n                                                                masterData={this.props.Login.masterData}\r\n                                                                isDataGrid={this.props.Login.isDataGrid}\r\n                                                                selectedRecord={this.state.selectedRecord}\r\n                                                                operation={this.props.Login.operation}\r\n                                                                childDataChange={this.childDataChange}\r\n                                                            />\r\n                                                            : this.props.Login.isReleaseTestComment && this.props.Login.openModal ?\r\n                                                                <ReleaseTestComment\r\n                                                                    ReleaseTestCommentDetails={this.props.Login.masterData.ReleaseTestCommentDetails || []}\r\n                                                                    controlMap={this.state.controlMap}\r\n                                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                    storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                    userInfo={this.props.Login.userInfo}\r\n                                                                    methodUrl={'ReleaseTestComment'}\r\n                                                                    settings={this.props.Login.settings}\r\n                                                                    isAddRequired={true}\r\n                                                                    isRefreshRequired={false}\r\n                                                                    isImportRequired={false}\r\n                                                                    isDownloadPDFRequired={false}\r\n                                                                    isDownloadExcelRequired={false}\r\n                                                                    inputParam={this.props.Login.inputParam}\r\n                                                                    screenName={\"IDS_RELEASETESTCOMMENT\"}\r\n                                                                    maxSize={20}\r\n                                                                    masterData={this.props.Login.masterData}\r\n                                                                    CommentSubType={this.props.Login.masterData.CommentSubType}\r\n                                                                    deleteRecord={this.deleteReleaseTestComment}\r\n                                                                    dataState={this.state.testCommentDataState}\r\n                                                                    dataStateChange={this.testCommentDataStateChange}\r\n                                                                />\r\n                                                                : this.props.Login.isAddReleaseTestComment ?\r\n                                                                    <AddReleaseTestComment\r\n                                                                        ReleaseTestCommentDetails={this.props.Login.masterData.ReleaseTestCommentDetails || []}\r\n                                                                        controlMap={this.state.controlMap}\r\n                                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                        storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                        methodUrl={'ReleaseTestComment'}\r\n                                                                        settings={this.props.Login.settings}\r\n                                                                        isAddRequired={true}\r\n                                                                        isRefreshRequired={false}\r\n                                                                        isImportRequired={false}\r\n                                                                        isDownloadPDFRequired={false}\r\n                                                                        isDownloadExcelRequired={false}\r\n                                                                        inputParam={this.props.Login.inputParam}\r\n                                                                        screenName={\"ReleaseTestComment\"}\r\n                                                                        maxSize={20}\r\n                                                                        masterData={this.props.Login.masterData}\r\n                                                                        CommentSubType={this.props.Login.masterData.CommentSubType}\r\n                                                                        selectedRecord={this.state.selectedRecord}\r\n                                                                        childDataChange={this.childDataChange}\r\n                                                                        operation={this.props.Login.operation}\r\n                                                                        SampleTestComments={this.props.Login.SampleTestComments}\r\n                                                                    />\r\n                                                                    : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" && this.props.Login.openModal ?\r\n                                                                        <DataGrid\r\n                                                                            key=\"reportinforeleasecode\"\r\n                                                                            primaryKeyField=\"nreportinforeleasecode\"\r\n                                                                            data={this.props.Login.masterData.reportinforelease || []}\r\n                                                                            dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState)}\r\n                                                                            dataState={this.state.reportInfoDataState}\r\n                                                                            //dataResult={this.props.selectedWorklist || []}\r\n                                                                            //expandField=\"expanded\"\r\n                                                                            isExportExcelRequired={false}\r\n                                                                            //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                                                                            controlMap={this.state.controlMap}\r\n                                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                            extractedColumnList={this.feildsForGrid}\r\n                                                                            detailedFieldList={this.props.detailedFieldList}\r\n                                                                            editParam={editReportParam}\r\n                                                                            selectedId={this.props.Login.selectedId}\r\n                                                                            fetchRecord={this.props.fetchReportInfoReleaseById}\r\n                                                                            pageable={true}\r\n                                                                            dataStateChange={this.reportInfoDataChange}\r\n                                                                            scrollable={'scrollable'}\r\n                                                                            gridHeight={'630px'}\r\n                                                                            isActionRequired={true}\r\n                                                                            methodUrl={'ReportComment'}\r\n                                                                        // actionIcons={[{\r\n                                                                        //     title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\r\n                                                                        //     controlname: \"faEye\",\r\n                                                                        //     objectName: \"ExceptionLogs\",\r\n                                                                        //     hidden: -1 === -1,\r\n                                                                        //    onClick: (viewSample) => this.props.viewSample(viewSample)\r\n                                                                        // }]}\r\n                                                                        >\r\n                                                                        </DataGrid>\r\n                                                                        : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ?\r\n                                                                            <Row>\r\n                                                                                <Col md={12}>\r\n                                                                                    <FormInput\r\n                                                                                        label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                                        name=\"sreportcomments\"\r\n                                                                                        type=\"text\"\r\n                                                                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                                                        value={this.state.selectedRecord[\"sreportcomments\"] ? this.state.selectedRecord[\"sreportcomments\"] : \"\"}\r\n                                                                                        isMandatory={true}\r\n                                                                                        required={true}\r\n                                                                                        maxLength={255}\r\n                                                                                    />\r\n                                                                                </Col>\r\n                                                                            </Row>\r\n                                                                            :\r\n                                                                            this.props.Login.FilterQueryBuilder?\r\n                                                                            <>\r\n                                                                         <Row>\r\n                                                                           <FilterQueryBuilder\r\n                                                                           fields={this.props.Login.fields || {}}\r\n                                                                           onChange={this.onComboChangeAwesomeQueryBuilder}\r\n                                                                           tree={this.props.Login.awesomeTree}\r\n                                                                           config={this.props.Login.awesomeConfig}\r\n                                                                           skip={this.props.Login.kendoSkip}\r\n                                                                           take={this.props.Login.kendoTake}\r\n                                                                           handlePageChange={this.handlePageChange}\r\n                                                                           gridColumns={[]}\r\n                                                                           filterData={this.props.Login.lstPatient || []}\r\n                                                                           //onRowClick={this.handleKendoRowClick}\r\n                                                                           //handleExecuteClick={this.handleExecuteClick}\r\n                                                                           userInfo={this.props.Login.userInfo}\r\n                                                                           static={true}\r\n                                                                       />\r\n                                                                         \r\n                                                                         <Col md={3}>\r\n                                                                           <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks(false)}>\r\n                                                                               {/* <FontAwesomeIcon icon={faCalculator} /> { } */}\r\n                                                                               <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                                                           </Button>\r\n                                                                           </Col>\r\n                                                                           </Row>\r\n                                                                           </>\r\n                                                                            :\r\n                                                                            <>\r\n                                                                               \r\n                                                                                    \r\n                                                                                    {\r\n                                                                                         (\r\n                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                            this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        // //  this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                                                                        // //  (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        // this.props.Login.masterData.realReportTypeValue\r\n                                                                                        // && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                        //     this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        // //this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                                                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                                                        //this.props.Login.isComboCheck !== true &&\r\n                                                                                        //this.props.Login.isEditPopup === true &&\r\n                                                                                        this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) &&\r\n                                                                                        this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE &&\r\n                                                                                       // this.state.DynamicReportFilterTypeItem && this.state.DynamicReportFilterTypeItem.length>0 &&\r\n                                                                                      <>\r\n                                                                                      <Row>\r\n                                                                                            <Col md={3} className='pb-4'>\r\n                                                                                            <Button className=\"btn-user btn-primary-blue\" onClick={() => this.openFilterQuery()}>\r\n                                                                                                <FontAwesomeIcon icon={faSearch} /> { }\r\n                                                                                            {/* <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' /> */}\r\n                                                                                            </Button>\r\n                                                                                            <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks(true)}>\r\n                                                                                                <FontAwesomeIcon icon={faTimes} /> { }\r\n                                                                                                <FormattedMessage id='IDS_CLEARFILTER' defaultMessage='Clear Filter' />\r\n                                                                                            </Button>                                                                                       \r\n                                                                                            </Col>\r\n                                                                                            <Col md={3} className='pb-4'>\r\n                                                                                                {this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }) && \r\n                                                                                                <FormSelectSearch\r\n                                                                                                    name={\"nreporttemplatecode\"}\r\n                                                                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATE\" })}\r\n                                                                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                                    options={this.props.Login.masterData.reportTemplateList || []}\r\n                                                                                                    value={this.state.selectedRecord[\"nreporttemplatecode\"] || \"\"}\r\n                                                                                                    isMandatory={true}\r\n                                                                                                    isMulti={false}\r\n                                                                                                    isClearable={false}\r\n                                                                                                    isSearchable={true}\r\n                                                                                                    // isDisabled={props.operation === \"update\" && props.reportVersionStatus === transactionStatus.APPROVED}\r\n                                                                                                    closeMenuOnSelect={true}\r\n                                                                                                    onChange={(event) => this.onComboChange(event, \"nreporttemplatecode\")}\r\n                                                                                                />\r\n                                                                                            }\r\n                                                                                            </Col>\r\n                                                                                            {/* <Col md={3} className='pb-4'></Col>\r\n                                                                                            <Col md={3} className='pb-4'>\r\n                                                                                            {this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }) &&\r\n                                                                                                <CustomSwitch\r\n                                                                                                    name={'nmultiplesampleinsinglerelease'}\r\n                                                                                                    type=\"switch\"\r\n                                                                                                    label={this.props.intl.formatMessage({ id: \"IDS_MULTIPLESAMPLESINSINGLERELEASE\" })}\r\n                                                                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_MULTIPLESAMPLESINSINGLERELEASE\" })}                            \r\n                                                                                                    isMandatory={false}                       \r\n                                                                                                    required={false}                                   \r\n                                                                                                    onChange={(event)=> this.onInputOnChange(event)}\r\n                                                                                                    // defaultValue ={props.selectedRecord[item.controlName] === 3 ? true :false }\r\n                                                                                                    checked={this.state.selectedRecord ? this.state.selectedRecord[\"nmultiplesampleinsinglerelease\"] === 3 ? true : false : false}\r\n                                                                                                />\r\n                                                                                            }\r\n                                                                                            </Col> */}\r\n                                                                                        </Row>\r\n                                                                                        {/* <FilterQueryBuilder\r\n                                                                                        fields={this.props.Login.fields || {}}\r\n                                                                                        onChange={this.onComboChangeAwesomeQueryBuilder}\r\n                                                                                        tree={this.props.Login.awesomeTree}\r\n                                                                                        config={this.props.Login.awesomeConfig}\r\n                                                                                        skip={this.props.Login.kendoSkip}\r\n                                                                                        take={this.props.Login.kendoTake}\r\n                                                                                        handlePageChange={this.handlePageChange}\r\n                                                                                        gridColumns={[]}\r\n                                                                                        filterData={this.props.Login.lstPatient || []}\r\n                                                                                        //onRowClick={this.handleKendoRowClick}\r\n                                                                                        //handleExecuteClick={this.handleExecuteClick}\r\n                                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                                        static={true}\r\n                                                                                    /> */}\r\n                                                                                      \r\n                                                                                      {/* <Col md={3}>\r\n                                                                                        <Button className=\"btn-user btn-primary-blue\" onClick={() => this.handleExecuteClicks()}>\r\n                                                                                            <FormattedMessage id='IDS_EXECUTE' defaultMessage='Execute' />\r\n                                                                                        </Button>\r\n                                                                                        </Col> */}\r\n                                                                                        </>\r\n                                                                                        // <Col md={4}>\r\n                                                                                        //     <FormSelectSearch\r\n                                                                                        //         name={\"nprojecttypecode\"}\r\n                                                                                        //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                                                        //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                        //         options={this.props.Login.ProjectTypeList}\r\n                                                                                        //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                                                        //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                                                        //         isMandatory={true}\r\n                                                                                        //         isMulti={false}\r\n                                                                                        //         isSearchable={true}\r\n                                                                                        //         //  isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                        //         closeMenuOnSelect={true}\r\n                                                                                        //         alphabeticalSort={true}\r\n                                                                                        //         onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\r\n                                                                                        //     />\r\n                                                                                        // </Col>\r\n                                                                                    }\r\n                                                                                    {/* {(this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        // this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                                                                        // (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        this.props.Login.masterData.realReportTypeValue\r\n                                                                                        && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                            this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                                                        this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                                                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                                                        this.props.Login.isComboCheck !== true &&\r\n                                                                                        this.props.Login.isEditPopup !== true &&\r\n                                                                                        this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" }) &&\r\n\r\n                                                                                        // <Col md={4}>\r\n                                                                                        //     <FormSelectSearch\r\n                                                                                        //         name={\"nprojectmastercode\"}\r\n                                                                                        //         formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                                                                                        //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                        //         options={this.props.Login.projectMasterList}\r\n                                                                                        //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] !== undefined ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\" : \"\"}\r\n                                                                                        //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                                                        //         isMandatory={true}\r\n                                                                                        //         isMulti={false}\r\n                                                                                        //         isSearchable={true}\r\n                                                                                        //         // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                        //         closeMenuOnSelect={true}\r\n                                                                                        //         alphabeticalSort={true}\r\n                                                                                        //         onChange={(event) => this.onComboChange(event, 'nprojectmastercode', 1)}\r\n                                                                                        //     />\r\n                                                                                        // </Col>\r\n                                                                                    } */}\r\n                                                                                    {/* {(this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                                                        this.props.Login.masterData.realReportTypeValue &&\r\n                                                                                        (this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                                                            this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\r\n                                                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                                                        this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true &&\r\n                                                                                        // <Col md={4}>\r\n                                                                                        //     <FormSelectSearch\r\n                                                                                        //         name={\"nsectioncode\"}\r\n                                                                                        //         formLabel={this.props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                                                                        //         placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                                                        //         options={this.props.Login.sectionList}\r\n                                                                                        //         value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] !== undefined ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\" : \"\"}\r\n                                                                                        //         defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                                                                                        //         isMandatory={true}\r\n                                                                                        //         isMulti={false}\r\n                                                                                        //         isSearchable={true}\r\n                                                                                        //         // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                                                        //         closeMenuOnSelect={true}\r\n                                                                                        //         alphabeticalSort={true}\r\n                                                                                        //         onChange={(event) => this.onComboChange(event, 'nsectioncode', 1)}\r\n                                                                                        //     />\r\n                                                                                        // </Col>\r\n                                                                                    } */}\r\n                                                                                 <Row>\r\n\r\n\r\n                                                                                    {this.props.Login.ReportmodalShow ? (\r\n                                                                                        <ModalShow\r\n                                                                                            modalShow={this.props.Login.ReportmodalShow}\r\n                                                                                            closeModal={this.closeModalShow}\r\n                                                                                            onSaveClick={this.onSaveModalClick}\r\n                                                                                            validateEsign={this.validateEsign}\r\n                                                                                            masterStatus={this.props.Login.masterStatus}\r\n                                                                                            //  mandatoryFields={mandatoryFields}\r\n                                                                                            updateStore={this.props.updateStore}\r\n                                                                                            selectedRecord={this.state.selectedRecord || {}}\r\n                                                                                            modalTitle={this.props.Login.modalTitle}\r\n                                                                                            modalBody={\r\n                                                                                                this.props.Login.loadEsign ?\r\n                                                                                                    <Esign\r\n                                                                                                        operation={this.props.Login.operation}\r\n                                                                                                        onInputOnChange={this.onEsignInputOnChange}\r\n                                                                                                        inputParam={this.props.Login.inputParam}\r\n                                                                                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                                                                                    /> :\r\n\r\n\r\n                                                                                                    <Col md={12}>\r\n\r\n                                                                                                        <FormTextarea\r\n                                                                                                            label={this.props.intl.formatMessage({ id: this.props.Login.masterData.selectedComment.sreportfieldname })}\r\n                                                                                                            name={\"sreportfieldvalue\"}\r\n                                                                                                            type=\"text\"\r\n                                                                                                            onChange={this.onInputChange}\r\n                                                                                                            placeholder={this.props.intl.formatMessage({ id: this.props.Login.masterData.selectedComment.sreportfieldname })}\r\n                                                                                                            value={this.state.selectedComment ? this.state.selectedComment.sreportfieldvalue : \"\"}\r\n                                                                                                            isMandatory={true}\r\n                                                                                                            required={true}\r\n                                                                                                            maxLength={\"500\"}\r\n                                                                                                        />\r\n                                                                                                    </Col>\r\n\r\n                                                                                            }\r\n                                                                                        />\r\n                                                                                    ) : (\r\n                                                                                        \"\"\r\n                                                                                    )}\r\n\r\n                                                                                </Row>\r\n\r\n                                                                                {this.props.Login.isCorrectionNeed && this.props.Login.isCorrectionNeed ?\r\n                                                                                    <DataGrid\r\n                                                                                        primaryKeyField={\"ntransactionresultcode\"}\r\n                                                                                        selectedId={this.props.Login.selectedId}\r\n                                                                                        data={this.props.Login.masterData.ResultCorrection}\r\n                                                                                        dataResult={process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.correctionDataState)}\r\n                                                                                        dataState={this.state.correctionDataState}\r\n                                                                                        dataStateChange={this.correctionDataStateChange}\r\n                                                                                        extractedColumnList={resultCorrectionColumnList}\r\n                                                                                        controlMap={this.state.controlMap}\r\n                                                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                        inputParam={this.props.Login.inputParam}\r\n                                                                                        methodUrl={\"Result\"}\r\n                                                                                        userInfo={this.props.Login.userInfo}\r\n                                                                                        fetchRecord={this.props.fetchParameterById}\r\n                                                                                        deleteRecord={this.deleteRecord}\r\n                                                                                        //  reloadData={this.reloadData}\r\n                                                                                        //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\r\n                                                                                        editParam={editParam}\r\n                                                                                        //  deleteParam={deleteParam}\r\n                                                                                        scrollable={'scrollable'}\r\n                                                                                        gridHeight={'600px'}\r\n                                                                                        isActionRequired={true}\r\n                                                                                        //  isToolBarRequired={true}\r\n                                                                                        pageable={true}\r\n                                                                                    /> :\r\n                                                                                    (this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                                                        this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENT\" && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" ?\r\n                                                                                        <DataGridWithMultipleGrid\r\n                                                                                            needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                                                            data={this.state.data}\r\n                                                                                            dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                                                                            dataState={this.state.dataState}\r\n                                                                                            dataStateChange={this.dataStateChange}\r\n                                                                                            expandNextData={this.expandNextData}\r\n                                                                                            checkFunction={this.checkFunction}\r\n                                                                                            checkFunction1={this.checkFunction1}\r\n                                                                                            expandFunc={this.expandFunc}\r\n                                                                                            childDataResult={this.state.childDataResult}\r\n                                                                                            subChildDataResult={this.state.subChildDataResult}\r\n                                                                                            extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                            subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n                                                                                            expandField=\"expanded\"\r\n                                                                                            handleExpandChange={this.handleExpandChange}\r\n                                                                                            childHandleExpandChange={this.childHandleExpandChange}\r\n                                                                                            isCheckBoxRequired={true}\r\n                                                                                            reloadData={this.reloadData}\r\n                                                                                            controlMap={this.state.controlMap}\r\n                                                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                            inputParam={this.props.Login.inputParam}\r\n                                                                                            userInfo={this.props.Login.userInfo}\r\n                                                                                            pageable={true}\r\n                                                                                            scrollable={'scrollable'}\r\n                                                                                            gridHeight={'600px'}\r\n                                                                                            gridTop={'10px'}\r\n                                                                                            // isActionRequired={true}\r\n                                                                                            //   isToolBarRequired={true}\r\n                                                                                            //  isExpandRequired={true}\r\n                                                                                            //   isDownloadRequired={true}\r\n                                                                                            isCollapseRequired={true}\r\n                                                                                            selectedId={this.props.Login.selectedId}\r\n                                                                                            hasChild={true}\r\n                                                                                            hasSubChild={true}\r\n                                                                                            childList={\r\n                                                                                                this.props.Login.masterData.searchedData2 ||\r\n                                                                                                this.props.Login.masterData.ReleaseSubSample\r\n                                                                                            }\r\n                                                                                            childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                                                            childMappingField={\"npreregno\"}\r\n                                                                                            subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                                                            subChildList={\r\n                                                                                                this.props.Login.masterData.searchedData3 ||\r\n                                                                                                this.props.Login.masterData.ReleaseTest\r\n                                                                                            }\r\n                                                                                            selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                                                            methodUrl={\"Release\"}\r\n                                                                                            headerSelectionChange={this.headerSelectionChange}\r\n                                                                                            childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                                                            childSelectAll={this.props.Login.childSelectAll}\r\n                                                                                            childSelectionChange={this.childSelectionChange}\r\n                                                                                            subChildSelectionChange={this.subChildSelectionChange}\r\n                                                                                            subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                                                            subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                                                            selectionChange={this.selectionChange}\r\n                                                                                            selectAll={this.props.Login.selectAll}\r\n                                                                                            releaseRecord={this.onSaveModalClick}\r\n                                                                                        // viewDownloadFile={this.viewDownloadFile}\r\n                                                                                        />\r\n                                                                                        :\r\n                                                                                        this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ?\r\n                                                                                            <DataGrid\r\n                                                                                                key=\"reportinforeleasecode\"\r\n                                                                                                primaryKeyField=\"nreportinforeleasecode\"\r\n                                                                                                data={this.props.Login.masterData.reportinforelease || []}\r\n                                                                                                dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState)}\r\n                                                                                                dataState={this.state.reportInfoDataState}\r\n                                                                                                //dataResult={this.props.selectedWorklist || []}\r\n                                                                                                //expandField=\"expanded\"\r\n                                                                                                isExportExcelRequired={false}\r\n                                                                                                //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                                                                                                controlMap={this.state.controlMap}\r\n                                                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                                extractedColumnList={this.feildsForGrid}\r\n                                                                                                detailedFieldList={this.props.detailedFieldList}\r\n                                                                                                editParam={editParam}\r\n                                                                                                fetchRecord={this.props.fetchReportInfoReleaseById}\r\n                                                                                                pageable={true}\r\n                                                                                                dataStateChange={this.reportInfoDataChange}\r\n                                                                                                scrollable={'scrollable'}\r\n                                                                                                gridHeight={'630px'}\r\n                                                                                                isActionRequired={true}\r\n                                                                                                methodUrl={'ReportComment'}\r\n                                                                                            >\r\n                                                                                            </DataGrid> :\r\n                                                                                            //     <DataGridWithMultipleGrid\r\n                                                                                            //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                                                            //     data={this.state.data}\r\n                                                                                            //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                                                                            //     dataState={this.state.dataState}\r\n                                                                                            //     dataStateChange={this.dataStateChange}\r\n                                                                                            //     expandNextData={this.expandNextData}\r\n                                                                                            //     checkFunction={this.checkFunction}\r\n                                                                                            //     checkFunction1={this.checkFunction1}\r\n                                                                                            //     expandFunc={this.expandFunc}\r\n                                                                                            //     childDataResult={this.state.childDataResult}\r\n                                                                                            //     subChildDataResult={this.state.subChildDataResult}\r\n                                                                                            //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                                                            //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                                                            //     expandField=\"expanded\"\r\n                                                                                            //     handleExpandChange={this.handleExpandChange}\r\n                                                                                            //     childHandleExpandChange={this.childHandleExpandChange}\r\n                                                                                            //     isCheckBoxRequired={true}\r\n\r\n                                                                                            //     reloadData={this.reloadData}\r\n                                                                                            //     controlMap={this.state.controlMap}\r\n                                                                                            //     userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                                            //     inputParam={this.props.Login.inputParam}\r\n                                                                                            //     userInfo={this.props.Login.userInfo}\r\n                                                                                            //     pageable={true}\r\n                                                                                            //     scrollable={'scrollable'}\r\n                                                                                            //     gridHeight={'600px'}\r\n                                                                                            //     gridTop={'10px'}\r\n                                                                                            //    // isActionRequired={true}\r\n                                                                                            //     //   isToolBarRequired={true}\r\n                                                                                            //     //  isExpandRequired={true}\r\n                                                                                            //     //   isDownloadRequired={true}\r\n                                                                                            //     isCollapseRequired={true}\r\n\r\n                                                                                            //     selectedId={this.props.Login.selectedId}\r\n                                                                                            //     hasChild={true}\r\n                                                                                            //     hasSubChild={true}\r\n                                                                                            //     childList={\r\n                                                                                            //         this.props.Login.masterData.searchedData2 ||\r\n                                                                                            //         this.props.Login.masterData.ReleaseSubSample\r\n                                                                                            //     }\r\n                                                                                            //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                                                            //     childMappingField={\"npreregno\"}\r\n                                                                                            //     subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                                                            //     subChildList={\r\n                                                                                            //         this.props.Login.masterData.searchedData3 ||\r\n                                                                                            //         this.props.Login.masterData.ReleaseTest\r\n                                                                                            //     }\r\n                                                                                            //     selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                                                            //     methodUrl={\"Release\"}\r\n                                                                                            //     headerSelectionChange={this.headerSelectionChange}\r\n                                                                                            //     childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                                                            //     childSelectAll={this.props.Login.childSelectAll}\r\n                                                                                            //     childSelectionChange={this.childSelectionChange}\r\n                                                                                            //     subChildSelectionChange={this.subChildSelectionChange}\r\n                                                                                            //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                                                            //     subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                                                            //     selectionChange={this.selectionChange}\r\n                                                                                            //     selectAll={this.props.Login.selectAll}\r\n                                                                                            //     releaseRecord={this.onSaveModalClick}\r\n                                                                                            //    // viewDownloadFile={this.viewDownloadFile}\r\n                                                                                            // />\r\n                                                                                            \"\"\r\n                                                                                }\r\n\r\n                                                                                {/* {this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ?\r\n                      <DataGrid \r\n                            key=\"reportinforeleasecode\"\r\n                            primaryKeyField=\"nreportinforeleasecode\"\r\n                            data={this.props.Login.masterData.reportinforelease || []}\r\n                            dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.dataState)}\r\n                            dataState={this.state.dataState}\r\n                            //dataResult={this.props.selectedWorklist || []}\r\n                            //expandField=\"expanded\"\r\n                            isExportExcelRequired = {false}\r\n                            //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                            controlMap={this.state.controlMap}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            extractedColumnList={this.feildsForGrid}\r\n                            detailedFieldList={this.props.detailedFieldList}\r\n                            editParam={editParam}   \r\n                            fetchRecord={this.props.fetchReportInfoReleaseById}                         \r\n                            pageable={true}\r\n                            dataStateChange={this.dataStateChange}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'630px'}\r\n                             isActionRequired={true}\r\n                            methodUrl={'ReportComment'}\r\n                        >\r\n                        </DataGrid>:\r\n                    //     <DataGridWithMultipleGrid\r\n                    //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                    //     data={this.state.data}\r\n                    //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                    //     dataState={this.state.dataState}\r\n                    //     dataStateChange={this.dataStateChange}\r\n                    //     expandNextData={this.expandNextData}\r\n                    //     checkFunction={this.checkFunction}\r\n                    //     checkFunction1={this.checkFunction1}\r\n                    //     expandFunc={this.expandFunc}\r\n                    //     childDataResult={this.state.childDataResult}\r\n                    //     subChildDataResult={this.state.subChildDataResult}\r\n                    //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                    //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                    //     expandField=\"expanded\"\r\n                    //     handleExpandChange={this.handleExpandChange}\r\n                    //     childHandleExpandChange={this.childHandleExpandChange}\r\n                    //     isCheckBoxRequired={true}\r\n\r\n                    //     reloadData={this.reloadData}\r\n                    //     controlMap={this.state.controlMap}\r\n                    //     userRoleControlRights={this.state.userRoleControlRights}\r\n                    //     inputParam={this.props.Login.inputParam}\r\n                    //     userInfo={this.props.Login.userInfo}\r\n                    //     pageable={true}\r\n                    //     scrollable={'scrollable'}\r\n                    //     gridHeight={'600px'}\r\n                    //     gridTop={'10px'}\r\n                    //    // isActionRequired={true}\r\n                    //     //   isToolBarRequired={true}\r\n                    //     //  isExpandRequired={true}\r\n                    //     //   isDownloadRequired={true}\r\n                    //     isCollapseRequired={true}\r\n\r\n                    //     selectedId={this.props.Login.selectedId}\r\n                    //     hasChild={true}\r\n                    //     hasSubChild={true}\r\n                    //     childList={\r\n                    //         this.props.Login.masterData.searchedData2 ||\r\n                    //         this.props.Login.masterData.ReleaseSubSample\r\n                    //     }\r\n                    //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                    //     childMappingField={\"npreregno\"}\r\n                    //     subChildMappingField={\"ntransactionsamplecode\"}\r\n                    //     subChildList={\r\n                    //         this.props.Login.masterData.searchedData3 ||\r\n                    //         this.props.Login.masterData.ReleaseTest\r\n                    //     }\r\n                    //     selectedsubcild={this.props.Login.selectedsubcild}\r\n                    //     methodUrl={\"Release\"}\r\n                    //     headerSelectionChange={this.headerSelectionChange}\r\n                    //     childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                    //     childSelectAll={this.props.Login.childSelectAll}\r\n                    //     childSelectionChange={this.childSelectionChange}\r\n                    //     subChildSelectionChange={this.subChildSelectionChange}\r\n                    //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                    //     subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                    //     selectionChange={this.selectionChange}\r\n                    //     selectAll={this.props.Login.selectAll}\r\n                    //     releaseRecord={this.onSaveModalClick}\r\n                    //    // viewDownloadFile={this.viewDownloadFile}\r\n                    // />\r\n                    \"\"\r\n                        } */}\r\n                                                                            </>\r\n                        }\r\n                    />\r\n                }\r\n                {this.props.Login.modalShow ? (\r\n                    <ModalShow\r\n                        modalShow={this.props.Login.modalShow}\r\n                        closeModal={this.closeModalShow}\r\n                        onSaveClick={this.onSaveModalResultClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        //  mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        modalTitle={this.props.Login.modalTitle}\r\n                        modalBody={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onEsignInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                /> :\r\n                                this.state.selectedRecord.ReleaseParameter &&\r\n                                this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\r\n                                    return <ResultEntryForm\r\n                                        index={index}\r\n                                        ResultParameter={[...this.state.selectedRecord.ReleaseParameter]}\r\n                                        predefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        defaultPredefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                        selectedNumericData={this.props.Login.masterData.selectedNumericData}\r\n                                        selectedResultGrade={this.state.selectedRecord.selectedResultGrade || []}\r\n                                        paremterResultcode={this.props.Login.masterData.paremterResultcode || []}\r\n                                        parameterResults={parameterResult\r\n                                            || []}\r\n                                        Login={this.props.Login}\r\n                                        handleClose={this.handleClose}\r\n                                        onSaveClick={this.onSaveClick}\r\n                                        onResultInputChange={this.onResultInputChange}\r\n                                        //onGradeEvent={this.onGradeEvent}\r\n                                        getFormula={this.getFormula}\r\n                                        onDropTestFile={this.onDropTestFile}\r\n                                        onKeyPress={this.onKeyPress}\r\n                                        //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\r\n                                        viewAdditionalInfo={this.viewAdditionalInfo}\r\n                                        needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                        needdelete={true}\r\n                                        needmandatory={true}\r\n                                        ResultAccuracy={this.props.Login.masterData.ResultAccuracy || []}\r\n                                        Unit={this.props.Login.masterData.Unit || []}\r\n                                    //intl={this.props.intl}\r\n                                    />\r\n                                })\r\n                        }\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n            </>\r\n        );\r\n    }\r\n    onKeyPress = (event, index, paremterResultcode) => {\r\n        if (event.keyCode === 13) {\r\n            for (let i = 0; i < event.target.form.elements.length; i++) {\r\n                if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\r\n                    event.target.form.elements[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    onResultInputChange = (parameterResults) => {\r\n        this.setState({\r\n            parameterResults: [...parameterResults],\r\n            isParameterInitialRender: false\r\n            // currentAlertResultCode,\r\n            //  currentntestgrouptestpredefcode\r\n        });\r\n    }\r\n    fields = () => {\r\n\r\n    }\r\n    queryBuilderfillingColumns(data) {\r\n\r\n       // const temparray1 = [\r\n            //(this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n            //this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\r\n            ////{ \"idsName\": \"IDS_SECTION\", \"dataField\": \"s.nsectioncode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" },\r\n           // { \"idsName\": \"IDS_TEST\", \"dataField\": \"rt.ntestgrouptestcode\", \"width\": \"200px\", \"staticField\": true, \"filterinputtype\": \"combo\" }];\r\n        const temparray2 = data && data.map((option) => {\r\n            return {\r\n                \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\r\n                \"dataField\":option[designProperties.RECORDTYPE]==='static'?\"(jsondata->>'\"+option[designProperties.PRIMARYKEY]+\"')::int\":\r\n                 option[designProperties.LISTITEM]==='combo'?\r\n                  \"(jsondata->'\"+option[designProperties.VALUE]+\"'->>'\"+option[designProperties.PRIMARYKEY]+\"')::int\" :\r\n                   option[designProperties.LISTITEM]==='Numeric'?\r\n                   \"(jsondata->>'\"+option[designProperties.VALUE]+\"')::int\":\r\n                   \"(jsondata->>'\"+option[designProperties.VALUE]+\"')\", \"width\": \"200px\", \"filterinputtype\": option[designProperties.LISTITEM]\r\n            };\r\n        });\r\n        const newArray = [ ...temparray2]\r\n        return newArray;\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (fieldName === 'nprojecttypecode') {\r\n            const inputParamData = {\r\n\r\n                nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                nprojecttypecode: comboData.value,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n            }\r\n            this.props.getApprovedProjectByProjectType(inputParamData)\r\n        }\r\n        if (fieldName === 'nprojectmastercode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            //let realFromDate = obj.fromDate;\r\n            //let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, //realFromDate, realToDate, \r\n                realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nprojectmastercode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n\r\n            let selectedRecord = { ...this.props.Login.selectedRecord }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData,\r\n                    selectedRecord\r\n\r\n                }\r\n                if (inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || inputData.isneedsection === transactionStatus.YES) {\r\n                    this.props.getSectionForSectionWise(inputParam)\r\n                }\r\n                else {\r\n                    this.props.getReleasedSample(inputParam)\r\n                }\r\n            }\r\n        }\r\n        if (fieldName === 'nsectioncode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let realFromDate = obj.fromDate;\r\n            let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nsectioncode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\r\n                // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData\r\n                }\r\n\r\n                this.props.getReleasedSample(inputParam)\r\n            }\r\n        }\r\n    }\r\n    handleExecuteClicks=(isClear)=>{\r\n        const filterquery = this.props.Login.filterquery\r\n        const filterQueryTreeStr=this.props.Login.filterQueryTreeStr\r\n        let isFilterEmpty = checkFilterIsEmptyQueryBuilder(filterQueryTreeStr);\r\n        if(isFilterEmpty){\r\n        const val = removeSpaceFromFirst(filterquery, '')\r\n       // if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: 1,//parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n            nsectioncode: -1,\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\r\n            // ModalStatusValue: true,\r\n            isPopup: true,\r\n            isAddPopup: true,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1,\r\n            filterquery: !isClear ? val && val.replaceAll(/'/g, \"''\"):undefined,\r\n            screenName:this.props.Login.screenNameCopy,\r\n            isClear:isClear,\r\n            awesomeTree:this.props.Login.awesomeTree\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData\r\n            }\r\n\r\n            this.props.getReleasedSample(inputParam)\r\n        }\r\n    // } else {\r\n    //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n    // }\r\n}else{\r\n    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PROVIDEVALUESFORINPUTS\" }));\r\n}\r\n    }\r\n    openFilterQuery=()=>{\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal:true,FilterQueryBuilder:true,screenName:\"IDS_SAMPLEFILTER\",screenNameCopy:this.props.Login.screenNameCopy\r\n      },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let closeModal = true;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedComment = this.props.Login.masterData.selectedComment;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            ReportmodalShow = false;\r\n            selectedRecord = {};\r\n            selectedComment = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign, closeModal, selectedComment, ReportmodalShow },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    generatereport = (generateid) => {\r\n        // if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    \r\n            const inputParam = {\r\n                inputData: {\r\n                    syncaction:\"ManualSyncreport\",\r\n                    userInfo: this.props.Login.userInfo\r\n                },\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_GENERATE\" })\r\n    \r\n            }\r\n            this.props.generatereport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n        //   }else{\r\n        //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n        //    }\r\n        }\r\n\r\n\r\n\r\n    downloadHistory = (downloadReportId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.RELEASED) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n                const inputParam = {\r\n                    inputData: {\r\n                        // change: this.props.Login.change,\r\n                        // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                        //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                        //ncoareporthistorycode:filedata.inputData.ncoareporthistorycode,\r\n                        //ntransactionstatus: String(transactionStatus.RELEASED),\r\n                        //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                        // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        action: \"Download\",\r\n                        doAction: \"preview\",\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                        //openModal:true,\r\n                        userInfo: this.props.Login.userInfo,\r\n                        ncontrolCode: downloadReportId\r\n                    },\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })\r\n\r\n                }\r\n                this.props.downloadHistory(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    previewReport = (previewId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                const inputParam = {\r\n                    inputData: {\r\n                        nflag: 2,\r\n                        change: this.props.Login.change,\r\n                        ncontrolcode: previewId,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAPREVIEW,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        action: 'DOWNLOADFILE',\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                        doAction: \"download\",\r\n                        nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                        reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                        isSMTLFlow: parseInt(this.props.Login.settings[29])\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            modalShow: false,\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolcode: previewId,\r\n                            operation: \"download\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_FINALREPORTGEN\" }));\r\n            }\r\n        }\r\n    }\r\n    preliminaryReport = (preliminaryId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else { \r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.DRAFT || \r\n                this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION) {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                const inputParam = {\r\n                    inputData: {\r\n                        nflag: 2,\r\n                        change: this.props.Login.change,\r\n                        ncontrolcode: preliminaryId,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAPRELIMINARY,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        action: 'preliminary',\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                        doAction: \"preliminary\",\r\n                        nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                        reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                        isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                        ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                        isSMTLFlow: parseInt(this.props.Login.settings[29])\r\n                    },\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })\r\n                }\r\n                const masterData = this.props.Login.masterData;\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, preliminaryId)) {\r\n\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            openModal: true,\r\n                            modalShow: false,\r\n                            loadEsign: true,\r\n                            screenData: { inputParam, masterData },\r\n                            screenName: inputParam.screenName,\r\n                            ncontrolcode: preliminaryId,\r\n                            operation: \"preliminary\"\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.preliminaryReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n                }\r\n            } else {\r\n                let toastAlert = this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORDTO\"})+ \" \"+ (this.props.Login.genericLabel && this.props.Login.genericLabel[\"PreliminaryReport\"] ? \r\n                    this.props.Login.genericLabel[\"PreliminaryReport\"][\"jsondata\"][\"sdisplayname\"][this.props.Login.userInfo.slanguagetypecode]\r\n                    : this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" }));\r\n                toast.warn(toastAlert);\r\n            }\r\n        }\r\n    }\r\n    // previewReport = (previewId) => {\r\n\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             nflag: 2,\r\n    //             change: this.props.Login.change,\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //             npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //             ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //             url: this.props.Login.settings[24],\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n    //             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //             userinfo: this.props.Login.userInfo,\r\n\r\n    //             nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //             sprimarykeyname: \"npreregno\",\r\n    //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             action: 'DOWNLOADFILE',\r\n    //             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             doAction: \"download\",\r\n\r\n    //         },\r\n    //         userinfo: this.props.Login.userInfo,\r\n    //         screenName: this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })\r\n    //     }\r\n    //     const masterData = this.props.Login.masterData;\r\n    //     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\r\n\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 openModal: true,\r\n    //                 modalShow: false,\r\n    //                 loadEsign: true,\r\n    //                 screenData: { inputParam, masterData },\r\n    //                 screenName: inputParam.screenName,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n    //         this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n    //                     const updateInfo = {\r\n    //                         typeName: DEFAULT_RETURN,\r\n    //                         data: {\r\n    //                             openModal:true,\r\n    //                             modalShow: false,\r\n    //                             loadEsign: true,\r\n    //                             screenData: { inputParam, masterData },\r\n    //                             screenName: inputParam.screenName,\r\n    //                         }\r\n    //                     }\r\n    //                     this.props.updateStore(updateInfo);\r\n    //                 }\r\n    //                 else {\r\n    //                     this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n    //                     const updateInfo = {\r\n    //                         typeName: DEFAULT_RETURN,\r\n    //                         data: {\r\n    //                             openModal:true,\r\n    //                             modalShow: false,\r\n    //                             loadEsign: true,\r\n    //                             screenData: { inputParam, masterData },\r\n    //                             screenName: inputParam.screenName,\r\n    //                             ncontrolcode:previewId\r\n    //                         }\r\n    //                     }\r\n    //                     this.props.updateStore(updateInfo);\r\n    //                 }\r\n    //                 else {\r\n    //                     this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n    //     }\r\n    // }\r\n\r\n    downloadReleasedValidation = (downloadId) => {\r\n        const selectedReleaseHistory = this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory : [];\r\n        const resultArray = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"ntransactionstatus\"]))] : [] ;\r\n        const versionCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nversionno\"]))] : [] ;\r\n        const reportTemplateCheck = selectedReleaseHistory.length > 0 ? [...new Set(selectedReleaseHistory.map(item => item[\"nreporttemplatecode\"]))] : [] ;\r\n        if(resultArray.length === 1){\r\n            if(reportTemplateCheck.length === 1){\r\n                if(resultArray[0] === transactionStatus.CORRECTION || (resultArray[0] === transactionStatus.PRELIMINARYRELEASE && (versionCheck.length > 1 || (versionCheck.length === 1 && versionCheck[0] !== -1)))){\r\n                    this.CorrectionComments(downloadId);\r\n                } else {\r\n                    this.downloadReleasedFile(downloadId);\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSWITHSAMEREPORTEMPLATE\" }));\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRECORDSWITHSAMESTATUS\" }));\r\n        }\r\n    }\r\n\r\n    CorrectionComments = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadEsign: false,\r\n                screenData: { masterData: this.props.Login.masterData },\r\n                operation: this.props.Login.operation,\r\n                openModal: true,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }),\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    \r\n    downloadReleasedFile = () => {\r\n        const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncontrolcode: downloadId,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.ncoaparentcode).sort().join(\",\") : \"-1\",\r\n                // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\r\n                // ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.stransactionsamplecode).join(\",\") : \"-1\",\r\n                // ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.stransactiontestcode).join(\",\") : \"-1\",\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                // ntransactionsamplecode: ntransactionsamplecode,\r\n                //ntransactiontestcode: ntransactiontestcode,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.map(item => item.spreregno).join(\",\") : \"-1\",\r\n                listStatus: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                // nsectioncode: -1,\r\n                sreportcomments: this.state.selectedRecord && this.state.selectedRecord.sreportcomments ? this.state.selectedRecord.sreportcomments : \"\",\r\n                nversionno: this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno ? this.props.Login.masterData.nversionno : 0,\r\n                action: \"Generatefile\",\r\n                doAction: \"generate\",\r\n                nflag: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode,\r\n                reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\r\n                confirmMessage: this.confirmMessage,\r\n                isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                ncoaparenttranscode: this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                genericLabel: this.props.Login.genericLabel\r\n            },\r\n            userinfo: this.props.Login.userInfo,\r\n            methodUrl: \"ReleaseAfterCorrection\",\r\n            classUrl: \"release\",\r\n            operation: \"update\",\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })\r\n\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\r\n        //              && this.state.selectedRecord && this.state.selectedRecord.sreportcomments===\"\" || this.state.selectedRecord.sreportcomments===undefined) {\r\n        //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERDESCRIPTION\" }));  \r\n\r\n        // }\r\n        //     else{\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, downloadId)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    ncontrolcode: downloadId,\r\n                    openModal: true,\r\n                    modalShow: false,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: this.props.Login.masterData.selectedReleaseHistory && \r\n                        this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus === transactionStatus.CORRECTION ? this.props.Login.screenName : \r\n                        this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n\r\n        }\r\n        // }\r\n    }\r\n\r\n    reportcomments = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            if(this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED\r\n                && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE){\r\n                const inputParam = {\r\n                    inputData: {\r\n                        change: this.props.Login.change,\r\n                        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                        npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                        ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                        url: this.props.Login.settings[24],\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        // ntransactionsamplecode: ntransactionsamplecode,\r\n                        //ntransactiontestcode: ntransactiontestcode,\r\n                        ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                        // nTransStatus: ntransCode,\r\n                        // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                        //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                        //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                        // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                        ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                        nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                        nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                        nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                        // ncontrolCode,\r\n                        nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                        ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                        nreporttypecode: REPORTTYPE.COAREPORT,\r\n                        sprimarykeyname: \"npreregno\",\r\n                        // nsectioncode: -1,\r\n                        nflag: 2,\r\n                        ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n                    },\r\n                    userinfo: this.props.Login.userInfo\r\n                }\r\n                this.props.getreportcomments(inputParam.inputData, this.props.Login.masterData)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORDTOEDITREPORTCOMMENTS\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n    // regenerateReleasedFile = (action) => {\r\n    regenerateReleasedFile = (regenerateId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n            const inputParam = {\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    sreportno: this.props.Login.masterData.selectedReleaseHistory[0].sreportno,\r\n                    ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\r\n                    ntransactionstatus: String(transactionStatus.RELEASED),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    nflag: 2,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    sreportcomments: \"\",\r\n                    nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                    nreporttypecode: REPORTTYPE.COAREPORT,\r\n                    sprimarykeyname: \"npreregno\",\r\n                    action: \"Regenerate\",\r\n                    doAction: \"download\",\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                    ncontrolcode: regenerateId,\r\n                    nprojectcode: (this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode) || -1,\r\n                    reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\r\n                    ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                                && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                    isSMTLFlow: parseInt(this.props.Login.settings[29])\r\n                },\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, regenerateId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        ncontrolcode: regenerateId,\r\n                        openModal: true,\r\n                        modalShow: false,\r\n                        loadEsign: true,\r\n                        screenData: { inputParam, masterData },\r\n                        screenName: inputParam.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n            }\r\n        }\r\n    }\r\n\r\n    CorrectionStatus = (correctionId) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \r\n            const inputParam = {\r\n                inputData: {\r\n                    change: this.props.Login.change,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    url: this.props.Login.settings[24],\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    // ntransactionsamplecode: ntransactionsamplecode,\r\n                    //ntransactiontestcode: ntransactiontestcode,\r\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                    // nTransStatus: ntransCode,\r\n                    // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                    //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                    //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                    // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                    ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                    // ncontrolCode,\r\n                    nprimarykey: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                    nreporttypecode: REPORTTYPE.COAREPORT,\r\n                    sprimarykeyname: \"npreregno\",\r\n                    doAction: \"correction\",\r\n                    nflag: 2,\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                    isPreliminaryReportNoGenerate: this.props.Login.settings && this.props.Login.settings[47] ? parseInt(this.props.Login.settings[47]) : transactionStatus.NO,\r\n                    genericLabel: this.props.Login.genericLabel\r\n                },\r\n                userinfo: this.props.Login.userInfo,\r\n                methodUrl: \"CorrectionStatus\",\r\n                classUrl: \"release\",\r\n                operation: \"update\",\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        ncontrolcode: correctionId,\r\n                        openModal: true,\r\n                        modalShow: false,\r\n                        loadEsign: true,\r\n                        operation: \"update\",\r\n                        screenData: { inputParam, masterData },\r\n                        screenName: inputParam.screenName,\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n            }\r\n        }\r\n    }\r\n    //     CorrectionStatus = (correctionId) => {\r\n\r\n    //         let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //         // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \r\n    //         const inputParam = {\r\n    //             inputData: {\r\n    //                 change: this.props.Login.change,\r\n    //                 ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //                 npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //                 ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //                 ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //                 url: this.props.Login.settings[24],\r\n    //                 nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                 // ntransactionsamplecode: ntransactionsamplecode,\r\n    //                 //ntransactiontestcode: ntransactiontestcode,\r\n\r\n    //                 ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n    //                 // nTransStatus: ntransCode,\r\n    //                 // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n    //                 //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n    //                 //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n    //                 // ntransactionstatus: String(transactionStatus.RELEASED),\r\n    //                 ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //                 nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                 nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //                 nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //                 nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n    //                 napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //                 nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //                 nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //                 dfrom: obj.fromDate,\r\n    //                 dto: obj.toDate,\r\n    //                 userinfo: this.props.Login.userInfo,\r\n    //                 // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n    //                 // ncontrolCode,\r\n    //                 nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //                 ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //                 nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //                 sprimarykeyname: \"npreregno\",\r\n    //                 doAction: \"correction\",\r\n    //                 nflag: 2,\r\n    //                 ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n    //             },\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             methodUrl: \"CorrectionStatus\",\r\n    //             classUrl: \"release\",\r\n    //             operation: \"update\",\r\n    //             screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n    //         }\r\n    //         const masterData = this.props.Login.masterData;\r\n    //         if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\r\n\r\n    // <<<<<<< .mine\r\n    //             const updateInfo = {\r\n    //                 typeName: DEFAULT_RETURN,\r\n    //                 data: {\r\n    //                     ncontrolcode: correctionId,\r\n    //                     openModal: true,\r\n    //                     modalShow: false,\r\n    //                     loadEsign: true,\r\n    //                     screenData: { inputParam, masterData },\r\n    //                     screenName: inputParam.screenName,\r\n    //                 }\r\n    //             }\r\n    //             this.props.updateStore(updateInfo);\r\n    //         }\r\n    //         else {\r\n    //             this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n    // ||||||| .r76787\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 ncontrolcode:correctionId,\r\n    //                                 openModal:true,\r\n    //                                 modalShow: false,\r\n    //                                 loadEsign: true,\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 screenName: inputParam.screenName,\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n    // =======\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 ncontrolcode:correctionId,\r\n    //                                 openModal:true,\r\n    //                                 modalShow: false,\r\n    //                                 loadEsign: true,\r\n    //                                 operation: \"update\",\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 screenName: inputParam.screenName,\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n    // >>>>>>> .r76792\r\n\r\n    //         }\r\n\r\n\r\n\r\n    //     }\r\n    onSaveModalResultClick = (saveType, data) => {\r\n\r\n        let ReleaseParameter = this.state.parameterResults || this.props.Login.parameterResults && this.props.Login.parameterResults[0];\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let selectedId = this.props.Login.selectedId || null;\r\n        let additionalInfo = this.state.selectedRecord.additionalInfo || [];\r\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        const classUrl = \"release\";\r\n        const formData = new FormData();\r\n        let neditable = 0;\r\n        let releaseParameters = [];\r\n        let inputParam = {};\r\n        let inputData = [];\r\n        let i = 0;\r\n        if (ReleaseParameter.length > 0 && ReleaseParameter !== undefined && ReleaseParameter[0].sresult !== \"\") {\r\n            ReleaseParameter.map((resultData, index) => {\r\n                let results = {};\r\n                if (resultData.editable === true) {\r\n                    neditable = 1;\r\n                    switch (resultData.nparametertypecode) {\r\n                        case 1:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: resultData[\"ncalculatedresult\"],\r\n                                sresult: resultData.sresult,\r\n                                sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\",\r\n                                sunitname: resultData.nunitcode.label,\r\n                                sresultaccuracyname: resultData.nresultaccuracycode.label,\r\n                                nresultaccuracycode: resultData.nresultaccuracycode.value,\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\r\n                            results[\"sresult\"] = resultData.sresult;\r\n                            results[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                            results[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                numericGrade(resultData, results[\"sfinal\"]) : -1;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n                            results['nunitcode'] = resultData.nunitcode.value;\r\n\r\n\r\n                            break;\r\n                        case 2:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: 4,\r\n                                sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                sfinal: Lims_JSON_stringify(resultData.sfinal, false),\r\n                                sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\r\n                                salertmessage: resultData.salertmessage,\r\n                                additionalInfo: resultData['additionalInfo'],\r\n                                additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\r\n                                ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"sresult\"] = resultData.sresult;\r\n\r\n                            results[\"ncalculatedresult\"] = 4;\r\n                            results[\"sfinal\"] = resultData.sresult;\r\n                            results[\"ngradecode\"] = resultData.ngradecode;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n                            results['nunitcode'] = resultData.nunitcode;\r\n                            break;\r\n                        case 3:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: 4,\r\n                                sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"sresult\"] = resultData.sresult;\r\n                            results[\"ncalculatedresult\"] = 4;\r\n                            results[\"sfinal\"] = resultData.sresult;\r\n                            results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n                            results['nunitcode'] = resultData.nunitcode;\r\n                            break;\r\n                        case 4:\r\n                            if (resultData.sfinal.length > 0) {\r\n                                const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                const uniquefilename = create_UUID() + '.' + fileExtension;\r\n                                results[\"jsondata\"] = {\r\n                                    ssystemfilename: uniquefilename,\r\n                                    nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sresult\"] = resultData.sresult;\r\n                                results[\"sfinal\"] = resultData.sresult;\r\n                                results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                                results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results[\"ssystemfilename\"] = uniquefilename;\r\n                                results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\r\n                                results['nunitcode'] = resultData.nunitcode;\r\n                                formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\r\n                                formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                                formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\r\n                                i++;\r\n                            }\r\n                            else {\r\n                                const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                const uniquefilename = \"\";\r\n                                results[\"jsondata\"] = {\r\n                                    ssystemfilename: uniquefilename,\r\n                                    nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: \"\",\r\n                                    sfinal: \"\"\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sresult\"] = \"\";\r\n                                results[\"sfinal\"] = \"\";\r\n                                results[\"ngradecode\"] = -1;\r\n                                results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results[\"ssystemfilename\"] = \"\";\r\n                                results[\"nfilesize\"] = \"\";\r\n                                formData.append(\"uploadedFile\" + index, \"\");\r\n                                formData.append(\"uniquefilename\" + index, \"\");\r\n                                formData.append(\"ntransactiontestcode\", \"\");\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    if (Object.values(results).length > 0) {\r\n                        releaseParameters.push(results);\r\n                    }\r\n                }\r\n                return null;\r\n            });\r\n\r\n            if (neditable === 0) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loading: false, openModal: false, parameterResults: [], selectedRecord: {} }\r\n                }\r\n                return this.props.updateStore(updateInfo);\r\n            }\r\n\r\n            formData.append(\"filecount\", i);\r\n            formData.append(\"nregtypecode\", nregtypecode);\r\n            formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n            formData.append(\"ncoaparentcode\", this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode);\r\n            formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n            formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\r\n            formData.append(\"resultData\", JSON.stringify(releaseParameters));\r\n            inputParam = {\r\n                classUrl: classUrl,\r\n                methodUrl: \"ReleaseParameter\",\r\n                inputData: { userinfo: this.props.Login.userInfo, doAction: \"editresult\" },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"update\",\r\n                displayName: this.props.Login.inputParam.displayName, saveType//, postParam\r\n            }\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        modalShow: false,\r\n                        openModal: true,\r\n                        ncontrolcode: editResultId,\r\n                        screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\r\n            }\r\n        }\r\n        // else {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: { loading: false, openModal: false }\r\n        //     }\r\n        //     return this.props.updateStore(updateInfo);\r\n        // }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" }));\r\n        }\r\n    }\r\n\r\n    onSaveModalClick = () => {\r\n        //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\r\n        if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\r\n            this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\r\n        }\r\n        else {\r\n            let ntransactionsamplecode = \"\"\r\n            let ntransactiontestcode = \"\"\r\n            let npreregno = \"\"\r\n            if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n                if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n                    let sample = this.state.npreregno.filter((c, index) => {\r\n                        return this.state.npreregno.indexOf(c) === index;\r\n                    });\r\n                    let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                        return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n                    });\r\n                    let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                        return this.state.ntransactiontestcode.indexOf(c) === index;\r\n                    });\r\n\r\n                    npreregno = sample.map(x => x).join(\",\")\r\n                    ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n                    ntransactiontestcode = test.map(x => x).join(\",\")\r\n                    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                    const inputParam = {\r\n                        inputData: {\r\n                            change: this.props.Login.change,\r\n                            npreregno: String(npreregno),\r\n                            ntransactionsamplecode: ntransactionsamplecode,\r\n                            ntransactiontestcode: ntransactiontestcode,\r\n                            // ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n                            //     && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\r\n                            ncoaparentcode: this.props.Login.masterData&&this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                                ? this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode:-1,\r\n                            ncoaparenttranscode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 0\r\n                                && this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus,\r\n                            url: this.props.Login.settings[24],\r\n                            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                            nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                            dfrom: obj.fromDate,\r\n                            dto: obj.toDate,\r\n                            //  isPopup:true,\r\n                            isAddPopup: false,\r\n                            isEditPopup: false,\r\n                            nflag: 2,\r\n                            userinfo: this.props.Login.userInfo,\r\n                            ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                            doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\r\n                            isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                            nreporttemplatecode: this.state.selectedRecord && this.state.selectedRecord.nreporttemplatecode ? this.state.selectedRecord.nreporttemplatecode.value : -1,\r\n                            // nmultiplesampleinsinglerelease: this.state.selectedRecord.nmultiplesampleinsinglerelease\r\n                        },\r\n                        userinfo: this.props.Login.userInfo,\r\n                        methodUrl: \"Release\",\r\n                        classUrl: \"release\",\r\n                        operation: this.props.Login.operation\r\n                    }\r\n\r\n                    const masterData = this.props.Login.masterData;\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true,\r\n                                screenData: { inputParam, masterData },\r\n                                operation: this.props.Login.operation,\r\n                                screenName: this.props.Login.screenName,\r\n                                ncontrolcode: this.props.Login.ncontrolCode\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        if (this.props.Login.isDeletePopup) {\r\n                            this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n                        }\r\n                        else if (this.props.Login.isEditPopup) {\r\n                            this.props.UpdateApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n                        }\r\n                        else {\r\n                            this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n                }\r\n            }\r\n            else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n            }\r\n        }\r\n\r\n    }\r\n    //     onSaveModalClick = () => {\r\n    //         //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\r\n    //         if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\r\n    //             this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\r\n    //         }\r\n    //         else {\r\n    //             let ntransactionsamplecode = \"\"\r\n    //             let ntransactiontestcode = \"\"\r\n    //             let npreregno = \"\"\r\n    //             if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n    //                 if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n    //                     let sample = this.state.npreregno.filter((c, index) => {\r\n    //                         return this.state.npreregno.indexOf(c) === index;\r\n    //                     });\r\n    //                     let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n    //                         return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n    //                     });\r\n    //                     let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n    //                         return this.state.ntransactiontestcode.indexOf(c) === index;\r\n    //                     });\r\n\r\n    //                     npreregno = sample.map(x => x).join(\",\")\r\n    //                     ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n    //                     ntransactiontestcode = test.map(x => x).join(\",\")\r\n    //                     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //                     const inputParam = {\r\n    //                         inputData: {\r\n    //                             change: this.props.Login.change,\r\n    //                             npreregno: String(npreregno),\r\n    //                             ntransactionsamplecode: ntransactionsamplecode,\r\n    //                             ntransactiontestcode: ntransactiontestcode,\r\n    //                             ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n    //                                 && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\r\n    //                             url: this.props.Login.settings[24],\r\n    //                             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //                             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //                             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //                             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //                             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //                             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //                             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //                             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //                             dfrom: obj.fromDate,\r\n    //                             dto: obj.toDate,\r\n    //                             isAddPopup: false,\r\n    //                             isEditPopup: false,\r\n    //                             nflag: 2,\r\n    //                             userinfo: this.props.Login.userInfo,\r\n    //                             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //                             doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\r\n    //                         },\r\n    //                         userinfo: this.props.Login.userInfo,\r\n    //                         methodUrl: \"Release\",\r\n    //                         classUrl: \"release\",\r\n    //                         operation: this.props.Login.operation\r\n    //                     }\r\n\r\n    //                     const masterData = this.props.Login.masterData;\r\n    //                     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n    //                         const updateInfo = {\r\n    //                             typeName: DEFAULT_RETURN,\r\n    //                             data: {\r\n    //                                 loadEsign: true,\r\n    //                                 screenData: { inputParam, masterData },\r\n    //                                 operation: this.props.Login.operation,\r\n    //                                 screenName: this.props.Login.screenName,\r\n    //                                 ncontrolcode:this.props.Login.ncontrolCode\r\n    //                             }\r\n    //                         }\r\n    //                         this.props.updateStore(updateInfo);\r\n    //                     }\r\n    //                     else {\r\n    //                         if (this.props.Login.isDeletePopup) {\r\n    //                             this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n    //                         }\r\n    //                         else if (this.props.Login.isEditPopup) {\r\n    // <<<<<<< .mine\r\n    //                             this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n    // ||||||| .r76787\r\n    //                             this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \r\n    // =======\r\n    //                             this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \r\n    // >>>>>>> .r76792\r\n    //                         }\r\n    //                         else {\r\n    //                             this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\r\n    //                         }\r\n    //                     }\r\n\r\n    //                 }\r\n    //                 else {\r\n    //                     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n    //                 }\r\n    //             }\r\n    //             else {\r\n    //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n    //             }\r\n\r\n\r\n    //         }\r\n\r\n    //     }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            SampleGridItem,\r\n            selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n            RegistrationSubTypeList, FilterStatusList, ConfigVersionList,\r\n            //UserSectionList, TestList,\r\n            SingleItem, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n            stateDynamicDesign, checkedflag, dataState, selectedComment, isInitialRender, DynamicReportFilterTypeItem,DynamicDefaultStructureItem } = this.state;\r\n\r\n        let bool = false;\r\n        let reportFilePath = \"\";\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            reportFilePath = this.props.Login.masterData.ReportPDFFile;\r\n\r\n            bool = true;\r\n        }\r\n        // else {\r\n        //     if (this.state.dataState === undefined) {\r\n        //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n        //     }\r\n        //     //  const npreregno =  [];\r\n        //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        //     bool = true;\r\n\r\n        // }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.isInitialRender !== previousProps.Login.isInitialRender) {\r\n            isInitialRender = this.props.Login.isInitialRender;\r\n            bool = true;\r\n        }\r\n        // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n        //     npreregno = this.props.Login.npreregno\r\n        //     bool = true;\r\n        // }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false);\r\n            // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\r\n            // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            ReporttypeList = ReporttypeListMap.get(\"OptionList\");\r\n            // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\r\n            //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            //  UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            //   TestList = TestListMap.get(\"OptionList\");\r\n\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.selectedComment !== previousProps.Login.masterData.selectedComment) {\r\n            selectedComment = this.props.Login.masterData.selectedComment;\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n            DynamicReportFilterTypeItem = dynamicColumn.samplefiltertypefields ? dynamicColumn.samplefiltertypefields : [];\r\n            DynamicDefaultStructureItem = dynamicColumn.defaultstructure ? dynamicColumn.defaultstructure : [];\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            let allData = {\r\n                userRoleControlRights, controlMap,\r\n                SampleGridItem, selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n                RegistrationSubTypeList, FilterStatusList, ConfigVersionList, selectedComment,\r\n                //UserSectionList, TestList,\r\n                SingleItem, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem, stateDynamicDesign, checkedflag, isInitialRender,\r\n                data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                reportFilePath, DynamicReportFilterTypeItem,DynamicDefaultStructureItem\r\n            }\r\n            if (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true\r\n                || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true\r\n                || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true) {\r\n                this.setState({ ...allData, npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] });\r\n            }\r\n            else {\r\n                this.setState(allData);\r\n            }\r\n\r\n        }\r\n\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n    sendToPortal = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                url: this.props.Login.settings[24],\r\n                isPortal: true,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                allPreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.getReportForPortal(inputParam)\r\n        }\r\n    }\r\n\r\n\r\n    reportHistory = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.DRAFT) {\r\n                let inputParam = {\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                    stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                    stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData\r\n                }\r\n                this.props.versionHistory(inputParam)\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            }\r\n        }\r\n    }\r\n    releaseReportHistory = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            //if(this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus!==transactionStatus.DRAFT){\r\n            let inputParam = {\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                spreregno: this.props.Login.masterData.selectedReleaseHistory[0].spreregno,\r\n                stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory[0].stransactionsamplecode,\r\n                stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory[0].stransactiontestcode,\r\n                userInfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n            }\r\n            this.props.releaseReportHistory(inputParam)\r\n            //    }else{\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n            //    }\r\n        }\r\n    }\r\n\r\n    patientInfo = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { isPatientDetails: true, openModal: true, hideSave: true, isAddPopup: false, isEditPopup: false, isDeletePopup: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    reportHistoryInfo = () => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode\r\n                },\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.viewReportHistory(inputParam);\r\n        }\r\n    }\r\n\r\n    releaseTestAttachmentData = (actionName) => {\r\n        if(this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.length > 1){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_MULTISELECTAPPLICABLEONLYFORRELEASEACTION\" }));\r\n        } else {\r\n            const inputParam = {\r\n                inputData: {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory[0].ncoaparentcode,\r\n                    actionName: actionName\r\n                },\r\n                masterData: this.props.Login.masterData\r\n            }\r\n            this.props.viewReleaseTestAttachment(inputParam);\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData\"]\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue } = this.props.Login.masterData\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: (realReportTypeValue && realReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(realReportTypeValue && realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n\r\n            ntransactionstatus: realFilterStatusValue && ((realFilterStatusValue.ntransactionstatus !== undefined) || (realFilterStatusValue.ntransactionstatus !== '0')) ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1\r\n        ) {\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let isPatientDetails = this.props.Login.isPatientDetails;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let hideSave = this.props.Login.hideSave;\r\n        let isAddPopup = this.props.Login.isAddPopup;\r\n        let isEditPopup = this.props.Login.isEditPopup;\r\n        let isDeletePopup = this.props.Login.isDeletePopup;\r\n        let isCorrectionNeed = this.props.Login.isCorrectionNeed;\r\n        let ncontrolcode = this.props.Login.ncontrolcode;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let screenName = this.props.Login.screenName;\r\n        let isPatientReports = this.props.Login.isPatientReports;\r\n        let openModalTitle = this.props.Login.openModalTitle;\r\n        let isReleaseTestAttachment = this.props.Login.isReleaseTestAttachment;\r\n        let isReleaseTestComment = this.props.Login.isReleaseTestComment;\r\n        let isAddReleaseTestAttachment = this.props.Login.isAddReleaseTestAttachment;\r\n        let isAddReleaseTestComment = this.props.Login.isAddReleaseTestComment;\r\n        let isInitialRender = this.props.Login.isInitialRender;\r\n        let loadEsignStateHandle = this.props.Login.loadEsignStateHandle;\r\n        let FilterQueryBuilder= this.props.Login.FilterQueryBuilder\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        //let projectMasterList =[];\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                // openModal = false;\r\n                isPatientDetails = false;\r\n                hideSave = false;\r\n                isAddPopup = false;\r\n                isEditPopup = false;\r\n                isDeletePopup = false;\r\n                isCorrectionNeed = false;\r\n                isPatientReports = false;\r\n                isReleaseTestAttachment = false;\r\n                isReleaseTestComment = false;\r\n                screenName = undefined;\r\n                selectedRecord = {};\r\n                FilterQueryBuilder=false;\r\n            }\r\n            else {\r\n\r\n                if (ncontrolcode && ncontrolcode === editResultId) {\r\n                    modalShow = true;\r\n                }\r\n                if (this.props.Login.screenName !== undefined && this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n                    // || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) \r\n                    || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })) {\r\n                    openModal = false;\r\n                    screenName = undefined;\r\n                }\r\n                loadEsign = false;\r\n                // selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n                FilterQueryBuilder=false;\r\n            }\r\n        }\r\n        // When using EsignStateHandle component\r\n        else if (this.props.Login.loadEsignStateHandle) {\r\n            loadEsignStateHandle = false;\r\n        } else if(this.props.Login.FilterQueryBuilder){\r\n          \r\n            FilterQueryBuilder=false;\r\n            screenName=this.props.Login.screenNameCopy;\r\n            \r\n        }\r\n        else {\r\n            openModal = (isAddReleaseTestAttachment === true || isAddReleaseTestComment === true) ? true : false;\r\n            isPatientDetails = false;\r\n            hideSave = false;\r\n            isAddPopup = false;\r\n            isEditPopup = false;\r\n            isDeletePopup = false;\r\n            isCorrectionNeed = false;\r\n            isPatientReports = false;\r\n            isReleaseTestAttachment = isAddReleaseTestAttachment === true ? true : false;\r\n            isReleaseTestComment = isAddReleaseTestComment === true ? true : false;\r\n            screenName = undefined;\r\n            selectedRecord = {};\r\n            openModalTitle = undefined;\r\n            isAddReleaseTestAttachment = false;\r\n            isAddReleaseTestComment = false;\r\n            isInitialRender = false;\r\n            FilterQueryBuilder=false;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, modalShow, loadEsign, screenName, selectedRecord, selectedId: null, isPatientDetails, hideSave, isAddPopup, isEditPopup, isDeletePopup,\r\n                isCorrectionNeed, isPatientReports, openModalTitle, isReleaseTestAttachment, isReleaseTestComment, isAddReleaseTestAttachment, isAddReleaseTestComment, isInitialRender, loadEsignStateHandle,\r\n                FilterQueryBuilder\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    \r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n\r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n        // const editResultId =this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            ReportmodalShow = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign, ReportmodalShow },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    closeDocModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport, openModal, selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = {...this.state.selectedRecord} || {};\r\n        // if(event.target.type === \"checkbox\"){\r\n        //     selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        // } else {\r\n            selectedRecord[event.target.name] = event.target.value;   \r\n        // }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onChangeAwesomeQueryBuilder = (immutableTree, config) => {\r\n        //let selectedRecord = this.state.selectedRecord || {};\r\n        const filterquery = QbUtils.sqlFormat(immutableTree, config);\r\n        const filterQueryTreeStr = QbUtils.getTree(immutableTree);\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config, filterquery, filterQueryTreeStr\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n        // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\r\n    };\r\n\r\n    onComboChangeAwesomeQueryBuilder = (immutableTree, config) => {\r\n        const filterquery = QbUtils.sqlFormat(immutableTree, config);\r\n        const filterQueryTreeStr = QbUtils.getTree(immutableTree);\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config, \r\n                filterquery, filterQueryTreeStr\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n    };\r\n\r\n    handleExecuteClick = (event) => {\r\n        //const selectedRecord = this.state.selectedRecord\r\n        const filterquery = this.props.Login.filterquery\r\n        if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\r\n            const inputparam = {\r\n                component: this.props.Login.seletedFilterComponent,\r\n                userinfo: this.props.Login.userInfo,\r\n                filterquery: filterquery,\r\n                // selectedRecord:this.state.selectedRecord\r\n            }\r\n            this.props.getPatientFilterExecuteData(inputparam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n        }\r\n    }\r\n\r\n    handleKendoRowClick = (event) => {\r\n        let patientinfo = event.dataItem;\r\n        const component = this.props.Login.seletedFilterComponent;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        const inputparam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            Login: this.props.Login,\r\n            selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n            'dfrom': obj.fromDate,\r\n            'dto': obj.toDate,\r\n            'npreregno': \"0\",\r\n            'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n            \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            'userinfo': this.props.Login.userInfo,\r\n            'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n            'isAddPopup': true,\r\n            'isPopup': true,\r\n            'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\r\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            userinfo: this.props.Login.userInfo,\r\n            patientinfo: event.dataItem,\r\n            spatientid: event.dataItem.spatientid\r\n            // selectedRecord:this.state.selectedRecord\r\n        }\r\n        // if (component[\"childFields\"]) {\r\n        //     const index = this.props.Login.masterIndex;\r\n        //     let selectedRecord = this.state.selectedMaster || {};\r\n\r\n        //     component[\"childFields\"].map(item => {\r\n        //         let data = item1[item.columnname];\r\n        //         if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n        //             //combocontrol\r\n        //             data = { label: item1[item.sdisplaymember], value: item1[item.svaluemember] };\r\n        //         }\r\n        //         else if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n        //             //Date picker control\r\n        //             data = rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, data);\r\n        //         }\r\n        //         selectedRecord[index][item.columnname] = data;\r\n        //     })\r\n\r\n\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: { selectedMaster: selectedRecord, loadCustomSearchFilter: false, }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const newdata = {\r\n        //         label: item1[component['displaymember']],\r\n        //         value: item1[component['valuemember']], item: { jsondata: { ...item1, jsondata: { ...item1 } } }\r\n        //     };\r\n\r\n        //     this.onComboChange(newdata, component, component['label']);\r\n        // }\r\n        this.props.getPatientWiseSample(inputparam)\r\n    };\r\n\r\n    onInputChange = (event) => {\r\n        let selectedComment = this.props.Login.masterData.selectedComment || {};\r\n        selectedComment[event.target.name] = event.target.value;\r\n        const coaFileInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { selectedComment },\r\n        };\r\n        this.props.updateStore(coaFileInfo);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        let ncontrolcode = this.props.Login.ncontrolcode;\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        let modalName = \"\";\r\n        if (ncontrolcode && ncontrolcode === editResultId) {\r\n            modalName = \"modalShow\";\r\n        }\r\n        else {\r\n            modalName = \"openModal\";\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignforRelease(inputParam, modalName);\r\n    }\r\n\r\n    selectionChange = (event, nflag, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n\r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename },\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n            this.childHeaderSelectionChange(event, preregno, checkedflag)\r\n        }\r\n        else {\r\n            let data = []\r\n            event.dataItems.map(item => {\r\n                data.push({ \"npreregno\": item.npreregno })\r\n            })\r\n            this.childHeaderSelectionChange(event, data, checkedflag)\r\n        }\r\n    }\r\n\r\n    childHeaderSelectionChange = (event, preregno, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n        if (npreregno.length === 0 || npreregno.length === undefined) {\r\n            this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n\r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n\r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                    data.selected = checked\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n        else {\r\n            npreregno.map(value => {\r\n                this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                    item.selected = checked\r\n                    if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                        subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                    }\r\n                })\r\n\r\n            })\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode = subsamplecode;\r\n        if (subsamplecode !== undefined) {\r\n            //  transactionsamplecode = subsamplecode\r\n            transactionsamplecode.map(value => {\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n                    return item;\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n                    return item;\r\n                })\r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (event.dataItems.length !== 0) {\r\n            this.state.dataResult.data.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n            this.selectionChange(event, 1, checked);\r\n        }\r\n        else {\r\n            this.setState({ npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] })\r\n        }\r\n    }\r\n\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                item.selected = checked;\r\n            }\r\n        })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected === true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected === true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    subChildSelectionChange = (event) => {\r\n        let x = []\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                this.collectData(item)\r\n            }\r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                    x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y = x.filter(t => t.selected === true);\r\n        if (x.length === y.length) {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.state.dataResult.data.map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                    x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y1 = x.filter(t => t.selected === true);\r\n        if (x.length === y1.length) {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === y1[0].npreregno) {\r\n                    this.state.dataResult.data[i].selected = true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === event.dataItem.npreregno) {\r\n                    this.state.dataResult.data[i].selected = false\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    collectData = (item, checkedflag) => {\r\n        let npreregno = this.state.npreregno || []\r\n        let ntransactionsamplecode = this.state.ntransactionsamplecode || []\r\n        let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n        if (item.selected === true) {\r\n            if (!npreregno.includes(item.npreregno)) {\r\n                npreregno.push(item.npreregno)\r\n            }\r\n            if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n            }\r\n            // Don't Remove\r\n            if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                ntransactiontestcode.push(item.ntransactiontestcode)\r\n            }\r\n        }\r\n        else {\r\n            const preregno = npreregno.filter(data => data !== item.npreregno)\r\n            npreregno = preregno\r\n\r\n            const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode)\r\n            ntransactionsamplecode = transactionsamplecode\r\n            // Don't Remove\r\n            const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode)\r\n            ntransactiontestcode = transactiontestcode\r\n        }\r\n        this.setState({\r\n            npreregno: checkedflag === false ? [] : npreregno,\r\n            ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode, ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\r\n        })\r\n    }\r\n\r\n    viewSelectedReport = (filedata) => {\r\n        delete (filedata.inputData.userinfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                releasedcoareport: filedata.inputData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolCode: filedata.ncontrolCode\r\n            },\r\n            classUrl: \"release\",\r\n            operation: \"view\",\r\n            methodUrl: \"ReleasedCOAReport\",\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    childDataChange = (selectedRecord) => {\r\n        let isInitialRender = false;\r\n        this.setState({\r\n            selectedRecord: {\r\n                ...selectedRecord\r\n            },\r\n            isInitialRender\r\n        });\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if (this.props.Login.openModal && (this.props.Login.isAddReleaseTestAttachment || this.props.Login.isAddReleaseTestComment || this.props.Login.loadEsignStateHandle) && nextState.isInitialRender === false &&\r\n            (nextState.selectedRecord !== this.state.selectedRecord)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    onMandatoryCheck = () => {\r\n        const mandatoryFields = this.props.Login.loadEsignStateHandle ?\r\n            [\r\n                { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"esignpassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REASON\", \"dataField\": \"esignreason\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"esigncomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                // { \"idsName\": \"IDS_CHECKAGREE\",\"dataField\": \"agree\",  \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"checkbox\" },\r\n\r\n            ]\r\n            :\r\n            this.props.Login.isAddReleaseTestAttachment ? [\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                //  { \"idsName\": \"IDS_HEADER\", \"dataField\": \"sheader\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ] : this.props.Login.isAddReleaseTestComment ?\r\n                this.state.selectedRecord && this.state.selectedRecord[\"ncommentsubtypecode\"] && this.state.selectedRecord[\"ncommentsubtypecode\"].value === 3 ?\r\n                    [\r\n                        { \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"scommentsubtype\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_ABBREVIATIONNAME\", \"dataField\": \"spredefinedname\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                        { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n                    ]\r\n                    :\r\n                    [\r\n                        { \"idsName\": \"IDS_COMMENTNAME\", \"dataField\": \"scommentsubtype\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                        { \"idsName\": \"IDS_ARNUMBER\", \"dataField\": \"sarno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" },\r\n                        { \"idsName\": \"IDS_TESTSYNONYM\", \"dataField\": \"stestsynonym\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"selectbox\" }\r\n                    ] : (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) && this.props.Login.masterData \r\n                    && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE) ? \r\n                    [\r\n                        { \"mandatory\": true, \"idsName\": \"IDS_REPORTTEMPLATE\", \"dataField\": \"nreporttemplatecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n                    ] : [];\r\n            {(this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) && this.props.Login.masterData \r\n                && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode !== SampleType.CLINICALTYPE) && \r\n                this.props.Login.masterData && this.props.Login.masterData.reportTemplateList && this.props.Login.masterData.reportTemplateList.length === 0 ? \r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTTEMPLATEISNOTFOUND\" })) : \r\n                onSaveMandatoryValidation(this.state.selectedRecord, mandatoryFields,\r\n                    this.props.Login.loadEsignStateHandle ? this.validateEsign : this.props.Login.isAddReleaseTestAttachment ? this.onSaveTestAttachment\r\n                        : this.props.Login.isAddReleaseTestComment ? this.onSaveTestComment : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) ?\r\n                        this.onSaveModalClick : \"\", \r\n                        (this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }) ? this.props.Login.loadEsign : this.props.Login.loadEsignStateHandle));\r\n                }\r\n    }\r\n\r\n    onSaveTestAttachment = (saveType, formRef) => {\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const userInfo = this.props.Login.userInfo;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let fileArray = [];\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            if (this.state.operation === 'create') {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData[\"nformcode\"] = userInfo.nformcode;\r\n                    tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n                    tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n                    tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n                    tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n                    tempData[\"nusercode\"] = userInfo.nusercode;\r\n                    tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n                    tempData[\"jsondata\"] = {\r\n                        stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                        susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                        suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                        slinkname: \"\",\r\n                        sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                        sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\r\n                    }\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    fileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const fileName = selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                        selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\r\n                    tempData[\"nformcode\"] = userInfo.nformcode;\r\n                    tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n                    tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n                    tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n                    tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n                    tempData[\"nusercode\"] = userInfo.nusercode;\r\n                    tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n                    tempData[\"jsondata\"] = {\r\n                        stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                        susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                        suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                        nfilesize: file.size,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename: Lims_JSON_stringify(file.name.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                        slinkname: \"\",\r\n                        sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                        sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                        nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0\r\n                    }\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    formData.append(\"filecount\", acceptedFiles.length);\r\n                    isFileEdited = transactionStatus.YES;\r\n\r\n                    fileArray.push(tempData);\r\n                });\r\n            }\r\n        } else {\r\n            let tempData = {};\r\n            tempData[\"nreleasetestattachmentcode\"] = selectedRecord.selectedReleaseTestAttachment && selectedRecord.selectedReleaseTestAttachment.nreleasetestattachmentcode;\r\n            tempData[\"nformcode\"] = userInfo.nformcode;\r\n            tempData[\"npreregno\"] = selectedRecord.npreregno.value;\r\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n            tempData[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n            tempData[\"nusercode\"] = userInfo.nusercode;\r\n            tempData[\"nuserrolecode\"] = userInfo.nuserrole;\r\n            tempData[\"jsondata\"] = {\r\n                stestsynonym: Lims_JSON_stringify(selectedRecord.ntransactiontestcode.label.trim(), false),\r\n                susername: Lims_JSON_stringify(userInfo.susername.trim(), false),\r\n                suserrolename: Lims_JSON_stringify(userInfo.suserrolename.trim(), false),\r\n                nfilesize: selectedRecord.size,\r\n                ssystemfilename: selectedRecord.ssystemfilename,\r\n                sfilename: Lims_JSON_stringify(acceptedFiles.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim(), false),\r\n                slinkname: \"\",\r\n                sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n                sheader: Lims_JSON_stringify(selectedRecord.sheader ? selectedRecord.sheader.replaceAll('\\\\', '\\\\\\\\\\\\\\\\').replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\r\n                nsortorder: selectedRecord.nsortorder != \"\" ? selectedRecord.nsortorder : 0 \r\n            }\r\n            fileArray.push(tempData);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"releasetestattachment\", JSON.stringify(fileArray));\r\n        formData.append(\"nattachmenttypecode\", attachmentType.FTP);\r\n        formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\r\n        formData.append(\"ncontrolcode\", this.props.Login.ncontrolCode);\r\n        formData.append(\"userinfo\", JSON.stringify({\r\n            ...userInfo,\r\n            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n        }));\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                },\r\n                doAction: \"editReleaseTestAttachment\",\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: this.props.Login.operation,\r\n                classUrl: \"release\",\r\n                saveType: saveType,\r\n                formRef: formRef,\r\n                methodUrl: \"ReleaseTestAttachment\",\r\n                selectedRecord: this.state.selectedRecord,\r\n                screenName: this.props.Login.screenName,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        };\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    screenData: { inputParam },\r\n                    loadEsignStateHandle: true,\r\n                    ncontrolcode: this.props.Login.ncontrolCode\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.onSaveReleaseTestAttachment(inputParam);\r\n        }\r\n    }\r\n\r\n    deleteReleaseTestAttachment = (deleteParam) => {\r\n        const url = \"release/deleteReleaseTestAttachment\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && \r\n            this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n            let releasetestattachment = {\r\n                \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\r\n                \"npreregno\": deleteParam.selectedRecord.npreregno,\r\n                \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\r\n                \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\r\n                \"nreleasetestattachmentcode\": deleteParam.selectedRecord.nreleasetestattachmentcode\r\n            }\r\n            let inputParam = {\r\n                inputData: {\r\n                    releasetestattachment,\r\n                    url,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.Login.screenName,\r\n                    masterData: this.props.Login.masterData,\r\n                    doAction: \"deleteReleaseTestAttachment\",\r\n                    selectedRecord: this.state.selectedRecord\r\n                }\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        screenData: { inputParam },\r\n                        loadEsignStateHandle: true,\r\n                        ncontrolcode: deleteParam.ncontrolCode\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.onDeleteReleaseTestAttachment(inputParam);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n\r\n    onSaveTestComment = (saveType, formRef) => {\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const userInfo = this.props.Login.userInfo;\r\n        const inputData = {};\r\n        let commentArray = [];\r\n        let comment = {};\r\n        comment[\"nreleasetestcommentcode\"] = selectedRecord.selectedReleaseTestComment && selectedRecord.selectedReleaseTestComment.nreleasetestcommentcode\r\n        comment[\"nformcode\"] = userInfo.nformcode;\r\n        comment[\"npreregno\"] = selectedRecord.npreregno.value;\r\n        comment[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode.value;\r\n        comment[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode.value;\r\n        comment[\"ncoaparentcode\"] = this.props.Login.masterData.ncoaparentcode;\r\n        comment[\"nusercode\"] = userInfo.nusercode;\r\n        comment[\"nuserrolecode\"] = userInfo.nuserrole;\r\n        comment[\"ncommentsubtypecode\"] = selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.value;\r\n        comment[\"nsampletestcommentscode\"] = selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.value !== \"\" ? selectedRecord.nsampletestcommentscode.value : '-1';\r\n        comment[\"jsondata\"] = {\r\n            scomments: selectedRecord.scomments ? selectedRecord.scomments : \"\",\r\n            nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO,\r\n            stestsynonym: selectedRecord.stestsynonym,\r\n            scommentsubtype: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode.label,\r\n            spredefinedname: selectedRecord.nsampletestcommentscode && selectedRecord.nsampletestcommentscode.label !== \"\" ? selectedRecord.nsampletestcommentscode.label : '-',\r\n            ncommentsubtypecode: selectedRecord.ncommentsubtypecode && selectedRecord.ncommentsubtypecode,\r\n            nsampletestcommentscode: selectedRecord.nsampletestcommentscode ? selectedRecord.nsampletestcommentscode : '-'\r\n        }\r\n        comment[\"nsamplecommentscode\"] = selectedRecord.nsamplecommentscode ? selectedRecord.nsamplecommentscode.value : -1;\r\n        commentArray.push(comment);\r\n        inputData[\"testcomment\"] = commentArray;\r\n        // }\r\n        formData.append(\"userinfo\", JSON.stringify({\r\n            ...userInfo,\r\n            sformname: Lims_JSON_stringify(userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n            slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n        }));\r\n        formData.append(\"releasetestcomment\", JSON.stringify(commentArray));\r\n        formData.append(\"ncoaparentcode\", this.props.Login.masterData.ncoaparentcode);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...userInfo,\r\n                    sformname: Lims_JSON_stringify(userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(userInfo.slanguagename)\r\n                },\r\n                doAction: \"editReleaseTestComment\",\r\n                formData: formData,\r\n                operation: this.props.Login.operation,\r\n                classUrl: \"release\",\r\n                saveType: saveType,\r\n                formRef: formRef,\r\n                methodUrl: \"ReleaseTestComment\",\r\n                selectedRecord: this.state.selectedRecord,\r\n                screenName: this.props.Login.screenName,\r\n                masterData: this.props.Login.masterData\r\n            }\r\n        };\r\n        if (showEsign(this.props.Login.userRoleControlRights, userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsignStateHandle: true,\r\n                    screenData: { inputParam },\r\n                    ncontrolcode: this.props.Login.ncontrolCode\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.onSaveReleaseTestComment(inputParam);\r\n        }\r\n    }\r\n\r\n    deleteReleaseTestComment = (deleteParam) => {\r\n        const url = \"release/deleteReleaseTestComment\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.RELEASED && \r\n            this.props.Login.masterData.selectedReleaseHistory[0].ntransactionstatus !== transactionStatus.PRELIMINARYRELEASE) {\r\n            let releasetestcomment = {\r\n                \"ncoaparentcode\": deleteParam.selectedRecord.ncoaparentcode,\r\n                \"npreregno\": deleteParam.selectedRecord.npreregno,\r\n                \"ntransactionsamplecode\": deleteParam.selectedRecord.ntransactionsamplecode,\r\n                \"ntransactiontestcode\": deleteParam.selectedRecord.ntransactiontestcode,\r\n                \"nreleasetestcommentcode\": deleteParam.selectedRecord.nreleasetestcommentcode\r\n            }\r\n            let inputParam = {\r\n                inputData: {\r\n                    releasetestcomment,\r\n                    url,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    screenName: this.props.Login.screenName,\r\n                    masterData: this.props.Login.masterData,\r\n                    doAction: \"deleteReleaseTestComment\",\r\n                    selectedRecord: this.state.selectedRecord\r\n                }\r\n            }\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsignStateHandle: true,\r\n                        screenData: { inputParam },\r\n                        ncontrolcode: deleteParam.ncontrolCode\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            } else {\r\n                this.props.onDeleteReleaseTestComment(inputParam);\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTCORRECTEDRECORD\" }));\r\n        }\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample,\r\n    getApprovedSample,\r\n    //, generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\r\n    previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise, getreportcomments,\r\n    fetchReportInfoReleaseById, UpdateReportComments\r\n    , generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData,\r\n    //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    getSectionForSectionWise, fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory,\r\n    downloadVersionReport, viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool,\r\n    getPatientWiseSample, preliminaryReport, releaseReportHistory, onSaveReleaseTestAttachment, onDeleteReleaseTestAttachment, onSaveReleaseTestComment,\r\n    onDeleteReleaseTestComment,generatereport\r\n})(injectIntl(Release));"]},"metadata":{},"sourceType":"module"}