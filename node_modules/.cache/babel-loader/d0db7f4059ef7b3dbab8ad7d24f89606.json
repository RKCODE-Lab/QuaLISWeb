{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{Nav,Row,Col}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import DataGrid from'../../components/data-grid/data-grid.component';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{transactionStatus}from'../../components/Enumeration';import{process}from'@progress/kendo-data-query';//const InstrumentSectionTab = (props) =>\nvar WorklistHistoryTab=/*#__PURE__*/function(_React$Component){_inherits(WorklistHistoryTab,_React$Component);var _super=_createSuper(WorklistHistoryTab);function WorklistHistoryTab(props){var _this;_classCallCheck(this,WorklistHistoryTab);_this=_super.call(this,props);_this.state={sectionDataState:{skip:0,take:_this.props.settings?parseInt(_this.props.settings[14]):5}};return _this;}// dataStateChange = (event) => {\n//     this.setState({\n//         dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\n//         sectionDataState: event.dataState\n//     });\n//}\n_createClass(WorklistHistoryTab,[{key:\"render\",value:function render(){var _this2=this;var instSectionColumnList=[{\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"150px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"username\",\"width\":\"150px\"},{\"idsName\":\"IDS_ROLE\",\"dataField\":\"suserrolename\",\"width\":\"150px\"},{\"idsName\":\"IDS_TRANSDATE\",\"dataField\":\"stransactiondate\",\"width\":\"150px\"}// {\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"150px\", \"componentName\": \"switch\", \n// \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultSection\"}\n];var methodUrl=\"Section\";return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{key:\"worklisthistorykey\",primaryKeyField:\"nworkhistorycode\",dataResult:process(this.props.selectedWorklistHistory||[],this.state.sectionDataState)// dataResult={this.props.selectedWorklistHistory ||[]}\n// dataState={{}}\n,dataState:this.state.sectionDataState,dataStateChange:function dataStateChange(event){return _this2.setState({sectionDataState:event.dataState});},data:this.props.InstrumentSection,extractedColumnList:instSectionColumnList//controlMap={this.state.controlMap}\n,pageable:false,scrollable:'scrollable',gridHeight:'335px',isActionRequired:false//userRoleControlRights={this.props.userRoleControlRights}\n}))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.InstrumentSection!==previousProps.InstrumentSection){var sectionDataState=this.state.sectionDataState;if(this.props.dataState===undefined){sectionDataState={skip:0,take:this.props.settings?parseInt(this.props.settings[14]):5};}this.setState({sectionDataState:sectionDataState});}}}]);return WorklistHistoryTab;}(React.Component);;export default injectIntl(WorklistHistoryTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/worklist/WorklistHistoryTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","FontAwesomeIcon","DataGrid","faPlus","transactionStatus","process","WorklistHistoryTab","props","state","sectionDataState","skip","take","settings","parseInt","instSectionColumnList","methodUrl","selectedWorklistHistory","event","setState","dataState","InstrumentSection","previousProps","undefined","Component"],"mappings":"wtBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,YAA7C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,KAA8B,iBAA9B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CACA,OAASC,MAAT,KAAuB,mCAAvB,CACA,OAASC,iBAAT,KAAkC,8BAAlC,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA;GACMC,CAAAA,kB,oIACF,4BAAYC,KAAZ,CAAmB,oDACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAc,CACVC,gBAAgB,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,MAAKJ,KAAL,CAAWK,QAAX,CAAsBC,QAAQ,CAAC,MAAKN,KAAL,CAAWK,QAAX,CAAoB,EAApB,CAAD,CAA9B,CAA0D,CAA3E,CADR,CAAd,CAFe,aAKlB,CAGD;AACA;AACA;AACA;AACA;AACA;qDACA,iBAAS,iBAEL,GAAME,CAAAA,qBAAqB,CAAG,CAC1B,CAAE,UAAW,YAAb,CAA2B,YAAa,qBAAxC,CAA+D,QAAS,OAAxE,CAD0B,CAE1B,CAAE,UAAW,cAAb,CAA6B,YAAa,UAA1C,CAAsD,QAAS,OAA/D,CAF0B,CAG1B,CAAE,UAAW,UAAb,CAAyB,YAAa,eAAtC,CAAuD,QAAS,OAAhE,CAH0B,CAI1B,CAAE,UAAW,eAAb,CAA8B,YAAa,kBAA3C,CAA+D,QAAS,OAAxE,CACA;AACA;AAN0B,CAA9B,CAQA,GAAMC,CAAAA,SAAS,CAAG,SAAlB,CACA,mBACI,qDAEI,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,QAAD,EACI,GAAG,CAAC,oBADR,CAEG,eAAe,CAAC,kBAFnB,CAGI,UAAU,CAAEV,OAAO,CAAC,KAAKE,KAAL,CAAWS,uBAAX,EAAqC,EAAtC,CAA2C,KAAKR,KAAL,CAAWC,gBAAtD,CACpB;AACA;AALH,CAMI,SAAS,CAAE,KAAKD,KAAL,CAAWC,gBAN1B,CAOI,eAAe,CAAE,yBAACQ,KAAD,QAAW,CAAA,MAAI,CAACC,QAAL,CAAc,CAAET,gBAAgB,CAAEQ,KAAK,CAACE,SAA1B,CAAd,CAAX,EAPrB,CAQI,IAAI,CAAE,KAAKZ,KAAL,CAAWa,iBARrB,CASI,mBAAmB,CAAEN,qBACrB;AAVJ,CAWI,QAAQ,CAAE,KAXd,CAYI,UAAU,CAAE,YAZhB,CAaI,UAAU,CAAE,OAbhB,CAcI,gBAAgB,CAAE,KAClB;AAfJ,EADJ,CADJ,CAFJ,CADJ,CA6BH,C,kCACD,4BAAmBO,aAAnB,CAAkC,CAC9B,GAAI,KAAKd,KAAL,CAAWa,iBAAX,GAAiCC,aAAa,CAACD,iBAAnD,CAAsE,CAClE,GAAMX,CAAAA,gBAAN,CAA2B,KAAKD,KAAhC,CAAMC,gBAAN,CACA,GAAI,KAAKF,KAAL,CAAWY,SAAX,GAAyBG,SAA7B,CAAwC,CACpCb,gBAAgB,CAAG,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,KAAKJ,KAAL,CAAWK,QAAX,CAAsBC,QAAQ,CAAC,KAAKN,KAAL,CAAWK,QAAX,CAAoB,EAApB,CAAD,CAA9B,CAA0D,CAA3E,CAAnB,CACH,CACD,KAAKM,QAAL,CAAc,CAAET,gBAAgB,CAAhBA,gBAAF,CAAd,EACH,CAEJ,C,gCAjE4Bd,KAAK,CAAC4B,S,EAkEtC,CAED,cAAe3B,CAAAA,UAAU,CAACU,kBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { process } from '@progress/kendo-data-query';\r\n//const InstrumentSectionTab = (props) =>\r\nclass WorklistHistoryTab extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            sectionDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n        });\r\n    }\r\n\r\n\r\n    // dataStateChange = (event) => {\r\n    //     this.setState({\r\n    //         dataResult: process(this.props.Login.masterData[\"selectedSection\"], event.dataState),\r\n    //         sectionDataState: event.dataState\r\n    //     });\r\n    //}\r\n    render() {\r\n\r\n        const instSectionColumnList = [\r\n            { \"idsName\": \"IDS_STATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"username\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_ROLE\", \"dataField\": \"suserrolename\", \"width\": \"150px\" },                               \r\n            { \"idsName\": \"IDS_TRANSDATE\", \"dataField\": \"stransactiondate\", \"width\": \"150px\" }\r\n            // {\"idsName\":\"IDS_STATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"150px\", \"componentName\": \"switch\", \r\n            // \"switchFieldName\": \"ndefaultstatus\", \"switchStatus\": transactionStatus.YES, \"needRights\": true, \"controlName\": \"DefaultSection\"}\r\n        ];\r\n        const methodUrl = \"Section\";\r\n        return (\r\n            <>\r\n\r\n                <Row noGutters={true}>\r\n                    <Col md=\"12\">\r\n                        <DataGrid\r\n                            key=\"worklisthistorykey\"\r\n                           primaryKeyField=\"nworkhistorycode\"\r\n                            dataResult={process(this.props.selectedWorklistHistory ||[],  this.state.sectionDataState)}\r\n                           // dataResult={this.props.selectedWorklistHistory ||[]}\r\n                           // dataState={{}}\r\n                            dataState={this.state.sectionDataState}\r\n                            dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                            data={this.props.InstrumentSection}\r\n                            extractedColumnList={instSectionColumnList}\r\n                            //controlMap={this.state.controlMap}\r\n                            pageable={false}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'335px'}\r\n                            isActionRequired={false}\r\n                            //userRoleControlRights={this.props.userRoleControlRights}\r\n                            \r\n\r\n                        >\r\n                        </DataGrid>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.InstrumentSection !== previousProps.InstrumentSection) {\r\n            let { sectionDataState } = this.state;\r\n            if (this.props.dataState === undefined) {\r\n                sectionDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n            }\r\n            this.setState({ sectionDataState });\r\n        }\r\n\r\n    }\r\n};\r\n\r\nexport default injectIntl(WorklistHistoryTab);"]},"metadata":{},"sourceType":"module"}