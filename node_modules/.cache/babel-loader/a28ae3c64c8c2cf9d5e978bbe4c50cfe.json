{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{parameterType}from'../../components/Enumeration';var EditTestGroupParameter=function EditTestGroupParameter(props){var _props$testGroupInput=props.testGroupInputData,needRoundingDigit=_props$testGroupInput.needRoundingDigit,needUnit=_props$testGroupInput.needUnit,unit=_props$testGroupInput.unit;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sparametersynonym\",label:props.intl.formatMessage({id:\"IDS_PARAMETERSYNONYM\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_PARAMETERSYNONYM\"}),value:props.selectedRecord&&props.selectedRecord[\"sparametersynonym\"]?props.selectedRecord[\"sparametersynonym\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_PARAMETERTYPE\"}),isSearchable:false,name:\"nparametertypecode\",isDisabled:false,placeholder:\"Please Select...\",isMandatory:true,showOption:true,options:props.testGroupInputData.parameterType||[],optionId:\"nparametertypecode\",optionValue:\"sdisplaystatus\",value:props.selectedRecord?props.selectedRecord[\"nparametertypecode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"nparametertypecode\",2);},alphabeticalSort:true})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"nroundingdigits\",label:props.intl.formatMessage({id:\"IDS_ROUNDINGDIGITS\"}),type:\"number\",onChange:function onChange(value){return props.onNumericInputChange(value,\"nroundingdigits\");},placeholder:props.intl.formatMessage({id:\"IDS_ROUNDINGDIGITS\"}),value:props.selectedRecord[\"nroundingdigits\"],min:0,max:9,maxLength:1,noStyle:true,precision:0,strict:true,isDisabled:needRoundingDigit,isMandatory:!needRoundingDigit,required:!needRoundingDigit,className:\"form-control\",errors:\"Please provide a valid number.\"}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_UNIT\"}),isSearchable:true,name:\"nunitcode\",isDisabled:needUnit,placeholder:\"Please Select...\",isMandatory:!needUnit,options:unit||[],optionId:\"nunitcode\",optionValue:\"sunitname\",value:props.selectedRecord?props.selectedRecord[\"nunitcode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"nunitcode\",1);},alphabeticalSort:true})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_CHECKLIST\"}),isSearchable:false,name:\"nchecklistversioncode\",isDisabled:false,placeholder:\"Please Select...\",isMandatory:false,showOption:false,options:props.testGroupInputData.checkListVersion||[],optionId:\"nchecklistversioncode\",optionValue:\"schecklistname\",value:props.selectedRecord?props.selectedRecord[\"nchecklistversioncode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"nchecklistversioncode\",3);},alphabeticalSort:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"schecklistversionname\",label:props.intl.formatMessage({id:\"IDS_CHECKLISTVERSION\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_CHECKLISTVERSION\"}),value:props.selectedRecord&&props.selectedRecord[\"schecklistversionname\"]?props.selectedRecord[\"schecklistversionname\"]:\"\",required:false,maxLength:100,readOnly:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sspecdesc\",label:props.intl.formatMessage({id:\"IDS_SPECDESCRIPTION\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_SPECDESCRIPTION\"}),value:props.selectedRecord?props.selectedRecord[\"sspecdesc\"]:\"\",rows:\"2\",required:false,maxLength:255}),/*#__PURE__*/React.createElement(FormNumericInput,{name:\"nsorter\",label:props.intl.formatMessage({id:\"IDS_SORTER\"}),type:\"number\",value:props.selectedRecord[\"nsorter\"],placeholder:props.intl.formatMessage({id:\"IDS_SORTER\"}),strict:true,maxLength:3,onChange:function onChange(value){return props.onNumericInputChange(value,\"nsorter\");},noStyle:true,precision:0,className:\"form-control\",errors:\"Please provide a valid number.\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nreportmandatory\",label:props.intl.formatMessage({id:\"IDS_REPORTMANDATORY\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[3,4]);},placeholder:props.intl.formatMessage({id:\"IDS_REPORTMANDATORY\"}),defaultValue:props.selectedRecord[\"nreportmandatory\"]===3?true:false,checked:props.selectedRecord[\"nreportmandatory\"]===3?true:false}),/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nresultmandatory\",label:props.intl.formatMessage({id:\"IDS_RESULTMANDATORY\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[3,4]);},placeholder:props.intl.formatMessage({id:\"IDS_RESULTMANDATORY\"}),defaultValue:props.selectedRecord[\"nresultmandatory\"]===3?true:false,checked:props.selectedRecord[\"nresultmandatory\"]===3?true:false})),props.selectedRecord[\"parameterTypeCode\"]&&props.selectedRecord[\"parameterTypeCode\"]===parameterType.NUMERIC&&/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FORMULA\"}),isSearchable:false,name:\"ntestformulacode\",isDisabled:false,placeholder:\"Please Select...\",isMandatory:false,showOption:true,options:props.testGroupInputData.testFormula||[],optionId:\"ntestformulacode\",optionValue:\"sformulaname\",value:props.selectedRecord?props.selectedRecord[\"ntestformulacode\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"ntestformulacode\",1);},alphabeticalSort:true,isClearable:true})));};export default injectIntl(EditTestGroupParameter);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testgroup/EditTestGroupParameter.jsx"],"names":["React","Row","Col","FormInput","FormSelectSearch","injectIntl","FormNumericInput","CustomSwitch","FormTextarea","parameterType","EditTestGroupParameter","props","testGroupInputData","needRoundingDigit","needUnit","unit","intl","formatMessage","id","event","onInputOnChange","selectedRecord","value","onComboChange","onNumericInputChange","checkListVersion","NUMERIC","testFormula"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { parameterType } from '../../components/Enumeration';\r\n\r\nconst EditTestGroupParameter = (props) => {\r\n    const { needRoundingDigit, needUnit, unit } = props.testGroupInputData;\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    name={\"sparametersynonym\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_PARAMETERSYNONYM\" })}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_PARAMETERSYNONYM\" })}\r\n                    value={props.selectedRecord && props.selectedRecord[\"sparametersynonym\"] ? props.selectedRecord[\"sparametersynonym\"] : \"\"}\r\n                    isMandatory=\"*\"\r\n                    required={true}\r\n                    maxLength={100}\r\n                >\r\n                </FormInput>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_PARAMETERTYPE\" })}\r\n                    isSearchable={false}\r\n                    name={\"nparametertypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder=\"Please Select...\"\r\n                    isMandatory={true}\r\n                    showOption={true}\r\n                    options={props.testGroupInputData.parameterType || []}\r\n                    optionId='nparametertypecode'\r\n                    optionValue='sdisplaystatus'\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nparametertypecode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"nparametertypecode\", 2)}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={6}>\r\n                <FormNumericInput\r\n                    name={\"nroundingdigits\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_ROUNDINGDIGITS\" })}\r\n                    type=\"number\"\r\n                    onChange={(value) => props.onNumericInputChange(value, \"nroundingdigits\")}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_ROUNDINGDIGITS\" })}\r\n                    value={props.selectedRecord[\"nroundingdigits\"]}\r\n                    min={0}\r\n                    max={9}\r\n                    maxLength={1}\r\n                    noStyle={true}\r\n                    precision={0}\r\n                    strict={true}\r\n                    isDisabled={needRoundingDigit}\r\n                    isMandatory={!needRoundingDigit}\r\n                    required={!needRoundingDigit}\r\n                    className=\"form-control\"\r\n                    errors=\"Please provide a valid number.\"\r\n                >\r\n                </FormNumericInput>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n                    isSearchable={true}\r\n                    name={\"nunitcode\"}\r\n                    isDisabled={needUnit}\r\n                    placeholder=\"Please Select...\"\r\n                    isMandatory={!needUnit}\r\n                    options={unit || []}\r\n                    optionId='nunitcode'\r\n                    optionValue='sunitname'\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nunitcode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"nunitcode\", 1)}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={6}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_CHECKLIST\" })}\r\n                    isSearchable={false}\r\n                    name={\"nchecklistversioncode\"}\r\n                    isDisabled={false}\r\n                    placeholder=\"Please Select...\"\r\n                    isMandatory={false}\r\n                    showOption={false}\r\n                    options={props.testGroupInputData.checkListVersion || []}\r\n                    optionId='nchecklistversioncode'\r\n                    optionValue='schecklistname'\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nchecklistversioncode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"nchecklistversioncode\", 3)}\r\n                    alphabeticalSort={true}\r\n                >\r\n                </FormSelectSearch>\r\n                <FormInput\r\n                    name={\"schecklistversionname\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_CHECKLISTVERSION\" })}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CHECKLISTVERSION\" })}\r\n                    value={props.selectedRecord && props.selectedRecord[\"schecklistversionname\"] ? props.selectedRecord[\"schecklistversionname\"] : \"\"}\r\n                    required={false}\r\n                    maxLength={100}\r\n                    readOnly={true}\r\n                ></FormInput>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    name={\"sspecdesc\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_SPECDESCRIPTION\" })}\r\n                    onChange={(event) => props.onInputOnChange(event, 1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SPECDESCRIPTION\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sspecdesc\"] : \"\"}\r\n                    rows=\"2\"\r\n                    required={false}\r\n                    maxLength={255}\r\n                >\r\n                </FormTextarea>\r\n                <FormNumericInput\r\n                    name={\"nsorter\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_SORTER\" })}\r\n                    type=\"number\"\r\n                    value={props.selectedRecord[\"nsorter\"]}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SORTER\" })}\r\n                    strict={true}\r\n                    maxLength={3}\r\n                    onChange={(value) => props.onNumericInputChange(value, \"nsorter\")}\r\n                    noStyle={true}\r\n                    precision={0}\r\n                    className=\"form-control\"\r\n                    errors=\"Please provide a valid number.\"\r\n                ></FormNumericInput>\r\n            </Col>\r\n            <Col md={6}>\r\n                <CustomSwitch\r\n                    name={\"nreportmandatory\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_REPORTMANDATORY\" })}\r\n                    type=\"switch\"\r\n                    onChange={(event) => props.onInputOnChange(event, 1, [3, 4])}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_REPORTMANDATORY\" })}\r\n                    defaultValue={props.selectedRecord[\"nreportmandatory\"] === 3 ? true : false}\r\n                    checked={props.selectedRecord[\"nreportmandatory\"] === 3 ? true : false}\r\n                >\r\n                </CustomSwitch>\r\n                <CustomSwitch\r\n                    name={\"nresultmandatory\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_RESULTMANDATORY\" })}\r\n                    type=\"switch\"\r\n                    onChange={(event) => props.onInputOnChange(event, 1, [3, 4])}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_RESULTMANDATORY\" })}\r\n                    defaultValue={props.selectedRecord[\"nresultmandatory\"] === 3 ? true : false}\r\n                    checked={props.selectedRecord[\"nresultmandatory\"] === 3 ? true : false}\r\n                >\r\n                </CustomSwitch>\r\n            </Col>\r\n            {props.selectedRecord[\"parameterTypeCode\"] && props.selectedRecord[\"parameterTypeCode\"] === parameterType.NUMERIC &&\r\n                <Col md={12}>\r\n                    <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_FORMULA\" })}\r\n                        isSearchable={false}\r\n                        name={\"ntestformulacode\"}\r\n                        isDisabled={false}\r\n                        placeholder=\"Please Select...\"\r\n                        isMandatory={false}\r\n                        showOption={true}\r\n                        options={props.testGroupInputData.testFormula || []}\r\n                        optionId='ntestformulacode'\r\n                        optionValue='sformulaname'\r\n                        value={props.selectedRecord ? props.selectedRecord[\"ntestformulacode\"] : \"\"}\r\n                        onChange={value => props.onComboChange(value, \"ntestformulacode\", 1)}\r\n                        alphabeticalSort={true}\r\n                        isClearable={true}\r\n                    >\r\n                    </FormSelectSearch>\r\n                </Col>\r\n            }\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(EditTestGroupParameter);"]},"metadata":{},"sourceType":"module"}