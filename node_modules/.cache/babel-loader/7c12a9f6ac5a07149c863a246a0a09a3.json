{"ast":null,"code":"import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{faPlus,faThumbsUp}from'@fortawesome/free-solid-svg-icons';import{Nav,Row,Col}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import DataGrid from'../../components/data-grid/data-grid.component';import{transactionStatus}from'../../components/Enumeration';var MethodValidityTab=function MethodValidityTab(props){var addId=props.controlMap.has(\"AddMethodValidity\")&&props.controlMap.get(\"AddMethodValidity\").ncontrolcode;// const approveId = props.controlMap.has(\"ApprovalMethodValidity\") && props.controlMap.get(\"ApprovalMethodValidity\").ncontrolcode;\n//const editId = props.controlMap.has(\"EditMethodValidity\") && props.controlMap.get(\"EditMethodValidity\").ncontrolcode;\nvar deleteId=props.controlMap.has(\"DeleteMethodValidity\")&&props.controlMap.get(\"DeleteMethodValidity\").ncontrolcode;var methodValidityColumnList=[{\"idsName\":\"IDS_METHODVALIDITYSTARTDATE\",\"dataField\":\"svaliditystartdate\",\"width\":\"200px\"},{\"idsName\":\"IDS_VALIDITYENDDATE\",\"dataField\":\"svalidityenddate\",\"width\":\"200px\"},{\"idsName\":\"IDS_DISPLAYSTATUS\",\"dataField\":\"sdisplaystatus\",\"width\":\"200px\"}];var methodUrl=\"MethodValidity\";return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addmethodvalidity\",className:\"add-txt-btn\",hidden:props.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return props.openChildModal();},\"data-tip\":props.formatMessage({id:\"IDS_METHODVALIDITY\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_METHODVALIDITY\",defaultMessage:\"Method Validity\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid//key=\"methodvaliditykey\"\n,{primaryKeyField:\"nmethodvaliditycode\",selectedId:props.operation===\"update\"?props.selectedId:props.selectedComponent?props.selectedComponent.nmethodvaliditycode:null,data:props.MethodValidity,dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:methodValidityColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights,fetchRecord:props.fetchMethodValidityById,editParam:props.editParam,inputParam:props.inputParam,userInfo:props.userInfo,deleteRecord:props.deleteRecord,handleRowClick:props.handleComponentRowClick,pageable:true,scrollable:'scrollable',gridHeight:'410px',isActionRequired:true,deleteParam:{operation:\"delete\",methodUrl:methodUrl},methodUrl:methodUrl,hideColumnFilter:false,onSwitchChange:props.defaultRecord,switchParam:{operation:\"Default\",methodUrl:methodUrl},approveRecord:props.onApproveClick}))));};export default injectIntl(MethodValidityTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/MethodValidityTab.jsx"],"names":["React","injectIntl","FormattedMessage","faPlus","faThumbsUp","Nav","Row","Col","FontAwesomeIcon","DataGrid","transactionStatus","MethodValidityTab","props","addId","controlMap","has","get","ncontrolcode","deleteId","methodValidityColumnList","methodUrl","userRoleControlRights","indexOf","openChildModal","formatMessage","id","operation","selectedId","selectedComponent","nmethodvaliditycode","MethodValidity","dataResult","dataState","dataStateChange","fetchMethodValidityById","editParam","inputParam","userInfo","deleteRecord","handleComponentRowClick","defaultRecord","onApproveClick"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\n\r\nimport { faPlus ,faThumbsUp} from '@fortawesome/free-solid-svg-icons';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst MethodValidityTab = (props) => {\r\n    const addId = props.controlMap.has(\"AddMethodValidity\") && props.controlMap.get(\"AddMethodValidity\").ncontrolcode;\r\n   // const approveId = props.controlMap.has(\"ApprovalMethodValidity\") && props.controlMap.get(\"ApprovalMethodValidity\").ncontrolcode;\r\n    //const editId = props.controlMap.has(\"EditMethodValidity\") && props.controlMap.get(\"EditMethodValidity\").ncontrolcode;\r\n    const deleteId = props.controlMap.has(\"DeleteMethodValidity\") && props.controlMap.get(\"DeleteMethodValidity\").ncontrolcode;\r\n    const methodValidityColumnList = [\r\n        {\"idsName\":\"IDS_METHODVALIDITYSTARTDATE\",\"dataField\":\"svaliditystartdate\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_VALIDITYENDDATE\",\"dataField\":\"svalidityenddate\",\"width\":\"200px\"},\r\n        {\"idsName\":\"IDS_DISPLAYSTATUS\",\"dataField\":\"sdisplaystatus\",\"width\":\"200px\"}\r\n    ];\r\n    const methodUrl = \"MethodValidity\";\r\n    return (\r\n        <>\r\n            <div className=\"actions-stripe\">\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <Nav.Link name=\"addmethodvalidity\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                        onClick={()=>props.openChildModal()}\r\n                        data-tip={props.formatMessage({ id: \"IDS_METHODVALIDITY\" })}> \r\n                        \r\n                        <FontAwesomeIcon icon = { faPlus } />{\" \"}\r\n                        <FormattedMessage id=\"IDS_METHODVALIDITY\" defaultMessage=\"Method Validity\"></FormattedMessage>\r\n                    </Nav.Link>\r\n                    {/* <Nav.Link name=\"approvalmethodvalidity\" className=\"add-txt-btn\" hidden={props.userRoleControlRights.indexOf(approveId) === -1}\r\n                        onClick={() => props.onApproveClick(\"MethodValidity\", \"approve\", \"nmethodvaliditycode\", approveId)}\r\n                        data-tip={props.formatMessage({ id: \"IDS_APPROVE\" })}>                         \r\n                        <FontAwesomeIcon icon = { faThumbsUp } />{\" \"} */}\r\n                        {/* <FormattedMessage id=\"IDS_APPROVALMETHODVALIDITY\" defaultMessage=\"Method Validity\"></FormattedMessage> */}\r\n                    {/* </Nav.Link> */}\r\n                </div>\r\n            </div>\r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                        //key=\"methodvaliditykey\"\r\n                        primaryKeyField = \"nmethodvaliditycode\"\r\n                        selectedId={props.operation === \"update\" ? props.selectedId : props.selectedComponent ?\r\n                        props.selectedComponent.nmethodvaliditycode : null}\r\n                        data = {props.MethodValidity}\r\n                        dataResult = {props.dataResult}\r\n                        dataState = {props.dataState}\r\n                        dataStateChange = {props.dataStateChange}\r\n                        extractedColumnList = {methodValidityColumnList}\r\n                        controlMap = {props.controlMap}\r\n                        userRoleControlRights={props.userRoleControlRights}\r\n                        fetchRecord={props.fetchMethodValidityById}\r\n                        editParam={props.editParam}\r\n                        inputParam = {props.inputParam}\r\n                        userInfo = {props.userInfo}\r\n                        deleteRecord = {props.deleteRecord}\r\n                        handleRowClick={props.handleComponentRowClick}\r\n                        pageable={true}\r\n                        scrollable={'scrollable'}\r\n                        gridHeight = {'410px'}\r\n                        isActionRequired={true}\r\n                        deleteParam={{operation:\"delete\", methodUrl}}\r\n                        methodUrl={methodUrl}\r\n                        hideColumnFilter={false}\r\n                        onSwitchChange = {props.defaultRecord}\r\n                        switchParam={{operation:\"Default\", methodUrl}} \r\n                        approveRecord={props.onApproveClick}\r\n                        >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(MethodValidityTab);"]},"metadata":{},"sourceType":"module"}