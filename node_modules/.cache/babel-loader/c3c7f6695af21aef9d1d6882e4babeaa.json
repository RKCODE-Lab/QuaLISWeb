{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';//import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nvar AddClient=function AddClient(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_CLIENTCATEGORY\"}),isSearchable:true,name:\"nclientcatcode\",isDisabled:false,placeholder:props.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:props.clientCategoryList||[],optionId:\"nclientcatcode\",optionValue:\"sclientcatname\",value:props.selectedRecord?props.selectedRecord[\"nclientcatcode\"]:\"\",defaultValue:props.selectedRecord[\"nclientcatcode\"],onChange:function onChange(event){return props.onComboChange(event,'nclientcatcode');}//isMulti={false}\n,closeMenuOnSelect:true,alphabeticalSort:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_CLIENTNAME\"}),name:\"sclientname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.formatMessage({id:\"IDS_CLIENTNAME\"}),value:props.selectedRecord[\"sclientname\"],isMandatory:true,required:true,maxLength:100,readOnly:props.userLogged})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_CLIENTID\"}),name:\"sclientid\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.formatMessage({id:\"IDS_CLIENTID\"}),value:props.selectedRecord[\"sclientid\"],isMandatory:true,required:true,maxLength:50,readOnly:props.userLogged})),props.operation!==\"update\"?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_CLIENTSITENAME\"}),name:\"sclientsitename\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.formatMessage({id:\"IDS_CLIENTSITENAME\"}),value:props.selectedRecord[\"sclientsitename\"],isMandatory:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.formatMessage({id:\"IDS_CLIENTCONTACTNAME\"}),name:\"scontactname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.formatMessage({id:\"IDS_CLIENTCONTACTNAME\"}),value:props.selectedRecord[\"scontactname\"],isMandatory:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.formatMessage({id:\"IDS_ADDRESS1\"}),name:\"saddress1\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.formatMessage({id:\"IDS_ADDRESS1\"}),defaultValue:props.selectedRecord[\"saddress1\"],rows:\"2\",isMandatory:true,required:true,maxLength:255})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.formatMessage({id:\"IDS_COUNTRY\"}),isSearchable:true,name:\"ncountrycode\",isDisabled:false,placeholder:props.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:props.countryList||[],optionId:\"ncountrycode\",optionValue:\"scountryname\",value:props.selectedRecord?props.selectedRecord[\"ncountrycode\"]:\"\",defaultValue:props.selectedRecord[\"ncountrycode\"],onChange:function onChange(event){return props.onComboChange(event,'ncountrycode');}//isMulti={false}\n,closeMenuOnSelect:true,alphabeticalSort:true}))):\"\",/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.formatMessage({id:\"IDS_TRANSACTIONSTATUSACTIVE\"}),type:\"switch\",name:\"ntransactionstatus\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.formatMessage({id:\"IDS_TRANSACTIONSTATUSACTIVE\"}),defaultValue:props.selectedRecord[\"ntransactionstatus\"]===1?true:false,isMandatory:false,required:false,checked:props.selectedRecord[\"ntransactionstatus\"]===1?true:false})));};export default AddClient;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/contactmaster/AddClient.js"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","AddClient","props","formatMessage","id","clientCategoryList","selectedRecord","event","onComboChange","onInputOnChange","userLogged","operation","countryList"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n//import FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\nconst AddClient = (props) => {\r\n    return (\r\n        <Row>\r\n              <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.formatMessage({ id: \"IDS_CLIENTCATEGORY\" })}\r\n                    isSearchable={true}\r\n                    name={\"nclientcatcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    options={props.clientCategoryList || []}\r\n                    optionId='nclientcatcode'\r\n                    optionValue='sclientcatname'\r\n                    value={props.selectedRecord ? props.selectedRecord[\"nclientcatcode\"] : \"\"}\r\n                    defaultValue={props.selectedRecord[\"nclientcatcode\"]}\r\n                    onChange={(event) => props.onComboChange(event, 'nclientcatcode')}\r\n                    //isMulti={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.formatMessage({ id: \"IDS_CLIENTNAME\" })}\r\n                    name={\"sclientname\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.formatMessage({ id: \"IDS_CLIENTNAME\" })}\r\n                    value={props.selectedRecord[\"sclientname\"]}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                    readOnly={props.userLogged}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.formatMessage({ id: \"IDS_CLIENTID\" })}\r\n                    name={\"sclientid\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.formatMessage({ id: \"IDS_CLIENTID\" })}\r\n                    value={props.selectedRecord[\"sclientid\"]}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={50}\r\n                    readOnly={props.userLogged}\r\n                />\r\n            </Col>\r\n            {(props.operation !== \"update\") ?  \r\n            <>\r\n            <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_CLIENTSITENAME\" })}\r\n                name={\"sclientsitename\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_CLIENTSITENAME\" })}\r\n                value={props.selectedRecord[\"sclientsitename\"]}\r\n                isMandatory={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_CLIENTCONTACTNAME\" })}\r\n                name={\"scontactname\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_CLIENTCONTACTNAME\" })}\r\n                value={props.selectedRecord[\"scontactname\"]}\r\n                isMandatory={true}\r\n                required={true}\r\n                maxLength={\"100\"}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormTextarea\r\n                label={props.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                name={\"saddress1\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_ADDRESS1\" })}\r\n                defaultValue={props.selectedRecord[\"saddress1\"]}\r\n                rows=\"2\"\r\n                isMandatory={true}\r\n                required={true}\r\n                maxLength={255}\r\n            />\r\n        </Col>\r\n        {/* <Col md={12}>\r\n            <FormTextarea\r\n                label={props.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                name={\"saddress2\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_ADDRESS2\" })}\r\n                defaultValue={props.selectedRecord[\"saddress2\"]}\r\n                rows=\"2\"\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={255}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormTextarea\r\n                label={props.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                name={\"saddress3\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_ADDRESS3\" })}\r\n                defaultValue={props.selectedRecord[\"saddress3\"]}\r\n                rows=\"2\"\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={255}\r\n            />\r\n        </Col> */}\r\n        {/* <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                name={\"sphoneno\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_PHONENO\" })}\r\n                value={props.selectedRecord[\"sphoneno\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={50}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                name={\"smobileno\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_MOBILENO\" })}\r\n                value={props.selectedRecord[\"smobileno\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={50}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_FAXNO\" })}\r\n                name={\"sfaxno\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_FAXNO\" })}\r\n                value={props.selectedRecord[\"sfaxno\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={50}\r\n            />\r\n        </Col>\r\n        <Col md={12}>\r\n            <FormInput\r\n                label={props.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                name={\"semail\"}\r\n                type=\"text\"\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_EMAIL\" })}\r\n                value={props.selectedRecord[\"semail\"]}\r\n                isMandatory={false}\r\n                required={false}\r\n                maxLength={50}\r\n            />\r\n        </Col> */}\r\n        <Col md={12}>\r\n            <FormSelectSearch\r\n                formLabel={props.formatMessage({ id: \"IDS_COUNTRY\" })}\r\n                isSearchable={true}\r\n                name={\"ncountrycode\"}\r\n                isDisabled={false}\r\n                placeholder={props.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                options={props.countryList || []}\r\n                optionId='ncountrycode'\r\n                optionValue='scountryname'\r\n                value={props.selectedRecord ? props.selectedRecord[\"ncountrycode\"] : \"\"}\r\n                defaultValue={props.selectedRecord[\"ncountrycode\"]}\r\n                onChange={(event) => props.onComboChange(event, 'ncountrycode')}\r\n                //isMulti={false}\r\n                closeMenuOnSelect={true}\r\n                alphabeticalSort={true}\r\n            />\r\n        </Col>\r\n        </>\r\n        :\"\"}\r\n        <Col md={12}>\r\n            <CustomSwitch\r\n                label={props.formatMessage({ id: \"IDS_TRANSACTIONSTATUSACTIVE\" })}\r\n                type=\"switch\"\r\n                name={\"ntransactionstatus\"}\r\n                onChange={(event) => props.onInputOnChange(event)}\r\n                placeholder={props.formatMessage({ id: \"IDS_TRANSACTIONSTATUSACTIVE\" })}\r\n                defaultValue={props.selectedRecord[\"ntransactionstatus\"] === 1 ? true : false}\r\n                isMandatory={false}\r\n                required={false}\r\n                checked={props.selectedRecord[\"ntransactionstatus\"] === 1 ? true : false}\r\n            />\r\n        </Col>            \r\n        </Row>\r\n    )\r\n}\r\nexport default AddClient;\r\n"]},"metadata":{},"sourceType":"module"}