{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import{faGripVertical,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Button,Card,Col,Form,Row}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import{BuilderBorder,ContionalButton,DeleteRule}from'./Sqlbuilder.styled';import'../../assets/styles/querybuilder.css';import{ColumnType}from'../../components/Enumeration';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{stringOperatorData,conditionalOperatorData,numericOperatorData,joinConditionData,aggregateFunction,orderByList}from'./QueryBuilderData';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormCheckbox from'../../components/form-checkbox/form-checkbox.component';import DataGrid from'../../components/data-grid/data-grid.component';import FormMultiSelect from'../../components/form-multi-select/form-multi-select.component';var BuildQuery=function BuildQuery(props){function createOrderbyFields(){var design=[];props.addOrderbyList.map(function(items,index){design.push(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BuilderBorder,{key:index},/*#__PURE__*/React.createElement(Row,{className:\"mt-3\"},/*#__PURE__*/React.createElement(DeleteRule,{marginLeft:1,onClick:function onClick(){return props.deleteOrderby(index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,color:\"red\"})),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"columnname\",showOption:true,options:props.viewColumnListByRule||[],optionId:\"columnname\",optionValue:\"displayname\",value:props.selectedRecord[\"orderby\"]&&props.selectedRecord[\"orderby\"][index]&&props.selectedRecord[\"orderby\"][index][\"columnname\"]||\"\",onChange:function onChange(value){return props.onOrderbyChange(value,\"columnname\",index);}})),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"ordertype\",showOption:true,options:orderByList||[],optionId:\"value\",optionValue:\"label\"// isDisabled={props.selectedRecord[\"customorderby\"] && props.selectedRecord[\"customorderby\"] === true ? false : true}\n,value:props.selectedRecord[\"orderby\"]&&props.selectedRecord[\"orderby\"][index]&&props.selectedRecord[\"orderby\"][index][\"ordertype\"]||\"\",onChange:function onChange(value){return props.onOrderbyChange(value,\"ordertype\",index);}}))))));});return design;}function createAggregateFunctions(){var design=[];props.addAggregateList.map(function(items,index){design.push(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(BuilderBorder,{key:index},/*#__PURE__*/React.createElement(Row,{className:\"mt-3\"},/*#__PURE__*/React.createElement(DeleteRule,{marginLeft:1,onClick:function onClick(){return props.deleteAggregate(index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,color:\"red\"})),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"columnname\",showOption:true,options:props.viewColumnListByRule||[],optionId:\"columnname\",optionValue:\"displayname\",value:props.selectedRecord[\"aggregate\"]&&props.selectedRecord[\"aggregate\"][index]&&props.selectedRecord[\"aggregate\"][index][\"columnname\"]||\"\",onChange:function onChange(value){return props.onAggregateChange(value,\"columnname\",index);}})),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"aggfunctionname\",showOption:true,options:aggregateFunction||[],optionId:\"value\",optionValue:\"label\",value:props.selectedRecord[\"aggregate\"]&&props.selectedRecord[\"aggregate\"][index]&&props.selectedRecord[\"aggregate\"][index][\"aggfunctionname\"]||\"\",onChange:function onChange(value){return props.onAggregateChange(value,\"aggfunctionname\",index);}}))))));});return design;}// function createViewRules() {\n//     let indexCount = 0;\n//     let design = [];\n//     props.addRuleList.map((items, index) => {\n//         let stringOperators = stringOperatorData;\n//         if (props.selectedRecord[`columnname_${index}`]\n//             && !props.selectedRecord[`columnname_${index}`].items.needmasterdata\n//             && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT) {\n//             const temp = stringOperators.filter(item => {\n//                 if (item.items.symbolType !== 6) {\n//                     return item\n//                 }\n//             });\n//             stringOperators = temp;\n//         }\n//         if (items > -1) {\n//             indexCount = indexCount + 1;\n//         };\n//         design.push(\n//             <>\n//                 {items > -1 ?\n//                     <>\n//                         {indexCount !== 1 ?\n//                             <Row>\n//                                 {/* <ContionalButton type=\"button\" className=\"builder-btn-primary\" marginLeft={1} \n//                         onClick={()=>props.onConditionClick1(`button_${index}`, 'not')}>\n//                         <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\n//                     </ContionalButton> */}\n//                                 <ContionalButton type=\"button\" className={props.selectedRecord[`button_and_${index}`] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\n//                                     onClick={() => props.onConditionClick(`button_and_${index}`, index)}>\n//                                     <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\n//                                 </ContionalButton>\n//                                 <ContionalButton type=\"button\" className={props.selectedRecord[`button_or_${index}`] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\n//                                     onClick={() => props.onConditionClick(`button_or_${index}`, index)}>\n//                                     <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\n//                                 </ContionalButton>\n//                             </Row> :\n//                             <>\n//                                 {/* <ContionalButton type=\"button\" className={props.selectedRecord[`button_not_${index}`] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\n//                                     onClick={() => props.onConditionClick(`button_not_${index}`, index)}>\n//                                     <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\n//                                 </ContionalButton> */}\n//                             </>\n//                         }\n//                         <BuilderBorder key={index}>\n//                             <CustomSwitch\n//                                 label={props.intl.formatMessage({ id: \"IDS_NOT\" })}\n//                                 name={`notoperator_${index}`}\n//                                 type=\"switch\"\n//                                 isMandatory={false}\n//                                 required={false}\n//                                 checked={props.selectedRecord[`notoperator_${index}`] === undefined ? false : props.selectedRecord[`notoperator_${index}`]}\n//                                 onChange={(event) => props.onInputChange(event, 1)}\n//                             />\n//                             <Row className=\"mt-3\">\n//                                 <DeleteRule marginLeft={1} onClick={() => props.deleteRule(index)}>\n//                                     <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\n//                                 </DeleteRule>\n//                                 <Col md={4}>\n//                                     <FormSelectSearch\n//                                         formGroupClassName=\"remove-floating-label-margin\"\n//                                         isSearchable={true}\n//                                         name={`columnname_${index}`}\n//                                         showOption={true}\n//                                         options={props.viewColumnListByRule[index] || []}\n//                                         optionId='columnname'\n//                                         optionValue='displayname'\n//                                         value={props.selectedRecord[`columnname_${index}`] || \"\"}\n//                                         onChange={value => props.onRuleChange(value, `columnname_${index}`, index)}\n//                                     ></FormSelectSearch>\n//                                 </Col>\n//                                 {props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ?\n//                                     <>\n//                                         <Col md={2}>\n//                                             <FormSelectSearch\n//                                                 formGroupClassName=\"remove-floating-label-margin\"\n//                                                 formLabel=\"\"\n//                                                 isSearchable={true}\n//                                                 name={`ssymbolname_${index}`}\n//                                                 placeholder=\"\"\n//                                                 showOption={true}\n//                                                 options={stringOperators}\n//                                                 optionId='nvalidationcode'\n//                                                 optionValue='ssymbolname'\n//                                                 value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\n//                                                 onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\n//                                             >\n//                                             </FormSelectSearch>\n//                                         </Col>\n//                                         {props.selectedRecord[`ssymbolname_${index}`]\n//                                             && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible ?\n//                                             <>\n//                                                 {props.selectedRecord[`columnname_${index}`].items.needmasterdata ?\n//                                                     <Col md={4}>\n//                                                         <FormSelectSearch\n//                                                             formGroupClassName=\"remove-floating-label-margin\"\n//                                                             isSearchable={true}\n//                                                             name={`${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`}\n//                                                             showOption={true}\n//                                                             options={props.viewMasterListByRule[index] || []}\n//                                                             optionId={props.selectedRecord[`columnname_${index}`].items.valuemember}\n//                                                             optionValue={props.selectedRecord[`columnname_${index}`].items.displaymember}\n//                                                             value={props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`] || \"\"}\n//                                                             isMulti={props.selectedRecord[`ssymbolname_${index}`].items.ismulti}\n//                                                             onChange={value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`, index)}\n//                                                         ></FormSelectSearch>\n//                                                     </Col> :\n//                                                     <Col md={4}>\n//                                                         <FormInput\n//                                                             formGroupClassName=\"remove-floating-label-margin\"\n//                                                             name={`sinputname_${index}`}\n//                                                             type=\"text\"\n//                                                             onChange={(event) => props.onInputChange(event, 1)}\n//                                                             value={props.selectedRecord ? props.selectedRecord[`sinputname_${index}`] : \"\"}\n//                                                             maxLength={100}\n//                                                         />\n//                                                     </Col>\n//                                                 }\n//                                             </>\n//                                             : <></>\n//                                         }\n//                                     </> : props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ?\n//                                         <>\n//                                             <Col md={2}>\n//                                                 <FormSelectSearch\n//                                                     formGroupClassName=\"remove-floating-label-margin\"\n//                                                     formLabel=\"\"\n//                                                     isSearchable={true}\n//                                                     name={`ssymbolname_${index}`}\n//                                                     placeholder=\"\"\n//                                                     showOption={true}\n//                                                     options={numericOperatorData}\n//                                                     optionId='nvalidationcode'\n//                                                     optionValue='ssymbolname'\n//                                                     value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\n//                                                     onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\n//                                                 >\n//                                                 </FormSelectSearch>\n//                                             </Col>\n//                                             {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\n//                                                 <>\n//                                                     <Col md={2}>\n//                                                         <FormInput\n//                                                             formGroupClassName=\"remove-floating-label-margin\"\n//                                                             label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_FROM\" }) : \"\"}\n//                                                             name={`snumericinput_${index}`}\n//                                                             type=\"text\"\n//                                                             required={false}\n//                                                             isMandatory={false}\n//                                                             value={props.selectedRecord[`snumericinput_${index}`] ? props.selectedRecord[`snumericinput_${index}`] : \"\"}\n//                                                             onChange={(event) => props.onInputChange(event, 2)}\n//                                                             maxLength={10}\n//                                                         />\n//                                                     </Col>\n//                                                     {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ?\n//                                                         (\n//                                                             <Col md={2}>\n//                                                                 <FormInput\n//                                                                     formGroupClassName=\"remove-floating-label-margin\"\n//                                                                     label={props.intl.formatMessage({ id: \"IDS_TO\" })}\n//                                                                     name={`snumericinputtwo_${index}`}\n//                                                                     type=\"text\"\n//                                                                     required={false}\n//                                                                     isMandatory={false}\n//                                                                     value={props.selectedRecord[`snumericinputtwo_${index}`] ? props.selectedRecord[`snumericinputtwo_${index}`] : \"\"}\n//                                                                     onChange={(event) => props.onInputChange(event, 2)}\n//                                                                     maxLength={10}\n//                                                                 />\n//                                                             </Col>\n//                                                         ) : <></>\n//                                                     }\n//                                                 </>\n//                                                 : <></>\n//                                             }\n//                                         </> : props.selectedRecord[`columnname_${index}`]\n//                                             && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ?\n//                                             <>\n//                                                 <Col md={2}>\n//                                                     <FormSelectSearch\n//                                                         formGroupClassName=\"remove-floating-label-margin\"\n//                                                         formLabel=\"\"\n//                                                         isSearchable={true}\n//                                                         name={`ssymbolname_${index}`}\n//                                                         placeholder=\"\"\n//                                                         showOption={true}\n//                                                         options={conditionalOperatorData}\n//                                                         optionId='nvalidationcode'\n//                                                         optionValue='ssymbolname'\n//                                                         value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\n//                                                         onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\n//                                                     >\n//                                                     </FormSelectSearch>\n//                                                 </Col>\n//                                                 {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\n//                                                     <Col md={4}>\n//                                                         <FormSelectSearch\n//                                                             formGroupClassName=\"remove-floating-label-margin\"\n//                                                             formLabel=\"\"\n//                                                             isSearchable={true}\n//                                                             name={`${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`}\n//                                                             placeholder=\"\"\n//                                                             showOption={true}\n//                                                             options={props.viewMasterListByRule && props.viewMasterListByRule[index] || []}\n//                                                             optionId={props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}\n//                                                             optionValue='sdisplayname'\n//                                                             value={props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`] || \"\"}\n//                                                             onChange={value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`, index)}\n//                                                             isMulti={props.selectedRecord[`ssymbolname_${index}`].items.ismulti}\n//                                                         >\n//                                                         </FormSelectSearch>\n//                                                     </Col> : <></>\n//                                                 }\n//                                             </> : props.selectedRecord[`columnname_${index}`]\n//                                                 && (props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME\n//                                                     || props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATE) ?\n//                                                 <>\n//                                                     <Col md={2}>\n//                                                         <FormSelectSearch\n//                                                             formGroupClassName=\"remove-floating-label-margin\"\n//                                                             formLabel=\"\"\n//                                                             isSearchable={true}\n//                                                             name={`ssymbolname_${index}`}\n//                                                             placeholder=\"\"\n//                                                             showOption={true}\n//                                                             options={numericOperatorData}\n//                                                             optionId='nvalidationcode'\n//                                                             optionValue='ssymbolname'\n//                                                             value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\n//                                                             onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\n//                                                         >\n//                                                         </FormSelectSearch>\n//                                                     </Col>\n//                                                     {props.selectedRecord[`ssymbolname_${index}`]\n//                                                         && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\n//                                                         <>\n//                                                             <Col md={2}>\n//                                                                 <DateTimePicker\n//                                                                     formGroupClassName=\"remove-floating-label-margin\"\n//                                                                     label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_FROM\" }) : \"\"}\n//                                                                     name={`dateinput_${index}`}\n//                                                                     className='form-control'\n//                                                                     placeholderText=\"Select date..\"\n//                                                                     selected={props.selectedRecord[`dateinput_${index}`]}\n//                                                                     // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\n//                                                                     // dateFormat={\"dd-MM-yyyy\"}\n//                                                                     isClearable={false}\n//                                                                     showTimeInput={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? true : false}\n//                                                                     onChange={date => props.handleFilterDateChange(`dateinput_${index}`, date)}\n//                                                                     value={props.selectedRecord[`dateinput_${index}`] || \"\"}\n//                                                                 />\n//                                                             </Col>\n//                                                             {props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ?\n//                                                                 (\n//                                                                     <Col md={2}>\n//                                                                         <DateTimePicker\n//                                                                             formGroupClassName=\"remove-floating-label-margin\"\n//                                                                             label={props.intl.formatMessage({ id: \"IDS_TO\" })}\n//                                                                             name={`dateinputtwo_${index}`}\n//                                                                             className='form-control'\n//                                                                             placeholderText=\"Select date..\"\n//                                                                             selected={props.selectedRecord[`dateinputtwo_${index}`]}\n//                                                                             // dateFormat={\"dd-MM-yyyy\"}\n//                                                                             // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\n//                                                                             isClearable={false}\n//                                                                             showTimeInput={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? true : false}\n//                                                                             onChange={date => props.handleFilterDateChange(`dateinputtwo_${index}`, date)}\n//                                                                             value={props.selectedRecord[`dateinputtwo_${index}`] || \"\"}\n//                                                                         />\n//                                                                     </Col>\n//                                                                 ) : <></>\n//                                                             }\n//                                                         </>\n//                                                         : <></>\n//                                                     }\n//                                                 </>\n//                                                 : <></>\n//                                 }\n//                             </Row>\n//                         </BuilderBorder>\n//                     </> : <></>\n//                 }\n//             </>)\n//     });\n//     return design;\n// }\nfunction createSqlRules(){var indexCount=0;var design=[];props.addRuleList.map(function(items,index){var stringOperators=props.selectedRecord[\"columnname_\".concat(index)].items&&props.selectedRecord[\"columnname_\".concat(index)].items.needmasterdata?stringOperatorData:stringOperatorData.map(function(item){return item.symbolType!==6;});if(items>-1){indexCount=indexCount+1;};design.push(/*#__PURE__*/React.createElement(React.Fragment,null,items>-1?/*#__PURE__*/React.createElement(React.Fragment,null,indexCount!==1?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"button_and_\".concat(index)]===true?\"builder-btn-primary\":\"\",marginLeft:1,onClick:function onClick(){return props.onConditionClick(\"button_and_\".concat(index),index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"button_or_\".concat(index)]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_or_\".concat(index),index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))))):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(BuilderBorder,{key:index},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(DeleteRule,{marginLeft:1,onClick:function onClick(){return props.deleteRule(index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,color:\"red\"})),/*#__PURE__*/React.createElement(Col,{md:2,key:\"tablekey_\".concat(index)},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\"// formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n,isSearchable:true,name:\"stablename_\".concat(index)// placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\n,showOption:true,options:props.databaseTableList,optionId:\"stablename\",optionValue:\"displayname\",value:props.selectedRecord[\"stablename_\".concat(index)]||\"\",onChange:function onChange(value){return props.onTableChange(value,\"stablename_\".concat(index),index);}})),/*#__PURE__*/React.createElement(Col,{md:2,key:\"columnkey_\".concat(index)},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\"// formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n,isSearchable:true,name:\"columnname_\".concat(index)// placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n,showOption:true,options:props.tableColumnList[index]||[],optionId:\"columnname\",optionValue:\"displayname\",value:props.selectedRecord[\"columnname_\".concat(index)]||\"\"// onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\n,onChange:function onChange(value){return props.onRuleChange(value,\"columnname_\".concat(index),index);}})),props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.COMBO?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:joinConditionData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)],onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),/*#__PURE__*/React.createElement(Col,{md:2,key:\"foreigncolumnkey_\".concat(index)},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\"// formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n,isSearchable:true,name:\"foreigncolumnname_\".concat(index)// placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\n,showOption:true,options:props.foreignTableColumnList[index]||[],optionId:\"columnname\",optionValue:\"displayname\",value:props.selectedRecord[\"foreigncolumnname_\".concat(index)]||\"\"// onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\n,onChange:function onChange(value){return props.onRuleChange(value,\"foreigncolumnname_\".concat(index),index);}}))):/*#__PURE__*/React.createElement(React.Fragment,null),props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.TEXTINPUT?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:stringOperators,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),props.selectedRecord[\"ssymbolname_\".concat(index)]&&props.selectedRecord[\"ssymbolname_\".concat(index)].items.isInputVisible===true?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",name:\"sinputname_\".concat(index)// label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n,type:\"text\",onChange:function onChange(event){return props.onInputChange(event,1);}// placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\n,value:props.selectedRecord?props.selectedRecord[\"sinputname_\".concat(index)]:\"\",maxLength:100})):/*#__PURE__*/React.createElement(React.Fragment,null)):props.selectedRecord[\"columnname_\".concat(index)]&&props.selectedRecord[\"columnname_\".concat(index)].items.columntype===ColumnType.NUMERICINPUT?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname_\".concat(index),placeholder:\"\",showOption:true,options:numericOperatorData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"ssymbolname_\".concat(index)]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname_\".concat(index),index);}})),props.selectedRecord[\"ssymbolname_\".concat(index)]?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{name:\"snumericinput_\".concat(index),label:props.selectedRecord[\"ssymbolname_\".concat(index)].items.symbolType===5?props.intl.formatMessage({id:\"IDS_TO\"}):\"\",type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"snumericinput_\".concat(index)]?props.selectedRecord[\"snumericinput_\".concat(index)]:\"\",onChange:function onChange(event){return props.onInputChange(event,2);},maxLength:10})):props.selectedRecord[\"ssymbolname_\".concat(index)].items.symbolType===5?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_TO\"}),name:\"snumericinputtwo_\".concat(index),type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"snumericinputtwo_\".concat(index)]?props.selectedRecord[\"snumericinputtwo_\".concat(index)]:\"\",onChange:function onChange(event){return props.onInputChange(event,2);},maxLength:10})):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null)))):/*#__PURE__*/React.createElement(React.Fragment,null)));});return design;}function createRules(items,groupIndex){var design=[];_toConsumableArray(Array(items)).map(function(data,index){var stringOperators=stringOperatorData;design.push(/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"mt-3\"},/*#__PURE__*/React.createElement(DeleteRule,{marginLeft:1,onClick:function onClick(){return props.deleteRule(groupIndex,index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,color:\"red\"})),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"columnname\",showOption:true,options:props.viewColumnListByRule||[],optionId:\"columnname\",optionValue:\"displayname\",value:props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"]||\"\",onChange:function onChange(value){return props.onRuleChange(value,\"columnname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype===ColumnType.TEXTINPUT?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname\",placeholder:\"\",showOption:true,options:stringOperators,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.isInputVisible?/*#__PURE__*/React.createElement(React.Fragment,null,props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.needmasterdata?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",isSearchable:true,name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember),showOption:true,options:props.viewMasterListByRule[groupIndex][index]||[],optionId:props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember,optionValue:props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.displaymember,value:props.selectedRecord[\"groupList\"][groupIndex][index][\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember)]||\"\",isMulti:props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.ismulti,onChange:function onChange(value){return props.onMasterDataChange(value,\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember),groupIndex,index);}})):/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",name:\"sinputname\",type:\"text\",onChange:function onChange(event){return props.onInputChange(event,3,groupIndex,index);},value:props.selectedRecord?props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"][\"sinputname\"]:\"\",maxLength:100}))):/*#__PURE__*/React.createElement(React.Fragment,null)):props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype===ColumnType.NUMERICINPUT?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname\",placeholder:\"\",showOption:true,options:numericOperatorData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.isInputVisible===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",label:props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.symbolType===5?props.intl.formatMessage({id:\"IDS_FROM\"}):\"\",name:\"snumericinput\",type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"groupList\"][groupIndex][index][\"snumericinput\"]?props.selectedRecord[\"groupList\"][groupIndex][index][\"snumericinput\"]:\"\",onChange:function onChange(event){return props.onInputChange(event,2,groupIndex,index);},maxLength:10})),props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.symbolType===5?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",label:props.intl.formatMessage({id:\"IDS_TO\"}),name:\"snumericinputtwo\",type:\"text\",required:false,isMandatory:false,value:props.selectedRecord[\"groupList\"][groupIndex][index][\"snumericinputtwo\"]?props.selectedRecord[\"groupList\"][groupIndex][index][\"snumericinputtwo\"]:\"\",onChange:function onChange(event){return props.onInputChange(event,2,groupIndex,index);},maxLength:10})):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null)):props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype===ColumnType.COMBO?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname\",placeholder:\"\",showOption:true,options:conditionalOperatorData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.isInputVisible===true?/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.sforeigncolumnname),placeholder:\"\",showOption:true,options:props.viewMasterListByRule&&props.viewMasterListByRule[groupIndex][index]||[],optionId:props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.sforeigncolumnname,optionValue:\"sdisplayname\",value:props.selectedRecord[\"groupList\"][groupIndex][index][\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.sforeigncolumnname)]||\"\",onChange:function onChange(value){return props.onMasterDataChange(value,\"\".concat(props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.sforeigncolumnname),groupIndex,index);},isMulti:props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.ismulti})):/*#__PURE__*/React.createElement(React.Fragment,null)):props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"]&&(props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype===ColumnType.DATATIME||props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype===ColumnType.DATE)?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:\"\",isSearchable:true,name:\"ssymbolname\",placeholder:\"\",showOption:true,options:numericOperatorData,optionId:\"nvalidationcode\",optionValue:\"ssymbolname\",value:props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]||\"\",onChange:function onChange(value){return props.onSymbolChange(value,\"ssymbolname\",groupIndex,index);}})),props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]&&props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.isInputVisible===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{formGroupClassName:\"remove-floating-label-margin\",label:props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.symbolType===5?props.intl.formatMessage({id:\"IDS_FROM\"}):\"\",name:\"dateinput\",className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"groupList\"][groupIndex][index][\"dateinput\"]// dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\n// dateFormat={\"dd-MM-yyyy\"}\n,isClearable:false,showTimeInput:props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype===ColumnType.DATATIME?true:false,onChange:function onChange(date){return props.handleFilterDateChange(\"dateinput\",date,groupIndex,index);},value:props.selectedRecord[\"groupList\"][groupIndex][index][\"dateinput\"]||\"\"})),props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.symbolType===5?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(DateTimePicker,{formGroupClassName:\"remove-floating-label-margin\",label:props.intl.formatMessage({id:\"IDS_TO\"}),name:\"dateinputtwo\",className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord[\"groupList\"][groupIndex][index][\"dateinputtwo\"]// dateFormat={\"dd-MM-yyyy\"}\n// dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\n,isClearable:false,showTimeInput:props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype===ColumnType.DATATIME?true:false,onChange:function onChange(date){return props.handleFilterDateChange(\"dateinputtwo\",date,groupIndex,index);},value:props.selectedRecord[\"groupList\"][groupIndex][index][\"dateinputtwo\"]||\"\"})):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null))));});return design;}function createGroupRules(){var indexCount=0;var design=[];props.addGroupList.length>0&&props.addGroupList.map(function(items,index){var stringOperators=stringOperatorData;if(props.selectedRecord[\"groupList\"]&&props.selectedRecord[\"groupList\"][index][\"columnname\"]&&!props.selectedRecord[\"groupList\"][index][\"columnname\"].items.needmasterdata&&props.selectedRecord[\"groupList\"][index][\"columnname\"].items.columntype===ColumnType.TEXTINPUT){var temp=stringOperators.filter(function(item){if(item.items.symbolType!==6){return item;}});stringOperators=temp;}if(items>-1){indexCount=indexCount+1;};design.push(/*#__PURE__*/React.createElement(React.Fragment,null,items>-1?/*#__PURE__*/React.createElement(React.Fragment,null,items>1?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_and\"]===true?\"builder-btn-primary\":\"\",marginLeft:1,onClick:function onClick(){return props.onConditionClick(\"button_and\",index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_AND\",defaultMessage:\"And\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_or\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_or\",index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_OR\",defaultMessage:\"Or\"}))),/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_not\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_not\",index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_NOT\",defaultMessage:\"NOT\"})))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(ContionalButton,{type:\"button\",className:props.selectedRecord[\"groupList\"][index][\"button_not\"]===true?\"builder-btn-primary\":\"\",marginLeft:0,onClick:function onClick(){return props.onConditionClick(\"button_not\",index);}},/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_NOT\",defaultMessage:\"NOT\"}))))),/*#__PURE__*/React.createElement(BuilderBorder,{key:index},/*#__PURE__*/React.createElement(Row,{className:\"mt-3\"},/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addRule(\"views\",index);},className:\"mr-1\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDRULE\",defaultMessage:\"Add Rule\"})))),/*#__PURE__*/React.createElement(React.Fragment,null,createRules(items,index)))):/*#__PURE__*/React.createElement(React.Fragment,null)));});return design;}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormInput,{formGroupClassName:\"remove-floating-label-margin\",label:\"Query Builder Name\",name:\"querybuildername\",type:\"text\",required:false,isMandatory:true,value:props.selectedRecord[\"querybuildername\"]||\"\",onChange:function onChange(event){return props.onInputChange(event);}})),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.resetRule();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_RESET\",defaultMessage:\"Reset\"}))),/*#__PURE__*/React.createElement(Col,{md:4},props.sqlQuery?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addRule(\"sql\");},className:\"mr-1\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDRULE\",defaultMessage:\"Add Rule\"})),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.onGenerateQuery();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_GENERATEQUERY\",defaultMessage:\"Generate Query\"}))):/*#__PURE__*/React.createElement(React.Fragment,null))),props.sqlQuery===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"mt-3\"},/*#__PURE__*/React.createElement(Col,{md:12},props.addRuleList.length>0?createSqlRules():/*#__PURE__*/React.createElement(React.Fragment,null)),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,props.intl.formatMessage({id:\"IDS_QUERY\"}),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.onExecuteRule();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EXECUTE\",defaultMessage:\"Execute\"}))),/*#__PURE__*/React.createElement(Card.Body,null,props.selectedRecord&&props.selectedRecord[\"sdisplayquery\"]?props.selectedRecord[\"sdisplayquery\"]:\"No Query\"))))):/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{className:\"mt-4 mb-4\"},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:props.intl.formatMessage({id:\"IDS_VIEWS\"}),isSearchable:true,name:\"sviewname\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTVIEWS\"}),showOption:true,options:props.databaseviewList||[],optionId:\"sviewname\",optionValue:\"displayname\",value:props.selectedRecord[\"sviewname\"]||\"\",onChange:function onChange(value){return props.onViewComboChange(value,\"sviewname\");}})),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.addGroup(\"views\");},className:\"mr-1\"},'+',\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADDGROUP\",defaultMessage:\"Add Group\"}))),/*#__PURE__*/React.createElement(Col,{md:2}),/*#__PURE__*/React.createElement(Col,{md:2})),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},props.addGroupList.length>0?createGroupRules():/*#__PURE__*/React.createElement(React.Fragment,null),props.addAggregateList.length>0?createAggregateFunctions():/*#__PURE__*/React.createElement(React.Fragment,null),props.addOrderbyList.length>0?createOrderbyFields():/*#__PURE__*/React.createElement(React.Fragment,null)),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,props.intl.formatMessage({id:\"IDS_QUERY\"}),/*#__PURE__*/React.createElement(\"div\",{className:\"float-right\"},/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.copySQLQuery(2);},style:{marginRight:\"0.5rem\"}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COPYSQL\",defaultMessage:\"Copy SQL\"})),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return props.onExecuteRule();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_EXECUTE\",defaultMessage:\"Execute\"})))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormMultiSelect,{name:\"filtercolumns\",label:props.intl.formatMessage({id:\"IDS_COLUMNS\"}),options:props.selectFields||[],optionId:\"value\",optionValue:\"label\",value:props.selectedRecord?props.selectedRecord[\"filtercolumns\"]||[]:[],isMandatory:false,isClearable:true,disableSearch:false,disabled:false,closeMenuOnSelect:false,alphabeticalSort:true,onChange:function onChange(event){return props.onFilterComboChange(event,\"filtercolumns\");}}))),props.selectedRecord&&props.selectedRecord[\"sdisplayquery\"]?props.selectedRecord[\"sdisplayquery\"]:\"No Query\")),props.data&&props.gridColumnList&&props.gridColumnList.length>0?/*#__PURE__*/React.createElement(DataGrid// primaryKeyField={\"npublicholidaycode\"}\n,{data:props.data,dataResult:props.dataResult,dataState:props.dataState,dataStateChange:props.dataStateChange,extractedColumnList:props.gridColumnList,controlMap:props.controlMap,userRoleControlRights:props.userRoleControlRights// inputParam={props.inputParam}\n,userInfo:props.userInfo// methodUrl=\"PublicHolidays\"\n// fetchRecord={props.getPublicHolidays}\n// editParam={publicHolidaysEditParam}\n// deleteRecord={props.deleteRecord}\n// deleteParam={publicHolidaysDeleteParam}\n,pageable:true,scrollable:\"scrollable\"// isComponent={true}\n,isActionRequired:false,isToolBarRequired:true,isRefreshRequired:false,selectedId:-1}):/*#__PURE__*/React.createElement(React.Fragment,null)))));};export default injectIntl(BuildQuery);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboard/BuildQuery.js"],"names":["faGripVertical","faTrashAlt","FontAwesomeIcon","React","Button","Card","Col","Form","Row","FormattedMessage","injectIntl","FormSelectSearch","FormInput","BuilderBorder","ContionalButton","DeleteRule","ColumnType","FormTextarea","stringOperatorData","conditionalOperatorData","numericOperatorData","joinConditionData","aggregateFunction","orderByList","CustomSwitch","DateTimePicker","FormCheckbox","DataGrid","FormMultiSelect","BuildQuery","props","createOrderbyFields","design","addOrderbyList","map","items","index","push","deleteOrderby","viewColumnListByRule","selectedRecord","value","onOrderbyChange","createAggregateFunctions","addAggregateList","deleteAggregate","onAggregateChange","createSqlRules","indexCount","addRuleList","stringOperators","needmasterdata","item","symbolType","onConditionClick","deleteRule","databaseTableList","onTableChange","tableColumnList","onRuleChange","columntype","COMBO","onSymbolChange","foreignTableColumnList","TEXTINPUT","isInputVisible","event","onInputChange","NUMERICINPUT","intl","formatMessage","id","createRules","groupIndex","Array","data","valuemember","viewMasterListByRule","displaymember","ismulti","onMasterDataChange","sforeigncolumnname","DATATIME","DATE","date","handleFilterDateChange","createGroupRules","addGroupList","length","temp","filter","addRule","resetRule","sqlQuery","onGenerateQuery","onExecuteRule","databaseviewList","onViewComboChange","addGroup","copySQLQuery","marginRight","selectFields","onFilterComboChange","gridColumnList","dataResult","dataState","dataStateChange","controlMap","userRoleControlRights","userInfo"],"mappings":"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B,iBAAN,CAAwBL,KAAxB,CAA+B,iBAA/B,CAAkDL,KAAlD,CAAJ,EATnB,EADJ,CAlBJ,CADJ,CAFJ,CADJ,EAwCH,CAzCD,EA0CA,MAAOJ,CAAAA,MAAP,CACH,CACD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;A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","sourcesContent":["import { faGripVertical, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { BuilderBorder, ContionalButton, DeleteRule } from './Sqlbuilder.styled';\r\nimport '../../assets/styles/querybuilder.css';\r\nimport { ColumnType } from '../../components/Enumeration';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { stringOperatorData, conditionalOperatorData, numericOperatorData, joinConditionData, aggregateFunction, orderByList } from './QueryBuilderData';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormCheckbox from '../../components/form-checkbox/form-checkbox.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\n\r\n\r\nconst BuildQuery = (props) => {\r\n\r\n    function createOrderbyFields() {\r\n        let design = [];\r\n        props.addOrderbyList.map((items, index) => {\r\n            design.push(\r\n                <>\r\n\r\n                    <BuilderBorder key={index}>\r\n                        <Row className=\"mt-3\">\r\n\r\n                            <DeleteRule marginLeft={1} onClick={() => props.deleteOrderby(index)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                            </DeleteRule>\r\n                            <Col md={4}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    isSearchable={true}\r\n                                    name={`columnname`}\r\n                                    showOption={true}\r\n                                    options={props.viewColumnListByRule || []}\r\n                                    optionId='columnname'\r\n                                    optionValue='displayname'\r\n                                    value={props.selectedRecord[\"orderby\"] && props.selectedRecord[\"orderby\"][index] && props.selectedRecord[\"orderby\"][index][`columnname`] || \"\"}\r\n                                    onChange={value => props.onOrderbyChange(value, \"columnname\", index)}\r\n                                ></FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    isSearchable={true}\r\n                                    name={\"ordertype\"}\r\n                                    showOption={true}\r\n                                    options={orderByList || []}\r\n                                    optionId='value'\r\n                                    optionValue='label'\r\n                                    // isDisabled={props.selectedRecord[\"customorderby\"] && props.selectedRecord[\"customorderby\"] === true ? false : true}\r\n                                    value={props.selectedRecord[\"orderby\"] && props.selectedRecord[\"orderby\"][index] && props.selectedRecord[\"orderby\"][index][\"ordertype\"] || \"\"}\r\n                                    onChange={value => props.onOrderbyChange(value, \"ordertype\", index)}\r\n                                ></FormSelectSearch>\r\n                            </Col>\r\n                        </Row>\r\n                    </BuilderBorder>\r\n\r\n                </>)\r\n\r\n        })\r\n        return design;\r\n    }\r\n    function createAggregateFunctions() {\r\n        let design = [];\r\n        props.addAggregateList.map((items, index) => {\r\n            design.push(\r\n                <>\r\n\r\n                    <BuilderBorder key={index}>\r\n                        <Row className=\"mt-3\">\r\n\r\n                            <DeleteRule marginLeft={1} onClick={() => props.deleteAggregate(index)}>\r\n                                <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                            </DeleteRule>\r\n                            <Col md={4}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    isSearchable={true}\r\n                                    name={`columnname`}\r\n                                    showOption={true}\r\n                                    options={props.viewColumnListByRule || []}\r\n                                    optionId='columnname'\r\n                                    optionValue='displayname'\r\n                                    value={props.selectedRecord[\"aggregate\"] && props.selectedRecord[\"aggregate\"][index] && props.selectedRecord[\"aggregate\"][index][`columnname`] || \"\"}\r\n                                    onChange={value => props.onAggregateChange(value, \"columnname\", index)}\r\n                                ></FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={4}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    isSearchable={true}\r\n                                    name={\"aggfunctionname\"}\r\n                                    showOption={true}\r\n                                    options={aggregateFunction || []}\r\n                                    optionId='value'\r\n                                    optionValue='label'\r\n                                    value={props.selectedRecord[\"aggregate\"] && props.selectedRecord[\"aggregate\"][index] && props.selectedRecord[\"aggregate\"][index][\"aggfunctionname\"] || \"\"}\r\n                                    onChange={value => props.onAggregateChange(value, \"aggfunctionname\", index)}\r\n                                ></FormSelectSearch>\r\n                            </Col>\r\n                        </Row>\r\n                    </BuilderBorder>\r\n\r\n                </>)\r\n\r\n        })\r\n        return design;\r\n    }\r\n    // function createViewRules() {\r\n    //     let indexCount = 0;\r\n    //     let design = [];\r\n    //     props.addRuleList.map((items, index) => {\r\n\r\n    //         let stringOperators = stringOperatorData;\r\n    //         if (props.selectedRecord[`columnname_${index}`]\r\n    //             && !props.selectedRecord[`columnname_${index}`].items.needmasterdata\r\n    //             && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT) {\r\n    //             const temp = stringOperators.filter(item => {\r\n    //                 if (item.items.symbolType !== 6) {\r\n    //                     return item\r\n    //                 }\r\n    //             });\r\n    //             stringOperators = temp;\r\n    //         }\r\n\r\n    //         if (items > -1) {\r\n    //             indexCount = indexCount + 1;\r\n    //         };\r\n    //         design.push(\r\n    //             <>\r\n    //                 {items > -1 ?\r\n    //                     <>\r\n    //                         {indexCount !== 1 ?\r\n    //                             <Row>\r\n    //                                 {/* <ContionalButton type=\"button\" className=\"builder-btn-primary\" marginLeft={1} \r\n    //                         onClick={()=>props.onConditionClick1(`button_${index}`, 'not')}>\r\n    //                         <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\r\n    //                     </ContionalButton> */}\r\n    //                                 <ContionalButton type=\"button\" className={props.selectedRecord[`button_and_${index}`] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n    //                                     onClick={() => props.onConditionClick(`button_and_${index}`, index)}>\r\n    //                                     <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n    //                                 </ContionalButton>\r\n    //                                 <ContionalButton type=\"button\" className={props.selectedRecord[`button_or_${index}`] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n    //                                     onClick={() => props.onConditionClick(`button_or_${index}`, index)}>\r\n    //                                     <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n    //                                 </ContionalButton>\r\n    //                             </Row> :\r\n    //                             <>\r\n    //                                 {/* <ContionalButton type=\"button\" className={props.selectedRecord[`button_not_${index}`] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n    //                                     onClick={() => props.onConditionClick(`button_not_${index}`, index)}>\r\n    //                                     <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\r\n    //                                 </ContionalButton> */}\r\n\r\n\r\n    //                             </>\r\n    //                         }\r\n    //                         <BuilderBorder key={index}>\r\n    //                             <CustomSwitch\r\n    //                                 label={props.intl.formatMessage({ id: \"IDS_NOT\" })}\r\n    //                                 name={`notoperator_${index}`}\r\n    //                                 type=\"switch\"\r\n    //                                 isMandatory={false}\r\n    //                                 required={false}\r\n    //                                 checked={props.selectedRecord[`notoperator_${index}`] === undefined ? false : props.selectedRecord[`notoperator_${index}`]}\r\n    //                                 onChange={(event) => props.onInputChange(event, 1)}\r\n    //                             />\r\n    //                             <Row className=\"mt-3\">\r\n\r\n    //                                 <DeleteRule marginLeft={1} onClick={() => props.deleteRule(index)}>\r\n    //                                     <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n    //                                 </DeleteRule>\r\n    //                                 <Col md={4}>\r\n    //                                     <FormSelectSearch\r\n    //                                         formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                         isSearchable={true}\r\n    //                                         name={`columnname_${index}`}\r\n    //                                         showOption={true}\r\n    //                                         options={props.viewColumnListByRule[index] || []}\r\n    //                                         optionId='columnname'\r\n    //                                         optionValue='displayname'\r\n    //                                         value={props.selectedRecord[`columnname_${index}`] || \"\"}\r\n    //                                         onChange={value => props.onRuleChange(value, `columnname_${index}`, index)}\r\n    //                                     ></FormSelectSearch>\r\n    //                                 </Col>\r\n    //                                 {props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ?\r\n    //                                     <>\r\n    //                                         <Col md={2}>\r\n    //                                             <FormSelectSearch\r\n    //                                                 formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                 formLabel=\"\"\r\n    //                                                 isSearchable={true}\r\n    //                                                 name={`ssymbolname_${index}`}\r\n    //                                                 placeholder=\"\"\r\n    //                                                 showOption={true}\r\n    //                                                 options={stringOperators}\r\n    //                                                 optionId='nvalidationcode'\r\n    //                                                 optionValue='ssymbolname'\r\n    //                                                 value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n    //                                                 onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n    //                                             >\r\n    //                                             </FormSelectSearch>\r\n    //                                         </Col>\r\n    //                                         {props.selectedRecord[`ssymbolname_${index}`]\r\n    //                                             && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible ?\r\n    //                                             <>\r\n    //                                                 {props.selectedRecord[`columnname_${index}`].items.needmasterdata ?\r\n\r\n    //                                                     <Col md={4}>\r\n    //                                                         <FormSelectSearch\r\n    //                                                             formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                             isSearchable={true}\r\n    //                                                             name={`${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`}\r\n    //                                                             showOption={true}\r\n    //                                                             options={props.viewMasterListByRule[index] || []}\r\n    //                                                             optionId={props.selectedRecord[`columnname_${index}`].items.valuemember}\r\n    //                                                             optionValue={props.selectedRecord[`columnname_${index}`].items.displaymember}\r\n    //                                                             value={props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`] || \"\"}\r\n    //                                                             isMulti={props.selectedRecord[`ssymbolname_${index}`].items.ismulti}\r\n    //                                                             onChange={value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.valuemember}_${index}`, index)}\r\n    //                                                         ></FormSelectSearch>\r\n    //                                                     </Col> :\r\n    //                                                     <Col md={4}>\r\n    //                                                         <FormInput\r\n    //                                                             formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                             name={`sinputname_${index}`}\r\n    //                                                             type=\"text\"\r\n    //                                                             onChange={(event) => props.onInputChange(event, 1)}\r\n    //                                                             value={props.selectedRecord ? props.selectedRecord[`sinputname_${index}`] : \"\"}\r\n    //                                                             maxLength={100}\r\n    //                                                         />\r\n    //                                                     </Col>\r\n\r\n    //                                                 }\r\n    //                                             </>\r\n    //                                             : <></>\r\n    //                                         }\r\n\r\n    //                                     </> : props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ?\r\n    //                                         <>\r\n    //                                             <Col md={2}>\r\n    //                                                 <FormSelectSearch\r\n    //                                                     formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                     formLabel=\"\"\r\n    //                                                     isSearchable={true}\r\n    //                                                     name={`ssymbolname_${index}`}\r\n    //                                                     placeholder=\"\"\r\n    //                                                     showOption={true}\r\n    //                                                     options={numericOperatorData}\r\n    //                                                     optionId='nvalidationcode'\r\n    //                                                     optionValue='ssymbolname'\r\n    //                                                     value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n    //                                                     onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n    //                                                 >\r\n    //                                                 </FormSelectSearch>\r\n    //                                             </Col>\r\n    //                                             {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\r\n    //                                                 <>\r\n    //                                                     <Col md={2}>\r\n    //                                                         <FormInput\r\n    //                                                             formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                             label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_FROM\" }) : \"\"}\r\n    //                                                             name={`snumericinput_${index}`}\r\n    //                                                             type=\"text\"\r\n    //                                                             required={false}\r\n    //                                                             isMandatory={false}\r\n    //                                                             value={props.selectedRecord[`snumericinput_${index}`] ? props.selectedRecord[`snumericinput_${index}`] : \"\"}\r\n    //                                                             onChange={(event) => props.onInputChange(event, 2)}\r\n    //                                                             maxLength={10}\r\n    //                                                         />\r\n    //                                                     </Col>\r\n    //                                                     {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ?\r\n    //                                                         (\r\n    //                                                             <Col md={2}>\r\n    //                                                                 <FormInput\r\n    //                                                                     formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                                     label={props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n    //                                                                     name={`snumericinputtwo_${index}`}\r\n    //                                                                     type=\"text\"\r\n    //                                                                     required={false}\r\n    //                                                                     isMandatory={false}\r\n    //                                                                     value={props.selectedRecord[`snumericinputtwo_${index}`] ? props.selectedRecord[`snumericinputtwo_${index}`] : \"\"}\r\n    //                                                                     onChange={(event) => props.onInputChange(event, 2)}\r\n    //                                                                     maxLength={10}\r\n    //                                                                 />\r\n    //                                                             </Col>\r\n    //                                                         ) : <></>\r\n\r\n    //                                                     }\r\n    //                                                 </>\r\n    //                                                 : <></>\r\n    //                                             }\r\n\r\n    //                                         </> : props.selectedRecord[`columnname_${index}`]\r\n    //                                             && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ?\r\n    //                                             <>\r\n    //                                                 <Col md={2}>\r\n    //                                                     <FormSelectSearch\r\n    //                                                         formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                         formLabel=\"\"\r\n    //                                                         isSearchable={true}\r\n    //                                                         name={`ssymbolname_${index}`}\r\n    //                                                         placeholder=\"\"\r\n    //                                                         showOption={true}\r\n    //                                                         options={conditionalOperatorData}\r\n    //                                                         optionId='nvalidationcode'\r\n    //                                                         optionValue='ssymbolname'\r\n    //                                                         value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n    //                                                         onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n    //                                                     >\r\n    //                                                     </FormSelectSearch>\r\n    //                                                 </Col>\r\n    //                                                 {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\r\n    //                                                     <Col md={4}>\r\n    //                                                         <FormSelectSearch\r\n    //                                                             formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                             formLabel=\"\"\r\n    //                                                             isSearchable={true}\r\n    //                                                             name={`${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`}\r\n    //                                                             placeholder=\"\"\r\n    //                                                             showOption={true}\r\n    //                                                             options={props.viewMasterListByRule && props.viewMasterListByRule[index] || []}\r\n    //                                                             optionId={props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}\r\n    //                                                             optionValue='sdisplayname'\r\n    //                                                             value={props.selectedRecord[`${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`] || \"\"}\r\n    //                                                             onChange={value => props.onMasterDataChange(value, `${props.selectedRecord[`columnname_${index}`].items.sforeigncolumnname}_${index}`, index)}\r\n    //                                                             isMulti={props.selectedRecord[`ssymbolname_${index}`].items.ismulti}\r\n    //                                                         >\r\n    //                                                         </FormSelectSearch>\r\n    //                                                     </Col> : <></>\r\n    //                                                 }\r\n    //                                             </> : props.selectedRecord[`columnname_${index}`]\r\n    //                                                 && (props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME\r\n    //                                                     || props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATE) ?\r\n    //                                                 <>\r\n    //                                                     <Col md={2}>\r\n    //                                                         <FormSelectSearch\r\n    //                                                             formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                             formLabel=\"\"\r\n    //                                                             isSearchable={true}\r\n    //                                                             name={`ssymbolname_${index}`}\r\n    //                                                             placeholder=\"\"\r\n    //                                                             showOption={true}\r\n    //                                                             options={numericOperatorData}\r\n    //                                                             optionId='nvalidationcode'\r\n    //                                                             optionValue='ssymbolname'\r\n    //                                                             value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n    //                                                             onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n    //                                                         >\r\n    //                                                         </FormSelectSearch>\r\n    //                                                     </Col>\r\n    //                                                     {props.selectedRecord[`ssymbolname_${index}`]\r\n    //                                                         && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\r\n    //                                                         <>\r\n    //                                                             <Col md={2}>\r\n    //                                                                 <DateTimePicker\r\n    //                                                                     formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                                     label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_FROM\" }) : \"\"}\r\n    //                                                                     name={`dateinput_${index}`}\r\n    //                                                                     className='form-control'\r\n    //                                                                     placeholderText=\"Select date..\"\r\n    //                                                                     selected={props.selectedRecord[`dateinput_${index}`]}\r\n    //                                                                     // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\r\n    //                                                                     // dateFormat={\"dd-MM-yyyy\"}\r\n    //                                                                     isClearable={false}\r\n    //                                                                     showTimeInput={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? true : false}\r\n    //                                                                     onChange={date => props.handleFilterDateChange(`dateinput_${index}`, date)}\r\n    //                                                                     value={props.selectedRecord[`dateinput_${index}`] || \"\"}\r\n    //                                                                 />\r\n    //                                                             </Col>\r\n    //                                                             {props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ?\r\n    //                                                                 (\r\n    //                                                                     <Col md={2}>\r\n    //                                                                         <DateTimePicker\r\n    //                                                                             formGroupClassName=\"remove-floating-label-margin\"\r\n    //                                                                             label={props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n    //                                                                             name={`dateinputtwo_${index}`}\r\n    //                                                                             className='form-control'\r\n    //                                                                             placeholderText=\"Select date..\"\r\n    //                                                                             selected={props.selectedRecord[`dateinputtwo_${index}`]}\r\n    //                                                                             // dateFormat={\"dd-MM-yyyy\"}\r\n    //                                                                             // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\r\n    //                                                                             isClearable={false}\r\n    //                                                                             showTimeInput={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? true : false}\r\n    //                                                                             onChange={date => props.handleFilterDateChange(`dateinputtwo_${index}`, date)}\r\n    //                                                                             value={props.selectedRecord[`dateinputtwo_${index}`] || \"\"}\r\n    //                                                                         />\r\n    //                                                                     </Col>\r\n    //                                                                 ) : <></>\r\n    //                                                             }\r\n    //                                                         </>\r\n    //                                                         : <></>\r\n    //                                                     }\r\n    //                                                 </>\r\n    //                                                 : <></>\r\n    //                                 }\r\n    //                             </Row>\r\n    //                         </BuilderBorder>\r\n    //                     </> : <></>\r\n    //                 }\r\n\r\n\r\n    //             </>)\r\n    //     });\r\n\r\n    //     return design;\r\n    // }\r\n    function createSqlRules() {\r\n        let indexCount = 0;\r\n        let design = [];\r\n        props.addRuleList.map((items, index) => {\r\n\r\n            const stringOperators = props.selectedRecord[`columnname_${index}`].items\r\n                && props.selectedRecord[`columnname_${index}`].items.needmasterdata ?\r\n                stringOperatorData : stringOperatorData.map(item => { return item.symbolType !== 6 });\r\n\r\n            if (items > -1) {\r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n                <>\r\n                    {items > -1 ?\r\n                        <>\r\n                            {indexCount !== 1 ?\r\n                                <>\r\n                                    <Row>\r\n                                        {/* <ContionalButton type=\"button\" className=\"builder-btn-primary\" marginLeft={1} \r\n                                onClick={()=>props.onConditionClick1(`button_${index}`, 'not')}>\r\n                                <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"Not\" /></span>\r\n                            </ContionalButton> */}\r\n                                        <ContionalButton type=\"button\" className={props.selectedRecord[`button_and_${index}`] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                                            onClick={() => props.onConditionClick(`button_and_${index}`, index)}>\r\n                                            <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                                        </ContionalButton>\r\n                                        <ContionalButton type=\"button\" className={props.selectedRecord[`button_or_${index}`] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                            onClick={() => props.onConditionClick(`button_or_${index}`, index)}>\r\n                                            <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                                        </ContionalButton>\r\n                                    </Row>\r\n                                </> : <></>\r\n                            }\r\n                            <BuilderBorder key={index}>\r\n                                <Row>\r\n                                    <DeleteRule marginLeft={1} onClick={() => props.deleteRule(index)}>\r\n                                        <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                                    </DeleteRule>\r\n                                    <Col md={2} key={`tablekey_${index}`}>\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            // formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                            isSearchable={true}\r\n                                            name={`stablename_${index}`}\r\n                                            // placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                            showOption={true}\r\n                                            options={props.databaseTableList}\r\n                                            optionId='stablename'\r\n                                            optionValue='displayname'\r\n                                            value={props.selectedRecord[`stablename_${index}`] || \"\"}\r\n                                            onChange={value => props.onTableChange(value, `stablename_${index}`, index)}\r\n                                        >\r\n                                        </FormSelectSearch>\r\n                                    </Col>\r\n                                    <Col md={2} key={`columnkey_${index}`}>\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            // formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                            isSearchable={true}\r\n                                            name={`columnname_${index}`}\r\n                                            // placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                            showOption={true}\r\n                                            options={props.tableColumnList[index] || []}\r\n                                            optionId='columnname'\r\n                                            optionValue='displayname'\r\n                                            value={props.selectedRecord[`columnname_${index}`] || \"\"}\r\n                                            // onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\r\n                                            onChange={value => props.onRuleChange(value, `columnname_${index}`, index)}\r\n                                        >\r\n                                        </FormSelectSearch>\r\n                                    </Col>\r\n                                    {props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.COMBO ?\r\n                                        <>\r\n                                            <Col md={2}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel=\"\"\r\n                                                    isSearchable={true}\r\n                                                    name={`ssymbolname_${index}`}\r\n                                                    placeholder=\"\"\r\n                                                    showOption={true}\r\n                                                    options={joinConditionData}\r\n                                                    optionId='nvalidationcode'\r\n                                                    optionValue='ssymbolname'\r\n                                                    value={props.selectedRecord[`ssymbolname_${index}`]}\r\n                                                    onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                                >\r\n                                                </FormSelectSearch>\r\n                                            </Col>\r\n                                            <Col md={2} key={`foreigncolumnkey_${index}`}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    // formLabel={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                                    isSearchable={true}\r\n                                                    name={`foreigncolumnname_${index}`}\r\n                                                    // placeholder={ props.intl.formatMessage({ id: \"IDS_COLUMNS\" }) }\r\n                                                    showOption={true}\r\n                                                    options={props.foreignTableColumnList[index] || []}\r\n                                                    optionId='columnname'\r\n                                                    optionValue='displayname'\r\n                                                    value={props.selectedRecord[`foreigncolumnname_${index}`] || \"\"}\r\n                                                    // onChange={ value => props.onColumnChange(value, `columnname_${index}`, index) }\r\n                                                    onChange={value => props.onRuleChange(value, `foreigncolumnname_${index}`, index)}\r\n                                                >\r\n                                                </FormSelectSearch>\r\n                                            </Col>\r\n                                        </>\r\n                                        : <></>}\r\n                                    {/* <Col md={2} key={`tablekey_${index}`}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    // formLabel={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    isSearchable={ true }\r\n                                    name={ `stablename_${index}` }\r\n                                    // placeholder={ props.intl.formatMessage({ id: \"IDS_TABLES\" }) }\r\n                                    showOption={ true }\r\n                                    options={ props.databaseTableList }\r\n                                    optionId='stablename'\r\n                                    optionValue='displayname'\r\n                                    value={ props.selectedRecord[`stablename_${index}`] || \"\" }\r\n                                    onChange={ value => props.onTableChange(value, `stablename_${index}`, index) }\r\n                                >\r\n                                </FormSelectSearch>\r\n                            </Col> */}\r\n\r\n                                    {props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.TEXTINPUT ?\r\n                                        <>\r\n                                            <Col md={2}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel=\"\"\r\n                                                    isSearchable={true}\r\n                                                    name={`ssymbolname_${index}`}\r\n                                                    placeholder=\"\"\r\n                                                    showOption={true}\r\n                                                    options={stringOperators}\r\n                                                    optionId='nvalidationcode'\r\n                                                    optionValue='ssymbolname'\r\n                                                    value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                                    onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                                >\r\n                                                </FormSelectSearch>\r\n                                            </Col>\r\n                                            {props.selectedRecord[`ssymbolname_${index}`] && props.selectedRecord[`ssymbolname_${index}`].items.isInputVisible === true ?\r\n                                                <Col md={4}>\r\n                                                    <FormInput\r\n                                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                                        name={`sinputname_${index}`}\r\n                                                        // label={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n                                                        type=\"text\"\r\n                                                        onChange={(event) => props.onInputChange(event, 1)}\r\n                                                        // placeholder={props.intl.formatMessage({ id: \"IDS_INPUT\" })}\r\n                                                        value={props.selectedRecord ? props.selectedRecord[`sinputname_${index}`] : \"\"}\r\n                                                        maxLength={100}\r\n                                                    />\r\n                                                </Col> : <></>\r\n                                            }\r\n\r\n                                        </> : props.selectedRecord[`columnname_${index}`] && props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.NUMERICINPUT ?\r\n                                            <>\r\n                                                <Col md={2}>\r\n                                                    <FormSelectSearch\r\n                                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                                        formLabel=\"\"\r\n                                                        isSearchable={true}\r\n                                                        name={`ssymbolname_${index}`}\r\n                                                        placeholder=\"\"\r\n                                                        showOption={true}\r\n                                                        options={numericOperatorData}\r\n                                                        optionId='nvalidationcode'\r\n                                                        optionValue='ssymbolname'\r\n                                                        value={props.selectedRecord[`ssymbolname_${index}`] || \"\"}\r\n                                                        onChange={value => props.onSymbolChange(value, `ssymbolname_${index}`, index)}\r\n                                                    >\r\n                                                    </FormSelectSearch>\r\n                                                </Col>\r\n                                                {\r\n                                                    props.selectedRecord[`ssymbolname_${index}`] ?\r\n                                                        <Col md={2}>\r\n                                                            <FormInput\r\n                                                                name={`snumericinput_${index}`}\r\n                                                                label={props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_TO\" }) : \"\"}\r\n                                                                type=\"text\"\r\n                                                                required={false}\r\n                                                                isMandatory={false}\r\n                                                                value={props.selectedRecord[`snumericinput_${index}`] ? props.selectedRecord[`snumericinput_${index}`] : \"\"}\r\n                                                                onChange={(event) => props.onInputChange(event, 2)}\r\n                                                                maxLength={10}\r\n                                                            />\r\n                                                        </Col> :\r\n                                                        (props.selectedRecord[`ssymbolname_${index}`].items.symbolType === 5 ?\r\n                                                            <Col md={2}>\r\n                                                                <FormInput\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                                    name={`snumericinputtwo_${index}`}\r\n                                                                    type=\"text\"\r\n                                                                    required={false}\r\n                                                                    isMandatory={false}\r\n                                                                    value={props.selectedRecord[`snumericinputtwo_${index}`] ? props.selectedRecord[`snumericinputtwo_${index}`] : \"\"}\r\n                                                                    onChange={(event) => props.onInputChange(event, 2)}\r\n                                                                    maxLength={10}\r\n                                                                />\r\n                                                            </Col>\r\n                                                            : <></>\r\n                                                        )\r\n                                                }\r\n                                            </>\r\n                                            : <></>\r\n                                    }\r\n                                </Row>\r\n                            </BuilderBorder>\r\n                        </>\r\n                        : <></>}\r\n                </>);\r\n\r\n        });\r\n\r\n        return design;\r\n    }\r\n    function createRules(items, groupIndex) {\r\n        let design = [];\r\n        [...Array(items)].map((data, index) => {\r\n            let stringOperators = stringOperatorData;\r\n            design.push(\r\n                <>\r\n                    <Row className=\"mt-3\">\r\n\r\n                        <DeleteRule marginLeft={1} onClick={() => props.deleteRule(groupIndex, index)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} color=\"red\" />\r\n                        </DeleteRule>\r\n                        <Col md={4}>\r\n                            <FormSelectSearch\r\n                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                isSearchable={true}\r\n                                name={\"columnname\"}\r\n                                showOption={true}\r\n                                options={props.viewColumnListByRule || []}\r\n                                optionId='columnname'\r\n                                optionValue='displayname'\r\n                                value={props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"] || \"\"}\r\n                                onChange={value => props.onRuleChange(value, \"columnname\", groupIndex, index)}\r\n                            ></FormSelectSearch>\r\n                        </Col>\r\n                        {props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype === ColumnType.TEXTINPUT ?\r\n                            <>\r\n                                <Col md={2}>\r\n                                    <FormSelectSearch\r\n                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                        formLabel=\"\"\r\n                                        isSearchable={true}\r\n                                        name={\"ssymbolname\"}\r\n                                        placeholder=\"\"\r\n                                        showOption={true}\r\n                                        options={stringOperators}\r\n                                        optionId='nvalidationcode'\r\n                                        optionValue='ssymbolname'\r\n                                        value={props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"] || \"\"}\r\n                                        onChange={value => props.onSymbolChange(value, \"ssymbolname\", groupIndex, index)}\r\n                                    >\r\n                                    </FormSelectSearch>\r\n                                </Col>\r\n                                {props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"]\r\n                                    && props.selectedRecord[\"groupList\"][groupIndex][index][\"ssymbolname\"].items.isInputVisible ?\r\n                                    <>\r\n                                        {props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.needmasterdata ?\r\n\r\n                                            <Col md={4}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    isSearchable={true}\r\n                                                    name={`${props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember}`}\r\n                                                    showOption={true}\r\n                                                    options={props.viewMasterListByRule[groupIndex][index] || []}\r\n                                                    optionId={props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember}\r\n                                                    optionValue={props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.displaymember}\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index][`${props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember}`] || \"\"}\r\n                                                    isMulti={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.ismulti}\r\n                                                    onChange={value => props.onMasterDataChange(value, `${props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.valuemember}`, groupIndex, index)}\r\n                                                ></FormSelectSearch>\r\n                                            </Col> :\r\n                                            <Col md={4}>\r\n                                                <FormInput\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    name={`sinputname`}\r\n                                                    type=\"text\"\r\n                                                    onChange={(event) => props.onInputChange(event, 3, groupIndex, index)}\r\n                                                    value={props.selectedRecord ? props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"][\"sinputname\"] : \"\"}\r\n                                                    maxLength={100}\r\n                                                />\r\n                                            </Col>\r\n\r\n                                        }\r\n                                    </>\r\n                                    : <></>\r\n                                }\r\n\r\n                            </> : props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"] && props.selectedRecord[\"groupList\"][groupIndex][index][\"columnname\"].items.columntype === ColumnType.NUMERICINPUT ?\r\n                                <>\r\n                                    <Col md={2}>\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            formLabel=\"\"\r\n                                            isSearchable={true}\r\n                                            name={\"ssymbolname\"}\r\n                                            placeholder=\"\"\r\n                                            showOption={true}\r\n                                            options={numericOperatorData}\r\n                                            optionId='nvalidationcode'\r\n                                            optionValue='ssymbolname'\r\n                                            value={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`] || \"\"}\r\n                                            onChange={value => props.onSymbolChange(value, `ssymbolname`, groupIndex, index)}\r\n                                        >\r\n                                        </FormSelectSearch>\r\n                                    </Col>\r\n                                    {props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`] && props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.isInputVisible === true ?\r\n                                        <>\r\n                                            <Col md={2}>\r\n                                                <FormInput\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    label={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_FROM\" }) : \"\"}\r\n                                                    name={`snumericinput`}\r\n                                                    type=\"text\"\r\n                                                    required={false}\r\n                                                    isMandatory={false}\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index][`snumericinput`] ? props.selectedRecord[\"groupList\"][groupIndex][index][`snumericinput`] : \"\"}\r\n                                                    onChange={(event) => props.onInputChange(event, 2, groupIndex, index)}\r\n                                                    maxLength={10}\r\n                                                />\r\n                                            </Col>\r\n                                            {props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`] && props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.symbolType === 5 ?\r\n                                                (\r\n                                                    <Col md={2}>\r\n                                                        <FormInput\r\n                                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                                            label={props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                            name={`snumericinputtwo`}\r\n                                                            type=\"text\"\r\n                                                            required={false}\r\n                                                            isMandatory={false}\r\n                                                            value={props.selectedRecord[\"groupList\"][groupIndex][index][`snumericinputtwo`] ? props.selectedRecord[\"groupList\"][groupIndex][index][`snumericinputtwo`] : \"\"}\r\n                                                            onChange={(event) => props.onInputChange(event, 2, groupIndex, index)}\r\n                                                            maxLength={10}\r\n                                                        />\r\n                                                    </Col>\r\n                                                ) : <></>\r\n\r\n                                            }\r\n                                        </>\r\n                                        : <></>\r\n                                    }\r\n\r\n                                </> : props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`]\r\n                                    && props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.columntype === ColumnType.COMBO ?\r\n                                    <>\r\n                                        <Col md={2}>\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                formLabel=\"\"\r\n                                                isSearchable={true}\r\n                                                name={`ssymbolname`}\r\n                                                placeholder=\"\"\r\n                                                showOption={true}\r\n                                                options={conditionalOperatorData}\r\n                                                optionId='nvalidationcode'\r\n                                                optionValue='ssymbolname'\r\n                                                value={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`] || \"\"}\r\n                                                onChange={value => props.onSymbolChange(value, `ssymbolname`, groupIndex, index)}\r\n                                            >\r\n                                            </FormSelectSearch>\r\n                                        </Col>\r\n                                        {props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`] && props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.isInputVisible === true ?\r\n                                            <Col md={4}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel=\"\"\r\n                                                    isSearchable={true}\r\n                                                    name={`${props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.sforeigncolumnname}`}\r\n                                                    placeholder=\"\"\r\n                                                    showOption={true}\r\n                                                    options={props.viewMasterListByRule && props.viewMasterListByRule[groupIndex][index] || []}\r\n                                                    optionId={props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.sforeigncolumnname}\r\n                                                    optionValue='sdisplayname'\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index][`${props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.sforeigncolumnname}`] || \"\"}\r\n                                                    onChange={value => props.onMasterDataChange(value, `${props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.sforeigncolumnname}`, groupIndex, index)}\r\n                                                    isMulti={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.ismulti}\r\n                                                >\r\n                                                </FormSelectSearch>\r\n                                            </Col> : <></>\r\n                                        }\r\n                                    </> : props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`]\r\n                                        && (props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.columntype === ColumnType.DATATIME\r\n                                            || props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.columntype === ColumnType.DATE) ?\r\n                                        <>\r\n                                            <Col md={2}>\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel=\"\"\r\n                                                    isSearchable={true}\r\n                                                    name={`ssymbolname`}\r\n                                                    placeholder=\"\"\r\n                                                    showOption={true}\r\n                                                    options={numericOperatorData}\r\n                                                    optionId='nvalidationcode'\r\n                                                    optionValue='ssymbolname'\r\n                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`] || \"\"}\r\n                                                    onChange={value => props.onSymbolChange(value, `ssymbolname`, groupIndex, index)}\r\n                                                >\r\n                                                </FormSelectSearch>\r\n                                            </Col>\r\n                                            {props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`]\r\n                                                && props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.isInputVisible === true ?\r\n                                                <>\r\n                                                    <Col md={2}>\r\n                                                        <DateTimePicker\r\n                                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                                            label={props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.symbolType === 5 ? props.intl.formatMessage({ id: \"IDS_FROM\" }) : \"\"}\r\n                                                            name={`dateinput`}\r\n                                                            className='form-control'\r\n                                                            placeholderText=\"Select date..\"\r\n                                                            selected={props.selectedRecord[\"groupList\"][groupIndex][index][`dateinput`]}\r\n                                                            // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\r\n                                                            // dateFormat={\"dd-MM-yyyy\"}\r\n                                                            isClearable={false}\r\n                                                            showTimeInput={props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.columntype === ColumnType.DATATIME ? true : false}\r\n                                                            onChange={date => props.handleFilterDateChange(`dateinput`, date, groupIndex, index)}\r\n                                                            value={props.selectedRecord[\"groupList\"][groupIndex][index][`dateinput`] || \"\"}\r\n                                                        />\r\n                                                    </Col>\r\n                                                    {props.selectedRecord[\"groupList\"][groupIndex][index][`ssymbolname`].items.symbolType === 5 ?\r\n                                                        (\r\n                                                            <Col md={2}>\r\n                                                                <DateTimePicker\r\n                                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                    label={props.intl.formatMessage({ id: \"IDS_TO\" })}\r\n                                                                    name={`dateinputtwo`}\r\n                                                                    className='form-control'\r\n                                                                    placeholderText=\"Select date..\"\r\n                                                                    selected={props.selectedRecord[\"groupList\"][groupIndex][index][`dateinputtwo`]}\r\n                                                                    // dateFormat={\"dd-MM-yyyy\"}\r\n                                                                    // dateFormat={props.selectedRecord[`columnname_${index}`].items.columntype === ColumnType.DATATIME ? props.userInfo[\"ssitedatetime\"] : props.userInfo[\"ssitedate\"]}\r\n                                                                    isClearable={false}\r\n                                                                    showTimeInput={props.selectedRecord[\"groupList\"][groupIndex][index][`columnname`].items.columntype === ColumnType.DATATIME ? true : false}\r\n                                                                    onChange={date => props.handleFilterDateChange(`dateinputtwo`, date, groupIndex, index)}\r\n                                                                    value={props.selectedRecord[\"groupList\"][groupIndex][index][`dateinputtwo`] || \"\"}\r\n                                                                />\r\n                                                            </Col>\r\n                                                        ) : <></>\r\n                                                    }\r\n                                                </>\r\n                                                : <></>\r\n                                            }\r\n                                        </>\r\n                                        : <></>\r\n                        }\r\n                    </Row>\r\n                </>\r\n            )\r\n        });\r\n        return design;\r\n    }\r\n    function createGroupRules() {\r\n        let indexCount = 0;\r\n        let design = [];\r\n        props.addGroupList.length > 0 && props.addGroupList.map((items, index) => {\r\n\r\n            let stringOperators = stringOperatorData;\r\n            if (props.selectedRecord[\"groupList\"] && props.selectedRecord[\"groupList\"][index][\"columnname\"]\r\n                && !props.selectedRecord[\"groupList\"][index][\"columnname\"].items.needmasterdata\r\n                && props.selectedRecord[\"groupList\"][index][\"columnname\"].items.columntype === ColumnType.TEXTINPUT) {\r\n                const temp = stringOperators.filter(item => {\r\n                    if (item.items.symbolType !== 6) {\r\n                        return item\r\n                    }\r\n                });\r\n                stringOperators = temp;\r\n            }\r\n\r\n            if (items > -1) {\r\n                indexCount = indexCount + 1;\r\n            };\r\n            design.push(\r\n                <>\r\n                    {items > -1 ?\r\n                        <>\r\n                            {items > 1 ?\r\n                                <Row>\r\n                                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_and\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={1}\r\n                                        onClick={() => props.onConditionClick(\"button_and\", index)}>\r\n                                        <span><FormattedMessage id=\"IDS_AND\" defaultMessage=\"And\" /></span>\r\n                                    </ContionalButton>\r\n                                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_or\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                        onClick={() => props.onConditionClick(\"button_or\", index)}>\r\n                                        <span><FormattedMessage id=\"IDS_OR\" defaultMessage=\"Or\" /></span>\r\n                                    </ContionalButton>\r\n                                    <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                        onClick={() => props.onConditionClick(\"button_not\", index)}>\r\n                                        <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                                    </ContionalButton>\r\n                                </Row>\r\n\r\n                                :\r\n                                <>\r\n                                    <Row>\r\n                                        <ContionalButton type=\"button\" className={props.selectedRecord[\"groupList\"][index][\"button_not\"] === true ? \"builder-btn-primary\" : \"\"} marginLeft={0}\r\n                                            onClick={() => props.onConditionClick(\"button_not\", index)}>\r\n                                            <span><FormattedMessage id=\"IDS_NOT\" defaultMessage=\"NOT\" /></span>\r\n                                        </ContionalButton>\r\n                                    </Row>\r\n                                </>\r\n                            }\r\n\r\n                            <BuilderBorder key={index}>\r\n                                <Row className=\"mt-3\">\r\n                                    {/* <CustomSwitch\r\n                                        label={props.intl.formatMessage({ id: \"IDS_NOT\" })}\r\n                                        name={\"notoperator\"}\r\n                                        type=\"switch\"\r\n                                        isMandatory={false}\r\n                                        required={false}\r\n                                        checked={props.selectedRecord[\"groupList\"][index][\"notoperator\"] === undefined ? false : props.selectedRecord[\"groupList\"][index][\"notoperator\"]}\r\n                                        onChange={(event) => props.onInputChange(event, 1)}\r\n                                    /> */}\r\n                                    <Col md={2}>\r\n                                        <Button onClick={() => props.addRule(\"views\", index)} className=\"mr-1\">\r\n                                            {'+'} <FormattedMessage id=\"IDS_ADDRULE\" defaultMessage=\"Add Rule\" />\r\n                                        </Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                <>\r\n                                    {createRules(items, index)}\r\n                                </>\r\n\r\n                            </BuilderBorder>\r\n                        </> : <></>\r\n                    }\r\n\r\n\r\n                </>)\r\n        });\r\n\r\n        return design;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={4}>\r\n                    <FormInput\r\n                        formGroupClassName=\"remove-floating-label-margin\"\r\n                        label={\"Query Builder Name\"}\r\n                        name={`querybuildername`}\r\n                        type=\"text\"\r\n                        required={false}\r\n                        isMandatory={true}\r\n                        value={props.selectedRecord[\"querybuildername\"] || \"\"}\r\n                        onChange={(event) => props.onInputChange(event)}\r\n                    />\r\n                </Col>\r\n                {/* <Col md={4}>\r\n\r\n                    <FormSelectSearch\r\n                        formGroupClassName=\"remove-floating-label-margin\"\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_QUERYTYPE\" })}\r\n                        isSearchable={true}\r\n                        name={\"querytype\"}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_QUERYTYPE\" })}\r\n                        showOption={true}\r\n                        options={props.queryType || []}\r\n                        optionId='label'\r\n                        optionValue='value'\r\n                        value={props.selectedRecord[\"selectedQueryType\"] || { label: props.intl.formatMessage({ id: \"IDS_VIEWS\" }), value: \"views\" }}\r\n                        // onChange={value => props.onViewComboChange(value, \"sviewname\")}\r\n                        onChange={value => props.onQueryTypeOnclick(value)}\r\n                        closeMenuOnSelect={true}\r\n                    \r\n                    ></FormSelectSearch>\r\n                </Col> */}\r\n                <Col md={4}>\r\n                    {/* <Button onClick={() => props.clearRule()} className=\"mr-1\">\r\n                        <FormattedMessage id=\"IDS_CLEAR\" defaultMessage=\"Clear\" />\r\n                    </Button> */}\r\n                    <Button onClick={() => props.resetRule()}>\r\n                        <FormattedMessage id=\"IDS_RESET\" defaultMessage=\"Reset\" />\r\n                    </Button>\r\n\r\n                </Col>\r\n                <Col md={4}>\r\n                    {\r\n                        props.sqlQuery ?\r\n                            <>\r\n                                <Button onClick={() => props.addRule(\"sql\")} className=\"mr-1\">\r\n                                    {'+'} <FormattedMessage id=\"IDS_ADDRULE\" defaultMessage=\"Add Rule\" />\r\n                                </Button>\r\n                                <Button onClick={() => props.onGenerateQuery()}>\r\n                                    <FormattedMessage id=\"IDS_GENERATEQUERY\" defaultMessage=\"Generate Query\" />\r\n                                </Button>\r\n                            </> : <></>\r\n                    }\r\n                </Col>\r\n            </Row>\r\n\r\n            {\r\n                props.sqlQuery === true ?\r\n                    <>\r\n                        <Row className=\"mt-3\">\r\n                            <Col md={12}>\r\n                                {props.addRuleList.length > 0 ? createSqlRules() : <></>}\r\n                            </Col>\r\n                            <Col md={12} >\r\n                                <Card>\r\n                                    <Card.Header>\r\n                                        {props.intl.formatMessage({ id: \"IDS_QUERY\" })}\r\n                                        <Button onClick={() => props.onExecuteRule()}>\r\n                                            <FormattedMessage id=\"IDS_EXECUTE\" defaultMessage=\"Execute\" />\r\n                                        </Button>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        {props.selectedRecord && props.selectedRecord[\"sdisplayquery\"] ? props.selectedRecord[\"sdisplayquery\"] : \"No Query\"}\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            </Col>\r\n                        </Row>\r\n                    </> :\r\n                    <>\r\n                        <Row className=\"mt-4 mb-4\">\r\n                            <Col md={4}>\r\n                                <FormSelectSearch\r\n                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_VIEWS\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"sviewname\"}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTVIEWS\" })}\r\n                                    showOption={true}\r\n                                    options={props.databaseviewList || []}\r\n                                    optionId='sviewname'\r\n                                    optionValue='displayname'\r\n                                    value={props.selectedRecord[\"sviewname\"] || \"\"}\r\n                                    onChange={value => props.onViewComboChange(value, \"sviewname\")}\r\n                                ></FormSelectSearch>\r\n                            </Col>\r\n                            <Col md={2}>\r\n                                <Button onClick={() => props.addGroup(\"views\")} className=\"mr-1\">\r\n                                    {'+'} <FormattedMessage id=\"IDS_ADDGROUP\" defaultMessage=\"Add Group\" />\r\n                                </Button>\r\n                            </Col>\r\n                            {/* <Col md={2}>\r\n                                <CustomSwitch\r\n                                    label={props.intl.formatMessage({ id: \"IDS_GROUPBY\" })}\r\n                                    name={\"groupby\"}\r\n                                    type=\"switch\"\r\n                                    isMandatory={false}\r\n                                    required={false}\r\n                                    checked={props.selectedRecord[\"groupby\"] === undefined ? false : props.selectedRecord[\"groupby\"]}\r\n                                    onChange={(event) => props.onInputChange(event, 1)}\r\n                                />\r\n                            </Col> */}\r\n                            <Col md={2}>\r\n                                {/* <Button onClick={() => props.addAggregate()} className=\"mr-1\">\r\n                                    {'+'} <FormattedMessage id=\"IDS_ADDGROUPBY\" defaultMessage=\"Add Groupby\" />\r\n                                </Button> */}\r\n\r\n                            </Col>\r\n                            {/* <Col md={2}>\r\n                                <CustomSwitch\r\n                                    label={props.intl.formatMessage({ id: \"IDS_CUSTOMORDERBY\" })}\r\n                                    name={\"customorderby\"}\r\n                                    type=\"switch\"\r\n                                    isMandatory={false}\r\n                                    required={false}\r\n                                    checked={props.selectedRecord[\"customorderby\"] === undefined ? false : props.selectedRecord[\"customorderby\"]}\r\n                                    onChange={(event) => props.onInputChange(event, 1)}\r\n                                />\r\n                            </Col> */}\r\n                            <Col md={2}>\r\n                                {/* <Button onClick={() => props.addOrderby()} className=\"mr-1\">\r\n                                    {'+'} <FormattedMessage id=\"IDS_ADDORDERBY\" defaultMessage=\"Add Orderby\" />\r\n                                </Button> */}\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col md={12}>\r\n                                {props.addGroupList.length > 0 ? createGroupRules() : <></>}\r\n                                {props.addAggregateList.length > 0 ? createAggregateFunctions() : <></>}\r\n                                {props.addOrderbyList.length > 0 ? createOrderbyFields() : <></>}\r\n                            </Col>\r\n                            <Col md={12} >\r\n                                <Card>\r\n                                    <Card.Header>\r\n                                        {props.intl.formatMessage({ id: \"IDS_QUERY\" })}\r\n                                        <div className=\"float-right\">\r\n\r\n                                            <Button onClick={() => props.copySQLQuery(2)} style={{ marginRight: \"0.5rem\" }} >\r\n                                                <FormattedMessage id=\"IDS_COPYSQL\" defaultMessage=\"Copy SQL\" />\r\n                                            </Button>\r\n\r\n                                            <Button onClick={() => props.onExecuteRule()} >\r\n                                                <FormattedMessage id=\"IDS_EXECUTE\" defaultMessage=\"Execute\" />\r\n                                            </Button>\r\n\r\n                                        </div>\r\n                                    </Card.Header>\r\n                                    <Card.Body>\r\n                                        <Row>\r\n                                            <Col md={6}>\r\n                                                <FormMultiSelect\r\n                                                    name={\"filtercolumns\"}\r\n                                                    label={props.intl.formatMessage({ id: \"IDS_COLUMNS\" })}\r\n                                                    options={props.selectFields || []}\r\n                                                    optionId={\"value\"}\r\n                                                    optionValue={\"label\"}\r\n                                                    value={props.selectedRecord ? props.selectedRecord[\"filtercolumns\"] || [] : []}\r\n                                                    isMandatory={false}\r\n                                                    isClearable={true}\r\n                                                    disableSearch={false}\r\n                                                    disabled={false}\r\n                                                    closeMenuOnSelect={false}\r\n                                                    alphabeticalSort={true}\r\n                                                    onChange={(event) => props.onFilterComboChange(event, \"filtercolumns\")}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        {props.selectedRecord && props.selectedRecord[\"sdisplayquery\"] ? props.selectedRecord[\"sdisplayquery\"] : \"No Query\"}\r\n                                    </Card.Body>\r\n                                </Card>\r\n                                {props.data && props.gridColumnList && props.gridColumnList.length > 0 ?\r\n                                    <DataGrid\r\n                                        // primaryKeyField={\"npublicholidaycode\"}\r\n                                        data={props.data}\r\n                                        dataResult={props.dataResult}\r\n                                        dataState={props.dataState}\r\n                                        dataStateChange={props.dataStateChange}\r\n                                        extractedColumnList={props.gridColumnList}\r\n                                        controlMap={props.controlMap}\r\n                                        userRoleControlRights={props.userRoleControlRights}\r\n                                        // inputParam={props.inputParam}\r\n                                        userInfo={props.userInfo}\r\n                                        // methodUrl=\"PublicHolidays\"\r\n                                        // fetchRecord={props.getPublicHolidays}\r\n                                        // editParam={publicHolidaysEditParam}\r\n                                        // deleteRecord={props.deleteRecord}\r\n                                        // deleteParam={publicHolidaysDeleteParam}\r\n                                        pageable={true}\r\n                                        scrollable={\"scrollable\"}\r\n                                        // isComponent={true}\r\n                                        isActionRequired={false}\r\n                                        isToolBarRequired={true}\r\n                                        isRefreshRequired={false}\r\n                                        selectedId={-1}\r\n                                    />\r\n                                    : <></>\r\n                                }\r\n                            </Col>\r\n                        </Row>\r\n                    </>\r\n            }\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(BuildQuery);"]},"metadata":{},"sourceType":"module"}