{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\DropArea.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport { useDrag, useDrop } from \"react-dnd\";\nimport \"./styles.css\";\nconst ACCEPTS = [\"sidebarItem\", \"column\", \"component\", \"componentrow\", \"row\"];\n\nconst DropArea = _ref => {\n  let {\n    data,\n    onDrop,\n    isLast,\n    className,\n    isEmpty\n  } = _ref;\n  const [{\n    isOver,\n    canDrop\n  }, drop] = useDrop({\n    accept: ACCEPTS,\n    drop: (item, monitor) => {\n      onDrop(data, item);\n    },\n    canDrop: (item, monitor) => {\n      const dropZonePath = data.path;\n      const splitDropZonePath = dropZonePath.split(\"-\");\n      const itemPath = item.path; // sidebar items can always be dropped anywhere\n\n      if (!itemPath) {\n        if (splitDropZonePath.length === 1) {\n          if (data.childrenCount === 1) {\n            return false;\n          } //  return false;\n\n        }\n\n        return true;\n      }\n\n      const splitItemPath = itemPath.split(\"-\"); // limit columns when dragging from one row to another row\n\n      const dropZonePathRowIndex = splitDropZonePath[0];\n      const itemPathRowIndex = splitItemPath[0];\n      const diffRow = dropZonePathRowIndex !== itemPathRowIndex;\n\n      if (diffRow && splitDropZonePath.length === 2 && data.childrenCount >= 3) {\n        return false;\n      } // Invalid (Can't drop a parent element (row) into a child (column))\n\n\n      const parentDropInChild = splitItemPath.length < splitDropZonePath.length;\n      if (parentDropInChild) return false; // Current item can't possible move to it's own location\n\n      if (itemPath === dropZonePath) return false; // Current area\n\n      if (splitItemPath.length === splitDropZonePath.length) {\n        const pathToItem = splitItemPath.slice(0, -1).join(\"-\");\n        const currentItemIndex = Number(splitItemPath.slice(-1)[0]);\n        const pathToDropZone = splitDropZonePath.slice(0, -1).join(\"-\");\n        const currentDropZoneIndex = Number(splitDropZonePath.slice(-1)[0]);\n\n        if (pathToItem === pathToDropZone) {\n          const nextDropZoneIndex = currentItemIndex + 1;\n          if (nextDropZoneIndex === currentDropZoneIndex) return false;\n        }\n      }\n\n      if (splitItemPath.length > 1) {\n        if (splitDropZonePath.length === 1) {\n          return false;\n        } else {\n          return true;\n        }\n      }\n\n      return true;\n    },\n    collect: monitor => ({\n      isOver: monitor.isOver(),\n      canDrop: monitor.canDrop()\n    })\n  });\n  const isActive = !isOver && canDrop;\n  const isOkay = isOver && canDrop;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classNames(`${isEmpty ? \"emptyDropZone\" : \"dropZone\"}`, `${isActive ? 'active' : isOkay ? \"okay\" : \"\"}`, isLast, className),\n    ref: drop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  });\n};\n\nexport default DropArea;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/droparea/DropArea.jsx"],"names":["React","classNames","useDrag","useDrop","ACCEPTS","DropArea","data","onDrop","isLast","className","isEmpty","isOver","canDrop","drop","accept","item","monitor","dropZonePath","path","splitDropZonePath","split","itemPath","length","childrenCount","splitItemPath","dropZonePathRowIndex","itemPathRowIndex","diffRow","parentDropInChild","pathToItem","slice","join","currentItemIndex","Number","pathToDropZone","currentDropZoneIndex","nextDropZoneIndex","collect","isActive","isOkay"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport { useDrag, useDrop } from \"react-dnd\";\r\nimport \"./styles.css\"\r\nconst ACCEPTS = [\"sidebarItem\", \"column\", \"component\", \"componentrow\", \"row\"];\r\n\r\nconst DropArea = ({ data, onDrop, isLast, className, isEmpty }) => {\r\n\r\n  const [{ isOver, canDrop }, drop] = useDrop({\r\n    accept: ACCEPTS,\r\n    drop: (item, monitor) => {\r\n      onDrop(data, item);\r\n    },\r\n    canDrop: (item, monitor) => {\r\n      const dropZonePath = data.path;\r\n      const splitDropZonePath = dropZonePath.split(\"-\");\r\n      const itemPath = item.path;\r\n\r\n      // sidebar items can always be dropped anywhere\r\n      if (!itemPath) {\r\n        if (splitDropZonePath.length === 1) {\r\n          if (data.childrenCount === 1) {\r\n            return false;\r\n          }\r\n          //  return false;\r\n        }\r\n        return true;\r\n      }\r\n\r\n      const splitItemPath = itemPath.split(\"-\");\r\n\r\n      // limit columns when dragging from one row to another row\r\n      const dropZonePathRowIndex = splitDropZonePath[0];\r\n      const itemPathRowIndex = splitItemPath[0];\r\n      const diffRow = dropZonePathRowIndex !== itemPathRowIndex;\r\n      if (\r\n        diffRow &&\r\n        splitDropZonePath.length === 2 &&\r\n        data.childrenCount >= 3\r\n      ) {\r\n        return false;\r\n      }\r\n\r\n\r\n      // Invalid (Can't drop a parent element (row) into a child (column))\r\n      const parentDropInChild = splitItemPath.length < splitDropZonePath.length;\r\n      if (parentDropInChild) return false;\r\n\r\n      // Current item can't possible move to it's own location\r\n      if (itemPath === dropZonePath) return false;\r\n\r\n      // Current area\r\n      if (splitItemPath.length === splitDropZonePath.length) {\r\n        const pathToItem = splitItemPath.slice(0, -1).join(\"-\");\r\n        const currentItemIndex = Number(splitItemPath.slice(-1)[0]);\r\n\r\n        const pathToDropZone = splitDropZonePath.slice(0, -1).join(\"-\");\r\n        const currentDropZoneIndex = Number(splitDropZonePath.slice(-1)[0]);\r\n\r\n        if (pathToItem === pathToDropZone) {\r\n          const nextDropZoneIndex = currentItemIndex + 1;\r\n          if (nextDropZoneIndex === currentDropZoneIndex) return false;\r\n        }\r\n      }\r\n\r\n      if (splitItemPath.length > 1) {\r\n        if (splitDropZonePath.length === 1) {\r\n          return false;\r\n        } else {\r\n          return true;\r\n        }\r\n      }\r\n\r\n\r\n      return true;\r\n    },\r\n    collect: (monitor) => ({\r\n      isOver: monitor.isOver(),\r\n      canDrop: monitor.canDrop()\r\n    })\r\n  });\r\n\r\n  const isActive = !isOver && canDrop;\r\n  const isOkay = isOver && canDrop;\r\n  return (\r\n    <div\r\n      className={classNames(`${isEmpty ? \"emptyDropZone\" : \"dropZone\"}`, `${isActive ? 'active' : isOkay ? \"okay\" : \"\"}`, isLast, className)}\r\n      ref={drop}\r\n    />\r\n  );\r\n};\r\nexport default DropArea;\r\n"]},"metadata":{},"sourceType":"module"}