{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboardtypes\\\\AddSeriesColors.jsx\";\nimport React from 'react';\nimport { ListWrapper, PrimaryHeader, HeaderName, AtTableWrap } from '../../components/client-group.styles';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\nimport { process } from '@progress/kendo-data-query';\nimport ColumnMenu from '../../components/data-grid/ColumnMenu.jsx';\nimport FormColorPicker from '../../components/form-color-picker/form-color-picker.component'; // const mapStateToProps = state => {\n//     return ({ Login: state.Login })\n// }\n\nclass AddSeriesColors extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.props.ySeries, event.data),\n        dataState: event.data\n      });\n    };\n\n    this.formRef = React.createRef();\n    this.extractedColumnList = [];\n    const dataState = {\n      skip: 0,\n      take: 10\n    };\n    this.state = {\n      addScreen: false,\n      data: this.props.ySeries,\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      dataState: dataState,\n      selectedUserRole: {},\n      columnName: '',\n      rowIndex: 0,\n      value: 'rgba(237, 126, 50, 1)'\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-list-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PrimaryHeader, {\n      className: \"d-flex justify-content-between mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(HeaderName, {\n      className: \"header-primary-md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_SELECTCHARTSERIESCOLOR\",\n      defaultMessage: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(AtTableWrap, {\n      className: \"at-list-table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Grid, Object.assign({\n      sortable: true,\n      resizable: true,\n      reorderable: true,\n      scrollable: \"none\",\n      data: this.state.data\n    }, this.state.dataState, {\n      onDataStateChange: this.dataStateChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(GridColumn, {\n      field: \"label\",\n      columnMenu: ColumnMenu,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_COLUMNNAME\"\n      }),\n      width: \"175px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(GridColumn, {\n      field: \"value\" // columnMenu={ColumnMenu}\n      ,\n      width: \"175px\",\n      title: this.props.intl.formatMessage({\n        id: \"IDS_COLOR\"\n      }),\n      cell: row => /*#__PURE__*/React.createElement(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormColorPicker //id={row[\"dataItem\"][\"value\"]}\n      , {\n        name: \"Color1\",\n        handleChange: e => this.handleColorChange(e, row[\"dataItem\"]),\n        initialValue: row[\"dataItem\"].item.Color,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 49\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }\n    })))))));\n  }\n\n  handleColorChange(e, item) {\n    //const yField = [... this.props.ySeries];\n    // const current = yField.findIndex(dataItem => dataItem === e.dataItem);\n    item.item.Color = e.hex;\n  } // handleChange (e, Item){\n  //     console.log(\"Hex : \", e.value);\n  // }\n\n\n}\n\nexport default injectIntl(AddSeriesColors);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/dashboardtypes/AddSeriesColors.jsx"],"names":["React","ListWrapper","PrimaryHeader","HeaderName","AtTableWrap","FormattedMessage","injectIntl","Row","Col","Grid","GridColumn","process","ColumnMenu","FormColorPicker","AddSeriesColors","Component","constructor","props","dataStateChange","event","setState","dataResult","ySeries","data","dataState","formRef","createRef","extractedColumnList","skip","take","state","addScreen","masterStatus","error","selectedRecord","selectedUserRole","columnName","rowIndex","value","render","intl","formatMessage","id","row","e","handleColorChange","item","Color","hex"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { ListWrapper, PrimaryHeader, HeaderName, AtTableWrap } from '../../components/client-group.styles'\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ColumnMenu from '../../components/data-grid/ColumnMenu.jsx';\r\nimport FormColorPicker from '../../components/form-color-picker/form-color-picker.component';\r\n\r\n\r\n// const mapStateToProps = state => {\r\n//     return ({ Login: state.Login })\r\n// }\r\nclass AddSeriesColors extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n\r\n        const dataState = {\r\n            skip: 0,\r\n            take: 10,\r\n        };\r\n        this.state = {\r\n            addScreen: false, data: this.props.ySeries, masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            selectedUserRole: {}, columnName: '', rowIndex: 0, value: 'rgba(237, 126, 50, 1)'\r\n        }\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.ySeries, event.data),\r\n            dataState: event.data\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            <PrimaryHeader className=\"d-flex justify-content-between mb-3\">\r\n                                <HeaderName className=\"header-primary-md\">\r\n\r\n                                    <FormattedMessage id={\"IDS_SELECTCHARTSERIESCOLOR\"} defaultMessage=\"\" />\r\n                                </HeaderName>\r\n                            </PrimaryHeader>\r\n\r\n                            <AtTableWrap className=\"at-list-table\">\r\n                                <Grid\r\n                                    sortable\r\n                                    resizable\r\n                                    reorderable\r\n                                    scrollable=\"none\"\r\n                                    data={this.state.data}\r\n                                    {...this.state.dataState}\r\n                                    onDataStateChange={this.dataStateChange}>\r\n\r\n                                    <GridColumn field=\"label\" columnMenu={ColumnMenu} title={this.props.intl.formatMessage({ id: \"IDS_COLUMNNAME\" })} width=\"175px\" />\r\n                                    <GridColumn\r\n                                        field={\"value\"}\r\n                                        // columnMenu={ColumnMenu}\r\n                                        width=\"175px\"\r\n                                        title={this.props.intl.formatMessage({ id: \"IDS_COLOR\" })}\r\n                                        cell={(row) => (\r\n                                            <td>\r\n                                                <FormColorPicker //id={row[\"dataItem\"][\"value\"]}\r\n                                                    name=\"Color1\"\r\n                                                    handleChange={(e) => this.handleColorChange(e, row[\"dataItem\"])}\r\n                                                    initialValue={row[\"dataItem\"].item.Color}\r\n                                                />\r\n                                            </td>)}\r\n                                    />\r\n                                </Grid>\r\n                            </AtTableWrap>\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n    handleColorChange(e, item) {     \r\n        //const yField = [... this.props.ySeries];\r\n        // const current = yField.findIndex(dataItem => dataItem === e.dataItem);\r\n        item.item.Color = e.hex;\r\n\r\n    }\r\n    // handleChange (e, Item){\r\n    //     console.log(\"Hex : \", e.value);\r\n\r\n    // }\r\n\r\n}\r\nexport default injectIntl(AddSeriesColors);"]},"metadata":{},"sourceType":"module"}