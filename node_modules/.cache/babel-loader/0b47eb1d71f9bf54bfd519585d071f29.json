{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sqlEmptyValue = exports.mongoEmptyValue = exports.SqlString = void 0;\n\nvar SqlString = require(\"sqlstring\");\n\nexports.SqlString = SqlString;\n\nSqlString.trim = function (val) {\n  if (val.charAt(0) == \"'\") return val.substring(1, val.length - 1);else return val;\n};\n\nSqlString.escapeLike = function (val) {\n  var any_start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var any_end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true; // normal escape\n\n  var res = SqlString.escape(val); // unwrap ''\n\n  res = SqlString.trim(res); // escape % and _\n\n  res = res.replace(/[%_]/g, \"\\\\$&\"); // wrap with % for LIKE\n\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\"); // wrap ''\n\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nvar sqlEmptyValue = function sqlEmptyValue(fieldDef) {\n  var v = \"''\";\n  var type = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.type;\n\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n\n  return v;\n};\n\nexports.sqlEmptyValue = sqlEmptyValue;\n\nvar mongoEmptyValue = function mongoEmptyValue(fieldDef) {\n  var v = \"\";\n  var type = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.type;\n\n  if (type == \"number\") {\n    v = 0;\n  }\n\n  return v;\n};\n\nexports.mongoEmptyValue = mongoEmptyValue;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/node_modules/react-awesome-query-builder/lib/utils/export.js"],"names":["Object","defineProperty","exports","value","sqlEmptyValue","mongoEmptyValue","SqlString","require","trim","val","charAt","substring","length","escapeLike","any_start","arguments","undefined","any_end","res","escape","replace","fieldDef","v","type"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sqlEmptyValue = exports.mongoEmptyValue = exports.SqlString = void 0;\n\nvar SqlString = require(\"sqlstring\");\n\nexports.SqlString = SqlString;\n\nSqlString.trim = function (val) {\n  if (val.charAt(0) == \"'\") return val.substring(1, val.length - 1);else return val;\n};\n\nSqlString.escapeLike = function (val) {\n  var any_start = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  var any_end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  // normal escape\n  var res = SqlString.escape(val); // unwrap ''\n\n  res = SqlString.trim(res); // escape % and _\n\n  res = res.replace(/[%_]/g, \"\\\\$&\"); // wrap with % for LIKE\n\n  res = (any_start ? \"%\" : \"\") + res + (any_end ? \"%\" : \"\"); // wrap ''\n\n  res = \"'\" + res + \"'\";\n  return res;\n};\n\nvar sqlEmptyValue = function sqlEmptyValue(fieldDef) {\n  var v = \"''\";\n  var type = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.type;\n\n  if (type == \"date\") {\n    //todo: support other SQL dialects?  0001-01-01 for oracle, 1970-01-01 for timestamp\n    v = \"'0000-00-00'\";\n  } else if (type == \"datetime\") {\n    v = \"'0000-00-00 00:00'\";\n  } else if (type == \"time\") {\n    v = \"'00:00'\";\n  } else if (type == \"number\") {\n    v = \"0\";\n  }\n\n  return v;\n};\n\nexports.sqlEmptyValue = sqlEmptyValue;\n\nvar mongoEmptyValue = function mongoEmptyValue(fieldDef) {\n  var v = \"\";\n  var type = fieldDef === null || fieldDef === void 0 ? void 0 : fieldDef.type;\n\n  if (type == \"number\") {\n    v = 0;\n  }\n\n  return v;\n};\n\nexports.mongoEmptyValue = mongoEmptyValue;"]},"metadata":{},"sourceType":"script"}