{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\QuotationTab.jsx\";\nimport React from 'react';\nimport { Row, Col, Card } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl'; //FormattedMessage,\n\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport QuotationDetailTab from './QuotationDetailTab';\nimport QuotationHistoryTab from './QuotationHistoryTab';\nimport QuotationVATCalculationTab from './QuotationVATCalculationTab';\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\nimport AddQuotationTest from \"./AddQuotationTest\";\nimport EditQuotationTestPricing from \"./EditQuotationTestPricing\";\nimport AddGrossQuotation from \"./AddGrossQuotation\";\n\nclass QuotationTab extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.tabDetail = () => {\n      const addQuotationTestId = this.props.controlMap.has(\"AddQuotationTest\") && this.props.controlMap.get(\"AddQuotationTest\").ncontrolcode;\n      const updateQuotationTestId = this.props.controlMap.has(\"EditQuotationTest\") && this.props.controlMap.get(\"EditQuotationTest\").ncontrolcode;\n      const grossQuotationeId = this.props.controlMap.has(\"CalculatePricing\") && this.props.controlMap.get(\"CalculatePricing\").ncontrolcode; // const projectmasterAddParam = {\n      //     screenName: \"IDS_MEMBERS\", operation: \"create\", primaryKeyField: \"nprojectmembercode\",\n      //     masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addteammembersId\n      // };\n      // const projectmasterDeleteParam = {\n      //     //    screenName: \"IDS_MEMBERS\", methodUrl: \"ProjectMember\", operation: \"delete\", ncontrolCode: deleteteammembersId \n      //     screenName: \"IDS_MEMBERS\", operation: \"delete\", primaryKeyField: \"nprojectmembercode\",\n      //     masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: deleteteammembersId\n      // };\n\n      const tabMap = new Map();\n      tabMap.set(\"IDS_DETAILS\", /*#__PURE__*/React.createElement(QuotationDetailTab, {\n        userRoleControlRights: this.props.userRoleControlRights,\n        controlMap: this.props.controlMap,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.userInfo,\n        addTitleIDS: \"IDS_DETAILS\",\n        addTitleDefaultMsg: 'Details',\n        primaryKeyField: \"nquotationtestcode\",\n        masterData: this.props.masterData,\n        primaryList: \"Details\",\n        dataResult: this.props.dataResult,\n        dataState: this.props.dataState,\n        dataStateChange: this.props.dataStateChange,\n        columnList: this.quotationdetailColumnList,\n        deleteRecord: this.props.deleteRecord // deleteParam={projectmasterDeleteParam} --\n        ,\n        addQuotationTestId: addQuotationTestId,\n        updateQuotationTestId: updateQuotationTestId,\n        editTestPriceParam: this.props.editParam,\n        data: this.props.data // getQuotationPricingEditService={this.props.fetchRecord}\n        ,\n        selectedId: this.props.selectedId,\n        getQuotationAddTestService: this.props.getQuotationAddTestService,\n        getQuotationPricingEditService: this.props.getQuotationPricingEditService,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 35\n        }\n      }));\n      tabMap.set(\"IDS_ESTIMATION\", /*#__PURE__*/React.createElement(QuotationVATCalculationTab, {\n        userInfo: this.props.userInfo,\n        addTitleIDS: \"IDS_ESTIMATION\",\n        addTitleDefaultMsg: 'Estimation',\n        primaryKeyField: \"nquotationtestcode\",\n        primaryList: \"Estimation\",\n        grossQuotationeId: grossQuotationeId,\n        selectedQuotation: this.props.selectedQuotation,\n        userRoleControlRights: this.props.userRoleControlRights,\n        GrossQuotation: this.props.GrossQuotation,\n        EstimateQuotation: this.props.EstimateQuotation,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 38\n        }\n      }));\n      tabMap.set(\"IDS_HISTORY\", /*#__PURE__*/React.createElement(QuotationHistoryTab, {\n        controlMap: this.props.controlMap,\n        userRoleControlRights: this.props.userRoleControlRights,\n        userInfo: this.props.userInfo,\n        inputParam: this.props.inputParam // screenName=\"IDS_FILE\"\n        ,\n        QuotationHistorydata: this.props.QuotationHistorydata,\n        QuotationHistorydataResult: this.props.QuotationHistorydataResult,\n        dataState: this.props.dataState,\n        historydataStateChange: this.props.historydataStateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 35\n        }\n      }));\n      return tabMap;\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.loadEsign;\n      let openChildModal = this.props.openChildModal;\n      let selectedRecord = this.props.selectedRecord; //    let selectedRecord = this.state.selectedRecord;\n\n      if (this.props.loadEsign) {\n        if (this.props.operation === \"delete\") {\n          loadEsign = false;\n          openChildModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = '';\n          selectedRecord['esigncomments'] = '';\n          selectedRecord['esignreason'] = '';\n        }\n      } else {\n        openChildModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openChildModal,\n          loadEsign,\n          selectedRecord\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.userInfo,\n            sreason: this.props.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.props.selectedRecord[\"esignreason\"] && this.props.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.props.selectedRecord[\"esignreason\"] && this.props.selectedRecord[\"esignreason\"].label\n          },\n          password: this.props.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openChildModal\");\n    };\n\n    const dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      isOpen: false,\n      selectedRecord: {},\n      dataResult: [],\n      activeTab: 'Quotation-tab',\n      dataState: dataState\n    };\n    this.quotationdetailColumnList = [{\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_METHODNAME\",\n      \"dataField\": \"smethodname\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_LEADTIME\",\n      \"dataField\": \"squotationleadtime\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_DESCRIPTION\",\n      \"dataField\": \"stestplatform\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_DISCOUNTBAND\",\n      \"dataField\": \"sdiscountbandname\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_COST\",\n      \"dataField\": \"ncost\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_NUMBEROFSAMPLES\",\n      \"dataField\": \"nnoofsamples\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_TOTALAMOUNT\",\n      \"dataField\": \"ntotalamount\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_NOTES\",\n      \"dataField\": \"snotes\",\n      \"width\": \"200px\"\n    }];\n  } // findMandatoryFields(screenName, selectedRecord, operation) {\n  //     let mandatoryFields = [];\n  //     if (screenName === \"IDS_TEST\") {\n  //       mandatoryFields = [{ \"idsName\": \"IDS_TEST\", \"dataField\": \"ntestcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }];\n  //       return mandatoryFields;\n  //     }else {\n  //         return mandatoryFields;\n  //       }\n  //   }\n\n\n  render() {\n    let mandatoryFields = [];\n\n    if (this.props.screenName === 'IDS_TEST') {\n      mandatoryFields = [{\n        \"idsName\": \"IDS_TEST\",\n        \"dataField\": \"ntestcode\",\n        \"width\": \"200px\",\n        \"mandatory\": true,\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"selectbox\"\n      }];\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      className: \"no-gutters\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"at-tabs\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(CustomTabs, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 29\n      }\n    })))), this.props.openChildModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.openChildModal,\n      closeModal: this.closeModal,\n      size: this.props.modalScreenSize === true ? \"xl\" : \"lg\",\n      operation: this.props.operation,\n      inputParam: this.props.inputParam,\n      screenName: this.props.screenName,\n      onSaveClick: this.props.onSaveClick,\n      updateStore: this.props.updateStore,\n      esign: this.props.loadEsign,\n      validateEsign: this.validateEsign,\n      selectedRecord: this.props.selectedRecord || {} //   mandatoryFields={this.props.screenName === \"IDS_MEMBERS\" ? mandatoryFields : mandatoryFields || []}\n      ,\n      mandatoryFields: mandatoryFields || [],\n      addComponent: this.props.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.operation,\n        onInputOnChange: this.props.onInputOnChange,\n        inputParam: this.props.inputParam,\n        selectedRecord: this.props.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }\n      }) : this.props.screenName === \"IDS_TEST\" ? /*#__PURE__*/React.createElement(AddQuotationTest, {\n        QuotationTestList: this.props.QuotationTestList,\n        selectedRecord: this.props.selectedRecord || {},\n        onComboChange: this.props.onComboChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 29\n        }\n      }) : this.props.screenName === \"IDS_PRICE\" ? /*#__PURE__*/React.createElement(EditQuotationTestPricing, {\n        onnetAmountEvent: this.props.onnetAmountEvent,\n        selectedRecord: this.props.selectedRecord || {},\n        onInputOnChange: this.props.onInputOnChange,\n        onNumericInputChange: this.props.onNumericInputChange,\n        DiscountBand: this.props.DiscountBand,\n        onComboChange: this.props.onComboChange,\n        onFocus: this.props.onFocus,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 29\n        }\n      }) : this.props.screenName === \"IDS_CALCULATEPRICING\" ? /*#__PURE__*/React.createElement(AddGrossQuotation, {\n        DiscountBand: this.props.DiscountBand,\n        VATBand: this.props.VATBand,\n        selectedRecord: this.props.selectedRecord || {} //  QuotationTest={this.props.Login.QuotationTest}\n        ,\n        onComboChange: this.props.onComboChange,\n        onInputOnChange: this.onInputOnChange //      DiscountAmount={this.state.selectedRecord.DiscountAmount === undefined ? 0.00 :this.state.selectedRecord.DiscountAmount }\n        ,\n        DiscountAmount: this.props.selectedRecord.DiscountAmount !== undefined ? this.props.selectedRecord.DiscountAmount : this.props.QuotationGrossAmount[0].ndiscountamount //        VatAmount={this.state.selectedRecord.VatAmount === undefined ? 0.00 : this.state.selectedRecord.VatAmount}\n        ,\n        VatAmount: this.props.selectedRecord.VatAmount !== undefined ? this.props.selectedRecord.VatAmount : this.props.QuotationGrossAmount[0].nvatamount,\n        QuotationGrossAmount: this.props.QuotationGrossAmount === undefined ? 0.00 : this.props.QuotationGrossAmount,\n        TotalNetAmount: this.props.selectedRecord.TotalNetAmount !== undefined ? this.props.selectedRecord.TotalNetAmount : this.props.QuotationGrossAmount[0].ntotalgrossamount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nexport default injectIntl(QuotationTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/quotation/QuotationTab.jsx"],"names":["React","Row","Col","Card","injectIntl","SlideOutModal","Esign","DEFAULT_RETURN","QuotationDetailTab","QuotationHistoryTab","QuotationVATCalculationTab","CustomTabs","AddQuotationTest","EditQuotationTestPricing","AddGrossQuotation","QuotationTab","Component","constructor","props","onTabChange","tabProps","screenName","updateInfo","typeName","data","updateStore","tabDetail","addQuotationTestId","controlMap","has","get","ncontrolcode","updateQuotationTestId","grossQuotationeId","tabMap","Map","set","userRoleControlRights","inputParam","userInfo","masterData","dataResult","dataState","dataStateChange","quotationdetailColumnList","deleteRecord","editParam","selectedId","getQuotationAddTestService","getQuotationPricingEditService","selectedQuotation","GrossQuotation","EstimateQuotation","QuotationHistorydata","QuotationHistorydataResult","historydataStateChange","closeModal","loadEsign","openChildModal","selectedRecord","operation","validateEsign","inputData","sreason","nreasoncode","value","spredefinedreason","label","password","screenData","validateEsignCredential","skip","take","settings","parseInt","state","isOpen","activeTab","render","mandatoryFields","modalScreenSize","onSaveClick","onInputOnChange","QuotationTestList","onComboChange","onnetAmountEvent","onNumericInputChange","DiscountBand","onFocus","VATBand","DiscountAmount","undefined","QuotationGrossAmount","ndiscountamount","VatAmount","nvatamount","TotalNetAmount","ntotalgrossamount"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';  //FormattedMessage,\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport QuotationDetailTab from './QuotationDetailTab';\r\nimport QuotationHistoryTab from './QuotationHistoryTab';\r\nimport QuotationVATCalculationTab from './QuotationVATCalculationTab';\r\nimport CustomTabs from '../../components/custom-tabs/custom-tabs.component';\r\nimport AddQuotationTest from \"./AddQuotationTest\";\r\nimport EditQuotationTestPricing from \"./EditQuotationTestPricing\";\r\nimport AddGrossQuotation from \"./AddGrossQuotation\";\r\n\r\nclass QuotationTab extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5\r\n        };\r\n\r\n        this.state = {\r\n            isOpen: false, selectedRecord: {}, dataResult: [],\r\n            activeTab: 'Quotation-tab',\r\n            dataState: dataState\r\n\r\n        };\r\n\r\n        this.quotationdetailColumnList = [\r\n\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },        \r\n            { \"idsName\": \"IDS_METHODNAME\", \"dataField\": \"smethodname\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_LEADTIME\", \"dataField\": \"squotationleadtime\", \"width\": \"200px\" }, \r\n            { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"stestplatform\", \"width\": \"200px\" }, \r\n            { \"idsName\": \"IDS_DISCOUNTBAND\", \"dataField\": \"sdiscountbandname\", \"width\": \"200px\" }, \r\n            { \"idsName\": \"IDS_COST\", \"dataField\": \"ncost\", \"width\": \"100px\" },\r\n            { \"idsName\": \"IDS_NUMBEROFSAMPLES\", \"dataField\": \"nnoofsamples\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_TOTALAMOUNT\", \"dataField\": \"ntotalamount\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_NOTES\", \"dataField\": \"snotes\", \"width\": \"200px\" }\r\n\r\n        ]\r\n\r\n    }\r\n\r\n\r\n    // findMandatoryFields(screenName, selectedRecord, operation) {\r\n\r\n    //     let mandatoryFields = [];\r\n    //     if (screenName === \"IDS_TEST\") {\r\n\r\n    //       mandatoryFields = [{ \"idsName\": \"IDS_TEST\", \"dataField\": \"ntestcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }];\r\n            \r\n    //       return mandatoryFields;\r\n    //     }else {\r\n    //         return mandatoryFields;\r\n    //       }\r\n      \r\n    //   }\r\n\r\n    render() {\r\n\r\n         let mandatoryFields = [];\r\n\r\n        if (this.props.screenName === 'IDS_TEST') {\r\n\r\n            mandatoryFields = [{ \"idsName\": \"IDS_TEST\", \"dataField\": \"ntestcode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }];\r\n\r\n        }\r\n\r\n        return (\r\n            <>\r\n                <Row className=\"no-gutters\">\r\n                    <Col md={12}>\r\n                        <Card className=\"at-tabs\">\r\n                            <CustomTabs tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n\r\n                {this.props.openChildModal &&\r\n                    <SlideOutModal show={this.props.openChildModal}\r\n                        closeModal={this.closeModal}\r\n                        size={this.props.modalScreenSize===true ? \"xl\" : \"lg\" }\r\n                        operation={this.props.operation}\r\n                        inputParam={this.props.inputParam}\r\n                        screenName={this.props.screenName}\r\n                        onSaveClick={this.props.onSaveClick}\r\n                        updateStore={this.props.updateStore}\r\n                        esign={this.props.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.props.selectedRecord || {}}\r\n                   //   mandatoryFields={this.props.screenName === \"IDS_MEMBERS\" ? mandatoryFields : mandatoryFields || []}\r\n                        mandatoryFields={mandatoryFields || []}\r\n                        addComponent={this.props.loadEsign ?\r\n                            <Esign operation={this.props.operation}\r\n                                onInputOnChange={this.props.onInputOnChange}\r\n                                inputParam={this.props.inputParam}\r\n                                selectedRecord={this.props.selectedRecord || {}}\r\n                            /> :\r\n                            this.props.screenName === \"IDS_TEST\" ?\r\n\r\n                            <AddQuotationTest\r\n\r\n                            QuotationTestList={this.props.QuotationTestList}\r\n                            selectedRecord={this.props.selectedRecord || {}}\r\n                            onComboChange={this.props.onComboChange}\r\n           \r\n                            />  :\r\n                            this.props.screenName === \"IDS_PRICE\" ?\r\n\r\n                            <EditQuotationTestPricing\r\n\r\n                             onnetAmountEvent={this.props.onnetAmountEvent}\r\n                             selectedRecord={this.props.selectedRecord || {}}\r\n                             onInputOnChange={this.props.onInputOnChange}\r\n                             onNumericInputChange={this.props.onNumericInputChange}\r\n                             DiscountBand={this.props.DiscountBand}\r\n                             onComboChange={this.props.onComboChange}\r\n                             onFocus={this.props.onFocus}\r\n\r\n                            /> :  this.props.screenName === \"IDS_CALCULATEPRICING\" ?\r\n\r\n                            <AddGrossQuotation\r\n            \r\n                              DiscountBand={this.props.DiscountBand}\r\n                              VATBand={this.props.VATBand} \r\n                              selectedRecord={this.props.selectedRecord || {}}\r\n                          //  QuotationTest={this.props.Login.QuotationTest}\r\n                              onComboChange={this.props.onComboChange}\r\n                              onInputOnChange={this.onInputOnChange}\r\n                      //      DiscountAmount={this.state.selectedRecord.DiscountAmount === undefined ? 0.00 :this.state.selectedRecord.DiscountAmount }\r\n                              DiscountAmount={this.props.selectedRecord.DiscountAmount !== undefined ? this.props.selectedRecord.DiscountAmount:this.props.QuotationGrossAmount[0].ndiscountamount}\r\n                    //        VatAmount={this.state.selectedRecord.VatAmount === undefined ? 0.00 : this.state.selectedRecord.VatAmount}\r\n                              VatAmount={this.props.selectedRecord.VatAmount !== undefined ? this.props.selectedRecord.VatAmount:this.props.QuotationGrossAmount[0].nvatamount}\r\n                              QuotationGrossAmount={this.props.QuotationGrossAmount === undefined ? 0.00 : this.props.QuotationGrossAmount} \r\n                              TotalNetAmount={this.props.selectedRecord.TotalNetAmount !== undefined ? this.props.selectedRecord.TotalNetAmount:this.props.QuotationGrossAmount[0].ntotalgrossamount}\r\n                            /> : \"\"\r\n                        }\r\n\r\n                    />\r\n                }\r\n            </>\r\n\r\n        )\r\n\r\n    }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    tabDetail = () => {\r\n\r\n      const addQuotationTestId = this.props.controlMap.has(\"AddQuotationTest\") && this.props.controlMap.get(\"AddQuotationTest\").ncontrolcode;\r\n      const updateQuotationTestId = this.props.controlMap.has(\"EditQuotationTest\") && this.props.controlMap.get(\"EditQuotationTest\").ncontrolcode;\r\n      const grossQuotationeId = this.props.controlMap.has(\"CalculatePricing\") && this.props.controlMap.get(\"CalculatePricing\").ncontrolcode;\r\n\r\n        // const projectmasterAddParam = {\r\n        //     screenName: \"IDS_MEMBERS\", operation: \"create\", primaryKeyField: \"nprojectmembercode\",\r\n        //     masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: addteammembersId\r\n        // };\r\n\r\n        // const projectmasterDeleteParam = {\r\n\r\n        //     //    screenName: \"IDS_MEMBERS\", methodUrl: \"ProjectMember\", operation: \"delete\", ncontrolCode: deleteteammembersId \r\n\r\n        //     screenName: \"IDS_MEMBERS\", operation: \"delete\", primaryKeyField: \"nprojectmembercode\",\r\n        //     masterData: this.props.masterData, userInfo: this.props.userInfo, ncontrolCode: deleteteammembersId\r\n        // };\r\n\r\n        const tabMap = new Map();\r\n\r\n        tabMap.set(\"IDS_DETAILS\", <QuotationDetailTab\r\n\r\n            userRoleControlRights={this.props.userRoleControlRights}\r\n            controlMap={this.props.controlMap}\r\n            inputParam={this.props.inputParam}\r\n            userInfo={this.props.userInfo}\r\n            addTitleIDS={\"IDS_DETAILS\"}\r\n            addTitleDefaultMsg={'Details'}\r\n            primaryKeyField={\"nquotationtestcode\"}\r\n            masterData={this.props.masterData}\r\n            primaryList={\"Details\"}\r\n            dataResult={this.props.dataResult}\r\n            dataState={this.props.dataState}\r\n            dataStateChange={this.props.dataStateChange}\r\n            columnList={this.quotationdetailColumnList}\r\n            deleteRecord={this.props.deleteRecord}\r\n            // deleteParam={projectmasterDeleteParam} --\r\n            addQuotationTestId={addQuotationTestId}\r\n            updateQuotationTestId={updateQuotationTestId}\r\n            editTestPriceParam={this.props.editParam}\r\n            data={this.props.data}\r\n            // getQuotationPricingEditService={this.props.fetchRecord}\r\n            selectedId={this.props.selectedId}\r\n            getQuotationAddTestService={this.props.getQuotationAddTestService}\r\n            getQuotationPricingEditService={this.props.getQuotationPricingEditService}\r\n           \r\n\r\n        />)\r\n\r\n        tabMap.set(\"IDS_ESTIMATION\", <QuotationVATCalculationTab\r\n\r\n            userInfo={this.props.userInfo}\r\n            addTitleIDS={\"IDS_ESTIMATION\"}\r\n            addTitleDefaultMsg={'Estimation'}\r\n            primaryKeyField={\"nquotationtestcode\"}\r\n            primaryList={\"Estimation\"}     \r\n            grossQuotationeId={grossQuotationeId}\r\n            selectedQuotation={this.props.selectedQuotation}\r\n            userRoleControlRights={this.props.userRoleControlRights}\r\n            GrossQuotation={this.props.GrossQuotation}\r\n            EstimateQuotation={this.props.EstimateQuotation}\r\n\r\n        />)\r\n\r\n        tabMap.set(\"IDS_HISTORY\", <QuotationHistoryTab\r\n\r\n        controlMap={this.props.controlMap}\r\n        userRoleControlRights={this.props.userRoleControlRights}\r\n        userInfo={this.props.userInfo}\r\n        inputParam={this.props.inputParam}\r\n        // screenName=\"IDS_FILE\"\r\n        QuotationHistorydata={this.props.QuotationHistorydata}\r\n        QuotationHistorydataResult={this.props.QuotationHistorydataResult}\r\n        dataState={this.props.dataState}\r\n        historydataStateChange={this.props.historydataStateChange}\r\n\r\n    />);\r\n  \r\n        return tabMap;\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n\r\n        let loadEsign = this.props.loadEsign;\r\n        let openChildModal = this.props.openChildModal;\r\n        let selectedRecord = this.props.selectedRecord;\r\n        //    let selectedRecord = this.state.selectedRecord;\r\n        if (this.props.loadEsign) {\r\n            if (this.props.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openChildModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = '';\r\n                selectedRecord['esigncomments'] = '';\r\n                selectedRecord['esignreason'] = '';\r\n            }\r\n        }\r\n        else {\r\n            openChildModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openChildModal, loadEsign, selectedRecord }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.userInfo,\r\n                    sreason: this.props.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.props.selectedRecord[\"esignreason\"] && this.props.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.props.selectedRecord[\"esignreason\"] && this.props.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.props.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openChildModal\");\r\n    }\r\n}\r\n\r\n\r\nexport default injectIntl(QuotationTab);\r\n\r\n"]},"metadata":{},"sourceType":"module"}