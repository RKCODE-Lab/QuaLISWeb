{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{FormattedMessage,injectIntl}from'react-intl';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{TagLine}from\"../../components/login/login.styles\";import{transactionStatus}from'../../components/Enumeration';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var EsignStateHandle=/*#__PURE__*/function(_React$Component){_inherits(EsignStateHandle,_React$Component);var _super=_createSuper(EsignStateHandle);function EsignStateHandle(props){var _this;_classCallCheck(this,EsignStateHandle);_this=_super.call(this,props);_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});_this.props.childDataChange(selectedRecord);};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord;if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});_this.props.childDataChange(selectedRecord);};_this.state={selectedRecord:_objectSpread(_objectSpread({},_this.props.selectedRecord),{},{'esignpassword':\"\",'esigncomments':\"\",'esignreason':\"\"})};return _this;}_createClass(EsignStateHandle,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"sloginid\",type:\"text\",label:this.props.intl.formatMessage({id:\"IDS_LOGINID\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_LOGINID\"}),defaultValue:this.props.inputParam&&this.props.inputParam.inputData&&(this.props.inputParam.inputData.userinfo[\"sdeputyid\"]||\"\"),isMandatory:false,required:false,maxLength:20,readOnly:true,onChange:function onChange(event){return _this2.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"esignpassword\",type:\"password\",label:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),isMandatory:true,required:true,maxLength:50,onChange:function onChange(event){return _this2.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"esignreason\",formLabel:this.props.intl.formatMessage({id:\"IDS_REASON\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.props.Login.esignReasonList||[]// value = {this.props.selectedRecord[\"esignreason\"] ? this.props.selectedRecord[\"esignreason\"] : \"\"}\n,isMandatory:true,isMulti:false,isClearable:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.onComboChange(event,\"esignreason\");}}),/*#__PURE__*/React.createElement(FormTextarea,{name:\"esigncomments\",label:this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_COMMENTS\"}),rows:\"2\",isMandatory:true,required:true,maxLength:255,onChange:function onChange(event){return _this2.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(DateTimePicker,{name:\"esigndate\",label:this.props.intl.formatMessage({id:\"IDS_ESIGNDATE\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.props.Login.serverTime,dateFormat:this.props.Login.userInfo.ssitedatetime,isClearable:false,readOnly:true}),/*#__PURE__*/React.createElement(TagLine,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ELECTRONICSIGN\"}),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ESIGNTEXT\"})),/*#__PURE__*/React.createElement(CustomSwitch,{name:\"agree\",type:\"switch\",label:this.props.intl.formatMessage({id:\"IDS_AGREE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_AGREE\"})// defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\n,isMandatory:true,required:true,checked:this.state.selectedRecord&&this.state.selectedRecord.agree?this.state.selectedRecord.agree===transactionStatus.YES?true:false:true,onChange:function onChange(event){return _this2.onInputOnChange(event);}})));}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var selectedRecord=this.state.selectedRecord;delete selectedRecord['esignpassword'];delete selectedRecord['esigncomments'];delete selectedRecord['esignreason'];delete selectedRecord['agree'];this.setState({selectedRecord:selectedRecord});this.props.childDataChange(selectedRecord);}}]);return EsignStateHandle;}(React.Component);export default connect(mapStateToProps,{})(injectIntl(EsignStateHandle));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/audittrail/EsignStateHandle.jsx"],"names":["React","connect","Row","Col","FormInput","FormTextarea","CustomSwitch","FormattedMessage","injectIntl","DateTimePicker","TagLine","transactionStatus","FormSelectSearch","mapStateToProps","state","Login","EsignStateHandle","props","onComboChange","comboData","fieldName","selectedRecord","setState","childDataChange","onInputOnChange","event","target","type","name","checked","YES","NO","value","intl","formatMessage","id","inputParam","inputData","userinfo","esignReasonList","serverTime","userInfo","ssitedatetime","agree","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { TagLine } from \"../../components/login/login.styles\";\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass EsignStateHandle extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedRecord: {\r\n                ...this.props.selectedRecord,\r\n                'esignpassword': \"\",\r\n                'esigncomments': \"\",\r\n                'esignreason': \"\"\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Row>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        name={\"sloginid\"}\r\n                        type=\"text\"\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_LOGINID\" })}\r\n                        defaultValue={this.props.inputParam && this.props.inputParam.inputData\r\n                            && (this.props.inputParam.inputData.userinfo[\"sdeputyid\"] || \"\")}\r\n                        isMandatory={false}\r\n                        required={false}\r\n                        maxLength={20}\r\n                        readOnly={true}\r\n                        onChange={(event) => this.onInputOnChange(event)}\r\n                    />\r\n\r\n                    <FormInput\r\n                        name={\"esignpassword\"}\r\n                        type=\"password\"\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={50}\r\n                        onChange={(event) => this.onInputOnChange(event)}\r\n                    />\r\n\r\n                    <FormSelectSearch\r\n                        name={\"esignreason\"}\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_REASON\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={this.props.Login.esignReasonList || []}\r\n                        // value = {this.props.selectedRecord[\"esignreason\"] ? this.props.selectedRecord[\"esignreason\"] : \"\"}\r\n                        isMandatory={true}\r\n                        isMulti={false}\r\n                        isClearable={false}\r\n                        isSearchable={true}\r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        onChange={(event) => this.onComboChange(event, \"esignreason\")}\r\n                    />\r\n\r\n                    <FormTextarea\r\n                        name={\"esigncomments\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                        rows=\"2\"\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        maxLength={255}\r\n                        onChange={(event) => this.onInputOnChange(event)}\r\n                    />\r\n\r\n                    <DateTimePicker\r\n                        name={\"esigndate\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_ESIGNDATE\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={this.props.Login.serverTime}\r\n                        dateFormat={this.props.Login.userInfo.ssitedatetime}\r\n                        isClearable={false}\r\n                        readOnly={true}\r\n                    />\r\n\r\n                    <TagLine>\r\n                        <FormattedMessage id=\"IDS_ELECTRONICSIGN\"></FormattedMessage><br />\r\n                        <FormattedMessage id=\"IDS_ESIGNTEXT\"></FormattedMessage>\r\n                    </TagLine>\r\n\r\n                    <CustomSwitch\r\n                        name={\"agree\"}\r\n                        type=\"switch\"\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_AGREE\" })}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_AGREE\" })}\r\n                        // defaultValue ={ this.props.selectedRecord[\"agree\"] === transactionStatus.NO ? false :true }\r\n                        isMandatory={true}\r\n                        required={true}\r\n                        checked={this.state.selectedRecord && this.state.selectedRecord.agree ? this.state.selectedRecord.agree === transactionStatus.YES ? true : false : true}\r\n                        onChange={(event) => this.onInputOnChange(event)}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let selectedRecord = this.state.selectedRecord;\r\n        delete (selectedRecord['esignpassword'])\r\n        delete (selectedRecord['esigncomments'])\r\n        delete (selectedRecord['esignreason'])\r\n        delete (selectedRecord['agree'])\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(injectIntl(EsignStateHandle));"]},"metadata":{},"sourceType":"module"}