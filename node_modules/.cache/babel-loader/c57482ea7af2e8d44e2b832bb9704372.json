{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { sortData, constructOptionList, rearrangeDateFormat } from '../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { designProperties } from '../components/Enumeration';\nexport function getDesignTemplateMappingDetail(designtemplatemapping, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"designtemplatemapping/getDesignTemplateMapping\", {\n      ndesigntemplatemappingcode: designtemplatemapping.ndesigntemplatemappingcode,\n      nsampletypecode: designtemplatemapping.nsampletypecode,\n      nregtypecode: designtemplatemapping.nregtypecode,\n      nregsubtypecode: designtemplatemapping.nregsubtypecode,\n      \"userinfo\": userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}\nexport function getDesignTemplateMappingComboService(screenName, operation, userInfo, nsampletypecode, nregtypecode, nregsubtypecode, ncontrolCode) {\n  return function (dispatch) {\n    if (operation === \"create\" && nsampletypecode != -1 && nregtypecode != -1 && nregsubtypecode != -1) {\n      const designtemplatemappingService = rsapi.post(\"designtemplatemapping/getDynamicPreRegDesign\", {\n        userinfo: userInfo,\n        nsampletypecode,\n        nregtypecode,\n        nregsubtypecode\n      });\n      let urlArray = [designtemplatemappingService];\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = {};\n        let designtemplatemappingMap = constructOptionList(response[0].data.DesignTemplateMapping || [], \"nreactregtemplatecode\", \"sregtemplatename\", undefined, undefined, true);\n        const designtemplatemappingList = designtemplatemappingMap.get(\"OptionList\");\n        designtemplatemappingMap = constructOptionList(response[0].data.SubSampleTemplate || [], \"nreactregtemplatecode\", \"sregtemplatename\", undefined, undefined, true);\n        const subSampleTemplateList = designtemplatemappingMap.get(\"OptionList\");\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            designtemplatemappingList,\n            subSampleTemplateList,\n            testListFields: response[0].data.TestListFields.jsondata,\n            operation,\n            screenName,\n            selectedRecord,\n            openModal: true,\n            ncontrolCode,\n            loading: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTALLVALUESINFILTER\"\n      }));\n    }\n  };\n}\nexport function reloadDesignTemplateMapping(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"designtemplatemapping/getDesignTemplateMapping\", { ...inputParam.inputData\n    }).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n\n      if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\n        inputParam.searchRef.current.value = \"\";\n        masterData['searchedData'] = undefined;\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          showFilter: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getTMPFilterRegType(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"designtemplatemapping/getTemplateRegType\", inputParam.inputData).then(response => {\n      let masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getTMPFilterRegSubType(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"designtemplatemapping/getTemplateRegSubType\", inputParam.inputData).then(response => {\n      let masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getTMPFilterSubmit(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"designtemplatemapping/getFilterSubmit\", inputParam.inputData).then(response => {\n      let masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      let listdesigntemplatemapping = sortData(response.data.listdesigntemplatemapping);\n      masterData = { ...masterData,\n        listdesigntemplatemapping\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getMappedFieldProps(inputParam) {\n  return function (dispatch) {\n    rsapi.post('designtemplatemapping/getMappedFieldProps', inputParam.inputData).then(response => {\n      let dataResult = {};\n      let designData = response.data.jsondataobj || {};\n      Object.keys(designData).map(formcode => {\n        dataResult[formcode] = [];\n        designData.sampletemplatefields.map(field => !Array.isArray(designData[formcode]) && dataResult[formcode].push({\n          label: field[designProperties.VALUE],\n          sampledisplayfields: designData[formcode].sampledisplayfields.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n          samplelistitem: designData[formcode].samplelistitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n          samplelistmoreitems: designData[formcode].samplelistmoreitems ? designData[formcode].samplelistmoreitems.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined : false,\n          samplegriditem: designData[formcode].samplegriditem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n          samplegridmoreitem: designData[formcode].samplegridmoreitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n          realData: field\n        }));\n      });\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          loading: false,\n          designData: response.data.jsondataobj,\n          dataResult,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolcode: inputParam.ncontrolcode\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/actions/DesignTemplateMappingAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","constructOptionList","rearrangeDateFormat","toast","Axios","initRequest","intl","designProperties","getDesignTemplateMappingDetail","designtemplatemapping","userInfo","masterData","dispatch","post","ndesigntemplatemappingcode","nsampletypecode","nregtypecode","nregsubtypecode","then","response","data","type","payload","loading","catch","error","status","formatMessage","id","message","warn","getDesignTemplateMappingComboService","screenName","operation","ncontrolCode","designtemplatemappingService","userinfo","urlArray","all","selectedRecord","designtemplatemappingMap","DesignTemplateMapping","undefined","designtemplatemappingList","get","SubSampleTemplate","subSampleTemplateList","testListFields","TestListFields","jsondata","openModal","reloadDesignTemplateMapping","inputParam","inputData","responseData","searchRef","current","value","showFilter","getTMPFilterRegType","getTMPFilterRegSubType","getTMPFilterSubmit","listdesigntemplatemapping","getMappedFieldProps","dataResult","designData","jsondataobj","Object","keys","map","formcode","sampletemplatefields","field","Array","isArray","push","label","VALUE","sampledisplayfields","find","val","samplelistitem","samplelistmoreitems","samplegriditem","samplegridmoreitem","realData","ncontrolcode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData, constructOptionList, rearrangeDateFormat } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { designProperties } from '../components/Enumeration';\r\n\r\n\r\nexport function getDesignTemplateMappingDetail(designtemplatemapping, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n\r\n        return rsapi.post(\"designtemplatemapping/getDesignTemplateMapping\", {\r\n            ndesigntemplatemappingcode: designtemplatemapping.ndesigntemplatemappingcode,\r\n            nsampletypecode: designtemplatemapping.nsampletypecode,\r\n            nregtypecode: designtemplatemapping.nregtypecode,\r\n            nregsubtypecode: designtemplatemapping.nregsubtypecode,\r\n            \"userinfo\": userInfo\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getDesignTemplateMappingComboService(screenName, operation, userInfo, nsampletypecode, nregtypecode, nregsubtypecode, ncontrolCode) {\r\n    return function (dispatch) {\r\n\r\n        if ((operation === \"create\") && (nsampletypecode != -1) && (nregtypecode != -1) && (nregsubtypecode != -1)) {\r\n\r\n            const designtemplatemappingService = rsapi.post(\"designtemplatemapping/getDynamicPreRegDesign\", { userinfo: userInfo, nsampletypecode, nregtypecode, nregsubtypecode });\r\n\r\n\r\n            let urlArray = [designtemplatemappingService];\r\n\r\n\r\n\r\n\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n\r\n\r\n                    let selectedRecord = {};\r\n\r\n\r\n                    let designtemplatemappingMap = constructOptionList(response[0].data.DesignTemplateMapping || [], \"nreactregtemplatecode\",\r\n                        \"sregtemplatename\", undefined, undefined, true);\r\n\r\n                    const designtemplatemappingList = designtemplatemappingMap.get(\"OptionList\");\r\n                    designtemplatemappingMap = constructOptionList(response[0].data.SubSampleTemplate || [], \"nreactregtemplatecode\",\r\n                        \"sregtemplatename\", undefined, undefined, true);\r\n\r\n                    const subSampleTemplateList = designtemplatemappingMap.get(\"OptionList\");\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n\r\n                            designtemplatemappingList,\r\n                            subSampleTemplateList,\r\n                            testListFields: response[0].data.TestListFields.jsondata,\r\n                            operation, screenName, selectedRecord, openModal: true,\r\n                            ncontrolCode, loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function reloadDesignTemplateMapping(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"designtemplatemapping/getDesignTemplateMapping\", { ...inputParam.inputData })\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTMPFilterRegType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"designtemplatemapping/getTemplateRegType\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getTMPFilterRegSubType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"designtemplatemapping/getTemplateRegSubType\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getTMPFilterSubmit(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"designtemplatemapping/getFilterSubmit\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                let listdesigntemplatemapping = sortData(response.data.listdesigntemplatemapping);\r\n                masterData = { ...masterData, listdesigntemplatemapping }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\nexport function getMappedFieldProps(inputParam) {\r\n    return function (dispatch) {\r\n        rsapi.post('designtemplatemapping/getMappedFieldProps', inputParam.inputData)\r\n            .then(response => {\r\n                let dataResult = {};\r\n                let designData = response.data.jsondataobj || {}\r\n                Object.keys(designData).map(formcode => {\r\n                    dataResult[formcode] = [];\r\n                    designData.sampletemplatefields.map(field =>\r\n                        !Array.isArray(designData[formcode])&&\r\n                        dataResult[formcode].push({\r\n                            label: field[designProperties.VALUE],\r\n                            sampledisplayfields: designData[formcode].sampledisplayfields.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                            samplelistitem: designData[formcode].samplelistitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                            samplelistmoreitems: designData[formcode].samplelistmoreitems ? designData[formcode].samplelistmoreitems.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined : false,\r\n                            samplegriditem: designData[formcode].samplegriditem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                            samplegridmoreitem: designData[formcode].samplegridmoreitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                            realData : field\r\n                        })\r\n                    )\r\n                })\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        openModal: true,\r\n                        loading: false,\r\n                        designData: response.data.jsondataobj,\r\n                        dataResult,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolcode: inputParam.ncontrolcode\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}