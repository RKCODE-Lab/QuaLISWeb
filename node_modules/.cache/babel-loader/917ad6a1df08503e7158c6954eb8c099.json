{"ast":null,"code":"import _defineProperty from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{ListWrapper}from'../../../components/client-group.styles';import{Row,Col,Nav}from'react-bootstrap';import{toast}from'react-toastify';import{process}from'@progress/kendo-data-query';import{connect}from'react-redux';import{injectIntl}from'react-intl';import{callService,crudMaster,showRegTypeAddScreen,fetchRegTypeById,updateStore,validateEsignCredential}from'../../../actions';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import DataGrid from'../../../components/data-grid/data-grid.component';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import{showEsign,getControlMap}from'../../../components/CommonScript';import Esign from'../../audittrail/Esign';import FormInput from'../../../components/form-input/form-input.component';import{faLanguage}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import AddSynonym from'../../../components/droparea/AddSynonym';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var RegistrationType=/*#__PURE__*/function(_React$Component){_inherits(RegistrationType,_React$Component);var _super=_createSuper(RegistrationType);function RegistrationType(props){var _this;_classCallCheck(this,RegistrationType);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData,event.dataState),dataState:event.dataState});};_this.onSaveClick=function(saveType,formRef){var inputData=[];var selectedId=null;inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;if(_this.state.showSynonym){_this.setState({showSynonym:false});return null;}var languageData={};Object.keys(_this.state.selectedRecord.sregtypename).map(function(item){languageData[item]=_this.state.selectedRecord.sregtypename[item];});if(_this.props.Login.operation===\"update\"){// edit\nselectedId=_this.state.selectedRecord.nregtypecode;dataState=_this.state.dataState;inputData[\"registrationtype\"]={\"nregtypecode\":_this.state.selectedRecord.nregtypecode?_this.state.selectedRecord.nregtypecode:-1,\"nsampletypecode\":_this.state.selectedRecord.nsampletypecode,\"jsondata\":{\"sregtypename\":_this.state.selectedRecord.sregtypename,\"sdescription\":_this.state.selectedRecord.sdescription}};inputData[\"registrationtypeaudit\"]={\"jsonuidata\":_objectSpread({\"sregtypename\":_this.state.selectedRecord.sregtypename['en-US'],\"sdescription\":_this.state.selectedRecord.sdescription,\"ssampletypename\":_this.state.selectedRecord.SampleTypes.label},languageData)};}else{//add               \ninputData[\"registrationtype\"]={\"nsampletypecode\":_this.state.selectedRecord.nsampletypecode?_this.state.selectedRecord.nsampletypecode:-1,\"jsondata\":{\"sregtypename\":_this.state.selectedRecord.sregtypename,\"sdescription\":_this.state.selectedRecord.sdescription}};inputData[\"registrationtypeaudit\"]={\"jsonuidata\":_objectSpread({\"sregtypename\":_this.state.selectedRecord.sregtypename['en-US'],\"sdescription\":_this.state.selectedRecord.sdescription,\"ssampletypename\":_this.state.selectedRecord.SampleTypes.item.ssampletypename},languageData)};}var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:inputData,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef,dataState:dataState,selectedId:selectedId,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,dataState:_this.state.dataState,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',inputData:{\"registrationtype\":deleteParam.selectedRecord,\"userinfo\":_this.props.Login.userInfo},operation:deleteParam.operation,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:deleteParam.operation,openModal:true,screenName:_this.props.Login.inputParam.displayName,optionsSampleType:_this.props.Login.optionsSampleType//,\n}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.reloadData=function(){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onInputOnChange=function(event,name){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;}else{if(name==='synonym'){selectedRecord['sregtypename']=_objectSpread(_objectSpread({},selectedRecord['sregtypename']),{},_defineProperty({},event.target.name,event.target.value));}else if(name==='sregtypename'){var langArray=_this.props.Login.languageList;var langDataObject={};langArray.map(function(item){return langDataObject[item.value]=event.target.value;});selectedRecord['sregtypename']=_objectSpread(_objectSpread({},selectedRecord['sregtypename']),langDataObject);}else{selectedRecord[event.target.name]=event.target.value;}}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var _ref=_this.state||{},selectedRecord=_ref.selectedRecord;if(comboData){fieldName='nsampletypecode';selectedRecord['SampleTypes']=comboData;selectedRecord[fieldName]=comboData.value;}else{fieldName='nsampletypecode';selectedRecord['SampleTypes']=comboData;selectedRecord[fieldName]=\"\";}_this.setState({selectedRecord:selectedRecord});};_this.formRef=React.createRef();_this.extractedColumnList=[];_this.handleClose=_this.handleClose.bind(_assertThisInitialized(_this));var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},userRoleControlRights:[],controlMap:new Map(),dataResult:[],dataState:_dataState,action:\"\",mandatoryFields:[{\"idsName\":\"IDS_SAMPLETYPE\",\"dataField\":\"SampleTypes\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_REGISTRATIONTYPE\",\"dataField\":\"sregtypename\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\",\"ismultilingual\":\"true\"}//{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\n]};return _this;}_createClass(RegistrationType,[{key:\"handleClose\",value://to close side out\nfunction handleClose(){var loadEsign=this.props.Login.loadEsign;var openModal=this.props.Login.openModal;var selectedRecord=this.props.Login.selectedRecord;var selectedId=this.props.Login.selectedId;if(this.state.showSynonym){this.setState({showSynonym:false});return null;}if(this.props.Login.loadEsign){if(this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;}else{loadEsign=false;}}else{openModal=false;selectedRecord={};selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,optionsChecklistComponent:[],optionsSampleType:[],selectedId:selectedId}};this.props.updateStore(updateInfo);}},{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";if(this.props.Login.inputParam!==undefined){this.extractedColumnList=[{\"idsName\":\"IDS_SAMPLETYPE\",\"dataField\":\"ssampletypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_REGISTRATIONTYPE\",\"dataField\":\"sregtypename\",\"width\":\"250px\"},{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\",\"width\":\"150px\"}];primaryKeyField=\"nregtypecode\";}var addID=this.props.Login.inputParam&&this.state.controlMap.has(\"AddRegistrationType\")&&this.state.controlMap.get('AddRegistrationType').ncontrolcode;var editId=this.props.Login.inputParam&&this.state.controlMap.has(\"EditRegistrationType\")&&this.state.controlMap.get('EditRegistrationType').ncontrolcode;var editParam={screenName:\"RegistrationType\",operation:\"update\",primaryKeyField:primaryKeyField,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:editId};var deleteParam={screenName:\"RegistrationType\",methodUrl:\"RegistrationType\",operation:\"delete\",key:'registrationtype'};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,fetchRecord:this.props.fetchRegTypeById,deleteRecord:this.deleteRecord,reloadData:this.reloadData,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,editParam:editParam,deleteParam:deleteParam,pageable:true,isActionRequired:true,isToolBarRequired:true,gridHeight:'600px',scrollable:\"scrollable\",selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.showRegTypeAddScreen(_this2.props.Login.userInfo,addID);}}):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:this.props.Login.inputParam.displayName,closeModal:this.handleClose,show:this.props.Login.openModal,showSaveContinue:false,hideSave:this.state.showSynonym,closeLabel:this.state.showSynonym?\"IDS_CLOSE\":undefined,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord,mandatoryFields:this.state.mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation?this.props.Login.operation:'',onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.state.showSynonym?/*#__PURE__*/React.createElement(AddSynonym,{selectedFieldRecord:this.state.selectedRecord,onInputOnChange:this.onInputOnChange,languages:this.props.Login.languageList||[],fieldName:\"sregtypename\",maxLength:100}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsampletypecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_SAMPLETYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),value:this.state.selectedRecord.SampleTypes?this.state.selectedRecord.SampleTypes:[],options:this.props.Login.optionsSampleType?this.props.Login.optionsSampleType:[],optionId:\"nsampletypecode\",optionValue:\"ssampletypename\",isMandatory:true,required:true,as:\"select\",onChange:function onChange(event){return _this2.onComboChange(event,\"nsampletypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:11},/*#__PURE__*/React.createElement(FormInput,{name:this.props.Login.language,placeholder:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPE\"}),onChange:function onChange(event){return _this2.onInputOnChange(event,'sregtypename');},className:\"\",isMandatory:true,label:this.props.intl.formatMessage({id:\"IDS_REGISTRATIONTYPE\"}),required:true,value:this.state.selectedRecord.sregtypename?this.state.selectedRecord.sregtypename[this.props.Login.language]:\"\",maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:1,className:\"p-0\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"addsynonym\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADDSYNONYMN\"})// data-for=\"tooltip_list_wrap\"\n// hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\n,className:\"btn btn-circle outline-grey mr-2\",onClick:function onClick(e){return _this2.setState({showSynonym:true});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faLanguage}))),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sdescription\",placeholder:this.props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),onChange:function onChange(event){return _this2.onInputOnChange(event);},isMandatory:false,rows:\"1\",label:this.props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),type:\"textarea\",value:this.state.selectedRecord?this.state.selectedRecord.sdescription:\"\",maxLength:\"255\"})))}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{//ALPD-3788 Blank page occurs while click the registration type screen for specific scenario..\nif(this.props.Login.operation===\"create\"&&this.props.Login.inputParam!==undefined&&this.props.Login.inputParam.saveType===2){this.props.Login.inputParam.formRef.current.reset();}var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState,selectedRecord:{sregtypename:'',sdescription:''}});}}else if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){var mandatoryFields=this.props.Login.mandatoryFields?this.props.Login.mandatoryFields:[{\"idsName\":\"IDS_SAMPLETYPE\",\"dataField\":\"SampleTypes\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"textbox\",\"ismultilingual\":\"false\"},{\"idsName\":\"IDS_REGISTRATIONTYPE\",\"dataField\":\"sregtypename\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\",\"ismultilingual\":\"true\"}//{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\n];this.setState({selectedRecord:this.props.Login.selectedRecord,mandatoryFields:mandatoryFields});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return RegistrationType;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,showRegTypeAddScreen:showRegTypeAddScreen,fetchRegTypeById:fetchRegTypeById,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(RegistrationType));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/dynamicpreregdesign/registrationtype/RegistrationType.jsx"],"names":["React","ListWrapper","Row","Col","Nav","toast","process","connect","injectIntl","callService","crudMaster","showRegTypeAddScreen","fetchRegTypeById","updateStore","validateEsignCredential","DEFAULT_RETURN","DataGrid","FormTextarea","FormSelectSearch","SlideOutModal","showEsign","getControlMap","Esign","FormInput","faLanguage","FontAwesomeIcon","AddSynonym","mapStateToProps","state","Login","RegistrationType","props","dataStateChange","event","setState","dataResult","masterData","dataState","onSaveClick","saveType","formRef","inputData","selectedId","userInfo","undefined","showSynonym","languageData","Object","keys","selectedRecord","sregtypename","map","item","operation","nregtypecode","nsampletypecode","sdescription","SampleTypes","label","ssampletypename","inputParam","methodUrl","classUrl","displayName","userRoleControlRights","nformcode","ncontrolcode","updateInfo","typeName","data","loadEsign","screenData","deleteRecord","deleteParam","ncontrolCode","openModal","screenName","optionsSampleType","reloadData","userinfo","validateEsign","sreason","nreasoncode","value","spredefinedreason","password","onInputOnChange","name","target","type","checked","langArray","languageList","langDataObject","onComboChange","comboData","fieldName","createRef","extractedColumnList","handleClose","bind","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","action","mandatoryFields","optionsChecklistComponent","primaryKeyField","addID","has","get","editId","editParam","key","intl","formatMessage","id","language","e","previousProps","values","push","current","reset","modalName","warn","Component"],"mappings":"uxCAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,WAAT,KAA4B,yCAA5B,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,KAA8B,iBAA9B,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,WAAT,CAAsBC,UAAtB,CAAkCC,oBAAlC,CAAwDC,gBAAxD,CAA0EC,WAA1E,CAAuFC,uBAAvF,KAAsH,kBAAtH,CACA,OAASC,cAAT,KAA+B,6BAA/B,CACA,MAAOC,CAAAA,QAAP,KAAqB,mDAArB,CACA,MAAOC,CAAAA,YAAP,KAAyB,2DAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,qEAA7B,CACA,MAAOC,CAAAA,aAAP,KAA0B,mDAA1B,CACA,OAASC,SAAT,CAAoBC,aAApB,KAAyC,kCAAzC,CACA,MAAOC,CAAAA,KAAP,KAAkB,wBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,qDAAtB,CACA,OAASC,UAAT,KAA2B,mCAA3B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,yCAAvB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAEC,KAAK,CAAED,KAAK,CAACC,KAAf,CAAR,CACH,CAFD,C,GAIMC,CAAAA,gB,gIACF,0BAAYC,KAAZ,CAAmB,kDACf,uBAAMA,KAAN,EADe,MAqBnBC,eArBmB,CAqBD,SAACC,KAAD,CAAW,CACzB,MAAKC,QAAL,CAAc,CACVC,UAAU,CAAE7B,OAAO,CAAC,MAAKyB,KAAL,CAAWF,KAAX,CAAiBO,UAAlB,CAA8BH,KAAK,CAACI,SAApC,CADT,CAEVA,SAAS,CAAEJ,KAAK,CAACI,SAFP,CAAd,EAIH,CA1BkB,OAgEnBC,WAhEmB,CAgEL,SAACC,QAAD,CAAWC,OAAX,CAAuB,CACjC,GAAIC,CAAAA,SAAS,CAAG,EAAhB,CACA,GAAIC,CAAAA,UAAU,CAAG,IAAjB,CACAD,SAAS,CAAC,UAAD,CAAT,CAAwB,MAAKV,KAAL,CAAWF,KAAX,CAAiBc,QAAzC,CACA,GAAIN,CAAAA,SAAS,CAAGO,SAAhB,CACA,GAAI,MAAKhB,KAAL,CAAWiB,WAAf,CAA4B,CACxB,MAAKX,QAAL,CAAc,CAAEW,WAAW,CAAE,KAAf,CAAd,EACA,MAAO,KAAP,CACH,CACD,GAAMC,CAAAA,YAAY,CAAC,EAAnB,CACAC,MAAM,CAACC,IAAP,CAAY,MAAKpB,KAAL,CAAWqB,cAAX,CAA0BC,YAAtC,EAAoDC,GAApD,CAAwD,SAAAC,IAAI,CAAE,CAC1DN,YAAY,CAACM,IAAD,CAAZ,CAAoB,MAAKxB,KAAL,CAAWqB,cAAX,CAA0BC,YAA1B,CAAuCE,IAAvC,CAApB,CACH,CAFD,EAGA,GAAI,MAAKrB,KAAL,CAAWF,KAAX,CAAiBwB,SAAjB,GAA+B,QAAnC,CAA6C,CACzC;AACAX,UAAU,CAAG,MAAKd,KAAL,CAAWqB,cAAX,CAA0BK,YAAvC,CACAjB,SAAS,CAAG,MAAKT,KAAL,CAAWS,SAAvB,CACAI,SAAS,CAAC,kBAAD,CAAT,CAAgC,CAC5B,eAAgB,MAAKb,KAAL,CAAWqB,cAAX,CAA0BK,YAA1B,CAAyC,MAAK1B,KAAL,CAAWqB,cAAX,CAA0BK,YAAnE,CAAkF,CAAC,CADvE,CAE5B,kBAAmB,MAAK1B,KAAL,CAAWqB,cAAX,CAA0BM,eAFjB,CAG5B,WAAY,CACR,eAAgB,MAAK3B,KAAL,CAAWqB,cAAX,CAA0BC,YADlC,CAER,eAAgB,MAAKtB,KAAL,CAAWqB,cAAX,CAA0BO,YAFlC,CAHgB,CAAhC,CAQAf,SAAS,CAAC,uBAAD,CAAT,CACA,CACI,4BACI,eAAgB,MAAKb,KAAL,CAAWqB,cAAX,CAA0BC,YAA1B,CAAuC,OAAvC,CADpB,CAEI,eAAgB,MAAKtB,KAAL,CAAWqB,cAAX,CAA0BO,YAF9C,CAGI,kBAAmB,MAAK5B,KAAL,CAAWqB,cAAX,CAA0BQ,WAA1B,CAAsCC,KAH7D,EAIOZ,YAJP,CADJ,CADA,CASH,CArBD,IAsBK,CACD;AACAL,SAAS,CAAC,kBAAD,CAAT,CACA,CACI,kBAAmB,MAAKb,KAAL,CAAWqB,cAAX,CAA0BM,eAA1B,CAA4C,MAAK3B,KAAL,CAAWqB,cAAX,CAA0BM,eAAtE,CAAwF,CAAC,CADhH,CAEI,WAAY,CACR,eAAgB,MAAK3B,KAAL,CAAWqB,cAAX,CAA0BC,YADlC,CAER,eAAgB,MAAKtB,KAAL,CAAWqB,cAAX,CAA0BO,YAFlC,CAFhB,CADA,CASAf,SAAS,CAAC,uBAAD,CAAT,CACA,CACI,4BACI,eAAgB,MAAKb,KAAL,CAAWqB,cAAX,CAA0BC,YAA1B,CAAuC,OAAvC,CADpB,CAEI,eAAgB,MAAKtB,KAAL,CAAWqB,cAAX,CAA0BO,YAF9C,CAGI,kBAAmB,MAAK5B,KAAL,CAAWqB,cAAX,CAA0BQ,WAA1B,CAAsCL,IAAtC,CAA2CO,eAHlE,EAIOb,YAJP,CADJ,CADA,CAUH,CAED,GAAMc,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BC,SADxB,CAEfC,QAAQ,CAAE,MAAK/B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BE,QAFvB,CAGfC,WAAW,CAAE,MAAKhC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,WAA5B,CAA0C,MAAKhC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,WAAtE,CAAoF,EAHlF,CAIftB,SAAS,CAAEA,SAJI,CAKfY,SAAS,CAAE,MAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,SALb,CAMfd,QAAQ,CAARA,QANe,CAMLC,OAAO,CAAPA,OANK,CAMIH,SAAS,CAATA,SANJ,CAMeK,UAAU,CAAVA,UANf,CAOfO,cAAc,kBAAK,MAAKrB,KAAL,CAAWqB,cAAhB,CAPC,CAAnB,CASA,GAAMb,CAAAA,UAAU,CAAG,MAAKL,KAAL,CAAWF,KAAX,CAAiBO,UAApC,CAEA,GAAIhB,SAAS,CAAC,MAAKW,KAAL,CAAWF,KAAX,CAAiBmC,qBAAlB,CAAyC,MAAKjC,KAAL,CAAWF,KAAX,CAAiBc,QAAjB,CAA0BsB,SAAnE,CAA8E,MAAKlC,KAAL,CAAWF,KAAX,CAAiBqC,YAA/F,CAAb,CAA2H,CACvH,GAAMC,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAErD,cADK,CAEfsD,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CAAEX,UAAU,CAAVA,UAAF,CAAcxB,UAAU,CAAVA,UAAd,CAD3B,CACuDG,QAAQ,CAARA,QADvD,CAFS,CAAnB,CAMA,MAAKR,KAAL,CAAWlB,WAAX,CAAuBsD,UAAvB,EACH,CARD,IASK,CACD,MAAKpC,KAAL,CAAWrB,UAAX,CAAsBkD,UAAtB,CAAkCxB,UAAlC,CAA8C,WAA9C,EACH,CAEJ,CAlJkB,OAsJnBoC,YAtJmB,CAsJJ,SAACC,WAAD,CAAiB,CAC5B,GAAMb,CAAAA,UAAU,CAAG,CACfC,SAAS,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BC,SADxB,CAEfC,QAAQ,CAAE,MAAK/B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BE,QAFvB,CAGfzB,SAAS,CAAE,MAAKT,KAAL,CAAWS,SAHP,CAIf0B,WAAW,CAAE,MAAKhC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,WAA5B,CAA0C,MAAKhC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,WAAtE,CAAoF,EAJlF,CAKftB,SAAS,CAAE,CACP,mBAAoBgC,WAAW,CAACxB,cADzB,CAEP,WAAY,MAAKlB,KAAL,CAAWF,KAAX,CAAiBc,QAFtB,CALI,CASfU,SAAS,CAAEoB,WAAW,CAACpB,SATR,CAUfJ,cAAc,kBAAK,MAAKrB,KAAL,CAAWqB,cAAhB,CAVC,CAAnB,CAaA,GAAMb,CAAAA,UAAU,CAAG,MAAKL,KAAL,CAAWF,KAAX,CAAiBO,UAApC,CAEA,GAAIhB,SAAS,CAAC,MAAKW,KAAL,CAAWF,KAAX,CAAiBmC,qBAAlB,CAAyC,MAAKjC,KAAL,CAAWF,KAAX,CAAiBc,QAAjB,CAA0BsB,SAAnE,CAA8EQ,WAAW,CAACC,YAA1F,CAAb,CAAsH,CAClH,GAAMP,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAErD,cADK,CAEfsD,IAAI,CAAE,CACFC,SAAS,CAAE,IADT,CACeC,UAAU,CAAE,CAAEX,UAAU,CAAVA,UAAF,CAAcxB,UAAU,CAAVA,UAAd,CAD3B,CACuDiB,SAAS,CAAEoB,WAAW,CAACpB,SAD9E,CACyFsB,SAAS,CAAE,IADpG,CAEFC,UAAU,CAAE,MAAK7C,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,WAFtC,CAEmDc,iBAAiB,CAAE,MAAK9C,KAAL,CAAWF,KAAX,CAAiBgD,iBAAiB;AAFxG,CAFS,CAAnB,CAOA,MAAK9C,KAAL,CAAWlB,WAAX,CAAuBsD,UAAvB,EACH,CATD,IAUK,CACD,MAAKpC,KAAL,CAAWrB,UAAX,CAAsBkD,UAAtB,CAAkCxB,UAAlC,CAA8C,WAA9C,EACH,CACJ,CAnLkB,OAsLnB0C,UAtLmB,CAsLN,UAAM,CACf,GAAMlB,CAAAA,UAAU,CAAG,CACfnB,SAAS,CAAE,CAAEsC,QAAQ,CAAE,MAAKhD,KAAL,CAAWF,KAAX,CAAiBc,QAA7B,CADI,CAEfkB,SAAS,CAAE,MAAK9B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BC,SAFxB,CAGfC,QAAQ,CAAE,MAAK/B,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BE,QAHvB,CAIfC,WAAW,CAAE,MAAKhC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,WAA5B,CAA0C,MAAKhC,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,WAAtE,CAAoF,EAJlF,CAKfpB,QAAQ,CAAE,MAAKZ,KAAL,CAAWF,KAAX,CAAiBc,QALZ,CAAnB,CAQA,MAAKZ,KAAL,CAAWtB,WAAX,CAAuBmD,UAAvB,EACH,CAhMkB,OAkMnBoB,aAlMmB,CAkMH,UAAM,CAClB,GAAMpB,CAAAA,UAAU,CAAG,CACfnB,SAAS,CAAE,CACP,0CACO,MAAKV,KAAL,CAAWF,KAAX,CAAiBc,QADxB,MAEIsC,OAAO,CAAE,MAAKrD,KAAL,CAAWqB,cAAX,CAA0B,eAA1B,CAFb,CAGIiC,WAAW,CAAC,MAAKtD,KAAL,CAAWqB,cAAX,CAA0B,aAA1B,GAA4C,MAAKrB,KAAL,CAAWqB,cAAX,CAA0B,aAA1B,EAAyCkC,KAHrG,CAIIC,iBAAiB,CAAC,MAAKxD,KAAL,CAAWqB,cAAX,CAA0B,aAA1B,GAA4C,MAAKrB,KAAL,CAAWqB,cAAX,CAA0B,aAA1B,EAAyCS,KAJ3G,EADO,CAQP2B,QAAQ,CAAE,MAAKzD,KAAL,CAAWqB,cAAX,CAA0B,eAA1B,CARH,CADI,CAWfsB,UAAU,CAAE,MAAKxC,KAAL,CAAWF,KAAX,CAAiB0C,UAXd,CAAnB,CAaA,MAAKxC,KAAL,CAAWjB,uBAAX,CAAmC8C,UAAnC,CAA+C,WAA/C,EACH,CAjNkB,OAyanB0B,eAzamB,CAyaD,SAACrD,KAAD,CAAQsD,IAAR,CAAiB,CAC/B,GAAItC,CAAAA,cAAc,CAAG,MAAKrB,KAAL,CAAWqB,cAAX,EAA6B,EAAlD,CACA,GAAIhB,KAAK,CAACuD,MAAN,CAAaC,IAAb,GAAsB,UAA1B,CAAsC,CAClCxC,cAAc,CAAChB,KAAK,CAACuD,MAAN,CAAaD,IAAd,CAAd,CAAoCtD,KAAK,CAACuD,MAAN,CAAaE,OAAb,GAAyB,IAAzB,CAAgC,CAAhC,CAAoC,CAAxE,CACH,CAFD,IAGK,CACD,GAAIH,IAAI,GAAK,SAAb,CAAwB,CACpBtC,cAAc,CAAC,cAAD,CAAd,gCACOA,cAAc,CAAC,cAAD,CADrB,wBAEKhB,KAAK,CAACuD,MAAN,CAAaD,IAFlB,CAEyBtD,KAAK,CAACuD,MAAN,CAAaL,KAFtC,GAIH,CALD,IAMK,IAAII,IAAI,GAAK,cAAb,CAA4B,CAC7B,GAAMI,CAAAA,SAAS,CAAI,MAAK5D,KAAL,CAAWF,KAAX,CAAiB+D,YAApC,CACA,GAAMC,CAAAA,cAAc,CAAG,EAAvB,CACAF,SAAS,CAACxC,GAAV,CAAc,SAAAC,IAAI,QACdyC,CAAAA,cAAc,CAACzC,IAAI,CAAC+B,KAAN,CAAd,CAA6BlD,KAAK,CAACuD,MAAN,CAAaL,KAD5B,EAAlB,EAGAlC,cAAc,CAAC,cAAD,CAAd,gCACOA,cAAc,CAAC,cAAD,CADrB,EAEO4C,cAFP,EAIH,CAVI,IAWA,CACD5C,cAAc,CAAChB,KAAK,CAACuD,MAAN,CAAaD,IAAd,CAAd,CAAoCtD,KAAK,CAACuD,MAAN,CAAaL,KAAjD,CACH,CACJ,CACD,MAAKjD,QAAL,CAAc,CAAEe,cAAc,CAAdA,cAAF,CAAd,EACH,CArckB,OAucnB6C,aAvcmB,CAucH,SAACC,SAAD,CAAYC,SAAZ,CAA0B,CACtC,SAA2B,MAAKpE,KAAL,EAAc,EAAzC,CAAQqB,cAAR,MAAQA,cAAR,CACA,GAAI8C,SAAJ,CAAe,CAEXC,SAAS,CAAG,iBAAZ,CACA/C,cAAc,CAAC,aAAD,CAAd,CAAgC8C,SAAhC,CACA9C,cAAc,CAAC+C,SAAD,CAAd,CAA4BD,SAAS,CAACZ,KAAtC,CACH,CALD,IAMK,CACDa,SAAS,CAAG,iBAAZ,CACA/C,cAAc,CAAC,aAAD,CAAd,CAAgC8C,SAAhC,CACA9C,cAAc,CAAC+C,SAAD,CAAd,CAA4B,EAA5B,CACH,CAED,MAAK9D,QAAL,CAAc,CAAEe,cAAc,CAAdA,cAAF,CAAd,EACH,CAtdkB,CAEf,MAAKT,OAAL,CAAexC,KAAK,CAACiG,SAAN,EAAf,CACA,MAAKC,mBAAL,CAA2B,EAA3B,CACA,MAAKC,WAAL,CAAmB,MAAKA,WAAL,CAAiBC,IAAjB,+BAAnB,CACA,GAAM/D,CAAAA,UAAS,CAAG,CACdgE,IAAI,CAAE,CADQ,CAEdC,IAAI,CAAE,MAAKvE,KAAL,CAAWF,KAAX,CAAiB0E,QAAjB,CAA4BC,QAAQ,CAAC,MAAKzE,KAAL,CAAWF,KAAX,CAAiB0E,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAF9D,CAAlB,CAIA,MAAK3E,KAAL,CAAa,CACTyC,IAAI,CAAE,EADG,CACCoC,YAAY,CAAE,EADf,CACmBC,KAAK,CAAE,EAD1B,CAC8BzD,cAAc,CAAE,EAD9C,CACkDe,qBAAqB,CAAE,EADzE,CAC6E2C,UAAU,CAAE,GAAIC,CAAAA,GAAJ,EADzF,CAETzE,UAAU,CAAE,EAFH,CAGTE,SAAS,CAAEA,UAHF,CAITwE,MAAM,CAAE,EAJC,CAKTC,eAAe,CAAE,CACb,CAAE,UAAW,gBAAb,CAA+B,YAAa,aAA5C,CAA2D,iBAAkB,YAA7E,CAA2F,cAAe,SAA1G,CADa,CAEb,CAAE,UAAW,sBAAb,CAAqC,YAAa,cAAlD,CAAkE,iBAAkB,WAApF,CAAiG,cAAe,SAAhH,CAA0H,iBAAiB,MAA3I,CACA;AAHa,CALR,CAAb,CATe,aAoBlB,C,wDAQD;AACA,sBAAc,CAEV,GAAIxC,CAAAA,SAAS,CAAG,KAAKvC,KAAL,CAAWF,KAAX,CAAiByC,SAAjC,CACA,GAAIK,CAAAA,SAAS,CAAG,KAAK5C,KAAL,CAAWF,KAAX,CAAiB8C,SAAjC,CACA,GAAI1B,CAAAA,cAAc,CAAG,KAAKlB,KAAL,CAAWF,KAAX,CAAiBoB,cAAtC,CACA,GAAIP,CAAAA,UAAU,CAAG,KAAKX,KAAL,CAAWF,KAAX,CAAiBa,UAAlC,CACA,GAAI,KAAKd,KAAL,CAAWiB,WAAf,CAA4B,CACxB,KAAKX,QAAL,CAAc,CAAEW,WAAW,CAAE,KAAf,CAAd,EACA,MAAO,KAAP,CACH,CACD,GAAI,KAAKd,KAAL,CAAWF,KAAX,CAAiByC,SAArB,CAAgC,CAC5B,GAAI,KAAKvC,KAAL,CAAWF,KAAX,CAAiBwB,SAAjB,GAA+B,QAAnC,CAA6C,CACzCiB,SAAS,CAAG,KAAZ,CACAK,SAAS,CAAG,KAAZ,CACH,CAHD,IAIK,CACDL,SAAS,CAAG,KAAZ,CACH,CACJ,CARD,IASK,CACDK,SAAS,CAAG,KAAZ,CACA1B,cAAc,CAAG,EAAjB,CACAP,UAAU,CAAG,IAAb,CACH,CAED,GAAMyB,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAErD,cADK,CAEfsD,IAAI,CAAE,CAAEM,SAAS,CAATA,SAAF,CAAaL,SAAS,CAATA,SAAb,CAAwBrB,cAAc,CAAdA,cAAxB,CAAwC8D,yBAAyB,CAAE,EAAnE,CAAuElC,iBAAiB,CAAE,EAA1F,CAA6FnC,UAAU,CAAVA,UAA7F,CAFS,CAAnB,CAIA,KAAKX,KAAL,CAAWlB,WAAX,CAAuBsD,UAAvB,EACH,C,sBAqKD,iBAAS,iBACL,GAAI6C,CAAAA,eAAe,CAAG,EAAtB,CACA,GAAI,KAAKjF,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,GAAgChB,SAApC,CAA+C,CAC3C,KAAKsD,mBAAL,CAA2B,CACvB,CAAE,UAAW,gBAAb,CAA+B,YAAa,iBAA5C,CAA+D,QAAS,OAAxE,CADuB,CAEvB,CAAE,UAAW,sBAAb,CAAqC,YAAa,cAAlD,CAAkE,QAAS,OAA3E,CAFuB,CAGvB,CAAE,UAAW,iBAAb,CAAgC,YAAa,cAA7C,CAA6D,QAAS,OAAtE,CAHuB,CAA3B,CAKAc,eAAe,CAAG,cAAlB,CACH,CAED,GAAMC,CAAAA,KAAK,CAAG,KAAKlF,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,EAA+B,KAAKhC,KAAL,CAAW+E,UAAX,CAAsBO,GAAtB,CAA0B,qBAA1B,CAA/B,EACP,KAAKtF,KAAL,CAAW+E,UAAX,CAAsBQ,GAAtB,CAA0B,qBAA1B,EAAiDjD,YADxD,CAEA,GAAMkD,CAAAA,MAAM,CAAG,KAAKrF,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,EAA+B,KAAKhC,KAAL,CAAW+E,UAAX,CAAsBO,GAAtB,CAA0B,sBAA1B,CAA/B,EACR,KAAKtF,KAAL,CAAW+E,UAAX,CAAsBQ,GAAtB,CAA0B,sBAA1B,EAAkDjD,YADzD,CAEA,GAAMmD,CAAAA,SAAS,CAAG,CACdzC,UAAU,CAAE,kBADE,CACkBvB,SAAS,CAAE,QAD7B,CACuC2D,eAAe,CAAEA,eADxD,CAEd5E,UAAU,CAAE,KAAKL,KAAL,CAAWF,KAAX,CAAiBO,UAFf,CAE2BO,QAAQ,CAAE,KAAKZ,KAAL,CAAWF,KAAX,CAAiBc,QAFtD,CAEgE+B,YAAY,CAAE0C,MAF9E,CAAlB,CAKA,GAAM3C,CAAAA,WAAW,CAAG,CAAEG,UAAU,CAAE,kBAAd,CAAkCf,SAAS,CAAE,kBAA7C,CAAiER,SAAS,CAAE,QAA5E,CAAsFiE,GAAG,CAAE,kBAA3F,CAApB,CAEA,mBACI,qDACI,oBAAC,GAAD,mBACI,oBAAC,GAAD,mBACI,oBAAC,WAAD,EAAa,SAAS,CAAC,qBAAvB,EACK,KAAK1F,KAAL,CAAWyC,IAAX,cACG,oBAAC,QAAD,EACI,eAAe,CAAE2C,eADrB,CAEI,IAAI,CAAE,KAAKpF,KAAL,CAAWyC,IAFrB,CAGI,UAAU,CAAE,KAAKzC,KAAL,CAAWO,UAH3B,CAII,SAAS,CAAE,KAAKP,KAAL,CAAWS,SAJ1B,CAKI,eAAe,CAAE,KAAKL,eAL1B,CAMI,mBAAmB,CAAE,KAAKkE,mBAN9B,CAOI,WAAW,CAAE,KAAKnE,KAAL,CAAWnB,gBAP5B,CAQI,YAAY,CAAE,KAAK4D,YARvB,CASI,UAAU,CAAE,KAAKM,UATrB,CAUI,UAAU,CAAE,KAAKlD,KAAL,CAAW+E,UAV3B,CAWI,qBAAqB,CAAE,KAAK/E,KAAL,CAAWoC,qBAXtC,CAYI,UAAU,CAAE,KAAKjC,KAAL,CAAWF,KAAX,CAAiB+B,UAZjC,CAaI,QAAQ,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiBc,QAb/B,CAcI,SAAS,CAAE0E,SAdf,CAeI,WAAW,CAAE5C,WAfjB,CAgBI,QAAQ,CAAE,IAhBd,CAiBI,gBAAgB,CAAE,IAjBtB,CAkBI,iBAAiB,CAAE,IAlBvB,CAmBI,UAAU,CAAE,OAnBhB,CAoBI,UAAU,CAAE,YApBhB,CAqBI,UAAU,CAAE,KAAK1C,KAAL,CAAWF,KAAX,CAAiBa,UArBjC,CAsBI,SAAS,CAAE,2BAAM,CAAA,MAAI,CAACX,KAAL,CAAWpB,oBAAX,CAAgC,MAAI,CAACoB,KAAL,CAAWF,KAAX,CAAiBc,QAAjD,CAA2DsE,KAA3D,CAAN,EAtBf,EADH,CAyBK,EA1BV,CADJ,CADJ,CADJ,CAkCK,KAAKlF,KAAL,CAAWF,KAAX,CAAiB8C,SAAjB,cACG,oBAAC,aAAD,EACI,WAAW,CAAE,KAAKrC,WADtB,CAEI,SAAS,CAAE,KAAKP,KAAL,CAAWF,KAAX,CAAiBwB,SAFhC,CAGI,UAAU,CAAE,KAAKtB,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BG,WAH5C,CAII,UAAU,CAAE,KAAKoC,WAJrB,CAKI,IAAI,CAAE,KAAKpE,KAAL,CAAWF,KAAX,CAAiB8C,SAL3B,CAMI,gBAAgB,CAAE,KANtB,CAOI,QAAQ,CAAE,KAAK/C,KAAL,CAAWiB,WAPzB,CAQI,UAAU,CAAE,KAAKjB,KAAL,CAAWiB,WAAX,CAAyB,WAAzB,CAAuCD,SARvD,CASI,UAAU,CAAE,KAAKb,KAAL,CAAWF,KAAX,CAAiB+B,UATjC,CAUI,KAAK,CAAE,KAAK7B,KAAL,CAAWF,KAAX,CAAiByC,SAV5B,CAWI,aAAa,CAAE,KAAKU,aAXxB,CAYI,cAAc,CAAE,KAAKpD,KAAL,CAAWqB,cAZ/B,CAaI,eAAe,CAAE,KAAKrB,KAAL,CAAWkF,eAbhC,CAcI,YAAY,CAAE,KAAK/E,KAAL,CAAWF,KAAX,CAAiByC,SAAjB,cACV,oBAAC,KAAD,EAAO,SAAS,CAAE,KAAKvC,KAAL,CAAWF,KAAX,CAAiBwB,SAAjB,CAA6B,KAAKtB,KAAL,CAAWF,KAAX,CAAiBwB,SAA9C,CAA0D,EAA5E,CACI,eAAe,CAAE,KAAKiC,eAD1B,CAEI,UAAU,CAAE,KAAKvD,KAAL,CAAWF,KAAX,CAAiB+B,UAFjC,CAGI,cAAc,CAAE,KAAKhC,KAAL,CAAWqB,cAAX,EAA6B,EAHjD,EADU,CAMR,KAAKrB,KAAL,CAAWiB,WAAX,cACE,oBAAC,UAAD,EACI,mBAAmB,CAAE,KAAKjB,KAAL,CAAWqB,cADpC,CAEI,eAAe,CAAE,KAAKqC,eAF1B,CAGI,SAAS,CAAE,KAAKvD,KAAL,CAAWF,KAAX,CAAiB+D,YAAjB,EAAiC,EAHhD,CAII,SAAS,CAAC,cAJd,CAKI,SAAS,CAAE,GALf,EADF,cASE,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,gBAAD,EACI,IAAI,CAAE,iBADV,CAEI,SAAS,CAAE,KAAK7D,KAAL,CAAWwF,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,gBAAN,CAA9B,CAFf,CAGI,WAAW,CAAE,KAAK1F,KAAL,CAAWwF,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,kBAAN,CAA9B,CAHjB,CAII,KAAK,CAAE,KAAK7F,KAAL,CAAWqB,cAAX,CAA0BQ,WAA1B,CAAwC,KAAK7B,KAAL,CAAWqB,cAAX,CAA0BQ,WAAlE,CAAgF,EAJ3F,CAKI,OAAO,CAAE,KAAK1B,KAAL,CAAWF,KAAX,CAAiBgD,iBAAjB,CAAqC,KAAK9C,KAAL,CAAWF,KAAX,CAAiBgD,iBAAtD,CAA0E,EALvF,CAMI,QAAQ,CAAC,iBANb,CAOI,WAAW,CAAC,iBAPhB,CAQI,WAAW,CAAE,IARjB,CASI,QAAQ,CAAE,IATd,CAUI,EAAE,CAAE,QAVR,CAWI,QAAQ,CAAE,kBAAC5C,KAAD,QAAW,CAAA,MAAI,CAAC6D,aAAL,CAAmB7D,KAAnB,CAA0B,iBAA1B,CAAX,EAXd,EADJ,CADJ,cAgBI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,SAAD,EACI,IAAI,CAAE,KAAKF,KAAL,CAAWF,KAAX,CAAiB6F,QAD3B,CAEI,WAAW,CAAE,KAAK3F,KAAL,CAAWwF,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CAFjB,CAGI,QAAQ,CAAE,kBAACxF,KAAD,QAAW,CAAA,MAAI,CAACqD,eAAL,CAAqBrD,KAArB,CAA4B,cAA5B,CAAX,EAHd,CAII,SAAS,CAAC,EAJd,CAKI,WAAW,CAAE,IALjB,CAMI,KAAK,CAAE,KAAKF,KAAL,CAAWwF,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,sBAAN,CAA9B,CANX,CAOI,QAAQ,CAAE,IAPd,CAQI,KAAK,CAAE,KAAK7F,KAAL,CAAWqB,cAAX,CAA0BC,YAA1B,CAAyC,KAAKtB,KAAL,CAAWqB,cAAX,CAA0BC,YAA1B,CAAuC,KAAKnB,KAAL,CAAWF,KAAX,CAAiB6F,QAAxD,CAAzC,CAA6G,EARxH,CASI,SAAS,CAAE,KATf,EADJ,CAhBJ,cA6BI,oBAAC,GAAD,EAAK,EAAE,CAAE,CAAT,CAAY,SAAS,CAAC,KAAtB,eACI,oBAAC,GAAD,CAAK,IAAL,EAAU,IAAI,CAAC,YAAf,CACI,WAAU,KAAK3F,KAAL,CAAWwF,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,iBAAN,CAA9B,CACV;AACA;AAHJ,CAII,SAAS,CAAC,kCAJd,CAKI,OAAO,CAAE,iBAACE,CAAD,QAAO,CAAA,MAAI,CAACzF,QAAL,CAAc,CAAEW,WAAW,CAAE,IAAf,CAAd,CAAP,EALb,eAOI,oBAAC,eAAD,EAAiB,IAAI,CAAErB,UAAvB,EAPJ,CADJ,CA7BJ,cAwCI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACI,IAAI,CAAE,cADV,CAEI,WAAW,CAAE,KAAKO,KAAL,CAAWwF,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,iBAAN,CAA9B,CAFjB,CAGI,QAAQ,CAAE,kBAACxF,KAAD,QAAW,CAAA,MAAI,CAACqD,eAAL,CAAqBrD,KAArB,CAAX,EAHd,CAII,WAAW,CAAE,KAJjB,CAKI,IAAI,CAAC,GALT,CAMI,KAAK,CAAE,KAAKF,KAAL,CAAWwF,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,iBAAN,CAA9B,CANX,CAOI,IAAI,CAAC,UAPT,CAQI,KAAK,CAAE,KAAK7F,KAAL,CAAWqB,cAAX,CAA4B,KAAKrB,KAAL,CAAWqB,cAAX,CAA0BO,YAAtD,CAAqE,EARhF,CASI,SAAS,CAAE,KATf,EADJ,CAxCJ,CA7BZ,EADH,CAsFK,EAxHV,CADJ,CA6HH,C,kCAED,4BAAmBoE,aAAnB,CAAkC,CAC9B,GAAI,KAAK7F,KAAL,CAAWF,KAAX,CAAiBO,UAAjB,GAAgCwF,aAAa,CAAC/F,KAAd,CAAoBO,UAAxD,CAAoE,CAChE,GAAI,KAAKL,KAAL,CAAWF,KAAX,CAAiBc,QAAjB,CAA0BsB,SAA1B,GAAwC2D,aAAa,CAAC/F,KAAd,CAAoBc,QAApB,CAA6BsB,SAAzE,CAAoF,CAChF,GAAMD,CAAAA,qBAAqB,CAAG,EAA9B,CACA,GAAI,KAAKjC,KAAL,CAAWF,KAAX,CAAiBmC,qBAArB,CAA4C,CACxC,KAAKjC,KAAL,CAAWF,KAAX,CAAiBmC,qBAAjB,CAAuC,KAAKjC,KAAL,CAAWF,KAAX,CAAiBc,QAAjB,CAA0BsB,SAAjE,GAA+ElB,MAAM,CAAC8E,MAAP,CAAc,KAAK9F,KAAL,CAAWF,KAAX,CAAiBmC,qBAAjB,CAAuC,KAAKjC,KAAL,CAAWF,KAAX,CAAiBc,QAAjB,CAA0BsB,SAAjE,CAAd,EAA2Fd,GAA3F,CAA+F,SAAAC,IAAI,QAC9KY,CAAAA,qBAAqB,CAAC8D,IAAtB,CAA2B1E,IAAI,CAACc,YAAhC,CAD8K,EAAnG,CAA/E,CAEH,CACD,GAAMyC,CAAAA,UAAU,CAAGtF,aAAa,CAAC,KAAKU,KAAL,CAAWF,KAAX,CAAiBmC,qBAAlB,CAAyC,KAAKjC,KAAL,CAAWF,KAAX,CAAiBc,QAAjB,CAA0BsB,SAAnE,CAAhC,CACA,KAAK/B,QAAL,CAAc,CACV8B,qBAAqB,CAArBA,qBADU,CACa2C,UAAU,CAAVA,UADb,CACyBtC,IAAI,CAAE,KAAKtC,KAAL,CAAWF,KAAX,CAAiBO,UADhD,CAEVD,UAAU,CAAE7B,OAAO,CAAC,KAAKyB,KAAL,CAAWF,KAAX,CAAiBO,UAAlB,CAA8B,KAAKR,KAAL,CAAWS,SAAzC,CAFT,CAAd,EAIH,CAXD,IAYK,CACD;AACA,GAAI,KAAKN,KAAL,CAAWF,KAAX,CAAiBwB,SAAjB,GAA+B,QAA/B,EAA2C,KAAKtB,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,GAAgChB,SAA3E,EACA,KAAKb,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BrB,QAA5B,GAAyC,CAD7C,CACgD,CAC5C,KAAKR,KAAL,CAAWF,KAAX,CAAiB+B,UAAjB,CAA4BpB,OAA5B,CAAoCuF,OAApC,CAA4CC,KAA5C,GACH,CACD,GAAM3F,CAAAA,SAAN,CAAoB,KAAKT,KAAzB,CAAMS,SAAN,CACA,GAAI,KAAKN,KAAL,CAAWF,KAAX,CAAiBQ,SAAjB,GAA+BO,SAAnC,CAA8C,CAC1CP,SAAS,CAAG,CAAEgE,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,KAAKvE,KAAL,CAAWF,KAAX,CAAiB0E,QAAjB,CAA4BC,QAAQ,CAAC,KAAKzE,KAAL,CAAWF,KAAX,CAAiB0E,QAAjB,CAA0B,EAA1B,CAAD,CAApC,CAAsE,CAAvF,CAAZ,CACH,CACD,KAAKrE,QAAL,CAAc,CACVmC,IAAI,CAAE,KAAKtC,KAAL,CAAWF,KAAX,CAAiBO,UADb,CAEVD,UAAU,CAAE7B,OAAO,CAAC,KAAKyB,KAAL,CAAWF,KAAX,CAAiBO,UAAlB,CAA8BC,SAA9B,CAFT,CAGVA,SAAS,CAATA,SAHU,CAIVY,cAAc,CAAE,CAAEC,YAAY,CAAE,EAAhB,CAAoBM,YAAY,CAAE,EAAlC,CAJN,CAAd,EAMH,CACJ,CA9BD,IA+BK,IAAI,KAAKzB,KAAL,CAAWF,KAAX,CAAiBoB,cAAjB,GAAoC2E,aAAa,CAAC/F,KAAd,CAAoBoB,cAA5D,CAA4E,CAC7E,GAAI6D,CAAAA,eAAe,CAAG,KAAK/E,KAAL,CAAWF,KAAX,CAAiBiF,eAAjB,CAAoC,KAAK/E,KAAL,CAAWF,KAAX,CAAiBiF,eAArD,CAAwE,CAC1F,CAAE,UAAW,gBAAb,CAA+B,YAAa,aAA5C,CAA2D,iBAAkB,YAA7E,CAA2F,cAAe,SAA1G,CAAoH,iBAAiB,OAArI,CAD0F,CAE1F,CAAE,UAAW,sBAAb,CAAqC,YAAa,cAAlD,CAAkE,iBAAkB,WAApF,CAAiG,cAAe,SAAhH,CAA0H,iBAAiB,MAA3I,CACA;AAH0F,CAA9F,CAKA,KAAK5E,QAAL,CAAc,CAAEe,cAAc,CAAE,KAAKlB,KAAL,CAAWF,KAAX,CAAiBoB,cAAnC,CAAmD6D,eAAe,CAAfA,eAAnD,CAAd,EACH,CACJ,C,oCAED,+BAAuB,CACnB,GAAM3C,CAAAA,UAAU,CAAG,CACfC,QAAQ,CAAErD,cADK,CAEfsD,IAAI,CAAE,CACFjC,UAAU,CAAE,EADV,CACcwB,UAAU,CAAEhB,SAD1B,CACqCS,SAAS,CAAE,IADhD,CACsD4E,SAAS,CAAErF,SADjE,CAFS,CAAnB,CAMA,KAAKb,KAAL,CAAWlB,WAAX,CAAuBsD,UAAvB,EACH,C,0CArND,kCAAgCpC,KAAhC,CAAuCH,KAAvC,CAA8C,CAE1C,GAAIG,KAAK,CAACF,KAAN,CAAY4E,YAAZ,GAA6B7E,KAAK,CAAC6E,YAAvC,CAAqD,CACjDpG,KAAK,CAAC6H,IAAN,CAAWnG,KAAK,CAACF,KAAN,CAAY4E,YAAvB,EACA1E,KAAK,CAACF,KAAN,CAAY4E,YAAZ,CAA2B,EAA3B,CACH,CAED,GAAI1E,KAAK,CAACF,KAAN,CAAY6E,KAAZ,GAAsB9E,KAAK,CAAC8E,KAAhC,CAAuC,CACnCrG,KAAK,CAACqG,KAAN,CAAY3E,KAAK,CAACF,KAAN,CAAY6E,KAAxB,EACA3E,KAAK,CAACF,KAAN,CAAY6E,KAAZ,CAAoB,EAApB,CACH,CACD,MAAO,KAAP,CACH,C,8BA/N0B1G,KAAK,CAACmI,S,EAydrC,cAAe5H,CAAAA,OAAO,CAACoB,eAAD,CAAkB,CACpClB,WAAW,CAAXA,WADoC,CACvBC,UAAU,CAAVA,UADuB,CACXC,oBAAoB,CAApBA,oBADW,CACWC,gBAAgB,CAAhBA,gBADX,CAEpCC,WAAW,CAAXA,WAFoC,CAEvBC,uBAAuB,CAAvBA,uBAFuB,CAAlB,CAAP,CAGZN,UAAU,CAACsB,gBAAD,CAHE,CAAf","sourcesContent":["import React from 'react'\r\nimport { ListWrapper } from '../../../components/client-group.styles'\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { callService, crudMaster, showRegTypeAddScreen, fetchRegTypeById, updateStore, validateEsignCredential } from '../../../actions';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { showEsign, getControlMap } from '../../../components/CommonScript';\r\nimport Esign from '../../audittrail/Esign';\r\nimport FormInput from '../../../components/form-input/form-input.component';\r\nimport { faLanguage } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport AddSynonym from '../../../components/droparea/AddSynonym';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass RegistrationType extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.handleClose = this.handleClose.bind(this);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {}, userRoleControlRights: [], controlMap: new Map(),\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            action: \"\",\r\n            mandatoryFields: [\r\n                { \"idsName\": \"IDS_SAMPLETYPE\", \"dataField\": \"SampleTypes\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_REGISTRATIONTYPE\", \"dataField\": \"sregtypename\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\",\"ismultilingual\":\"true\" },\r\n                //{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            ]\r\n        };\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    //to close side out\r\n    handleClose() {\r\n\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n        if (this.state.showSynonym) {\r\n            this.setState({ showSynonym: false })\r\n            return null;\r\n        }\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId = null;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, optionsChecklistComponent: [], optionsSampleType: [],selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    //to open side out\r\n\r\n    //to perform save action for both add and edit\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let selectedId = null;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n        if (this.state.showSynonym) {\r\n            this.setState({ showSynonym: false })\r\n            return null;\r\n        }\r\n        const languageData={}\r\n        Object.keys(this.state.selectedRecord.sregtypename).map(item=>{\r\n            languageData[item]= this.state.selectedRecord.sregtypename[item]\r\n        })\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            selectedId = this.state.selectedRecord.nregtypecode\r\n            dataState = this.state.dataState\r\n            inputData[\"registrationtype\"] = {\r\n                \"nregtypecode\": this.state.selectedRecord.nregtypecode ? this.state.selectedRecord.nregtypecode : -1,\r\n                \"nsampletypecode\": this.state.selectedRecord.nsampletypecode,\r\n                \"jsondata\": {\r\n                    \"sregtypename\": this.state.selectedRecord.sregtypename,\r\n                    \"sdescription\": this.state.selectedRecord.sdescription,\r\n                }\r\n            }\r\n            inputData[\"registrationtypeaudit\"] =\r\n            {\r\n                \"jsonuidata\": {\r\n                    \"sregtypename\": this.state.selectedRecord.sregtypename['en-US'],\r\n                    \"sdescription\": this.state.selectedRecord.sdescription,\r\n                    \"ssampletypename\": this.state.selectedRecord.SampleTypes.label,\r\n                    ...languageData,\r\n                },\r\n            }\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"registrationtype\"] =\r\n            {\r\n                \"nsampletypecode\": this.state.selectedRecord.nsampletypecode ? this.state.selectedRecord.nsampletypecode : -1,\r\n                \"jsondata\": {\r\n                    \"sregtypename\": this.state.selectedRecord.sregtypename,\r\n                    \"sdescription\": this.state.selectedRecord.sdescription,\r\n                },\r\n            }\r\n\r\n            inputData[\"registrationtypeaudit\"] =\r\n            {\r\n                \"jsonuidata\": {\r\n                    \"sregtypename\": this.state.selectedRecord.sregtypename['en-US'],\r\n                    \"sdescription\": this.state.selectedRecord.sdescription,\r\n                    \"ssampletypename\": this.state.selectedRecord.SampleTypes.item.ssampletypename,\r\n                    ...languageData,\r\n                    // this.props.Login.languageList.map(item=>item.value:this.state.selectedRecord.sregtypename[item.value])\r\n                },\r\n            }\r\n        }\r\n\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, dataState, selectedId,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n    //to get the edit record\r\n\r\n    //to delete a recoed\r\n    deleteRecord = (deleteParam) => {\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            dataState: this.state.dataState,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            inputData: {\r\n                \"registrationtype\": deleteParam.selectedRecord,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: deleteParam.operation,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, operation: deleteParam.operation, openModal: true,\r\n                    screenName: this.props.Login.inputParam.displayName, optionsSampleType: this.props.Login.optionsSampleType//,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    //to reload data\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        let primaryKeyField = \"\";\r\n        if (this.props.Login.inputParam !== undefined) {\r\n            this.extractedColumnList = [\r\n                { \"idsName\": \"IDS_SAMPLETYPE\", \"dataField\": \"ssampletypename\", \"width\": \"250px\" },\r\n                { \"idsName\": \"IDS_REGISTRATIONTYPE\", \"dataField\": \"sregtypename\", \"width\": \"250px\" },\r\n                { \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sdescription\", \"width\": \"150px\" },\r\n            ]\r\n            primaryKeyField = \"nregtypecode\";\r\n        }\r\n\r\n        const addID = this.props.Login.inputParam && this.state.controlMap.has(\"AddRegistrationType\")\r\n            && this.state.controlMap.get('AddRegistrationType').ncontrolcode;\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"EditRegistrationType\")\r\n            && this.state.controlMap.get('EditRegistrationType').ncontrolcode;\r\n        const editParam = {\r\n            screenName: \"RegistrationType\", operation: \"update\", primaryKeyField: primaryKeyField,\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n        const deleteParam = { screenName: \"RegistrationType\", methodUrl: \"RegistrationType\", operation: \"delete\", key: 'registrationtype' };\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={primaryKeyField}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    fetchRecord={this.props.fetchRegTypeById}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    reloadData={this.reloadData}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    editParam={editParam}\r\n                                    deleteParam={deleteParam}\r\n                                    pageable={true}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    gridHeight={'600px'}\r\n                                    scrollable={\"scrollable\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    addRecord={() => this.props.showRegTypeAddScreen(this.props.Login.userInfo, addID)}\r\n                                />\r\n                                : \"\"}\r\n\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName={this.props.Login.inputParam.displayName}\r\n                        closeModal={this.handleClose}\r\n                        show={this.props.Login.openModal}\r\n                        showSaveContinue={false}\r\n                        hideSave={this.state.showSynonym}\r\n                        closeLabel={this.state.showSynonym ? \"IDS_CLOSE\" : undefined}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord}\r\n                        mandatoryFields={this.state.mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation ? this.props.Login.operation : ''}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : this.state.showSynonym ?\r\n                                <AddSynonym\r\n                                    selectedFieldRecord={this.state.selectedRecord}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    languages={this.props.Login.languageList || []}\r\n                                    fieldName=\"sregtypename\"\r\n                                    maxLength={100}\r\n                                />\r\n                                :\r\n                                <Row>\r\n                                    <Col md={12}>\r\n                                        <FormSelectSearch\r\n                                            name={\"nsampletypecode\"}\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                            value={this.state.selectedRecord.SampleTypes ? this.state.selectedRecord.SampleTypes : []}\r\n                                            options={this.props.Login.optionsSampleType ? this.props.Login.optionsSampleType : []}\r\n                                            optionId=\"nsampletypecode\"\r\n                                            optionValue=\"ssampletypename\"\r\n                                            isMandatory={true}\r\n                                            required={true}\r\n                                            as={\"select\"}\r\n                                            onChange={(event) => this.onComboChange(event, \"nsampletypecode\")}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md={11}>\r\n                                        <FormInput\r\n                                            name={this.props.Login.language}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                                            onChange={(event) => this.onInputOnChange(event, 'sregtypename')}\r\n                                            className=\"\"\r\n                                            isMandatory={true}\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                                            required={true}\r\n                                            value={this.state.selectedRecord.sregtypename ? this.state.selectedRecord.sregtypename[this.props.Login.language] : \"\"}\r\n                                            maxLength={\"100\"}\r\n                                        />\r\n                                    </Col>\r\n                                    <Col md={1} className=\"p-0\">\r\n                                        <Nav.Link name=\"addsynonym\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSYNONYMN\" })}\r\n                                            // data-for=\"tooltip_list_wrap\"\r\n                                            // hidden={this.state.userRoleControlRights.indexOf(this.state.previewId) === -1}\r\n                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                            onClick={(e) => this.setState({ showSynonym: true })}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faLanguage} />\r\n                                        </Nav.Link>\r\n                                    </Col>\r\n                                    <Col md={12}>\r\n                                        <FormTextarea\r\n                                            name={\"sdescription\"}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                            isMandatory={false}\r\n                                            rows=\"1\"\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                            type=\"textarea\"\r\n                                            value={this.state.selectedRecord ? this.state.selectedRecord.sdescription : \"\"}\r\n                                            maxLength={\"255\"}\r\n                                        />\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                        } />\r\n                    : \"\"}\r\n            </>\r\n\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState)\r\n                });\r\n            }\r\n            else {\r\n                //ALPD-3788 Blank page occurs while click the registration type screen for specific scenario..\r\n                if (this.props.Login.operation === \"create\" && this.props.Login.inputParam !== undefined && \r\n                    this.props.Login.inputParam.saveType === 2) {\r\n                    this.props.Login.inputParam.formRef.current.reset();\r\n                }\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState,\r\n                    selectedRecord: { sregtypename: '', sdescription: '' }\r\n                });\r\n            }\r\n        }\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            let mandatoryFields = this.props.Login.mandatoryFields ? (this.props.Login.mandatoryFields) : [\r\n                { \"idsName\": \"IDS_SAMPLETYPE\", \"dataField\": \"SampleTypes\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"textbox\",\"ismultilingual\":\"false\" },\r\n                { \"idsName\": \"IDS_REGISTRATIONTYPE\", \"dataField\": \"sregtypename\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\",\"ismultilingual\":\"true\"},\r\n                //{\"idsName\":\"IDS_DESCRIPTION\",\"dataField\":\"sdescription\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"},\r\n            ]\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord, mandatoryFields });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onInputOnChange = (event, name) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n        }\r\n        else {\r\n            if (name === 'synonym') {               \r\n                selectedRecord['sregtypename'] = {\r\n                    ...selectedRecord['sregtypename'],\r\n                    [event.target.name]: event.target.value\r\n                }\r\n            } \r\n            else if (name === 'sregtypename'){\r\n                const langArray =  this.props.Login.languageList;\r\n                const langDataObject = {};\r\n                langArray.map(item=>\r\n                    langDataObject[item.value] = event.target.value);\r\n\r\n                selectedRecord['sregtypename'] = {\r\n                    ...selectedRecord['sregtypename'],\r\n                    ...langDataObject\r\n                }\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const { selectedRecord } = this.state || {};\r\n        if (comboData) {\r\n\r\n            fieldName = 'nsampletypecode';\r\n            selectedRecord['SampleTypes'] = comboData;\r\n            selectedRecord[fieldName] = comboData.value;\r\n        }\r\n        else {\r\n            fieldName = 'nsampletypecode';\r\n            selectedRecord['SampleTypes'] = comboData;\r\n            selectedRecord[fieldName] = \"\";\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, showRegTypeAddScreen, fetchRegTypeById,\r\n    updateStore, validateEsignCredential\r\n})(injectIntl(RegistrationType));"]},"metadata":{},"sourceType":"module"}