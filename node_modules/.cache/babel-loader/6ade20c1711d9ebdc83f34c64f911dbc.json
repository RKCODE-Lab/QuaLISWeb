{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{process}from'@progress/kendo-data-query';import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import DataGrid from'../../../components/data-grid/data-grid.component';import{transactionStatus}from'../../../components/Enumeration';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import Esign from'../../audittrail/Esign';import AddComment from'./AddComment';import{updateStore,viewAttachment,validateEsignCredential,crudMaster,getCommentsCombo,deleteComment}from'../../../actions';import{connect}from'react-redux';import{faPlus}from'@fortawesome/free-solid-svg-icons';import{Nav}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var Comments=/*#__PURE__*/function(_React$Component){_inherits(Comments,_React$Component);var _super=_createSuper(Comments);function Comments(props){var _this;_classCallCheck(this,Comments);_this=_super.call(this,props);_this.onComboChange=function(comboData,comboName){if(comboData){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[comboName]=comboData;_this.setState({selectedRecord:selectedRecord});}};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){// const masterData = this.props.Login.masterData;\n// let inputData = {}\n// let inputParam = {}\n// inputData[\"userinfo\"] = this.props.Login.userInfo;\n// if(this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\n//     // let saveParam={userInfo:this.props.Login.userInfo,\n//     //     selectedRecord:this.state.selectedRecord,\n//     //     masterData:this.props.Login.masterData,\n//     //     saveType, formRef,\n//     //     operation:this.props.Login.operation\n//     // }\n//     // inputParam = onSaveSampleAttachment(saveParam);\n// }else if(this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\n//     let saveParam={\n//         userInfo:this.props.Login.userInfo,\n//         isTestComment:this.props.isTestComment,\n//         selectedRecord:this.state.selectedRecord,\n//         masterData:this.props.Login.masterData,\n//         saveType, formRef,\n//         operation:this.props.Login.operation,\n//         selectedMaster:this.props.selectedMaster\n//     }\n//     inputParam = onSaveTestComments(saveParam);\n// }\n// if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true,\n//             screenData: { inputParam, masterData },\n//             operation: this.props.Login.operation,\n//             screenName: this.props.Login.screenName,\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n//     this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\n// }\n_this.props.onSaveClick(saveType,formRef,_this.state.selectedRecord);};_this.handleClose=function(){var loadEsign=_this.props.Login.loadEsign;var openCommentModal=_this.props.Login.openCommentModal;var selectedRecord=_this.props.Login.selectedRecord;var operation=_this.props.Login.operation;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openCommentModal=false;selectedRecord={};operation=undefined;}else{loadEsign=false;selectedRecord[\"esigncomments\"]=\"\";selectedRecord[\"esignpassword\"]=\"\";}}else{openCommentModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openCommentModal:openCommentModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedParamId:null,operation:operation}};_this.props.updateStore(updateInfo);};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};if(_this.props.Login.operation==='dynamic'){_this.props.validateEsignforApproval(inputParam,\"openChildModal\");}else{_this.props.validateEsignCredential(inputParam,\"openCommentModal\");}};_this.state={selectedRecord:{}};return _this;}_createClass(Comments,[{key:\"render\",value:function render(){var _this2=this;var extractedColumnList=[];if(this.props.Login.activeTestTab===\"IDS_SAMPLECOMMENTS\"){// if (this.props.masterData && this.props.masterData[\"RegSubTypeValue\"] && \n//    this.props.masterData[\"RegSubTypeValue\"].nneedsubsample || this.props.masterData[\"nneedsubsample\"]){\n//     extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\n// }\n// else{\nextractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"155px\"});//}\nextractedColumnList.push(//  {\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"150px\"},\n// { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\n{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"200px\",jsonField:true},// { \"idsName\": \"IDS_SAMPLETESTCOMMENTS\", \"dataField\": \"ssampletestcommentname\", \"width\": \"400px\" },\n{\"idsName\":\"IDS_SCREENNAME\",\"dataField\":\"sdisplayname\",\"width\":\"150px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERROLE\",\"dataField\":\"suserrolename\",\"width\":\"200px\"});}else if(this.props.Login.activeTestTab===\"IDS_SUBSAMPLECOMMENTS\"){if(this.props.masterData[\"RegSubTypeValue\"]&&this.props.masterData[\"RegSubTypeValue\"].nneedsubsample||this.props.masterData[\"nneedsubsample\"]){extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"});}else{extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"155px\"});}extractedColumnList.push(//  {\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"100px\"},\n// { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\n{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"200px\",jsonField:true},// { \"idsName\": \"IDS_SAMPLETESTCOMMENTS\", \"dataField\": \"ssampletestcommentname\", \"width\": \"400px\" },\n{\"idsName\":\"IDS_SCREENNAME\",\"dataField\":\"sdisplayname\",\"width\":\"150px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERROLE\",\"dataField\":\"suserrolename\",\"width\":\"200px\"});}else{if(this.props.Login.activeTestTab===\"IDS_TESTCOMMENTS\"){if(this.props.masterData&&this.props.masterData[\"RealRegSubTypeValue\"]&&this.props.masterData[\"RealRegSubTypeValue\"].nneedsubsample||this.props.masterData[\"nneedsubsample\"]){extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"});}else{extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"155px\"});}extractedColumnList.push(// extractedColumnList = [\n// {\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"100px\"},\n// {\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"150px\"},\n{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\",jsonField:true},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"200px\",jsonField:true},// { \"idsName\": \"IDS_SAMPLETESTCOMMENTS\", \"dataField\": \"ssampletestcommentname\", \"width\": \"400px\" },\n{\"idsName\":\"IDS_SCREENNAME\",\"dataField\":\"sdisplayname\",\"width\":\"150px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERROLE\",\"dataField\":\"suserrolename\",\"width\":\"200px\"});// ];\n}}var addFileId=this.props.controlMap.has(this.props.addName)&&this.props.controlMap.get(this.props.addName).ncontrolcode;var mandatoryFields=[];if(this.props.isTestComment){if(this.props.masterData&&this.props.masterData[\"RegSubTypeValue\"]&&this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"155px\"});}else{extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"155px\"});}extractedColumnList.push(//  { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\n{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"200px\",jsonField:true},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"200px\",jsonField:true},{\"idsName\":\"IDS_SAMPLETESTCOMMENTS\",\"dataField\":\"ssampletestcommentname\",\"width\":\"400px\"},{\"idsName\":\"IDS_SCREENNAME\",\"dataField\":\"sdisplayname\",\"width\":\"150px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERROLE\",\"dataField\":\"suserrolename\",\"width\":\"200px\"});//]\nmandatoryFields=[{\"idsName\":\"IDS_SAMPLETESTCOMMENTS\",\"dataField\":\"nsamplecommentscode\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_COMMENT\",\"dataField\":\"scomments\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}else{mandatoryFields=[{\"idsName\":\"IDS_COMMENT\",\"dataField\":\"scomments\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe border-bottom\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"add_\".concat(this.props.Login.screenName,\"_comment\"),className:\"add-txt-btn\",hidden:this.props.userRoleControlRights.indexOf(addFileId)===-1,onClick:function onClick(){return _this2.props.getCommentsCombo({userInfo:_this2.props.Login.userInfo,operation:\"create\",ncontrolCode:addFileId,screenName:_this2.props.screenName,modalName:\"openCommentModal\",masterList:_this2.props.masterList,masterAlertStatus:_this2.props.masterAlertStatus});}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMMENT\",defaultMessage:\" Comment\"})))),/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:this.props.primaryKeyField,data:this.props.Comments,dataResult:process(this.props.Comments||[],this.props.dataState),dataState:this.props.dataState,dataStateChange:this.props.dataStateChange,extractedColumnList:extractedColumnList,userInfo:this.props.userInfo,controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,inputParam:this.props.inputParam,pageable:true,expandField:\"expanded\",hideDetailBand:true,isActionRequired:this.props.isActionRequired!==undefined?this.props.isActionRequired:true,deleteParam:this.props.deleteParam||\"\",fetchRecord:this.props.fetchRecord||\"\",editParam:_objectSpread(_objectSpread({},this.props.editParam),{},{modalName:\"openCommentModal\"})||\"\",deleteRecord:this.props.deleteComment||\"\",selectedId:this.props.selectedId,isToolBarRequired:false,scrollable:\"scrollable\",gridHeight:\"500px\",methodUrl:this.props.methodUrl,jsonField:\"jsondata\"}),this.props.Login.openCommentModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:this.props.Login.screenName,closeModal:this.handleClose,show:this.props.Login.openCommentModal,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddComment,{selectedRecord:this.state.selectedRecord,jsonField:\"jsondata\",SampleTestComments:this.props.Login.sampleTestComments,onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,isTestComment:this.props.isTestComment,maxSize:20,maxFiles:3,operation:this.props.Login.operation,selectedListName:this.props.selectedListName,displayName:this.props.displayName,masterList:this.props.masterList})}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}}]);return Comments;}(React.Component);export default connect(mapStateToProps,{updateStore:updateStore,viewAttachment:viewAttachment,validateEsignCredential:validateEsignCredential,crudMaster:crudMaster,getCommentsCombo:getCommentsCombo,deleteComment:deleteComment})(injectIntl(Comments));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/attachmentscomments/comments/Comments.jsx"],"names":["process","React","FormattedMessage","injectIntl","DEFAULT_RETURN","DataGrid","transactionStatus","SlideOutModal","Esign","AddComment","updateStore","viewAttachment","validateEsignCredential","crudMaster","getCommentsCombo","deleteComment","connect","faPlus","Nav","FontAwesomeIcon","mapStateToProps","state","Login","Comments","props","onComboChange","comboData","comboName","selectedRecord","setState","onInputOnChange","event","target","type","name","checked","YES","NO","value","onSaveClick","saveType","formRef","handleClose","loadEsign","openCommentModal","operation","undefined","updateInfo","typeName","data","selectedParamId","validateEsign","inputParam","inputData","userInfo","sreason","password","screenData","validateEsignforApproval","extractedColumnList","activeTestTab","push","jsonField","masterData","nneedsubsample","addFileId","controlMap","has","addName","get","ncontrolcode","mandatoryFields","isTestComment","screenName","userRoleControlRights","indexOf","ncontrolCode","modalName","masterList","masterAlertStatus","primaryKeyField","dataState","dataStateChange","isActionRequired","deleteParam","fetchRecord","editParam","selectedId","methodUrl","masterStatus","sampleTestComments","selectedListName","displayName","previousProps","Component"],"mappings":"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","sourcesContent":["import { process } from '@progress/kendo-data-query';\r\nimport React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport DataGrid from '../../../components/data-grid/data-grid.component';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../audittrail/Esign';\r\nimport AddComment from './AddComment';\r\nimport { updateStore, viewAttachment, validateEsignCredential, crudMaster, getCommentsCombo, deleteComment } from '../../../actions'\r\nimport { connect } from 'react-redux';\r\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Comments extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            selectedRecord: {}\r\n        }\r\n    }\r\n    render() {\r\n        let extractedColumnList = []\r\n        if(this.props.Login.activeTestTab===\"IDS_SAMPLECOMMENTS\"){\r\n            // if (this.props.masterData && this.props.masterData[\"RegSubTypeValue\"] && \r\n            //    this.props.masterData[\"RegSubTypeValue\"].nneedsubsample || this.props.masterData[\"nneedsubsample\"]){\r\n            //     extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n            // }\r\n            // else{\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n           //}\r\n             extractedColumnList.push(\r\n                //  {\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"150px\"},\r\n               // { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\",jsonField:true },\r\n                // { \"idsName\": \"IDS_SAMPLETESTCOMMENTS\", \"dataField\": \"ssampletestcommentname\", \"width\": \"400px\" },\r\n                { \"idsName\": \"IDS_SCREENNAME\", \"dataField\": \"sdisplayname\", \"width\": \"150px\" },\r\n                { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\" },\r\n             );\r\n        }\r\n        else if(this.props.Login.activeTestTab===\"IDS_SUBSAMPLECOMMENTS\"){\r\n            if (this.props.masterData[\"RegSubTypeValue\"] && \r\n              this.props.masterData[\"RegSubTypeValue\"].nneedsubsample\r\n              || this.props.masterData[\"nneedsubsample\"]\r\n              ){\r\n                extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n            }\r\n            else{\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n            }\r\n               extractedColumnList.push(\r\n               //  {\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"100px\"},\r\n              // { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n               { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\",jsonField:true },\r\n               // { \"idsName\": \"IDS_SAMPLETESTCOMMENTS\", \"dataField\": \"ssampletestcommentname\", \"width\": \"400px\" },\r\n               { \"idsName\": \"IDS_SCREENNAME\", \"dataField\": \"sdisplayname\", \"width\": \"150px\" },\r\n               { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n               { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\" },\r\n               );\r\n       }\r\n        else{  \r\n            if(this.props.Login.activeTestTab===\"IDS_TESTCOMMENTS\") {       \r\n            if (this.props.masterData && this.props.masterData[\"RealRegSubTypeValue\"] && \r\n              this.props.masterData[\"RealRegSubTypeValue\"].nneedsubsample||this.props.masterData[\"nneedsubsample\"]){\r\n                extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n            }\r\n            else{\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n            }\r\n            extractedColumnList .push(\r\n            // extractedColumnList = [\r\n                // {\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\",\"width\":\"100px\"},\r\n                // {\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"150px\"},\r\n                { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\",jsonField:true },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\",jsonField:true },\r\n                // { \"idsName\": \"IDS_SAMPLETESTCOMMENTS\", \"dataField\": \"ssampletestcommentname\", \"width\": \"400px\" },\r\n                { \"idsName\": \"IDS_SCREENNAME\", \"dataField\": \"sdisplayname\", \"width\": \"150px\" },\r\n                { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\" });\r\n           // ];\r\n            }\r\n        }\r\n       \r\n        let addFileId = this.props.controlMap.has(this.props.addName) && this.props.controlMap.get(this.props.addName).ncontrolcode;\r\n        let mandatoryFields = [];\r\n        if (this.props.isTestComment) {\r\n            if (this.props.masterData && this.props.masterData[\"RegSubTypeValue\"] && this.props.masterData[\"RegSubTypeValue\"].nneedsubsample){\r\n                extractedColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n            }\r\n            else{\r\n                extractedColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n            }\r\n            extractedColumnList .push(\r\n              //  { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"200px\", jsonField: true },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"200px\",jsonField:true },\r\n                { \"idsName\": \"IDS_SAMPLETESTCOMMENTS\", \"dataField\": \"ssampletestcommentname\", \"width\": \"400px\" },\r\n                { \"idsName\": \"IDS_SCREENNAME\", \"dataField\": \"sdisplayname\", \"width\": \"150px\" },\r\n                { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_USERROLE\", \"dataField\": \"suserrolename\", \"width\": \"200px\" });\r\n            //]\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_SAMPLETESTCOMMENTS\", \"dataField\": \"nsamplecommentscode\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n                { \"idsName\": \"IDS_COMMENT\", \"dataField\": \"scomments\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" }\r\n            ];\r\n        } else {\r\n\r\n            mandatoryFields = [\r\n                { \"idsName\": \"IDS_COMMENT\", \"dataField\": \"scomments\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            ];\r\n\r\n        }\r\n        return (\r\n\r\n            <>\r\n                <div className=\"actions-stripe border-bottom\">\r\n                    <div className=\"d-flex justify-content-end\">\r\n                        <Nav.Link name={`add_${this.props.Login.screenName}_comment`} className=\"add-txt-btn\" hidden={this.props.userRoleControlRights.indexOf(addFileId) === -1}\r\n                            onClick={() => this.props.getCommentsCombo({ userInfo: this.props.Login.userInfo, operation: \"create\", ncontrolCode: addFileId, screenName: this.props.screenName, modalName: \"openCommentModal\", masterList: this.props.masterList, masterAlertStatus: this.props.masterAlertStatus })}>\r\n                            <FontAwesomeIcon icon={faPlus} /> { }\r\n                            <FormattedMessage id=\"IDS_COMMENT\" defaultMessage=\" Comment\" />\r\n                        </Nav.Link>\r\n                    </div>\r\n                </div>\r\n                <DataGrid\r\n                    primaryKeyField={this.props.primaryKeyField}\r\n                    data={this.props.Comments}\r\n                    dataResult={process(this.props.Comments || [], this.props.dataState)}\r\n                    dataState={this.props.dataState}\r\n                    dataStateChange={this.props.dataStateChange}\r\n                    extractedColumnList={extractedColumnList}\r\n                    userInfo={this.props.userInfo}\r\n                    controlMap={this.props.controlMap}\r\n                    userRoleControlRights={this.props.userRoleControlRights}\r\n                    inputParam={this.props.inputParam}\r\n                    pageable={true}\r\n                    expandField=\"expanded\"\r\n                    hideDetailBand={true}\r\n                    isActionRequired={this.props.isActionRequired !== undefined ? this.props.isActionRequired : true}\r\n                    deleteParam={this.props.deleteParam || \"\"}\r\n                    fetchRecord={this.props.fetchRecord || \"\"}\r\n                    editParam={{ ...this.props.editParam, modalName: \"openCommentModal\" } || \"\"}\r\n                    deleteRecord={this.props.deleteComment || \"\"}\r\n                    selectedId={this.props.selectedId}\r\n                    isToolBarRequired={false}\r\n                    scrollable={\"scrollable\"}\r\n                    gridHeight={\"500px\"}\r\n                    methodUrl={this.props.methodUrl}\r\n                    jsonField = {\"jsondata\"}\r\n                />\r\n                {\r\n                    this.props.Login.openCommentModal ?\r\n                        <SlideOutModal\r\n                            onSaveClick={this.onSaveClick}\r\n                            operation={this.props.Login.operation}\r\n                            screenName={this.props.Login.screenName}\r\n                            closeModal={this.handleClose}\r\n                            show={this.props.Login.openCommentModal}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            esign={this.props.Login.loadEsign}\r\n                            validateEsign={this.validateEsign}\r\n                            masterStatus={this.props.Login.masterStatus}\r\n                            updateStore={this.props.updateStore}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            mandatoryFields={mandatoryFields}\r\n                            addComponent={this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n                                <AddComment\r\n                                    selectedRecord={this.state.selectedRecord}\r\n                                    jsonField = {\"jsondata\"}\r\n                                    SampleTestComments={this.props.Login.sampleTestComments}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onComboChange={this.onComboChange}\r\n                                    isTestComment={this.props.isTestComment}\r\n                                    maxSize={20}\r\n                                    maxFiles={3}\r\n                                    operation={this.props.Login.operation}\r\n                                    selectedListName={this.props.selectedListName}\r\n                                    displayName={this.props.displayName}\r\n                                    masterList={this.props.masterList}\r\n                                />\r\n                            }\r\n                        />\r\n                        : \"\"\r\n                }\r\n            </>\r\n        )\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n    onComboChange = (comboData, comboName) => {\r\n        if (comboData) {\r\n            let selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[comboName] = comboData\r\n            this.setState({ selectedRecord });\r\n        }\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        // const masterData = this.props.Login.masterData;\r\n        // let inputData = {}\r\n        // let inputParam = {}\r\n        // inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        // if(this.props.Login.screenName === \"IDS_SAMPLECOMMENTS\") {\r\n        //     // let saveParam={userInfo:this.props.Login.userInfo,\r\n        //     //     selectedRecord:this.state.selectedRecord,\r\n        //     //     masterData:this.props.Login.masterData,\r\n        //     //     saveType, formRef,\r\n        //     //     operation:this.props.Login.operation\r\n        //     // }\r\n        //     // inputParam = onSaveSampleAttachment(saveParam);\r\n        // }else if(this.props.Login.screenName === \"IDS_TESTCOMMENTS\") {\r\n        //     let saveParam={\r\n        //         userInfo:this.props.Login.userInfo,\r\n        //         isTestComment:this.props.isTestComment,\r\n        //         selectedRecord:this.state.selectedRecord,\r\n        //         masterData:this.props.Login.masterData,\r\n        //         saveType, formRef,\r\n        //         operation:this.props.Login.operation,\r\n        //         selectedMaster:this.props.selectedMaster\r\n        //     }\r\n        //     inputParam = onSaveTestComments(saveParam);\r\n        // }\r\n        // if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true,\r\n        //             screenData: { inputParam, masterData },\r\n        //             operation: this.props.Login.operation,\r\n        //             screenName: this.props.Login.screenName,\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     this.props.crudMaster(inputParam, masterData, \"openCommentModal\");\r\n        // }\r\n        this.props.onSaveClick(saveType, formRef, this.state.selectedRecord)\r\n    }\r\n    handleClose = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openCommentModal = this.props.Login.openCommentModal\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let operation = this.props.Login.operation;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openCommentModal = false;\r\n                selectedRecord = {};\r\n                operation = undefined;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord[\"esigncomments\"] = \"\";\r\n                selectedRecord[\"esignpassword\"] = \"\";\r\n            }\r\n        }\r\n        else {\r\n            openCommentModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openCommentModal, loadEsign, selectedRecord, selectedParamId: null, operation }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if (this.props.Login.operation === 'dynamic') {\r\n            this.props.validateEsignforApproval(inputParam, \"openChildModal\");\r\n        } else {\r\n            this.props.validateEsignCredential(inputParam, \"openCommentModal\");\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { updateStore, viewAttachment, validateEsignCredential, crudMaster, getCommentsCombo, deleteComment })(injectIntl(Comments));"]},"metadata":{},"sourceType":"module"}