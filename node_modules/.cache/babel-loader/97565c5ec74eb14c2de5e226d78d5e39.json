{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\quotation\\\\AddGrossQuotation.jsx\";\nimport React from 'react';\nimport { Row, Col, FormGroup } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { ReadOnlyText } from '../../components/App.styles';\nimport { injectIntl } from 'react-intl';\n\nconst AddGrossQuotation = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-end pt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_TOTALGROSSAMOUNT\"\n    }),\n    name: \"ntotalgrossamount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TOTALGROSSAMOUNT\"\n    }),\n    value: props.QuotationGrossAmount ? parseFloat(props.QuotationGrossAmount[0][\"ntotalgrossamount\"].toFixed(2)) : \"\",\n    isMandatory: false,\n    required: true,\n    maxLength: \"100\",\n    isDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_DISCOUNTBAND\"\n    }),\n    isSearchable: true,\n    name: \"ndiscountbandcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: true,\n    options: props.DiscountBand,\n    value: props.selectedRecord[\"ndiscountbandcode\"] || \"\",\n    defaultValue: props.selectedRecord[\"ndiscountbandcode\"],\n    onChange: event => props.onComboChange(event, \"ndiscountbandcode\", 3) //    onBlur={() => props.onnetDiscountEvent(props.selectedRecord)}\n    ,\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_AMOUNT\"\n    }),\n    name: \"namount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }) // value={props.selectedRecord ? props.selectedRecord[\"namount\"] : \"\"}\n    //   value={props.selectedRecord.ndiscountbandcode ? props.selectedRecord.ndiscountbandcode.item[\"namount\"] : \"\"}\n    ,\n    value: props.selectedRecord.ndiscountpercentage ? props.selectedRecord.ndiscountpercentage : 0,\n    isMandatory: false,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DISCOUNTAMOUNT\"\n    }),\n    name: \"ndiscountbandcode\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DISCOUNTAMOUNT\"\n    }),\n    value: parseFloat(props.DiscountAmount.toFixed(2)),\n    isMandatory: false,\n    required: true,\n    maxLength: \"100\",\n    isDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_VATBAND\"\n    }),\n    isSearchable: true,\n    name: \"nvatbandcode\",\n    isDisabled: false,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isClearable: true,\n    options: props.VATBand,\n    showOption: props.isMulti,\n    value: props.selectedRecord[\"nvatbandcode\"] || \"\" //     value={props.SelectedClient? { \"label\": props.SelectedClient.sclientname, \"value\": props.SelectedClient.nclientcode } : \"\"}\n    ,\n    defaultValue: props.selectedRecord[\"nvatbandcode\"],\n    onChange: event => props.onComboChange(event, \"nvatbandcode\", 3),\n    closeMenuOnSelect: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_AMOUNT\"\n    }),\n    name: \"namount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }) // value={props.selectedRecord ? props.selectedRecord[\"namount\"] : \"\"}\n    //       value={props.selectedRecord.nvatbandcode ? props.selectedRecord.nvatbandcode.item[\"namount\"] : \"\"}\n    ,\n    value: props.selectedRecord.nvatpercentage ? props.selectedRecord.nvatpercentage : 0,\n    isMandatory: false,\n    isDisabled: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_VATAMOUNT\"\n    }),\n    name: \"nvatbandcode\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_VATAMOUNT\"\n    }),\n    value: parseFloat(props.VatAmount.toFixed(2)),\n    isMandatory: false,\n    required: true,\n    maxLength: \"100\",\n    isDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(Row, {\n    className: \"justify-content-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    name: \"ntotalnetamount\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TOTALNETAMOUNT\"\n    }),\n    value: parseFloat(props.TotalNetAmount.toFixed(2)),\n    isMandatory: false,\n    required: true,\n    maxLength: \"100\",\n    isDisabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }))));\n};\n\nexport default injectIntl(AddGrossQuotation);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/quotation/AddGrossQuotation.jsx"],"names":["React","Row","Col","FormGroup","FormSelectSearch","FormInput","ReadOnlyText","injectIntl","AddGrossQuotation","props","intl","formatMessage","id","event","onInputOnChange","QuotationGrossAmount","parseFloat","toFixed","DiscountBand","selectedRecord","onComboChange","ndiscountpercentage","DiscountAmount","VATBand","isMulti","nvatpercentage","VatAmount","TotalNetAmount"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col ,FormGroup } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { ReadOnlyText } from '../../components/App.styles';\r\n\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nconst AddGrossQuotation = (props) => {\r\n    return (\r\n        <>\r\n        <Row className='justify-content-end pt-2'>\r\n            <Col md={4}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_TOTALGROSSAMOUNT\" })}\r\n                    name={\"ntotalgrossamount\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_TOTALGROSSAMOUNT\" })}\r\n                    value={props.QuotationGrossAmount ? parseFloat((props.QuotationGrossAmount[0][\"ntotalgrossamount\"]).toFixed(2)) : \"\"}\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                    isDisabled={true}\r\n                />\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col md={4}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_DISCOUNTBAND\" })}\r\n                    isSearchable={true}\r\n                    name={\"ndiscountbandcode\"}\r\n                    isDisabled={false}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={false}\r\n                    isClearable={true}\r\n                    options={props.DiscountBand}\r\n                    value={props.selectedRecord[\"ndiscountbandcode\"] || \"\"}\r\n                    defaultValue={props.selectedRecord[\"ndiscountbandcode\"]}\r\n                    onChange={(event) => props.onComboChange(event, \"ndiscountbandcode\", 3)}\r\n                    //    onBlur={() => props.onnetDiscountEvent(props.selectedRecord)}\r\n                    closeMenuOnSelect={true}\r\n                    \r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={4}>\r\n                <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_AMOUNT\" })}\r\n                        name={\"namount\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        // value={props.selectedRecord ? props.selectedRecord[\"namount\"] : \"\"}\r\n                    //   value={props.selectedRecord.ndiscountbandcode ? props.selectedRecord.ndiscountbandcode.item[\"namount\"] : \"\"}\r\n                        value={props.selectedRecord.ndiscountpercentage ? props.selectedRecord.ndiscountpercentage : 0}\r\n                        isMandatory={false}\r\n                        isDisabled={true}\r\n                        required={true}\r\n                        maxLength={\"100\"}\r\n                    />\r\n            </Col>  \r\n            <Col md={4}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_DISCOUNTAMOUNT\" })}\r\n                    name={\"ndiscountbandcode\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DISCOUNTAMOUNT\" })}\r\n                    value={ parseFloat(props.DiscountAmount.toFixed(2))}\r\n                    isMandatory={false}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                    isDisabled={true}\r\n                />\r\n            </Col>\r\n        </Row>\r\n        <Row>\r\n            <Col md={4}>\r\n                <FormSelectSearch\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_VATBAND\" })}\r\n                        isSearchable={true}\r\n                        name={\"nvatbandcode\"}\r\n                        isDisabled={false}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        isMandatory={false}\r\n                        isClearable={true}\r\n                        options={props.VATBand}\r\n                        showOption={props.isMulti}\r\n                        value={props.selectedRecord[\"nvatbandcode\"] || \"\"}\r\n                    //     value={props.SelectedClient? { \"label\": props.SelectedClient.sclientname, \"value\": props.SelectedClient.nclientcode } : \"\"}\r\n                        defaultValue={props.selectedRecord[\"nvatbandcode\"]}\r\n                        onChange={(event) => props.onComboChange(event, \"nvatbandcode\", 3)}\r\n                        closeMenuOnSelect={true}\r\n                    >\r\n                    </FormSelectSearch>\r\n            </Col>\r\n            <Col md={4}>\r\n                  <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_AMOUNT\" })}\r\n                        name={\"namount\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        // value={props.selectedRecord ? props.selectedRecord[\"namount\"] : \"\"}\r\n                    //       value={props.selectedRecord.nvatbandcode ? props.selectedRecord.nvatbandcode.item[\"namount\"] : \"\"}\r\n                        value={props.selectedRecord.nvatpercentage ? props.selectedRecord.nvatpercentage : 0}\r\n                        isMandatory={false}\r\n                        isDisabled={true}\r\n                        required={true}\r\n                        maxLength={\"100\"}\r\n                    />\r\n            </Col>\r\n\r\n            <Col md={4}>\r\n                <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_VATAMOUNT\" })}\r\n                        name={\"nvatbandcode\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_VATAMOUNT\" })}\r\n                        value={parseFloat(props.VatAmount.toFixed(2))}\r\n                        isMandatory={false}\r\n                        required={true}\r\n                        maxLength={\"100\"}\r\n                        isDisabled={true}\r\n                    />\r\n            </Col>\r\n        </Row>\r\n        <Row className='justify-content-end'>                \r\n            <Col md={4}>\r\n                <FormInput\r\n                        label={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                        name={\"ntotalnetamount\"}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_TOTALNETAMOUNT\" })}\r\n                        value={parseFloat((props.TotalNetAmount).toFixed(2))}\r\n                        isMandatory={false}\r\n                        required={true}\r\n                        maxLength={\"100\"}\r\n                        isDisabled={true}\r\n                    />\r\n            </Col>                   \r\n        </Row>\r\n        </>\r\n    );\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default injectIntl(AddGrossQuotation);"]},"metadata":{},"sourceType":"module"}