{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{toast}from'react-toastify';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Nav,FormGroup,FormLabel,Card,Modal,Image,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faCheckCircle,faCopy,faEye,faPlay,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import reject from\"../../assets/image/reject.svg\";import{callService,crudMaster,updateStore,getTestInstrumentComboService,getTestInstrumentCategory,getInstrumentForInstCategory,getBatchCreationDetails,onActionFilterSubmit,getProductcategoryAction,createBatchmasterAction,getSamplesForGrid,getSelectedBatchCreationDetail,createSampleAction,deleteSampleAction,getActiveBatchCreationService,updateBatchcreationAction,deleteBatchCreation,batchInitiateAction,getBCRegistrationSubType,batchCompleteAction,validateEsignCredential,filterColumnData,getBatchhistoryAction,getBatchSection,viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType,getTreeByMaterial,getNewRegSpecification,cancelIQCSampleAction,batchCancelAction,batchInitiateDatePopup,batchCompleteDatePopup,getInstrumentID,getBatchViewResultAction}from'../../actions';import{transactionStatus,designProperties,reportTypeEnum,reportCOAType,RegistrationSubType}from'../../components/Enumeration';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap,getStartOfDay,getEndOfDay,formatInputDate,constructOptionList,rearrangeDateFormat,convertDateValuetoString}from'../../components/CommonScript';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{ReadOnlyText,ContentPanel,MediaLabel}from'../../components/App.styles';import{ListWrapper}from'../../components/client-group.styles';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import Esign from'../audittrail/Esign';import{ProductList}from'../product/product.styled';import CustomPopover from'../../components/customPopover';import BatchCreationFilter from'./BatchCreationFilter';import AddBatchCreation from'./AddBatchCreation';import AddBatchinitiate from'./AddBatchinitiate';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import SampleTab from'./SampleTab';import BatchhistoryTab from'./BatchhistoryTab';import{process}from'@progress/kendo-data-query';import AddSample from'./AddSample';import ListMaster from'../../components/list-master/list-master.component';import ViewInfo from'./ViewInfo';import{Affix}from'rsuite';import AddMaterialIqc from'./AddMaterialIqc';import BatchIqcSampleTab from'./BatchIqcSampleTab';import BatchResultTab from'./BatchResultTab';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var BatchCreation=/*#__PURE__*/function(_React$Component){_inherits(BatchCreation,_React$Component);var _super=_createSuper(BatchCreation);function BatchCreation(props){var _this;_classCallCheck(this,BatchCreation);_this=_super.call(this,props);_this.batchMandatoryFields=[{\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TEST\",\"dataField\":\"stestname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_INSTRUMENTCATEGORY\",\"dataField\":\"sinstrumentcatname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_INSTRUMENT\",\"dataField\":\"sinstrumentname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_INSTRUMENTID\",\"dataField\":\"sinstrumentid\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"sproductname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];_this.completeMandatoryFields=[{\"idsName\":\"IDS_BATCHCOMPLETEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.initiateMandatoryFields=[{\"idsName\":\"IDS_BATCHINITIATEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.materialIqcMandatory=[{\"idsName\":\"IDS_MATERIALTYPE\",\"dataField\":\"smaterialtypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALCATEGORY\",\"dataField\":\"smaterialcatname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIAL\",\"dataField\":\"smaterialname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALINVENTORY\",\"dataField\":\"sinventoryid\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},//{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n{\"idsName\":\"IDS_USEDQTY\",\"dataField\":\"susedquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];_this.getSamples=function(selectedbatchmaster){var addSampleID=_this.state.controlMap.has(\"AddSamples\")&&_this.state.controlMap.get(\"AddSamples\").ncontrolcode;if(selectedbatchmaster.ntransactionstatus==transactionStatus.INITIATED||selectedbatchmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedbatchmaster.ntransactionstatus==transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else{_this.props.getSamplesForGrid(_this.props.Login.masterData.SelectedBatchmaster.ntestcode,_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this.props.Login.userInfo,_this.props.Login.masterData,_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,addSampleID);}};_this.getIqcSamples=function(SelectedBatchmaster){if(SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED||SelectedBatchmaster.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLETOADDIQC\"}));}else{var addcontrolcode=_this.state.controlMap.has(\"AddBatchCreation\")&&_this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var inputData={};inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;// inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\n// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData['naddcontrolCode']=addcontrolcode;// inputData['section']={\n//         nsectioncode: SelectedBatchmaster.nsectioncode\n// };\ninputData['nsectioncode']=SelectedBatchmaster.nsectioncode;inputData['userInfo']=_this.props.Login.userInfo;inputData['nbatchmastercode']=SelectedBatchmaster.nbatchmastercode;_this.props.getIqcSamples(inputData,_this.props.Login.masterData);}};_this.deleteRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:inputData.selectedRecord.nbatchsampleCode,fetchUrl:\"batchcreation/getSampleTabDetails\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var jsondata=inputData.selectedRecord;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Sample\",postParam:postParam,inputData:{Sample:{\"sarno\":inputData.selectedRecord.sarno,\"ssamplearno\":inputData.selectedRecord.ssamplearno,\"stestname\":inputData.selectedRecord.stestname,\"nbatchsamplecode\":inputData.selectedRecord.nbatchsamplecode},\"userInfo\":_this.props.Login.userInfo,nbatchsamplecode:inputData.selectedRecord.nbatchsamplecode,masterData:_objectSpread(_objectSpread({},_this.props.Login.masterData),{},{\"samples\":[]}),nbatchmastercode:inputData.selectedRecord.nbatchmastercode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,//nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\n//nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\nnregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.deleteSampleAction(inputParam.inputData);}}};_this.cancelRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:inputData.nbatchsampleiqccode,fetchUrl:\"batchcreation/getBatchIqcSampleAction\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:\"batchcreation\",methodUrl:\"IQCSample\",postParam:postParam,inputData:{iqcSample:inputData.selectedRecord,nbatchsampleiqccode:inputData.selectedRecord.nbatchsampleiqccode,masterData:_this.props.Login.masterData,nbatchmastercode:inputData.selectedRecord.nbatchmastercode,nmaterialinventtranscode:inputData.selectedRecord.nmaterialinventtranscode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode,//nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\n//nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\nnregtypecode:_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,nsampletypecode:_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.cancelIQCSampleAction(inputParam.inputData);}}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;if(screenName==\"IDS_BATCHHISTORY\"){var inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchhistoryAction(inputData,true);}else if(screenName==\"IDS_BATCHIQCSAMPLE\"){var _inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchIqcSampleAction(_inputData,true);}else if(screenName==\"IDS_RESULTS\"){var _inputData2={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchViewResultAction(_inputData2,true);}else{var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName,batchactiveKey:screenName}};_this.props.updateStore(updateInfo);}};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Samples,event.dataState),sampleState:event.dataState});};_this.dataStateBatchHistoryChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Batchhistory,event.dataState),histortState:event.dataState});};_this.dataStateBatchIqcChangeChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.iqcsample,event.dataState),iqcsampleState:event.dataState});};_this.dataStateViewChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Resultview,event.dataState),viewstate:event.dataState});};_this.getApprovalVersion=function(data){var inputData=[];var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={needFilterSubmit:\"false\",nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:data.item.nregtypecode,userInfo:_this.props.Login.userInfo,nregsubtypecode:data.item.nregsubtypecode,masterData:_this.props.Login.masterData,isneedapprovalfilter:true,defaultRegistrationSubType:data.item,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCApprovalConfigVersion(inputData);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_SAMPLE\",/*#__PURE__*/React.createElement(SampleTab,{sample:_this.props.Login.masterData.Samples||[],dataResult:process(_this.props.Login.masterData.Samples||[],_this.state.sampleState),dataState:_this.state.sampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,deleteRecord:_this.deleteRecord,extractedColumnList:_this.gridfillingColumn(_this.state.DynamicGridItem)||[],detailedFieldList:_this.gridfillingColumn(_this.state.DynamicGridMoreItem)||[],methodUrl:\"Samples\",getSamples:function getSamples(){return _this.getSamples(_this.props.Login.masterData.SelectedBatchmaster);}// getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\n//inputParam={this.props.Login.inputParam}\n,screenName:\"IDS_SAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));tabMap.set(\"IDS_BATCHIQCSAMPLE\",/*#__PURE__*/React.createElement(BatchIqcSampleTab,{iqcsample:_this.props.Login.masterData.iqcsample||[],dataResult:process(_this.props.Login.masterData.iqcsample||[],_this.state.iqcsampleState),dataState:_this.state.iqcsampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateBatchIqcChangeChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,cancelRecord:_this.cancelRecord,methodUrl:\"IQCSample\",getIqcSamples:function getIqcSamples(){return _this.getIqcSamples(_this.props.Login.masterData.SelectedBatchmaster);},screenName:\"IDS_BATCHIQCSAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));if(_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.INITIATED||_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.COMPLETED){tabMap.set(\"IDS_RESULTS\",/*#__PURE__*/React.createElement(BatchResultTab,{ELNTest:_this.props.Login.masterData.ELNTest||[],resultview:_this.props.Login.masterData.Resultview||[],dataResult:process(_this.props.Login.masterData.Resultview||[],_this.state.viewstate),dataState:_this.state.viewstate,dataStateChange:_this.dataStateViewChange,userInfo:_this.props.Login.userInfo,methodUrl:\"BatchViewResult\",screenName:\"IDS_RESULTS\",intl:_this.props.intl,nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample,selectedfilename:_this.props.Login.masterData.SelectedBatchmaster.sbatcharno}));}tabMap.set(\"IDS_BATCHHISTORY\",/*#__PURE__*/React.createElement(BatchhistoryTab,{batchhistory:_this.props.Login.masterData.Batchhistory||[],dataResult:process(_this.props.Login.masterData.Batchhistory||[],_this.state.histortState),dataState:_this.state.histortState,dataStateChange:_this.dataStateBatchHistoryChange,userInfo:_this.props.Login.userInfo,methodUrl:\"Batchhistory\",screenName:\"IDS_BATCHHISTORY\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));return tabMap;};_this.onFilterComboChange=function(event,fieldname){if(event!==null){var inputData=[];if(fieldname===\"fromDate\"){var dateObj=convertDateValuetoString(event,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",fromDate:dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\ntoDate:dateObj.toDate,//this.props.Login.masterData.toDate,\ndefaultRegistrationType:_this.props.Login.masterData.defaultRegistrationType,defaultRegistrationSubType:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA,defaultSampleType:_this.props.Login.masterData.defaultSampleType,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ntranscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.NA,//defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\nuserInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCApprovalConfigVersion(inputData);}if(fieldname===\"toDate\"){var _dateObj=convertDateValuetoString(_this.props.Login.masterData.fromDate,event,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",fromDate:_dateObj.fromDate,//this.props.Login.masterData.fromDate,\ntoDate:_dateObj.toDate,//this.OnDateConverstion(event, fieldname),\ndefaultRegistrationType:_this.props.Login.masterData.defaultRegistrationType,defaultRegistrationSubType:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA,defaultSampleType:_this.props.Login.masterData.defaultSampleType,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ntranscode:_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.NA,//defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\nuserInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCApprovalConfigVersion(inputData);}// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \n//                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \nif(fieldname===\"nsampletypecode\"){var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:2,needFilterSubmit:\"false\",nsampletypecode:parseInt(event.value),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nuserinfo:_this.props.Login.userInfo,defaultSampleType:event.item,masterData:_this.props.Login.masterData,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCRegistrationType(inputData);}else if(fieldname===\"nregtypecode\"){var _obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:3,needFilterSubmit:\"false\",nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:_obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:_obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:parseInt(event.value),userInfo:_this.props.Login.userInfo,defaultRegistrationType:event.item,defaultSampleType:_this.props.Login.masterData.defaultSampleType,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCRegistrationSubType(inputData,_this.props.Login.masterData);}else if(fieldname===\"nregsubtypecode\"){var nregsubtypecode=_this.state;//this.setState({ nregsubtypecode:event });\n_this.getApprovalVersion(event);}else if(fieldname==='ndesigntemplatemappingcode'){var _obj2=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);var inputParamData={nflag:3,needFilterSubmit:\"false\",fromdate:_obj2.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj2.toDate,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:_this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,//defaultFilterStatus: event.item,\ndefaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),nneedsubsample:_this.props.Login.masterData.nneedsubsample||4,// stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\n//nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\nndesigntemplatemappingcode:event.value,DesignTemplateMappingValue:event.item,isneedrealFilterStatus:\"false\",realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};//this.props.getREFilterTestData(inputParamData)\n_this.props.getBCFilterTemplate(inputParamData);}else if(fieldname===\"version\"){// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\n//     this.props.Login.masterData.toDate, this.props.Login.userInfo);\n// inputData = {\n//     nflag: 4,\n//     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\n//     todate: obj.toDate,//this.props.Login.masterData.toDate,\n//     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\n//     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\n//     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\n//     napprovalversioncode: event.value,\n//     userinfo: this.props.Login.userInfo,\n//     defaultApprovalConfigVersion: event.item,\n//     masterData: this.props.Login.masterData,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n// }\n// this.props.getBCJobStatus(inputData)\nvar ApprovalVersionValue=_this.state;_this.setState({ApprovalVersionValue:event});}else if(fieldname===\"jobstatus\"){var _obj3=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,needFilterSubmit:\"false\",fromdate:_obj3.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj3.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:event.value,userinfo:_this.props.Login.userInfo,defaultjobstatus:event.item,masterData:_this.props.Login.masterData,realRegTypeValue:_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:\"NA\",realRegSubTypeValue:_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:\"NA\",realApproveConfigVersion:_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA,realdefaultFilterStatus:_this.props.Login.masterData.realdefaultFilterStatus?_this.props.Login.masterData.realdefaultFilterStatus:\"NA\"};_this.props.getBCFilterStatus(inputData);}else if(fieldname===\"filter\"){var FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else if(fieldname===\"test\"){var _FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else{var selectedRecord=_this.state;_this.setState({selectedRecord:event});}}};_this.handleFilterDateChange=function(dateValue,dateName){var selectedFilter=_this.state.selectedFilter;if(dateValue===null){dateValue=new Date();}selectedFilter[dateName]=dateValue;_this.setState({selectedFilter:selectedFilter});};_this.headerSelectionChange=function(event){var checked=event.syntheticEvent.target.checked;var sampleList=_this.state.samples||[];var addedSamplesList=[];if(checked){//const data = event.dataItems.map(item => {\nvar data=event.target.props.data.map(function(item){if(sampleList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})===-1){sampleList.push(_objectSpread(_objectSpread({},item),{},{selected:false}));item.selected=checked;var newItem=JSON.parse(JSON.stringify(item));//newItem.selected = false;\ndelete newItem['selected'];newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);return item;}else{var olditem=JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})]));olditem.selected=checked;var _newItem=JSON.parse(JSON.stringify(olditem));_newItem.selected=false;_newItem[\"jsondata\"]={};_newItem[\"jsonuidata\"]={};_newItem[\"jsondata\"]['samplelist']=olditem;_newItem[\"jsonuidata\"]['samplelist']=olditem;addedSamplesList.push(_newItem);return olditem;}});_this.setState({samples:data,addedSamplesList:addedSamplesList,sampleList:sampleList,addSelectAll:checked,deleteSelectAll:false});}else{// let sampleListData = this.state.sampleList || [];\n// let deletedListdData = this.state.sampleList || [];\nvar sampleListData=_this.state.samples||[];var deletedListdData=_this.state.samples||[];var _data=_this.state.samples.map(function(item){sampleListData=sampleListData.filter(function(item1){return item1.npreregno!==item.npreregno;});deletedListdData=deletedListdData.filter(function(item1){return item1.npreregno!==item.npreregno;});item.selected=checked;return item;});// console.log(\"data:\",data1, data2);\n_this.setState({samples:_data,addedSamplesList:sampleListData,deletedList:deletedListdData,addSelectAll:checked,deleteSelectAll:false});}// const data = this.state.addComponentDataList.map(item=>{\n//     if (checked){\n//         addedComponentList.push({...item, selected:false});\n//     }\n//     else{\n//         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\n//         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \n//     }  \n//     item.selected = checked;\n//     return item;\n// });\n};_this.onTreeClick=function(event){var inputParam={methodUrl:\"TestGroupSpecification\",screenName:\"IDS_REGISTRATION\",operation:\"get\",activeKey:event.key,focusKey:event.key,keyName:\"treetemplatemanipulation\",userinfo:_this.props.Login.userInfo,selectedNode:event.item,selectedRecord:_this.state.selectedRecord,primaryKey:event.primaryKey};if(event.primaryKey!==_this.state.selectedRecord[\"ntemplatemanipulationcode\"]){_this.props.getNewRegSpecification(inputParam,_this.props.Login.masterData);}};_this.selectionChange=function(event){var addedSamplesList=_this.state.addedSamplesList||[];//let addedSamplesList= [];\nvar samples=_this.state.samples||[];var samplesList=_this.state.samples.map(function(item){if(item.ntransactiontestcode===event.dataItem.ntransactiontestcode){item.selected=!event.dataItem.selected;if(item.selected){var newItem=JSON.parse(JSON.stringify(item));//newItem.selected = false;\ndelete newItem['selected'];newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);}else{// if(addedSamplesList.length === 0){\naddedSamplesList=addedSamplesList.filter(function(item1){return item1.ntransactiontestcode!==item.ntransactiontestcode;});//   }else{\n//     this.state.samples.map((item1,index) => { \n//         if(item1.ntransactiontestcode == event.dataItem.ntransactiontestcode){\n//             if(this.state.samples.length == 1){\n//                 addedSamplesList=[];\n//             }else{\n//                 const newItem = JSON.parse(JSON.stringify(item1));\n//                 newItem.selected = false;\n//                 newItem[\"jsondata\"]={};\n//                 newItem[\"jsonuidata\"]={};\n//                 newItem[\"jsondata\"]['samplelist'] = item1\n//                 newItem[\"jsonuidata\"]['samplelist'] = item1\n//                 //addedSamplesList.push(newItem);\n//                 addedSamplesList = item1;\n//             }  \n//         }\n//     } \n//   )\n}}return item;});///samplesList = addedSamplesList;\n_this.setState({samplesList:samplesList,addedSamplesList:addedSamplesList,samples:samples,initialList:addedSamplesList,addSelectAll:_this.valiateCheckAll(samplesList),deleteSelectAll:_this.valiateCheckAll(samplesList)});};_this.handleSaveClick=function(saveType){var failedControls=[];var startLabel=[];var label=\"IDS_ENTER\";var mandatoryFields=[];var selectedRecord=_this.state.selectedRecord;console.log(\"handle save:\",selectedRecord);mandatoryFields=[{\"idsName\":\"IDS_SPECIFICATION\",\"dataField\":\"nallottedspeccode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"}];var selectedSpec=_this.props.Login.selectedSpec;selectedSpec[\"nallottedspeccode\"]=_this.state.selectedRecord[\"nallottedspeccode\"];selectedSpec[\"sversion\"]=_this.state.selectedRecord[\"sversion\"];selectedSpec[\"ntemplatemanipulationcode\"]=_this.state.selectedRecord[\"ntemplatemanipulationcode\"];var updateInfo={typeName:DEFAULT_RETURN,data:{loadSpec:false,selectedSpec:selectedSpec,openModal:true,openSpecModal:false}};_this.props.updateStore(updateInfo);};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.ConfirmDelete=function(selectedBatch,deleteId,operation){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteBatchCreation(selectedBatch,deleteId,operation);});};_this.completePopUpStartActions=function(completeId){// if(this.props.Login.masterData.nneedtestinitiate === true){\nif(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}//    }else \nelse if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}else{// const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: {\n//         openModal: true, \n//         completeId : completeId,\n//         masterData: this.props.Login.masterData,\n//        // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\n//         operation: \"complete\"\n//     }\n// }\n// this.props.updateStore(updateInfo);\nvar inputData={};inputData[\"openModal\"]=true;inputData[\"completeId\"]=completeId;inputData[\"selectedRecord\"]=_this.state.selectedRecord&&_this.state.selectedRecord[\"dtransactiondate\"]?\"\":_this.state.selectedRecord;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"operation\"]=\"complete\";_this.props.batchCompleteDatePopup(inputData,_this.props.Login.masterData);}};_this.AddSpec=function(e){if(_this.state.selectedMaterial!==undefined&&_this.state.selectedMaterialCategory!==undefined){var inputData={};inputData[\"nmaterialcode\"]=_this.state.selectedMaterial.value;inputData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory.value;inputData[\"ncategorybasedflow\"]=_this.state.selectedMaterialCategory.item.ncategorybasedflow;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;// inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \n// inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \n// inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \n// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\n// inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\n// inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\n// inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\n_this.props.getTreeByMaterial(inputData,_this.state.selectedRecord,_this.props.Login.masterData);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_FILLALLDETAILSTOADDSPEC\"}));}};_this.testPopUpStartActions=function(testStartId){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}// else if (this.props.Login.masterData.iqcsample.length==0){\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\n// }\nelse{var inputData={};inputData[\"openModal\"]=true;inputData[\"testStartId\"]=testStartId;inputData[\"selectedRecord\"]=_this.state.selectedRecord&&_this.state.selectedRecord[\"dtransactiondate\"]?\"\":_this.state.selectedRecord;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"operation\"]=\"initiate\";_this.props.batchInitiateDatePopup(inputData,_this.props.Login.masterData);//         const updateInfo = {\n//             typeName: DEFAULT_RETURN,\n//             data: {\n//                 openModal: true, \n//                 testStartId : testStartId,\n//                 selectedRecord : this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord,\n//                 masterData: this.props.Login.masterData,\n//                 operation: \"initiate\"\n//             }\n//         }\n// this.props.updateStore(updateInfo);\n}};_this.testStartActions=function(selectedmaster,testStartId){if(selectedmaster.ntransactionstatus==transactionStatus.INITIATED||selectedmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}//else if (this.props.Login.masterData.iqcsample.length==0){\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\n// }\nelse{var inputData={};var jsonuidata=[];var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/initiateBatchcreation\",isSingleGet:true,fecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});if(_this.props.Login.masterData.iqcsample.length>0){var totalSample=_this.props.Login.masterData.Samples.concat(_this.props.Login.masterData.iqcsample);inputData[\"npreregno\"]=_this.props.Login.masterData.iqcsample.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"ntransactiontestcode\"]=totalSample.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"nneedjoballocationiqc\"]=true;inputData[\"isiqcdata\"]=true;}else{inputData[\"npreregno\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"isiqcdata\"]=false;inputData[\"nneedjoballocationiqc\"]=false;}inputData[\"muluserpreregno\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.npreregno;}).join(\",\");inputData[\"mulusertransactionsamplecode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactionsamplecode;}).join(\",\");inputData[\"mulusertransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(samples){return samples.ntransactiontestcode;}).join(\",\");inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;// inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"batchsample\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"nneedmyjob\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedmyjob;inputData[\"nneedjoballocation\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedjoballocation;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napproveconfversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.INITIATED||transactionStatus.DRAFT;inputData[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"]!=undefined?_this.state.selectedRecord[\"dtransactiondate\"]:_this.props.Login.currentTime,false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;inputData[\"testStartId\"]=testStartId;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[1];inputData[\"sample\"]=_this.props.Login.masterData?_this.props.Login.masterData.sample:\"\";inputData[\"iqcsample\"]=_this.props.Login.masterData?_this.props.Login.masterData.iqcsample:\"\";var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"initiate\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,testStartId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread(_objectSpread({},masterData),{},{defaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[1],realdefaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[1]})},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchInitiateAction(inputData,_this.props.Login.masterData,_this.confirmMessage);}}};_this.batchSaveIQCActions=function(selectedmaster){if(parseFloat(_this.state.selectedRecord.susedquantity)<parseFloat(_this.props.Login.masterData.inventoryTransaction.savailablequatity)){if(_this.props.Login.selectedSpec.nallottedspeccode!==undefined&&_this.props.Login.selectedSpec.nallottedspeccode!==\"\"){var userInfo={};var inputRegistrationData={};var inputMaterialInventoryData={};var inputBatchData={};var map={};var batchCreationSampleData={};var batchCreationTestData={};var batchCreationSampleArray=[];var batchCreationTestArray=[];var samplecombinationuniqueArray=[];var inputMaterialInventoryArrData=[];batchCreationSampleData[\"nspecsampletypecode\"]=_this.props.Login.selectedSpec&&_this.props.Login.selectedSpec.nallottedspeccode?_this.props.Login.selectedSpec.nallottedspeccode.nspecsampletypecode:transactionStatus.NA;batchCreationSampleData[\"ncomponentcode\"]=transactionStatus.NA;batchCreationSampleData[\"slno\"]=1;batchCreationSampleArray.push(batchCreationSampleData);inputRegistrationData[\"nallottedspeccode\"]=_this.props.Login.selectedSpec&&_this.props.Login.selectedSpec.nallottedspeccode?_this.props.Login.selectedSpec.nallottedspeccode.value:transactionStatus.NA;inputRegistrationData[\"ntemplatemanipulationcode\"]=_this.props.Login.ntemplatemanipulationcode||transactionStatus.NA;inputRegistrationData[\"nregsubtypeversioncode\"]=_this.props.Login.masterData.nregsubtypeversioncode;inputRegistrationData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode;// inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n// inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\n// inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputRegistrationData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputRegistrationData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputRegistrationData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputRegistrationData[\"nproductcatcode\"]=transactionStatus.NA;inputRegistrationData[\"nproductcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcatcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcode\"]=transactionStatus.NA;inputRegistrationData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;inputRegistrationData[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;inputRegistrationData[\"jsondata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,smaterialcatname:_this.state.selectedMaterialCategory.label,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']};inputRegistrationData[\"jsonuidata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,smaterialcatname:_this.state.selectedMaterialCategory.label,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']};// inputMaterialInventoryData = {\n//     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\n// }\n//  inputMaterialInventoryData = {\n//         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\n//         jsondata : {\n//             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         jsonuidata : {\n//             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\n//  };\ninputMaterialInventoryData[\"nmaterialinventorycode\"]=_this.state.selectedMaterialInventory.item.nmaterialinventorycode;inputMaterialInventoryData[\"jsondata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsondata']),{},{nqtyused:_this.state.selectedRecord.susedquantity,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']});//inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\ninputMaterialInventoryData[\"nsectioncode\"]=_this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];inputMaterialInventoryData[\"jsonuidata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsonuidata']),{},{nqtyused:_this.state.selectedRecord.susedquantity,nsectioncode:_this.props.Login.masterData.selectedInventoryUnit['nsectioncode']});//inputMaterialInventoryArrData.push(inputMaterialInventoryData);\nbatchCreationTestData[\"ntestgrouptestcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode:transactionStatus.NA;//     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\nbatchCreationTestData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;batchCreationTestData[\"nsectioncode\"]=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;batchCreationTestData[\"nmethodcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.nmethodcode:transactionStatus.NA;//   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\nbatchCreationTestData[\"nrepeatcountno\"]=1;//--\n//    batchCreationTestData[\"ntestretestno\"]=0;\nbatchCreationTestData[\"nparametercount\"]=1;//--\nbatchCreationTestData[\"slno\"]=1;//--\nbatchCreationTestArray.push(batchCreationTestData);map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;map[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;userInfo=_this.props.Login.userInfo;map[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;map[\"napproveconfversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;map[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;map[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;map[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;map[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;map[\"nmaterialtypecode\"]=_this.state.selectedMaterialType?_this.state.selectedMaterialType.value:transactionStatus.NA;inputBatchData=_this.props.Login.masterData.SelectedBatchmaster;map['Registration']=inputRegistrationData;map['Batchsampleiqc']=inputBatchData;map['RegistrationSample']=batchCreationSampleArray;map['testgrouptest']=batchCreationTestArray;map['userInfo']=userInfo;map['samplecombinationunique']=samplecombinationuniqueArray;map['inputMaterialInventoryArrData']=inputMaterialInventoryData;var inputParam={inputData:map,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHIQCSAVE\",operation:\"createiqc\"};_this.props.batchSaveIQCActions(inputParam.inputData,_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_ADDSPECIFICATIONS\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\"}));}};_this.cancelBatch=function(selectedmaster,cancelId){if(selectedmaster.ntransactionstatus==transactionStatus.DRAFT){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTBATCHINITIATEDRECORD\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/cancelBatch\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.CANCELLED||transactionStatus.DRAFT;// inputData[\"Batchhistory\"] ={\n//     dtransactiondate : formatInputDate(new Date(),true),\n//     scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\n//     };\n//inputData[\"completeId\"] = completeId;\ninputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[3];var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batch\",displayName:\"IDS_BATCHCREATION\",operation:\"cancel\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,cancelId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread(_objectSpread({},masterData),{},{defaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2],realdefaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2]})},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCancelAction(inputData,_this.props.Login.masterData);}}};_this.batchCompleteActions=function(selectedmaster,completeId){if(selectedmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedmaster.ntransactionstatus==transactionStatus.DRAFT){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/completeBatchcreation\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;// inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=transactionStatus.COMPLETED||transactionStatus.DRAFT;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"]!=undefined?_this.state.selectedRecord[\"dtransactiondate\"]:_this.props.Login.currentTime,false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"completeId\"]=completeId;inputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2];var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"complete\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_objectSpread(_objectSpread({},masterData),{},{defaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2],realdefaultFilterStatus:_this.props.Login.masterData.BCFilterStatus&&_this.props.Login.masterData.BCFilterStatus[2]})},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCompleteAction(inputData,_this.props.Login.masterData);}}};_this.closeAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlert:false,loading:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var openSpecModal=_this.props.Login.openSpecModal;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"cancel\"){//    this.props.Login.operation === \"complete\") {\nloadEsign=false;openModal=false;}else{loadEsign=false;}selectedRecord[\"esigncomments\"]=\"\";selectedRecord[\"esignpassword\"]=\"\";}else if(_this.props.Login.openSpecModal){loadEsign=false;openSpecModal=false;}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,openSpecModal:openSpecModal,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var inputData={};selectedRecord[fieldName]=comboData.item;if(fieldName===\"sproductname\"){selectedRecord[\"nproductcode\"]=comboData.value;_this.setState({selectedProduct:comboData});}else if(fieldName===\"ssectionname\"){inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData['naddcontrolCode']=_this.props.Login.naddcontrolCode;inputData['section']=selectedRecord.ssectionname;inputData['userInfo']=_this.props.Login.userInfo;_this.props.getTestInstrumentComboService(inputData,_this.props.Login.masterData);// this.setState({ selectedSection:comboData });\n}else if(fieldName===\"stestname\"){if(_this.props.Login.operation===\"update\"){selectedRecord[\"nprevioustestcode\"]=_this.state.selectedTestSynonym.value;}selectedRecord[\"ntestcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\nselectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord['sinstrumentcatname']=undefined;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;_this.props.getTestInstrumentCategory(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"sinstrumentcatname\"){selectedRecord[\"ninstrumentcatcode\"]=comboData.value;selectedRecord[\"ncalibrationreq\"]=comboData.item.ncalibrationreq;selectedRecord[\"ntestcode\"]=_this.state.selectedTestSynonym.value;selectedRecord['userInfo']=_this.props.Login.userInfo;//selectedRecord['sinstrumentid']=undefined;\nselectedRecord['sinstrumentname']=undefined;_this.props.getInstrumentForInstCategory(selectedRecord,_this.props.Login.masterData);//this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\n}else if(fieldName===\"smaterialcatname\"){selectedRecord[\"nmaterialcatcode\"]=comboData.value;selectedRecord[\"needsectionwise\"]=comboData.item.needSectionwise;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterialCategory:comboData});_this.props.getMaterialBasedOnMaterialCategory(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"smaterialname\"){selectedRecord[\"nmaterialcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['needsection']=comboData.item.needsection;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterial:comboData});_this.props.getMaterialInventoryBasedOnMaterial(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinventoryid\"){selectedRecord[\"nmaterialcode\"]=_this.state.selectedMaterial.value;selectedRecord[\"materialInvCode\"]=comboData.item.nmaterialinventorycode;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['needsection']=_this.props.Login.masterData.selectedMaterial.needsection;_this.setState({selectedMaterialInventory:comboData});// if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\n//     selectedRecord['nsectioncode']=transactionStatus.NA;\n// }else{\nselectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;//}\n_this.props.getMaterialAvailQtyBasedOnInv(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinstrumentname\"){selectedRecord[\"ninstrumentnamecode\"]=comboData.value;selectedRecord[\"sinstrumentname\"]=comboData.label;selectedRecord['userInfo']=_this.props.Login.userInfo;//selectedRecord['sinstrumentid']=undefined;\nselectedRecord['selectedInstrument']=comboData.item;_this.props.getInstrumentID(selectedRecord,_this.props.Login.masterData);}else{_this.setState({selectedInstrumentId:comboData});}};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onMultiColumnValue=function(value,key,flag,label,keys){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});if(flag){keys.map(function(objkey,index){return selectedRecord[objkey]={\"label\":value[0][label[index]],\"value\":value[0][objkey]};});}}else{key.forEach(function(objarray){selectedRecord[objarray]=\"\";});keys.map(function(objkey,index){return selectedRecord[objkey]=\"\";});}_this.props.getBatchManufacturerComboChange(selectedRecord,_this.props.Login.userInfo);};_this.onMultiColumnMAHChange=function(value,key){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});}_this.setState({selectedRecord:selectedRecord});};_this.clearComponentInput=function(){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"nproductcode\"]=undefined;selectedRecord[\"ncomponentcode\"]=undefined;selectedRecord[\"smanuflotno\"]=\"\";selectedRecord[\"dateprompt\"]=transactionStatus.NO;selectedRecord[\"transdatefrom\"]=_this.props.Login.componentDefaultSearchDate;selectedRecord[\"transdateto\"]=_this.props.Login.componentDefaultSearchDate;_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord={};if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onDropImage=function(attachedFiles,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=attachedFiles;_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.saveSample=function(addedsamplelist){if(addedsamplelist===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}else if(addedsamplelist.length>0){var sampleArray=[];addedsamplelist.map(function(item){return sampleArray.push({npreregno:item.npreregno,ntransactionsamplecode:item.ntransactionsamplecode,ntransactiontestcode:item.ntransactiontestcode,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster?_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode:transactionStatus.NA,sarno:item.jsonuidata.samplelist.sarno,ssamplearno:item.jsonuidata.samplelist.ssamplearno,stestname:item.jsonuidata.samplelist.stestname,jsonuidata:{samplelist:item.jsonuidata.samplelist},jsondata:{samplelist:item.jsondata.samplelist}});});var nbatchmastercode=_this.props.Login.masterData.SelectedBatchmaster&&_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;// batchSample = {\n//     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\n//     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\n//     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\n//     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\n// }\n//jsondata : \nvar inputParam={inputData:{batchSample:nbatchmastercode,sampleArray:sampleArray,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,nregtypecode:_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA,nregsubtypecode:_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA}};_this.props.createSampleAction(inputParam.inputData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.operation===\"createSample\"){_this.saveSample(_this.state.addedSamplesList);}else if(_this.props.Login.operation===\"initiate\"){_this.testStartActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.testStartId);}else if(_this.props.Login.operation===\"complete\"){_this.batchCompleteActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.completeId);}else if(_this.props.Login.operation===\"createiqcsample\"){_this.batchSaveIQCActions(_this.props.Login.masterData.SelectedBatchmaster);}else{var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);if(_this.props.Login.operation===\"create\"){inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;}inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedcombodataforFilter\"]=\"true\";inputData[\"needFilterSubmit\"]=\"false\";inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nprevioustestcode\"]=_this.state.selectedRecord&&_this.state.selectedRecord.nprevioustestcode!=undefined?_this.state.selectedRecord.nprevioustestcode:_this.state.selectedTestSynonym.value;inputData[\"ntestcode\"]=_this.state.selectedTestSynonym?_this.state.selectedTestSynonym.value:transactionStatus.NA;inputData[\"nsectioncode\"]=_this.state.selectedSection?_this.state.selectedSection.item.nsectioncode:transactionStatus.NA;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\n//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\ninputData[\"ninstrumentcatcode\"]=_this.state.selectedInstCategory?_this.state.selectedInstCategory.value:transactionStatus.NA;inputData[\"ninstrumentcode\"]=_this.state.selectedInstrument?_this.state.selectedInstrument.value:transactionStatus.NA;inputData[\"nproductcode\"]=_this.state.selectedProduct?_this.state.selectedProduct.value:transactionStatus.NA;inputData[\"ntransactionstatus\"]=transactionStatus.DRAFT;inputData[\"sbatcharno\"]='-';// inputData[\"defaultSampleType\"]=this.props.Login.masterData.realSampleTypeValue ? \n// this.props.Login.masterData.realSampleTypeValue : transactionStatus.NA;\n// inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \n// this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\n// inputData[\"defaultRegistrationSubType\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? \n// this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\ninputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;inputData[\"sinstrumentid\"]=_this.state.selectedInstrumentId&&_this.state.selectedInstrumentId.label;// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \n// this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\n// inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\n// this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA;var postParam=undefined;postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",unchangeList:[\"FromDate\",\"ToDate\"],isSingleGet:true,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\"};var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,postParam:postParam,searchRef:_this.searchRef,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef};if(_this.props.Login.operation===\"create\"){_this.searchRef.current.value=\"\";_this.props.createBatchmasterAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}else{inputData[\"nbatchmastercode\"]=_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;inputData[\"SelectedBatchmaster\"]=_this.props.Login.masterData.SelectedBatchmaster;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.editId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.updateBatchcreationAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}}}// const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n// if (esignNeeded) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\n//             openModal: true, screenName: \"IDS_BATCHCREATION\",\n//             operation: this.props.Login.operation\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n//     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\n//     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\n// }\n};_this.deleteBatchCreation=function(selectedBatch,deleteId,operation){if(selectedBatch.ntransactionstatus===transactionStatus.COMPLETED||selectedBatch.ntransactionstatus===transactionStatus.INITIATED||selectedBatch.ntransactionstatus===transactionStatus.CANCELLED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedBatch.nbatchmastercode,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userInfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA,nsampletypecode:_this.props.Login.masterData.defaultSampleType.nsampletypecode}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"currentdate\"]=formatInputDate(new Date(),true);inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;//inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\n//inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\ninputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;//inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\ninputData[\"nbatchmastercode\"]=selectedBatch.nbatchmastercode;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;// inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\n// this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\ninputData[\"napprovalversioncode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode:transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"selectedBatch\"]=selectedBatch;inputData[\"samples\"]=_this.props.Login.masterData.Samples;var inputParam={postParam:postParam,inputData:inputData,operation:operation,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}};_this.fetchEditData=function(editParam){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT){_this.props.getActiveBatchCreationService(editParam,_this.props.Login.masterData.SelectedBatchmaster);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onFilterSubmit=function(){if(_this.props.Login.masterData.defaultRegistrationType!=undefined&&_this.state.FilterStatusValue.item!=undefined&&_this.state.nregsubtypecode.item!=undefined&&_this.state.ApprovalVersionValue.item!=undefined){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"needFilterSubmit\"]=\"true\";inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;// inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \n// this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\ninputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode?_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode:transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;// inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \n//    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \n//    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\ninputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA;inputData[\"realdefaultFilterStatus\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.item||transactionStatus.NA;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.reloadData=function(isFilterSubmit){_this.searchRef.current.value=\"\";// let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\nif(_this.props.Login.masterData.realRegTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegTypeValue!==null&&_this.props.Login.masterData.realRegSubTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegSubTypeValue!==null&&_this.props.Login.masterData.realApproveConfigVersion!==transactionStatus.NA||_this.props.Login.masterData.realApproveConfigVersion!==null&&_this.props.Login.masterData.defaultFilterStatus!==transactionStatus.NA||_this.props.Login.masterData.defaultFilterStatus!==null){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.realRegTypeValue?_this.props.Login.masterData.realRegTypeValue:transactionStatus.NA;inputData[\"defaultRegistrationSubType\"]=_this.props.Login.masterData.realRegSubTypeValue?_this.props.Login.masterData.realRegSubTypeValue:transactionStatus.NA;inputData[\"ntranscode\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus||transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode||transactionStatus.NA;inputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA;inputData[\"napprovalversioncode\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item.napprovalconfigversioncode||transactionStatus.NA;//inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\ninputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus||transactionStatus.NA;inputData[\"realdefaultFilterStatus\"]=_this.props.Login.masterData.realdefaultFilterStatus&&_this.props.Login.masterData.realdefaultFilterStatus||transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.onClickReport=function(selectedRecord,flag,ncontrolcode){var reportParam={classUrl:\"certificategeneration\",methodUrl:\"reportGeneration\",screenName:\"CertificateGeneration\",operation:\"previewReport\",primaryKeyField:\"nreleasebatchcode\",inputParam:_this.props.Login.inputParam,userInfo:_this.props.Login.userInfo,ncontrolCode:-1,inputData:{sprimarykeyname:'nreleasebatchcode',nprimarykey:selectedRecord.nreleasebatchcode,nreleasebatchcode:selectedRecord.nreleasebatchcode,ncertificatetypecode:selectedRecord.ndecision===transactionStatus.PASS&&flag===1?selectedRecord.ncertificatetypecode:-1,ndecisionstatus:selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\nnreporttypecode:flag===2?reportTypeEnum.SCREENWISE:reportTypeEnum.BATCH,ncontrolcode:ncontrolcode,ncoareporttypecode:flag===2?-1:reportCOAType.BATCHPREVIEW,userinfo:_this.props.Login.userInfo,nflag:flag,skipbatchvalidation:true}};_this.props.onClickReport(reportParam);};_this.reportMethod=function(value){if(value.method===1){_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,2,value.controlId);}else{_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,1,value.controlId);}};var sampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var histortState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var iqcsampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var viewstate={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],userRoleControlRights:[],controlMap:new Map(),selectedFilter:{},sampleState:sampleState,histortState:histortState,iqcsampleState:iqcsampleState,viewstate:viewstate,selectedRecord:{},//confirmmsg:this.ConfirmMessage.bind(this),\ndataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5}};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.searchFieldList=[\"stestname\",\"sinstrumentcatname\",\"sinstrumentname\",\"sproductname\",\"smanufname\",\"stransactiondate\",\"username\",\"stransactionstatus\",\"sdecision\",\"sbatcharno\",\"stransdisplaystatus\"];_this.sampleMandatoryFields=[];_this.copyMandatoryFields=[];return _this;}_createClass(BatchCreation,[{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this2=this;var temparray=data&&data.map(function(option){return{\"idsName\":option[designProperties.LABEL][_this2.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE]==\"null\"?'-':option[designProperties.VALUE],\"width\":\"150px\",\"columnSize\":\"4\"};});return temparray;}},{key:\"valiateCheckAll\",value:// headerSelectionChange = (event) => {\n//     const checked = event.syntheticEvent.target.checked;\n//     let addedComponentList = this.state.addedComponentList || [];\n//     if (checked) {\n//         const data = this.state.addComponentDataList.map(item => {\n//             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\n//                 addedComponentList.push({ ...item, selected: false });\n//                 item.selected = checked;\n//                 return item;\n//             } else {\n//                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\n//                 olditem.selected = checked;\n//                 return olditem;\n//             }\n//         });\n//         this.setState({\n//             addComponentDataList: data, addedComponentList,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n//     else {\n//         let addedComponentData = this.state.addedComponentList || [];\n//         let deletedListdData = this.state.deletedList || [];\n//         const data = this.state.addComponentDataList.map(item => {\n//             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\n//             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\n//             item.selected = checked;\n//             return item;\n//         });\n//         // console.log(\"data:\",data1, data2);\n//         this.setState({\n//             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n// }\nfunction valiateCheckAll(data){var selectAll=true;// let checkRepeatComponent;\n//  let addedComponentList = this.state.addedComponentList || [];\nif(data&&data.length>0){data.forEach(function(dataItem){if(dataItem.selected){if(dataItem.selected===false){selectAll=false;}}else{selectAll=false;// checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\n// if(checkRepeatComponent.length>0){\n//     selectAll = true;\n// }else{\n//     selectAll = false;\n// }\n}});}else{//if (gridType === \"originalgrid\"){\nselectAll=false;// }\n}return selectAll;}},{key:\"render\",value:function render(){var _this3=this;var reportActionList=[];var getBatch={screenName:\"IDS_BATCHCREATION\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"Batchcreation\",keyName:\"batchcreation\"};this.fromDate=this.state.selectedFilter[\"fromdate\"]&&this.state.selectedFilter[\"fromdate\"]||this.props.Login.masterData&&this.props.Login.masterData.realFromDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realFromDate):undefined;this.toDate=this.state.selectedFilter[\"todate\"]&&this.state.selectedFilter[\"todate\"]||this.props.Login.masterData&&this.props.Login.masterData.realToDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realToDate):undefined;var addId=this.state.controlMap.has(\"AddBatchCreation\")&&this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var editId=this.state.controlMap.has(\"EditBatchcreation\")&&this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteBatchcreation\")&&this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;var testStartId=this.state.controlMap.has(\"BatchInitiate\")&&this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;var completeId=this.state.controlMap.has(\"BatchComplete\")&&this.state.controlMap.get(\"BatchComplete\").ncontrolcode;var cancelId=this.state.controlMap.has(\"CancelBatch\")&&this.state.controlMap.get(\"CancelBatch\").ncontrolcode;var addParam={screenName:\"IDS_BATCHCREATION\",primaryeyField:\"nreleasebatchcode\",primaryKeyValue:undefined,operation:\"create\",//inputParam: this.props.Login.inputParam,\nuserInfo:this.props.Login.userInfo,ncontrolCode:addId,nneedtestinitiate:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedtestinitiate,masterData:this.props.Login.masterData,fromdate:this.props.Login.masterData.fromDate,todate:this.props.Login.masterData.toDate,nregtypecode:this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue?this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA,napprovalconfigcode:this.state.ApprovalVersionValue&&this.state.ApprovalVersionValue.item||transactionStatus.NA,ntranscode:this.props.Login.masterData.realdefaultFilterStatus?this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus:transactionStatus.NA,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode};var viewInfoFields=[{\"fieldName\":\"sbatcharno\",\"label\":\"IDS_BATCHARNO\"},{\"fieldName\":\"ssectionname\",\"label\":\"IDS_SECTION\"},{\"fieldName\":\"stestname\",\"label\":\"IDS_TESTNAME\"},{\"fieldName\":\"sinstrumentcatname\",\"label\":\"IDS_INSTRUMENTCATEGORY\"},{\"fieldName\":\"sinstrumentid\",\"label\":\"IDS_INSTRUMENTID\"},{\"fieldName\":\"sinstrumentname\",\"label\":\"IDS_INSTRUMENTNAME\"},{\"fieldName\":\"sproductname\",\"label\":\"IDS_SAMPLETYPE\"},{\"fieldName\":\"stransdisplaystatus\",\"label\":\"IDS_STATUS\"},{\"fieldName\":\"username\",\"label\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.INITIATED?\"IDS_BATCHINITIATEDBY\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED?\"IDS_BATCHCOMPLETEDBY\":\"IDS_BATCHCREATEDBY\"}];var stransactionstatuscode=this.props.Login.masterData.SelectedFilterStatus?String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus):null;if(this.state.selectedRecord&&this.state.selectedRecord[\"nfiltertransstatus\"]!==undefined){stransactionstatuscode=this.state.selectedRecord[\"nfiltertransstatus\"].value===String(0)?null:String(this.state.selectedRecord[\"nfiltertransstatus\"].value);}var obj=convertDateValuetoString(this.props.Login.masterData.realFromDate,this.props.Login.masterData.realToDate,this.props.Login.userInfo);var editParam={screenName:\"IDS_BATCHCREATION\",operation:\"update\",primaryKeyField:\"nbatchmastercode\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editId,masterData:this.props.Login.masterData,naddcontrolCode:addId,nsampletypecode:this.props.Login.masterData.realSampleTypeValue?this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA,nregtypecode:this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue?this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA,nregsubtypecode:this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA};var filterParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",fecthInputObject:{fromDate:obj.fromDate,toDate:obj.toDate,userInfo:this.props.Login.userInfo,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,napprovalconfigcode:this.state.ApprovalVersionValue?this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA,ntranscode:this.state.FilterStatusValue?this.state.FilterStatusValue.value:transactionStatus.DRAFT,nsampletypecode:this.props.Login.masterData.defaultSampleType?this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA//fromDate, toDate, \n//stransactionstatuscode,\n//activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\n},masterData:this.props.Login.masterData,//unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\nsearchFieldList:this.searchFieldList};this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto},// {\n//     \"label\": \"IDS_SAMPLETYPE\",\n//     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\n// }, \n{\"label\":\"IDS_REGISTRATIONTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.sregtypename?this.props.Login.masterData.realRegTypeValue.sregtypename:\"NA\"// \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\n// this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\n},{\"label\":\"IDS_REGISTRATIONSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?this.props.Login.masterData.realRegSubTypeValue.sregsubtypename:\"NA\"},{\"label\":\"IDS_BATCHSTATUS\",\"value\":this.props.Login.masterData.realdefaultFilterStatus&&this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus?this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus:\"NA\"}// {\n//     \"label\": \"IDS_CONFIGVERSION\",\n//     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\n// }\n];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd \"},/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData})),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.Batchmaster||[],selectedMaster:this.props.Login.masterData.SelectedBatchmaster,primaryKeyField:\"nbatchmastercode\",userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData//getMasterDetail={this.props.getSelectedBatchCreationDetail}\n,getMasterDetail:function getMasterDetail(batch){return _this3.props.getSelectedBatchCreationDetail(batch,_this3.props.Login.userInfo,_this3.props.Login.masterData);},inputParam:getBatch,screenName:this.props.intl.formatMessage({id:\"IDS_BATCHCREATION\"})//mainField=\"stestname\"\n,mainField:\"sbatcharno\",firstField:\"stestname\",secondField:\"sinstrumentname\",selectedListName:\"SelectedBatchmaster\",objectName:\"BatchCreation\",listName:\"IDS_BATCHCREATION\",needValidation:false,hidePaging:false// subFields={\n//     [\n//         { [designProperties.VALUE]: \"sinstrumentcatname\" },\n//         { [designProperties.VALUE]: \"sinstrumentname\" },\n//         // { [designProperties.VALUE]: \"smahname\" },\n//         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\n//     ]\n// }\n,needFilter:true,needMultiSelect:false,subFieldsLabel:true,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterColumnData:this.props.filterColumnData,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam,isClearSearch:this.props.Login.isClearSearch// skip={this.state.skip}\n// take={this.state.take}\n// handlePageChange={this.handlePageChange}\n,addId:addId,showFilterIcon:true,userRoleControlRights:this.state.userRoleControlRights,reloadData:this.reloadData,openModal:function openModal(){return _this3.props.getBatchSection(addParam);}// openModal={() => this.props.getTestInstrumentComboService(addParam)}\n,commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this3.props.getTestInstrumentComboService(addParam);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),\"data-for\":\"tooltip-common-wrap\"//onClick={() => this.reloadData(false)} \n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})))// </Tooltip>\n,filterComponent:[{\"IDS_FILTER\":/*#__PURE__*/React.createElement(BatchCreationFilter,{fromDate:this.state.selectedFilter[\"fromDate\"]!=undefined?rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"fromDate\"]):this.fromDate,toDate:this.state.selectedFilter[\"toDate\"]!=undefined?rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"toDate\"]):this.toDate,SampleType:this.state.SampleType||[],SampleTypeValue:this.props.Login.masterData.defaultSampleType||[],RegType:this.state.RegistrationType||[],RegTypeValue:this.props.Login.masterData.defaultRegistrationType||[],RegSubType:this.state.RegistrationSubType||[],RegSubTypeValue:this.state.nregsubtypecode||[],DesignTemplateMappingValue:this.props.Login.masterData.DesignTemplateMappingValue||[],FilterStatus:this.state.BCFilterStatus||[],FilterStatusValue:this.state.FilterStatusValue||[],ApprovalVersion:this.state.ApprovalConfigVersion||[],ApprovalVersionValue:this.state.ApprovalVersionValue||[],REJobStatus:this.state.REJobStatus||[],JobStatusValue:this.props.Login.masterData.defaultjobstatus||[],Test:this.state.Testvalues||[],TestValue:this.props.Login.masterData.selectedTestSynonym||[],onFilterComboChange:this.onFilterComboChange,handleDateChange:this.handleDateChange,handleFilterDateChange:this.handleFilterDateChange,userInfo:this.props.Login.userInfo,onDesignTemplateChange:this.onDesignTemplateChange,DynamicDesignMapping:this.state.stateDynamicDesign||[]})}]})),/*#__PURE__*/React.createElement(Col,{md:\"8\"},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.Batchmaster&&this.props.Login.masterData.Batchmaster.length>0&&this.props.Login.masterData.SelectedBatchmaster?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedBatchmaster.sbatcharno),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(MediaLabel,{className:\"btn btn-outlined \".concat(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED?\"outline-initiate\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED?\"outline-success\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.CANCELLED?\"outline-danger\":\"outline-secondary\",\" btn-sm ml-3\")},this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"view\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_VIEWINFO\"})// hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\n,onClick:function onClick(){return _this3.props.viewInfo(_this3.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this3.props.Login.userInfo,_this3.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"editBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(){return _this3.fetchEditData(editParam);}// onClick={() => this.props.getActiveBatchCreationService(editParam,\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt//  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\n})),/*#__PURE__*/ // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\nReact.createElement(Nav.Link,{name:\"initiateBatchCreation\"//  data-for=\"tooltip-common-wrap\" \n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_INITIATE\"}),hidden:this.state.userRoleControlRights.indexOf(testStartId)===-1,className:\"btn btn-circle outline-grey mr-2\"//role=\"button\"\n,onClick:function onClick(){return _this3.testPopUpStartActions(testStartId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlay}))// :\"\"\n,/*#__PURE__*/React.createElement(Nav.Link,{name:\"completeBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(completeId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),onClick:function onClick(){return _this3.completePopUpStartActions(completeId);}//onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\n// onClick={() => this.props.validateBatchComplete({\n//     masterData: this.props.Login.masterData,\n//     userInfo: this.props.Login.userInfo,\n//     userRoleControlRights: this.props.Login.userRoleControlRights,\n//     ncontrolCode: completeId,\n//     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\n// })}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheckCircle// title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\n})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETE\"}),onClick:function onClick(){return _this3.ConfirmDelete(_this3.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(cancelId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CANCEL\"})//onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \n},/*#__PURE__*/React.createElement(Image,{src:reject,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this3.cancelBatch(_this3.props.Login.masterData.SelectedBatchmaster,cancelId);},\"data-place\":\"left\"})),reportActionList.length>0?/*#__PURE__*/React.createElement(CustomPopover,{nav:true,data:reportActionList,Button:true,hideIcon:true,btnClasses:\"btn-circle btn_grey ml-2\",textKey:\"value\",dynamicButton:function dynamicButton(value){return _this3.reportMethod(value);},userRoleControlRights:this.state.userRoleControlRights}):\"\")))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs\"},/*#__PURE__*/React.createElement(CustomTab,{activeKey:this.props.Login.batchactiveKey?this.props.Login.batchactiveKey:\"IDS_SAMPLE\",tabDetail:this.tabDetail(),onTabChange:this.onTabChange})))))):\"\"))))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:\"lg\",closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.operation===\"createSample\"?this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"view\"||this.props.Login.operation===\"complete\"?this.props.intl.formatMessage({id:\"IDS_BATCH\"}):this.props.Login.operation===\"createiqcsample\"?this.props.intl.formatMessage({id:\"IDS_BATCHIQCSAMPLE\"}):this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.operation===\"create\"?this.batchMandatoryFields//  : this.props.Login.operation === \"initiate\"  ?\n//    this.initiateMandatoryFields \n//  : this.props.Login.operation === \"complete\" ?\n//    this.completeMandatoryFields\n:this.props.Login.operation===\"createiqcsample\"?this.materialIqcMandatory:[],showSaveContinue:this.state.showSaveContinue,noSave:this.props.Login.operation===\"view\"?true:false,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"?/*#__PURE__*/React.createElement(AddBatchCreation,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,onNumericInputOnChange:this.onNumericInputOnChange,handleDateChange:this.handleDateChange,Test:this.state.Testvalues||[],selectedInstrumentCategory:this.state.selectedInstCategory,InstrumentCategory:this.state.InstrumentCategory,Instrument:this.state.Instrument,selectedInstrument:this.state.selectedInstrument,productCategory:this.state.ProductCategory,selectedProductCategory:this.state.selectedProductCategory,TestValue:this.state.selectedTestSynonym||[],product:this.state.Product||[],instrumentID:this.state.InstrumentID||[],selectedProduct:this.state.selectedProduct||[],studyPlanList:this.props.Login.studyPlanList||[],manufacturerList:this.props.Login.productManufacturerList||[],maHolderList:this.props.Login.maHolderList||[],timeZoneList:this.props.Login.timeZoneList||[],selectedBacthCreation:this.props.Login.masterData.SelectedBatchmaster||{},operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,selectedInstrumentId:this.state.selectedInstrumentId,onMultiColumnValue:this.onMultiColumnValue,onMultiColumnMAHChange:this.onMultiColumnMAHChange,batchCreationEditStatusList:this.props.Login.batchCreationEditStatusList,Section:this.state.Section,selectedSection:this.state.selectedSection}):this.props.Login.operation===\"createSample\"?/*#__PURE__*/React.createElement(AddSample,{onInputOnChange:this.onInputOnChange,getProductByCategory:this.getProductByCategory,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,userInfo:this.props.userInfo,productCategoryList:this.props.productCategoryList,productList:this.props.productList,componentList:this.props.componentList,getDataForAddComponent:this.getDataForAddComponent,clearComponentInput:this.props.clearComponentInput,samples:this.state.samples||[],headerSelectionChange:this.headerSelectionChange,selectionChange:this.selectionChange,addedComponentList:this.state.addedComponentList||[],addedHeaderSelectionChange:this.addedHeaderSelectionChange,addedSelectionChange:this.addedSelectionChange//dataStateChange={this.dataStateChange} \n,userRoleControlRights:this.props.userRoleControlRights,controlMap:this.props.controlMap,inputParam:this.props.inputParam,screenName:this.props.screenName,addSelectAll:this.state.addSelectAll,deleteSelectAll:this.state.deleteSelectAll,onDeleteSelectedComponent:this.onDeleteSelectedComponent,componentPopupSkip:this.props.componentPopupSkip,componentPopupTake:this.props.componentPopupTake,componentPageSizes:this.props.componentPageSizes,nneedsubsample:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedsubsample}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"complete\"?/*#__PURE__*/React.createElement(AddBatchinitiate,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,handleDateChange:this.handleDateChange,selectedRecord:this.state.selectedRecord,onInputOnChange:this.onInputOnChange,currentTime:this.props.Login.currentTime||[]}):this.props.Login.operation===\"view\"?/*#__PURE__*/React.createElement(Card,{className:\"one\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ViewInfo,{userInfo:this.props.Login.userInfo,selectedRecordView:this.props.Login.masterData.selectedRecordView,viewInfoFields:viewInfoFields}))):this.props.Login.operation===\"createiqcsample\"?/*#__PURE__*/React.createElement(AddMaterialIqc,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,materialCategory:this.state.MaterialCategory,selectedMaterialType:this.state.selectedMaterialType,selectedMaterialCategory:this.state.selectedMaterialCategory,onComboChange:this.onComboChange,selectedMaterial:this.state.selectedMaterial,screenName:this.props.intl.formatMessage({id:\"IDS_SPECIFICATION\"}),handleSaveClick:this.handleSaveClick,material:this.state.Material,materialInventory:this.state.MaterialInventory,AddSpec:this.AddSpec,onInputOnChange:this.onInputOnChange,currentTime:this.props.Login.currentTime||[],loadSpec:this.props.Login.loadSpec,selectedMaterialInventory:this.state.selectedMaterialInventory,selectedInventoryUnit:this.props.Login.masterData.selectedInventoryUnit,AgaramTree:this.props.Login.AgaramTree,openNodes:this.props.Login.OpenNodes,onTreeClick:this.onTreeClick,focusKey:this.props.Login.FocusKey,activeKey:this.props.Login.batchactiveKey,Specification:this.props.Login.Specification,selectedSpec:this.props.Login.selectedSpec,selectedRecord:this.state.selectedRecord,onSpecChange:this.onspecChange,openSpecModal:this.props.Login.openSpecModal,closeModal:this.closeModal}):\"\"}):\"\",this.state.showConfirmAlert?this.confirmAlert():\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state=this.state,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,selectedRecord=_this$state.selectedRecord,filterData=_this$state.filterData,addedComponentList=_this$state.addedComponentList,filterStatusList=_this$state.filterStatusList,dataState=_this$state.dataState,sahDataState=_this$state.sahDataState,bahDataState=_this$state.bahDataState,chDataState=_this$state.chDataState,testCommentDataState=_this$state.testCommentDataState,SampleType=_this$state.SampleType,RegistrationType=_this$state.RegistrationType,RegistrationSubType=_this$state.RegistrationSubType,BCFilterStatus=_this$state.BCFilterStatus,REJobStatus=_this$state.REJobStatus,Testvalues=_this$state.Testvalues,ApprovalConfigVersion=_this$state.ApprovalConfigVersion,skip=_this$state.skip,take=_this$state.take,testskip=_this$state.testskip,testtake=_this$state.testtake,selectedFilter=_this$state.selectedFilter,InstrumentCategory=_this$state.InstrumentCategory,selectedInstCategory=_this$state.selectedInstCategory,ProductCategory=_this$state.ProductCategory,Instrument=_this$state.Instrument,selectedInstrument=_this$state.selectedInstrument,selectedTestSynonym=_this$state.selectedTestSynonym,nregsubtypecode=_this$state.nregsubtypecode,selectedProductCategory=_this$state.selectedProductCategory,Product=_this$state.Product,selectedProduct=_this$state.selectedProduct,samples=_this$state.samples,addSelectAll=_this$state.addSelectAll,deleteSelectAll=_this$state.deleteSelectAll,ApprovalVersionValue=_this$state.ApprovalVersionValue,FilterStatusValue=_this$state.FilterStatusValue,Section=_this$state.Section,selectedSection=_this$state.selectedSection,sampleGridItem=_this$state.sampleGridItem,subsampleGridItem=_this$state.subsampleGridItem,_this$state$testGridI=_this$state.testGridItem,testGridItem=_this$state$testGridI===void 0?[]:_this$state$testGridI,DynamicGridItem=_this$state.DynamicGridItem,samplegridmoreitem=_this$state.samplegridmoreitem,DynamicGridMoreItem=_this$state.DynamicGridMoreItem,MaterialCategory=_this$state.MaterialCategory,selectedMaterialType=_this$state.selectedMaterialType,Material=_this$state.Material,selectedMaterial=_this$state.selectedMaterial,selectedMaterialCategory=_this$state.selectedMaterialCategory,MaterialInventory=_this$state.MaterialInventory,selectedMaterialInventory=_this$state.selectedMaterialInventory,Specification=_this$state.Specification,selectedSpec=_this$state.selectedSpec,addedSamplesList=_this$state.addedSamplesList,testGridArnoItems=_this$state.testGridArnoItems,InstrumentID=_this$state.InstrumentID,selectedInstrumentId=_this$state.selectedInstrumentId,sinstrumentid=_this$state.sinstrumentid;var isStateChanged=false;var bool=false;addedSamplesList=[];samples=[];if(this.props.Login.masterData.RegistrationSubType&&this.props.Login.masterData.RegistrationSubType!==previousProps.Login.masterData.RegistrationSubType){var _dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5//, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \n};bool=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;isStateChanged=true;SampleType=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",'nsampletypecode','ascending','nsampletypecode',false);RegistrationType=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",'ascending','nregtypecode',false);RegistrationSubType=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",'ascending','nregsubtypecode',false);BCFilterStatus=constructOptionList(this.props.Login.masterData.BCFilterStatus||[],\"ntransactionstatus\",\"sfilterstatus\",\"nsorter\",'ascending',\"ntransactionstatus\",false);REJobStatus=constructOptionList(this.props.Login.masterData.REJobStatus||[],'njobstatuscode','sidsjobstatusname','ascending','njobstatuscode',false);Testvalues=constructOptionList(this.props.Login.masterData.Testvalues||[],'ntestcode','stestname','ascending','ntestcode',false);ApprovalConfigVersion=constructOptionList(this.props.Login.masterData.ApprovalConfigVersion||[],'napprovalconfigversioncode','sversionname','ascending','napprovalconfigversioncode',false);InstrumentCategory=constructOptionList(this.props.Login.masterData.instrumentCategory||[],'ninstrumentcatcode','sinstrumentcatname','ascending','ninstrumentcatcode',false);Instrument=constructOptionList(this.props.Login.masterData.instrument||[],'ninstrumentnamecode','sinstrumentname','ascending','ninstrumentcode',false);ProductCategory=constructOptionList(this.props.Login.masterData.productcategory||[],'nproductcatcode','sproductcatname','ascending','nproductcatcode',false);Product=constructOptionList(this.props.Login.masterData.product||[],'nproductcode','sproductname','ascending','nproductcode',false);Section=constructOptionList(this.props.Login.masterData.Section||[],'nsectioncode','ssectionname','ascending','nsectioncode',false);MaterialCategory=constructOptionList(this.props.Login.masterData.MaterialCategory||[],'nmaterialcatcode','smaterialcatname','ascending','nmaterialcatcode',false);Material=constructOptionList(this.props.Login.masterData.Material||[],'nmaterialcode','smaterialname','ascending','nmaterialcode',false);MaterialInventory=constructOptionList(this.props.Login.masterData.MaterialInventory||[],'nmaterialinventtranscode','sinventoryid','ascending','nmaterialinventtranscode',false);InstrumentID=constructOptionList(this.props.Login.masterData.instrumentID||[],'ninstrumentcode','sinstrumentid','ascending','ninstrumentcode',false);skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;var selectFilterStatus={ntransactionstatus:transactionStatus.PARTIAL,sfilterstatus:this.props.intl.formatMessage({id:\"IDS_PARTIAL\"}),scolorhexcode:\"#800000\"};var selectedFilters=this.props.Login.masterData.BCFilterStatus||[];var selectedFiltersNew=JSON.parse(JSON.stringify(selectedFilters));var index=selectedFiltersNew.findIndex(function(item){return item.ntransactionstatus===transactionStatus.PARTIAL;});if(selectedFiltersNew.length>0&&index===-1){selectedFiltersNew.push(selectFilterStatus);}selectedFilter=selectedFiltersNew;SampleType=SampleType.get(\"OptionList\");RegistrationType=RegistrationType.get(\"OptionList\");RegistrationSubType=RegistrationSubType.get(\"OptionList\");BCFilterStatus=BCFilterStatus.get(\"OptionList\");REJobStatus=REJobStatus.get(\"OptionList\");Testvalues=Testvalues.get(\"OptionList\");ApprovalConfigVersion=ApprovalConfigVersion.get(\"OptionList\");InstrumentCategory=InstrumentCategory.get(\"OptionList\");Instrument=Instrument.get(\"OptionList\");ProductCategory=ProductCategory.get(\"OptionList\");Product=Product.get(\"OptionList\");Section=Section.get(\"OptionList\");MaterialCategory=MaterialCategory.get(\"OptionList\");Material=Material.get(\"OptionList\");MaterialInventory=MaterialInventory.get(\"OptionList\");InstrumentID=InstrumentID.get(\"OptionList\");//selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\nsamples=this.props.Login.masterData.samples;addSelectAll=false;deleteSelectAll=true;nregsubtypecode=this.props.Login.masterData.defaultRegistrationSubType?{label:this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,value:this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,item:this.props.Login.masterData.defaultRegistrationSubType}:\"\";if(this.props.Login.masterData.selectedTestSynonym!==previousProps.Login.masterData.selectedTestSynonym){selectedTestSynonym=this.props.Login.masterData.selectedTestSynonym?{label:this.props.Login.masterData.selectedTestSynonym.stestname,value:this.props.Login.masterData.selectedTestSynonym.ntestcode,item:this.props.Login.masterData.selectedTestSynonym}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedProductcategory!==previousProps.Login.masterData.selectedProductcategory){selectedProductCategory=this.props.Login.masterData.selectedProductcategory?{label:this.props.Login.masterData.selectedProductcategory.sproductcatname,value:this.props.Login.masterData.selectedProductcategory.nproductcatcode,item:this.props.Login.masterData.selectedProductcategory}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedProduct!==previousProps.Login.masterData.selectedProduct){selectedProduct=this.props.Login.masterData.selectedProduct?{label:this.props.Login.masterData.selectedProduct.sproductname,value:this.props.Login.masterData.selectedProduct.nproductcode,item:this.props.Login.masterData.selectedProduct}:\"\";var sproductname=selectedProduct.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sproductname:sproductname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentCategory!==previousProps.Login.masterData.selectedInstrumentCategory){selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory?{label:this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,value:this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,item:this.props.Login.masterData.selectedInstrumentCategory}:\"\";//  selectedRecord['sinstrumentid']={};\n//  selectedRecord['sinstrumentname']={};\n//  selectedRecord = {...this.state.selectedRecord,sproductname,...selectedRecord};\nisStateChanged=true;}if(this.props.Login.masterData.selectedInstrument!==previousProps.Login.masterData.selectedInstrument){selectedInstrument=this.props.Login.masterData.selectedInstrument?{label:this.props.Login.masterData.selectedInstrument.sinstrumentname,value:this.props.Login.masterData.selectedInstrument.ninstrumentcode,item:this.props.Login.masterData.selectedInstrument}:\"\";var sinstrumentname=selectedInstrument.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sinstrumentname:sinstrumentname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentId!==previousProps.Login.masterData.selectedInstrumentId){selectedInstrumentId=this.props.Login.masterData.selectedInstrumentId?{label:this.props.Login.masterData.selectedInstrumentId.sinstrumentid,value:this.props.Login.masterData.selectedInstrumentId.ninstrumentcode,item:this.props.Login.masterData.selectedInstrumentId}:\"\";var _sinstrumentid=selectedInstrumentId.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sinstrumentid:_sinstrumentid},selectedRecord);isStateChanged=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});isStateChanged=true;}if(this.props.Login.selectedComponentList!==previousProps.Login.selectedComponentList){addedComponentList=this.props.Login.selectedComponentList;isStateChanged=true;// this.setState({ addedComponentList });\n}if(this.props.Login.masterData.defaultApprovalConfigVersion!==previousProps.Login.masterData.defaultApprovalConfigVersion){ApprovalVersionValue=this.props.Login.masterData.defaultApprovalConfigVersion?{label:this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,value:this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,item:this.props.Login.masterData.defaultApprovalConfigVersion}:\"\";isStateChanged=true;}if(this.props.Login.masterData.defaultFilterStatus!==previousProps.Login.masterData.defaultFilterStatus){FilterStatusValue=this.props.Login.masterData.defaultFilterStatus?{label:this.props.Login.masterData.defaultFilterStatus.sfilterstatus,value:this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,item:this.props.Login.masterData.defaultFilterStatus}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedSection!==previousProps.Login.masterData.selectedSection){selectedSection=this.props.Login.masterData.selectedSection?{label:this.props.Login.masterData.selectedSection.ssectionname,value:this.props.Login.masterData.selectedSection.nsectioncode,item:this.props.Login.masterData.selectedSection}:\"\";var ssectionname=selectedSection.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{ssectionname:ssectionname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialType!==previousProps.Login.masterData.selectedMaterialType){selectedMaterialType=this.props.Login.masterData.selectedMaterialType?{label:this.props.Login.masterData.selectedMaterialType.smaterialtypename,value:this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,item:this.props.Login.masterData.selectedMaterialType}:\"\";selectedRecord[\"smaterialtypename\"]=this.props.Login.masterData.selectedMaterialType.smaterialtypename;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialCategory!==previousProps.Login.masterData.selectedMaterialCategory){selectedMaterialCategory=this.props.Login.masterData.selectedMaterialCategory?{label:this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,value:this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,item:this.props.Login.masterData.selectedMaterialCategory}:\"\";selectedRecord[\"smaterialcatname\"]=this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterial!==previousProps.Login.masterData.selectedMaterial){selectedMaterial=this.props.Login.masterData.selectedMaterial?{label:this.props.Login.masterData.selectedMaterial.smaterialname,value:this.props.Login.masterData.selectedMaterial.nmaterialcode,item:this.props.Login.masterData.selectedMaterial}:\"\";selectedRecord[\"smaterialname\"]=this.props.Login.masterData.selectedMaterial.smaterialname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialInventory!==previousProps.Login.masterData.selectedMaterialInventory){selectedMaterialInventory=this.props.Login.masterData.selectedMaterialInventory?{label:this.props.Login.masterData.selectedMaterialInventory.sinventoryid,value:this.props.Login.masterData.selectedMaterialInventory.nmaterialinventtranscode,item:this.props.Login.masterData.selectedMaterialInventory}:\"\";selectedRecord[\"sinventoryid\"]=this.props.Login.masterData.selectedMaterialInventory&&this.props.Login.masterData.selectedMaterialInventory.sinventoryid!=null?this.props.Login.masterData.selectedMaterialInventory.sinventoryid:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedInventoryUnit!==previousProps.Login.masterData.selectedInventoryUnit){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nselectedRecord[\"savailablequatity\"]=this.props.Login.masterData.selectedInventoryUnit&&this.props.Login.masterData.selectedInventoryUnit.savailablequatity!=null?this.props.Login.masterData.selectedInventoryUnit.savailablequatity:\"\";selectedRecord[\"susedquantity\"]=\"\";selectedRecord[\"sremarks\"]=\"\";isStateChanged=true;}if(this.props.Login.isselectedrecordempty){selectedRecord={};isStateChanged=true;}if(this.props.Login.masterData.Specification!==previousProps.Login.masterData.Specification){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nSpecification=this.props.Login.masterData.Specification&&this.props.Login.masterData.Specification!=null?this.props.Login.masterData.Specification:\"\";isStateChanged=true;}if(this.props.Login.selectedSpec!==previousProps.Login.selectedSpec){selectedRecord[\"selectedSpec\"]=this.props.Login.selectedSpec&&this.props.Login.selectedSpec!=null?this.props.Login.selectedSpec:\"\";isStateChanged=true;}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;isStateChanged=true;}if(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);testGridArnoItems=dynamicColumn.testListFields.testlistitem?dynamicColumn.testListFields.testlistitem:[];testGridItem[0]=dynamicColumn.testListFields.releasetestfields[0]?dynamicColumn.testListFields.releasetestfields[0]:[];sampleGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];subsampleGridItem=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];samplegridmoreitem=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];DynamicGridMoreItem=_toConsumableArray(samplegridmoreitem);DynamicGridItem=[].concat(_toConsumableArray(testGridArnoItems),_toConsumableArray(testGridItem),_toConsumableArray(sampleGridItem),_toConsumableArray(subsampleGridItem));isStateChanged=true;}}// if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\n//     // let selectedRecord = {};\n//     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\n//     'ascending', 'nmaterialcatcode', false);\n//     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\n//     'ascending', 'nmaterialcode', false);\n//     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\n//     'ascending', 'nmaterialinventorycode', false);\n//      MaterialCategory = MaterialCategory.get(\"OptionList\")\n//      Material = Material.get(\"OptionList\")\n//      MaterialInventory = MaterialInventory.get(\"OptionList\")\n//      selectedRecord[\"MaterialCategory\"]=MaterialCategory\n//      selectedRecord[\"Material\"]=Material\n//      selectedRecord[\"MaterialInventory\"]=MaterialInventory\n//  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\n//         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\n//             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\n//             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\n//         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\n//         isStateChanged = true;\n//     }\n//  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\n//         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\n//             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\n//             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \n//         }:\"\"\n//         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\n//         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\n//          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\n//             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\n//             item: this.props.Login.selectedRecord.selectedMaterial\n//         }:\"\"\n//         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\n//         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\n//         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\n//             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\n//             item: this.props.Login.selectedRecord.selectedMaterialInventory\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\n//         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\n//         isStateChanged = true;\n//     }\nif(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){isStateChanged=true;//selectedRecord = this.props.Login.selectedRecord;\nthis.setState({selectedRecord:this.props.Login.selectedRecord});}if(isStateChanged){this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,selectedRecord:selectedRecord,filterData:filterData,addedComponentList:addedComponentList,filterStatusList:filterStatusList,dataState:dataState,sahDataState:sahDataState,bahDataState:bahDataState,chDataState:chDataState,testCommentDataState:testCommentDataState,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,BCFilterStatus:BCFilterStatus,REJobStatus:REJobStatus,Testvalues:Testvalues,ApprovalConfigVersion:ApprovalConfigVersion,skip:skip,take:take,testskip:testskip,testtake:testtake,selectedFilter:selectedFilter,selectedInstCategory:selectedInstCategory,InstrumentCategory:InstrumentCategory,Instrument:Instrument,selectedInstrument:selectedInstrument,selectedTestSynonym:selectedTestSynonym,nregsubtypecode:nregsubtypecode,ProductCategory:ProductCategory,selectedProductCategory:selectedProductCategory,Product:Product,selectedProduct:selectedProduct,samples:samples,addSelectAll:addSelectAll,deleteSelectAll:deleteSelectAll,ApprovalVersionValue:ApprovalVersionValue,FilterStatusValue:FilterStatusValue,Section:Section,selectedSection:selectedSection,sampleGridItem:sampleGridItem,subsampleGridItem:subsampleGridItem,testGridItem:testGridItem,DynamicGridItem:DynamicGridItem,samplegridmoreitem:samplegridmoreitem,DynamicGridMoreItem:DynamicGridMoreItem,MaterialCategory:MaterialCategory,selectedMaterialType:selectedMaterialType,Material:Material,selectedMaterial:selectedMaterial,selectedMaterialCategory:selectedMaterialCategory,MaterialInventory:MaterialInventory,selectedMaterialInventory:selectedMaterialInventory,Specification:Specification,selectedSpec:selectedSpec,addedSamplesList:addedSamplesList,testGridArnoItems:testGridArnoItems,InstrumentID:InstrumentID,selectedInstrumentId:selectedInstrumentId,sinstrumentid:sinstrumentid});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){// if (props.Login.masterStatus !== \"\") {\n//     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\n//        if(props.Login.operation == \"initiate\"){\n//         toast.warn(props.Login.masterStatus);\n//         //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\n//        }\n//     }\n// }\nif(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;// if (props.Login.selectedRecord !== state.selectedRecord) {\n//     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\n// }\n}}]);return BatchCreation;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,getTestInstrumentComboService:getTestInstrumentComboService,getTestInstrumentCategory:getTestInstrumentCategory,getInstrumentForInstCategory:getInstrumentForInstCategory,getBatchCreationDetails:getBatchCreationDetails,onActionFilterSubmit:onActionFilterSubmit,getProductcategoryAction:getProductcategoryAction,createBatchmasterAction:createBatchmasterAction,getSamplesForGrid:getSamplesForGrid,getSelectedBatchCreationDetail:getSelectedBatchCreationDetail,createSampleAction:createSampleAction,deleteSampleAction:deleteSampleAction,getActiveBatchCreationService:getActiveBatchCreationService,updateBatchcreationAction:updateBatchcreationAction,deleteBatchCreation:deleteBatchCreation,batchInitiateAction:batchInitiateAction,getBCRegistrationSubType:getBCRegistrationSubType,batchCompleteAction:batchCompleteAction,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,getBatchhistoryAction:getBatchhistoryAction,getBatchSection:getBatchSection,viewInfo:viewInfo,getIqcSamples:getIqcSamples,getMaterialBasedOnMaterialCategory:getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial:getMaterialInventoryBasedOnMaterial,batchSaveIQCActions:batchSaveIQCActions,getMaterialAvailQtyBasedOnInv:getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction:getBatchIqcSampleAction,getBCApprovalConfigVersion:getBCApprovalConfigVersion,getBCRegistrationType:getBCRegistrationType,getTreeByMaterial:getTreeByMaterial,getNewRegSpecification:getNewRegSpecification,cancelIQCSampleAction:cancelIQCSampleAction,batchCancelAction:batchCancelAction,batchInitiateDatePopup:batchInitiateDatePopup,batchCompleteDatePopup:batchCompleteDatePopup,getInstrumentID:getInstrumentID,getBatchViewResultAction:getBatchViewResultAction})(injectIntl(BatchCreation));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/batchruncreation/BatchCreation.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Nav","FormGroup","FormLabel","Card","Modal","Image","Button","FontAwesomeIcon","faPencilAlt","faTrashAlt","faCheckCircle","faCopy","faEye","faPlay","faPlus","faSync","callService","crudMaster","updateStore","getTestInstrumentComboService","getTestInstrumentCategory","getInstrumentForInstCategory","getBatchCreationDetails","onActionFilterSubmit","getProductcategoryAction","createBatchmasterAction","getSamplesForGrid","getSelectedBatchCreationDetail","createSampleAction","deleteSampleAction","getActiveBatchCreationService","updateBatchcreationAction","deleteBatchCreation","batchInitiateAction","getBCRegistrationSubType","batchCompleteAction","validateEsignCredential","filterColumnData","getBatchhistoryAction","getBatchSection","viewInfo","getIqcSamples","getMaterialBasedOnMaterialCategory","getMaterialInventoryBasedOnMaterial","batchSaveIQCActions","getMaterialAvailQtyBasedOnInv","getBatchIqcSampleAction","getBCApprovalConfigVersion","getBCRegistrationType","getTreeByMaterial","getNewRegSpecification","cancelIQCSampleAction","batchCancelAction","batchInitiateDatePopup","batchCompleteDatePopup","getInstrumentID","getBatchViewResultAction","transactionStatus","designProperties","reportTypeEnum","reportCOAType","RegistrationSubType","DEFAULT_RETURN","showEsign","getControlMap","getStartOfDay","getEndOfDay","formatInputDate","constructOptionList","rearrangeDateFormat","convertDateValuetoString","ConfirmMessage","SlideOutModal","ReadOnlyText","ContentPanel","MediaLabel","ListWrapper","BreadcrumbComponent","Esign","ProductList","CustomPopover","BatchCreationFilter","AddBatchCreation","AddBatchinitiate","CustomTab","SampleTab","BatchhistoryTab","process","AddSample","ListMaster","ViewInfo","Affix","AddMaterialIqc","BatchIqcSampleTab","BatchResultTab","mapStateToProps","state","Login","BatchCreation","props","batchMandatoryFields","completeMandatoryFields","initiateMandatoryFields","materialIqcMandatory","getSamples","selectedbatchmaster","addSampleID","controlMap","has","get","ncontrolcode","ntransactionstatus","INITIATED","COMPLETED","CANCELLED","warn","intl","formatMessage","id","masterData","SelectedBatchmaster","ntestcode","nbatchmastercode","userInfo","realRegTypeValue","nregtypecode","NA","realRegSubTypeValue","nregsubtypecode","Samples","length","addcontrolcode","inputData","realSampleTypeValue","nsampletypecode","nsectioncode","deleteRecord","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","selectedRecord","nbatchsampleCode","fetchUrl","isSingleGet","fecthInputObject","userinfo","jsondata","inputParam","classUrl","methodUrl","Sample","sarno","ssamplearno","stestname","nbatchsamplecode","ndesigntemplatemappingcode","operation","displayName","dataState","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","openModal","screenName","cancelRecord","nbatchsampleiqccode","iqcSample","nmaterialinventtranscode","onTabChange","tabProps","nneedsubsample","item","batchactiveKey","dataStateChange","event","setState","dataResult","sampleState","dataStateBatchHistoryChange","Batchhistory","histortState","dataStateBatchIqcChangeChange","iqcsample","iqcsampleState","dataStateViewChange","Resultview","viewstate","getApprovalVersion","obj","selectedFilter","fromDate","realFromDate","toDate","realToDate","needFilterSubmit","parseInt","defaultSampleType","isneedapprovalfilter","defaultRegistrationSubType","isneedrealFilterStatus","realApproveConfigVersion","ApprovalVersionValue","realdefaultFilterStatus","tabDetail","tabMap","Map","set","gridfillingColumn","DynamicGridItem","DynamicGridMoreItem","ELNTest","sbatcharno","onFilterComboChange","fieldname","dateObj","nflag","defaultRegistrationType","ntranscode","FilterStatusValue","value","inputParamData","fromdate","todate","napprovalversioncode","ApprovalConfigVersion","napprovalconfigversioncode","String","defaultFilterStatus","DesignTemplateMappingValue","getBCFilterTemplate","defaultApprovalConfigVersion","njobstatuscode","defaultjobstatus","getBCFilterStatus","handleFilterDateChange","dateValue","dateName","Date","headerSelectionChange","checked","syntheticEvent","target","sampleList","samples","addedSamplesList","map","findIndex","x","ntransactiontestcode","push","selected","newItem","JSON","parse","stringify","olditem","addSelectAll","deleteSelectAll","sampleListData","deletedListdData","filter","item1","npreregno","deletedList","onTreeClick","activeKey","key","focusKey","keyName","selectedNode","primaryKey","selectionChange","samplesList","dataItem","initialList","valiateCheckAll","handleSaveClick","saveType","failedControls","startLabel","label","mandatoryFields","console","log","selectedSpec","loadSpec","openSpecModal","handlePageChange","e","skip","take","ConfirmDelete","selectedBatch","deleteId","confirmMessage","confirm","completePopUpStartActions","completeId","DRAFT","AddSpec","selectedMaterial","undefined","selectedMaterialCategory","ncategorybasedflow","info","testPopUpStartActions","testStartId","testStartActions","selectedmaster","jsonuidata","totalSample","concat","join","ntransactionsamplecode","nneedmyjob","nneedjoballocation","napprovalconfigcode","nneedtestinitiate","dtransactiondate","currentTime","scomments","BCFilterStatus","sample","parseFloat","susedquantity","inventoryTransaction","savailablequatity","nallottedspeccode","inputRegistrationData","inputMaterialInventoryData","inputBatchData","batchCreationSampleData","batchCreationTestData","batchCreationSampleArray","batchCreationTestArray","samplecombinationuniqueArray","inputMaterialInventoryArrData","nspecsampletypecode","ntemplatemanipulationcode","nregsubtypeversioncode","nmaterialcode","nmaterialcatcode","smaterialcatname","sinventoryid","selectedMaterialInventory","nmaterialinventorycode","smaterial","smaterialname","smaterialtype","selectedMaterialType","smaterialtypename","nmaterialtypecode","sunitname","sremarks","selectedInventoryUnit","nqtyused","selectedTestDetails","ntestgrouptestcode","nmethodcode","PREREGISTER","cancelBatch","cancelId","batchCompleteActions","closeAlert","showConfirmAlert","loading","closeModal","selectedId","onComboChange","comboData","fieldName","selectedProduct","naddcontrolCode","ssectionname","selectedTestSynonym","sregsubtypename","ncalibrationreq","needSectionwise","needsection","selectedInstrumentId","onNumericInputOnChange","name","onInputOnChange","type","ACTIVE","DEACTIVE","YES","NO","onMultiColumnValue","flag","keys","forEach","objarray","objkey","index","getBatchManufacturerComboChange","onMultiColumnMAHChange","clearComponentInput","componentDefaultSearchDate","handleDateChange","onDropImage","attachedFiles","actionType","saveSample","addedsamplelist","sampleArray","samplelist","batchSample","onSaveClick","formRef","nprevioustestcode","selectedSection","selectedInstCategory","selectedInstrument","unchangeList","searchRef","current","editId","fetchEditData","editParam","validateEsign","sreason","password","onFilterSubmit","reloadData","isFilterSubmit","onClickReport","reportParam","sprimarykeyname","nprimarykey","nreleasebatchcode","ncertificatetypecode","ndecision","PASS","ndecisionstatus","nreporttypecode","SCREENWISE","BATCH","ncoareporttypecode","BATCHPREVIEW","skipbatchvalidation","reportMethod","method","SelectedBatchCreation","controlId","settings","createRef","searchFieldList","sampleMandatoryFields","copyMandatoryFields","temparray","option","LABEL","slanguagetypecode","VALUE","selectAll","reportActionList","getBatch","addId","addParam","primaryeyField","viewInfoFields","stransactionstatuscode","SelectedFilterStatus","filterParam","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sfilterstatus","searchedData","Batchmaster","batch","openFilter","closeFilter","isClearSearch","indexOf","SampleType","RegistrationType","REJobStatus","Testvalues","onDesignTemplateChange","stateDynamicDesign","stransdisplaystatus","reject","masterStatus","showSaveContinue","InstrumentCategory","Instrument","ProductCategory","selectedProductCategory","Product","InstrumentID","studyPlanList","productManufacturerList","maHolderList","timeZoneList","batchCreationEditStatusList","Section","getProductByCategory","productCategoryList","productList","componentList","getDataForAddComponent","addedComponentList","addedHeaderSelectionChange","addedSelectionChange","onDeleteSelectedComponent","componentPopupSkip","componentPopupTake","componentPageSizes","selectedRecordView","MaterialCategory","Material","MaterialInventory","AgaramTree","OpenNodes","FocusKey","Specification","onspecChange","confirmAlert","previousProps","filterData","filterStatusList","sahDataState","bahDataState","chDataState","testCommentDataState","testskip","testtake","sampleGridItem","subsampleGridItem","testGridItem","samplegridmoreitem","testGridArnoItems","sinstrumentid","isStateChanged","bool","instrumentCategory","instrument","productcategory","product","instrumentID","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","selectedProductcategory","sproductcatname","nproductcatcode","sproductname","nproductcode","selectedInstrumentCategory","sinstrumentcatname","ninstrumentcatcode","sinstrumentname","ninstrumentcode","Object","values","selectedComponentList","sversionname","isselectedrecordempty","DynamicDesign","dynamicColumn","testListFields","testlistitem","releasetestfields","samplegriditem","subsamplelistitem","error","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col,Nav,FormGroup, FormLabel,Card,Modal,Image,Button} from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheckCircle, faCopy, faEye,faPlay,faPlus, faSync \r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport reject from '../../assets/image/reject.svg'\r\nimport {\r\n    callService, crudMaster,updateStore,\r\n    getTestInstrumentComboService,getTestInstrumentCategory,\r\n    getInstrumentForInstCategory,getBatchCreationDetails,onActionFilterSubmit,\r\n    getProductcategoryAction,createBatchmasterAction,getSamplesForGrid,\r\n    getSelectedBatchCreationDetail,createSampleAction,deleteSampleAction,\r\n    getActiveBatchCreationService,updateBatchcreationAction,deleteBatchCreation,\r\n    batchInitiateAction,getBCRegistrationSubType,batchCompleteAction,\r\n    validateEsignCredential,filterColumnData,getBatchhistoryAction,getBatchSection,\r\n    viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType,getTreeByMaterial,\r\n    getNewRegSpecification,cancelIQCSampleAction,batchCancelAction,batchInitiateDatePopup,\r\n    batchCompleteDatePopup,getInstrumentID,getBatchViewResultAction\r\n} from '../../actions';\r\nimport { transactionStatus, designProperties, reportTypeEnum, reportCOAType, \r\n    RegistrationSubType } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap, getStartOfDay, getEndOfDay, \r\nformatInputDate, constructOptionList, rearrangeDateFormat, convertDateValuetoString } from '../../components/CommonScript';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { ReadOnlyText, ContentPanel, MediaLabel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomPopover from '../../components/customPopover';\r\nimport BatchCreationFilter from './BatchCreationFilter';\r\nimport AddBatchCreation from './AddBatchCreation';\r\nimport AddBatchinitiate from './AddBatchinitiate';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport SampleTab from './SampleTab';\r\nimport BatchhistoryTab from './BatchhistoryTab';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport AddSample from './AddSample';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport ViewInfo from './ViewInfo';\r\nimport { Affix } from 'rsuite';\r\nimport AddMaterialIqc from './AddMaterialIqc';\r\nimport BatchIqcSampleTab from './BatchIqcSampleTab';\r\nimport BatchResultTab from './BatchResultTab';\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass BatchCreation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const sampleState = { skip: 0, take: this.props.Login.settings ?\r\n             parseInt(this.props.Login.settings[14]) : 5 };\r\n        \r\n        const histortState = { skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5 };\r\n                \r\n        const iqcsampleState = { skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5 };\r\n\r\n        const viewstate ={skip: 0, take: this.props.Login.settings ?\r\n            parseInt(this.props.Login.settings[14]) : 5};\r\n                    \r\n        this.state = {\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedFilter: {},\r\n            sampleState,\r\n            histortState,\r\n            iqcsampleState,\r\n            viewstate,\r\n            selectedRecord :{},\r\n            //confirmmsg:this.ConfirmMessage.bind(this),\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.searchFieldList = [\"stestname\",\"sinstrumentcatname\", \"sinstrumentname\", \"sproductname\", \"smanufname\", \"stransactiondate\", \"username\",\r\n        \"stransactionstatus\", \"sdecision\",\"sbatcharno\",\"stransdisplaystatus\"];\r\n\r\n        this.sampleMandatoryFields = [];\r\n        this.copyMandatoryFields = [];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n            // if (props.Login.masterStatus !== \"\") {\r\n            //     if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n            //        if(props.Login.operation == \"initiate\"){\r\n            //         toast.warn(props.Login.masterStatus);\r\n            //         //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\r\n            //        }\r\n            //     }\r\n            // }\r\n            if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n                toast.warn(props.Login.masterStatus);\r\n                props.Login.masterStatus = \"\";\r\n            }\r\n    \r\n            if (props.Login.error !== \"\" && props.Login.error !== state.error) {\r\n                toast.error(props.Login.error)\r\n                props.Login.error = \"\";\r\n            }\r\n            if (props.Login.selectedRecord === undefined) {\r\n                return { selectedRecord: {} }\r\n            }\r\n            return null;\r\n            // if (props.Login.selectedRecord !== state.selectedRecord) {\r\n            //     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\r\n            // }\r\n        }\r\n    \r\n\r\n    batchMandatoryFields = [\r\n        { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"sinstrumentname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_INSTRUMENTID\", \"dataField\": \"sinstrumentid\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n    ];\r\n     // const sampleColumnList = [];\r\n    \r\n    // if (props.nneedsubsample){\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n    // }\r\n    // else{\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n    // }\r\n    \r\n    completeMandatoryFields = [\r\n        { \r\n          \"idsName\":  \"IDS_BATCHCOMPLETEDATE\",\r\n          //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n          \"dataField\": \"dtransactiondate\" , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n    \r\n    initiateMandatoryFields = [\r\n        { \r\n          \"idsName\":  \"IDS_BATCHINITIATEDATE\",\r\n          //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n          \"dataField\": \"dtransactiondate\" , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n\r\n    \r\n\r\n    materialIqcMandatory = [\r\n        \r\n        { \"idsName\": \"IDS_MATERIALTYPE\", \"dataField\": \"smaterialtypename\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_MATERIALCATEGORY\", \"dataField\": \"smaterialcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_MATERIAL\", \"dataField\": \"smaterialname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIALINVENTORY\", \"dataField\": \"sinventoryid\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        //{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_USEDQTY\", \"dataField\": \"susedquantity\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n    ]\r\n\r\n     getSamples=(selectedbatchmaster)=>{\r\n      const addSampleID = this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get(\"AddSamples\").ncontrolcode\r\n        if(selectedbatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.COMPLETED || \r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.CANCELLED){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        }else{\r\n            this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n                this.props.Login.userInfo,this.props.Login.masterData,\r\n                this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ? \r\n\t\t\t    this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n\t\t\t    this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,addSampleID)\r\n            }\r\n     }\r\n\r\n     getIqcSamples = (SelectedBatchmaster) =>{\r\n        if(SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ||\r\n            SelectedBatchmaster.ntransactionstatus === transactionStatus.CANCELLED){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        }else if (this.props.Login.masterData.Samples.length==0){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLETOADDIQC\" }));\r\n        }else{\r\n        let addcontrolcode=this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n        let inputData={};\r\n        inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ? \r\n        this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n        inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n        inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n        this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n        // inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n        // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n        inputData['naddcontrolCode']=addcontrolcode;\r\n            // inputData['section']={\r\n            //         nsectioncode: SelectedBatchmaster.nsectioncode\r\n           // };\r\n            inputData['nsectioncode']=SelectedBatchmaster.nsectioncode;\r\n            inputData['userInfo']=this.props.Login.userInfo;\r\n            inputData['nbatchmastercode']= SelectedBatchmaster.nbatchmastercode;\r\n        this.props.getIqcSamples(inputData,this.props.Login.masterData);\r\n      }\r\n    }\r\n\r\n     deleteRecord = (inputData) => {\r\n\r\n        if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n            }else{\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: inputData.selectedRecord.nbatchsampleCode,\r\n                    fetchUrl: \"batchcreation/getSampleTabDetails\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let jsondata = inputData.selectedRecord;\r\n                const inputParam = {\r\n                    classUrl: \"batchcreation\",\r\n                    methodUrl: \"Sample\",\r\n                    postParam,\r\n                    inputData: {\r\n                        Sample: {\r\n                            \"sarno\":inputData.selectedRecord.sarno,\r\n                            \"ssamplearno\":inputData.selectedRecord.ssamplearno,\r\n                            \"stestname\":inputData.selectedRecord.stestname,\r\n                            \"nbatchsamplecode\": inputData.selectedRecord.nbatchsamplecode,\r\n\r\n                        },\r\n                        \"userInfo\": this.props.Login.userInfo,\r\n                        nbatchsamplecode: inputData.selectedRecord.nbatchsamplecode,\r\n                        masterData : {...this.props.Login.masterData,\r\n                                      \"samples\":[]\r\n                                    },\r\n                        nbatchmastercode : inputData.selectedRecord.nbatchmastercode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                        //nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                        //nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n                        nregtypecode : this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                        nregsubtypecode : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                                  this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n                    },\r\n                    operation: inputData.operation,\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    dataState: this.state.dataState\r\n                }\r\n              if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                            operation: inputData.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.deleteSampleAction(inputParam.inputData);\r\n                }\r\n            }\r\n       }\r\n\r\n     cancelRecord = (inputData) => {\r\n\r\n        if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n            }else{\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: inputData.nbatchsampleiqccode,\r\n                    fetchUrl: \"batchcreation/getBatchIqcSampleAction\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                const inputParam = {\r\n                    classUrl: \"batchcreation\",\r\n                    methodUrl: \"IQCSample\",\r\n                    postParam,\r\n                    inputData: {\r\n                        iqcSample:inputData.selectedRecord,\r\n                        nbatchsampleiqccode: inputData.selectedRecord.nbatchsampleiqccode,\r\n                        masterData : this.props.Login.masterData,\r\n                        nbatchmastercode : inputData.selectedRecord.nbatchmastercode,\r\n                        nmaterialinventtranscode : inputData.selectedRecord.nmaterialinventtranscode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                        //nregtypecode :this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                        //nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n                         nregtypecode : this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n                         nregsubtypecode : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                                  this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n                         nsampletypecode : this.props.Login.masterData.realSampleTypeValue ? \r\n                                   this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA\r\n                    },\r\n                    operation: inputData.operation,\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    dataState: this.state.dataState\r\n                }\r\n              if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, \r\n                            screenData: { inputParam,\r\n                                          masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                            operation: inputData.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.cancelIQCSampleAction(inputParam.inputData);\r\n                }\r\n            }\r\n       }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n\r\n        if (screenName == \"IDS_BATCHHISTORY\") {\r\n         \r\n                let inputData = {\r\n                    masterData:this.props.Login.masterData,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n                }\r\n                this.props.getBatchhistoryAction(inputData, true);\r\n        }else if (screenName == \"IDS_BATCHIQCSAMPLE\") {\r\n         \r\n            let inputData = {\r\n                masterData:this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchIqcSampleAction(inputData, true);\r\n         }else if(screenName == \"IDS_RESULTS\"){\r\n            let inputData = {\r\n                masterData:this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nneedsubsample : this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchViewResultAction(inputData, true);\r\n         }else{    \r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { screenName,batchactiveKey : screenName }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n         }\r\n    }\r\n\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Samples, event.dataState),\r\n            sampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchHistoryChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Batchhistory, event.dataState),\r\n            histortState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchIqcChangeChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.iqcsample, event.dataState),\r\n            iqcsampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateViewChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Resultview, event.dataState),\r\n            viewstate: event.dataState\r\n        });\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n          return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \r\n                   \"dataField\": option[designProperties.VALUE] == \"null\" ? '-' : option[designProperties.VALUE],\r\n                    \"width\": \"150px\", \"columnSize\": \"4\" };\r\n    \r\n        });\r\n        return temparray;\r\n    \r\n      }\r\n\r\n      getApprovalVersion = (data) => {\r\n        let inputData = [];\r\n\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n            this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n         \r\n        inputData = {\r\n            needFilterSubmit : \"false\",\r\n            nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n            fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n            toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n            nregtypecode: data.item.nregtypecode,\r\n            userInfo: this.props.Login.userInfo,\r\n            nregsubtypecode: data.item.nregsubtypecode,\r\n            masterData : this.props.Login.masterData,\r\n            isneedapprovalfilter : true,\r\n            defaultRegistrationSubType:data.item,\r\n            isneedrealFilterStatus:\"false\",\r\n            realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n            realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n            realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n            realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n        }\r\n        this.props.getBCApprovalConfigVersion(inputData)\r\n    \r\n      }\r\n    \r\n   tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_SAMPLE\",\r\n        <SampleTab\r\n            sample={this.props.Login.masterData.Samples || []}\r\n            dataResult={process(this.props.Login.masterData.Samples || [], this.state.sampleState)}\r\n            dataState={this.state.sampleState}\r\n            controlMap={this.state.controlMap}\r\n            dataStateChange={this.dataStateChange}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            userInfo={this.props.Login.userInfo}\r\n            deleteRecord={this.deleteRecord}\r\n            extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n            detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreItem) || []}\r\n            methodUrl={\"Samples\"}\r\n            getSamples={() => this.getSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n            // getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n            //     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\r\n            //inputParam={this.props.Login.inputParam}\r\n            screenName=\"IDS_SAMPLE\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n        />\r\n        )\r\n        tabMap.set(\"IDS_BATCHIQCSAMPLE\",\r\n        <BatchIqcSampleTab\r\n            iqcsample={this.props.Login.masterData.iqcsample || []}\r\n            dataResult={process(this.props.Login.masterData.iqcsample || [], this.state.iqcsampleState)}\r\n            dataState={this.state.iqcsampleState}\r\n            controlMap={this.state.controlMap}\r\n            dataStateChange={this.dataStateBatchIqcChangeChange}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            userInfo={this.props.Login.userInfo}\r\n            cancelRecord={this.cancelRecord}\r\n            methodUrl={\"IQCSample\"}\r\n            getIqcSamples={() => this.getIqcSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n            screenName=\"IDS_BATCHIQCSAMPLE\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n        />\r\n        )\r\n    if(this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.INITIATED\r\n    || this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus===transactionStatus.COMPLETED){\r\n        tabMap.set(\"IDS_RESULTS\",\r\n        <BatchResultTab\r\n           ELNTest={this.props.Login.masterData.ELNTest || []}\r\n            resultview={this.props.Login.masterData.Resultview || []}\r\n            dataResult={process(this.props.Login.masterData.Resultview || [], this.state.viewstate)}\r\n            dataState={this.state.viewstate}\r\n            dataStateChange={this.dataStateViewChange}\r\n            userInfo={this.props.Login.userInfo}\r\n            methodUrl={\"BatchViewResult\"}\r\n            screenName=\"IDS_RESULTS\"\r\n            intl={this.props.intl}\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n            selectedfilename = {this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n\r\n        />\r\n        )\r\n    }\r\n\r\n        tabMap.set(\"IDS_BATCHHISTORY\",\r\n        <BatchhistoryTab\r\n            batchhistory={this.props.Login.masterData.Batchhistory || []}\r\n            dataResult={process(this.props.Login.masterData.Batchhistory || [], this.state.histortState)}\r\n            dataState={this.state.histortState}\r\n            dataStateChange={this.dataStateBatchHistoryChange}\r\n            userInfo={this.props.Login.userInfo}\r\n            methodUrl={\"Batchhistory\"}\r\n            screenName=\"IDS_BATCHHISTORY\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n\r\n        />\r\n        )\r\n\r\n\r\n        return tabMap;\r\n    }\r\n\r\n\r\n    onFilterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let inputData = [];\r\n           \r\n\r\n            if (fieldname === \"fromDate\") {\r\n                let dateObj = convertDateValuetoString(event, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit : \"false\",\r\n                    fromDate: dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\r\n                    toDate: dateObj.toDate,//this.props.Login.masterData.toDate,\r\n                    defaultRegistrationType : this.props.Login.masterData.defaultRegistrationType,\r\n                    defaultRegistrationSubType : this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA,\r\n                    defaultSampleType :this.props.Login.masterData.defaultSampleType,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA,\r\n                    ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.NA,\r\n                    //defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n            if (fieldname === \"toDate\") {\r\n\r\n                let dateObj = convertDateValuetoString(this.props.Login.masterData.fromDate, event, this.props.Login.userInfo)\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit : \"false\",\r\n                    fromDate: dateObj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    toDate: dateObj.toDate,//this.OnDateConverstion(event, fieldname),\r\n                    defaultRegistrationType : this.props.Login.masterData.defaultRegistrationType,\r\n                    defaultRegistrationSubType : this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA,\r\n                    defaultSampleType :this.props.Login.masterData.defaultSampleType,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA,\r\n                    ntranscode: this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.NA,\r\n                    //defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n\r\n            // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \r\n            //                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \r\n\r\n            if (fieldname === \"nsampletypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    needFilterSubmit : \"false\",\r\n                    nsampletypecode: parseInt(event.value),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultSampleType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    isneedrealFilterStatus:\"false\",\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCRegistrationType(inputData)\r\n            }\r\n            else if (fieldname === \"nregtypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n\r\n                inputData = {\r\n                    nflag: 3,\r\n                    needFilterSubmit : \"false\",\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    nregtypecode: parseInt(event.value),\r\n                    userInfo: this.props.Login.userInfo,\r\n                    defaultRegistrationType: event.item,\r\n                    defaultSampleType:this.props.Login.masterData.defaultSampleType,\r\n                    isneedrealFilterStatus:\"false\",\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCRegistrationSubType(inputData,this.props.Login.masterData)\r\n            }\r\n            else if (fieldname === \"nregsubtypecode\") {\r\n                const nregsubtypecode = this.state;\r\n                //this.setState({ nregsubtypecode:event });\r\n                this.getApprovalVersion(event);\r\n                \r\n            }\r\n\r\n            else if (fieldname === 'ndesigntemplatemappingcode') {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                const inputParamData = {\r\n                    nflag: 3,\r\n                    needFilterSubmit : \"false\",\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    //defaultFilterStatus: event.item,\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\r\n                    // stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                    //nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: event.value,\r\n                    DesignTemplateMappingValue: event.item,\r\n                    isneedrealFilterStatus:\"false\",\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                //this.props.getREFilterTestData(inputParamData)\r\n                this.props.getBCFilterTemplate(inputParamData)\r\n\r\n            }\r\n\r\n            else if (fieldname === \"version\") {\r\n\r\n                // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                //     this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                // inputData = {\r\n                //     nflag: 4,\r\n                //     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                //     todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                //     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                //     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                //     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                //     napprovalversioncode: event.value,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     defaultApprovalConfigVersion: event.item,\r\n                //     masterData: this.props.Login.masterData,\r\n                //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                // }\r\n                // this.props.getBCJobStatus(inputData)\r\n                const ApprovalVersionValue = this.state;\r\n                this.setState({ ApprovalVersionValue:event });\r\n            }\r\n            else if (fieldname === \"jobstatus\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    needFilterSubmit : \"false\",\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultjobstatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                    realRegTypeValue : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : \"NA\",\r\n                    realRegSubTypeValue :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue : \"NA\",\r\n                    realApproveConfigVersion : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n                    realdefaultFilterStatus  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus:\"NA\"\r\n                }\r\n                this.props.getBCFilterStatus(inputData)\r\n            }\r\n            else if (fieldname === \"filter\") {\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue:event });\r\n                \r\n            }\r\n            else if(fieldname === \"test\") {\r\n\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue:event });\r\n            }else{\r\n                const selectedRecord = this.state;\r\n                this.setState({ selectedRecord:event });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFilterDateChange = (dateValue,dateName) => {\r\n            const { selectedFilter } = this.state;\r\n            if (dateValue === null) {\r\n                dateValue = new Date();\r\n            }\r\n            selectedFilter[dateName] = dateValue;\r\n            this.setState({ selectedFilter });\r\n    \r\n    }\r\n\r\n    // headerSelectionChange = (event) => {\r\n    //     const checked = event.syntheticEvent.target.checked;\r\n    //     let addedComponentList = this.state.addedComponentList || [];\r\n    //     if (checked) {\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n    //                 addedComponentList.push({ ...item, selected: false });\r\n    //                 item.selected = checked;\r\n    //                 return item;\r\n    //             } else {\r\n    //                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n    //                 olditem.selected = checked;\r\n    //                 return olditem;\r\n    //             }\r\n\r\n    //         });\r\n\r\n\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    //     else {\r\n    //         let addedComponentData = this.state.addedComponentList || [];\r\n    //         let deletedListdData = this.state.deletedList || [];\r\n\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             item.selected = checked;\r\n    //             return item;\r\n    //         });\r\n\r\n    //         // console.log(\"data:\",data1, data2);\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    // }\r\n   \r\n\r\n    valiateCheckAll(data) {\r\n        let selectAll = true;\r\n        // let checkRepeatComponent;\r\n        //  let addedComponentList = this.state.addedComponentList || [];\r\n        if (data && data.length > 0) {\r\n            data.forEach(dataItem => {\r\n                if (dataItem.selected) {\r\n                    if (dataItem.selected === false) {\r\n                        selectAll = false;\r\n                    }\r\n                }\r\n                else {\r\n                    selectAll = false;\r\n                    // checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\r\n                    // if(checkRepeatComponent.length>0){\r\n                    //     selectAll = true;\r\n                    // }else{\r\n                    //     selectAll = false;\r\n                    // }\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            //if (gridType === \"originalgrid\"){\r\n            selectAll = false;\r\n            // }\r\n        }\r\n        return selectAll;\r\n    }\r\n\r\n\r\n    \r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let sampleList = this.state.samples || [];\r\n        let addedSamplesList=[];\r\n        if (checked) {\r\n            //const data = event.dataItems.map(item => {\r\n            const data = event.target.props.data.map(item => {\r\n                if (sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n                    sampleList.push({ ...item, selected: false });\r\n                    item.selected = checked;   \r\n                    let newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item    \r\n                    addedSamplesList.push(newItem);\r\n                    return item;\r\n                } else {\r\n                    let olditem = JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n                    olditem.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(olditem));\r\n                    newItem.selected = false;\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = olditem\r\n                    newItem[\"jsonuidata\"]['samplelist'] = olditem\r\n                    addedSamplesList.push(newItem);\r\n                    return olditem;\r\n                    \r\n                }\r\n\r\n            });\r\n\r\n\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList:addedSamplesList,\r\n                sampleList,\r\n                addSelectAll: checked, \r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n        else {\r\n            // let sampleListData = this.state.sampleList || [];\r\n            // let deletedListdData = this.state.sampleList || [];\r\n\r\n            let sampleListData = this.state.samples || [];\r\n            let deletedListdData = this.state.samples || [];\r\n\r\n            const data = this.state.samples.map(item => {\r\n                sampleListData = sampleListData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n\r\n            // console.log(\"data:\",data1, data2);\r\n            this.setState({\r\n                samples: data, \r\n                addedSamplesList: sampleListData,\r\n                deletedList: deletedListdData,\r\n                addSelectAll: checked, \r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n\r\n        // const data = this.state.addComponentDataList.map(item=>{\r\n        //     if (checked){\r\n        //         addedComponentList.push({...item, selected:false});\r\n        //     }\r\n        //     else{\r\n        //         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\r\n        //         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \r\n        //     }  \r\n        //     item.selected = checked;\r\n        //     return item;\r\n        // });\r\n\r\n    }\r\n\r\n    onTreeClick = (event) => {\r\n        const inputParam = {\r\n            methodUrl: \"TestGroupSpecification\",\r\n            screenName: \"IDS_REGISTRATION\",\r\n            operation: \"get\",\r\n            activeKey: event.key,\r\n            focusKey: event.key,\r\n            keyName: \"treetemplatemanipulation\",\r\n            userinfo: this.props.Login.userInfo,\r\n            selectedNode: event.item,\r\n            selectedRecord: this.state.selectedRecord,\r\n\r\n            primaryKey: event.primaryKey\r\n        };\r\n        if (event.primaryKey !== this.state.selectedRecord[\"ntemplatemanipulationcode\"]) {\r\n            this.props.getNewRegSpecification(inputParam, this.props.Login.masterData);\r\n        }\r\n    }\r\n\r\n\r\n    selectionChange = (event) => {\r\n        let addedSamplesList=this.state.addedSamplesList || [];\r\n        //let addedSamplesList= [];\r\n        let samples = this.state.samples || [];\r\n        const samplesList = this.state.samples.map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = !event.dataItem.selected;\r\n                if (item.selected) {\r\n                    const newItem = JSON.parse(JSON.stringify(item));\r\n                    //newItem.selected = false;\r\n                    delete newItem['selected']\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item\r\n                    addedSamplesList.push(newItem);\r\n                }\r\n                else {\r\n                    // if(addedSamplesList.length === 0){\r\n                      addedSamplesList = addedSamplesList.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode)\r\n                    //   }else{\r\n                    //     this.state.samples.map((item1,index) => { \r\n                    //         if(item1.ntransactiontestcode == event.dataItem.ntransactiontestcode){\r\n                    //             if(this.state.samples.length == 1){\r\n                    //                 addedSamplesList=[];\r\n                    //             }else{\r\n                    //                 const newItem = JSON.parse(JSON.stringify(item1));\r\n                    //                 newItem.selected = false;\r\n                    //                 newItem[\"jsondata\"]={};\r\n                    //                 newItem[\"jsonuidata\"]={};\r\n                    //                 newItem[\"jsondata\"]['samplelist'] = item1\r\n                    //                 newItem[\"jsonuidata\"]['samplelist'] = item1\r\n                    //                 //addedSamplesList.push(newItem);\r\n                    //                 addedSamplesList = item1;\r\n                    //             }  \r\n                    //         }\r\n                    //     } \r\n                    //   )\r\n                 }\r\n            }\r\n            return item;\r\n        });\r\n        ///samplesList = addedSamplesList;\r\n        this.setState({\r\n            samplesList,\r\n            addedSamplesList,\r\n            samples,\r\n            initialList :addedSamplesList,\r\n            addSelectAll: this.valiateCheckAll(samplesList),\r\n            deleteSelectAll: this.valiateCheckAll(samplesList)\r\n        });\r\n    }\r\n\r\n    handleSaveClick = (saveType) => {\r\n        const failedControls = [];\r\n        const startLabel = [];\r\n        let label = \"IDS_ENTER\";\r\n        let mandatoryFields = [];\r\n        let selectedRecord = this.state.selectedRecord;\r\n        console.log(\"handle save:\", selectedRecord);\r\n        mandatoryFields = [\r\n            { \"idsName\": \"IDS_SPECIFICATION\", \"dataField\": \"nallottedspeccode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n        ]\r\n        let selectedSpec = this.props.Login.selectedSpec;\r\n        selectedSpec[\"nallottedspeccode\"] = this.state.selectedRecord[\"nallottedspeccode\"];\r\n        selectedSpec[\"sversion\"] = this.state.selectedRecord[\"sversion\"];\r\n        selectedSpec[\"ntemplatemanipulationcode\"] = this.state.selectedRecord[\"ntemplatemanipulationcode\"];\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadSpec: false,\r\n                selectedSpec,\r\n                openModal:true,\r\n                openSpecModal:false\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    render() {\r\n        let reportActionList=[];\r\n        const getBatch = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            operation: \"get\", \r\n            masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"Batchcreation\", keyName: \"batchcreation\"\r\n        };\r\n        this.fromDate = (this.state.selectedFilter[\"fromdate\"] && this.state.selectedFilter[\"fromdate\"]) || this.props.Login.masterData && this.props.Login.masterData.realFromDate ? rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realFromDate):undefined;\r\n        this.toDate = (this.state.selectedFilter[\"todate\"] && this.state.selectedFilter[\"todate\"]) || this.props.Login.masterData && this.props.Login.masterData.realToDate ? rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realToDate):undefined;\r\n        const addId = this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditBatchcreation\") && this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteBatchcreation\") && this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;\r\n        const testStartId = this.state.controlMap.has(\"BatchInitiate\") && this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;\r\n        const completeId = this.state.controlMap.has(\"BatchComplete\") && this.state.controlMap.get(\"BatchComplete\").ncontrolcode;\r\n        const cancelId = this.state.controlMap.has(\"CancelBatch\") && this.state.controlMap.get(\"CancelBatch\").ncontrolcode;\r\n\r\n        const addParam = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            primaryeyField: \"nreleasebatchcode\",\r\n            primaryKeyValue: undefined, \r\n            operation: \"create\", \r\n            //inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo, \r\n            ncontrolCode: addId,\r\n            nneedtestinitiate: this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate ,\r\n            masterData:this.props.Login.masterData,\r\n            fromdate:this.props.Login.masterData.fromDate,\r\n            todate:this.props.Login.masterData.toDate,\r\n            nregtypecode : this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode :this.props.Login.masterData.realRegSubTypeValue  ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA,\r\n            napprovalconfigcode : this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA,\r\n            ntranscode  : this.props.Login.masterData.realdefaultFilterStatus ? this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus:transactionStatus.NA,\r\n            ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n        };\r\n\r\n        const viewInfoFields = [\r\n        { \"fieldName\": \"sbatcharno\", \"label\": \"IDS_BATCHARNO\"},\r\n        { \"fieldName\": \"ssectionname\", \"label\": \"IDS_SECTION\"},\r\n        { \"fieldName\": \"stestname\", \"label\": \"IDS_TESTNAME\"},\r\n        { \"fieldName\": \"sinstrumentcatname\", \"label\": \"IDS_INSTRUMENTCATEGORY\" },\r\n        { \"fieldName\": \"sinstrumentid\", \"label\": \"IDS_INSTRUMENTID\" },\r\n        { \"fieldName\": \"sinstrumentname\", \"label\": \"IDS_INSTRUMENTNAME\" },\r\n        { \"fieldName\": \"sproductname\", \"label\": \"IDS_SAMPLETYPE\" },\r\n        { \"fieldName\": \"stransdisplaystatus\", \"label\": \"IDS_STATUS\" },\r\n        { \"fieldName\": \"username\", \"label\":\r\n        this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.INITIATED ? \"IDS_BATCHINITIATEDBY\":\r\n        this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ? \"IDS_BATCHCOMPLETEDBY\"\r\n        :\"IDS_BATCHCREATEDBY\"}\r\n      ];\r\n\r\n        let stransactionstatuscode = this.props.Login.masterData.SelectedFilterStatus ? String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus) : null;\r\n\r\n        if (this.state.selectedRecord && this.state.selectedRecord[\"nfiltertransstatus\"] !== undefined) {\r\n            stransactionstatuscode = this.state.selectedRecord[\"nfiltertransstatus\"].value === String(0) ? null : String(this.state.selectedRecord[\"nfiltertransstatus\"].value);\r\n        }\r\n\r\n      \r\n         let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, \r\n            this.props.Login.userInfo);\r\n            \r\n        const editParam = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            operation: \"update\",\r\n            primaryKeyField: \"nbatchmastercode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: editId,\r\n            masterData: this.props.Login.masterData,\r\n            naddcontrolCode:addId,\r\n            nsampletypecode:this.props.Login.masterData.realSampleTypeValue ? \r\n                            this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA,\r\n            nregtypecode : this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \r\n                           this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode : this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n            this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA\r\n        };\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"Batchmaster\", \r\n            selectedObject: \"SelectedBatchmaster\", \r\n            primaryKeyField: \"nbatchmastercode\",\r\n            fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n           \r\n            fecthInputObject: {\r\n                fromDate : obj.fromDate,\r\n                toDate : obj.toDate,\r\n                userInfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                napprovalconfigcode:this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA,\r\n                ntranscode:this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT,\r\n                nsampletypecode:this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA,\r\n                //fromDate, toDate, \r\n                //stransactionstatuscode,\r\n                //activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\r\n            },\r\n            masterData: this.props.Login.masterData, \r\n            //unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\r\n            searchFieldList: this.searchFieldList\r\n        }\r\n\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"NA\"\r\n                // \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                // this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\r\n            }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_BATCHSTATUS\",\r\n                \"value\": this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus ? this.props.Login.masterData.realdefaultFilterStatus.sfilterstatus : \"NA\"\r\n            }\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\r\n            // }\r\n        ]\r\n\r\n        return (\r\n        <>\r\n            {/* Start of get display*/}\r\n            {/* <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\"> */}\r\n            {/* <ListWrapper className=\"client-listing-wrap mtop-4 screen-height-window\"> */}\r\n            {/* <ListWrapper className=\"client-listing-wrap toolbar-top-wrap mtop-4 screen-height-window\"> */}\r\n            {/* <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"> */}\r\n            {/* //</><div className=\"client-listing-wrap mtop-4\"> */}\r\n            <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd \">\r\n            <Affix top={53}>\r\n            <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n            </Affix>\r\n            \r\n                <Row noGutters={true}>\r\n                    <Col md={4}>\r\n                            <ListMaster\r\n                                masterList={this.props.Login.masterData.searchedData || (this.props.Login.masterData.Batchmaster || [])}\r\n                                selectedMaster={this.props.Login.masterData.SelectedBatchmaster}\r\n                                primaryKeyField=\"nbatchmastercode\"\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterData={this.props.Login.masterData}\r\n                                //getMasterDetail={this.props.getSelectedBatchCreationDetail}\r\n                                getMasterDetail={(batch) => this.props.getSelectedBatchCreationDetail(batch, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                inputParam = {getBatch}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_BATCHCREATION\" })}\r\n                                //mainField=\"stestname\"\r\n                                mainField=\"sbatcharno\"\r\n                                firstField=\"stestname\"\r\n                                secondField=\"sinstrumentname\"\r\n                                selectedListName=\"SelectedBatchmaster\"\r\n                                objectName=\"BatchCreation\"\r\n                                listName=\"IDS_BATCHCREATION\"\r\n                                needValidation={false}\r\n                                hidePaging={false}\r\n                                // subFields={\r\n                                //     [\r\n                                //         { [designProperties.VALUE]: \"sinstrumentcatname\" },\r\n                                //         { [designProperties.VALUE]: \"sinstrumentname\" },\r\n                                //         // { [designProperties.VALUE]: \"smahname\" },\r\n                                //         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\r\n                                //     ]\r\n                                // }\r\n                                needFilter={true}\r\n                                needMultiSelect={false}\r\n                                subFieldsLabel={true}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                searchListName=\"searchedData\"\r\n                                searchRef={this.searchRef}\r\n                                filterParam={filterParam}\r\n                                isClearSearch={this.props.Login.isClearSearch}\r\n                                // skip={this.state.skip}\r\n                                // take={this.state.take}\r\n                               // handlePageChange={this.handlePageChange}\r\n                                addId={addId}\r\n                                showFilterIcon={true}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getBatchSection(addParam)}\r\n                               // openModal={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                commonActions={\r\n                                    // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                    <ProductList className=\"d-flex product-category float-right\">\r\n                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                            hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                            onClick={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPlus} />\r\n                                        </Button>\r\n                                        <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                            //onClick={() => this.reloadData(false)} \r\n                                        >\r\n                                            <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                        </Button>\r\n\r\n                                    </ProductList>\r\n                                    // </Tooltip>\r\n                                }\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":<BatchCreationFilter\r\n                                        fromDate={this.state.selectedFilter[\"fromDate\"] !=undefined ?\r\n                                        rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"fromDate\"])  : this.fromDate}\r\n                                        toDate={this.state.selectedFilter[\"toDate\"] !=undefined  ? \r\n                                        rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"toDate\"]) :  this.toDate}\r\n                                        SampleType={this.state.SampleType || []}\r\n                                        SampleTypeValue={this.props.Login.masterData.defaultSampleType || []}\r\n                                        RegType={this.state.RegistrationType || []}\r\n                                        RegTypeValue={this.props.Login.masterData.defaultRegistrationType || []}\r\n                                        RegSubType={this.state.RegistrationSubType || []}\r\n                                        RegSubTypeValue={this.state.nregsubtypecode || []}\r\n                                        DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || []}\r\n                                        FilterStatus={this.state.BCFilterStatus || []}\r\n                                        FilterStatusValue={this.state.FilterStatusValue || []}\r\n                                        ApprovalVersion={this.state.ApprovalConfigVersion || []}\r\n                                        ApprovalVersionValue={this.state.ApprovalVersionValue || []}\r\n                                        REJobStatus={this.state.REJobStatus || []}\r\n                                        JobStatusValue={this.props.Login.masterData.defaultjobstatus || []}\r\n                                        Test={this.state.Testvalues || []}\r\n                                        TestValue={this.props.Login.masterData.selectedTestSynonym || []}\r\n                                        onFilterComboChange={this.onFilterComboChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        handleFilterDateChange={this.handleFilterDateChange}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                        DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                    />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                             <Col md='8'>\r\n                                {/* <Row> */}\r\n                                    {/* <Col md={12}> */}\r\n                                        <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                                {this.props.Login.masterData.Batchmaster && this.props.Login.masterData.Batchmaster.length > 0\r\n                                                    && this.props.Login.masterData.SelectedBatchmaster ?\r\n                                                    <>\r\n                                                        <Card.Header>\r\n                                                            <Card.Title className=\"product-title-main\">\r\n                                                                {this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n                                                            </Card.Title>\r\n                                                            <Card.Subtitle>\r\n                                                                <div className=\"d-flex product-category\">\r\n                                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                            <MediaLabel className={`btn btn-outlined ${this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED  ? \"outline-initiate\"\r\n                                                                            : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED ? \"outline-success\" \r\n                                                                            : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.CANCELLED ? \"outline-danger\" \r\n                                                                            : \"outline-secondary\"} btn-sm ml-3`}>\r\n                                                                                {this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus}\r\n                                                                            </MediaLabel>\r\n                                                                        </h2>              \r\n                                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                    <div className=\"d-inline\">\r\n\r\n                                                                        <Nav.Link name=\"view\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWINFO\" })}\r\n                                                                        // hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\r\n                                                                        onClick={() => this.props.viewInfo(this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.userInfo,this.props.Login.masterData)}\r\n                                                                        >\r\n                                                                        <FontAwesomeIcon icon={faEye} />\r\n                                                                        </Nav.Link>        \r\n\r\n                                                                        <Nav.Link name=\"editBatchCreation\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                            onClick={() => this.fetchEditData(editParam)}\r\n                                                                            // onClick={() => this.props.getActiveBatchCreationService(editParam,\r\n                                                                            //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                            //  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\r\n                                                                            />\r\n                                                                        </Nav.Link>\r\n                                                                       { \r\n                                                                      // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\r\n                                                                        <Nav.Link name=\"initiateBatchCreation\"                                                        //  data-for=\"tooltip-common-wrap\" \r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_INITIATE\" })} \r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            //role=\"button\"\r\n                                                                            onClick={() => this.testPopUpStartActions(testStartId)}\r\n                                                                             >\r\n                                                                            <FontAwesomeIcon icon={faPlay} \r\n                                                                            />\r\n                                                                        {/* </FontIconWrap>  */}\r\n                                                                        </Nav.Link>\r\n                                                                       // :\"\"\r\n                                                                        }\r\n\r\n                                                                        <Nav.Link name=\"completeBatchCreation\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(completeId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                                                                            onClick={() => this.completePopUpStartActions(completeId)}\r\n                                                                            //onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\r\n                                                                            // onClick={() => this.props.validateBatchComplete({\r\n                                                                            //     masterData: this.props.Login.masterData,\r\n                                                                            //     userInfo: this.props.Login.userInfo,\r\n                                                                            //     userRoleControlRights: this.props.Login.userRoleControlRights,\r\n                                                                            //     ncontrolCode: completeId,\r\n                                                                            //     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n                                                                            // })}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faCheckCircle}\r\n                                                                            // title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\r\n                                                                            />\r\n                                                                        </Nav.Link>\r\n\r\n                                                                        <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}\r\n                                                                               \r\n                                                                        >\r\n                                                                          <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                        </Nav.Link>\r\n\r\n\r\n                                                                        <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                            //onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}                                \r\n                                                                        >\r\n                                                                          <Image src={reject} alt=\"filer-icon action-icons-wrap\" \r\n                                                                           width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                           onClick={() => this.cancelBatch(this.props.Login.masterData.SelectedBatchmaster,cancelId)} \r\n                                                                           data-place=\"left\" \r\n                                                                         />                                                           \r\n                                                                        </Nav.Link>\r\n                                                                   \r\n                                                                        {reportActionList.length>0?\r\n                                                                            <CustomPopover\r\n                                                                                nav={true}\r\n                                                                                data={reportActionList}\r\n                                                                                Button={true}\r\n                                                                                hideIcon={true}\r\n                                                                                btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                                textKey=\"value\"\r\n                                                                                dynamicButton={(value) => this.reportMethod(value)}\r\n                                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                            />\r\n                                                                            :\r\n                                                                        \"\"}\r\n\r\n                                                                    </div>\r\n                                                                    {/* </Tooltip> */}\r\n                                                                </div>\r\n\r\n                                                            </Card.Subtitle>\r\n                                                        </Card.Header>\r\n                                                        <Card.Body>\r\n                                                            <Row className=\"no-gutters\">\r\n                                                               <Col md={12}>\r\n                                                                  <Card className=\"at-tabs\">\r\n                                                                    <CustomTab\r\n                                                                     activeKey={this.props.Login.batchactiveKey ? this.props.Login.batchactiveKey : \"IDS_SAMPLE\"}\r\n                                                                     tabDetail={this.tabDetail()} onTabChange={this.onTabChange} \r\n                                                                     />\r\n                                                                   </Card>\r\n                                                               </Col>\r\n                                                            </Row>\r\n                                                            {/* <CustomTab \r\n                                                            activeKey={this.props.Login.activeKey ? this.props.Login.activeKey : \"IDS_SAMPLE\"}\r\n                                                            tabDetail={this.tabDetail()} onTabChange={this.onTabChange} /> */}\r\n                                                        </Card.Body>\r\n                                                    </>\r\n                                                    : \"\"\r\n                                                }\r\n                                        </Card>\r\n                                        </ContentPanel>\r\n                                    {/* </Col> */}\r\n                                {/* </Row> */}\r\n                         </Col>                  \r\n                  </Row>\r\n              </div>\r\n            {/* </ListWrapper> */}\r\n\r\n            {/* End of get display*/}\r\n\r\n            {/* Start of Modal Sideout for User Creation */}\r\n            {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n            {\r\n                this.props.Login.openModal ?\r\n                    <SlideOutModal \r\n                        show={this.props.Login.openModal}\r\n                        size={\"lg\"}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.operation===\"createSample\" ? this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" }) \r\n                        : this.props.Login.operation===\"initiate\" || this.props.Login.operation===\"view\" || this.props.Login.operation===\"complete\"? this.props.intl.formatMessage({ id: \"IDS_BATCH\" })\r\n                        : this.props.Login.operation===\"createiqcsample\" ? this.props.intl.formatMessage({ id: \"IDS_BATCHIQCSAMPLE\" })\r\n                        : this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === \"create\" ? \r\n                         this.batchMandatoryFields \r\n                        //  : this.props.Login.operation === \"initiate\"  ?\r\n                        //    this.initiateMandatoryFields \r\n                        //  : this.props.Login.operation === \"complete\" ?\r\n                        //    this.completeMandatoryFields\r\n                         : this.props.Login.operation === \"createiqcsample\" ? \r\n                           this.materialIqcMandatory \r\n                         :  []\r\n                        }\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        noSave={this.props.Login.operation === \"view\" ? true : false}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                           : this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\" ?\r\n                            <AddBatchCreation\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                Test={this.state.Testvalues || []}\r\n                                selectedInstrumentCategory={this.state.selectedInstCategory}\r\n                                InstrumentCategory={this.state.InstrumentCategory}\r\n                                Instrument={this.state.Instrument}\r\n                                selectedInstrument={this.state.selectedInstrument}\r\n                                productCategory={this.state.ProductCategory}\r\n                                selectedProductCategory={this.state.selectedProductCategory}\r\n                                TestValue={this.state.selectedTestSynonym || []}\r\n                                product={this.state.Product || []}\r\n                                instrumentID={this.state.InstrumentID || []}\r\n                                selectedProduct={this.state.selectedProduct || []}\r\n                                studyPlanList={this.props.Login.studyPlanList || []}\r\n                                manufacturerList={this.props.Login.productManufacturerList || []}\r\n                                maHolderList={this.props.Login.maHolderList || []}\r\n                                timeZoneList={this.props.Login.timeZoneList || []}\r\n                                selectedBacthCreation={this.props.Login.masterData.SelectedBatchmaster || {}}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                selectedInstrumentId={this.state.selectedInstrumentId}\r\n                                onMultiColumnValue={this.onMultiColumnValue}\r\n                                onMultiColumnMAHChange={this.onMultiColumnMAHChange}\r\n                                batchCreationEditStatusList={this.props.Login.batchCreationEditStatusList}\r\n                                Section={this.state.Section}\r\n                                selectedSection={this.state.selectedSection}\r\n                            />\r\n                            :this.props.Login.operation === \"createSample\" ?\r\n                            <AddSample\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                getProductByCategory={this.getProductByCategory}\r\n                                onComboChange={this.onComboChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                userInfo={this.props.userInfo}\r\n                                productCategoryList={this.props.productCategoryList}\r\n                                productList={this.props.productList}\r\n                                componentList={this.props.componentList}\r\n                                getDataForAddComponent={this.getDataForAddComponent}\r\n                                clearComponentInput={this.props.clearComponentInput}\r\n                                samples={this.state.samples || []}\r\n                                headerSelectionChange={this.headerSelectionChange}\r\n                                selectionChange={this.selectionChange}\r\n                                addedComponentList={this.state.addedComponentList || []}\r\n                                addedHeaderSelectionChange={this.addedHeaderSelectionChange}\r\n                                addedSelectionChange={this.addedSelectionChange}\r\n                                //dataStateChange={this.dataStateChange} \r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                controlMap={this.props.controlMap}\r\n                                inputParam={this.props.inputParam}\r\n                                screenName={this.props.screenName}\r\n                                addSelectAll={this.state.addSelectAll}\r\n                                deleteSelectAll={this.state.deleteSelectAll}\r\n                                onDeleteSelectedComponent={this.onDeleteSelectedComponent}\r\n                                componentPopupSkip={this.props.componentPopupSkip}\r\n                                componentPopupTake={this.props.componentPopupTake}\r\n                                componentPageSizes={this.props.componentPageSizes}\r\n                                nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n                           />\r\n                           :this.props.Login.operation === \"initiate\" || this.props.Login.operation === \"complete\" ?\r\n                           <AddBatchinitiate\r\n                                userInfo={this.props.Login.userInfo}\r\n                                operation={this.props.Login.operation}\r\n                                handleDateChange={this.handleDateChange}\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                currentTime={this.props.Login.currentTime || []}\r\n                           />\r\n                           :this.props.Login.operation === \"view\" ?\r\n                           <Card className='one' >\r\n                           <Card.Body>\r\n                           <ViewInfo\r\n                              userInfo={this.props.Login.userInfo}\r\n                              selectedRecordView={this.props.Login.masterData.selectedRecordView}\r\n                              viewInfoFields={viewInfoFields}\r\n                           />\r\n                           </Card.Body>\r\n                                </Card>\r\n                           : this.props.Login.operation === \"createiqcsample\" ?\r\n                           <AddMaterialIqc\r\n                                userInfo={this.props.Login.userInfo}\r\n                                operation={this.props.Login.operation}\r\n                                materialCategory={this.state.MaterialCategory}\r\n                                selectedMaterialType={this.state.selectedMaterialType}\r\n                                selectedMaterialCategory={this.state.selectedMaterialCategory}\r\n                                onComboChange={this.onComboChange}\r\n                                selectedMaterial={this.state.selectedMaterial}\r\n                                screenName = {this.props.intl.formatMessage({ id: \"IDS_SPECIFICATION\" })}\r\n                                handleSaveClick ={this.handleSaveClick}\r\n                                material={this.state.Material}\r\n                                materialInventory={this.state.MaterialInventory}\r\n                                AddSpec={this.AddSpec}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                currentTime={this.props.Login.currentTime || []}\r\n                                loadSpec = {this.props.Login.loadSpec}\r\n                                selectedMaterialInventory={this.state.selectedMaterialInventory}\r\n                                selectedInventoryUnit={this.props.Login.masterData.selectedInventoryUnit}\r\n                                AgaramTree={this.props.Login.AgaramTree}\r\n                                openNodes={this.props.Login.OpenNodes}\r\n                                onTreeClick={this.onTreeClick}\r\n                                focusKey={this.props.Login.FocusKey}\r\n                                activeKey={this.props.Login.batchactiveKey}\r\n                                Specification={this.props.Login.Specification}\r\n                                selectedSpec={this.props.Login.selectedSpec}\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                onSpecChange={this.onspecChange}  \r\n                                openSpecModal={this.props.Login.openSpecModal}   \r\n                                closeModal={this.closeModal}             \r\n                         /> : \"\"\r\n                        }\r\n                    /> \r\n                    : \"\"\r\n            }\r\n            {/* End of Modal Sideout for Creation */}\r\n            {this.state.showConfirmAlert ? this.confirmAlert() : \"\"}\r\n            </>\r\n        );\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n\r\n    ConfirmDelete = (selectedBatch, deleteId,operation) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteBatchCreation(selectedBatch,deleteId,operation));\r\n    };\r\n\r\n\r\n    completePopUpStartActions = (completeId) => {\r\n    // if(this.props.Login.masterData.nneedtestinitiate === true){\r\n      if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED || \r\n        this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT ||\r\n        this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.CANCELLED\r\n        ){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n            }\r\n    //    }else \r\n      else if (this.props.Login.masterData.Samples.length==0){\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n       }else{\r\n                // const updateInfo = {\r\n                //     typeName: DEFAULT_RETURN,\r\n                //     data: {\r\n                //         openModal: true, \r\n                //         completeId : completeId,\r\n                //         masterData: this.props.Login.masterData,\r\n                //        // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                //         operation: \"complete\"\r\n                //     }\r\n                // }\r\n                // this.props.updateStore(updateInfo);\r\n\r\n                let inputData = {};\r\n                inputData[\"openModal\"] = true;\r\n                inputData[\"completeId\"]= completeId;\r\n                inputData[\"selectedRecord\"]= this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord;\r\n                inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n                inputData[\"operation\"] = \"complete\";\r\n                this.props.batchCompleteDatePopup(inputData,this.props.Login.masterData);\r\n            }\r\n       }\r\n      \r\n    AddSpec = (e) => {\r\n        if(this.state.selectedMaterial !== undefined && \r\n            this.state.selectedMaterialCategory !== undefined ){\r\n                let inputData = {};\r\n                inputData[\"nmaterialcode\"] =  this.state.selectedMaterial.value;\r\n                inputData[\"nmaterialcatcode\"]= this.state.selectedMaterialCategory.value;\r\n                inputData[\"ncategorybasedflow\"]= this.state.selectedMaterialCategory.item.ncategorybasedflow;\r\n                inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n                inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n                // inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                // inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \r\n                // inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \r\n                // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n                // inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                // inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                // inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n                this.props.getTreeByMaterial(inputData,this.state.selectedRecord,this.props.Login.masterData);\r\n            }else{\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_FILLALLDETAILSTOADDSPEC\" }));\r\n            }\r\n    }\r\n\r\n\r\n    testPopUpStartActions = (testStartId) => {\r\n            if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n            }else if (this.props.Login.masterData.Samples.length==0){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n            }\r\n            // else if (this.props.Login.masterData.iqcsample.length==0){\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n            // }\r\n            else{\r\n                let inputData = {};\r\n                inputData[\"openModal\"] = true;\r\n                inputData[\"testStartId\"]= testStartId;\r\n                inputData[\"selectedRecord\"]= this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord;\r\n                inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n                inputData[\"operation\"] = \"initiate\";\r\n                this.props.batchInitiateDatePopup(inputData,this.props.Login.masterData);\r\n                \r\n\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: {\r\n            //                 openModal: true, \r\n            //                 testStartId : testStartId,\r\n            //                 selectedRecord : this.state.selectedRecord && this.state.selectedRecord[\"dtransactiondate\"] ? \"\" : this.state.selectedRecord,\r\n            //                 masterData: this.props.Login.masterData,\r\n            //                 operation: \"initiate\"\r\n            //             }\r\n            //         }\r\n            // this.props.updateStore(updateInfo);\r\n        }\r\n           \r\n     }\r\n\r\n    testStartActions = (selectedmaster,testStartId) =>{\r\n        if(selectedmaster.ntransactionstatus == transactionStatus.INITIATED || selectedmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n            }else if (this.props.Login.masterData.Samples.length==0){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n             }\r\n            //else if (this.props.Login.masterData.iqcsample.length==0){\r\n            //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n            // }\r\n            else{\r\n                let inputData = {};\r\n                let jsonuidata=[];\r\n                const masterData = this.props.Login.masterData;\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/initiateBatchcreation\",\r\n                    isSingleGet: true,\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                    let jsondata = this.props.Login.masterData.Samples.map(item =>{\r\n                                                        return {jsonuidata:item}});\r\n                if(this.props.Login.masterData.iqcsample.length > 0){\r\n                    let totalSample = this.props.Login.masterData.Samples.concat(this.props.Login.masterData.iqcsample);\r\n                    inputData[\"npreregno\"] = this.props.Login.masterData.iqcsample.map(samples =>samples.npreregno).join(\",\");\r\n                    inputData[\"ntransactiontestcode\"] = totalSample.map(samples =>samples.ntransactiontestcode).join(\",\");\r\n                    inputData[\"nneedjoballocationiqc\"] =true\r\n                    inputData[\"isiqcdata\"] =true\r\n                }else{\r\n                    inputData[\"npreregno\"] = this.props.Login.masterData.Samples.map(samples =>samples.npreregno).join(\",\");\r\n                    inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(samples =>samples.ntransactiontestcode).join(\",\");\r\n                    inputData[\"isiqcdata\"] =false\r\n                    inputData[\"nneedjoballocationiqc\"] =false\r\n                }\r\n                    inputData[\"muluserpreregno\"] = this.props.Login.masterData.Samples.map(samples =>samples.npreregno).join(\",\");\r\n                    inputData[\"mulusertransactionsamplecode\"] = this.props.Login.masterData.Samples.map(samples =>samples.ntransactionsamplecode).join(\",\");\r\n                    inputData[\"mulusertransactiontestcode\"] = this.props.Login.masterData.Samples.map(samples =>samples.ntransactiontestcode).join(\",\");\r\n                    inputData[\"fromDate\"]= obj.fromDate;\r\n                    inputData[\"toDate\"]= obj.toDate;\r\n                    inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                    inputData[\"nsampletypecode\"] = this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                   // inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                    inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                    //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    inputData[\"batchsample\"] = jsondata;\r\n                    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                    inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                    inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \r\n                    inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \r\n                    inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n                    this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                        this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n                    inputData[\"napproveconfversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n                    inputData[\"ntranscode\"] =  transactionStatus.INITIATED ||  transactionStatus.DRAFT;\r\n                    inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n                    inputData[\"Batchhistory\"] ={\r\n                                            dtransactiondate : formatInputDate(this.state.selectedRecord[\"dtransactiondate\"] !=undefined ? \r\n                                            this.state.selectedRecord[\"dtransactiondate\"]:this.props.Login.currentTime,false),\r\n                                            scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n                                            };\r\n                    inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n                    inputData[\"testStartId\"] = testStartId;\r\n                    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n                    inputData[\"defaultFilterStatus\"]=this.props.Login.masterData.BCFilterStatus && this.props.Login.masterData.BCFilterStatus[1];\r\n                    inputData[\"sample\"] = this.props.Login.masterData ? this.props.Login.masterData.sample :\"\";\r\n                    inputData[\"iqcsample\"] = this.props.Login.masterData ? this.props.Login.masterData.iqcsample :\"\";\r\n                    const inputParam = {\r\n                        postParam,\r\n                        inputData: inputData,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHCREATION\",\r\n                        operation:\"initiate\"\r\n                    }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, testStartId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam,  \r\n                                masterData:{\r\n                                    ...masterData,\r\n                                    defaultFilterStatus:this.props.Login.masterData.BCFilterStatus \r\n                                    && this.props.Login.masterData.BCFilterStatus[1],\r\n                                    realdefaultFilterStatus : this.props.Login.masterData.BCFilterStatus \r\n                                    && this.props.Login.masterData.BCFilterStatus[1],\r\n\r\n                                }  \r\n                             },\r\n                                openModal: true, screenName: \"IDS_BATCHCREATION\", \r\n                                operation:inputParam.operation\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }else{\r\n                        this.props.batchInitiateAction(inputData, this.props.Login.masterData,this.confirmMessage);\r\n                    }\r\n         }\r\n    }\r\n\r\nbatchSaveIQCActions =(selectedmaster)=>{\r\n\r\n   if(parseFloat(this.state.selectedRecord.susedquantity) < parseFloat(this.props.Login.masterData.inventoryTransaction.savailablequatity)){\r\n     if(this.props.Login.selectedSpec.nallottedspeccode !== undefined &&  this.props.Login.selectedSpec.nallottedspeccode !== \"\" ){\r\n        let userInfo = {};\r\n        let inputRegistrationData = {};\r\n        let inputMaterialInventoryData = {};\r\n        let inputBatchData ={};\r\n        const map = {}\r\n        let batchCreationSampleData = {}; \r\n        let batchCreationTestData = {}; \r\n        let batchCreationSampleArray = [];\r\n        let batchCreationTestArray = [];\r\n        let samplecombinationuniqueArray=[];\r\n        let inputMaterialInventoryArrData=[];\r\n\r\n        batchCreationSampleData[\"nspecsampletypecode\"] =  this.props.Login.selectedSpec && this.props.Login.selectedSpec.nallottedspeccode ? \r\n                this.props.Login.selectedSpec.nallottedspeccode.nspecsampletypecode : transactionStatus.NA;\r\n        batchCreationSampleData[\"ncomponentcode\"] = transactionStatus.NA;\r\n        batchCreationSampleData[\"slno\"] = 1;\r\n        batchCreationSampleArray.push(batchCreationSampleData);\r\n\r\n        inputRegistrationData[\"nallottedspeccode\"]= this.props.Login.selectedSpec && this.props.Login.selectedSpec.nallottedspeccode ? \r\n                           this.props.Login.selectedSpec.nallottedspeccode.value : transactionStatus.NA;\r\n        inputRegistrationData[\"ntemplatemanipulationcode\"]=this.props.Login.ntemplatemanipulationcode || transactionStatus.NA;\r\n        inputRegistrationData[\"nregsubtypeversioncode\"]=this.props.Login.masterData.nregsubtypeversioncode;\r\n        inputRegistrationData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode;\r\n        // inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n        // inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n        // inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n\r\n        inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && \r\n                this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n        inputRegistrationData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                  this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n        inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                                 this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n        inputRegistrationData[\"nproductcatcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"nproductcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"ninstrumentcatcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"ninstrumentcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"nmaterialcatcode\"]=this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n        inputRegistrationData[\"nmaterialcode\"]=this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n\r\n        inputRegistrationData[\"jsondata\"] = {\r\n            nmaterialcode : this.state.selectedMaterial.value,\r\n            nmaterialcatcode:this.state.selectedMaterialCategory.value,\r\n            smaterialcatname :this.state.selectedMaterialCategory.label,\r\n            sinventoryid:this.state.selectedMaterialInventory.item.sinventoryid,\r\n            nmaterialinventorycode:this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n            smaterial:this.state.selectedMaterial.item.smaterialname,\r\n            smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n            nmaterialtypecode: this.state.selectedMaterialType.value,\r\n            susedquantity:this.state.selectedRecord.susedquantity,\r\n            sunitname:this.props.Login.masterData.inventoryTransaction.sunitname,\r\n            savailablequatity:this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n            //materialtype:this.state.selectedMaterialType.label,\r\n            sremarks:this.state.selectedRecord.sremarks,\r\n            nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n        };\r\n        inputRegistrationData[\"jsonuidata\"] = {\r\n            nmaterialcode : this.state.selectedMaterial.value,\r\n            nmaterialcatcode:this.state.selectedMaterialCategory.value,\r\n            smaterialcatname :this.state.selectedMaterialCategory.label,\r\n            sinventoryid:this.state.selectedMaterialInventory.item.sinventoryid,\r\n            nmaterialinventorycode:this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n            smaterial:this.state.selectedMaterial.item.smaterialname,\r\n            smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n            nmaterialtypecode: this.state.selectedMaterialType.value,\r\n            susedquantity:this.state.selectedRecord.susedquantity,\r\n            sunitname:this.props.Login.masterData.inventoryTransaction.sunitname,\r\n            savailablequatity:this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n            //materialtype:this.state.selectedMaterialType.label,\r\n            sremarks:this.state.selectedRecord.sremarks,\r\n            nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n            \r\n        };\r\n\r\n        // inputMaterialInventoryData = {\r\n        //     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\r\n        // }\r\n        //  inputMaterialInventoryData = {\r\n        //         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n        //         jsondata : {\r\n        //             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n        //             nqtyused: this.state.selectedRecord.susedquantity\r\n        //         },\r\n        //         jsonuidata : {\r\n        //             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n        //             nqtyused: this.state.selectedRecord.susedquantity\r\n        //         },\r\n        //         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n        //  };\r\n\r\n         inputMaterialInventoryData[\"nmaterialinventorycode\"]= this.state.selectedMaterialInventory.item.nmaterialinventorycode;\r\n         inputMaterialInventoryData[\"jsondata\"] = {\r\n            ...this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n            nqtyused : this.state.selectedRecord.susedquantity,\r\n            nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n         }\r\n         //inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\r\n         inputMaterialInventoryData[\"nsectioncode\"] = this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];\r\n         inputMaterialInventoryData[\"jsonuidata\"]= {\r\n            ...this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n            nqtyused : this.state.selectedRecord.susedquantity,\r\n            nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n         }\r\n     \r\n\r\n        //inputMaterialInventoryArrData.push(inputMaterialInventoryData);\r\n\r\n        batchCreationTestData[\"ntestgrouptestcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode : transactionStatus.NA;\r\n //     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n        batchCreationTestData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n        batchCreationTestData[\"nsectioncode\"] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n        batchCreationTestData[\"nmethodcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.nmethodcode:transactionStatus.NA;\r\n   //   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\r\n        batchCreationTestData[\"nrepeatcountno\"]=1 ;//--\r\n  //    batchCreationTestData[\"ntestretestno\"]=0;\r\n        batchCreationTestData[\"nparametercount\"]=1; //--\r\n        batchCreationTestData[\"slno\"]=1; //--\r\n           \r\n        batchCreationTestArray.push(batchCreationTestData);\r\n      \r\n   \r\n        map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;\r\n        map[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n        userInfo= this.props.Login.userInfo;\r\n        map[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n        map[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n        map[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n        map[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;       \r\n        map[\"nmaterialcatcode\"]=this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n        map[\"nmaterialcode\"]=this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n        map[\"nmaterialtypecode\"]=this.state.selectedMaterialType ? this.state.selectedMaterialType.value : transactionStatus.NA;\r\n\r\n        inputBatchData = this.props.Login.masterData.SelectedBatchmaster ;\r\n          \r\n        map['Registration'] = inputRegistrationData;\r\n        map['Batchsampleiqc'] = inputBatchData;\r\n        map['RegistrationSample'] = batchCreationSampleArray;\r\n        map['testgrouptest'] = batchCreationTestArray;\r\n        map['userInfo'] = userInfo; \r\n        map['samplecombinationunique'] =samplecombinationuniqueArray;\r\n        map['inputMaterialInventoryArrData']=inputMaterialInventoryData;\r\n        \r\n        const inputParam = {\r\n                        inputData: map,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHIQCSAVE\",\r\n                        operation:\"createiqc\"\r\n                    }\r\n\r\n        this.props.batchSaveIQCActions(inputParam.inputData, this.props.Login.masterData);\r\n\r\n      }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_ADDSPECIFICATIONS\" }));\r\n      }\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\" }));\r\n    }\r\n }\r\n \r\n    cancelBatch = (selectedmaster,cancelId) =>{\r\n         if(selectedmaster.ntransactionstatus == transactionStatus.DRAFT ){\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTBATCHINITIATEDRECORD\" }));\r\n                }else{\r\n                let inputData = {};\r\n                const masterData = this.props.Login.masterData;\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/cancelBatch\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                    let jsondata = this.props.Login.masterData.Samples.map(item =>{\r\n                        return {jsonuidata:item}});\r\n\r\n                    inputData[\"fromDate\"]= obj.fromDate;\r\n                    inputData[\"toDate\"]= obj.toDate;\r\n                    inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && \r\n                    this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                      this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                                     this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                    inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                    //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                    inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                   // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    inputData[\"samples\"] = jsondata;\r\n                    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                    inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n                    inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                    inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n                    this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n                    inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n                    this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    inputData[\"ntranscode\"] = transactionStatus.CANCELLED || transactionStatus.DRAFT;\r\n                    // inputData[\"Batchhistory\"] ={\r\n                    //     dtransactiondate : formatInputDate(new Date(),true),\r\n                    //     scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n                    //     };\r\n                    //inputData[\"completeId\"] = completeId;\r\n                    inputData[\"nneedtestinitiate\"]= this.props.Login.masterData &&  this.props.Login.masterData.nneedtestinitiate;\r\n                    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || \r\n                                                                                    transactionStatus.NA;\r\n                    inputData[\"defaultFilterStatus\"]=this.props.Login.masterData.BCFilterStatus \r\n                                                                                        && this.props.Login.masterData.BCFilterStatus[3];\r\n                    const inputParam = {\r\n                        postParam,\r\n                        inputData: inputData,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batch\",\r\n                        displayName: \"IDS_BATCHCREATION\",\r\n                        operation:\"cancel\"\r\n                    }\r\n\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, cancelId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, \r\n                                screenData: { inputParam, \r\n                                    masterData:{\r\n                                        ...masterData,\r\n                                        defaultFilterStatus:this.props.Login.masterData.BCFilterStatus \r\n                                        && this.props.Login.masterData.BCFilterStatus[2],\r\n                                        realdefaultFilterStatus : this.props.Login.masterData.BCFilterStatus \r\n                                        && this.props.Login.masterData.BCFilterStatus[2],\r\n\r\n                                    } \r\n                                },\r\n                                openModal: true, screenName: \"IDS_BATCHCREATION\", \r\n                                operation:inputParam.operation\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }else{\r\n                        this.props.batchCancelAction(inputData, this.props.Login.masterData);\r\n                    }\r\n                  \r\n         }\r\n    }\r\n\r\n    batchCompleteActions = (selectedmaster,completeId) =>{\r\n            if(selectedmaster.ntransactionstatus == transactionStatus.COMPLETED || selectedmaster.ntransactionstatus == transactionStatus.DRAFT ){\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n            }else{\r\n                let inputData = {};\r\n                const masterData = this.props.Login.masterData;\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/completeBatchcreation\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                    let jsondata = this.props.Login.masterData.Samples.map(item =>{\r\n                        return {jsonuidata:item}});\r\n\r\n                    inputData[\"fromDate\"]= obj.fromDate;\r\n                    inputData[\"toDate\"]= obj.toDate;\r\n                    inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                              this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                               this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                    inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                    //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                    inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                   // inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n                    inputData[\"samples\"] = jsondata;\r\n                    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                    inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n                    inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                    inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n                    inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n                    this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    inputData[\"ntranscode\"] = transactionStatus.COMPLETED || transactionStatus.DRAFT;\r\n                    inputData[\"Batchhistory\"] ={\r\n                        dtransactiondate : formatInputDate(this.state.selectedRecord[\"dtransactiondate\"] !=undefined ?\r\n                            this.state.selectedRecord[\"dtransactiondate\"]:this.props.Login.currentTime,false),\r\n                        scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n                        };\r\n                    inputData[\"completeId\"] = completeId;\r\n                    inputData[\"nneedtestinitiate\"]= this.props.Login.masterData &&  this.props.Login.masterData.nneedtestinitiate;\r\n                    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || \r\n                                                                                    transactionStatus.NA;\r\n                    inputData[\"defaultFilterStatus\"]=this.props.Login.masterData.BCFilterStatus \r\n                                                                                        && this.props.Login.masterData.BCFilterStatus[2];\r\n                    const inputParam = {\r\n                        postParam,\r\n                        inputData: inputData,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHCREATION\",\r\n                        operation:\"complete\"\r\n                    }\r\n\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, \r\n                                    masterData:{\r\n                                        ...masterData,\r\n                                        defaultFilterStatus:this.props.Login.masterData.BCFilterStatus \r\n                                        && this.props.Login.masterData.BCFilterStatus[2],\r\n                                        realdefaultFilterStatus : this.props.Login.masterData.BCFilterStatus \r\n                                        && this.props.Login.masterData.BCFilterStatus[2],\r\n\r\n                                    } \r\n                                },\r\n                                openModal: true, screenName: \"IDS_BATCHCREATION\", \r\n                                operation:inputParam.operation\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }else{\r\n                        this.props.batchCompleteAction(inputData, this.props.Login.masterData);\r\n                    }\r\n                  \r\n         }\r\n    }\r\n\r\n    // completeBatchCreation = () => {\r\n    //     const postParam = {\r\n    //         inputListName: \"Batchmaster\", selectedObject: \"SelectedBatchCreation\",\r\n    //         primaryKeyField: \"nreleasebatchcode\",\r\n    //         primaryKeyValue: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode,\r\n    //         fetchUrl: \"batchcreation/getBatchCreation\",\r\n    //         fecthInputObject: this.props.Login.userInfo,\r\n    //     }\r\n    //     const inputParam = {\r\n    //         classUrl: \"batchcreation\",\r\n    //         methodUrl: \"BatchCreation\", postParam,\r\n    //         inputData: {\r\n    //             ncontrolcode: this.props.Login.ncontrolCode,\r\n    //             \"userinfo\": this.props.Login.userInfo,\r\n    //             nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n    //         },\r\n    //         operation: \"complete\", showConfirmAlert: false\r\n    //     }\r\n    //     //this.props.updateStore({ typeName: DEFAULT_RETURN, data: { showConfirmAlert: false } });  \r\n\r\n    //     const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n\r\n    //     if (esignNeeded) {\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n    //                 openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n    //                 operation: this.props.Login.operation,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n\r\n    //         this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n    //     }\r\n\r\n    // }\r\n\r\n    closeAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlert: false, loading: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let {userRoleControlRights, controlMap, selectedRecord,  filterData,\r\n             addedComponentList,\r\n             filterStatusList, dataState, sahDataState, bahDataState,\r\n             chDataState,testCommentDataState, SampleType, RegistrationType, \r\n             RegistrationSubType,BCFilterStatus, REJobStatus, Testvalues, \r\n             ApprovalConfigVersion,skip, take,\r\n             testskip, testtake,selectedFilter,InstrumentCategory,selectedInstCategory,\r\n             ProductCategory,Instrument,selectedInstrument,selectedTestSynonym,nregsubtypecode,\r\n             selectedProductCategory,Product,selectedProduct,samples,addSelectAll,\r\n             deleteSelectAll,ApprovalVersionValue,FilterStatusValue,Section,\r\n             selectedSection,sampleGridItem,subsampleGridItem,testGridItem = [],\r\n             DynamicGridItem,samplegridmoreitem,DynamicGridMoreItem,MaterialCategory,\r\n             selectedMaterialType,Material,selectedMaterial,selectedMaterialCategory,\r\n             MaterialInventory,selectedMaterialInventory,Specification,\r\n             selectedSpec,addedSamplesList,testGridArnoItems,InstrumentID,selectedInstrumentId,sinstrumentid} = this.state;\r\n        let isStateChanged = false;\r\n        let bool = false;\r\n        addedSamplesList=[];\r\n        samples =[];\r\n       \r\n        if (this.props.Login.masterData.RegistrationSubType &&\r\n            this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n            let dataState = {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n                //, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \r\n            }\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            isStateChanged = true;\r\n           \r\n            SampleType = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'nsampletypecode', 'ascending', 'nsampletypecode', false);\r\n            RegistrationType = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            RegistrationSubType = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            BCFilterStatus = constructOptionList(this.props.Login.masterData.BCFilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\",\"nsorter\", 'ascending', \"ntransactionstatus\", false);\r\n            REJobStatus = constructOptionList(this.props.Login.masterData.REJobStatus || [], 'njobstatuscode', 'sidsjobstatusname', 'ascending', 'njobstatuscode', false);\r\n            Testvalues = constructOptionList(this.props.Login.masterData.Testvalues || [], 'ntestcode', 'stestname', 'ascending', 'ntestcode', false);\r\n            ApprovalConfigVersion = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], 'napprovalconfigversioncode', 'sversionname',\r\n                'ascending', 'napprovalconfigversioncode', false);\r\n            InstrumentCategory=constructOptionList(this.props.Login.masterData.instrumentCategory || [], 'ninstrumentcatcode', 'sinstrumentcatname',\r\n            'ascending', 'ninstrumentcatcode', false);\r\n            Instrument=constructOptionList(this.props.Login.masterData.instrument || [], 'ninstrumentnamecode', 'sinstrumentname',\r\n            'ascending', 'ninstrumentcode', false);\r\n            ProductCategory=constructOptionList(this.props.Login.masterData.productcategory || [], 'nproductcatcode', 'sproductcatname',\r\n            'ascending', 'nproductcatcode', false);\r\n            Product=constructOptionList(this.props.Login.masterData.product || [], 'nproductcode', 'sproductname',\r\n            'ascending', 'nproductcode', false);\r\n            Section=constructOptionList(this.props.Login.masterData.Section || [], 'nsectioncode', 'ssectionname',\r\n            'ascending', 'nsectioncode', false);\r\n            MaterialCategory=constructOptionList(this.props.Login.masterData.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n            'ascending', 'nmaterialcatcode', false);\r\n            Material=constructOptionList(this.props.Login.masterData.Material || [], 'nmaterialcode', 'smaterialname',\r\n            'ascending', 'nmaterialcode', false);\r\n            MaterialInventory=constructOptionList(this.props.Login.masterData.MaterialInventory || [], 'nmaterialinventtranscode', 'sinventoryid',\r\n            'ascending', 'nmaterialinventtranscode', false);\r\n            InstrumentID=constructOptionList(this.props.Login.masterData.instrumentID || [], 'ninstrumentcode', 'sinstrumentid',\r\n            'ascending', 'ninstrumentcode', false);\r\n\r\n\r\n           \r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, \r\n                sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), \r\n                scolorhexcode: \"#800000\" }\r\n            const selectedFilters = this.props.Login.masterData.BCFilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n\r\n            selectedFilter = selectedFiltersNew;\r\n            SampleType = SampleType.get(\"OptionList\")\r\n            RegistrationType = RegistrationType.get(\"OptionList\")\r\n            RegistrationSubType = RegistrationSubType.get(\"OptionList\")\r\n            BCFilterStatus = BCFilterStatus.get(\"OptionList\")\r\n            REJobStatus = REJobStatus.get(\"OptionList\")\r\n            Testvalues = Testvalues.get(\"OptionList\")\r\n            ApprovalConfigVersion = ApprovalConfigVersion.get(\"OptionList\")\r\n            InstrumentCategory = InstrumentCategory.get(\"OptionList\")\r\n            Instrument=Instrument.get(\"OptionList\")\r\n            ProductCategory=ProductCategory.get(\"OptionList\")\r\n            Product=Product.get(\"OptionList\")\r\n            Section=Section.get(\"OptionList\")\r\n            MaterialCategory=MaterialCategory.get(\"OptionList\")\r\n            Material=Material.get(\"OptionList\")\r\n            MaterialInventory=MaterialInventory.get(\"OptionList\")\r\n            InstrumentID = InstrumentID.get(\"OptionList\")\r\n            //selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\r\n            samples=this.props.Login.masterData.samples;\r\n            addSelectAll=false;\r\n            deleteSelectAll=true;\r\n            nregsubtypecode=this.props.Login.masterData.defaultRegistrationSubType ?\r\n                {\r\n                    label: this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,\r\n                    value: this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,\r\n                    item: this.props.Login.masterData.defaultRegistrationSubType\r\n                } : \"\"\r\n\r\n            if (this.props.Login.masterData.selectedTestSynonym !== previousProps.Login.masterData.selectedTestSynonym) {\r\n                    selectedTestSynonym=this.props.Login.masterData.selectedTestSynonym ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedTestSynonym.stestname,\r\n                        value: this.props.Login.masterData.selectedTestSynonym.ntestcode,\r\n                        item: this.props.Login.masterData.selectedTestSynonym\r\n                    } : \"\"\r\n                 isStateChanged = true;\r\n            }\r\n        \r\n            if (this.props.Login.masterData.selectedProductcategory !== previousProps.Login.masterData.selectedProductcategory) {\r\n                        selectedProductCategory=this.props.Login.masterData.selectedProductcategory ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedProductcategory.sproductcatname,\r\n                            value: this.props.Login.masterData.selectedProductcategory.nproductcatcode,\r\n                            item: this.props.Login.masterData.selectedProductcategory\r\n                        } : \"\"\r\n                     isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.masterData.selectedProduct !== previousProps.Login.masterData.selectedProduct) {\r\n                    selectedProduct=this.props.Login.masterData.selectedProduct ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProduct.sproductname,\r\n                        value: this.props.Login.masterData.selectedProduct.nproductcode,\r\n                        item: this.props.Login.masterData.selectedProduct\r\n                    } : \"\"\r\n                    let sproductname = selectedProduct.item;\r\n                    selectedRecord = {...this.state.selectedRecord,sproductname,...selectedRecord};\r\n                    isStateChanged = true;\r\n             }\r\n                \r\n              if (this.props.Login.masterData.selectedInstrumentCategory !== previousProps.Login.masterData.selectedInstrumentCategory) {\r\n                        selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,\r\n                            value: this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,\r\n                            item: this.props.Login.masterData.selectedInstrumentCategory\r\n                        } : \"\"\r\n                    //  selectedRecord['sinstrumentid']={};\r\n                    //  selectedRecord['sinstrumentname']={};\r\n                    //  selectedRecord = {...this.state.selectedRecord,sproductname,...selectedRecord};\r\n                     isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.masterData.selectedInstrument !== previousProps.Login.masterData.selectedInstrument) {\r\n                        selectedInstrument=this.props.Login.masterData.selectedInstrument ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedInstrument.sinstrumentname,\r\n                            value: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n                            item: this.props.Login.masterData.selectedInstrument\r\n                        } : \"\"\r\n                        let sinstrumentname = selectedInstrument.item;\r\n                        selectedRecord = {...this.state.selectedRecord,sinstrumentname,...selectedRecord};\r\n                        isStateChanged = true;\r\n        \r\n        \r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedInstrumentId !== previousProps.Login.masterData.selectedInstrumentId) {\r\n                    selectedInstrumentId=this.props.Login.masterData.selectedInstrumentId ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedInstrumentId.sinstrumentid,\r\n                        value: this.props.Login.masterData.selectedInstrumentId.ninstrumentcode,\r\n                        item: this.props.Login.masterData.selectedInstrumentId\r\n                    } : \"\"\r\n                    let sinstrumentid = selectedInstrumentId.item;\r\n                    selectedRecord = {...this.state.selectedRecord,sinstrumentid,...selectedRecord};\r\n                    isStateChanged = true;\r\n    \r\n    \r\n            }\r\n    \r\n        \r\n                if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                    userRoleControlRights = [];\r\n                    if (this.props.Login.userRoleControlRights) {\r\n                        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                            userRoleControlRights.push(item.ncontrolcode))\r\n                    }\r\n                    controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                    this.setState({ userRoleControlRights, controlMap });\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.selectedComponentList !== previousProps.Login.selectedComponentList) {\r\n                    addedComponentList = this.props.Login.selectedComponentList;\r\n                    isStateChanged = true;\r\n                   // this.setState({ addedComponentList });\r\n                }\r\n        \r\n        \r\n                if(this.props.Login.masterData.defaultApprovalConfigVersion !== previousProps.Login.masterData.defaultApprovalConfigVersion) {\r\n                    ApprovalVersionValue = this.props.Login.masterData.defaultApprovalConfigVersion?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,\r\n                        value: this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,\r\n                        item: this.props.Login.masterData.defaultApprovalConfigVersion\r\n                    } : \"\"\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if(this.props.Login.masterData.defaultFilterStatus !== previousProps.Login.masterData.defaultFilterStatus) {\r\n                    FilterStatusValue = this.props.Login.masterData.defaultFilterStatus ?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultFilterStatus.sfilterstatus,\r\n                        value: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                        item: this.props.Login.masterData.defaultFilterStatus\r\n                    } : \"\"\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if(this.props.Login.masterData.selectedSection !== previousProps.Login.masterData.selectedSection) {\r\n                    selectedSection = this.props.Login.masterData.selectedSection ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedSection.ssectionname,\r\n                        value: this.props.Login.masterData.selectedSection.nsectioncode,\r\n                        item: this.props.Login.masterData.selectedSection\r\n                    } : \"\"\r\n                    let ssectionname = selectedSection.item;\r\n                    selectedRecord = {...this.state.selectedRecord,ssectionname,...selectedRecord};\r\n                    isStateChanged = true;\r\n\r\n                }\r\n            \r\n                if(this.props.Login.masterData.selectedMaterialType !== previousProps.Login.masterData.selectedMaterialType) {\r\n                    selectedMaterialType = this.props.Login.masterData.selectedMaterialType ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialType.smaterialtypename,\r\n                        value: this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,\r\n                        item: this.props.Login.masterData.selectedMaterialType\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialtypename\"]=this.props.Login.masterData.selectedMaterialType.smaterialtypename;\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedMaterialCategory !== previousProps.Login.masterData.selectedMaterialCategory) {\r\n                    selectedMaterialCategory = this.props.Login.masterData.selectedMaterialCategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,\r\n                        value: this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,\r\n                        item: this.props.Login.masterData.selectedMaterialCategory\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialcatname\"]=this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;\r\n                    isStateChanged = true;\r\n                    \r\n                }\r\n            \r\n                if (this.props.Login.masterData.selectedMaterial !== previousProps.Login.masterData.selectedMaterial) {\r\n                    selectedMaterial = this.props.Login.masterData.selectedMaterial ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterial.smaterialname,\r\n                        value: this.props.Login.masterData.selectedMaterial.nmaterialcode,\r\n                        item: this.props.Login.masterData.selectedMaterial\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialname\"]=this.props.Login.masterData.selectedMaterial.smaterialname;\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedMaterialInventory !== previousProps.Login.masterData.selectedMaterialInventory) {\r\n                    selectedMaterialInventory = this.props.Login.masterData.selectedMaterialInventory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialInventory.sinventoryid,\r\n                        value: this.props.Login.masterData.selectedMaterialInventory.nmaterialinventtranscode,\r\n                        item: this.props.Login.masterData.selectedMaterialInventory\r\n                    }:\"\"\r\n                    selectedRecord[\"sinventoryid\"]=this.props.Login.masterData.selectedMaterialInventory && this.props.Login.masterData.selectedMaterialInventory.sinventoryid != null ? \r\n                                 this.props.Login.masterData.selectedMaterialInventory.sinventoryid : \"\";\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedInventoryUnit !== previousProps.Login.masterData.selectedInventoryUnit) {\r\n                            //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                            selectedRecord[\"savailablequatity\"] = this.props.Login.masterData.selectedInventoryUnit &&\r\n                                         this.props.Login.masterData.selectedInventoryUnit.savailablequatity  != null ? this.props.Login.masterData.selectedInventoryUnit.savailablequatity :\"\";\r\n                            selectedRecord[\"susedquantity\"] = \"\";\r\n                            selectedRecord[\"sremarks\"] = \"\";\r\n                            isStateChanged = true;\r\n                }\r\n        \r\n              if (this.props.Login.isselectedrecordempty) {\r\n                    selectedRecord = {};\r\n                    isStateChanged = true;\r\n                }\r\n\r\n\r\n                if (this.props.Login.masterData.Specification !== previousProps.Login.masterData.Specification) {\r\n                    //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                    Specification = this.props.Login.masterData.Specification &&\r\n                                 this.props.Login.masterData.Specification  != null ? this.props.Login.masterData.Specification :\"\";\r\n                    isStateChanged = true;\r\n                 }\r\n\r\n                 if (this.props.Login.selectedSpec !== previousProps.Login.selectedSpec) {\r\n                    selectedRecord[\"selectedSpec\"] = this.props.Login.selectedSpec &&\r\n                                 this.props.Login.selectedSpec  != null ? this.props.Login.selectedSpec :\"\";\r\n                    isStateChanged = true;\r\n                 }\r\n\r\n                 if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n                    selectedRecord = this.props.Login.selectedRecord\r\n                    isStateChanged = true;\r\n                }\r\n\r\n               if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n                    const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.\r\n                        jsondata.value)\r\n                    testGridArnoItems=dynamicColumn.testListFields.testlistitem? dynamicColumn.testListFields.testlistitem : [];\r\n                    testGridItem[0] = dynamicColumn.testListFields.releasetestfields[0] ? dynamicColumn.testListFields.releasetestfields[0] : [];\r\n                    sampleGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n                    subsampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];              \r\n                    samplegridmoreitem = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n                    DynamicGridMoreItem=[...samplegridmoreitem]\r\n                    DynamicGridItem=[...testGridArnoItems,...testGridItem,...sampleGridItem,...subsampleGridItem]     \r\n                    isStateChanged = true;         \r\n             }\r\n         }\r\n\r\n       \r\n        // if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\r\n        //     // let selectedRecord = {};\r\n        //     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n        //     'ascending', 'nmaterialcatcode', false);\r\n        //     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\r\n        //     'ascending', 'nmaterialcode', false);\r\n        //     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\r\n        //     'ascending', 'nmaterialinventorycode', false);\r\n        //      MaterialCategory = MaterialCategory.get(\"OptionList\")\r\n        //      Material = Material.get(\"OptionList\")\r\n        //      MaterialInventory = MaterialInventory.get(\"OptionList\")\r\n\r\n        //      selectedRecord[\"MaterialCategory\"]=MaterialCategory\r\n        //      selectedRecord[\"Material\"]=Material\r\n        //      selectedRecord[\"MaterialInventory\"]=MaterialInventory\r\n\r\n        //  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\r\n        //         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\r\n        //         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\r\n        //         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\r\n        //         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \r\n        //         isStateChanged = true;\r\n        //     }\r\n        \r\n        //     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\r\n        //          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterial\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\r\n        //         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\r\n        //         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterialInventory\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\r\n        //         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n            \r\n      \r\n            \r\n\r\n    \r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            isStateChanged = true;\r\n            //selectedRecord = this.props.Login.selectedRecord;\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n\r\n\r\n        if (isStateChanged)\r\n        {\r\n            this.setState({userRoleControlRights, controlMap, selectedRecord,  \r\n                filterData, addedComponentList,\r\n                filterStatusList, dataState, sahDataState, bahDataState, chDataState,\r\n                testCommentDataState,SampleType, RegistrationType, RegistrationSubType,\r\n                BCFilterStatus, REJobStatus, Testvalues, ApprovalConfigVersion,skip, take,\r\n                testskip, testtake,selectedFilter,selectedInstCategory,InstrumentCategory,\r\n                Instrument,selectedInstrument,selectedTestSynonym,nregsubtypecode,\r\n                ProductCategory,selectedProductCategory,Product,selectedProduct,samples,\r\n                addSelectAll,deleteSelectAll,ApprovalVersionValue,FilterStatusValue,Section,\r\n                selectedSection,sampleGridItem,subsampleGridItem,testGridItem,DynamicGridItem,\r\n                samplegridmoreitem,DynamicGridMoreItem,MaterialCategory,selectedMaterialType,\r\n                Material,selectedMaterial,selectedMaterialCategory,MaterialInventory,\r\n                selectedMaterialInventory,Specification,selectedSpec,addedSamplesList,\r\n                testGridArnoItems,InstrumentID,selectedInstrumentId,sinstrumentid});\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let openSpecModal=this.props.Login.openSpecModal;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"cancel\"){\r\n            //    this.props.Login.operation === \"complete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n            selectedRecord[\"esigncomments\"] = \"\";\r\n            selectedRecord[\"esignpassword\"] = \"\";\r\n        }else if(this.props.Login.openSpecModal){\r\n                loadEsign = false;\r\n                openSpecModal=false\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord,openSpecModal, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let inputData = {};\r\n        selectedRecord[fieldName] = comboData.item;\r\n        if (fieldName === \"sproductname\") {\r\n            selectedRecord[\"nproductcode\"]=comboData.value;\r\n            this.setState({ selectedProduct:comboData });\r\n        }else if(fieldName === \"ssectionname\"){\r\n            inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            inputData['naddcontrolCode']=this.props.Login.naddcontrolCode;\r\n            inputData['section']=selectedRecord.ssectionname;\r\n            inputData['userInfo']=this.props.Login.userInfo;\r\n            this.props.getTestInstrumentComboService(inputData,this.props.Login.masterData);\r\n            // this.setState({ selectedSection:comboData });\r\n\r\n        }else if (fieldName === \"stestname\") {\r\n            if(this.props.Login.operation === \"update\"){\r\n            selectedRecord[\"nprevioustestcode\"]=this.state.selectedTestSynonym.value \r\n            }\r\n            selectedRecord[\"ntestcode\"]=comboData.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                           this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n            //selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            selectedRecord['naddcontrolCode']=this.props.Login.naddcontrolCode;\r\n            selectedRecord['sinstrumentcatname']=undefined;\r\n            selectedRecord[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n            selectedRecord[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n            this.props.getTestInstrumentCategory(selectedRecord,this.props.Login.masterData);\r\n        }else if (fieldName === \"sinstrumentcatname\") {\r\n            selectedRecord[\"ninstrumentcatcode\"]=comboData.value;\r\n            selectedRecord[\"ncalibrationreq\"]=comboData.item.ncalibrationreq;\r\n            selectedRecord[\"ntestcode\"]=this.state.selectedTestSynonym.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            //selectedRecord['sinstrumentid']=undefined;\r\n            selectedRecord['sinstrumentname']=undefined;\r\n            this.props.getInstrumentForInstCategory(selectedRecord,this.props.Login.masterData);\r\n            //this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\r\n        }else if(fieldName === \"smaterialcatname\"){\r\n            selectedRecord[\"nmaterialcatcode\"]=comboData.value;\r\n            selectedRecord[\"needsectionwise\"]=comboData.item.needSectionwise;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord['nsectioncode']=this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n            this.setState({ selectedMaterialCategory:comboData });\r\n            this.props.getMaterialBasedOnMaterialCategory(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n        }else if(fieldName === \"smaterialname\"){\r\n            selectedRecord[\"nmaterialcode\"]=comboData.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord['needsection']=comboData.item.needsection;\r\n            selectedRecord['nsectioncode']=this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n            this.setState({selectedMaterial:comboData });\r\n            this.props.getMaterialInventoryBasedOnMaterial(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n            \r\n        }else if(fieldName === \"sinventoryid\"){\r\n            selectedRecord[\"nmaterialcode\"]=this.state.selectedMaterial.value;\r\n            selectedRecord[\"materialInvCode\"]=comboData.item.nmaterialinventorycode;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord['needsection']=this.props.Login.masterData.selectedMaterial.needsection;\r\n            this.setState({selectedMaterialInventory:comboData });\r\n            // if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\r\n            //     selectedRecord['nsectioncode']=transactionStatus.NA;\r\n            // }else{\r\n            selectedRecord['nsectioncode']=this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n            //}\r\n            this.props.getMaterialAvailQtyBasedOnInv(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n        }else if(fieldName === \"sinstrumentname\"){\r\n            selectedRecord[\"ninstrumentnamecode\"]=comboData.value;\r\n            selectedRecord[\"sinstrumentname\"]=comboData.label;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            //selectedRecord['sinstrumentid']=undefined;\r\n            selectedRecord['selectedInstrument']=comboData.item;\r\n            this.props.getInstrumentID(selectedRecord,this.props.Login.masterData);\r\n        } else {\r\n            this.setState({selectedInstrumentId:comboData });\r\n        }\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onMultiColumnValue = (value, key, flag, label, keys) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n            if (flag) {\r\n                keys.map((objkey, index) => {\r\n                    return selectedRecord[objkey] = { \"label\": value[0][label[index]], \"value\": value[0][objkey] }\r\n                })\r\n            }\r\n        } else {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = \"\";\r\n            });\r\n            keys.map((objkey, index) => {\r\n                return selectedRecord[objkey] = \"\"\r\n            })\r\n        }\r\n        this.props.getBatchManufacturerComboChange(selectedRecord, this.props.Login.userInfo);\r\n    }\r\n\r\n    onMultiColumnMAHChange = (value, key) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    clearComponentInput = () => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"nproductcode\"] = undefined;\r\n        selectedRecord[\"ncomponentcode\"] = undefined;\r\n        selectedRecord[\"smanuflotno\"] = \"\";\r\n        selectedRecord[\"dateprompt\"] = transactionStatus.NO;\r\n        selectedRecord[\"transdatefrom\"] = this.props.Login.componentDefaultSearchDate;\r\n        selectedRecord[\"transdateto\"] = this.props.Login.componentDefaultSearchDate;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        let selectedRecord={};\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDropImage = (attachedFiles, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = attachedFiles;\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    saveSample =(addedsamplelist) =>{\r\n    if(addedsamplelist === undefined ){\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n      }else if(addedsamplelist.length > 0){\r\n        let sampleArray = [];\r\n        addedsamplelist.map(item => \r\n            sampleArray.push({\r\n                npreregno:item.npreregno, \r\n                ntransactionsamplecode:item.ntransactionsamplecode, \r\n                ntransactiontestcode : item.ntransactiontestcode,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster ? \r\n                this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode : transactionStatus.NA,\r\n                sarno:item.jsonuidata.samplelist.sarno,\r\n                ssamplearno:item.jsonuidata.samplelist.ssamplearno,\r\n                stestname:item.jsonuidata.samplelist.stestname,\r\n                jsonuidata : {\r\n                    samplelist : item.jsonuidata.samplelist,\r\n                },\r\n                jsondata : {\r\n                    samplelist : item.jsondata.samplelist,\r\n                }\r\n              }\r\n            )\r\n        )\r\n\r\n        let nbatchmastercode = this.props.Login.masterData.SelectedBatchmaster &&\r\n        this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n        // batchSample = {\r\n        //     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n        //     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\r\n        //     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\r\n        //     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n        //     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\r\n        //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n        //     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\r\n        //     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\r\n        // }\r\n        //jsondata : \r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                batchSample:nbatchmastercode,\r\n                sampleArray,\r\n                userInfo : this.props.Login.userInfo,\r\n                masterData:this.props.Login.masterData,\r\n                nregtypecode : this.props.Login.masterData.defaultRegistrationType ?\r\n                this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n                nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode \r\n                                              : transactionStatus.NA,\r\n                ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA\r\n            }\r\n        }\r\n         this.props.createSampleAction(inputParam.inputData);\r\n      }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n      }\r\n    \r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        \r\n        if(this.props.Login.operation===\"createSample\"){\r\n            this.saveSample(this.state.addedSamplesList)\r\n        }else if(this.props.Login.operation===\"initiate\"){\r\n            this.testStartActions(this.props.Login.masterData.SelectedBatchmaster,this.props.Login.testStartId)\r\n        }else if(this.props.Login.operation===\"complete\"){\r\n            this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,this.props.Login.completeId)\r\n        }else if(this.props.Login.operation===\"createiqcsample\"){\r\n            this.batchSaveIQCActions(this.props.Login.masterData.SelectedBatchmaster)\r\n        }else{\r\n        let inputData = {};\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n        this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        if(this.props.Login.operation ===\"create\"){\r\n        inputData[\"fromDate\"]= obj.fromDate;\r\n        inputData[\"toDate\"]= obj.toDate;\r\n        }\r\n       \r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"nneedcombodataforFilter\"]=\"true\"\r\n        inputData[\"needFilterSubmit\"]=\"false\"\r\n        inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n        inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                  this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n        inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                                 this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n        inputData[\"nprevioustestcode\"] = this.state.selectedRecord && this.state.selectedRecord.nprevioustestcode != undefined ? this.state.selectedRecord.nprevioustestcode : this.state.selectedTestSynonym.value;\r\n        inputData[\"ntestcode\"]= this.state.selectedTestSynonym ? this.state.selectedTestSynonym.value : transactionStatus.NA;\r\n        inputData[\"nsectioncode\"]=this.state.selectedSection ? this.state.selectedSection.item.nsectioncode:transactionStatus.NA;\r\n        //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\r\n        //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\r\n        //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\r\n        inputData[\"ninstrumentcatcode\"]=this.state.selectedInstCategory ? this.state.selectedInstCategory.value : transactionStatus.NA;\r\n        inputData[\"ninstrumentcode\"]=this.state.selectedInstrument ? this.state.selectedInstrument.value : transactionStatus.NA;\r\n        inputData[\"nproductcode\"]=this.state.selectedProduct ? this.state.selectedProduct.value : transactionStatus.NA;\r\n        inputData[\"ntransactionstatus\"]=transactionStatus.DRAFT;\r\n        inputData[\"sbatcharno\"]='-';\r\n        // inputData[\"defaultSampleType\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n        // this.props.Login.masterData.realSampleTypeValue : transactionStatus.NA;\r\n        // inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? \r\n        // this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\r\n        // inputData[\"defaultRegistrationSubType\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue ? \r\n        // this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\r\n        inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n        inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n        inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n        inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n        inputData[\"sinstrumentid\"] = this.state.selectedInstrumentId && this.state.selectedInstrumentId.label;\r\n        // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n        // this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n        // inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n        // this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n        inputData[\"napprovalversioncode\"]= this.props.Login.masterData.realApproveConfigVersion && \r\n        this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n        inputData[\"napprovalconfigcode\"]= this.props.Login.masterData.realApproveConfigVersion && \r\n               this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n        inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA;\r\n       let postParam = undefined;\r\n            postParam = {\r\n                inputListName: \"Batchmaster\", \r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\", \r\n                unchangeList: [\"FromDate\", \"ToDate\"], isSingleGet: true,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\"\r\n            };\r\n        const inputParam = {\r\n            classUrl: \"batchcreation\",\r\n            methodUrl: \"Batchcreation\",\r\n            displayName: \"IDS_BATCHCREATION\",\r\n            inputData: inputData, \r\n            postParam, \r\n            searchRef: this.searchRef,\r\n            operation: this.props.Login.operation, \r\n            saveType, \r\n            formRef,\r\n        }\r\n        if(this.props.Login.operation ===\"create\"){\r\n            this.searchRef.current.value = \"\"; \r\n            this.props.createBatchmasterAction(inputParam[\"inputData\"], this.props.Login.masterData,inputParam[\"operation\"]);\r\n        }else{\r\n            inputData[\"nbatchmastercode\"]= this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n            inputData[\"SelectedBatchmaster\"]= this.props.Login.masterData.SelectedBatchmaster;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.editId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, \r\n                            masterData : this.props.Login.masterData\r\n                        },\r\n                        openModal: true, \r\n                        screenName: \"IDS_BATCHCREATION\",\r\n                        operation : inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else{\r\n            this.props.updateBatchcreationAction(inputParam[\"inputData\"], this.props.Login.masterData,inputParam[\"operation\"]);\r\n            }\r\n        }\r\n    }\r\n        // const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        // if (esignNeeded) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n        //             openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n        //             operation: this.props.Login.operation\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\r\n        //     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\r\n        // }\r\n    }\r\n\r\n    deleteBatchCreation = (selectedBatch,deleteId,operation) => {\r\n        if (selectedBatch.ntransactionstatus === transactionStatus.COMPLETED || \r\n            selectedBatch.ntransactionstatus === transactionStatus.INITIATED ||\r\n            selectedBatch.ntransactionstatus === transactionStatus.CANCELLED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        }\r\n        else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\", \r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedBatch.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userInfo: this.props.Login.userInfo,\r\n                                    ndesigntemplatemappingcode : this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA,\r\n                                    nsampletypecode : this.props.Login.masterData.defaultSampleType.nsampletypecode\r\n                                 },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                inputData[\"fromDate\"]= obj.fromDate;\r\n                inputData[\"toDate\"]= obj.toDate;\r\n                inputData[\"currentdate\"] = formatInputDate(new Date(), true)\r\n                inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType;\r\n                inputData[\"nregtypecode\"]=this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n                inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ? \r\n                          this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n                inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue ? \r\n                           this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n                //inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                //inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                //inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                inputData[\"nbatchmastercode\"] = selectedBatch.nbatchmastercode;\r\n                inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                // inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n                // this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n                inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n                this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n                inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n                inputData[\"selectedBatch\"]=selectedBatch;\r\n                inputData[\"samples\"]=this.props.Login.masterData.Samples;         \r\n                const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                operation,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData,\"openModal\");\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchEditData = (editParam) =>{\r\n    if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT){\r\n        this.props.getActiveBatchCreationService(editParam,\r\n            this.props.Login.masterData.SelectedBatchmaster)\r\n       }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n       }\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n    \r\n        if(this.props.Login.masterData.defaultRegistrationType != undefined && this.state.FilterStatusValue.item != undefined && this.state.nregsubtypecode.item != undefined &&\r\n            this.state.ApprovalVersionValue.item != undefined \r\n        ){\r\n            let inputData = {};\r\n            \r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n            this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            inputData[\"fromDate\"]= obj.fromDate;\r\n            inputData[\"toDate\"]= obj.toDate;\r\n            inputData[\"needFilterSubmit\"]=\"true\";\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n            inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n            // inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n            // this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n            this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode ? this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode: transactionStatus.NA;\r\n            inputData[\"napprovalversioncode\"]=this.state.ApprovalVersionValue ?\r\n               this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n            // inputData[\"napprovalversioncode\"]=this.props.Login.masterData.realApproveConfigVersion && \r\n            //    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode ? \r\n            //    this.props.Login.masterData.realApproveConfigVersion.napprovalconfigversioncode: transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || \r\n                                                                                        transactionStatus.NA;\r\n            inputData[\"realApproveConfigVersion\"]= this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n            inputData[\"realdefaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n            \r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchmaster\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData, \r\n                searchRef: this.searchRef,\r\n            }\r\n        this.props.onActionFilterSubmit(inputParam[\"inputData\"],this.props.Login.masterData);\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\"}));\r\n      }\r\n    }\r\n\r\n    reloadData = (isFilterSubmit) => {\r\n        this.searchRef.current.value = \"\";\r\n        // let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\r\n    if(this.props.Login.masterData.realRegTypeValue !== transactionStatus.NA || \r\n        this.props.Login.masterData.realRegTypeValue !== null &&\r\n        this.props.Login.masterData.realRegSubTypeValue !== transactionStatus.NA || \r\n        this.props.Login.masterData.realRegSubTypeValue !== null && \r\n        this.props.Login.masterData.realApproveConfigVersion !== transactionStatus.NA ||\r\n        this.props.Login.masterData.realApproveConfigVersion !== null && \r\n        this.props.Login.masterData.defaultFilterStatus !== transactionStatus.NA ||\r\n        this.props.Login.masterData.defaultFilterStatus !== null) {\r\n\r\n        let inputData = {};\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n        this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        inputData[\"fromDate\"]= obj.fromDate;\r\n        inputData[\"toDate\"]= obj.toDate;\r\n        inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n\r\n        inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue &&\r\n        this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n        inputData[\"nregtypecode\"]= this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n        this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n\r\n        inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n\r\n        inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType;\r\n        \r\n        inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue : transactionStatus.NA;\r\n\r\n        inputData[\"defaultRegistrationSubType\"]= this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue : transactionStatus.NA;\r\n\r\n        inputData[\"ntranscode\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus.ntransactionstatus || transactionStatus.NA;\r\n\r\n        inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode || transactionStatus.NA;\r\n       \r\n        inputData[\"realApproveConfigVersion\"]= this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n\r\n        inputData[\"napprovalversioncode\"]= this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item.napprovalconfigversioncode || transactionStatus.NA;\r\n\r\n        //inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n        inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus || transactionStatus.NA;\r\n        inputData[\"realdefaultFilterStatus\"] = this.props.Login.masterData.realdefaultFilterStatus && this.props.Login.masterData.realdefaultFilterStatus || transactionStatus.NA;\r\n        inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n        const inputParam = {\r\n            classUrl: \"batchcreation\",\r\n            methodUrl: \"Batchmaster\",\r\n            displayName: \"IDS_BATCHCREATION\",\r\n            inputData: inputData, \r\n            searchRef: this.searchRef,\r\n        }\r\n\r\n      this.props.onActionFilterSubmit(inputParam[\"inputData\"],this.props.Login.masterData);\r\n    }else{\r\n        \r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\"}));\r\n    }\r\n}\r\n  \r\n\r\n    // addtest=(addParam)=>{\r\n    //     if(this.props.Login.masterData.Batchmaster == undefined ){\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" })); \r\n    //     }else{\r\n    //         this.props.getTestInstrumentComboService(addParam)\r\n    //     }\r\n    // }\r\n\r\n    // convertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n\r\n    onClickReport = (selectedRecord, flag, ncontrolcode) => {\r\n        const reportParam = {\r\n            classUrl: \"certificategeneration\",\r\n            methodUrl: \"reportGeneration\",\r\n            screenName: \"CertificateGeneration\",\r\n            operation: \"previewReport\",\r\n            primaryKeyField: \"nreleasebatchcode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: -1,\r\n            inputData: {\r\n                sprimarykeyname: 'nreleasebatchcode',\r\n                nprimarykey: selectedRecord.nreleasebatchcode,\r\n                nreleasebatchcode: selectedRecord.nreleasebatchcode,\r\n                ncertificatetypecode: selectedRecord.ndecision === transactionStatus.PASS && flag === 1 ? selectedRecord.ncertificatetypecode : -1,\r\n                ndecisionstatus: selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\r\n                nreporttypecode: flag === 2 ? reportTypeEnum.SCREENWISE : reportTypeEnum.BATCH,\r\n                ncontrolcode,\r\n                ncoareporttypecode: flag === 2 ? -1 : reportCOAType.BATCHPREVIEW,\r\n                userinfo: this.props.Login.userInfo,\r\n                nflag: flag,\r\n                skipbatchvalidation: true,\r\n            }\r\n        };\r\n        this.props.onClickReport(reportParam)\r\n    }\r\n\r\n    reportMethod = (value) => {\r\n        if (value.method === 1) {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 2, value.controlId);\r\n        }\r\n        else {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 1, value.controlId);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster,updateStore,\r\n    getTestInstrumentComboService,getTestInstrumentCategory,getInstrumentForInstCategory,\r\n    getBatchCreationDetails,onActionFilterSubmit,getProductcategoryAction,\r\n    createBatchmasterAction,getSamplesForGrid,getSelectedBatchCreationDetail,\r\n    createSampleAction,deleteSampleAction,getActiveBatchCreationService,\r\n    updateBatchcreationAction,deleteBatchCreation,batchInitiateAction,\r\n    getBCRegistrationSubType,batchCompleteAction,validateEsignCredential,\r\n    filterColumnData,getBatchhistoryAction,\r\n    getBatchSection,viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType,\r\n    getTreeByMaterial,getNewRegSpecification,cancelIQCSampleAction,batchCancelAction,\r\n    batchInitiateDatePopup,batchCompleteDatePopup,getInstrumentID,getBatchViewResultAction\r\n})(injectIntl(BatchCreation));\r\n\r\n"]},"metadata":{},"sourceType":"module"}