{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\components\\\\form-select-search\\\\form-select-search.component.jsx\";\nimport React //, { useState } \nfrom 'react';\nimport Select, { createFilter } from 'react-select';\nimport { Form } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\n\nconst FormSelectSearch = ({\n  name,\n  formLabel,\n  label,\n  placeholder,\n  isMandatory,\n  optionId,\n  optionValue,\n  options,\n  value,\n  defaultValue,\n  isMulti,\n  //isSearchable, //Gowtham R - ALPD-5179 - Make LIMS Application Dropdown Searchable\n  isDisabled,\n  onChange,\n  onBlur,\n  closeMenuOnSelect,\n  className,\n  classNamePrefix,\n  minMenuHeight,\n  maxMenuHeight,\n  openMenuOnFocus,\n  menuPlacement,\n  menuPortalTarget,\n  menuPosition,\n  errors,\n  touched,\n  setFieldValue,\n  setFieldTouched,\n  isInvalid,\n  required,\n  onKeyUp,\n  formGroupClassName,\n  ...props\n}) => {\n  // const [matchFromStart, setMatchFromStart] = useState(false);\n  // const filterConfig = {\n  //     ignoreCase,\n  //     ignoreAccents,\n  //     trim,\n  //     matchFrom: matchFromStart ? ('start' as const) : ('any' as const),\n  //   };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Form.Group, {\n    onKeyUp: onKeyUp,\n    className: `form-select w-100 floating-label react-select-wrap ${formGroupClassName ? formGroupClassName : \"\"}`,\n    controlId: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    inputId: name,\n    id: name,\n    name: name,\n    placeholder: placeholder,\n    options: options,\n    value: value,\n    isInvalid: isInvalid,\n    required: required,\n    defaultValue: defaultValue,\n    isMulti: isMulti //isSearchable={isSearchable}\n    ,\n    isSearchable: true //Gowtham R - ALPD-5179 - Make LIMS Application Dropdown Searchable\n    ,\n    isDisabled: isDisabled,\n    isClearable: props.isClearable,\n    onChange: onChange,\n    onBlur: onBlur,\n    closeMenuOnSelect: closeMenuOnSelect,\n    className: className,\n    classNamePrefix: \"react-select\",\n    minMenuHeight: minMenuHeight,\n    maxMenuHeight: maxMenuHeight,\n    openMenuOnFocus: true,\n    menuPlacement: \"auto\",\n    autoComplete: \"off\",\n    menuPosition: menuPosition,\n    noOptionsMessage: () => props.intl.formatMessage({\n      id: \"IDS_NOOPTIONS\"\n    }),\n    filterOption: createFilter({\n      matchFrom: props.matchFrom ? props.matchFrom : 'any'\n    }) // filterOption={createFilter({matchFrom:'start' })}\n    // menuPortalTarget={document.querySelector('body')}\n    // menuPosition=\"absolute\"\n    // styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Form.Label, {\n    htmlFor: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }\n  }, formLabel, isMandatory && /*#__PURE__*/React.createElement(\"sup\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 71\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(Form.Control.Feedback, {\n    type: \"invalid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, errors)));\n};\n\nexport default injectIntl(FormSelectSearch);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/components/form-select-search/form-select-search.component.jsx"],"names":["React","Select","createFilter","Form","injectIntl","FormSelectSearch","name","formLabel","label","placeholder","isMandatory","optionId","optionValue","options","value","defaultValue","isMulti","isDisabled","onChange","onBlur","closeMenuOnSelect","className","classNamePrefix","minMenuHeight","maxMenuHeight","openMenuOnFocus","menuPlacement","menuPortalTarget","menuPosition","errors","touched","setFieldValue","setFieldTouched","isInvalid","required","onKeyUp","formGroupClassName","props","isClearable","intl","formatMessage","id","matchFrom"],"mappings":";AAAA,OAAOA,KAAP,CAAY;AAAZ,KACK,OADL;AAEA,OAAOC,MAAP,IAAkBC,YAAlB,QAAqC,cAArC;AACA,SAASC,IAAT,QAAqB,iBAArB;AACA,SAASC,UAAT,QAA2B,YAA3B;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AACtBC,EAAAA,IADsB;AAEtBC,EAAAA,SAFsB;AAGtBC,EAAAA,KAHsB;AAItBC,EAAAA,WAJsB;AAKtBC,EAAAA,WALsB;AAMtBC,EAAAA,QANsB;AAOtBC,EAAAA,WAPsB;AAQtBC,EAAAA,OARsB;AAStBC,EAAAA,KATsB;AAUtBC,EAAAA,YAVsB;AAWtBC,EAAAA,OAXsB;AAYtB;AACAC,EAAAA,UAbsB;AActBC,EAAAA,QAdsB;AAetBC,EAAAA,MAfsB;AAgBtBC,EAAAA,iBAhBsB;AAiBtBC,EAAAA,SAjBsB;AAkBtBC,EAAAA,eAlBsB;AAmBtBC,EAAAA,aAnBsB;AAoBtBC,EAAAA,aApBsB;AAqBtBC,EAAAA,eArBsB;AAsBtBC,EAAAA,aAtBsB;AAuBtBC,EAAAA,gBAvBsB;AAwBtBC,EAAAA,YAxBsB;AAyBtBC,EAAAA,MAzBsB;AA0BtBC,EAAAA,OA1BsB;AA2BtBC,EAAAA,aA3BsB;AA4BtBC,EAAAA,eA5BsB;AA6BtBC,EAAAA,SA7BsB;AA8BtBC,EAAAA,QA9BsB;AA+BtBC,EAAAA,OA/BsB;AAgCtBC,EAAAA,kBAhCsB;AAiCtB,KAAGC;AAjCmB,CAAD,KAkCnB;AACH;AACC;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAEF,OAArB;AAA8B,IAAA,SAAS,EAAG,sDAAqDC,kBAAkB,GAAEA,kBAAF,GAAsB,EAAG,EAA1I;AAA6I,IAAA,SAAS,EAAE9B,IAAxJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,OAAO,EAAEA,IADb;AAEI,IAAA,EAAE,EAAEA,IAFR;AAGI,IAAA,IAAI,EAAEA,IAHV;AAII,IAAA,WAAW,EAAEG,WAJjB;AAKI,IAAA,OAAO,EAAEI,OALb;AAMI,IAAA,KAAK,EAAEC,KANX;AAOI,IAAA,SAAS,EAAEmB,SAPf;AAQI,IAAA,QAAQ,EAAEC,QARd;AASI,IAAA,YAAY,EAAEnB,YATlB;AAUI,IAAA,OAAO,EAAEC,OAVb,CAWI;AAXJ;AAYI,IAAA,YAAY,EAAE,IAZlB,CAYwB;AAZxB;AAaI,IAAA,UAAU,EAAEC,UAbhB;AAcI,IAAA,WAAW,EAAEoB,KAAK,CAACC,WAdvB;AAeI,IAAA,QAAQ,EAAEpB,QAfd;AAgBI,IAAA,MAAM,EAAEC,MAhBZ;AAiBI,IAAA,iBAAiB,EAAEC,iBAjBvB;AAkBI,IAAA,SAAS,EAAEC,SAlBf;AAmBI,IAAA,eAAe,EAAC,cAnBpB;AAoBI,IAAA,aAAa,EAAEE,aApBnB;AAqBI,IAAA,aAAa,EAAEC,aArBnB;AAsBI,IAAA,eAAe,EAAE,IAtBrB;AAuBI,IAAA,aAAa,EAAE,MAvBnB;AAwBI,IAAA,YAAY,EAAC,KAxBjB;AAyBI,IAAA,YAAY,EAAEI,YAzBlB;AA0BI,IAAA,gBAAgB,EAAE,MAAIS,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CA1B1B;AA2BI,IAAA,YAAY,EAAEvC,YAAY,CAAC;AAACwC,MAAAA,SAAS,EAACL,KAAK,CAACK,SAAN,GAAkBL,KAAK,CAACK,SAAxB,GAAoC;AAA/C,KAAD,CA3B9B,CA4BG;AACH;AACA;AACA;AA/BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAmCI,oBAAC,IAAD,CAAM,KAAN;AAAY,IAAA,OAAO,EAAEpC,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BC,SAA5B,EAAuCG,WAAW,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD,CAnCJ,eAoCI,oBAAC,IAAD,CAAM,OAAN,CAAc,QAAd;AAAuB,IAAA,IAAI,EAAC,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKmB,MADL,CApCJ,CADJ,CADJ;AA8CH,CAzFD;;AA0FA,eAAezB,UAAU,CAACC,gBAAD,CAAzB","sourcesContent":["import React//, { useState } \r\nfrom 'react';\r\nimport Select , { createFilter }from 'react-select';\r\nimport { Form } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\n\r\nconst FormSelectSearch = ({\r\n    name,\r\n    formLabel,\r\n    label,\r\n    placeholder,\r\n    isMandatory,\r\n    optionId,\r\n    optionValue,\r\n    options,\r\n    value,\r\n    defaultValue,\r\n    isMulti,\r\n    //isSearchable, //Gowtham R - ALPD-5179 - Make LIMS Application Dropdown Searchable\r\n    isDisabled,\r\n    onChange,\r\n    onBlur,\r\n    closeMenuOnSelect,\r\n    className,\r\n    classNamePrefix,\r\n    minMenuHeight,\r\n    maxMenuHeight,\r\n    openMenuOnFocus,\r\n    menuPlacement,\r\n    menuPortalTarget,\r\n    menuPosition,\r\n    errors,\r\n    touched,\r\n    setFieldValue,\r\n    setFieldTouched,\r\n    isInvalid,\r\n    required,\r\n    onKeyUp,\r\n    formGroupClassName,\r\n    ...props\r\n}) => {\r\n   // const [matchFromStart, setMatchFromStart] = useState(false);\r\n    // const filterConfig = {\r\n    //     ignoreCase,\r\n    //     ignoreAccents,\r\n    //     trim,\r\n    //     matchFrom: matchFromStart ? ('start' as const) : ('any' as const),\r\n    //   };\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <Form.Group onKeyUp={onKeyUp} className={`form-select w-100 floating-label react-select-wrap ${formGroupClassName? formGroupClassName: \"\"}`} controlId={name}>\r\n                <Select\r\n                    inputId={name}\r\n                    id={name}\r\n                    name={name}\r\n                    placeholder={placeholder}\r\n                    options={options}\r\n                    value={value}\r\n                    isInvalid={isInvalid}\r\n                    required={required}\r\n                    defaultValue={defaultValue}\r\n                    isMulti={isMulti}\r\n                    //isSearchable={isSearchable}\r\n                    isSearchable={true} //Gowtham R - ALPD-5179 - Make LIMS Application Dropdown Searchable\r\n                    isDisabled={isDisabled}\r\n                    isClearable={props.isClearable}\r\n                    onChange={onChange}\r\n                    onBlur={onBlur}\r\n                    closeMenuOnSelect={closeMenuOnSelect}\r\n                    className={className}\r\n                    classNamePrefix=\"react-select\"\r\n                    minMenuHeight={minMenuHeight}\r\n                    maxMenuHeight={maxMenuHeight}\r\n                    openMenuOnFocus={true}\r\n                    menuPlacement={\"auto\"}\r\n                    autoComplete=\"off\"\r\n                    menuPosition={menuPosition}\r\n                    noOptionsMessage={()=>props.intl.formatMessage({ id: \"IDS_NOOPTIONS\" })}\r\n                    filterOption={createFilter({matchFrom:props.matchFrom ? props.matchFrom : 'any' })}\r\n                   // filterOption={createFilter({matchFrom:'start' })}\r\n                // menuPortalTarget={document.querySelector('body')}\r\n                // menuPosition=\"absolute\"\r\n                // styles={{ menuPortal: base => ({ ...base, zIndex: 9999 }) }}\r\n\r\n                />\r\n                <Form.Label htmlFor={name}>{formLabel}{isMandatory && <sup>*</sup>}</Form.Label>\r\n                <Form.Control.Feedback type=\"invalid\">\r\n                    {errors}\r\n                </Form.Control.Feedback>\r\n            </Form.Group>\r\n        </React.Fragment>\r\n    )\r\n\r\n\r\n};\r\nexport default injectIntl(FormSelectSearch);"]},"metadata":{},"sourceType":"module"}