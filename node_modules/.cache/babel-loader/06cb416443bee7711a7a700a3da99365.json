{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import MultiColumnComboSearch from'../../components/multi-column-combo-search/multi-column-combo-search';var AddBatchinitiate=function AddBatchinitiate(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dtransactiondate\",label:props.operation==\"initiate\"?props.intl.formatMessage({id:\"IDS_BATCHINITIATEDTIME\"}):props.intl.formatMessage({id:\"IDS_BATCHCOMPLETEDTIME\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:props.selectedRecord?props.selectedRecord[\"dtransactiondate\"]:\"\",dateFormat:props.userInfo.ssitedate,timeInputLabel:props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:false,isClearable:false,onChange:function onChange(date){return props.handleDateChange(\"dtransactiondate\",date);}//value={props.selectedRecord[\"dexpirydate\"]}\n,isMandatory:true,required:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{name:\"scomments\",label:props.intl.formatMessage({id:\"IDS_REMARKS\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_REMARKS\"})//value={props.selectedRecord[scomments]?props.selectedRecord[scomments]:\"\"}\n,rows:\"2\",required:false,maxLength:255}))))));};export default injectIntl(AddBatchinitiate);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/batchruncreation/AddBatchinitiate.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","FormSelectSearch","DateTimePicker","FormNumericInput","MultiColumnComboSearch","AddBatchinitiate","props","operation","intl","formatMessage","id","selectedRecord","userInfo","ssitedate","date","handleDateChange","event","onInputOnChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAAQC,GAAR,CAAaC,GAAb,KAAuB,iBAAvB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,wDAAzB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,8DAA3B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,MAAOC,CAAAA,sBAAP,KAAmC,sEAAnC,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAU,CAC5B,mBAAQ,qDACJ,oBAAC,GAAD,mBACK,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACG,oBAAC,GAAD,mBACA,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACA,oBAAC,cAAD,EACK,IAAI,CAAE,kBADX,CAEK,KAAK,CAAEA,KAAK,CAACC,SAAN,EAAiB,UAAjB,CAA8BD,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,wBAAN,CAAzB,CAA9B,CAA2FJ,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,wBAAN,CAAzB,CAFvG,CAGK,SAAS,CAAC,cAHf,CAIK,eAAe,CAAC,eAJrB,CAKK,QAAQ,CAAEJ,KAAK,CAACK,cAAN,CAAuBL,KAAK,CAACK,cAAN,CAAqB,kBAArB,CAAvB,CAAkE,EALjF,CAMK,UAAU,CAAEL,KAAK,CAACM,QAAN,CAAeC,SANhC,CAOK,cAAc,CAAEP,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,UAAN,CAAzB,CAPrB,CAQK,aAAa,CAAE,KARpB,CASK,WAAW,CAAE,KATlB,CAUK,QAAQ,CAAE,kBAAAI,IAAI,QAAIR,CAAAA,KAAK,CAACS,gBAAN,CAAuB,kBAAvB,CAA2CD,IAA3C,CAAJ,EACd;AAXL,CAYK,WAAW,CAAE,IAZlB,CAaK,QAAQ,CAAE,IAbf,EADA,CADA,cAmBC,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACI,oBAAC,YAAD,EACQ,IAAI,CAAE,WADd,CAEQ,KAAK,CAAER,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,aAAN,CAAzB,CAFf,CAGQ,QAAQ,CAAE,kBAACM,KAAD,QAAWV,CAAAA,KAAK,CAACW,eAAN,CAAsBD,KAAtB,CAA6B,CAA7B,CAAX,EAHlB,CAIQ,WAAW,CAAEV,KAAK,CAACE,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,aAAN,CAAzB,CACb;AALR,CAMQ,IAAI,CAAC,GANb,CAOQ,QAAQ,CAAE,KAPlB,CAQQ,SAAS,CAAE,GARnB,EADJ,CAnBD,CADH,CADL,CADI,CAAR,CAyCH,CA1CJ,CA2CG,cAAed,CAAAA,UAAU,CAACS,gBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport MultiColumnComboSearch from '../../components/multi-column-combo-search/multi-column-combo-search';\r\n\r\nconst AddBatchinitiate = (props) =>{    \r\n       return (<>\r\n           <Row>                                \r\n                <Col md={12}>\r\n                   <Row>\r\n                   <Col md={12}>\r\n                   <DateTimePicker\r\n                        name={\"dtransactiondate\"}\r\n                        label={props.operation==\"initiate\" ? props.intl.formatMessage({ id: \"IDS_BATCHINITIATEDTIME\" }) : props.intl.formatMessage({ id: \"IDS_BATCHCOMPLETEDTIME\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={props.selectedRecord ? props.selectedRecord[\"dtransactiondate\"] : \"\"}\r\n                        dateFormat={props.userInfo.ssitedate}\r\n                        timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                        showTimeInput={false}\r\n                        isClearable={false}\r\n                        onChange={date => props.handleDateChange(\"dtransactiondate\", date)}\r\n                        //value={props.selectedRecord[\"dexpirydate\"]}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                    />\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                                name={\"scomments\"}\r\n                                label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                onChange={(event) => props.onInputOnChange(event, 1)}\r\n                                placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                                //value={props.selectedRecord[scomments]?props.selectedRecord[scomments]:\"\"}\r\n                                rows=\"2\"\r\n                                required={false}\r\n                                maxLength={255}\r\n                            >\r\n                        </FormTextarea>\r\n                    </Col>\r\n                   </Row>\r\n               </Col>      \r\n        </Row>   \r\n       \r\n      </>\r\n       )\r\n   }\r\n   export default injectIntl(AddBatchinitiate);\r\n"]},"metadata":{},"sourceType":"module"}