{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\AddTestGroupNumericSpecification.jsx\";\nimport React from 'react';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { Col, Row, FormGroup, Card } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport { injectIntl } from 'react-intl';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\n\nconst AddTestGroupNumericSpecification = props => {\n  const {\n    needActualResult,\n    gender,\n    grade\n  } = props.parameterData;\n  return /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_GENDER\"\n    }),\n    isSearchable: true,\n    name: \"ngendercode\" // isDisabled={needActualResult}\n    ,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }) // isMandatory={!needActualResult}\n    ,\n    isMandatory: true,\n    options: gender || [],\n    optionId: \"ngendercode\",\n    optionValue: \"sgendername\",\n    value: props.selectedRecord && props.selectedRecord[\"ngendercode\"] ? props.selectedRecord[\"ngendercode\"] : \"\",\n    onChange: value => props.onComboChange(value, \"ngendercode\", 1),\n    alphabeticalSort: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"nfromage\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FROMAGE\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"nfromage\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FROMAGE\"\n    }),\n    strict: true,\n    min: 0,\n    isMandatory: true //max={9999999.99}\n    ,\n    maxLength: 3,\n    onChange: value => props.onNumericInputChange(value, \"nfromage\"),\n    noStyle: true,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(FormNumericInput, {\n    name: \"ntoage\",\n    label: props.intl.formatMessage({\n      id: \"IDS_TOAGE\"\n    }),\n    type: \"number\",\n    value: props.selectedRecord[\"ntoage\"],\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_TOAGE\"\n    }),\n    strict: true,\n    min: 0,\n    isMandatory: true //max={9999999.99}\n    ,\n    maxLength: 3,\n    onChange: value => props.onNumericInputChange(value, \"ntoage\"),\n    noStyle: true,\n    className: \"form-control\",\n    errors: \"Please provide a valid number.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_INNERBAND\"\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      \"padding-bottom\": \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nlowa\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOWA\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"nlowa\"] ? props.selectedRecord[\"nlowa\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOWA\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nhigha\",\n    label: props.intl.formatMessage({\n      id: \"IDS_HIGHA\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"nhigha\"] ? props.selectedRecord[\"nhigha\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_HIGHA\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 37\n    }\n  })))))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_LOQS\"\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      \"padding-bottom\": \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sminloq\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MINVALUES\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"sminloq\"] ? props.selectedRecord[\"sminloq\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MINVALUES\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 37\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"smaxloq\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXVALUES\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"smaxloq\"] ? props.selectedRecord[\"smaxloq\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXVALUES\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 37\n    }\n  })))))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      \"padding-bottom\": \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sdisregard\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DISREGARDED\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"sdisregard\"] ? props.selectedRecord[\"sdisregard\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DISREGARDED\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 25\n    }\n  }))))), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_OUTERBAND\"\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      \"padding-bottom\": \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nlowb\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LOWB\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"nlowb\"] ? props.selectedRecord[\"nlowb\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LOWB\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"nhighb\",\n    label: props.intl.formatMessage({\n      id: \"IDS_HIGHB\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"nhighb\"] ? props.selectedRecord[\"nhighb\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_HIGHB\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 21\n    }\n  }, props.intl.formatMessage({\n    id: \"IDS_LODS\"\n  })), /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      \"padding-bottom\": \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sminlod\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MINVALUES\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"sminlod\"] ? props.selectedRecord[\"sminlod\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MINVALUES\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"smaxlod\",\n    label: props.intl.formatMessage({\n      id: \"IDS_MAXVALUES\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"smaxlod\"] ? props.selectedRecord[\"smaxlod\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_MAXVALUES\"\n    }),\n    onChange: event => props.onInputOnChange(event, 4),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 33\n    }\n  })))))), /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card.Body, {\n    style: {\n      \"padding-bottom\": \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sresultvalue\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTRESULT\"\n    }),\n    type: \"text\",\n    required: false,\n    isMandatory: false,\n    value: props.selectedRecord[\"sresultvalue\"] ? props.selectedRecord[\"sresultvalue\"] : \"\",\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTRESULT\"\n    }),\n    onChange: event => props.onInputOnChange(event, 7),\n    maxLength: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: \"6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_GRADE\"\n    }),\n    isSearchable: false,\n    name: \"ngradecode\",\n    isDisabled: props.selectedRecord[\"sresultvalue\"] === null || props.selectedRecord[\"sresultvalue\"] === \"\" || props.selectedRecord[\"sresultvalue\"] === undefined,\n    placeholder: \"Please Select...\",\n    isMandatory: false,\n    showOption: false,\n    options: grade || [],\n    optionId: \"ngradecode\",\n    optionValue: \"sdisplaystatus\",\n    value: props.selectedRecord ? props.selectedRecord[\"ngradecode\"] : \"\",\n    onChange: value => props.onComboChange(value, \"ngradecode\", 1),\n    alphabeticalSort: true //isClearable={true}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  })))))))));\n};\n\nexport default injectIntl(AddTestGroupNumericSpecification);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/SOURCE-512/QuaLISWeb/src/pages/testgroup/AddTestGroupNumericSpecification.jsx"],"names":["React","FormSelectSearch","Col","Row","FormGroup","Card","FormInput","injectIntl","FormTextarea","FormNumericInput","AddTestGroupNumericSpecification","props","needActualResult","gender","grade","parameterData","intl","formatMessage","id","selectedRecord","value","onComboChange","onNumericInputChange","event","onInputOnChange","undefined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row, FormGroup, Card } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\n\r\nconst AddTestGroupNumericSpecification = (props) => {\r\n    const { needActualResult, gender, grade } = props.parameterData;\r\n\r\n\r\n    return (\r\n        <Col md=\"12\">\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_GENDER\" })}\r\n                isSearchable={true}\r\n                name={\"ngendercode\"}\r\n                // isDisabled={needActualResult}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                // isMandatory={!needActualResult}\r\n                isMandatory={true}\r\n                options={gender || []}\r\n                optionId='ngendercode'\r\n                optionValue='sgendername'\r\n                value={props.selectedRecord && props.selectedRecord[\"ngendercode\"] ? props.selectedRecord[\"ngendercode\"] : \"\"}\r\n                onChange={value => props.onComboChange(value, \"ngendercode\", 1)}\r\n                alphabeticalSort={true}\r\n            >\r\n            </FormSelectSearch>\r\n\r\n\r\n            <FormNumericInput\r\n                name={\"nfromage\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_FROMAGE\" })}\r\n                type=\"number\"\r\n                value={props.selectedRecord[\"nfromage\"]}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_FROMAGE\" })}\r\n                strict={true}\r\n                min={0}\r\n                isMandatory={true}\r\n                //max={9999999.99}\r\n                maxLength={3}\r\n                onChange={(value) => props.onNumericInputChange(value, \"nfromage\")}\r\n                noStyle={true}\r\n                className=\"form-control\"\r\n                errors=\"Please provide a valid number.\"\r\n            />\r\n\r\n\r\n            <FormNumericInput\r\n                name={\"ntoage\"}\r\n                label={props.intl.formatMessage({ id: \"IDS_TOAGE\" })}\r\n                type=\"number\"\r\n                value={props.selectedRecord[\"ntoage\"]}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_TOAGE\" })}\r\n                strict={true}\r\n                min={0}\r\n                isMandatory={true}\r\n                //max={9999999.99}\r\n                maxLength={3}\r\n                onChange={(value) => props.onNumericInputChange(value, \"ntoage\")}\r\n                noStyle={true}\r\n                className=\"form-control\"\r\n                errors=\"Please provide a valid number.\"\r\n            />\r\n  <Row>\r\n            \r\n            <Col md=\"6\">\r\n                <FormGroup>\r\n                    <Card>\r\n                        <Card.Header>{props.intl.formatMessage({ id: \"IDS_INNERBAND\" })}</Card.Header>\r\n                        <Card.Body style={{ \"padding-bottom\": \"0\" }}>\r\n                            <Row>\r\n                                <Col md=\"6\">\r\n                                    <FormInput\r\n                                        name=\"nlowa\"\r\n                                        label={props.intl.formatMessage({ id: \"IDS_LOWA\" })}\r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={false}\r\n                                        value={props.selectedRecord[\"nlowa\"] ? props.selectedRecord[\"nlowa\"] : \"\"}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_LOWA\" })}\r\n                                        onChange={(event) => props.onInputOnChange(event, 4)}\r\n                                        maxLength={10}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <FormInput\r\n                                        name=\"nhigha\"\r\n                                        label={props.intl.formatMessage({ id: \"IDS_HIGHA\" })}\r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={false}\r\n                                        value={props.selectedRecord[\"nhigha\"] ? props.selectedRecord[\"nhigha\"] : \"\"}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_HIGHA\" })}\r\n                                        onChange={(event) => props.onInputOnChange(event, 4)}\r\n                                        maxLength={10}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </FormGroup>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <FormGroup>\r\n                    <Card>\r\n                        <Card.Header>{props.intl.formatMessage({ id: \"IDS_LOQS\" })}</Card.Header>\r\n                        <Card.Body style={{ \"padding-bottom\": \"0\" }}>\r\n                            <Row>\r\n                                <Col md=\"6\">\r\n                                    <FormInput\r\n                                        name=\"sminloq\"\r\n                                        label={props.intl.formatMessage({ id: \"IDS_MINVALUES\" })}\r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={false}\r\n                                        value={props.selectedRecord[\"sminloq\"] ? props.selectedRecord[\"sminloq\"] : \"\"}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_MINVALUES\" })}\r\n                                        onChange={(event) => props.onInputOnChange(event, 4)}\r\n                                        maxLength={10}\r\n\r\n                                    />\r\n                                </Col>\r\n                                <Col md=\"6\">\r\n                                    <FormInput\r\n                                        name=\"smaxloq\"\r\n                                        label={props.intl.formatMessage({ id: \"IDS_MAXVALUES\" })}\r\n                                        type=\"text\"\r\n                                        required={false}\r\n                                        isMandatory={false}\r\n                                        value={props.selectedRecord[\"smaxloq\"] ? props.selectedRecord[\"smaxloq\"] : \"\"}\r\n                                        placeholder={props.intl.formatMessage({ id: \"IDS_MAXVALUES\" })}\r\n                                        onChange={(event) => props.onInputOnChange(event, 4)}\r\n                                        maxLength={10}\r\n\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </FormGroup>\r\n\r\n\r\n                <FormGroup>\r\n                <Card>\r\n                <Card.Body style={{ \"padding-bottom\": \"0\" }}>\r\n                        <FormInput\r\n                            name=\"sdisregard\"\r\n                            label={props.intl.formatMessage({ id: \"IDS_DISREGARDED\" })}\r\n                            type=\"text\"\r\n                            required={false}\r\n                            isMandatory={false}\r\n                            value={props.selectedRecord[\"sdisregard\"] ? props.selectedRecord[\"sdisregard\"] : \"\"}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DISREGARDED\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 4)}\r\n                            maxLength={10}\r\n\r\n                        />\r\n                           </Card.Body>\r\n                </Card>\r\n                    \r\n                </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n\r\n            <FormGroup>\r\n                <Card>\r\n                    <Card.Header>{props.intl.formatMessage({ id: \"IDS_OUTERBAND\" })}</Card.Header>\r\n                    <Card.Body style={{ \"padding-bottom\": \"0\" }}>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <FormInput\r\n                                    name=\"nlowb\"\r\n                                    label={props.intl.formatMessage({ id: \"IDS_LOWB\" })}\r\n                                    type=\"text\"\r\n                                    required={false}\r\n                                    isMandatory={false}\r\n                                    value={props.selectedRecord[\"nlowb\"] ? props.selectedRecord[\"nlowb\"] : \"\"}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_LOWB\" })}\r\n                                    onChange={(event) => props.onInputOnChange(event, 4)}\r\n                                    maxLength={10}\r\n\r\n                                />\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <FormInput\r\n                                    name=\"nhighb\"\r\n                                    label={props.intl.formatMessage({ id: \"IDS_HIGHB\" })}\r\n                                    type=\"text\"\r\n                                    required={false}\r\n                                    isMandatory={false}\r\n                                    value={props.selectedRecord[\"nhighb\"] ? props.selectedRecord[\"nhighb\"] : \"\"}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_HIGHB\" })}\r\n                                    onChange={(event) => props.onInputOnChange(event, 4)}\r\n                                    maxLength={10}\r\n\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </FormGroup>\r\n\r\n\r\n\r\n            <FormGroup>\r\n                <Card>\r\n                    <Card.Header>{props.intl.formatMessage({ id: \"IDS_LODS\" })}</Card.Header>\r\n                    <Card.Body style={{ \"padding-bottom\": \"0\" }}>\r\n                        <Row>\r\n                            <Col md=\"6\">\r\n                                <FormInput\r\n                                    name=\"sminlod\"\r\n                                    label={props.intl.formatMessage({ id: \"IDS_MINVALUES\" })}\r\n                                    type=\"text\"\r\n                                    required={false}\r\n                                    isMandatory={false}\r\n                                    value={props.selectedRecord[\"sminlod\"] ? props.selectedRecord[\"sminlod\"] : \"\"}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_MINVALUES\" })}\r\n                                    onChange={(event) => props.onInputOnChange(event, 4)}\r\n                                    maxLength={10}\r\n\r\n                                />\r\n                            </Col>\r\n                            <Col md=\"6\">\r\n                                <FormInput\r\n                                    name=\"smaxlod\"\r\n                                    label={props.intl.formatMessage({ id: \"IDS_MAXVALUES\" })}\r\n                                    type=\"text\"\r\n                                    required={false}\r\n                                    isMandatory={false}\r\n                                    value={props.selectedRecord[\"smaxlod\"] ? props.selectedRecord[\"smaxlod\"] : \"\"}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_MAXVALUES\" })}\r\n                                    onChange={(event) => props.onInputOnChange(event, 4)}\r\n                                    maxLength={10}\r\n\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                    </Card.Body>\r\n                </Card>\r\n            </FormGroup>\r\n\r\n\r\n\r\n\r\n            <FormGroup>\r\n                <Card>\r\n                    <Card.Body style={{ \"padding-bottom\": \"0\" }}>\r\n                        <Row>\r\n                            <Col md={6}>\r\n\r\n\r\n                                <FormInput\r\n                                    name=\"sresultvalue\"\r\n                                    label={props.intl.formatMessage({ id: \"IDS_DEFAULTRESULT\" })}\r\n                                    type=\"text\"\r\n                                    required={false}\r\n                                    isMandatory={false}\r\n                                    value={props.selectedRecord[\"sresultvalue\"] ? props.selectedRecord[\"sresultvalue\"] : \"\"}\r\n                                    placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTRESULT\" })}\r\n                                    onChange={(event) => props.onInputOnChange(event, 7)}\r\n                                    maxLength={10}\r\n\r\n                                />\r\n\r\n                            </Col>\r\n\r\n                            <Col md=\"6\">\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_GRADE\" })}\r\n                                    isSearchable={false}\r\n                                    name={\"ngradecode\"}\r\n                                    isDisabled={props.selectedRecord[\"sresultvalue\"] === null || props.selectedRecord[\"sresultvalue\"] === \"\" || props.selectedRecord[\"sresultvalue\"] === undefined}\r\n                                    placeholder=\"Please Select...\"\r\n                                    isMandatory={false}\r\n                                    showOption={false}\r\n                                    options={grade || []}\r\n                                    optionId='ngradecode'\r\n                                    optionValue='sdisplaystatus'\r\n                                    value={props.selectedRecord ? props.selectedRecord[\"ngradecode\"] : \"\"}\r\n                                    onChange={value => props.onComboChange(value, \"ngradecode\", 1)}\r\n                                    alphabeticalSort={true}\r\n                                //isClearable={true}\r\n                                >\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n\r\n\r\n                        </Row>\r\n\r\n                    </Card.Body>\r\n                </Card>\r\n            </FormGroup>\r\n            </Col>\r\n            </Row>\r\n        </Col>\r\n    );\r\n}\r\n\r\nexport default injectIntl(AddTestGroupNumericSpecification);"]},"metadata":{},"sourceType":"module"}