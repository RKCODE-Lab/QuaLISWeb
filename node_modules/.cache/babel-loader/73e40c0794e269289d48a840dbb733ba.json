{"ast":null,"code":"import{faPlus,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Nav}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import{condition}from'../Enumeration';import FormInput from'../form-input/form-input.component';import{ContentPanel,MediaLabel}from'../App.styles';// import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\nimport FormSelectSearch from'../form-select-search/form-select-search.component';var ComboFilterProperties=function ComboFilterProperties(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FILTERCOLUMN\"}),isSearchable:true,name:\"filtercolumn\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.tableColumn,value:props.selectedFieldRecord&&props.selectedFieldRecord[\"filtercolumn\"]?props.selectedFieldRecord[\"filtercolumn\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"filtercolumn\");},closeMenuOnSelect:true,alphabeticalSort:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_CONDITION\"}),isSearchable:true,name:\"condition\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.selectedFieldRecord[\"filtercolumn\"]&&props.selectedFieldRecord[\"filtercolumn\"].type==='numeric'?props.numericConditions:props.stringConditions,value:props.selectedFieldRecord&&props.selectedFieldRecord[\"condition\"]?props.selectedFieldRecord[\"condition\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"condition\");},closeMenuOnSelect:true,alphabeticalSort:true}),props.selectedFieldRecord[\"filtercolumn\"]&&props.selectedFieldRecord[\"filtercolumn\"].type!=='numeric'?/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_FILTERVALUE\"}),name:\"staticfiltervalue\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_FILTERVALUE\"}),value:props.selectedFieldRecord[\"staticfiltervalue\"]?props.selectedFieldRecord[\"staticfiltervalue\"]:\"\",isMandatory:true,required:true,maxLength:\"30\"}):/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_FILTERVALUE\"}),isSearchable:true,name:\"filtervalue\",placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,isClearable:false,options:props.filterData,value:props.selectedFieldRecord&&props.selectedFieldRecord[\"filtervalue\"]?props.selectedFieldRecord[\"filtervalue\"]:\"\",onChange:function onChange(value){return props.onComboChange(value,\"filtervalue\");},closeMenuOnSelect:true,alphabeticalSort:true,isMulti:props.selectedFieldRecord[\"condition\"]&&(props.selectedFieldRecord[\"condition\"].value===condition.CONTAINS||props.selectedFieldRecord[\"condition\"].value===condition.NOTCONTAINS)?true:false}),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(Nav.Link,{onClick:props.addCondition,className:\"add-txt-btn\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_ADD\",defaultMessage:\"Add\"}))),props.selectedFieldRecord.conditionArrayUI&&props.selectedFieldRecord.conditionArrayUI.map(function(condition,index){return/*#__PURE__*/React.createElement(ContentPanel,{className:\"d-flex justify-content-between\"},/*#__PURE__*/React.createElement(MediaLabel,{style:{border:\".5rem\"}},condition),/*#__PURE__*/React.createElement(Nav.Link,{onClick:function onClick(){return props.deleteCondition(index);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt,className:\"pt-1\"})));}));};export default injectIntl(ComboFilterProperties);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/droparea/ComboFilterProperties.jsx"],"names":["faPlus","faTrashAlt","FontAwesomeIcon","React","Nav","FormattedMessage","injectIntl","condition","FormInput","ContentPanel","MediaLabel","FormSelectSearch","ComboFilterProperties","props","intl","formatMessage","id","tableColumn","selectedFieldRecord","value","onComboChange","type","numericConditions","stringConditions","event","onInputOnChange","filterData","CONTAINS","NOTCONTAINS","addCondition","conditionArrayUI","map","index","border","deleteCondition"],"mappings":"AAAA,OAASA,MAAT,CAAiBC,UAAjB,KAAmC,mCAAnC,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,KAAoB,iBAApB,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,OAASC,SAAT,KAA0B,gBAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,oCAAtB,CACA,OAASC,YAAT,CAAuBC,UAAvB,KAAyC,eAAzC,CACA;AACA,MAAOC,CAAAA,gBAAP,KAA6B,oDAA7B,CAEA,GAAMC,CAAAA,qBAAqB,CAAG,QAAxBA,CAAAA,qBAAwB,CAACC,KAAD,CAAW,CACrC,mBACI,qDACI,oBAAC,gBAAD,EACI,SAAS,CAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CADf,CAEI,YAAY,CAAE,IAFlB,CAGI,IAAI,CAAE,cAHV,CAII,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAJjB,CAKI,WAAW,CAAE,IALjB,CAMI,WAAW,CAAE,KANjB,CAOI,OAAO,CAAEH,KAAK,CAACI,WAPnB,CAQI,KAAK,CAAEJ,KAAK,CAACK,mBAAN,EAA6BL,KAAK,CAACK,mBAAN,CAA0B,cAA1B,CAA7B,CAAyEL,KAAK,CAACK,mBAAN,CAA0B,cAA1B,CAAzE,CAAqH,EARhI,CASI,QAAQ,CAAE,kBAAAC,KAAK,QAAIN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,cAA3B,CAAJ,EATnB,CAUI,iBAAiB,CAAE,IAVvB,CAWI,gBAAgB,CAAE,IAXtB,EADJ,cAcI,oBAAC,gBAAD,EACI,SAAS,CAAEN,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,eAAN,CAAzB,CADf,CAEI,YAAY,CAAE,IAFlB,CAGI,IAAI,CAAE,WAHV,CAII,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAJjB,CAKI,WAAW,CAAE,IALjB,CAMI,WAAW,CAAE,KANjB,CAOI,OAAO,CAAEH,KAAK,CAACK,mBAAN,CAA0B,cAA1B,GAA6CL,KAAK,CAACK,mBAAN,CAA0B,cAA1B,EAA0CG,IAA1C,GAAmD,SAAhG,CACLR,KAAK,CAACS,iBADD,CACqBT,KAAK,CAACU,gBARxC,CASI,KAAK,CAAEV,KAAK,CAACK,mBAAN,EAA6BL,KAAK,CAACK,mBAAN,CAA0B,WAA1B,CAA7B,CAAsEL,KAAK,CAACK,mBAAN,CAA0B,WAA1B,CAAtE,CAA+G,EAT1H,CAUI,QAAQ,CAAE,kBAAAC,KAAK,QAAIN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,WAA3B,CAAJ,EAVnB,CAWI,iBAAiB,CAAE,IAXvB,CAYI,gBAAgB,CAAE,IAZtB,EAdJ,CA4BKN,KAAK,CAACK,mBAAN,CAA0B,cAA1B,GAA6CL,KAAK,CAACK,mBAAN,CAA0B,cAA1B,EAA0CG,IAA1C,GAAmD,SAAhG,cACG,oBAAC,SAAD,EACI,KAAK,CAAER,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,iBAAN,CAAzB,CADX,CAEI,IAAI,CAAE,mBAFV,CAGI,IAAI,CAAC,MAHT,CAII,QAAQ,CAAE,kBAACQ,KAAD,QAAWX,CAAAA,KAAK,CAACY,eAAN,CAAsBD,KAAtB,CAAX,EAJd,CAKI,WAAW,CAAEX,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,iBAAN,CAAzB,CALjB,CAMI,KAAK,CAAEH,KAAK,CAACK,mBAAN,CAA0B,mBAA1B,EAAiDL,KAAK,CAACK,mBAAN,CAA0B,mBAA1B,CAAjD,CAAkG,EAN7G,CAOI,WAAW,CAAE,IAPjB,CAQI,QAAQ,CAAE,IARd,CASI,SAAS,CAAE,IATf,EADH,cAcG,oBAAC,gBAAD,EACI,SAAS,CAAEL,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,iBAAN,CAAzB,CADf,CAEI,YAAY,CAAE,IAFlB,CAGI,IAAI,CAAE,aAHV,CAII,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAE,kBAAN,CAAzB,CAJjB,CAKI,WAAW,CAAE,IALjB,CAMI,WAAW,CAAE,KANjB,CAOI,OAAO,CAAEH,KAAK,CAACa,UAPnB,CAQI,KAAK,CAAEb,KAAK,CAACK,mBAAN,EAA6BL,KAAK,CAACK,mBAAN,CAA0B,aAA1B,CAA7B,CAAwEL,KAAK,CAACK,mBAAN,CAA0B,aAA1B,CAAxE,CAAmH,EAR9H,CASI,QAAQ,CAAE,kBAAAC,KAAK,QAAIN,CAAAA,KAAK,CAACO,aAAN,CAAoBD,KAApB,CAA2B,aAA3B,CAAJ,EATnB,CAUI,iBAAiB,CAAE,IAVvB,CAWI,gBAAgB,CAAE,IAXtB,CAYI,OAAO,CAAEN,KAAK,CAACK,mBAAN,CAA0B,WAA1B,IACLL,KAAK,CAACK,mBAAN,CAA0B,WAA1B,EAAuCC,KAAvC,GAAiDZ,SAAS,CAACoB,QAA3D,EACAd,KAAK,CAACK,mBAAN,CAA0B,WAA1B,EAAuCC,KAAvC,GAAiDZ,SAAS,CAACqB,WAFtD,EAEqE,IAFrE,CAE4E,KAdzF,EA1CR,cA4DI,2BAAK,SAAS,CAAC,4BAAf,eACI,oBAAC,GAAD,CAAK,IAAL,EAAU,OAAO,CAAEf,KAAK,CAACgB,YAAzB,CAAuC,SAAS,CAAC,aAAjD,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE7B,MAAvB,EADJ,cAEI,oBAAC,gBAAD,EAAkB,EAAE,CAAC,SAArB,CAA+B,cAAc,CAAC,KAA9C,EAFJ,CADJ,CA5DJ,CAkEKa,KAAK,CAACK,mBAAN,CAA0BY,gBAA1B,EAA8CjB,KAAK,CAACK,mBAAN,CAA0BY,gBAA1B,CAA2CC,GAA3C,CAA+C,SAACxB,SAAD,CAAYyB,KAAZ,CAAsB,CAChH,mBACI,oBAAC,YAAD,EAAc,SAAS,CAAC,gCAAxB,eACI,oBAAC,UAAD,EAAY,KAAK,CAAE,CAAEC,MAAM,CAAE,OAAV,CAAnB,EACK1B,SADL,CADJ,cAII,oBAAC,GAAD,CAAK,IAAL,EAAU,OAAO,CAAE,yBAAMM,CAAAA,KAAK,CAACqB,eAAN,CAAsBF,KAAtB,CAAN,EAAnB,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAE/B,UAAvB,CAAmC,SAAS,CAAC,MAA7C,EADJ,CAJJ,CADJ,CAUH,CAX8C,CAlEnD,CADJ,CAiFH,CAlFD,CAmFA,cAAeK,CAAAA,UAAU,CAACM,qBAAD,CAAzB","sourcesContent":["import { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react'\r\nimport { Nav } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { condition } from '../Enumeration';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport { ContentPanel, MediaLabel } from '../App.styles';\r\n// import FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\nimport FormSelectSearch from '../form-select-search/form-select-search.component';\r\n\r\nconst ComboFilterProperties = (props) => {\r\n    return (\r\n        <>\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_FILTERCOLUMN\" })}\r\n                isSearchable={true}\r\n                name={\"filtercolumn\"}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.tableColumn}\r\n                value={props.selectedFieldRecord && props.selectedFieldRecord[\"filtercolumn\"] ? props.selectedFieldRecord[\"filtercolumn\"] : \"\"}\r\n                onChange={value => props.onComboChange(value, \"filtercolumn\")}\r\n                closeMenuOnSelect={true}\r\n                alphabeticalSort={true}\r\n            />\r\n            <FormSelectSearch\r\n                formLabel={props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                isSearchable={true}\r\n                name={\"condition\"}\r\n                placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                isMandatory={true}\r\n                isClearable={false}\r\n                options={props.selectedFieldRecord[\"filtercolumn\"] && props.selectedFieldRecord[\"filtercolumn\"].type === 'numeric' ?\r\n                    props.numericConditions : props.stringConditions}\r\n                value={props.selectedFieldRecord && props.selectedFieldRecord[\"condition\"] ? props.selectedFieldRecord[\"condition\"] : \"\"}\r\n                onChange={value => props.onComboChange(value, \"condition\")}\r\n                closeMenuOnSelect={true}\r\n                alphabeticalSort={true}\r\n            />\r\n            {props.selectedFieldRecord[\"filtercolumn\"] && props.selectedFieldRecord[\"filtercolumn\"].type !== 'numeric' ?\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_FILTERVALUE\" })}\r\n                    name={\"staticfiltervalue\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_FILTERVALUE\" })}\r\n                    value={props.selectedFieldRecord[\"staticfiltervalue\"] ? props.selectedFieldRecord[\"staticfiltervalue\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"30\"}\r\n                />\r\n                :\r\n\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_FILTERVALUE\" })}\r\n                    isSearchable={true}\r\n                    name={\"filtervalue\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    isMandatory={true}\r\n                    isClearable={false}\r\n                    options={props.filterData}\r\n                    value={props.selectedFieldRecord && props.selectedFieldRecord[\"filtervalue\"] ? props.selectedFieldRecord[\"filtervalue\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"filtervalue\")}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    isMulti={props.selectedFieldRecord[\"condition\"] && (\r\n                        props.selectedFieldRecord[\"condition\"].value === condition.CONTAINS ||\r\n                        props.selectedFieldRecord[\"condition\"].value === condition.NOTCONTAINS) ? true : false\r\n                    }\r\n                />\r\n            }\r\n            <div className='d-flex justify-content-end'>\r\n                <Nav.Link onClick={props.addCondition} className=\"add-txt-btn\">\r\n                    <FontAwesomeIcon icon={faPlus} />{ }\r\n                    <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                </Nav.Link>\r\n            </div>\r\n            {props.selectedFieldRecord.conditionArrayUI && props.selectedFieldRecord.conditionArrayUI.map((condition, index) => {\r\n                return (\r\n                    <ContentPanel className='d-flex justify-content-between'>\r\n                        <MediaLabel style={{ border: \".5rem\" }}>\r\n                            {condition}\r\n                        </MediaLabel>\r\n                        <Nav.Link onClick={() => props.deleteCondition(index)}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} className=\"pt-1\"></FontAwesomeIcon>\r\n                        </Nav.Link>\r\n                    </ContentPanel>\r\n                );\r\n            })}\r\n        </>\r\n    )\r\n}\r\nexport default injectIntl(ComboFilterProperties);"]},"metadata":{},"sourceType":"module"}