{"ast":null,"code":"import{faCalculator,faSave,faSync}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import React from'react';import{Col,Row,Button,Nav}from'react-bootstrap';import{FormattedMessage}from'react-intl';import{MediaHeader,MediaSubHeader}from'../../components/App.styles';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormInput from'../../components/form-input/form-input.component';var ResultEntryFormulaForm=function ResultEntryFormulaForm(props){//      test(a,b){\n//    }\nreturn/*#__PURE__*/React.createElement(Row,null,props.selectedRecord&&props.selectedRecord.parameterData?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\",style:{color:\"#007bff\"}},props.selectedRecord?props.selectedRecord.formulainput?props.selectedRecord.formulainput:\"\":\"\")),/*#__PURE__*/React.createElement(Col,{md:12},props.selectedRecord.parameterData.sarno?/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\",style:{color:\"#172b4d\"}},props.selectedRecord.parameterData.sarno):\"\",props.selectedRecord.parameterData.stestsynonym?/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\",style:{color:\"#505f79\"}},\" \",props.selectedRecord.parameterData.stestsynonym,\" \",props.selectedRecord.parameterData.sretestrepeatcount):\"\",props.selectedRecord.parameterData.sparametersynonym?/*#__PURE__*/React.createElement(MediaSubHeader,{className:\"labelfont\",style:{color:\"#97a0af\"}},\" \",props.selectedRecord.parameterData.sparametersynonym):\"\")):\"\",props.DynamicFields.map(function(fields,index){// const test = props.selectedRecord.ResultParameter.filter(x => x.ntestparametercode === fields.ndynamicformulafieldcode)\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:\"8\",className:\"mt-4\",key:index},/*#__PURE__*/React.createElement(FormInput,{name:\"dynamicformulafield_\".concat(index),label:fields.sdynamicfieldname,type:\"text\",required:true,isMandatory:true,value:props.selectedRecord.selectedForumulaInput&&props.selectedRecord.selectedForumulaInput.length>0?props.selectedRecord.selectedForumulaInput[index]?props.selectedRecord.selectedForumulaInput[index].svalues:\"\":\"\"//value={test.length > 0 ?\n//     test[0].sresult : \"\" }\n//value={props.selectedRecord[\"formulainput\"] ? props.selectedRecord[\"formulainput\"][`dynamicformulafield_${index}`] : \"\"}\n,placeholder:fields.sdynamicfieldname,onChange:function onChange(event){return props.onFormulaInputChange(event,index,fields);},maxLength:9})),fields.nisaverageneed>1?/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(CustomSwitch,{label:\"Average\",type:\"switch\",name:\"dynamicaveragefield_\".concat(index),onChange:function onChange(event){return props.getAverageResult(event,fields,index,props.selectedRecord.selectedForumulaInput,props.masterData,props.selectedRecord);},defaultValue:props.selectedRecord?props.selectedRecord.selectedForumulaInput?props.selectedRecord.selectedForumulaInput.senableAverage:false:false,isMandatory:false,required:true,checked:props.selectedRecord?props.selectedRecord.selectedForumulaInput?props.selectedRecord.selectedForumulaInput.senableAverage:false:false})):\"\");}));};export default ResultEntryFormulaForm;","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/ResultEntryBySample/ResultEntryFormulaForm.jsx"],"names":["faCalculator","faSave","faSync","FontAwesomeIcon","React","Col","Row","Button","Nav","FormattedMessage","MediaHeader","MediaSubHeader","CustomSwitch","FormInput","ResultEntryFormulaForm","props","selectedRecord","parameterData","color","formulainput","sarno","stestsynonym","sretestrepeatcount","sparametersynonym","DynamicFields","map","fields","index","sdynamicfieldname","selectedForumulaInput","length","svalues","event","onFormulaInputChange","nisaverageneed","getAverageResult","masterData","senableAverage"],"mappings":"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","sourcesContent":["import { faCalculator, faSave, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Col, Row, Button, Nav } from 'react-bootstrap';\r\nimport { FormattedMessage } from 'react-intl';\r\n\r\nimport { MediaHeader, MediaSubHeader } from '../../components/App.styles';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nconst ResultEntryFormulaForm = (props) => {\r\n\r\n    //      test(a,b){\r\n\r\n    //    }\r\n\r\n    return (\r\n        <Row>\r\n            {props.selectedRecord && props.selectedRecord.parameterData ?\r\n                <>\r\n                    <Col md={12}>\r\n                        <MediaHeader className={`labelfont`} style={{ color: \"#007bff\" }}>\r\n                            {props.selectedRecord ? props.selectedRecord.formulainput ? props.selectedRecord.formulainput :\"\" :\"\"}\r\n                        </MediaHeader>\r\n\r\n                    </Col>\r\n\r\n                    <Col md={12}>\r\n                        {props.selectedRecord.parameterData.sarno ?\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#172b4d\" }}>\r\n                                {props.selectedRecord.parameterData.sarno}\r\n                            </MediaHeader>\r\n                            : \"\"}\r\n                        {props.selectedRecord.parameterData.stestsynonym ?\r\n                            <MediaHeader className={`labelfont`} style={{ color: \"#505f79\" }}>\r\n                                { }{ } {props.selectedRecord.parameterData.stestsynonym} {props.selectedRecord.parameterData.sretestrepeatcount}\r\n                            </MediaHeader>\r\n                            : \"\"}\r\n                        {props.selectedRecord.parameterData.sparametersynonym ?\r\n                            <MediaSubHeader className={`labelfont`} style={{ color: \"#97a0af\" }}>\r\n                                { }{ } {props.selectedRecord.parameterData.sparametersynonym}{ }{ }\r\n                            </MediaSubHeader>\r\n                            : \"\"}\r\n                    </Col>\r\n\r\n                </>\r\n                : \"\"}\r\n            {props.DynamicFields.map((fields, index) => {\r\n               // const test = props.selectedRecord.ResultParameter.filter(x => x.ntestparametercode === fields.ndynamicformulafieldcode)\r\n\r\n                return (\r\n                    <>\r\n                        <Col md=\"8\" className=\"mt-4\" key={index}>\r\n                            <FormInput\r\n                                name={`dynamicformulafield_${index}`}\r\n                                label={fields.sdynamicfieldname}\r\n                                type=\"text\"\r\n                                required={true}\r\n                                isMandatory={true}\r\n                                value={props.selectedRecord.selectedForumulaInput && props.selectedRecord.selectedForumulaInput.length > 0 ?\r\n                                    props.selectedRecord.selectedForumulaInput[index] ? props.selectedRecord.selectedForumulaInput[index].svalues : \"\" : \"\"}\r\n                                //value={test.length > 0 ?\r\n                                //     test[0].sresult : \"\" }\r\n                                //value={props.selectedRecord[\"formulainput\"] ? props.selectedRecord[\"formulainput\"][`dynamicformulafield_${index}`] : \"\"}\r\n                                placeholder={fields.sdynamicfieldname}\r\n                                onChange={(event) => props.onFormulaInputChange(event, index, fields)}\r\n                                maxLength={9}\r\n                            />\r\n                        </Col>\r\n                        {\r\n                            fields.nisaverageneed > 1 ?\r\n                                <Col md={2}>\r\n                                    {/* average_button_style d-flex product-category justify-content-end icon-group-wrap */}\r\n                                    {/* <Button className=\"btn-user btn-primary-blue average_button_style\" \r\n                         onClick={() => props.getAverageResult(fields,index,props.selectedRecord.selectedForumulaInput,props.masterData,props.selectedRecord)}\r\n                         >\r\n                            <FormattedMessage id='IDS_AVERAGE' defaultMessage='Average' />\r\n                        </Button> */}\r\n                                    <CustomSwitch\r\n                                        label={\"Average\"}\r\n                                        type=\"switch\"\r\n                                        name={`dynamicaveragefield_${index}`}\r\n                                        onChange={(event) => props.getAverageResult(event, fields, index, props.selectedRecord.selectedForumulaInput, props.masterData, props.selectedRecord)}\r\n                                        defaultValue={props.selectedRecord ? props.selectedRecord.selectedForumulaInput ? props.selectedRecord.selectedForumulaInput.senableAverage : false : false}\r\n                                        isMandatory={false}\r\n                                        required={true}\r\n                                        checked={props.selectedRecord ? props.selectedRecord.selectedForumulaInput ? props.selectedRecord.selectedForumulaInput.senableAverage : false : false}\r\n                                    />\r\n\r\n                                </Col>\r\n                                : \"\"\r\n                        }\r\n                        {/* // </Col> */}\r\n                    </>\r\n\r\n                )\r\n            }\r\n            )\r\n            }\r\n        </Row >\r\n    )\r\n}\r\n\r\n\r\nexport default ResultEntryFormulaForm;"]},"metadata":{},"sourceType":"module"}