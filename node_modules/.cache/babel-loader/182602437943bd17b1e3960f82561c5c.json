{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{injectIntl}from'react-intl';import{AtTableWrap}from'../../components/data-grid/data-grid.styles';import{Grid,GridColumn,GridColumnMenuFilter,GridNoRecords}from'@progress/kendo-react-grid';import{faGripVertical}from'@fortawesome/free-solid-svg-icons';import{Draggable}from'react-drag-and-drop';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import ColumnMenu from'../../components/data-grid/ColumnMenu';var SqlBuilderTableGrid=/*#__PURE__*/function(_Component){_inherits(SqlBuilderTableGrid,_Component);var _super=_createSuper(SqlBuilderTableGrid);function SqlBuilderTableGrid(props){_classCallCheck(this,SqlBuilderTableGrid);return _super.call(this,props);}_createClass(SqlBuilderTableGrid,[{key:\"shouldComponentUpdate\",value:function shouldComponentUpdate(nextProps,nextState){if(this.props.selectedRecord.ssqlqueryname!==nextProps.selectedRecord.ssqlqueryname||this.props.selectedRecord.ssqlquery!==nextProps.selectedRecord.ssqlquery){return false;}else{return true;}}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\"},/*#__PURE__*/React.createElement(Grid,{style:this.props.style,data:this.props.data,onDataStateChange:this.props.onDataStateChange,dataState:this.props.dataState,detail:this.props.detail,expandField:this.props.expandField,onExpandChange:this.props.onExpandChange//pageable={this.props.pageable}\n//data={process(this.props.tableList, this.props.dataStateTable)}\n},/*#__PURE__*/React.createElement(GridNoRecords,null,this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})),/*#__PURE__*/React.createElement(GridColumn,{width:\"48px\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Draggable,{type:\"dragtable\",data:row.dataItem.tableName+\" \\\"\"+row.dataItem.stabledisplayname+\"\\\"\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGripVertical,className:\"dragicon\"})));}}),/*#__PURE__*/React.createElement(GridColumn,Object.assign({width:\"425px\",field:\"stabledisplayname\"},this.columnProps(\"stabledisplayname\"),{title:this.props.intl.formatMessage({id:\"IDS_TABLE_NAME\"})}))));}},{key:\"columnProps\",value:function columnProps(field){if(!this.props.hideColumnFilter){return{field:field,columnMenu:ColumnMenu,headerClassName:this.isColumnActive(field,this.props.onDataStateChange)?'active':''};}}},{key:\"isColumnActive\",value:function isColumnActive(field,dataState){return GridColumnMenuFilter.active(field,dataState.filter);}}]);return SqlBuilderTableGrid;}(Component);export default injectIntl(SqlBuilderTableGrid);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/dashboard/SqlBuilderTableGrid.jsx"],"names":["React","Component","injectIntl","AtTableWrap","Grid","GridColumn","GridColumnMenuFilter","GridNoRecords","faGripVertical","Draggable","FontAwesomeIcon","ColumnMenu","SqlBuilderTableGrid","props","nextProps","nextState","selectedRecord","ssqlqueryname","ssqlquery","style","data","onDataStateChange","dataState","detail","expandField","onExpandChange","intl","formatMessage","id","row","dataItem","tableName","stabledisplayname","columnProps","field","hideColumnFilter","columnMenu","headerClassName","isColumnActive","active","filter"],"mappings":"wtBAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,KAAiC,OAAjC,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA,OAASC,WAAT,KAA4B,6CAA5B,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,oBAA3B,CAAgDC,aAAhD,KAAoE,4BAApE,CACA,OAASC,cAAT,KAA+B,mCAA/B,CACA,OAASC,SAAT,KAA0B,qBAA1B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,UAAP,KAAuB,uCAAvB,C,GAEMC,CAAAA,mB,0HACF,6BAAYC,KAAZ,CAAmB,mEACTA,KADS,EAElB,C,qEACD,+BAAsBC,SAAtB,CAAiCC,SAAjC,CAA4C,CACxC,GAAI,KAAKF,KAAL,CAAWG,cAAX,CAA0BC,aAA1B,GAA0CH,SAAS,CAACE,cAAV,CAAyBC,aAApE,EACF,KAAKJ,KAAL,CAAWG,cAAX,CAA0BE,SAA1B,GAAsCJ,SAAS,CAACE,cAAV,CAAyBE,SADhE,CAC2E,CAC3E,MAAO,MAAP,CACC,CAHD,IAGK,CACD,MAAO,KAAP,CACD,CACF,C,sBACL,iBAAS,CACL,mBAEM,oBAAC,WAAD,EAAa,SAAS,CAAC,eAAvB,eACkB,oBAAC,IAAD,EACI,KAAK,CAAE,KAAKL,KAAL,CAAWM,KADtB,CAEI,IAAI,CAAE,KAAKN,KAAL,CAAWO,IAFrB,CAGI,iBAAiB,CAAE,KAAKP,KAAL,CAAWQ,iBAHlC,CAII,SAAS,CAAE,KAAKR,KAAL,CAAWS,SAJ1B,CAKI,MAAM,CAAE,KAAKT,KAAL,CAAWU,MALvB,CAMI,WAAW,CAAE,KAAKV,KAAL,CAAWW,WAN5B,CAOI,cAAc,CAAE,KAAKX,KAAL,CAAWY,cAC3B;AACJ;AATA,eAYM,oBAAC,aAAD,MACD,KAAKZ,KAAL,CAAWa,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,wBAAN,CAA9B,CADC,CAZN,cAeI,oBAAC,UAAD,EACI,KAAK,CAAC,MADV,CAEI,IAAI,CAAE,cAACC,GAAD,qBACF,2CACI,oBAAC,SAAD,EAAW,IAAI,CAAC,WAAhB,CAA4B,IAAI,CAAEA,GAAG,CAACC,QAAJ,CAAaC,SAAb,CAAyB,KAAzB,CAAiCF,GAAG,CAACC,QAAJ,CAAaE,iBAA9C,CAAkE,IAApG,eACI,oBAAC,eAAD,EAAiB,IAAI,CAAExB,cAAvB,CAAuC,SAAS,CAAC,UAAjD,EADJ,CADJ,CADE,EAFV,EAfJ,cA0BI,oBAAC,UAAD,gBACI,KAAK,CAAE,OADX,CAEI,KAAK,CAAC,mBAFV,EAGQ,KAAKyB,WAAL,CAAiB,mBAAjB,CAHR,EAII,KAAK,CAAE,KAAKpB,KAAL,CAAWa,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,gBAAN,CAA9B,CAJX,GA1BJ,CADlB,CAFN,CAwCH,C,2BACD,qBAAYM,KAAZ,CAAmB,CACf,GAAI,CAAC,KAAKrB,KAAL,CAAWsB,gBAAhB,CAAkC,CAC9B,MAAO,CACHD,KAAK,CAAEA,KADJ,CAEHE,UAAU,CAAEzB,UAFT,CAGH0B,eAAe,CAAE,KAAKC,cAAL,CAAoBJ,KAApB,CAA2B,KAAKrB,KAAL,CAAWQ,iBAAtC,EAA2D,QAA3D,CAAsE,EAHpF,CAAP,CAKH,CACJ,C,8BAED,wBAAea,KAAf,CAAsBZ,SAAtB,CAAiC,CAC7B,MAAOhB,CAAAA,oBAAoB,CAACiC,MAArB,CAA4BL,KAA5B,CAAmCZ,SAAS,CAACkB,MAA7C,CAAP,CACH,C,iCAlE6BvC,S,EAoElC,cAAgBC,CAAAA,UAAU,CAACU,mBAAD,CAA1B","sourcesContent":["import React, { Component } from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { AtTableWrap } from '../../components/data-grid/data-grid.styles';\r\nimport { Grid, GridColumn, GridColumnMenuFilter,GridNoRecords} from '@progress/kendo-react-grid';\r\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons';\r\nimport { Draggable } from 'react-drag-and-drop';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ColumnMenu from '../../components/data-grid/ColumnMenu';\r\n\r\nclass SqlBuilderTableGrid extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    shouldComponentUpdate(nextProps, nextState) {\r\n        if((this.props.selectedRecord.ssqlqueryname!==nextProps.selectedRecord.ssqlqueryname) ||\r\n        (this.props.selectedRecord.ssqlquery!==nextProps.selectedRecord.ssqlquery)){\r\n        return false\r\n        }else{\r\n            return true;\r\n          }\r\n        }\r\n    render() {\r\n        return (\r\n           \r\n              <AtTableWrap className=\"at-list-table\">\r\n                                <Grid\r\n                                    style={this.props.style}\r\n                                    data={this.props.data}\r\n                                    onDataStateChange={this.props.onDataStateChange}\r\n                                    dataState={this.props.dataState}\r\n                                    detail={this.props.detail}\r\n                                    expandField={this.props.expandField}\r\n                                    onExpandChange={this.props.onExpandChange}\r\n                                    //pageable={this.props.pageable}\r\n                                //data={process(this.props.tableList, this.props.dataStateTable)}\r\n\r\n                                >\r\n                                      <GridNoRecords>\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                                </GridNoRecords>\r\n                                    <GridColumn\r\n                                        width=\"48px\"\r\n                                        cell={(row) => (\r\n                                            <td >\r\n                                                <Draggable type=\"dragtable\" data={row.dataItem.tableName + \" \\\"\" + row.dataItem.stabledisplayname + \"\\\"\"}>\r\n                                                    <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\"></FontAwesomeIcon>\r\n                                                </Draggable>\r\n                                            </td>\r\n                                        )}\r\n                                    />\r\n\r\n                                    <GridColumn\r\n                                        width={\"425px\"}\r\n                                        field=\"stabledisplayname\"\r\n                                        {...this.columnProps(\"stabledisplayname\")}\r\n                                        title={this.props.intl.formatMessage({ id: \"IDS_TABLE_NAME\" })}\r\n                                    />\r\n                                </Grid>\r\n                            </AtTableWrap>\r\n    \r\n        );\r\n\r\n    } \r\n    columnProps(field) {\r\n        if (!this.props.hideColumnFilter) {\r\n            return {\r\n                field: field,\r\n                columnMenu: ColumnMenu,\r\n                headerClassName: this.isColumnActive(field, this.props.onDataStateChange) ? 'active' : ''\r\n            };\r\n        }\r\n    }\r\n\r\n    isColumnActive(field, dataState) {\r\n        return GridColumnMenuFilter.active(field, dataState.filter)\r\n    }\r\n}\r\nexport default (injectIntl(SqlBuilderTableGrid));\r\n"]},"metadata":{},"sourceType":"module"}