{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{FormattedMessage,injectIntl}from'react-intl';import{Button,Nav,Image}from'react-bootstrap';import{Grid,GridColumn as Column,GridToolbar,GridColumnMenuFilter,GridNoRecords,getSelectedState}from'@progress/kendo-react-grid';import{GridPDFExport}from'@progress/kendo-react-pdf';import{ExcelExport}from'@progress/kendo-react-excel-export';import ConfirmDialog from'../confirm-alert/confirm-alert.component';import SimpleGrid from'./SimpleGrid';import{Row,Col,Card,FormGroup,FormLabel}from'react-bootstrap';import{AtTableWrap,FormControlStatic,FontIconWrap}from'../data-grid/data-grid.styles';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCheck,faTrashAlt,faPencilAlt,faThumbsUp,faCopy,faPlus,faSync,faFileExcel,faFilePdf,faCloudDownloadAlt,faRedo,faEye,faRocket}from'@fortawesome/free-solid-svg-icons';import ColumnMenu from'./ColumnMenu';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport reject from\"../../assets/image/reject.svg\";import CustomSwitch from'../custom-switch/custom-switch.component';// import '../../assets/styles/unicode-font.css';\nimport parse from'html-react-parser';import{toast}from'react-toastify';import FormCheckbox from'../form-checkbox/form-checkbox.component';import messages_en from'../../assets/translations/en.json';import messages_de from'../../assets/translations/de.json';import{loadMessages,LocalizationProvider}from'@progress/kendo-react-intl';import{connect}from'react-redux';import{process}from'@progress/kendo-data-query';import ReactTooltip from'react-tooltip';import{getActionIcon}from'../HoverIcons';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import messages_ru from'../../assets/translations/ru.json';import messages_tg from'../../assets/translations/tg.json';import SimpleGridWithSelection from'./SimpleGridWithSelection';var messages={'en-US':messages_en,'ko-KR':messages_de,'ru-RU':messages_ru,'tg-TG':messages_tg};var SingleSelectionDataGrid=/*#__PURE__*/function(_React$Component){_inherits(SingleSelectionDataGrid,_React$Component);var _super=_createSuper(SingleSelectionDataGrid);function SingleSelectionDataGrid(props){var _this;_classCallCheck(this,SingleSelectionDataGrid);_this=_super.call(this,props);_this.confirmMessage=new ConfirmMessage();return _this;}// columnProps(field) {\n//     if (!this.props.hideColumnFilter) {\n//         return {\n//             field: field,\n//             columnMenu: ColumnMenu,\n//             headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\n//         };\n//     }\n// }\n// isColumnActive(field, dataState) {\n//     return GridColumnMenuFilter.active(field, dataState.filter)\n// }\n_createClass(SingleSelectionDataGrid,[{key:\"render\",value:function render(){var _this2=this;var methodUrl=this.props.methodUrl?this.props.methodUrl:this.props.inputParam&&this.props.inputParam.methodUrl;var pageSizes=this.props.pageSizes?this.props.pageSizes:this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",id:\"tooltip-grid-wrap\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\",actionColWidth:this.props.actionColWidth?this.props.actionColWidth:\"150px\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:\"lang\"},/*#__PURE__*/React.createElement(Grid,Object.assign({data:process(this.props.subChildList,{skip:0,take:this.props.subChildList.length}),style:{height:this.props.gridHeight,width:this.props.gridWidth},sortable:true,resizable:true,reorderable:false,scrollable:this.props.scrollable,pageable:this.props.pageable?{buttonCount:5,pageSizes:pageSizes,previousNext:false}:\"\",groupable:this.props.groupable?true:false,detail:this.props.hideDetailBand?false:this.detailBand//   expandField={this.props.expandField ? this.props.expandField : false}\n//   onExpandChange={this.expandChange}\n//    data={this.props.subChildDataResult}\n,total:this.props.total},this.props.dataState,{selectedField:\"selected\",onRowClick:this.props.handleRowClick,onSelectionChange:this.props.subChildSelectionChange,onHeaderSelectionChange:this.props.subChildHeaderSelectionChange,onDataStateChange:this.props.dataStateChange,selectable:{enabled:true,drag:false,cell:false,mode:'multiple'}}),/*#__PURE__*/React.createElement(GridNoRecords,null,this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})),/*#__PURE__*/React.createElement(Column,{field:\"selected\",width:\"50px\",title:this.props.title//     headerCell={this.props.subChildHeaderSelectionChange}\n//    headerSelectionValue={this.props.selectedsubcild!==undefined?this.props.abc===this.props.selectedsubcild?this.props.subChildSelectAll:false:false}\n,headerSelectionValue:Object.values(this.props.subChildList).every(function(dd){return dd.selected===true;})?true:false}),this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(Column,{key:index,title:_this2.props.intl.formatMessage({id:item.idsName})//     {...this.columnProps(item.dataField)}\n,width:item.width,cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]},item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}});})))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){ReactTooltip.rebuild();}}]);return SingleSelectionDataGrid;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,undefined)(injectIntl(SingleSelectionDataGrid));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/data-grid/SingleSelectionDataGrid.jsx"],"names":["React","FormattedMessage","injectIntl","Button","Nav","Image","Grid","GridColumn","Column","GridToolbar","GridColumnMenuFilter","GridNoRecords","getSelectedState","GridPDFExport","ExcelExport","ConfirmDialog","SimpleGrid","Row","Col","Card","FormGroup","FormLabel","AtTableWrap","FormControlStatic","FontIconWrap","FontAwesomeIcon","faCheck","faTrashAlt","faPencilAlt","faThumbsUp","faCopy","faPlus","faSync","faFileExcel","faFilePdf","faCloudDownloadAlt","faRedo","faEye","faRocket","ColumnMenu","CustomSwitch","parse","toast","FormCheckbox","messages_en","messages_de","loadMessages","LocalizationProvider","connect","process","ReactTooltip","getActionIcon","ConfirmMessage","messages_ru","messages_tg","SimpleGridWithSelection","messages","SingleSelectionDataGrid","props","confirmMessage","methodUrl","inputParam","pageSizes","Login","settings","split","map","setting","parseInt","actionColWidth","subChildList","skip","take","length","height","gridHeight","width","gridWidth","scrollable","pageable","buttonCount","previousNext","groupable","hideDetailBand","detailBand","total","dataState","handleRowClick","subChildSelectionChange","subChildHeaderSelectionChange","dataStateChange","enabled","drag","cell","mode","intl","formatMessage","id","title","Object","values","every","dd","selected","extractedColumnList","item","index","idsName","row","dataField","isIdsField","rebuild","Component","mapStateToProps","state","undefined"],"mappings":"wnBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,gBAAT,CAA2BC,UAA3B,KAA6C,YAA7C,CACA,OAASC,MAAT,CAAiBC,GAAjB,CAAsBC,KAAtB,KAAmC,iBAAnC,CACA,OAASC,IAAT,CAAeC,UAAU,GAAIC,CAAAA,MAA7B,CAAqCC,WAArC,CAAkDC,oBAAlD,CAAwEC,aAAxE,CAAuFC,gBAAvF,KAA8G,4BAA9G,CACA,OAASC,aAAT,KAA8B,2BAA9B,CACA,OAASC,WAAT,KAA4B,oCAA5B,CACA,MAAOC,CAAAA,aAAP,KAA0B,0CAA1B,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,IAAnB,CAAyBC,SAAzB,CAAoCC,SAApC,KAAqD,iBAArD,CACA,OAASC,WAAT,CAAsBC,iBAAtB,CAAyCC,YAAzC,KAA6D,+BAA7D,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OACIC,OADJ,CACaC,UADb,CACyBC,WADzB,CACsCC,UADtC,CAEIC,MAFJ,CAEYC,MAFZ,CAEoBC,MAFpB,CAE4BC,WAF5B,CAEyCC,SAFzC,CAEoDC,kBAFpD,CAEwEC,MAFxE,CAEgFC,KAFhF,CAEuFC,QAFvF,KAGO,mCAHP,CAIA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA;kDAEA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CAAoE;AACpE,MAAOC,CAAAA,KAAP,KAAkB,mBAAlB,CACA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,0CAAzB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,OAASC,YAAT,CAAuBC,oBAAvB,KAAmD,4BAAnD,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,OAAT,KAAwB,4BAAxB,CACA,MAAOC,CAAAA,YAAP,KAAyB,eAAzB,CACA,OAASC,aAAT,KAA8B,eAA9B,CACA,MAAOC,CAAAA,cAAP,KAA2B,0DAA3B,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,MAAOC,CAAAA,WAAP,KAAwB,mCAAxB,CACA,MAAOC,CAAAA,uBAAP,KAAoC,2BAApC,CAEA,GAAMC,CAAAA,QAAQ,CAAG,CACb,QAASZ,WADI,CAEb,QAASC,WAFI,CAGb,QAASQ,WAHI,CAIb,QAASC,WAJI,CAAjB,C,GAOMG,CAAAA,uB,8IAIF,iCAAYC,KAAZ,CAAkB,yDACd,uBAAMA,KAAN,EACA,MAAKC,cAAL,CAAsB,GAAIP,CAAAA,cAAJ,EAAtB,CAFc,aAGjB,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;0DAGA,iBAAS,iBACL,GAAMQ,CAAAA,SAAS,CAAG,KAAKF,KAAL,CAAWE,SAAX,CAAuB,KAAKF,KAAL,CAAWE,SAAlC,CAA+C,KAAKF,KAAL,CAAWG,UAAX,EAAyB,KAAKH,KAAL,CAAWG,UAAX,CAAsBD,SAAhH,CAGA,GAAME,CAAAA,SAAS,CAAG,KAAKJ,KAAL,CAAWI,SAAX,CAAuB,KAAKJ,KAAL,CAAWI,SAAlC,CAA8C,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,QAAjB,EAA6B,KAAKN,KAAL,CAAWK,KAAX,CAAiBC,QAAjB,CAA0B,EAA1B,EAA8BC,KAA9B,CAAoC,GAApC,EAAyCC,GAAzC,CAA6C,SAAAC,OAAO,QAAIC,CAAAA,QAAQ,CAACD,OAAD,CAAZ,EAApD,CAA7F,CACA,mBACI,qDACI,oBAAC,YAAD,EAAc,KAAK,CAAC,QAApB,CAA6B,EAAE,CAAC,mBAAhC,CAAoD,cAAc,CAAC,OAAnE,EADJ,cAEI,oBAAC,WAAD,EAAa,SAAS,CAAC,eAAvB,CAAuC,cAAc,CAAE,KAAKT,KAAL,CAAWW,cAAX,CAA4B,KAAKX,KAAL,CAAWW,cAAvC,CAAwD,OAA/G,eACI,oBAAC,oBAAD,EAAsB,QAAQ,CAAC,MAA/B,eAEQ,oBAAC,IAAD,gBACR,IAAI,CAAEpB,OAAO,CAAC,KAAKS,KAAL,CAAWY,YAAZ,CAA0B,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,KAAKd,KAAL,CAAWY,YAAX,CAAwBG,MAAzC,CAA1B,CADL,CAER,KAAK,CAAE,CAAEC,MAAM,CAAE,KAAKhB,KAAL,CAAWiB,UAArB,CAAiCC,KAAK,CAAE,KAAKlB,KAAL,CAAWmB,SAAnD,CAFC,CAGI,QAAQ,KAHZ,CAII,SAAS,KAJb,CAKI,WAAW,CAAE,KALjB,CAMI,UAAU,CAAE,KAAKnB,KAAL,CAAWoB,UAN3B,CAOI,QAAQ,CAAE,KAAKpB,KAAL,CAAWqB,QAAX,CAAsB,CAAEC,WAAW,CAAE,CAAf,CAAkBlB,SAAS,CAAEA,SAA7B,CAAwCmB,YAAY,CAAE,KAAtD,CAAtB,CAAsF,EAPpG,CAQI,SAAS,CAAE,KAAKvB,KAAL,CAAWwB,SAAX,CAAuB,IAAvB,CAA8B,KAR7C,CASI,MAAM,CAAE,KAAKxB,KAAL,CAAWyB,cAAX,CAA4B,KAA5B,CAAoC,KAAKC,UACpD;AACA;AACD;AAZA,CAaI,KAAK,CAAE,KAAK1B,KAAL,CAAW2B,KAbtB,EAcQ,KAAK3B,KAAL,CAAW4B,SAdnB,EAeI,aAAa,CAAC,UAflB,CAgBI,UAAU,CAAE,KAAK5B,KAAL,CAAW6B,cAhB3B,CAiBI,iBAAiB,CAAE,KAAK7B,KAAL,CAAW8B,uBAjBlC,CAkBI,uBAAuB,CAAE,KAAK9B,KAAL,CAAW+B,6BAlBxC,CAmBA,iBAAiB,CAAE,KAAK/B,KAAL,CAAWgC,eAnB9B,CAoBA,UAAU,CAAE,CACRC,OAAO,CAAE,IADD,CAERC,IAAI,CAAE,KAFE,CAGRC,IAAI,CAAE,KAHE,CAIRC,IAAI,CAAE,UAJE,CApBZ,gBA2BI,oBAAC,aAAD,MACC,KAAKpC,KAAL,CAAWqC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAE,wBAAN,CAA9B,CADD,CA3BJ,cAgCI,oBAAC,MAAD,EACJ,KAAK,CAAC,UADF,CAEJ,KAAK,CAAC,MAFF,CAGA,KAAK,CAAE,KAAKvC,KAAL,CAAWwC,KACvB;AACJ;AALS,CAMA,oBAAoB,CAChBC,MAAM,CAACC,MAAP,CAAc,KAAK1C,KAAL,CAAWY,YAAzB,EAAuC+B,KAAvC,CAA6C,SAACC,EAAD,CAAQ,CACjD,MAAOA,CAAAA,EAAE,CAACC,QAAH,GAAc,IAArB,CACH,CAFD,EAEI,IAFJ,CAES,KATb,EAhCJ,CAgDK,KAAK7C,KAAL,CAAW8C,mBAAX,CAA+BtC,GAA/B,CAAmC,SAACuC,IAAD,CAAOC,KAAP,qBAChC,oBAAC,MAAD,EAAQ,GAAG,CAAEA,KAAb,CACA,KAAK,CAAE,MAAI,CAAChD,KAAL,CAAWqC,IAAX,CAAgBC,aAAhB,CAA8B,CAAEC,EAAE,CAAEQ,IAAI,CAACE,OAAX,CAA9B,CACZ;AAFK,CAGJ,KAAK,CAAEF,IAAI,CAAC7B,KAHR,CAIJ,IAAI,CAAE,cAACgC,GAAD,qBACF,0BAAI,WAAUA,GAAG,CAAC,UAAD,CAAH,CAAgBH,IAAI,CAACI,SAArB,CAAd,EACKJ,IAAI,CAACK,UAAL,cACG,oBAAC,gBAAD,EAAkB,EAAE,CAAEF,GAAG,CAAC,UAAD,CAAH,CAAgBH,IAAI,CAACI,SAArB,CAAtB,CAAuD,cAAc,CAAED,GAAG,CAAC,UAAD,CAAH,CAAgBH,IAAI,CAACI,SAArB,CAAvE,EADH,CAEKD,GAAG,CAAC,UAAD,CAAH,CAAgBH,IAAI,CAACI,SAArB,CAHV,CADE,EAJF,EADgC,EAAnC,CAhDL,CAFR,CADJ,CAFJ,CADJ,CA2EH,C,kCAED,6BAAqB,CACjB3D,YAAY,CAAC6D,OAAb,GACH,C,qCA5GiC/G,KAAK,CAACgH,S,EA8G5C,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC7B,MAAQ,CAAEnD,KAAK,CAAEmD,KAAK,CAACnD,KAAf,CAAR,CACH,CAFD,CAMA,cAAef,CAAAA,OAAO,CAACiE,eAAD,CAAkBE,SAAlB,CAAP,CAAoCjH,UAAU,CAACuD,uBAAD,CAA9C,CAAf","sourcesContent":["import React from 'react';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Button, Nav, Image } from 'react-bootstrap';\r\nimport { Grid, GridColumn as Column, GridToolbar, GridColumnMenuFilter, GridNoRecords ,getSelectedState} from '@progress/kendo-react-grid';\r\nimport { GridPDFExport } from '@progress/kendo-react-pdf';\r\nimport { ExcelExport } from '@progress/kendo-react-excel-export';\r\nimport ConfirmDialog from '../confirm-alert/confirm-alert.component';\r\nimport SimpleGrid from './SimpleGrid';\r\nimport { Row, Col, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { AtTableWrap, FormControlStatic, FontIconWrap } from '../data-grid/data-grid.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {\r\n    faCheck, faTrashAlt, faPencilAlt, faThumbsUp,\r\n    faCopy, faPlus, faSync, faFileExcel, faFilePdf, faCloudDownloadAlt, faRedo, faEye, faRocket\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport ColumnMenu from './ColumnMenu';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport reject from '../../assets/image/reject.svg'\r\nimport CustomSwitch from '../custom-switch/custom-switch.component';// import '../../assets/styles/unicode-font.css';\r\nimport parse from 'html-react-parser';\r\nimport { toast } from 'react-toastify';\r\nimport FormCheckbox from '../form-checkbox/form-checkbox.component';\r\nimport messages_en from '../../assets/translations/en.json';\r\nimport messages_de from '../../assets/translations/de.json';\r\nimport { loadMessages, LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport { connect } from 'react-redux';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { getActionIcon } from '../HoverIcons';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport messages_ru from '../../assets/translations/ru.json';\r\nimport messages_tg from '../../assets/translations/tg.json';\r\nimport SimpleGridWithSelection from './SimpleGridWithSelection';\r\n\r\nconst messages = {\r\n    'en-US': messages_en,\r\n    'ko-KR': messages_de,\r\n    'ru-RU': messages_ru,\r\n    'tg-TG': messages_tg\r\n}\r\n\r\nclass SingleSelectionDataGrid extends React.Component {\r\n\r\n    _pdfExport;\r\n    _excelExport;\r\n    constructor(props){\r\n        super(props);\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n\r\n    // columnProps(field) {\r\n    //     if (!this.props.hideColumnFilter) {\r\n    //         return {\r\n    //             field: field,\r\n    //             columnMenu: ColumnMenu,\r\n    //             headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\r\n    //         };\r\n    //     }\r\n    // }\r\n\r\n    // isColumnActive(field, dataState) {\r\n    //     return GridColumnMenuFilter.active(field, dataState.filter)\r\n    // }\r\n\r\n\r\n    render() {\r\n        const methodUrl = this.props.methodUrl ? this.props.methodUrl : (this.props.inputParam && this.props.inputParam.methodUrl);\r\n\r\n        \r\n        const pageSizes = this.props.pageSizes ? this.props.pageSizes : this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting))\r\n        return (\r\n            <>\r\n                <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' />\r\n                <AtTableWrap className=\"at-list-table\" actionColWidth={this.props.actionColWidth ? this.props.actionColWidth : \"150px\"} >\r\n                    <LocalizationProvider language=\"lang\">\r\n\r\n                            <Grid\r\n                    data={process(this.props.subChildList, { skip: 0, take: this.props.subChildList.length })}\r\n                    style={{ height: this.props.gridHeight, width: this.props.gridWidth }}\r\n                                sortable\r\n                                resizable\r\n                                reorderable={false}\r\n                                scrollable={this.props.scrollable}\r\n                                pageable={this.props.pageable ? { buttonCount: 5, pageSizes: pageSizes, previousNext: false } : \"\"}\r\n                                groupable={this.props.groupable ? true : false}\r\n                                detail={this.props.hideDetailBand ? false : this.detailBand}\r\n                             //   expandField={this.props.expandField ? this.props.expandField : false}\r\n                             //   onExpandChange={this.expandChange}\r\n                            //    data={this.props.subChildDataResult}\r\n                                total={this.props.total}\r\n                                {...this.props.dataState}\r\n                                selectedField=\"selected\"\r\n                                onRowClick={this.props.handleRowClick}\r\n                                onSelectionChange={this.props.subChildSelectionChange}\r\n                                onHeaderSelectionChange={this.props.subChildHeaderSelectionChange}\r\n                            onDataStateChange={this.props.dataStateChange}\r\n                            selectable={{\r\n                                enabled: true,\r\n                                drag: false,\r\n                                cell: false,\r\n                                mode: 'multiple'\r\n                              }} \r\n                        >\r\n                                <GridNoRecords>\r\n                                {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                            </GridNoRecords>\r\n                            \r\n                                \r\n                                <Column\r\n                            field=\"selected\"\r\n                            width=\"50px\"\r\n                                title={this.props.title}\r\n                           //     headerCell={this.props.subChildHeaderSelectionChange}\r\n                       //    headerSelectionValue={this.props.selectedsubcild!==undefined?this.props.abc===this.props.selectedsubcild?this.props.subChildSelectAll:false:false}\r\n                                headerSelectionValue={\r\n                                    Object.values(this.props.subChildList).every((dd) => {\r\n                                        return dd.selected===true\r\n                                    }) ?true:false\r\n\r\n                       }\r\n\r\n                                             \r\n                        />\r\n\r\n                                {this.props.extractedColumnList.map((item, index) =>\r\n                                    <Column key={index}\r\n                                    title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                               //     {...this.columnProps(item.dataField)}\r\n                                width={item.width}\r\n                                cell={(row) => (\r\n                                    <td data-tip={row[\"dataItem\"][item.dataField]}>\r\n                                        {item.isIdsField ?\r\n                                            <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                            : row[\"dataItem\"][item.dataField]}\r\n                                    </td>\r\n                                )} />\r\n                        )}\r\n\r\n                            \r\n                            </Grid>\r\n                    </LocalizationProvider >\r\n                    \r\n                </AtTableWrap >\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        ReactTooltip.rebuild();\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, undefined)(injectIntl(SingleSelectionDataGrid));"]},"metadata":{},"sourceType":"module"}