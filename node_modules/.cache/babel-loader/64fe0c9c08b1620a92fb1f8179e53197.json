{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\Material\\\\Material.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport { Row, Col, Nav, Card, FormGroup, FormLabel } from 'react-bootstrap';\nimport { process } from '@progress/kendo-data-query';\nimport { toast } from 'react-toastify';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { constructjsonOptionList, convertDateTimetoString, convertDateTimetoStringDBformat, rearrangeDateFormatDateOnly, formatInputDate, convertDateTimetoStringDBFormat, sortData } from '../../components/CommonScript';\nimport ListMaster from '../../components/list-master/list-master.component';\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\nimport { showEsign, getControlMap, constructOptionList, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormat } from '../../components/CommonScript';\nimport { callService, updateStore, crudMaster, filterColumnData, validateEsignCredential, viewAttachment, initialcombochangeget, addSafetyInstructions, getAddMaterialPopup, getMaterialDetails, addMaterialProperty, getMaterialReload, getMaterialEdit, getMaterialByTypeCode, getAddMaterialSectionPopup, getMaterialSectionEdit, addMaterialFile } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\nimport { ContentPanel, ReadOnlyText, MediaLabel } from '../../components/App.styles';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReactTooltip from 'react-tooltip';\nimport MaterialFilter from './MaterialFilter';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\nimport MaterialSectionTab from './MaterialSectionTab';\nimport AddMaterialSection from './AddMaterialSection';\nimport { Affix } from 'rsuite';\nimport MaterialMsdsAttachmentTab from './MaterialMsdsAttachmentTab';\nimport AddMaterialFile from './AddMaterialFile';\nimport { ReactComponent as Safety } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/safety.svg\";\nimport { ReactComponent as Property } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/managed-hosting.svg\";\nimport { ProductList } from '../product/product.styled';\nimport PortalModal from '../../PortalModal';\nimport ModalShow from '../../components/ModalShow';\nimport SampleInfoView from '../approval/SampleInfoView';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Material extends Component {\n  constructor(props) {\n    super(props);\n\n    this.paneSizeChange = d => {\n      this.setState({\n        splitChangeWidthPercentage: d\n      });\n    };\n\n    this.dynamicmandatoryFeilds = () => {\n      let mandatoryFeildsMaterial = [];\n      this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate[0].jsondata.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.mandatory) {\n              if (component.inputtype === 'combo') {\n                mandatoryFeildsMaterial.push({\n                  \"idsName\": component.label,\n                  \"dataField\": component.label,\n                  \"mandatoryLabel\": \"IDS_SELECT\",\n                  \"controlType\": \"selectbox\"\n                });\n              } else {\n                mandatoryFeildsMaterial.push({\n                  \"idsName\": component.label,\n                  \"dataField\": component.label,\n                  \"mandatoryLabel\": \"IDS_ENTER\",\n                  \"controlType\": \"selectbox\"\n                });\n              }\n            }\n\n            component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n              if (componentrow.mandatory) {\n                if (componentrow.inputtype === 'combo') {\n                  mandatoryFeildsMaterial.push({\n                    \"idsName\": componentrow.label,\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": \"IDS_SELECT\",\n                    \"controlType\": \"selectbox\"\n                  });\n                } else {\n                  mandatoryFeildsMaterial.push({\n                    \"idsName\": componentrow.label,\n                    \"dataField\": componentrow.label,\n                    \"mandatoryLabel\": \"IDS_ENTER\",\n                    \"controlType\": \"selectbox\"\n                  });\n                }\n              }\n            });\n          });\n        });\n      });\n\n      if (this.props.Login.selectedRecord['Expiry Validations']) {\n        if (this.props.Login.selectedRecord['Expiry Validations'] === 'Expiry policy') {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Expiry Policy Days\",\n            \"dataField\": \"Expiry Policy Days\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"selectbox\"\n          });\n        }\n      } // if (this.props.Login.masterData.ismaterialSectionneed === transactionStatus.YES) {\n\n\n      if (this.props.Login.selectedRecord['Material Category'] !== undefined) {\n        if ((this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise) === transactionStatus.YES) {\n          mandatoryFeildsMaterial.push({\n            \"idsName\": \"Section\",\n            \"dataField\": \"Section\",\n            \"mandatoryLabel\": \"IDS_SELECT\",\n            \"controlType\": \"selectbox\"\n          }, {\n            \"idsName\": \"Reorder Level\",\n            \"dataField\": \"Reorder Level\",\n            \"mandatoryLabel\": \"IDS_ENTER\",\n            \"controlType\": \"selectbox\"\n          });\n        } else {\n          mandatoryFeildsMaterial.map((temp, i) => {\n            if (temp.idsName === 'Section' || temp.idsName === 'Reorder Level') {\n              delete mandatoryFeildsMaterial[i];\n            }\n          });\n        }\n      }\n\n      return mandatoryFeildsMaterial;\n    };\n\n    this.accordianDesign = () => {\n      let selectedmasterlistmain = [];\n      this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata !== undefined && selectedmasterlistmain.push(this.props.Login.masterData.SelectedMaterial.jsondata);\n      let designaccordian = [];\n      this.props.Login.masterData.selectedTemplate[0].jsondata.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.inputtype === 'combo') {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 555,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 556,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label]['label'] : \"-\"))));\n              }\n            } else if (component.inputtype === 'toggle') {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 568,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 569,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 570,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 571,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] && selectedmasterlistmain[0][component.label] === transactionStatus.YES ? 'Yes' : 'No'))));\n              }\n            } else {\n              if (component.label !== undefined) {\n                designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                  md: \"4\",\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 584,\n                    columnNumber: 50\n                  }\n                }, /*#__PURE__*/React.createElement(FormGroup, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 585,\n                    columnNumber: 33\n                  }\n                }, /*#__PURE__*/React.createElement(FormLabel, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 37\n                  }\n                }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                  id: [component.label],\n                  message: [component.label],\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 586,\n                    columnNumber: 48\n                  }\n                })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                  __self: this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 587,\n                    columnNumber: 37\n                  }\n                }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label] : \"-\"))));\n              }\n            }\n\n            component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n              if (componentrow.inputtype === 'combo') {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 599,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 600,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 601,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 602,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] ? selectedmasterlistmain[0][componentrow.label]['label'] : \"-\"))));\n                }\n              } else if (componentrow.inputtype === 'toggle') {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 614,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 615,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 616,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 617,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] && selectedmasterlistmain[0][componentrow.label]['label'] === transactionStatus.YES ? 'Yes' : 'No'))));\n                }\n              } else {\n                if (componentrow.label !== undefined) {\n                  designaccordian.push( /*#__PURE__*/React.createElement(Col, {\n                    md: \"4\",\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 630,\n                      columnNumber: 54\n                    }\n                  }, /*#__PURE__*/React.createElement(FormGroup, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 631,\n                      columnNumber: 37\n                    }\n                  }, /*#__PURE__*/React.createElement(FormLabel, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 41\n                    }\n                  }, /*#__PURE__*/React.createElement(FormattedMessage, {\n                    id: [componentrow.label],\n                    message: [componentrow.label],\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 632,\n                      columnNumber: 52\n                    }\n                  })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n                    __self: this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 633,\n                      columnNumber: 41\n                    }\n                  }, selectedmasterlistmain.length > 0 && selectedmasterlistmain[0][componentrow.label] ? selectedmasterlistmain[0][componentrow.label] : \"-\"))));\n                }\n              }\n            });\n          });\n        });\n      });\n      return designaccordian;\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n      isSelectedRecordChange = true;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord,\n        isSelectedRecordChange\n      });\n    };\n\n    this.onTabChange = tabProps => {\n      const tabScreen = tabProps.screenName;\n      let masterData = this.props.Login.masterData;\n      masterData['tabScreen'] = tabScreen;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onDropMaterialFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.onSaveMaterialFile = () => {\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.sfilename;\n      const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n      let isFileEdited = transactionStatus.NO;\n      let testFileArray = [];\n      let testFile = {\n        nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n        nmaterialfilecode: selectedRecord.nmaterialfilecode ? selectedRecord.nmaterialfilecode : 0,\n        nstatus: transactionStatus.ACTIVE,\n        nattachmenttypecode,\n        ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\n      };\n      const formData = new FormData();\n\n      if (nattachmenttypecode === attachmentType.FTP) {\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n          acceptedFiles.forEach((file, index) => {\n            const tempData = Object.assign({}, testFile);\n            const splittedFileName = file.name.split('.');\n            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\n            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\n            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n            tempData[\"sfilename\"] = file.name;\n            tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData[\"ssystemfilename\"] = uniquefilename;\n            tempData[\"nfilesize\"] = file.size;\n            tempData[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n            formData.append(\"uploadedFile\" + index, file);\n            formData.append(\"uniquefilename\" + index, uniquefilename);\n            testFileArray.push(tempData);\n          });\n          formData.append(\"filecount\", acceptedFiles.length);\n          isFileEdited = transactionStatus.YES;\n        } else {\n          testFile[\"sfilename\"] = selectedRecord.sfilename;\n          testFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\n          testFile[\"nlinkcode\"] = transactionStatus.NA;\n          testFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n          testFile[\"nfilesize\"] = selectedRecord.nfilesize;\n          testFile[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n          testFileArray.push(testFile);\n        }\n      } else {\n        testFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n        testFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n        testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        testFile[\"ssystemfilename\"] = \"\";\n        testFile[\"dcreateddate\"] = this.props.Login.dcreateddate && convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo);\n        testFile[\"nfilesize\"] = 0;\n        testFileArray.push(testFile);\n      }\n\n      formData.append(\"isFileEdited\", isFileEdited);\n      formData.append(\"materialmsdsattachment\", JSON.stringify(testFileArray[0]));\n      let inputParam;\n\n      if (this.props.Login.operation === 'create') {\n        inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"create\",\n          classUrl: \"material\",\n          methodUrl: \"MaterialMsdsAttachment\"\n        };\n      } else {\n        inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"update\",\n          classUrl: \"material\",\n          methodUrl: \"MaterialMsdsAttachment\"\n        };\n      }\n\n      return inputParam;\n    };\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      {\n        // let dataresultarr1 = []\n        // console.log('dcv :', this.props.Login.masterData.MaterialMsdsAttachment && this.props.Login.masterData.MaterialMsdsAttachment)\n        // this.props.Login.masterData.MaterialMsdsAttachment.map((temp) => {\n        //     temp['jsondata'].dcreateddate =\n        //      rearrangeDateFormatDateOnly(this.props.Login.userInfo, temp['jsondata'].dcreateddate)\n        // })\n        // console.log('dataresultarr1 :', this.props.Login.masterData.MaterialMsdsAttachment)\n        // let dataresultarr = []\n        // this.props.Login.masterData[\"MaterialSection\"] &&\n        //     this.props.Login.masterData[\"MaterialSection\"].map((temp) => {\n        //         return dataresultarr.push(temp.jsondata)\n        //     })\n        // console.log('xxx->>>', sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'))\n        this.props.Login.masterData.ismaterialSectionneed === 3 && tabMap.set(\"IDS_MATERIALSECTION\", /*#__PURE__*/React.createElement(MaterialSectionTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          dataResult: process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'), this.props.screenName === undefined || this.props.screenName === \"IDS_MATERIALSECTION\" ? this.state.sectionDataState : {\n            skip: 0,\n            take: 10\n          }),\n          dataState: this.props.screenName === undefined || this.props.screenname === \"IDS_MATERIALSECTION\" ? this.state.sectionDataState : {\n            skip: 0,\n            take: 10\n          },\n          dataStateChange: event => this.setState({\n            sectionDataState: event.dataState\n          }),\n          masterData: this.props.Login.masterData,\n          userInfo: this.props.Login.userInfo,\n          getTestDetails: this.props.getTestDetails,\n          getAddMaterialSectionPopup: this.props.getAddMaterialSectionPopup,\n          addParameter: this.addMaterialSection,\n          deleteRecord: this.deleteRecordmain,\n          fetchRecord: this.props.getMaterialSectionEdit,\n          selectedRecord: this.props.Login.selectedRecord,\n          screenName: \"IDS_MATERIALSECTION\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 785,\n            columnNumber: 21\n          }\n        }));\n        tabMap.set(\"IDS_MATERIALMSDSATTACHMENT\", /*#__PURE__*/React.createElement(MaterialMsdsAttachmentTab, {\n          controlMap: this.state.controlMap,\n          userRoleControlRights: this.state.userRoleControlRights,\n          userInfo: this.props.Login.userInfo,\n          deleteRecord: this.deleteRecordmain,\n          MaterialMsdsAttachment: sortData(this.props.Login.masterData.MaterialMsdsAttachment, \"descending\", \"nmaterialfilecode\") || [],\n          addMaterialFile: param => this.props.addMaterialFile(param, this.props.Login.masterData.SelectedMaterial),\n          viewMaterialFile: this.viewMaterialFile,\n          screenName: \"IDS_MATERIALMSDSATTACHMENT\",\n          settings: this.props.settings,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 17\n          }\n        }));\n      }\n      return tabMap;\n    };\n\n    this.deleteRecordmain = deleteParam => {\n      const methodUrl = deleteParam.methodUrl;\n      const selected = deleteParam.methodUrl === 'MaterialSection' ? JSON.stringify(deleteParam.selectedRecord) : JSON.stringify(deleteParam.selectedRecord);\n      let dataState = undefined;\n\n      if (this.props.screenName === \"IDS_SECTION\") {\n        dataState = this.state.sectionDataState;\n      } else if (this.props.screenName === \"IDS_METHOD\") {\n        dataState = this.state.methodDataState;\n      } else if (this.props.screenName === \"IDS_INSTRUMENTCATEGORY\") {\n        dataState = this.state.instrumentCatDataState;\n      }\n\n      const inputParam = {\n        inputData: {\n          ncontrolCode: deleteParam.ncontrolCode,\n          [methodUrl.toLowerCase()]: selected,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"material\",\n        operation: deleteParam.operation,\n        ncontrolCode: deleteParam.ncontrolCode,\n        methodUrl: methodUrl,\n        screenName: \"IDS_MATERIAL\",\n        dataState\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"IDS_MATERIAL\",\n            operation: deleteParam.operation,\n            selectedRecord: {}\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\n      }\n    };\n\n    this.addMaterialSection = param => {\n      let showMaterialSection = this.props.Login.showMaterialSection;\n      let ncontrolCode = this.props.Login.ncontrolCode;\n      let openModal = this.props.Login.openModal;\n      let isneedcombomulti = this.props.Login.isneedcombomulti;\n      isneedcombomulti = false;\n      showMaterialSection = true;\n      openModal = true;\n      ncontrolCode = param;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showMaterialSection,\n          isneedcombomulti,\n          openModal\n        }\n      };\n      this.props.getAddMaterialSectionPopup(this.props.Login.masterData, this.props.Login.userInfo, updateInfo, ncontrolCode);\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\n      inputData[\"materialCatList\"] = this.state.materialCatList;\n\n      if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\n        this.props.getMaterialByTypeCode(this.state.selectedcombo, this.state.selectedMaterialCat, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLE\"\n        }));\n      }\n    };\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"]\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.viewMaterialFile = filedata => {\n      const inputParam = {\n        inputData: {\n          nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n          materialmsdsattachment: JSON.stringify(filedata),\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"material\",\n        operation: \"view\",\n        methodUrl: \"AttachedMaterialMsdsAttachment\",\n        screenname: \"IDS_MATERIALMSDSATTACHMENT\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let showSectionWhileEdit = this.props.Login.showSectionWhileEdit;\n      let showMaterialSection = this.props.Login.showMaterialSection;\n      let isneedcombomulti = this.props.Login.isneedcombomulti;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n        }\n      } else {\n        openModal = false;\n        showMaterialSection = false;\n        isneedcombomulti = false;\n        showSectionWhileEdit = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          showMaterialSection,\n          showMaterialSection,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData != null) {\n        if (fieldName === \"nmaterialtypecode\") {\n          const selectedcombo = this.state.selectedcombo || {};\n          selectedcombo[fieldName] = comboData;\n          this.searchRef.current.value = \"\";\n          this.props.initialcombochangeget(comboData.item.nmaterialtypecode, this.props.Login.masterData, this.props.Login.userInfo);\n        } else if (fieldName === \"nmaterialcatcode\") {\n          const selectedMaterialCat = this.state.selectedMaterialCat || {};\n          selectedMaterialCat[fieldName] = comboData;\n          this.setState({\n            selectedMaterialCat\n          });\n        } else if (fieldName === \"nmaterialsectioncode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nmaterialsectioncode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"nlinkcode\") {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[\"nlinkcode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName.displaymember === \"smaterialcatname\" || fieldName.displaymember === \"sunitname\" || fieldName.displaymember === \"speriodname\") {\n          const selectedMaterialCat = this.state.selectedMaterialCat || {};\n          selectedMaterialCat[fieldName] = comboData;\n          this.setState({\n            selectedMaterialCat\n          });\n          let comboName = fieldName.label;\n          const selectedRecord = this.state.selectedRecord || {};\n\n          if (comboData) {\n            selectedRecord[comboName] = comboData;\n          } else {\n            selectedRecord[comboName] = [];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName.label === \"IDS_STORAGECONDITION\") {\n          let comboName = fieldName.label;\n          const selectedRecord = this.state.selectedRecord || {};\n\n          if (comboData) {\n            selectedRecord[comboName] = comboData;\n          } else {\n            selectedRecord[comboName] = [];\n          }\n\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedRecord\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === \"value\") {\n          const comboitem = this.state.comboitem || {};\n          comboitem[fieldName] = comboData;\n          this.setState({\n            comboitem\n          });\n        }\n      }\n    };\n\n    this.onComboChangedynamic = (comboData, control) => {\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (control.inputtype === 'date') {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[`tz${control.label}`] = comboData;\n        isSelectedRecordChange = true;\n        this.setState({\n          selectedRecord,\n          isSelectedRecordChange\n        });\n      } else {\n        if (control.label === 'Material Category') {\n          let ismaterialSectionneed = this.props.Login.masterData.ismaterialSectionneed;\n          let showSectionWhileEdit = this.state.showSectionWhileEdit;\n          ismaterialSectionneed = comboData.item.jsondata.needsectionwise; // const updateInfo = {\n          //     typeName: DEFAULT_RETURN,\n          //     data: {\n          //         ismaterialSectionneed\n          //     }\n          // }\n\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[control.label] = comboData;\n          isSelectedRecordChange = true;\n          showSectionWhileEdit = true;\n          this.setState({\n            selectedRecord,\n            isSelectedRecordChange,\n            ismaterialSectionneed,\n            showSectionWhileEdit\n          }); //   this.props.onMaterialCatChange(comboData.item.jsondata.needsectionwise );\n        } else {\n          const selectedRecord = this.state.selectedRecord || {};\n          selectedRecord[control.label] = comboData;\n          isSelectedRecordChange = true;\n          this.setState({\n            selectedRecord,\n            isSelectedRecordChange\n          });\n        }\n      }\n    };\n\n    this.onInputOnChangeDynamic = (event, radiotext) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (event.target.type === 'checkbox') {\n        if (event.target.name === 'timeonly') {\n          selectedRecord['dateonly'] = false;\n        }\n\n        if (event.target.name === 'dateonly') {\n          selectedRecord['timeonly'] = false;\n        }\n\n        const value = selectedRecord[event.target.name];\n\n        if (value !== '' && value !== undefined) {\n          if (value.includes(radiotext)) {\n            const index = value.indexOf(radiotext);\n\n            if (index !== -1) {\n              if (index == 0) {\n                const indexcomma = value.indexOf(\",\");\n\n                if (indexcomma !== -1) {\n                  selectedRecord[event.target.name] = value.slice(indexcomma + 1);\n                } else {\n                  selectedRecord[event.target.name] = \"\";\n                }\n              } else {\n                //  const  indexcomma= value.indexOf(\",\")\n                if (value.slice(index).indexOf(\",\") !== -1) {\n                  selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1);\n                } else {\n                  selectedRecord[event.target.name] = value.slice(0, index - 1);\n                }\n              }\n            }\n          } else {\n            selectedRecord[event.target.name] = value + ',' + radiotext;\n          }\n        } else {\n          selectedRecord[event.target.name] = radiotext;\n        }\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = radiotext;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      isSelectedRecordChange = true;\n      this.setState({\n        selectedRecord,\n        isSelectedRecordChange\n      });\n    };\n\n    this.onInputOnChange = (event, optional2) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      let isSelectedRecordChange = this.state.isSelectedRecordChange;\n\n      if (this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\") {\n        if (event.target.type === 'checkbox') {\n          if (event.target.name === \"ntransactionstatus\") selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;else selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n\n          if (event.target.name === 'Expiry') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Expiry Policy Days']) {\n                delete selectedRecord['Expiry Policy Days'];\n              }\n\n              if (selectedRecord['tzExpiry Policy Days']) {\n                delete selectedRecord['tzExpiry Policy Days'];\n              }\n\n              if (selectedRecord['Need Expiry']) {\n                selectedRecord['Need Expiry'] = 4;\n              }\n            }\n          }\n\n          if (event.target.name === 'Need Expiry' || event.target.name === 'Expiry Validations') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Expiry Policy Days']) {\n                delete selectedRecord['Expiry Policy Days'];\n              }\n\n              if (selectedRecord['tzExpiry Policy Days']) {\n                delete selectedRecord['tzExpiry Policy Days'];\n              }\n            }\n          }\n\n          if (event.target.name === 'Open Expiry Need') {\n            if (selectedRecord[event.target.name] === 4) {\n              if (selectedRecord['Open Expiry']) {\n                delete selectedRecord['Open Expiry'];\n              }\n\n              if (selectedRecord['tzOpen Expiry']) {\n                delete selectedRecord['tzOpen Expiry'];\n              }\n            }\n          }\n        } else if (event.target.type === 'radio') {\n          if (optional2 !== 'Expiry policy') {\n            if (selectedRecord['Expiry Policy Days']) {\n              delete selectedRecord['Expiry Policy Days'];\n            }\n\n            if (selectedRecord['tzExpiry Policy Days']) {\n              delete selectedRecord['tzExpiry Policy Days'];\n            }\n          }\n\n          selectedRecord[event.target.name] = optional2;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n\n        isSelectedRecordChange = true;\n        this.setState({\n          selectedRecord,\n          isSelectedRecordChange\n        });\n      } else {\n        if (event.target.type === 'checkbox') {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else if (event.target.type === 'radio') {\n          selectedRecord[event.target.name] = optional2;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n\n        this.setState({\n          selectedRecord\n        });\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      let inputParam = {};\n      let varmain = {};\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let postParam = undefined;\n      inputData[\"DateList\"] = [];\n\n      if (this.props.Login.screenname === \"IDS_MATERIAL\") {\n        // if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\n        //     varmain = \"Standard Name\"\n        // }\n        // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\n        //     varmain = \"Volumetric Name\"\n        // }\n        // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\n        //     varmain = \"Material Name\"\n        // }\n        inputData[\"Material\"] = {};\n        inputData[\"jsonuidata\"] = {};\n        const Layout = this.props.Login.masterData.selectedTemplate[0].jsondata;\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.inputtype === 'combo') {\n                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] ? {\n                  label: this.state.selectedRecord[component.label][\"label\"],\n                  value: this.state.selectedRecord[component.label][\"value\"]\n                } : \"\";\n                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label][\"label\"] : \"\";\n              } else if (component.inputtype === 'date') {\n                if (this.state.selectedRecord[component.label]) {\n                  inputData[\"Material\"][`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\n                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\n                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\n                  } : {\n                    label: this.props.Login.userInfo['stimezoneid'],\n                    value: this.props.Login.userInfo['ntimezonecode']\n                  };\n                  inputData[\"Material\"][component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo);\n                  inputData[\"DateList\"].push(component.label);\n                }\n\n                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ? convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo) : \"\";\n              } else if (component.inputtype === 'toggle') {\n                // if (component.label === 'Quarantine') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]===undefined?4:\n                //     this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Expiry') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Need Expiry') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Open Expiry Need') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                // else if (component.label === 'Reusable') {\n                //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\n                // }\n                if (this.state.selectedRecord[component.label] === \"\") {\n                  inputData[\"Material\"][component.label] = 4;\n                } else if (this.state.selectedRecord[component.label] === undefined) {\n                  inputData[\"Material\"][component.label] = 4;\n                } else {\n                  inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label];\n                }\n\n                if (this.state.selectedRecord[component.label] !== \"\") {\n                  inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] === transactionStatus.YES ? 'Yes' : 'No';\n                }\n              } else {\n                //   if (this.state.selectedRecord[component.label] !== undefined) {\n                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] !== undefined ? this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label] : \"\" : \"\"; // }\n                //    if (this.state.selectedRecord[component.label] !== undefined) {\n\n                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] !== undefined ? this.state.selectedRecord[component.label] ? this.state.selectedRecord[component.label] : \"\" : \"\"; //    }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                if (componentrow.inputtype === 'combo') {\n                  inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? {\n                    label: this.state.selectedRecord[componentrow.label][\"label\"],\n                    value: this.state.selectedRecord[componentrow.label][\"value\"]\n                  } : \"\";\n                  inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label][\"label\"] : \"\";\n                } else if (componentrow.inputtype === 'date') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    inputData[\"Material\"][`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\n                      label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\n                      value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\n                    } : {\n                      label: this.props.Login.userInfo['stimezoneid'],\n                      value: this.props.Login.userInfo['ntimezonecode']\n                    };\n                    inputData[\"Material\"][componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo);\n                    inputData[\"DateList\"].push(componentrow.label);\n                  }\n\n                  inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ? convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo) : \"\";\n                } else if (componentrow.inputtype === 'toggle') {\n                  if (this.state.selectedRecord[componentrow.label] === \"\") {\n                    inputData[\"Material\"][componentrow.label] = 4;\n                  } else if (this.state.selectedRecord[componentrow.label] === undefined) {\n                    inputData[\"Material\"][componentrow.label] = 4;\n                  } else {\n                    inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  }\n\n                  if (this.state.selectedRecord[componentrow.label] !== \"\") {\n                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] === transactionStatus.YES ? 'Yes' : 'No';\n                  }\n                } else {\n                  //  if (this.state.selectedRecord[componentrow.label] !== undefined) {\n                  inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] !== undefined ? this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label] : \"\" : \"\"; // }\n                  // if (this.state.selectedRecord[componentrow.label] !== undefined) {\n\n                  inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] !== undefined ? this.state.selectedRecord[componentrow.label] ? this.state.selectedRecord[componentrow.label] : \"\" : \"\"; // }\n                }\n              });\n            });\n          });\n        }); // inputData[\"Material\"][varmain] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\n        //     this.state.selectedRecord['Standard Name'] :\n        //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\n        //         this.state.selectedRecord['Volumetric Name'] :\n        //         this.state.selectedRecord['Material Name']\n\n        inputData[\"Material\"][\"Material Name\"] = this.state.selectedRecord['Material Name'] && this.state.selectedRecord['Material Name'];\n        inputData[\"Material\"] = { ...inputData[\"Material\"],\n          \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\n          \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\n        };\n        inputData[\"materialJson\"] = JSON.stringify(inputData[\"Material\"]);\n        inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"]);\n        inputData[\"ntransactionstatus\"] = inputData[\"Material\"]['Quarantine'];\n        inputData[\"nmaterialtypecode\"] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode;\n        inputData[\"nmaterialcatcode\"] = this.state.selectedRecord['Material Category'].value;\n        inputData[\"needsectionwise\"] = this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise;\n\n        if (this.props.Login.selectedRecord['Material Category'].item ? this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise : this.props.Login.selectedRecord['Material Category'].needsectionwise === transactionStatus.YES) {\n          // inputData[\"materialSectionJson\"] = [{\n          //     \"ssectionname\": this.state.selectedRecord[\"Section\"].label,\n          //     \"nsectioncode\": this.state.selectedRecord[\"Section\"].value,\n          //     \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"]\n          //     //,\n          //     //\"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\n          // }];\n          inputData[\"materialSectionJson\"] = {\n            \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"],\n            \"nsectioncode\": this.state.selectedRecord[\"Section\"] && this.state.selectedRecord[\"Section\"].value\n          };\n          inputData[\"materialSectionJson\"] = JSON.stringify(inputData[\"materialSectionJson\"]);\n        }\n\n        if (this.props.Login.operation === 'create') {\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"Material\",\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            postParam,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            dataState: this.state.dataState\n          };\n        } else {\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"Material\",\n            inputData: inputData,\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            postParam,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef,\n            dataState: this.state.dataState\n          };\n        }\n\n        const masterData = this.props.Login.masterData;\n\n        if (this.props.Login.screenName === \"IDS_MATERIAL\") {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\n          }\n        } else {\n          if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\n            this.ConfirmComponent();\n          } else {\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam,\n                    masterData\n                  },\n                  saveType\n                }\n              };\n              this.props.updateStore(updateInfo);\n            } else {\n              this.props.crudMaster(inputParam, masterData, \"openModal\");\n            }\n          }\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALSAFETYINSTRUCTIONS\") {\n        const Layout = this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata;\n        const dynamicobj = {};\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.inputtype === 'combo') {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[component.label] = {\n                    label: this.state.selectedRecord[component.label][\"label\"],\n                    value: this.state.selectedRecord[component.label][\"value\"]\n                  };\n                }\n              } else {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[component.label] = this.state.selectedRecord[component.label];\n                }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                if (componentrow.inputtype === 'combo') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = {\n                      label: this.state.selectedRecord[componentrow.label][\"label\"],\n                      value: this.state.selectedRecord[componentrow.label][\"value\"]\n                    };\n                  }\n                } else {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  }\n                }\n              });\n            });\n          });\n        });\n        inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n        if (this.props.Login.masterData.MaterialSafetyInstructions.length > 0) {\n          inputData[\"nmaterialsafetyinstructionscode\"] = this.props.Login.masterData.MaterialSafetyInstructions[0].nmaterialsafetyinstructionscode;\n        } else {\n          inputData[\"nmaterialsafetyinstructionscode\"] = 0;\n        }\n\n        inputData[\"materialSafetyInstructions\"] = JSON.stringify(dynamicobj);\n        inputData[\"nflag\"] = 1;\n        inputParam = {\n          classUrl: \"material\",\n          methodUrl: \"MaterialSafetyInstructions\",\n          inputData: inputData,\n          operation: 'create',\n          saveType,\n          formRef,\n          postParam,\n          selectedRecord: this.state.selectedRecord,\n          searchRef: this.searchRef,\n          dataState: this.state.dataState\n        };\n        let masterData = this.props.Login.masterData;\n\n        if (this.state.isSelectedRecordChange) {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n          }\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: false\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALMSDSATTACHMENT\") {\n        inputParam = this.onSaveMaterialFile();\n        let masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenname === \"IDS_MATERIALPROPERTY\") {\n        let masterData = this.props.Login.masterData;\n        const Layout = this.props.Login.masterData.selectedTemplateProperties[0].jsondata;\n        const dynamicobj = {};\n        inputData[\"DateList\"] = [];\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.inputtype === 'combo') {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[component.label] = {\n                    label: this.state.selectedRecord[component.label][\"label\"],\n                    value: this.state.selectedRecord[component.label][\"value\"]\n                  };\n                }\n              } else if (component.inputtype === 'date') {\n                if (this.state.selectedRecord[component.label]) {\n                  dynamicobj[`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\n                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\n                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\n                  } : {\n                    label: this.props.Login.userInfo['stimezoneid'],\n                    value: this.props.Login.userInfo['ntimezonecode']\n                  };\n                  dynamicobj[component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo);\n                  inputData[\"DateList\"].push(component.label);\n                }\n              } else {\n                if (this.state.selectedRecord.hasOwnProperty(component.label)) {\n                  dynamicobj[component.label] = this.state.selectedRecord[component.label];\n                }\n              }\n\n              component.hasOwnProperty(\"children\") && component.children.map(componentrow => {\n                if (componentrow.inputtype === 'combo') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = {\n                      label: this.state.selectedRecord[componentrow.label][\"label\"],\n                      value: this.state.selectedRecord[componentrow.label][\"value\"]\n                    };\n                  }\n                } else if (componentrow.inputtype === 'date') {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\n                      label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\n                      value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\n                    } : {\n                      label: this.props.Login.userInfo['stimezoneid'],\n                      value: this.props.Login.userInfo['ntimezonecode']\n                    };\n                    dynamicobj[componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo);\n                    inputData[\"DateList\"].push(componentrow.label);\n                  }\n                } else {\n                  if (this.state.selectedRecord[componentrow.label]) {\n                    dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label];\n                  }\n                }\n              });\n            });\n          });\n        });\n        inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n        if (this.props.Login.masterData.MaterialProperties.length > 0) {\n          inputData[\"nmaterialpropertycode\"] = this.props.Login.masterData.MaterialProperties[0].nmaterialpropertycode;\n        } else {\n          inputData[\"nmaterialpropertycode\"] = 0;\n        } //inputData[\"DateList\"] = JSON.stringify(DateList)\n\n\n        inputData[\"materialProperty\"] = JSON.stringify(dynamicobj);\n        inputData[\"nflag\"] = 2;\n        inputParam = {\n          classUrl: \"material\",\n          methodUrl: \"MaterialSafetyInstructions\",\n          inputData: inputData,\n          operation: 'create',\n          saveType,\n          formRef,\n          postParam,\n          selectedRecord: this.state.selectedRecord,\n          searchRef: this.searchRef,\n          dataState: this.state.dataState\n        };\n\n        if (this.state.isSelectedRecordChange) {\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData\n                },\n                saveType\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n          }\n        } else {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: false\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else {\n        if (this.props.Login.operation !== \"update\") {\n          let showMaterialSection = this.props.Login.showMaterialSection;\n          let newarr = [];\n          let newarr1 = [];\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n          if (this.state.selectedRecord[\"nmaterialsectioncode\"].length > 1) {\n            newarr = this.state.selectedRecord.nmaterialsectioncode.map(temp => {\n              return {\n                \"ssectionname\": temp.label,\n                \"nsectioncode\": temp.value,\n                \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n                \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\n              };\n            });\n            newarr1[\"nsectioncode\"] = \"\"; // let nsectioncode;\n\n            this.state.selectedRecord.nmaterialsectioncode.map(temp => {\n              newarr1[\"nsectioncode\"] += temp.value + ',';\n            });\n            newarr1 = {\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              \"nsectioncode\": newarr1[\"nsectioncode\"].substring(0, newarr1[\"nsectioncode\"].length - 1)\n            };\n          } else {\n            newarr.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\n            });\n            newarr1 = {\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value\n            };\n          }\n\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarr);\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarr1);\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"MaterialSection\",\n            inputData: inputData,\n            operation: \"create\",\n            showMaterialSection: showMaterialSection,\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef\n          };\n        } else {\n          let newarrobj = [];\n          inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode;\n\n          if (Array.isArray(this.state.selectedRecord[\"nmaterialsectioncode\"])) {\n            newarrobj.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\n            });\n          } else {\n            newarrobj.push({\n              \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"].label,\n              \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"].value,\n              \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\n              \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\n            });\n          }\n\n          inputData[\"materialSectionJson\"] = JSON.stringify(newarrobj);\n          inputData[\"MaterialSection\"] = {\n            \"Reorder Level\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"]\n          };\n          inputData[\"nmaterialsectioncode\"] = this.state.selectedRecord.nmaterialsectioncodeprimaryKeyValue;\n          inputParam = {\n            classUrl: \"material\",\n            methodUrl: \"MaterialSection\",\n            inputData: inputData,\n            showMaterialSection: false,\n            operation: \"update\",\n            selectedRecord: this.state.selectedRecord,\n            searchRef: this.searchRef\n          };\n        }\n\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      }\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord; // let value = event.target.value;\n      // if (isNaN(value)) {\n      // if (parseInt(value) < 10) {\n      //  let x=value.toString().replace(/\\D/g,'')\n      // if (value === 0) {\n      //     delete selectedRecord[name]\n      //     selectedRecord[name]=''\n      // }\n      // else {\n\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      }); //   }\n      // }\n      // }\n    };\n\n    this.ConfirmComponent = () => {\n      this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({\n        id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\"\n      }), \"ok\", \"cancel\", () => this.copyAlertSave());\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      let inputData = [];\n      inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\n      inputData[\"materialCatList\"] = this.state.materialCatList;\n      this.setState({\n        sectionDataState: {\n          skip: 0,\n          take: 10\n        }\n      });\n\n      if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\n        this.props.getMaterialReload(this.props.Login.masterData.SelectedMaterialType, this.props.Login.masterData.SelectedMaterialCategory, this.props.Login.masterData, this.props.Login.userInfo);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTUSERROLE\"\n        }));\n      }\n    };\n\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      masterStatus: \"\",\n      sectionDataState: {\n        skip: 0,\n        take: 10\n      },\n      error: \"\",\n      selectedRecord: {},\n      filterCatList: [],\n      operation: \"\",\n      comboitem: undefined,\n      screenName: undefined,\n      selectedcombo: undefined,\n      isSelectedRecordChange: false,\n      showSectionWhileEdit: false,\n      selectedMaterialCat: undefined,\n      materialCatList: [],\n      userRoleControlRights: [],\n      ControlRights: undefined,\n      controlMap: new Map(),\n      dataResult: [],\n      skip: 0,\n      take: this.props.Login.settings && this.props.Login.settings[3],\n      dataState: _dataState,\n      data: [],\n      splitChangeWidthPercentage: 30\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    //  console.log('selected r :', this.props.Login.masterData)\n    const addId = this.state.controlMap.has(\"AddMaterial\") && this.state.controlMap.get(\"AddMaterial\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditMaterial\") && this.state.controlMap.get(\"EditMaterial\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteMaterial\") && this.state.controlMap.get(\"DeleteMaterial\").ncontrolcode;\n    const addParameterId = this.state.controlMap.has(\"AddMaterialSafetyInstructions\") && this.state.controlMap.get(\"AddMaterialSafetyInstructions\").ncontrolcode;\n    const addMaterialProperty = this.state.controlMap.has(\"AddMaterialProperties\") && this.state.controlMap.get(\"AddMaterialProperties\").ncontrolcode;\n    let masterlistmain = [];\n    this.props.Login.masterData.Material = this.props.Login.masterData.Material && sortData(this.props.Login.masterData.Material, \"descending\", \"nmaterialcode\");\n    this.props.Login.masterData.MaterialType = this.props.Login.masterData.MaterialType && sortData(this.props.Login.masterData.MaterialType, \"ascending\", \"nmaterialtypecode\");\n    this.props.Login.masterData.MaterialCategoryMain = this.props.Login.masterData.MaterialCategoryMain && sortData(this.props.Login.masterData.MaterialCategoryMain, \"ascending\", \"nmaterialcatcode\");\n\n    if (this.props.Login.masterData.SelectedMaterialCategory && this.props.Login.masterData.SelectedMaterialCategory.needSectionwise === transactionStatus.YES) {\n      if (this.props.Login.masterData.SelectedMaterial) {\n        delete this.props.Login.masterData.SelectedMaterial['Section'];\n        delete this.props.Login.masterData.SelectedMaterial['Reorder Level'];\n      }\n    } // this.props.Login.masterData.Material &&\n    //     this.props.Login.masterData.Material.map((temp, i) => {\n    //         return masterlistmain.push(this.props.Login.masterData.Material[i].jsondata)\n    //     })\n\n\n    let searchedDatalistmain = []; // if (this.props.Login.masterData.searchedData === undefined) {\n    //     searchedDatalistmain = undefined\n    // } else {\n    //     this.props.Login.masterData.searchedData &&\n    //         this.props.Login.masterData.searchedData.map((temp, i) => {\n    //             return searchedDatalistmain.push(this.props.Login.masterData.searchedData[i].jsondata)\n    //         })\n    // }\n\n    let searchFieldList = [];\n    let mandatoryFieldsMaterialFile = []; // if (this.props.Login.masterData.SelectedMaterialType) {\n    //     if (this.props.Login.masterData.SelectedMaterialType.length > 0) {\n    //         if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\n    //             searchFieldList = [\n    //                 \"Standard Name\"\n    //             ]\n    //         }\n    //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\n    //             searchFieldList = [\n    //                 \"Volumetric Name\"\n    //             ]\n    //         }\n    //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\n    //             searchFieldList = [\n    //                 \"Material Name\"\n    //             ]\n    //         }\n    //     }\n    // }\n\n    const filterParam = {\n      inputListName: \"Material\",\n      selectedObject: \"SelectedMaterial\",\n      primaryKeyField: \"nmaterialcode\",\n      fetchUrl: \"material/getMaterialByID\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      // isjsondata: true,\n      searchFieldList: [this.props.Login.masterData.DesignMappedFeilds && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList'] && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList']]\n    };\n    this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' && this.props.Login.selectedRecord && this.props.Login.selectedRecord.nattachmenttypecode === attachmentType.LINK ? mandatoryFieldsMaterialFile = [{\n      \"idsName\": \"IDS_FILENAME\",\n      \"dataField\": \"slinkfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }, {\n      \"idsName\": \"IDS_LINKNAME\",\n      \"dataField\": \"nlinkcode\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }] : mandatoryFieldsMaterialFile = [{\n      \"idsName\": \"IDS_FILE\",\n      \"dataField\": \"sfilename\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_CHOOSE\",\n      \"controlType\": \"file\"\n    }];\n    const mandatoryFieldsMaterialSection = [{\n      \"mandatory\": false,\n      \"idsName\": \"IDS_MATERIALSECTION\",\n      \"dataField\": \"nmaterialsectioncode\",\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }];\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb  fixed_breadcrumd \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 64,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"Material\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo //  masterList={searchedDatalistmain || masterlistmain}\n      ,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Material,\n      getMasterDetail: master => this.props.getMaterialDetails(master, this.props.Login.masterData, this.props.Login.userInfo),\n      selectedMaster: this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial,\n      primaryKeyField: \"nmaterialcode\" // mainField={this.props.Login.masterData.SelectedMaterialType ?\n      //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\n      //         \"Standard Name\" :\n      //         this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\n      //             \"Volumetric Name\" :\n      //             \"Material Name\" : \"\"}\n      // firstField={\"Reorder Level\"}\n      ,\n      mainField: this.props.Login.masterData.DesignMappedFeilds && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['mainField'],\n      firstField: this.props.Login.masterData.DesignMappedFeilds && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField'] && JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField'] //||JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\n      ,\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      showFilterIcon: true,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_FILTER\": /*#__PURE__*/React.createElement(MaterialFilter, {\n          filterCatList: this.state.filterCatList || [],\n          materialCatList: this.state.materialCatList || [],\n          selectedRecord: this.state.selectedcombo || {} //\n          ,\n          selectedMaterialCat: this.state.selectedMaterialCat || {},\n          onComboChange: this.onComboChange,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 45\n          }\n        })\n      }],\n      openModal: () => this.props.getAddMaterialPopup(\"create\", this.props.Login, this.state.selectedcombo, addId, this.props.Login.masterData, this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 37\n      }\n    }, this.props.Login.masterData.Material && this.props.Login.masterData.Material.length > 0 && this.props.Login.masterData.SelectedMaterial ? /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterial['Material Name'] : \"\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(MediaLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 65\n      }\n    }, \"Quarantine :\"), /*#__PURE__*/React.createElement(MediaLabel, {\n      className: `btn btn-outlined ${this.props.Login.masterData.SelectedMaterial['Quarantine'] === \"Yes\" ? \"outline-success\" : \"outline-danger\"} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedMaterial['Quarantine'] === \"Yes\" ? 'Yes' : 'No')), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 65\n      }\n    }), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: e => this.props.getAddMaterialPopup(\"update\", this.props.Login, this.state.selectedcombo, editId, this.props.Login.masterData, this.state.selectedRecord),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      href: \"\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: e => this.props.addSafetyInstructions(this.props.Login.masterData, this.props.Login.userInfo, addParameterId, \"create\", {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Safety, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      href: \"#\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDMATERIALPROPERTY\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: e => this.props.addMaterialProperty(this.props.Login.masterData, this.props.Login.userInfo, addMaterialProperty, \"create\", {}),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Property, {\n      className: \"custom_icons\",\n      width: \"15\",\n      height: \"15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 69\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(SampleInfoView, {\n      data: this.props.Login.masterData.SelectedMaterial,\n      SingleItem: JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)[this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ? 'MaterialStandardViewFields' : this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ? 'MaterialVolumetricViewFields' : 'MaterialMatInventViewFields'],\n      screenName: \"IDS_SAMPLEINFO\",\n      userInfo: this.props.Login.userInfo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 57\n      }\n    })), this.props.Login.masterData && /*#__PURE__*/React.createElement(CustomTab, {\n      activeKey: this.props.Login.masterData.tabScreen || 'IDS_MATERIALMSDSATTACHMENT',\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 85\n      }\n    }))) : \"\")))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.screenname === 'IDS_MATERIALSAFETYINSTRUCTIONS' ? '' : this.props.Login.screenname === 'IDS_MATERIALPROPERTY' ? '' : this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenname,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' ? mandatoryFieldsMaterialFile : this.props.Login.screenname === 'IDS_MATERIAL' ? this.dynamicmandatoryFeilds() : this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ? this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? mandatoryFieldsMaterialSection : '' : '',\n      updateStore: this.props.updateStore,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\" ? this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ? this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? this.props.Login.showMaterialSection ? /*#__PURE__*/React.createElement(AddMaterialSection, {\n        selectedRecord: this.props.Login.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        MaterialSectionCombodata: this.props.Login.masterData.MaterialSection && this.props.Login.masterData.MaterialSection,\n        onNumericInputChange: this.onNumericInputChange,\n        onComboChange: this.onComboChange,\n        isDisabled: this.props.Login.isneedcombomulti && this.props.Login.isneedcombomulti,\n        ismaterialsectionEdit: this.props.Login.ismaterialsectionEdit,\n        comboData: this.props.Login.masterData.productCategoryList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        operation: this.props.Login.operation,\n        showSectionWhileEdit: this.state.showSectionWhileEdit,\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        isBreadCrumbCategory: this.props.Login.operation === 'update' ? this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode === this.props.Login.selectedRecord['Material Category'].value ? true : false : false,\n        enableDisableNeedExpiry: this.props.Login.selectedRecord['Expiry'],\n        enableDisableOpenExpiry: this.props.Login.selectedRecord['Open Expiry Need'],\n        enableDisableExpiryPolicy: this.props.Login.selectedRecord['Expiry Validations'],\n        templateData: this.props.Login.masterData.selectedTemplate && this.props.Login.masterData.selectedTemplate[0].jsondata,\n        onNumericInputChange: this.onNumericInputChange,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        timeZoneList: this.props.Login.timeZoneList,\n        handleDateChange: this.handleDateChange,\n        comboData: this.props.Login.templateData && this.props.Login.templateData.comboData,\n        onComboChange: this.onComboChangedynamic // ismaterialSectionneed={this.state.ismaterialSectionneed}\n        ,\n        screenname: this.props.Login.screenname,\n        ismaterialSectionneed: this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item && this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise || this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].needsectionwise || this.props.Login.masterData.ismaterialSectionneed,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 49\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.state.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        templateData: this.props.Login.masterData.selectedTemplateSafetyInstructions && this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChangeDynamic,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 45\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        userInfo: this.props.Login.userInfo,\n        templateData: this.props.Login.masterData.selectedTemplateProperties && this.props.Login.masterData.selectedTemplateProperties[0].jsondata // userInfo={this.props.Login.userInfo}\n        ,\n        handleChange: this.handleChange,\n        onInputOnChange: this.onInputOnChange,\n        handleDateChange: this.handleDateChange,\n        timeZoneList: this.props.Login.timeZoneList && this.props.Login.timeZoneList,\n        onComboChange: this.onComboChangedynamic,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441,\n          columnNumber: 41\n        }\n      }) : /*#__PURE__*/React.createElement(AddMaterialFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropMaterialFile,\n        deleteAttachment: this.deleteAttachment,\n        onComboChange: this.onComboChange,\n        linkMaster: this.props.Login.linkMaster,\n        maxSize: 20,\n        maxFiles: 1,\n        multiple: false,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_MATERIALMSDSATTACHMENT\"\n        }),\n        name: \"testfilename\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454,\n          columnNumber: 37\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidMount() {\n    if (this.parentHeight) {\n      const height = this.parentHeight.clientHeight;\n      this.setState({\n        firstPane: height - 80,\n        parentHeight: height\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = []; // if (Array.isArray(this.props.Login.masterData)) {\n\n    breadCrumbData.push({\n      \"label\": \"IDS_MATERIALTYPE\",\n      \"value\": this.props.Login.masterData.SelectedMaterialType ? this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename && this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode] : \"NA\"\n    }, {\n      \"label\": \"IDS_MATERIALCAT\",\n      \"value\": this.props.Login.masterData.SelectedMaterialCategory ? this.props.Login.masterData.SelectedMaterialCategory.smaterialcatname !== undefined ? this.props.Login.masterData.SelectedMaterialCategory.smaterialcatname : \"NA\" : \"NA\"\n    }); //  }\n\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    let bool = false;\n    let {\n      selectedRecord,\n      selectedcombo,\n      comboitem,\n      filterData,\n      filterCatList,\n      selectedMaterialCat,\n      materialCatList,\n      ismaterialSectionneed,\n      showSectionWhileEdit\n    } = this.state;\n    const masterData = this.props.Login.masterData; // if (this.props.Login.isSelectedRecordChange !== previousProps.Login.isSelectedRecordChange) {\n    //     bool = true;\n    //   isSelectedRecordChange = this.props.Login.isSelectedRecordChange\n    // }\n    // if (this.props.Login.selectedRecord.IDS_MATERIALCAT &&\n    //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    //     != previousProps.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise) {\n    //     bool = true;\n    //     ismaterialSectionneed = this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    // }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      bool = true;\n      selectedRecord = this.props.Login.selectedRecord;\n    }\n\n    if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\n      bool = true;\n      selectedcombo = this.props.Login.selectedcombo;\n    }\n\n    if (this.props.Login.showSectionWhileEdit !== previousProps.Login.showSectionWhileEdit) {\n      bool = true;\n      showSectionWhileEdit = this.props.Login.showSectionWhileEdit;\n    }\n\n    if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\n      bool = true;\n      comboitem = this.props.Login.comboitem;\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap,\n        data: this.props.Login.masterData.ControlRights\n      });\n    }\n\n    if (this.props.Login.masterData.MaterialType !== undefined) {\n      if (this.props.Login.masterData.MaterialType !== previousProps.Login.masterData.MaterialType) {\n        bool = true; // const materialTypeList = constructOptionList(this.props.Login.masterData.MaterialType || [], \"nmaterialtypecode\",\n        //     \"smaterialtypename\", undefined, undefined, undefined);\n        //     constructOptionList(options, optionId,\n        //         optionValue, sortField, sortOrder, alphabeticalSort,\n        //          defaultStatusFieldName) \n\n        const materialTypeList = constructjsonOptionList(this.props.Login.masterData.MaterialType, \"nmaterialtypecode\", \"smaterialtypename\", undefined, undefined, undefined, undefined, undefined, true, this.props.Login.userInfo.slanguagetypecode);\n        filterCatList = materialTypeList.get(\"OptionList\"); //  console.log('masterData.MaterialType :', masterData.MaterialType)\n\n        selectedcombo = {\n          nmaterialtypecode: masterData.MaterialType && masterData.MaterialType.length > 0 ? {\n            \"value\": masterData.MaterialType[0].nmaterialtypecode,\n            \"label\": masterData.MaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode]\n          } : \"\"\n        };\n      }\n    }\n\n    if (this.props.Login.masterData.MaterialCategoryMain !== previousProps.Login.masterData.MaterialCategoryMain) {\n      const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\", \"smaterialcatname\", undefined, undefined, undefined);\n      materialCatList = MaterialCategoryMain.get(\"OptionList\");\n      selectedMaterialCat = {\n        nmaterialcatcode: masterData.MaterialCategoryMain && masterData.MaterialCategoryMain.length > 0 ? {\n          \"value\": masterData.MaterialCategoryMain[0].nmaterialcatcode,\n          \"label\": masterData.MaterialCategoryMain[0].smaterialcatname\n        } : \"\"\n      };\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      bool = true;\n      filterData = this.generateBreadCrumData();\n    }\n\n    if (this.props.Login.masterData.searchedData !== previousProps.Login.masterData.searchedData) {\n      if (this.props.Login.masterData.searchedData) {\n        if (this.props.Login.masterData.searchedData.length <= this.state.skip) {\n          this.setState({\n            skip: 0\n          });\n        }\n      }\n    }\n\n    if (bool) {\n      this.setState({\n        selectedRecord,\n        comboitem,\n        filterData,\n        selectedcombo,\n        filterCatList,\n        selectedMaterialCat,\n        materialCatList,\n        isSelectedRecordChange: false,\n        showSectionWhileEdit //, \n        // ismaterialSectionneed \n        // : bool?this.props.Login.selectedRecord.IDS_MATERIALCAT&&\n        // this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise:ismaterialSectionneed\n\n      });\n    } // else\n    // {\n    //     this.setState({\n    //     ismaterialSectionneed \n    //     : this.props.Login.selectedRecord.IDS_MATERIALCAT&&\n    //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\n    // });\n    // }\n\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  }\n\n  handleClickDelete(masterData, ncontrolcode, modalName) {\n    const fieldArray = [];\n    let postParam = {\n      inputListName: \"Material\",\n      selectedObject: \"SelectedMaterial\",\n      primaryKeyField: \"nmaterialcode\",\n      primaryKeyValue: fieldArray,\n      fetchUrl: \"material/getMaterial\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      }\n    };\n    modalName = 'openModal';\n    const inputParam = {\n      methodUrl: \"Material\",\n      classUrl: \"material\",\n      inputData: {\n        \"material\": this.props.Login.masterData.SelectedMaterial,\n        \"nmaterialcatcode\": this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode,\n        \"userinfo\": this.props.Login.userInfo,\n        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\n        \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\n      },\n      operation: \"delete\",\n      postParam,\n      displayName: \"Material\"\n    };\n\n    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: true,\n          screenData: {\n            inputParam,\n            masterData\n          },\n          [modalName]: true,\n          operation: 'delete',\n          screenName: \"Material\",\n          id: \"material\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    } else {\n      this.props.crudMaster(inputParam, masterData, modalName);\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  updateStore,\n  initialcombochangeget,\n  getAddMaterialPopup,\n  viewAttachment,\n  getMaterialReload,\n  crudMaster,\n  getMaterialDetails,\n  getMaterialEdit,\n  getMaterialByTypeCode,\n  addMaterialFile,\n  getAddMaterialSectionPopup,\n  getMaterialSectionEdit,\n  filterColumnData,\n  validateEsignCredential,\n  addSafetyInstructions,\n  addMaterialProperty\n})(injectIntl(Material));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/Material/Material.jsx"],"names":["React","Component","connect","FormattedMessage","injectIntl","Row","Col","Nav","Card","FormGroup","FormLabel","process","toast","FontAwesomeIcon","faTrashAlt","faPencilAlt","SlideOutModal","Esign","constructjsonOptionList","convertDateTimetoString","convertDateTimetoStringDBformat","rearrangeDateFormatDateOnly","formatInputDate","convertDateTimetoStringDBFormat","sortData","ListMaster","CustomTab","showEsign","getControlMap","constructOptionList","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","rearrangeDateFormat","callService","updateStore","crudMaster","filterColumnData","validateEsignCredential","viewAttachment","initialcombochangeget","addSafetyInstructions","getAddMaterialPopup","getMaterialDetails","addMaterialProperty","getMaterialReload","getMaterialEdit","getMaterialByTypeCode","getAddMaterialSectionPopup","getMaterialSectionEdit","addMaterialFile","DEFAULT_RETURN","transactionStatus","attachmentType","ContentPanel","ReadOnlyText","MediaLabel","ConfirmMessage","BreadcrumbComponent","ReactTooltip","MaterialFilter","DynamicSlideout","MaterialSectionTab","AddMaterialSection","Affix","MaterialMsdsAttachmentTab","AddMaterialFile","ProductList","PortalModal","ModalShow","SampleInfoView","mapStateToProps","state","Login","Material","constructor","props","paneSizeChange","d","setState","splitChangeWidthPercentage","dynamicmandatoryFeilds","mandatoryFeildsMaterial","masterData","selectedTemplate","jsondata","map","row","children","column","component","mandatory","inputtype","push","label","hasOwnProperty","componentrow","selectedRecord","undefined","item","needsectionwise","YES","temp","i","idsName","accordianDesign","selectedmasterlistmain","SelectedMaterial","designaccordian","length","handleDateChange","dateValue","dateName","isSelectedRecordChange","onTabChange","tabProps","tabScreen","screenName","updateInfo","typeName","data","onDropMaterialFile","attachedFiles","fieldName","maxSize","actionType","deleteAttachment","event","file","onSaveMaterialFile","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","testFileArray","testFile","nmaterialcode","nmaterialfilecode","nstatus","ACTIVE","ndefaultstatus","LINK","formData","FormData","FTP","Array","isArray","forEach","index","tempData","Object","assign","splittedFileName","name","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","ntestfilecode","sdescription","trim","NA","size","dcreateddate","userInfo","append","nfilesize","slinkfilename","slinkdescription","nlinkcode","value","JSON","stringify","inputParam","operation","inputData","userinfo","isFileupload","classUrl","methodUrl","tabDetail","tabMap","Map","ismaterialSectionneed","set","controlMap","userRoleControlRights","sectionDataState","skip","take","screenname","dataState","getTestDetails","addMaterialSection","deleteRecordmain","MaterialMsdsAttachment","param","viewMaterialFile","settings","deleteParam","selected","methodDataState","instrumentCatDataState","ncontrolCode","toLowerCase","nformcode","loadEsign","screenData","openModal","showMaterialSection","isneedcombomulti","ConfirmDelete","deleteId","confirmMessage","confirm","intl","formatMessage","id","handleClickDelete","openFilter","showFilter","closeFilter","onFilterSubmit","searchRef","current","selectedcombo","materialCatList","selectedMaterialCat","warn","handlePageChange","e","validateEsign","sreason","password","filedata","materialmsdsattachment","closeModal","showSectionWhileEdit","selectedId","onComboChange","comboData","nmaterialtypecode","displaymember","comboName","comboitem","onComboChangedynamic","control","onInputOnChangeDynamic","radiotext","target","type","includes","indexOf","indexcomma","slice","onInputOnChange","optional2","checked","DEACTIVE","onSaveClick","saveType","formRef","varmain","postParam","Layout","SelectedMaterialType","copyScreenRights","ConfirmComponent","selectedTemplateSafetyInstructions","dynamicobj","MaterialSafetyInstructions","nmaterialsafetyinstructionscode","selectedTemplateProperties","MaterialProperties","nmaterialpropertycode","newarr","newarr1","nmaterialsectioncode","substring","newarrobj","nmaterialsectioncodeprimaryKeyValue","onNumericInputChange","copyAlertSave","reloadData","SelectedMaterialCategory","parseInt","masterStatus","error","filterCatList","ControlRights","dataResult","createRef","getDerivedStateFromProps","render","addId","has","get","ncontrolcode","editId","addParameterId","masterlistmain","MaterialType","MaterialCategoryMain","needSectionwise","searchedDatalistmain","searchFieldList","mandatoryFieldsMaterialFile","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","DesignMappedFeilds","parse","mandatoryFieldsMaterialSection","breadCrumbData","filterData","searchedData","master","MaterialSection","ismaterialsectionEdit","productCategoryList","nmaterialcatcode","handleChange","timeZoneList","templateData","defaultTimeZone","linkMaster","componentDidMount","parentHeight","height","clientHeight","firstPane","generateBreadCrumData","smaterialtypename","slanguagetypecode","smaterialcatname","componentDidUpdate","previousProps","bool","values","materialTypeList","componentWillUnmount","modalName","fieldArray","primaryKeyValue","displayName"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,EAA2BC,UAA3B,QAA6C,YAA7C;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,SAA9B,EAAyCC,SAAzC,QAA0D,iBAA1D;AACA,SAASC,OAAT,QAAwB,4BAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,UAAT,EAAqBC,WAArB,QAAwC,mCAAxC;AACA,OAAOC,aAAP,MAA0B,gDAA1B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,EAA2DC,+BAA3D,EAA4FC,2BAA5F,EAAyHC,eAAzH,EAA0IC,+BAA1I,EAA2KC,QAA3K,QAA2L,+BAA3L;AACA,OAAOC,UAAP,MAAuB,oDAAvB;AACA,OAAOC,SAAP,MAAsB,oDAAtB;AACA,SAASC,SAAT,EAAoBC,aAApB,EAAmCC,mBAAnC,EAAwDC,oBAAxD,EAA8EC,wBAA9E,EAAwGC,WAAxG,EAAqHC,mBAArH,QAAgJ,+BAAhJ;AACA,SACIC,WADJ,EACiBC,WADjB,EAC8BC,UAD9B,EAC0CC,gBAD1C,EAC4DC,uBAD5D,EACqFC,cADrF,EAEIC,qBAFJ,EAE2BC,qBAF3B,EAEkDC,mBAFlD,EAEuEC,kBAFvE,EAE2FC,mBAF3F,EAEgHC,iBAFhH,EAGIC,eAHJ,EAGqBC,qBAHrB,EAG4CC,0BAH5C,EAGwEC,sBAHxE,EAGgGC,eAHhG,QAIO,eAJP;AAKA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,8BAAlD;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,UAArC,QAAuD,6BAAvD;AACA,OAAOC,cAAP,MAA2B,0DAA3B;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,eAAP,MAA4B,wCAA5B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,KAAT,QAAsB,QAAtB;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;;;AAGA,SAASC,WAAT,QAA4B,2BAA5B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAQ;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAR;AACH,CAFD;;AAGA,MAAMC,QAAN,SAAuBzE,SAAvB,CAAiC;AAC7B0E,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA4CnBC,cA5CmB,GA4CDC,CAAD,IAAO;AACpB,WAAKC,QAAL,CAAc;AACVC,QAAAA,0BAA0B,EAAEF;AADlB,OAAd;AAGH,KAhDkB;;AAAA,SA6anBG,sBA7amB,GA6aM,MAAM;AAC3B,UAAIC,uBAAuB,GAAG,EAA9B;AACA,WAAKN,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BC,gBAA5B,IACI,KAAKR,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BC,gBAA5B,CAA6C,CAA7C,EAAgDC,QAAhD,CAAyDC,GAAzD,CAA8DC,GAAD,IAAS;AAClEA,QAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAkBG,MAAD,IAAY;AACzBA,UAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAqBI,SAAD,IAAe;AAC/B,gBAAIA,SAAS,CAACC,SAAd,EAAyB;AACrB,kBAAID,SAAS,CAACE,SAAV,KAAwB,OAA5B,EAAqC;AACjCV,gBAAAA,uBAAuB,CAACW,IAAxB,CAA6B;AACzB,6BAAWH,SAAS,CAACI,KADI;AACG,+BAAaJ,SAAS,CAACI,KAD1B;AAEzB,oCAAkB,YAFO;AAEO,iCAAe;AAFtB,iBAA7B;AAIH,eALD,MAMK;AACDZ,gBAAAA,uBAAuB,CAACW,IAAxB,CAA6B;AACzB,6BAAWH,SAAS,CAACI,KADI;AACG,+BAAaJ,SAAS,CAACI,KAD1B;AAEzB,oCAAkB,WAFO;AAEM,iCAAe;AAFrB,iBAA7B;AAIH;AACJ;;AACDJ,YAAAA,SAAS,CAACK,cAAV,CAAyB,UAAzB,KAAwCL,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAwBU,YAAD,IAAkB;AAC7E,kBAAIA,YAAY,CAACL,SAAjB,EAA4B;AACxB,oBAAIK,YAAY,CAACJ,SAAb,KAA2B,OAA/B,EAAwC;AACpCV,kBAAAA,uBAAuB,CAACW,IAAxB,CAA6B;AACzB,+BAAWG,YAAY,CAACF,KADC;AACM,iCAAaE,YAAY,CAACF,KADhC;AAEzB,sCAAkB,YAFO;AAEO,mCAAe;AAFtB,mBAA7B;AAIH,iBALD,MAMK;AACDZ,kBAAAA,uBAAuB,CAACW,IAAxB,CAA6B;AACzB,+BAAWG,YAAY,CAACF,KADC;AACM,iCAAaE,YAAY,CAACF,KADhC;AAEzB,sCAAkB,WAFO;AAEM,mCAAe;AAFrB,mBAA7B;AAIH;AACJ;AACJ,aAfuC,CAAxC;AAgBH,WA/BD;AAgCH,SAjCD;AAkCH,OAnCD,CADJ;;AAqCA,UAAI,KAAKlB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,oBAAhC,CAAJ,EAA2D;AACvD,YAAI,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,oBAAhC,MAA0D,eAA9D,EAA+E;AAC3Ef,UAAAA,uBAAuB,CAACW,IAAxB,CAA6B;AACzB,uBAAW,oBADc;AACQ,yBAAa,oBADrB;AAEzB,8BAAkB,WAFO;AAEM,2BAAe;AAFrB,WAA7B;AAIH;AACJ,OA9C0B,CA+C3B;;;AACA,UAAI,KAAKjB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,MAAyDC,SAA7D,EAAwE;AACpE,YAAI,CAAC,KAAKtB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,KAAwD,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDE,IAA7G,GACD,KAAKvB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDE,IAArD,CAA0Dd,QAA1D,CAAmEe,eADlE,GAED,KAAKxB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDG,eAFrD,MAE0EhD,iBAAiB,CAACiD,GAFhG,EAEqG;AACjGnB,UAAAA,uBAAuB,CAACW,IAAxB,CAA6B;AACzB,uBAAW,SADc;AACH,yBAAa,SADV;AAEzB,8BAAkB,YAFO;AAEO,2BAAe;AAFtB,WAA7B,EAGG;AACC,uBAAW,eADZ;AAC6B,yBAAa,eAD1C;AAEC,8BAAkB,WAFnB;AAEgC,2BAAe;AAF/C,WAHH;AAOH,SAVD,MAUO;AACHX,UAAAA,uBAAuB,CAACI,GAAxB,CAA4B,CAACgB,IAAD,EAAOC,CAAP,KAAa;AACrC,gBAAID,IAAI,CAACE,OAAL,KAAiB,SAAjB,IAA8BF,IAAI,CAACE,OAAL,KAAiB,eAAnD,EAAoE;AAChE,qBAAOtB,uBAAuB,CAACqB,CAAD,CAA9B;AACH;AACJ,WAJD;AAKH;AACJ;;AACD,aAAOrB,uBAAP;AACH,KAjfkB;;AAAA,SAkfnBuB,eAlfmB,GAkfD,MAAM;AACpB,UAAIC,sBAAsB,GAAG,EAA7B;AACA,WAAK9B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,IAAgD,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6CtB,QAA7C,KAA0Da,SAA1G,IACIQ,sBAAsB,CAACb,IAAvB,CAA4B,KAAKjB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6CtB,QAAzE,CADJ;AAGA,UAAIuB,eAAe,GAAG,EAAtB;AACA,WAAKhC,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BC,gBAA5B,CAA6C,CAA7C,EAAgDC,QAAhD,CAAyDC,GAAzD,CAA8DC,GAAD,IAAS;AAClEA,QAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAkBG,MAAD,IAAY;AACzBA,UAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAqBI,SAAD,IAAe;AAC/B,gBAAIA,SAAS,CAACE,SAAV,KAAwB,OAA5B,EAAqC;AACjC,kBAAIF,SAAS,CAACI,KAAV,KAAoBI,SAAxB,EAAmC;AAC/BU,gBAAAA,eAAe,CAACf,IAAhB,eAAqB,oBAAC,GAAD;AAAK,kBAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACjB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAW,oBAAC,gBAAD;AAAkB,kBAAA,EAAE,EAAE,CAACH,SAAS,CAACI,KAAX,CAAtB;AAAyC,kBAAA,OAAO,EAAE,CAACJ,SAAS,CAACI,KAAX,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKY,sBAAsB,CAACG,MAAvB,GAAgC,CAAhC,IACGH,sBAAsB,CAAC,CAAD,CAAtB,CAA0BhB,SAAS,CAACI,KAApC,CADH,GAEGY,sBAAsB,CAAC,CAAD,CAAtB,CAA0BhB,SAAS,CAACI,KAApC,EAA2C,OAA3C,CAFH,GAEyD,GAH9D,CAFJ,CADiB,CAArB;AAWH;AACJ,aAdD,MAeK,IAAIJ,SAAS,CAACE,SAAV,KAAwB,QAA5B,EAAsC;AACvC,kBAAIF,SAAS,CAACI,KAAV,KAAoBI,SAAxB,EAAmC;AAC/BU,gBAAAA,eAAe,CAACf,IAAhB,eAAqB,oBAAC,GAAD;AAAK,kBAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACjB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAW,oBAAC,gBAAD;AAAkB,kBAAA,EAAE,EAAE,CAACH,SAAS,CAACI,KAAX,CAAtB;AAAyC,kBAAA,OAAO,EAAE,CAACJ,SAAS,CAACI,KAAX,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKY,sBAAsB,CAACG,MAAvB,GAAgC,CAAhC,IACGH,sBAAsB,CAAC,CAAD,CAAtB,CAA0BhB,SAAS,CAACI,KAApC,CADH,IAEGY,sBAAsB,CAAC,CAAD,CAAtB,CAA0BhB,SAAS,CAACI,KAApC,MAA+C1C,iBAAiB,CAACiD,GAFpE,GAGG,KAHH,GAGW,IAJhB,CAFJ,CADiB,CAArB;AAYH;AACJ,aAfI,MAgBA;AACD,kBAAIX,SAAS,CAACI,KAAV,KAAoBI,SAAxB,EAAmC;AAC/BU,gBAAAA,eAAe,CAACf,IAAhB,eAAqB,oBAAC,GAAD;AAAK,kBAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACjB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAAW,oBAAC,gBAAD;AAAkB,kBAAA,EAAE,EAAE,CAACH,SAAS,CAACI,KAAX,CAAtB;AAAyC,kBAAA,OAAO,EAAE,CAACJ,SAAS,CAACI,KAAX,CAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACKY,sBAAsB,CAACG,MAAvB,GAAgC,CAAhC,IACGH,sBAAsB,CAAC,CAAD,CAAtB,CAA0BhB,SAAS,CAACI,KAApC,CADH,GACgDY,sBAAsB,CAAC,CAAD,CAAtB,CAA0BhB,SAAS,CAACI,KAApC,CADhD,GAC6F,GAFlG,CAFJ,CADiB,CAArB;AAUH;AACJ;;AACDJ,YAAAA,SAAS,CAACK,cAAV,CAAyB,UAAzB,KAAwCL,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CAAwBU,YAAD,IAAkB;AAC7E,kBAAIA,YAAY,CAACJ,SAAb,KAA2B,OAA/B,EAAwC;AACpC,oBAAII,YAAY,CAACF,KAAb,KAAuBI,SAA3B,EAAsC;AAClCU,kBAAAA,eAAe,CAACf,IAAhB,eAAqB,oBAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACjB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAW,oBAAC,gBAAD;AAAkB,oBAAA,EAAE,EAAE,CAACG,YAAY,CAACF,KAAd,CAAtB;AAA4C,oBAAA,OAAO,EAAE,CAACE,YAAY,CAACF,KAAd,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKY,sBAAsB,CAACG,MAAvB,GAAgC,CAAhC,IACGH,sBAAsB,CAAC,CAAD,CAAtB,CAA0BV,YAAY,CAACF,KAAvC,CADH,GAEGY,sBAAsB,CAAC,CAAD,CAAtB,CAA0BV,YAAY,CAACF,KAAvC,EAA8C,OAA9C,CAFH,GAE4D,GAHjE,CAFJ,CADiB,CAArB;AAWH;AACJ,eAdD,MAeK,IAAIE,YAAY,CAACJ,SAAb,KAA2B,QAA/B,EAAyC;AAC1C,oBAAII,YAAY,CAACF,KAAb,KAAuBI,SAA3B,EAAsC;AAClCU,kBAAAA,eAAe,CAACf,IAAhB,eAAqB,oBAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACjB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAW,oBAAC,gBAAD;AAAkB,oBAAA,EAAE,EAAE,CAACG,YAAY,CAACF,KAAd,CAAtB;AAA4C,oBAAA,OAAO,EAAE,CAACE,YAAY,CAACF,KAAd,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKY,sBAAsB,CAACG,MAAvB,GAAgC,CAAhC,IACGH,sBAAsB,CAAC,CAAD,CAAtB,CAA0BV,YAAY,CAACF,KAAvC,CADH,IAEGY,sBAAsB,CAAC,CAAD,CAAtB,CAA0BV,YAAY,CAACF,KAAvC,EAA8C,OAA9C,MAA2D1C,iBAAiB,CAACiD,GAFhF,GAGG,KAHH,GAGW,IAJhB,CAFJ,CADiB,CAArB;AAYH;AACJ,eAfI,MAgBA;AACD,oBAAIL,YAAY,CAACF,KAAb,KAAuBI,SAA3B,EAAsC;AAClCU,kBAAAA,eAAe,CAACf,IAAhB,eAAqB,oBAAC,GAAD;AAAK,oBAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACjB,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAAW,oBAAC,gBAAD;AAAkB,oBAAA,EAAE,EAAE,CAACG,YAAY,CAACF,KAAd,CAAtB;AAA4C,oBAAA,OAAO,EAAE,CAACE,YAAY,CAACF,KAAd,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAX,CADJ,eAEI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACKY,sBAAsB,CAACG,MAAvB,GAAgC,CAAhC,IACGH,sBAAsB,CAAC,CAAD,CAAtB,CAA0BV,YAAY,CAACF,KAAvC,CADH,GAEGY,sBAAsB,CAAC,CAAD,CAAtB,CAA0BV,YAAY,CAACF,KAAvC,CAFH,GAEmD,GAHxD,CAFJ,CADiB,CAArB;AAWH;AACJ;AACJ,aA/CuC,CAAxC;AAiDH,WA/FD;AAgGH,SAjGD;AAkGH,OAnGD;AAoGA,aAAOc,eAAP;AACH,KA7lBkB;;AAAA,SA8lBnBE,gBA9lBmB,GA8lBA,CAACC,SAAD,EAAYC,QAAZ,KAAyB;AAExC,YAAM;AAAEf,QAAAA;AAAF,UAAqB,KAAKzB,KAAhC;AACA,UAAIyC,sBAAsB,GAAG,KAAKzC,KAAL,CAAWyC,sBAAxC;AACAA,MAAAA,sBAAsB,GAAG,IAAzB;AACAhB,MAAAA,cAAc,CAACe,QAAD,CAAd,GAA2BD,SAA3B;AACA,WAAKhC,QAAL,CAAc;AAAEkB,QAAAA,cAAF;AAAkBgB,QAAAA;AAAlB,OAAd;AACH,KArmBkB;;AAAA,SAsmBnBC,WAtmBmB,GAsmBJC,QAAD,IAAc;AACxB,YAAMC,SAAS,GAAGD,QAAQ,CAACE,UAA3B;AACA,UAAIlC,UAAU,GAAG,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAAlC;AACAA,MAAAA,UAAU,CAAC,WAAD,CAAV,GAA0BiC,SAA1B;AACA,YAAME,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEpE,cADK;AAEfqE,QAAAA,IAAI,EAAE;AAAErC,UAAAA;AAAF;AAFS,OAAnB;AAIA,WAAKP,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,KA/mBkB;;AAAA,SAgnBnBG,kBAhnBmB,GAgnBE,CAACC,aAAD,EAAgBC,SAAhB,EAA2BC,OAA3B,KAAuC;AAExD,UAAI3B,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAAlD;AACAA,MAAAA,cAAc,CAAC0B,SAAD,CAAd,GAA4B7F,oBAAoB,CAACmE,cAAc,CAAC0B,SAAD,CAAf,EAA4BD,aAA5B,EAA2CE,OAA3C,CAAhD;AACA,WAAK7C,QAAL,CAAc;AAAEkB,QAAAA,cAAF;AAAkB4B,QAAAA,UAAU,EAAE;AAA9B,OAAd;AACH,KArnBkB;;AAAA,SAsnBnBC,gBAtnBmB,GAsnBA,CAACC,KAAD,EAAQC,IAAR,EAAcL,SAAd,KAA4B;AAC3C,UAAI1B,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAAlD;AACAA,MAAAA,cAAc,CAAC0B,SAAD,CAAd,GAA4B5F,wBAAwB,CAACkE,cAAc,CAAC0B,SAAD,CAAf,EAA4BK,IAA5B,CAApD;AAEA,WAAKjD,QAAL,CAAc;AACVkB,QAAAA,cADU;AACM4B,QAAAA,UAAU,EAAE;AADlB,OAAd;AAGH,KA7nBkB;;AAAA,SA8nBnBI,kBA9nBmB,GA8nBE,MAAM;AACvB,YAAMhC,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAlC;AACA,YAAMiC,aAAa,GAAGjC,cAAc,CAACkC,SAArC;AACA,YAAMC,mBAAmB,GAAGnC,cAAc,CAACmC,mBAA3C;AACA,UAAIC,YAAY,GAAGjF,iBAAiB,CAACkF,EAArC;AACA,UAAIC,aAAa,GAAG,EAApB;AACA,UAAIC,QAAQ,GAAG;AACXC,QAAAA,aAAa,EAAE,KAAK7D,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aADjD;AAEXC,QAAAA,iBAAiB,EAAEzC,cAAc,CAACyC,iBAAf,GAAmCzC,cAAc,CAACyC,iBAAlD,GAAsE,CAF9E;AAGXC,QAAAA,OAAO,EAAEvF,iBAAiB,CAACwF,MAHhB;AAIXR,QAAAA,mBAJW;AAKXS,QAAAA,cAAc,EAAE5C,cAAc,CAACmC,mBAAmB,KAAK/E,cAAc,CAACyF,IAAvC,GAA8C,oBAA9C,GAAqE,gBAAtE,CAAd,GAAwG7C,cAAc,CAACmC,mBAAmB,KAAK/E,cAAc,CAACyF,IAAvC,GAA8C,oBAA9C,GAAqE,gBAAtE,CAAtH,GAAgN;AALrN,OAAf;AAOA,YAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;;AACA,UAAIZ,mBAAmB,KAAK/E,cAAc,CAAC4F,GAA3C,EAAgD;AAC5C,YAAIf,aAAa,IAAIgB,KAAK,CAACC,OAAN,CAAcjB,aAAd,CAAjB,IAAiDA,aAAa,CAACrB,MAAd,GAAuB,CAA5E,EAA+E;AAC3EqB,UAAAA,aAAa,CAACkB,OAAd,CAAsB,CAACpB,IAAD,EAAOqB,KAAP,KAAiB;AACnC,kBAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBhB,QAAlB,CAAjB;AACA,kBAAMiB,gBAAgB,GAAGzB,IAAI,CAAC0B,IAAL,CAAUC,KAAV,CAAgB,GAAhB,CAAzB;AACA,kBAAMC,aAAa,GAAG5B,IAAI,CAAC0B,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBF,gBAAgB,CAAC5C,MAAjB,GAA0B,CAA/C,CAAtB;AACA,kBAAMgD,eAAe,GAAG5D,cAAc,CAAC4D,eAAf,GAAiC5D,cAAc,CAAC4D,eAAf,CAA+BF,KAA/B,CAAqC,GAArC,CAAjC,GAA6E,EAArG;AACA,kBAAMG,iBAAiB,GAAG7D,cAAc,CAAC4D,eAAf,GAAiC7B,IAAI,CAAC0B,IAAL,CAAUC,KAAV,CAAgB,GAAhB,EAAqBE,eAAe,CAAChD,MAAhB,GAAyB,CAA9C,CAAjC,GAAoF,EAA9G;AACA,kBAAMkD,cAAc,GAAG3B,mBAAmB,KAAK/E,cAAc,CAAC4F,GAAvC,GAA6ChD,cAAc,CAAC+D,aAAf,IAAgC/D,cAAc,CAAC+D,aAAf,GAA+B,CAA/D,IAC7D/D,cAAc,CAAC4D,eAAf,KAAmC,EAD0B,GACrBA,eAAe,CAAC,CAAD,CAAf,GAAqB,GAArB,GAA2BC,iBADN,GAC0B9H,WAAW,KAAK,GAAhB,GAAsB4H,aAD7F,GAC6G,EADpI;AAEAN,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBtB,IAAI,CAAC0B,IAA7B;AACAJ,YAAAA,QAAQ,CAAC,cAAD,CAAR,GAA2BrD,cAAc,CAACgE,YAAf,GAA8BhE,cAAc,CAACgE,YAAf,CAA4BC,IAA5B,EAA9B,GAAmE,EAA9F;AACAZ,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBlG,iBAAiB,CAAC+G,EAA1C;AACAb,YAAAA,QAAQ,CAAC,iBAAD,CAAR,GAA8BS,cAA9B;AACAT,YAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBtB,IAAI,CAACoC,IAA7B;AACAd,YAAAA,QAAQ,CAAC,cAAD,CAAR,GAA2B,KAAK1E,KAAL,CAAWH,KAAX,CAAiB4F,YAAjB,IACvB9I,+BAA+B,CAAC,KAAKqD,KAAL,CAAWH,KAAX,CAAiB4F,YAAlB,EAAgC,KAAKzF,KAAL,CAAWH,KAAX,CAAiB6F,QAAjD,CADnC;AAEAvB,YAAAA,QAAQ,CAACwB,MAAT,CAAgB,iBAAiBlB,KAAjC,EAAwCrB,IAAxC;AACAe,YAAAA,QAAQ,CAACwB,MAAT,CAAgB,mBAAmBlB,KAAnC,EAA0CU,cAA1C;AACAxB,YAAAA,aAAa,CAAC1C,IAAd,CAAmByD,QAAnB;AACH,WAlBD;AAmBAP,UAAAA,QAAQ,CAACwB,MAAT,CAAgB,WAAhB,EAA6BrC,aAAa,CAACrB,MAA3C;AACAwB,UAAAA,YAAY,GAAGjF,iBAAiB,CAACiD,GAAjC;AACH,SAtBD,MAsBO;AACHmC,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBvC,cAAc,CAACkC,SAAvC;AACAK,UAAAA,QAAQ,CAAC,cAAD,CAAR,GAA2BvC,cAAc,CAACgE,YAAf,GAA8BhE,cAAc,CAACgE,YAAf,CAA4BC,IAA5B,EAA9B,GAAmE,EAA9F;AACA1B,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBpF,iBAAiB,CAAC+G,EAA1C;AACA3B,UAAAA,QAAQ,CAAC,iBAAD,CAAR,GAA8BvC,cAAc,CAAC4D,eAA7C;AACArB,UAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBvC,cAAc,CAACuE,SAAvC;AACAhC,UAAAA,QAAQ,CAAC,cAAD,CAAR,GAA2B,KAAK5D,KAAL,CAAWH,KAAX,CAAiB4F,YAAjB,IACvB9I,+BAA+B,CAAC,KAAKqD,KAAL,CAAWH,KAAX,CAAiB4F,YAAlB,EAAgC,KAAKzF,KAAL,CAAWH,KAAX,CAAiB6F,QAAjD,CADnC;AAEA/B,UAAAA,aAAa,CAAC1C,IAAd,CAAmB2C,QAAnB;AACH;AACJ,OAjCD,MAiCO;AACHA,QAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBvC,cAAc,CAACwE,aAAf,CAA6BP,IAA7B,EAAxB;AACA1B,QAAAA,QAAQ,CAAC,cAAD,CAAR,GAA2BvC,cAAc,CAACyE,gBAAf,GAAkCzE,cAAc,CAACyE,gBAAf,CAAgCR,IAAhC,EAAlC,GAA2E,EAAtG;AACA1B,QAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwBvC,cAAc,CAAC0E,SAAf,CAAyBC,KAAzB,GAAiC3E,cAAc,CAAC0E,SAAf,CAAyBC,KAA1D,GAAkE,CAAC,CAA3F;AACApC,QAAAA,QAAQ,CAAC,iBAAD,CAAR,GAA8B,EAA9B;AACAA,QAAAA,QAAQ,CAAC,cAAD,CAAR,GAA2B,KAAK5D,KAAL,CAAWH,KAAX,CAAiB4F,YAAjB,IACvB9I,+BAA+B,CAAC,KAAKqD,KAAL,CAAWH,KAAX,CAAiB4F,YAAlB,EAAgC,KAAKzF,KAAL,CAAWH,KAAX,CAAiB6F,QAAjD,CADnC;AAEA9B,QAAAA,QAAQ,CAAC,WAAD,CAAR,GAAwB,CAAxB;AACAD,QAAAA,aAAa,CAAC1C,IAAd,CAAmB2C,QAAnB;AACH;;AACDO,MAAAA,QAAQ,CAACwB,MAAT,CAAgB,cAAhB,EAAgClC,YAAhC;AACAU,MAAAA,QAAQ,CAACwB,MAAT,CAAgB,wBAAhB,EAA0CM,IAAI,CAACC,SAAL,CAAevC,aAAa,CAAC,CAAD,CAA5B,CAA1C;AAEA,UAAIwC,UAAJ;;AACA,UAAI,KAAKnG,KAAL,CAAWH,KAAX,CAAiBuG,SAAjB,KAA+B,QAAnC,EAA6C;AACzCD,QAAAA,UAAU,GAAG;AACTE,UAAAA,SAAS,EAAE;AAAEC,YAAAA,QAAQ,EAAE,KAAKtG,KAAL,CAAWH,KAAX,CAAiB6F;AAA7B,WADF;AAETvB,UAAAA,QAAQ,EAAEA,QAFD;AAGToC,UAAAA,YAAY,EAAE,IAHL;AAITH,UAAAA,SAAS,EAAE,QAJF;AAKTI,UAAAA,QAAQ,EAAE,UALD;AAMTC,UAAAA,SAAS,EAAE;AANF,SAAb;AAQH,OATD,MAUK;AACDN,QAAAA,UAAU,GAAG;AACTE,UAAAA,SAAS,EAAE;AAAEC,YAAAA,QAAQ,EAAE,KAAKtG,KAAL,CAAWH,KAAX,CAAiB6F;AAA7B,WADF;AAETvB,UAAAA,QAAQ,EAAEA,QAFD;AAGToC,UAAAA,YAAY,EAAE,IAHL;AAITH,UAAAA,SAAS,EAAE,QAJF;AAKTI,UAAAA,QAAQ,EAAE,UALD;AAMTC,UAAAA,SAAS,EAAE;AANF,SAAb;AAQH;;AAED,aAAON,UAAP;AACH,KAjtBkB;;AAAA,SAktBnBO,SAltBmB,GAktBP,MAAM;AACd,YAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;AACA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACD;AACC,aAAK5G,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BsG,qBAA5B,KAAsD,CAAtD,IACIF,MAAM,CAACG,GAAP,CAAW,qBAAX,eACI,oBAAC,kBAAD;AACI,UAAA,UAAU,EAAE,KAAKlH,KAAL,CAAWmH,UAD3B;AAEI,UAAA,qBAAqB,EAAE,KAAKnH,KAAL,CAAWoH,qBAFtC;AAGI,UAAA,UAAU,EAAEjL,OAAO,CAACa,QAAQ,CAAC,KAAKoD,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B,iBAA5B,CAAD,EAAiD,YAAjD,EAA+D,sBAA/D,CAAT,EACd,KAAKP,KAAL,CAAWyC,UAAX,KAA0BnB,SAA1B,IAAuC,KAAKtB,KAAL,CAAWyC,UAAX,KAA0B,qBAAlE,GACM,KAAK7C,KAAL,CAAWqH,gBADjB,GACoC;AAAEC,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,IAAI,EAAE;AAAjB,WAFrB,CAHvB;AAMI,UAAA,SAAS,EAAG,KAAKnH,KAAL,CAAWyC,UAAX,KAA0BnB,SAA1B,IAAuC,KAAKtB,KAAL,CAAWoH,UAAX,KAA0B,qBAAlE,GACL,KAAKxH,KAAL,CAAWqH,gBADN,GACyB;AAAEC,YAAAA,IAAI,EAAE,CAAR;AAAWC,YAAAA,IAAI,EAAE;AAAjB,WAPxC;AAQI,UAAA,eAAe,EAAGhE,KAAD,IAAW,KAAKhD,QAAL,CAAc;AAAE8G,YAAAA,gBAAgB,EAAE9D,KAAK,CAACkE;AAA1B,WAAd,CARhC;AASI,UAAA,UAAU,EAAE,KAAKrH,KAAL,CAAWH,KAAX,CAAiBU,UATjC;AAUI,UAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QAV/B;AAWI,UAAA,cAAc,EAAE,KAAK1F,KAAL,CAAWsH,cAX/B;AAYI,UAAA,0BAA0B,EAAE,KAAKtH,KAAL,CAAW5B,0BAZ3C;AAaI,UAAA,YAAY,EAAE,KAAKmJ,kBAbvB;AAcI,UAAA,YAAY,EAAE,KAAKC,gBAdvB;AAeI,UAAA,WAAW,EAAE,KAAKxH,KAAL,CAAW3B,sBAf5B;AAgBI,UAAA,cAAc,EAAE,KAAK2B,KAAL,CAAWH,KAAX,CAAiBwB,cAhBrC;AAiBI,UAAA,UAAU,EAAC,qBAjBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAsBAsF,QAAAA,MAAM,CAACG,GAAP,CAAW,4BAAX,eACI,oBAAC,yBAAD;AACI,UAAA,UAAU,EAAE,KAAKlH,KAAL,CAAWmH,UAD3B;AAEI,UAAA,qBAAqB,EAAE,KAAKnH,KAAL,CAAWoH,qBAFtC;AAGI,UAAA,QAAQ,EAAE,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAH/B;AAII,UAAA,YAAY,EAAE,KAAK8B,gBAJvB;AAKI,UAAA,sBAAsB,EAAE5K,QAAQ,CAAC,KAAKoD,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BkH,sBAA7B,EAAqD,YAArD,EAAmE,mBAAnE,CAAR,IAAmG,EAL/H;AAMI,UAAA,eAAe,EAAGC,KAAD,IAAW,KAAK1H,KAAL,CAAW1B,eAAX,CAA2BoJ,KAA3B,EAAkC,KAAK1H,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA9D,CANhC;AAOI,UAAA,gBAAgB,EAAE,KAAK4F,gBAP3B;AAQI,UAAA,UAAU,EAAC,4BARf;AASI,UAAA,QAAQ,EAAE,KAAK3H,KAAL,CAAW4H,QATzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH;AAED,aAAOjB,MAAP;AACH,KA1wBkB;;AAAA,SA2wBnBa,gBA3wBmB,GA2wBCK,WAAD,IAAiB;AAChC,YAAMpB,SAAS,GAAGoB,WAAW,CAACpB,SAA9B;AACA,YAAMqB,QAAQ,GAAGD,WAAW,CAACpB,SAAZ,KAA0B,iBAA1B,GAA8CR,IAAI,CAACC,SAAL,CAAe2B,WAAW,CAACxG,cAA3B,CAA9C,GACb4E,IAAI,CAACC,SAAL,CAAe2B,WAAW,CAACxG,cAA3B,CADJ;AAEA,UAAIgG,SAAS,GAAG/F,SAAhB;;AACA,UAAI,KAAKtB,KAAL,CAAWyC,UAAX,KAA0B,aAA9B,EAA6C;AACzC4E,QAAAA,SAAS,GAAG,KAAKzH,KAAL,CAAWqH,gBAAvB;AACH,OAFD,MAEO,IAAI,KAAKjH,KAAL,CAAWyC,UAAX,KAA0B,YAA9B,EAA4C;AAC/C4E,QAAAA,SAAS,GAAG,KAAKzH,KAAL,CAAWmI,eAAvB;AACH,OAFM,MAEA,IAAI,KAAK/H,KAAL,CAAWyC,UAAX,KAA0B,wBAA9B,EAAwD;AAC3D4E,QAAAA,SAAS,GAAG,KAAKzH,KAAL,CAAWoI,sBAAvB;AACH;;AACD,YAAM7B,UAAU,GAAG;AACfE,QAAAA,SAAS,EAAE;AACP4B,UAAAA,YAAY,EAAEJ,WAAW,CAACI,YADnB;AAEP,WAACxB,SAAS,CAACyB,WAAV,EAAD,GAA2BJ,QAFpB;AAGPxB,UAAAA,QAAQ,EAAE,KAAKtG,KAAL,CAAWH,KAAX,CAAiB6F;AAHpB,SADI;AAMfc,QAAAA,QAAQ,EAAE,UANK;AAOfJ,QAAAA,SAAS,EAAEyB,WAAW,CAACzB,SAPR;AAQf6B,QAAAA,YAAY,EAAEJ,WAAW,CAACI,YARX;AASfxB,QAAAA,SAAS,EAAEA,SATI;AAUfhE,QAAAA,UAAU,EAAE,cAVG;AAUa4E,QAAAA;AAVb,OAAnB;AAYA,YAAM9G,UAAU,GAAG,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAApC;;AACA,UAAIxD,SAAS,CAAC,KAAKiD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,EAA8EN,WAAW,CAACI,YAA1F,CAAb,EAAsH;AAClH,cAAMvF,UAAU,GAAG;AACfC,UAAAA,QAAQ,EAAEpE,cADK;AAEfqE,UAAAA,IAAI,EAAE;AACFwF,YAAAA,SAAS,EAAE,IADT;AACeC,YAAAA,UAAU,EAAE;AAAElC,cAAAA,UAAF;AAAc5F,cAAAA;AAAd,aAD3B;AAEF+H,YAAAA,SAAS,EAAE,IAFT;AAEe7F,YAAAA,UAAU,EAAE,cAF3B;AAE2C2D,YAAAA,SAAS,EAAEyB,WAAW,CAACzB,SAFlE;AAE6E/E,YAAAA,cAAc,EAAE;AAF7F;AAFS,SAAnB;AAOA,aAAKrB,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,OATD,MASO;AACH,aAAK1C,KAAL,CAAWxC,UAAX,CAAsB2I,UAAtB,EAAkC5F,UAAlC,EAA8C,gBAA9C,EAAgE,EAAhE;AACH;AACJ,KAhzBkB;;AAAA,SAkzBnBgH,kBAlzBmB,GAkzBGG,KAAD,IAAW;AAC5B,UAAIa,mBAAmB,GAAG,KAAKvI,KAAL,CAAWH,KAAX,CAAiB0I,mBAA3C;AACA,UAAIN,YAAY,GAAG,KAAKjI,KAAL,CAAWH,KAAX,CAAiBoI,YAApC;AAEA,UAAIK,SAAS,GAAG,KAAKtI,KAAL,CAAWH,KAAX,CAAiByI,SAAjC;AACA,UAAIE,gBAAgB,GAAG,KAAKxI,KAAL,CAAWH,KAAX,CAAiB2I,gBAAxC;AACAA,MAAAA,gBAAgB,GAAG,KAAnB;AACAD,MAAAA,mBAAmB,GAAG,IAAtB;AACAD,MAAAA,SAAS,GAAG,IAAZ;AACAL,MAAAA,YAAY,GAAGP,KAAf;AACA,YAAMhF,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEpE,cADK;AAEfqE,QAAAA,IAAI,EAAE;AAAE2F,UAAAA,mBAAF;AAAuBC,UAAAA,gBAAvB;AAAyCF,UAAAA;AAAzC;AAFS,OAAnB;AAIA,WAAKtI,KAAL,CAAW5B,0BAAX,CAAsC,KAAK4B,KAAL,CAAWH,KAAX,CAAiBU,UAAvD,EAAmE,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QAApF,EAA8FhD,UAA9F,EAA0GuF,YAA1G;AAGH,KAn0BkB;;AAAA,SAq0BnBQ,aAr0BmB,GAq0BFC,QAAD,IAAc;AAC1B,WAAKC,cAAL,CAAoBC,OAApB,CAA4B,eAA5B,EAA6C,KAAK5I,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA7C,EAAkG,KAAK/I,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAAlG,EACI,KAAK/I,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADJ,EACqD,KAAK/I,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADrD,EAEI,MAAM,KAAKC,iBAAL,CAAuB,KAAKhJ,KAAL,CAAWH,KAAX,CAAiBU,UAAxC,EAAoDmI,QAApD,EAA8D,WAA9D,CAFV;AAGH,KAz0BkB;;AAAA,SA20BnBO,UA30BmB,GA20BN,MAAM;AACf,UAAIC,UAAU,GAAG,CAAC,KAAKlJ,KAAL,CAAWH,KAAX,CAAiBqJ,UAAnC;AACA,YAAMxG,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEpE,cADK;AAEfqE,QAAAA,IAAI,EAAE;AAAEsG,UAAAA;AAAF;AAFS,OAAnB;AAIA,WAAKlJ,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,KAl1BkB;;AAAA,SAo1BnByG,WAp1BmB,GAo1BL,MAAM;AAEhB,YAAMzG,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEpE,cADK;AAEfqE,QAAAA,IAAI,EAAE;AAAEsG,UAAAA,UAAU,EAAE;AAAd;AAFS,OAAnB;AAIA,WAAKlJ,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,KA31BkB;;AAAA,SA61BnB0G,cA71BmB,GA61BF,MAAM;AACnB,WAAKC,SAAL,CAAeC,OAAf,CAAuBtD,KAAvB,GAA+B,EAA/B;AACA,UAAIK,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,CAAC,mBAAD,CAAT,GAAiC,KAAKzG,KAAL,CAAW2J,aAAX,CAAyB,mBAAzB,CAAjC;AACAlD,MAAAA,SAAS,CAAC,iBAAD,CAAT,GAA+B,KAAKzG,KAAL,CAAW4J,eAA1C;;AACA,UAAI,KAAK5J,KAAL,CAAW2J,aAAX,CAAyB,mBAAzB,CAAJ,EAAmD;AAC/C,aAAKvJ,KAAL,CAAW7B,qBAAX,CAAiC,KAAKyB,KAAL,CAAW2J,aAA5C,EACI,KAAK3J,KAAL,CAAW6J,mBADf,EACoC,KAAKzJ,KAAL,CAAWH,KAAX,CAAiBU,UADrD,EACiE,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QADlF;AAEH,OAHD,MAGO;AACH1J,QAAAA,KAAK,CAAC0N,IAAN,CAAW,KAAK1J,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KAx2BkB;;AAAA,SA0/BnBY,gBA1/BmB,GA0/BAC,CAAC,IAAI;AAEpB,WAAKzJ,QAAL,CAAc;AACV+G,QAAAA,IAAI,EAAE0C,CAAC,CAAC1C,IADE;AAEVC,QAAAA,IAAI,EAAEyC,CAAC,CAACzC;AAFE,OAAd;AAKH,KAjgCkB;;AAAA,SAmgCnB0C,aAngCmB,GAmgCH,MAAM;AAClB,YAAM1D,UAAU,GAAG;AACfE,QAAAA,SAAS,EAAE;AACP,sBAAY,EACR,GAAG,KAAKrG,KAAL,CAAWH,KAAX,CAAiB6F,QADZ;AAERoE,YAAAA,OAAO,EAAE,KAAKlK,KAAL,CAAWyB,cAAX,CAA0B,eAA1B;AAFD,WADL;AAKP0I,UAAAA,QAAQ,EAAE,KAAKnK,KAAL,CAAWyB,cAAX,CAA0B,eAA1B;AALH,SADI;AAQfgH,QAAAA,UAAU,EAAE,KAAKrI,KAAL,CAAWH,KAAX,CAAiBwI;AARd,OAAnB;AAUA,WAAKrI,KAAL,CAAWtC,uBAAX,CAAmCyI,UAAnC,EAA+C,WAA/C;AACH,KA/gCkB;;AAAA,SAghCnBwB,gBAhhCmB,GAghCCqC,QAAD,IAAc;AAC7B,YAAM7D,UAAU,GAAG;AACfE,QAAAA,SAAS,EAAE;AACPxC,UAAAA,aAAa,EAAE,KAAK7D,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAA7C,IACR,KAAK7D,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAF7C;AAGPoG,UAAAA,sBAAsB,EAAEhE,IAAI,CAACC,SAAL,CAAe8D,QAAf,CAHjB;AAIP1D,UAAAA,QAAQ,EAAE,KAAKtG,KAAL,CAAWH,KAAX,CAAiB6F;AAJpB,SADI;AAOfc,QAAAA,QAAQ,EAAE,UAPK;AAQfJ,QAAAA,SAAS,EAAE,MARI;AASfK,QAAAA,SAAS,EAAE,gCATI;AAUfW,QAAAA,UAAU,EAAE;AAVG,OAAnB;AAYA,WAAKpH,KAAL,CAAWrC,cAAX,CAA0BwI,UAA1B;AACH,KA9hCkB;;AAAA,SA+hCnB+D,UA/hCmB,GA+hCN,MAAM;AACf,UAAI9B,SAAS,GAAG,KAAKpI,KAAL,CAAWH,KAAX,CAAiBuI,SAAjC;AACA,UAAIE,SAAS,GAAG,KAAKtI,KAAL,CAAWH,KAAX,CAAiByI,SAAjC;AACA,UAAI6B,oBAAoB,GAAC,KAAKnK,KAAL,CAAWH,KAAX,CAAiBsK,oBAA1C;AACA,UAAI5B,mBAAmB,GAAG,KAAKvI,KAAL,CAAWH,KAAX,CAAiB0I,mBAA3C;AACA,UAAIC,gBAAgB,GAAG,KAAKxI,KAAL,CAAWH,KAAX,CAAiB2I,gBAAxC;AACA,UAAInH,cAAc,GAAG,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAtC;;AACA,UAAI,KAAKrB,KAAL,CAAWH,KAAX,CAAiBuI,SAArB,EAAgC;AAC5B,YAAI,KAAKpI,KAAL,CAAWH,KAAX,CAAiBuG,SAAjB,KAA+B,QAA/B,IAA2C,KAAKpG,KAAL,CAAWH,KAAX,CAAiBuG,SAAjB,KAA+B,QAA9E,EAAwF;AACpFgC,UAAAA,SAAS,GAAG,KAAZ;AACAE,UAAAA,SAAS,GAAG,KAAZ;AACAjH,UAAAA,cAAc,GAAG,EAAjB;AACH,SAJD,MAKK;AACD+G,UAAAA,SAAS,GAAG,KAAZ;AACA/G,UAAAA,cAAc,CAAC,eAAD,CAAd,GAAkC,EAAlC;AACAA,UAAAA,cAAc,CAAC,eAAD,CAAd,GAAkC,EAAlC;AACH;AACJ,OAXD,MAYK;AACDiH,QAAAA,SAAS,GAAG,KAAZ;AACAC,QAAAA,mBAAmB,GAAG,KAAtB;AACAC,QAAAA,gBAAgB,GAAG,KAAnB;AACA2B,QAAAA,oBAAoB,GAAE,KAAtB;AACA9I,QAAAA,cAAc,GAAG,EAAjB;AACH;;AACD,YAAMqB,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEpE,cADK;AAEfqE,QAAAA,IAAI,EAAE;AAAE0F,UAAAA,SAAF;AAAaC,UAAAA,mBAAb;AAAiCA,UAAAA,mBAAjC;AAAsDH,UAAAA,SAAtD;AAAiE/G,UAAAA,cAAjE;AAAiF+I,UAAAA,UAAU,EAAE;AAA7F;AAFS,OAAnB;AAIA,WAAKpK,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,KA9jCkB;;AAAA,SA+jCnB2H,aA/jCmB,GA+jCH,CAACC,SAAD,EAAYvH,SAAZ,KAA0B;AACtC,UAAIuH,SAAS,IAAI,IAAjB,EAAuB;AACnB,YAAIvH,SAAS,KAAK,mBAAlB,EAAuC;AACnC,gBAAMwG,aAAa,GAAG,KAAK3J,KAAL,CAAW2J,aAAX,IAA4B,EAAlD;AACAA,UAAAA,aAAa,CAACxG,SAAD,CAAb,GAA2BuH,SAA3B;AACA,eAAKjB,SAAL,CAAeC,OAAf,CAAuBtD,KAAvB,GAA+B,EAA/B;AACA,eAAKhG,KAAL,CAAWpC,qBAAX,CAAiC0M,SAAS,CAAC/I,IAAV,CAAegJ,iBAAhD,EAAmE,KAAKvK,KAAL,CAAWH,KAAX,CAAiBU,UAApF,EAAgG,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QAAjH;AAEH,SAND,MAOK,IAAI3C,SAAS,KAAK,kBAAlB,EAAsC;AACvC,gBAAM0G,mBAAmB,GAAG,KAAK7J,KAAL,CAAW6J,mBAAX,IAAkC,EAA9D;AACAA,UAAAA,mBAAmB,CAAC1G,SAAD,CAAnB,GAAiCuH,SAAjC;AACA,eAAKnK,QAAL,CAAc;AAAEsJ,YAAAA;AAAF,WAAd;AACH,SAJI,MAMA,IAAI1G,SAAS,KAAK,sBAAlB,EAA0C;AAC3C,gBAAM1B,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;AACAA,UAAAA,cAAc,CAAC,sBAAD,CAAd,GAAyCiJ,SAAzC;AACA,eAAKnK,QAAL,CAAc;AAAEkB,YAAAA;AAAF,WAAd;AACH,SAJI,MAKA,IAAI0B,SAAS,KAAK,WAAlB,EAA+B;AAChC,gBAAM1B,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;AACAA,UAAAA,cAAc,CAAC,WAAD,CAAd,GAA8BiJ,SAA9B;AACA,eAAKnK,QAAL,CAAc;AAAEkB,YAAAA;AAAF,WAAd;AACH,SAJI,MAMA,IAAI0B,SAAS,CAACyH,aAAV,KAA4B,kBAA5B,IAAkDzH,SAAS,CAACyH,aAAV,KAA4B,WAA9E,IAA6FzH,SAAS,CAACyH,aAAV,KAA4B,aAA7H,EAA4I;AAC7I,gBAAMf,mBAAmB,GAAG,KAAK7J,KAAL,CAAW6J,mBAAX,IAAkC,EAA9D;AACAA,UAAAA,mBAAmB,CAAC1G,SAAD,CAAnB,GAAiCuH,SAAjC;AACA,eAAKnK,QAAL,CAAc;AAAEsJ,YAAAA;AAAF,WAAd;AAEA,cAAIgB,SAAS,GAAG1H,SAAS,CAAC7B,KAA1B;AACA,gBAAMG,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;;AACA,cAAIiJ,SAAJ,EAAe;AACXjJ,YAAAA,cAAc,CAACoJ,SAAD,CAAd,GAA4BH,SAA5B;AACH,WAFD,MAEO;AACHjJ,YAAAA,cAAc,CAACoJ,SAAD,CAAd,GAA4B,EAA5B;AACH;;AAED,gBAAM/H,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAEpE,cADK;AAEfqE,YAAAA,IAAI,EAAE;AAAEvB,cAAAA;AAAF;AAFS,WAAnB;AAIA,eAAKrB,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,SAlBI,MAoBA,IAAIK,SAAS,CAAC7B,KAAV,KAAoB,sBAAxB,EAAgD;AACjD,cAAIuJ,SAAS,GAAG1H,SAAS,CAAC7B,KAA1B;AACA,gBAAMG,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;;AACA,cAAIiJ,SAAJ,EAAe;AACXjJ,YAAAA,cAAc,CAACoJ,SAAD,CAAd,GAA4BH,SAA5B;AACH,WAFD,MAEO;AACHjJ,YAAAA,cAAc,CAACoJ,SAAD,CAAd,GAA4B,EAA5B;AACH;;AAED,gBAAM/H,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAEpE,cADK;AAEfqE,YAAAA,IAAI,EAAE;AAAEvB,cAAAA;AAAF;AAFS,WAAnB;AAIA,eAAKrB,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,SAdI,MAeA,IAAIK,SAAS,KAAK,OAAlB,EAA2B;AAC5B,gBAAM2H,SAAS,GAAG,KAAK9K,KAAL,CAAW8K,SAAX,IAAwB,EAA1C;AACAA,UAAAA,SAAS,CAAC3H,SAAD,CAAT,GAAuBuH,SAAvB;AACA,eAAKnK,QAAL,CAAc;AAAEuK,YAAAA;AAAF,WAAd;AACH;AACJ;AACJ,KAloCkB;;AAAA,SAooCnBC,oBApoCmB,GAooCI,CAACL,SAAD,EAAYM,OAAZ,KAAwB;AAC3C,UAAIvI,sBAAsB,GAAG,KAAKzC,KAAL,CAAWyC,sBAAxC;;AACA,UAAIuI,OAAO,CAAC5J,SAAR,KAAsB,MAA1B,EAAkC;AAC9B,cAAMK,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;AACAA,QAAAA,cAAc,CAAE,KAAIuJ,OAAO,CAAC1J,KAAM,EAApB,CAAd,GAAuCoJ,SAAvC;AACAjI,QAAAA,sBAAsB,GAAG,IAAzB;AACA,aAAKlC,QAAL,CAAc;AAAEkB,UAAAA,cAAF;AAAkBgB,UAAAA;AAAlB,SAAd;AACH,OALD,MAMK;AACD,YAAIuI,OAAO,CAAC1J,KAAR,KAAkB,mBAAtB,EAA2C;AACvC,cAAI2F,qBAAqB,GAAG,KAAK7G,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BsG,qBAAxD;AACA,cAAIsD,oBAAoB,GAAG,KAAKvK,KAAL,CAAWuK,oBAAtC;AACAtD,UAAAA,qBAAqB,GAAGyD,SAAS,CAAC/I,IAAV,CAAed,QAAf,CAAwBe,eAAhD,CAHuC,CAIvC;AACA;AACA;AACA;AACA;AACA;;AACA,gBAAMH,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;AACAA,UAAAA,cAAc,CAACuJ,OAAO,CAAC1J,KAAT,CAAd,GAAgCoJ,SAAhC;AACAjI,UAAAA,sBAAsB,GAAG,IAAzB;AACA8H,UAAAA,oBAAoB,GAAG,IAAvB;AACA,eAAKhK,QAAL,CAAc;AAAEkB,YAAAA,cAAF;AAAkBgB,YAAAA,sBAAlB;AAA0CwE,YAAAA,qBAA1C;AAAiEsD,YAAAA;AAAjE,WAAd,EAduC,CAevC;AACH,SAhBD,MAiBK;AACD,gBAAM9I,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;AACAA,UAAAA,cAAc,CAACuJ,OAAO,CAAC1J,KAAT,CAAd,GAAgCoJ,SAAhC;AACAjI,UAAAA,sBAAsB,GAAG,IAAzB;AACA,eAAKlC,QAAL,CAAc;AAAEkB,YAAAA,cAAF;AAAkBgB,YAAAA;AAAlB,WAAd;AACH;AACJ;AAEJ,KAtqCkB;;AAAA,SAuqCnBwI,sBAvqCmB,GAuqCM,CAAC1H,KAAD,EAAQ2H,SAAR,KAAsB;AAC3C,YAAMzJ,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;AACA,UAAIgB,sBAAsB,GAAG,KAAKzC,KAAL,CAAWyC,sBAAxC;;AACA,UAAIc,KAAK,CAAC4H,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AAClC,YAAI7H,KAAK,CAAC4H,MAAN,CAAajG,IAAb,KAAsB,UAA1B,EAAsC;AAClCzD,UAAAA,cAAc,CAAC,UAAD,CAAd,GAA6B,KAA7B;AACH;;AACD,YAAI8B,KAAK,CAAC4H,MAAN,CAAajG,IAAb,KAAsB,UAA1B,EAAsC;AAClCzD,UAAAA,cAAc,CAAC,UAAD,CAAd,GAA6B,KAA7B;AACH;;AACD,cAAM2E,KAAK,GAAG3E,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAA5B;;AACA,YAAIkB,KAAK,KAAK,EAAV,IAAgBA,KAAK,KAAK1E,SAA9B,EAAyC;AACrC,cAAI0E,KAAK,CAACiF,QAAN,CAAeH,SAAf,CAAJ,EAA+B;AAC3B,kBAAMrG,KAAK,GAAGuB,KAAK,CAACkF,OAAN,CAAcJ,SAAd,CAAd;;AACA,gBAAIrG,KAAK,KAAK,CAAC,CAAf,EAAkB;AACd,kBAAIA,KAAK,IAAI,CAAb,EAAgB;AACZ,sBAAM0G,UAAU,GAAGnF,KAAK,CAACkF,OAAN,CAAc,GAAd,CAAnB;;AACA,oBAAIC,UAAU,KAAK,CAAC,CAApB,EAAuB;AACnB9J,kBAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoCkB,KAAK,CAACoF,KAAN,CAAYD,UAAU,GAAG,CAAzB,CAApC;AAEH,iBAHD,MAGO;AACH9J,kBAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoC,EAApC;AACH;AACJ,eARD,MAQO;AACH;AACA,oBAAIkB,KAAK,CAACoF,KAAN,CAAY3G,KAAZ,EAAmByG,OAAnB,CAA2B,GAA3B,MAAoC,CAAC,CAAzC,EAA4C;AACxC7J,kBAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoCkB,KAAK,CAACoF,KAAN,CAAY,CAAZ,EAAe3G,KAAf,IAAwBuB,KAAK,CAACoF,KAAN,CAAY3G,KAAK,GAAGuB,KAAK,CAACoF,KAAN,CAAY3G,KAAZ,EAAmByG,OAAnB,CAA2B,GAA3B,CAAR,GAA0C,CAAtD,CAA5D;AACH,iBAFD,MAEO;AACH7J,kBAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoCkB,KAAK,CAACoF,KAAN,CAAY,CAAZ,EAAe3G,KAAK,GAAG,CAAvB,CAApC;AACH;AAEJ;AACJ;AAEJ,WAtBD,MAsBO;AACHpD,YAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoCkB,KAAK,GAAG,GAAR,GAAc8E,SAAlD;AACH;AAEJ,SA3BD,MA2BO;AACHzJ,UAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoCgG,SAApC;AACH;AACJ,OAtCD,MAuCK,IAAI3H,KAAK,CAAC4H,MAAN,CAAaC,IAAb,KAAsB,OAA1B,EAAmC;AACpC3J,QAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoCgG,SAApC;AACH,OAFI,MAGA;AACDzJ,QAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoC3B,KAAK,CAAC4H,MAAN,CAAa/E,KAAjD;AACH;;AACD3D,MAAAA,sBAAsB,GAAG,IAAzB;AACA,WAAKlC,QAAL,CAAc;AAAEkB,QAAAA,cAAF;AAAkBgB,QAAAA;AAAlB,OAAd;AACH,KAztCkB;;AAAA,SA0tCnBgJ,eA1tCmB,GA0tCD,CAAClI,KAAD,EAAQmI,SAAR,KAAsB;AACpC,YAAMjK,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAX,IAA6B,EAApD;AACA,UAAIgB,sBAAsB,GAAG,KAAKzC,KAAL,CAAWyC,sBAAxC;;AACA,UAAI,KAAKrC,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,4BAApC,EAAkE;AAC9D,YAAIjE,KAAK,CAAC4H,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AAClC,cAAI7H,KAAK,CAAC4H,MAAN,CAAajG,IAAb,KAAsB,oBAA1B,EACIzD,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoC3B,KAAK,CAAC4H,MAAN,CAAaQ,OAAb,KAAyB,IAAzB,GAAgC/M,iBAAiB,CAACwF,MAAlD,GAA2DxF,iBAAiB,CAACgN,QAAjH,CADJ,KAGInK,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoC3B,KAAK,CAAC4H,MAAN,CAAaQ,OAAb,KAAyB,IAAzB,GAAgC/M,iBAAiB,CAACiD,GAAlD,GAAwDjD,iBAAiB,CAACkF,EAA9G;;AACJ,cAAIP,KAAK,CAAC4H,MAAN,CAAajG,IAAb,KAAsB,QAA1B,EAAoC;AAChC,gBAAIzD,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,KAAsC,CAA1C,EAA6C;AACzC,kBAAIzD,cAAc,CAAC,oBAAD,CAAlB,EAA0C;AACtC,uBAAOA,cAAc,CAAC,oBAAD,CAArB;AACH;;AAED,kBAAIA,cAAc,CAAC,sBAAD,CAAlB,EAA4C;AACxC,uBAAOA,cAAc,CAAC,sBAAD,CAArB;AACH;;AACD,kBAAIA,cAAc,CAAC,aAAD,CAAlB,EAAmC;AAC/BA,gBAAAA,cAAc,CAAC,aAAD,CAAd,GAAgC,CAAhC;AACH;AACJ;AACJ;;AACD,cAAI8B,KAAK,CAAC4H,MAAN,CAAajG,IAAb,KAAsB,aAAtB,IAAuC3B,KAAK,CAAC4H,MAAN,CAAajG,IAAb,KAAsB,oBAAjE,EAAuF;AACnF,gBAAIzD,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,KAAsC,CAA1C,EAA6C;AACzC,kBAAIzD,cAAc,CAAC,oBAAD,CAAlB,EAA0C;AACtC,uBAAOA,cAAc,CAAC,oBAAD,CAArB;AACH;;AACD,kBAAIA,cAAc,CAAC,sBAAD,CAAlB,EAA4C;AACxC,uBAAOA,cAAc,CAAC,sBAAD,CAArB;AACH;AACJ;AACJ;;AAED,cAAI8B,KAAK,CAAC4H,MAAN,CAAajG,IAAb,KAAsB,kBAA1B,EAA8C;AAC1C,gBAAIzD,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,KAAsC,CAA1C,EAA6C;AACzC,kBAAIzD,cAAc,CAAC,aAAD,CAAlB,EAAmC;AAC/B,uBAAOA,cAAc,CAAC,aAAD,CAArB;AACH;;AACD,kBAAIA,cAAc,CAAC,eAAD,CAAlB,EAAqC;AACjC,uBAAOA,cAAc,CAAC,eAAD,CAArB;AACH;AACJ;AACJ;AACJ,SAxCD,MAwCO,IAAI8B,KAAK,CAAC4H,MAAN,CAAaC,IAAb,KAAsB,OAA1B,EAAmC;AACrC,cAAIM,SAAS,KAAK,eAAlB,EAAmC;AAChC,gBAAIjK,cAAc,CAAC,oBAAD,CAAlB,EAA0C;AACtC,qBAAOA,cAAc,CAAC,oBAAD,CAArB;AACH;;AACD,gBAAIA,cAAc,CAAC,sBAAD,CAAlB,EAA4C;AACxC,qBAAOA,cAAc,CAAC,sBAAD,CAArB;AACH;AACJ;;AACDA,UAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoCwG,SAApC;AACH,SAVM,MAWF;AACDjK,UAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoC3B,KAAK,CAAC4H,MAAN,CAAa/E,KAAjD;AACH;;AACD3D,QAAAA,sBAAsB,GAAG,IAAzB;AACA,aAAKlC,QAAL,CAAc;AAAEkB,UAAAA,cAAF;AAAkBgB,UAAAA;AAAlB,SAAd;AACH,OAzDD,MA0DK;AACD,YAAIc,KAAK,CAAC4H,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AAClC3J,UAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoC3B,KAAK,CAAC4H,MAAN,CAAaQ,OAAb,KAAyB,IAAzB,GAAgC/M,iBAAiB,CAACiD,GAAlD,GAAwDjD,iBAAiB,CAACkF,EAA9G;AACH,SAFD,MAEO,IAAIP,KAAK,CAAC4H,MAAN,CAAaC,IAAb,KAAsB,OAA1B,EAAmC;AACtC3J,UAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoCwG,SAApC;AACH,SAFM,MAEA;AACHjK,UAAAA,cAAc,CAAC8B,KAAK,CAAC4H,MAAN,CAAajG,IAAd,CAAd,GAAoC3B,KAAK,CAAC4H,MAAN,CAAa/E,KAAjD;AACH;;AAED,aAAK7F,QAAL,CAAc;AAAEkB,UAAAA;AAAF,SAAd;AACH;AAEJ,KAnyCkB;;AAAA,SAoyCnBoK,WApyCmB,GAoyCL,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACjC,UAAItF,SAAS,GAAG,EAAhB;AACA,UAAIF,UAAU,GAAG,EAAjB;AACA,UAAIyF,OAAO,GAAG,EAAd;AACAvF,MAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,KAAKrG,KAAL,CAAWH,KAAX,CAAiB6F,QAAzC;AACA,UAAImG,SAAS,GAAGvK,SAAhB;AACA+E,MAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,EAAxB;;AACA,UAAI,KAAKrG,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,cAApC,EAAoD;AAEhD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAf,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,EAAxB;AACAA,QAAAA,SAAS,CAAC,YAAD,CAAT,GAA0B,EAA1B;AAEA,cAAMyF,MAAM,GAAG,KAAK9L,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BC,gBAA5B,CAA6C,CAA7C,EAAgDC,QAA/D;AACAqL,QAAAA,MAAM,CAACpL,GAAP,CAAYC,GAAD,IAAS;AAChBA,UAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAkBG,MAAD,IAAY;AACzBA,YAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAqBI,SAAD,IAAe;AAG/B,kBAAIA,SAAS,CAACE,SAAV,KAAwB,OAA5B,EAAqC;AAEjCqF,gBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBvF,SAAS,CAACI,KAAhC,IAAyC,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,IAA6C;AAClFA,kBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,EAA2C,OAA3C,CAD2E;AAElF8E,kBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,EAA2C,OAA3C;AAF2E,iBAA7C,GAGrC,EAHJ;AAIAmF,gBAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBvF,SAAS,CAACI,KAAlC,IAA2C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,IACvC,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,EAA2C,OAA3C,CADuC,GAErC,EAFN;AAGH,eATD,MAUK,IAAIJ,SAAS,CAACE,SAAV,KAAwB,MAA5B,EAAoC;AACrC,oBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAJ,EAAgD;AAC5CmF,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAuB,KAAIvF,SAAS,CAACI,KAAM,EAA3C,IAAgDJ,SAAS,CAACK,cAAV,CAAyB,UAAzB,IAAuC;AACnFD,oBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA2B,KAAIP,SAAS,CAACI,KAAM,EAA/C,EAAkD,OAAlD,CAD4E;AAEnF8E,oBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA2B,KAAIP,SAAS,CAACI,KAAM,EAA/C,EAAkD,OAAlD;AAF4E,mBAAvC,GAG5C;AACAA,oBAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B,aAA1B,CADP;AAEAM,oBAAAA,KAAK,EAAE,KAAKhG,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B,eAA1B;AAFP,mBAHJ;AAOAW,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBvF,SAAS,CAACI,KAAhC,IAAyCvE,+BAA+B,CAAC,KAAKiD,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAD,EAA6C,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAA9D,CAAxE;AACAW,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBpF,IAAtB,CAA2BH,SAAS,CAACI,KAArC;AACH;;AACDmF,gBAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBvF,SAAS,CAACI,KAAlC,IAA2C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,IACvCvE,+BAA+B,CAAC,KAAKiD,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAD,EAA6C,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAA9D,CADQ,GAErC,EAFN;AAIH,eAhBI,MAiBA,IAAI5E,SAAS,CAACE,SAAV,KAAwB,QAA5B,EAAsC;AACvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,MAA+C,EAAnD,EAAuD;AACnDmF,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBvF,SAAS,CAACI,KAAhC,IAAyC,CAAzC;AACH,iBAFD,MAEO,IAAI,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,MAA+CI,SAAnD,EAA8D;AACjE+E,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBvF,SAAS,CAACI,KAAhC,IAAyC,CAAzC;AACH,iBAFM,MAGF;AACDmF,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBvF,SAAS,CAACI,KAAhC,IAAyC,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAzC;AACH;;AACD,oBAAI,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,MAA+C,EAAnD,EAAuD;AACnDmF,kBAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBvF,SAAS,CAACI,KAAlC,IAA2C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,MAA+C1C,iBAAiB,CAACiD,GAAjE,GACvC,KADuC,GAC/B,IADZ;AAEH;AACJ,eA7BI,MA8BA;AACJ;AACO4E,gBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBvF,SAAS,CAACI,KAAhC,IAAyC,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,MAA+CI,SAA/C,GACzC,KAAK1B,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,IAA2C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAA3C,GAAsF,EAD7C,GACgD,EADzF,CAFH,CAIF;AACH;;AACQmF,gBAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBvF,SAAS,CAACI,KAAlC,IAA2C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,MAA+CI,SAA/C,GAC3C,KAAK1B,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,IAA2C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAA3C,GAAsF,EAD3C,GAC8C,EADzF,CANH,CAQN;AACE;;AACDJ,cAAAA,SAAS,CAACK,cAAV,CAAyB,UAAzB,KAAwCL,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CACnCU,YAAD,IAAkB;AAEd,oBAAIA,YAAY,CAACJ,SAAb,KAA2B,OAA/B,EAAwC;AACpCqF,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBjF,YAAY,CAACF,KAAnC,IAA4C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,IACxC;AACIA,oBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,EAA8C,OAA9C,CADX;AAEI8E,oBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,EAA8C,OAA9C;AAFX,mBADwC,GAIpC,EAJR;AAKAmF,kBAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBjF,YAAY,CAACF,KAArC,IAA8C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,IAC1C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,EAA8C,OAA9C,CAD0C,GAExC,EAFN;AAGH,iBATD,MASO,IAAIE,YAAY,CAACJ,SAAb,KAA2B,MAA/B,EAAuC;AAC1C,sBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAJ,EAAmD;AAC/CmF,oBAAAA,SAAS,CAAC,UAAD,CAAT,CAAuB,KAAIjF,YAAY,CAACF,KAAM,EAA9C,IAAmDE,YAAY,CAACD,cAAb,CAA4B,UAA5B,IAA0C;AACzFD,sBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA2B,KAAID,YAAY,CAACF,KAAM,EAAlD,EAAqD,OAArD,CADkF;AAEzF8E,sBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA2B,KAAID,YAAY,CAACF,KAAM,EAAlD,EAAqD,OAArD;AAFkF,qBAA1C,GAG/C;AACAA,sBAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B,aAA1B,CADP;AAEAM,sBAAAA,KAAK,EAAE,KAAKhG,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B,eAA1B;AAFP,qBAHJ;AAOAW,oBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBjF,YAAY,CAACF,KAAnC,IAA4CvE,+BAA+B,CAAC,KAAKiD,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAD,EACvE,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QADsD,CAA3E;AAEAW,oBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBpF,IAAtB,CAA2BG,YAAY,CAACF,KAAxC;AACH;;AACDmF,kBAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBjF,YAAY,CAACF,KAArC,IAA8C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,IAC1CvE,+BAA+B,CAAC,KAAKiD,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAD,EAAgD,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAAjE,CADW,GAExC,EAFN;AAIH,iBAjBM,MAiBA,IAAItE,YAAY,CAACJ,SAAb,KAA2B,QAA/B,EAAyC;AAC5C,sBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,MAAkD,EAAtD,EAA0D;AACtDmF,oBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBjF,YAAY,CAACF,KAAnC,IAA4C,CAA5C;AACH,mBAFD,MAEO,IAAI,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,MAAkDI,SAAtD,EAAiE;AACpE+E,oBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBjF,YAAY,CAACF,KAAnC,IAA4C,CAA5C;AACH,mBAFM,MAGF;AACDmF,oBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBjF,YAAY,CAACF,KAAnC,IAA4C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAA5C;AACH;;AACD,sBAAI,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,MAAkD,EAAtD,EAA0D;AACtDmF,oBAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBjF,YAAY,CAACF,KAArC,IAA8C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,MAAkD1C,iBAAiB,CAACiD,GAApE,GAC1C,KAD0C,GAClC,IADZ;AAEH;AACJ,iBAbM,MAcF;AACJ;AACO4E,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBjF,YAAY,CAACF,KAAnC,IAA2C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,MAAkDI,SAAlD,GAC3C,KAAK1B,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,IAA8C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAA9C,GAA4F,EADjD,GACoD,EAD/F,CAFH,CAIH;AACA;;AACMmF,kBAAAA,SAAS,CAAC,YAAD,CAAT,CAAwBjF,YAAY,CAACF,KAArC,IAA+C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,MAAkDI,SAAlD,GAC/C,KAAK1B,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,IAA8C,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAA9C,GAA4F,EAD7C,GACgD,EAD/F,CANH,CAQP;AACD;AACA,eArDmC,CAAxC;AAuDH,aA7HD;AA8HH,WA/HD;AAgIH,SAjID,EAfgD,CAiJhD;AACA;AACA;AACA;AACA;;AAEAmF,QAAAA,SAAS,CAAC,UAAD,CAAT,CAAsB,eAAtB,IAAyC,KAAKzG,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,CAAvF;AAEAgF,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,EACpB,GAAGA,SAAS,CAAC,UAAD,CADQ;AAEpB,8BAAoB,KAAKzG,KAAL,CAAWyB,cAAX,CAA0B,mBAA1B,EAA+C2E,KAF/C;AAGpB,+BAAqB,KAAKhG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,CAAiD,CAAjD,EAAoDxB;AAHrD,SAAxB;AAMAlE,QAAAA,SAAS,CAAC,cAAD,CAAT,GAA4BJ,IAAI,CAACC,SAAL,CAAeG,SAAS,CAAC,UAAD,CAAxB,CAA5B;AACAA,QAAAA,SAAS,CAAC,YAAD,CAAT,GAA0BJ,IAAI,CAACC,SAAL,CAAeG,SAAS,CAAC,YAAD,CAAxB,CAA1B;AACAA,QAAAA,SAAS,CAAC,oBAAD,CAAT,GAAkCA,SAAS,CAAC,UAAD,CAAT,CAAsB,YAAtB,CAAlC;AACAA,QAAAA,SAAS,CAAC,mBAAD,CAAT,GAAiC,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,CAAiD,CAAjD,EAAoDxB,iBAArF;AACAlE,QAAAA,SAAS,CAAC,kBAAD,CAAT,GAAgC,KAAKzG,KAAL,CAAWyB,cAAX,CAA0B,mBAA1B,EAA+C2E,KAA/E;AAEAK,QAAAA,SAAS,CAAC,iBAAD,CAAT,GAA+B,KAAKrG,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDE,IAArD,GAC/B,KAAKvB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDE,IAArD,CAA0Dd,QAA1D,CAAmEe,eADpC,GAE/B,KAAKxB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDG,eAFrD;;AAGA,YAAI,KAAKxB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDE,IAArD,GACJ,KAAKvB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDE,IAArD,CAA0Dd,QAA1D,CAAmEe,eAD/D,GAEJ,KAAKxB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDG,eAArD,KAAyEhD,iBAAiB,CAACiD,GAF3F,EAEgG;AAC5F;AACA;AACA;AACA;AACA;AACA;AACA;AACA4E,UAAAA,SAAS,CAAC,qBAAD,CAAT,GAAiC;AAC7B,6BAAiB,KAAKzG,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,CADlC;AAE5B,4BAAiB,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,SAA1B,KAAsC,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,SAA1B,EAAqC2E;AAFhE,WAAjC;AAIAK,UAAAA,SAAS,CAAC,qBAAD,CAAT,GAAmCJ,IAAI,CAACC,SAAL,CAAeG,SAAS,CAAC,qBAAD,CAAxB,CAAnC;AACH;;AACD,YAAI,KAAKrG,KAAL,CAAWH,KAAX,CAAiBuG,SAAjB,KAA+B,QAAnC,EAA6C;AAEzCD,UAAAA,UAAU,GAAG;AACTK,YAAAA,QAAQ,EAAE,UADD;AAETC,YAAAA,SAAS,EAAE,UAFF;AAGTJ,YAAAA,SAAS,EAAEA,SAHF;AAITD,YAAAA,SAAS,EAAE,KAAKpG,KAAL,CAAWH,KAAX,CAAiBuG,SAJnB;AAKTsF,YAAAA,QALS;AAKCC,YAAAA,OALD;AAKUE,YAAAA,SALV;AAKqBxK,YAAAA,cAAc,EAAE,KAAKzB,KAAL,CAAWyB,cALhD;AAMTgI,YAAAA,SAAS,EAAE,KAAKA,SANP;AAOThC,YAAAA,SAAS,EAAE,KAAKzH,KAAL,CAAWyH;AAPb,WAAb;AASH,SAXD,MAYK;AACDhB,UAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAA1E;AACAsC,UAAAA,UAAU,GAAG;AACTK,YAAAA,QAAQ,EAAE,UADD;AAETC,YAAAA,SAAS,EAAE,UAFF;AAGTJ,YAAAA,SAAS,EAAEA,SAHF;AAITD,YAAAA,SAAS,EAAE,KAAKpG,KAAL,CAAWH,KAAX,CAAiBuG,SAJnB;AAKTsF,YAAAA,QALS;AAKCC,YAAAA,OALD;AAKUE,YAAAA,SALV;AAKqBxK,YAAAA,cAAc,EAAE,KAAKzB,KAAL,CAAWyB,cALhD;AAMTgI,YAAAA,SAAS,EAAE,KAAKA,SANP;AAOThC,YAAAA,SAAS,EAAE,KAAKzH,KAAL,CAAWyH;AAPb,WAAb;AASH;;AACD,cAAM9G,UAAU,GAAG,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAApC;;AACA,YAAI,KAAKP,KAAL,CAAWH,KAAX,CAAiB4C,UAAjB,KAAgC,cAApC,EAAoD;AAChD,cAAI1F,SAAS,CAAC,KAAKiD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,EAA8E,KAAKnI,KAAL,CAAWH,KAAX,CAAiBoI,YAA/F,CAAb,EAA2H;AACvH,kBAAMvF,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAEpE,cADK;AAEfqE,cAAAA,IAAI,EAAE;AACFwF,gBAAAA,SAAS,EAAE,IADT;AACeC,gBAAAA,UAAU,EAAE;AAAElC,kBAAAA,UAAF;AAAc5F,kBAAAA;AAAd,iBAD3B;AACuDmL,gBAAAA;AADvD;AAFS,aAAnB;AAMA,iBAAK1L,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,WARD,MASK;AACD,iBAAK1C,KAAL,CAAWxC,UAAX,CAAsB2I,UAAtB,EAAkC5F,UAAlC,EAA8C,WAA9C;AACH;AACJ,SAbD,MAaO;AACH,cAAI,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4ByL,gBAA5B,GAA+C,KAAKhM,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4ByL,gBAA5B,CAA6C/J,MAA7C,GAAsD,CAArG,GAAyG,KAA7G,EAAoH;AAChH,iBAAKgK,gBAAL;AACH,WAFD,MAGK;AACD,gBAAIlP,SAAS,CAAC,KAAKiD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,EAA8E,KAAKnI,KAAL,CAAWH,KAAX,CAAiBoI,YAA/F,CAAb,EAA2H;AACvH,oBAAMvF,UAAU,GAAG;AACfC,gBAAAA,QAAQ,EAAEpE,cADK;AAEfqE,gBAAAA,IAAI,EAAE;AACFwF,kBAAAA,SAAS,EAAE,IADT;AACeC,kBAAAA,UAAU,EAAE;AAAElC,oBAAAA,UAAF;AAAc5F,oBAAAA;AAAd,mBAD3B;AACuDmL,kBAAAA;AADvD;AAFS,eAAnB;AAMA,mBAAK1L,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,aARD,MASK;AACD,mBAAK1C,KAAL,CAAWxC,UAAX,CAAsB2I,UAAtB,EAAkC5F,UAAlC,EAA8C,WAA9C;AACH;AACJ;AACJ;AACJ,OAjPD,MAkPK,IAAI,KAAKP,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,gCAApC,EAAsE;AACvE,cAAM0E,MAAM,GAAG,KAAK9L,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2L,kCAA5B,CAA+D,CAA/D,EAAkEzL,QAAjF;AACA,cAAM0L,UAAU,GAAG,EAAnB;AACAL,QAAAA,MAAM,CAACpL,GAAP,CAAYC,GAAD,IAAS;AAChBA,UAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAkBG,MAAD,IAAY;AACzBA,YAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAqBI,SAAD,IAAe;AAC/B,kBAAIA,SAAS,CAACE,SAAV,KAAwB,OAA5B,EAAqC;AACjC,oBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAJ,EAAgD;AAC5CiL,kBAAAA,UAAU,CAACrL,SAAS,CAACI,KAAX,CAAV,GAA8B;AAC1BA,oBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,EAA2C,OAA3C,CADmB;AAE1B8E,oBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,EAA2C,OAA3C;AAFmB,mBAA9B;AAIH;AACJ,eAPD,MAQK;AACD,oBAAI,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAJ,EAAgD;AAC5CiL,kBAAAA,UAAU,CAACrL,SAAS,CAACI,KAAX,CAAV,GAA8B,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAA9B;AACH;AACJ;;AACDJ,cAAAA,SAAS,CAACK,cAAV,CAAyB,UAAzB,KAAwCL,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CACnCU,YAAD,IAAkB;AACd,oBAAIA,YAAY,CAACJ,SAAb,KAA2B,OAA/B,EAAwC;AACpC,sBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAJ,EAAmD;AAC/CiL,oBAAAA,UAAU,CAAC/K,YAAY,CAACF,KAAd,CAAV,GACA;AACIA,sBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,EAA8C,OAA9C,CADX;AAEI8E,sBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,EAA8C,OAA9C;AAFX,qBADA;AAKH;AACJ,iBARD,MASK;AACD,sBAAI,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAJ,EAAmD;AAC/CiL,oBAAAA,UAAU,CAAC/K,YAAY,CAACF,KAAd,CAAV,GAAiC,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAjC;AACH;AACJ;AACJ,eAhBmC,CAAxC;AAkBH,aAhCD;AAiCH,WAlCD;AAmCH,SApCD;AAqCAmF,QAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAA1E;;AACA,YAAI,KAAK7D,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6L,0BAA5B,CAAuDnK,MAAvD,GAAgE,CAApE,EAAuE;AACnEoE,UAAAA,SAAS,CAAC,iCAAD,CAAT,GACI,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6L,0BAA5B,CAAuD,CAAvD,EAA0DC,+BAD9D;AAEH,SAHD,MAIK;AACDhG,UAAAA,SAAS,CAAC,iCAAD,CAAT,GAA+C,CAA/C;AACH;;AAEDA,QAAAA,SAAS,CAAC,4BAAD,CAAT,GAA0CJ,IAAI,CAACC,SAAL,CAAeiG,UAAf,CAA1C;AACA9F,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAqB,CAArB;AACAF,QAAAA,UAAU,GAAG;AACTK,UAAAA,QAAQ,EAAE,UADD;AAETC,UAAAA,SAAS,EAAE,4BAFF;AAGTJ,UAAAA,SAAS,EAAEA,SAHF;AAITD,UAAAA,SAAS,EAAE,QAJF;AAKTsF,UAAAA,QALS;AAKCC,UAAAA,OALD;AAKUE,UAAAA,SALV;AAKqBxK,UAAAA,cAAc,EAAE,KAAKzB,KAAL,CAAWyB,cALhD;AAMTgI,UAAAA,SAAS,EAAE,KAAKA,SANP;AAOThC,UAAAA,SAAS,EAAE,KAAKzH,KAAL,CAAWyH;AAPb,SAAb;AASA,YAAI9G,UAAU,GAAG,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAAlC;;AACA,YAAI,KAAKX,KAAL,CAAWyC,sBAAf,EAAuC;AACnC,cAAItF,SAAS,CAAC,KAAKiD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,EAA8E,KAAKnI,KAAL,CAAWH,KAAX,CAAiBoI,YAA/F,CAAb,EAA2H;AACvH,kBAAMvF,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAEpE,cADK;AAEfqE,cAAAA,IAAI,EAAE;AACFwF,gBAAAA,SAAS,EAAE,IADT;AACeC,gBAAAA,UAAU,EAAE;AAAElC,kBAAAA,UAAF;AAAc5F,kBAAAA;AAAd,iBAD3B;AACuDmL,gBAAAA;AADvD;AAFS,aAAnB;AAMA,iBAAK1L,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,WARD,MASK;AACD,iBAAK1C,KAAL,CAAWxC,UAAX,CAAsB2I,UAAtB,EAAkC,KAAKnG,KAAL,CAAWH,KAAX,CAAiBU,UAAnD,EAA+D,WAA/D;AACH;AACJ,SAbD,MAcK;AACD,gBAAMmC,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAEpE,cADK;AAEfqE,YAAAA,IAAI,EAAE;AACF0F,cAAAA,SAAS,EAAE;AADT;AAFS,WAAnB;AAMA,eAAKtI,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH;AACJ,OApFI,MAqFA,IAAI,KAAK1C,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,4BAApC,EAAkE;AACnEjB,QAAAA,UAAU,GAAG,KAAK9C,kBAAL,EAAb;AACA,YAAI9C,UAAU,GAAG,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAAlC;;AACA,YAAIxD,SAAS,CAAC,KAAKiD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,EAA8E,KAAKnI,KAAL,CAAWH,KAAX,CAAiBoI,YAA/F,CAAb,EAA2H;AACvH,gBAAMvF,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAEpE,cADK;AAEfqE,YAAAA,IAAI,EAAE;AACFwF,cAAAA,SAAS,EAAE,IADT;AACeC,cAAAA,UAAU,EAAE;AAAElC,gBAAAA,UAAF;AAAc5F,gBAAAA;AAAd,eAD3B;AACuDmL,cAAAA;AADvD;AAFS,WAAnB;AAMA,eAAK1L,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,SARD,MASK;AACD,eAAK1C,KAAL,CAAWxC,UAAX,CAAsB2I,UAAtB,EAAkC,KAAKnG,KAAL,CAAWH,KAAX,CAAiBU,UAAnD,EAA+D,WAA/D;AACH;AAEJ,OAhBI,MAiBA,IAAI,KAAKP,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,sBAApC,EAA4D;AAE7D,YAAI7G,UAAU,GAAG,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAAlC;AACA,cAAMuL,MAAM,GAAG,KAAK9L,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B+L,0BAA5B,CAAuD,CAAvD,EAA0D7L,QAAzE;AACA,cAAM0L,UAAU,GAAG,EAAnB;AACA9F,QAAAA,SAAS,CAAC,UAAD,CAAT,GAAwB,EAAxB;AACAyF,QAAAA,MAAM,CAACpL,GAAP,CAAYC,GAAD,IAAS;AAChBA,UAAAA,GAAG,CAACC,QAAJ,CAAaF,GAAb,CAAkBG,MAAD,IAAY;AACzBA,YAAAA,MAAM,CAACD,QAAP,CAAgBF,GAAhB,CAAqBI,SAAD,IAAe;AAC/B,kBAAIA,SAAS,CAACE,SAAV,KAAwB,OAA5B,EAAqC;AACjC,oBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAJ,EAAgD;AAC5CiL,kBAAAA,UAAU,CAACrL,SAAS,CAACI,KAAX,CAAV,GAA8B;AAC1BA,oBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,EAA2C,OAA3C,CADmB;AAE1B8E,oBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,EAA2C,OAA3C;AAFmB,mBAA9B;AAIH;AACJ,eAPD,MAQK,IAAIJ,SAAS,CAACE,SAAV,KAAwB,MAA5B,EAAoC;AAErC,oBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAJ,EAAgD;AAC5CiL,kBAAAA,UAAU,CAAE,KAAIrL,SAAS,CAACI,KAAM,EAAtB,CAAV,GAAqCJ,SAAS,CAACK,cAAV,CAAyB,UAAzB,IAAuC;AACxED,oBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA2B,KAAIP,SAAS,CAACI,KAAM,EAA/C,EAAkD,OAAlD,CADiE;AAExE8E,oBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA2B,KAAIP,SAAS,CAACI,KAAM,EAA/C,EAAkD,OAAlD;AAFiE,mBAAvC,GAGjC;AACAA,oBAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B,aAA1B,CADP;AAEAM,oBAAAA,KAAK,EAAE,KAAKhG,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B,eAA1B;AAFP,mBAHJ;AAOAyG,kBAAAA,UAAU,CAACrL,SAAS,CAACI,KAAX,CAAV,GAA8BvE,+BAA+B,CAAC,KAAKiD,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAAD,EAA6C,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAA9D,CAA7D;AACAW,kBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBpF,IAAtB,CAA2BH,SAAS,CAACI,KAArC;AACH;AAEJ,eAdI,MAeA;AACD,oBAAI,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BF,cAA1B,CAAyCL,SAAS,CAACI,KAAnD,CAAJ,EAA+D;AAC3DiL,kBAAAA,UAAU,CAACrL,SAAS,CAACI,KAAX,CAAV,GAA8B,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BP,SAAS,CAACI,KAApC,CAA9B;AACH;AACJ;;AACDJ,cAAAA,SAAS,CAACK,cAAV,CAAyB,UAAzB,KAAwCL,SAAS,CAACF,QAAV,CAAmBF,GAAnB,CACnCU,YAAD,IAAkB;AACd,oBAAIA,YAAY,CAACJ,SAAb,KAA2B,OAA/B,EAAwC;AACpC,sBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAJ,EAAmD;AAC/CiL,oBAAAA,UAAU,CAAC/K,YAAY,CAACF,KAAd,CAAV,GACA;AACIA,sBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,EAA8C,OAA9C,CADX;AAEI8E,sBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,EAA8C,OAA9C;AAFX,qBADA;AAKH;AACJ,iBARD,MASK,IAAIE,YAAY,CAACJ,SAAb,KAA2B,MAA/B,EAAuC;AACxC,sBAAI,KAAKpB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAJ,EAAmD;AAC/CiL,oBAAAA,UAAU,CAAE,KAAI/K,YAAY,CAACF,KAAM,EAAzB,CAAV,GAAwCE,YAAY,CAACD,cAAb,CAA4B,UAA5B,IAA0C;AAC9ED,sBAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWyB,cAAX,CAA2B,KAAID,YAAY,CAACF,KAAM,EAAlD,EAAqD,OAArD,CADuE;AAE9E8E,sBAAAA,KAAK,EAAE,KAAKpG,KAAL,CAAWyB,cAAX,CAA2B,KAAID,YAAY,CAACF,KAAM,EAAlD,EAAqD,OAArD;AAFuE,qBAA1C,GAGpC;AACAA,sBAAAA,KAAK,EAAE,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B,aAA1B,CADP;AAEAM,sBAAAA,KAAK,EAAE,KAAKhG,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B,eAA1B;AAFP,qBAHJ;AAOAyG,oBAAAA,UAAU,CAAC/K,YAAY,CAACF,KAAd,CAAV,GAAiCvE,+BAA+B,CAAC,KAAKiD,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAD,EAC5D,KAAKlB,KAAL,CAAWH,KAAX,CAAiB6F,QAD2C,CAAhE;AAEAW,oBAAAA,SAAS,CAAC,UAAD,CAAT,CAAsBpF,IAAtB,CAA2BG,YAAY,CAACF,KAAxC;AACH;AAEJ,iBAdI,MAeA;AACD,sBAAI,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAJ,EAAmD;AAC/CiL,oBAAAA,UAAU,CAAC/K,YAAY,CAACF,KAAd,CAAV,GAAiC,KAAKtB,KAAL,CAAWyB,cAAX,CAA0BD,YAAY,CAACF,KAAvC,CAAjC;AACH;AACJ;AACJ,eA/BmC,CAAxC;AAiCH,aA9DD;AA+DH,WAhED;AAiEH,SAlED;AAmEAmF,QAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAA1E;;AACA,YAAI,KAAK7D,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BgM,kBAA5B,CAA+CtK,MAA/C,GAAwD,CAA5D,EAA+D;AAC3DoE,UAAAA,SAAS,CAAC,uBAAD,CAAT,GACI,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BgM,kBAA5B,CAA+C,CAA/C,EAAkDC,qBADtD;AAEH,SAHD,MAGO;AACHnG,UAAAA,SAAS,CAAC,uBAAD,CAAT,GAAqC,CAArC;AACH,SA/E4D,CAgF7D;;;AACAA,QAAAA,SAAS,CAAC,kBAAD,CAAT,GAAgCJ,IAAI,CAACC,SAAL,CAAeiG,UAAf,CAAhC;AACA9F,QAAAA,SAAS,CAAC,OAAD,CAAT,GAAqB,CAArB;AACAF,QAAAA,UAAU,GAAG;AACTK,UAAAA,QAAQ,EAAE,UADD;AAETC,UAAAA,SAAS,EAAE,4BAFF;AAGTJ,UAAAA,SAAS,EAAEA,SAHF;AAITD,UAAAA,SAAS,EAAE,QAJF;AAKTsF,UAAAA,QALS;AAKCC,UAAAA,OALD;AAKUE,UAAAA,SALV;AAKqBxK,UAAAA,cAAc,EAAE,KAAKzB,KAAL,CAAWyB,cALhD;AAMTgI,UAAAA,SAAS,EAAE,KAAKA,SANP;AAOThC,UAAAA,SAAS,EAAE,KAAKzH,KAAL,CAAWyH;AAPb,SAAb;;AASA,YAAI,KAAKzH,KAAL,CAAWyC,sBAAf,EAAuC;AACnC,cAAItF,SAAS,CAAC,KAAKiD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,EAA8E,KAAKnI,KAAL,CAAWH,KAAX,CAAiBoI,YAA/F,CAAb,EAA2H;AACvH,kBAAMvF,UAAU,GAAG;AACfC,cAAAA,QAAQ,EAAEpE,cADK;AAEfqE,cAAAA,IAAI,EAAE;AACFwF,gBAAAA,SAAS,EAAE,IADT;AACeC,gBAAAA,UAAU,EAAE;AAAElC,kBAAAA,UAAF;AAAc5F,kBAAAA;AAAd,iBAD3B;AACuDmL,gBAAAA;AADvD;AAFS,aAAnB;AAMA,iBAAK1L,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,WARD,MASK;AACD,iBAAK1C,KAAL,CAAWxC,UAAX,CAAsB2I,UAAtB,EAAkC,KAAKnG,KAAL,CAAWH,KAAX,CAAiBU,UAAnD,EAA+D,WAA/D;AACH;AACJ,SAbD,MAcK;AACD,gBAAMmC,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAEpE,cADK;AAEfqE,YAAAA,IAAI,EAAE;AACF0F,cAAAA,SAAS,EAAE;AADT;AAFS,WAAnB;AAMA,eAAKtI,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH;AACJ,OAnHI,MAoHA;AACD,YAAI,KAAK1C,KAAL,CAAWH,KAAX,CAAiBuG,SAAjB,KAA+B,QAAnC,EAA6C;AACzC,cAAImC,mBAAmB,GAAG,KAAKvI,KAAL,CAAWH,KAAX,CAAiB0I,mBAA3C;AACA,cAAIkE,MAAM,GAAG,EAAb;AACA,cAAIC,OAAO,GAAG,EAAd;AACArG,UAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAA1E;;AACA,cAAI,KAAKjE,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,EAAkDY,MAAlD,GAA2D,CAA/D,EAAkE;AAC9DwK,YAAAA,MAAM,GAAG,KAAK7M,KAAL,CAAWyB,cAAX,CAA0BsL,oBAA1B,CAA+CjM,GAA/C,CAAmDgB,IAAI,IAAI;AAChE,qBAAO;AACH,gCAAgBA,IAAI,CAACR,KADlB;AAEH,gCAAgBQ,IAAI,CAACsE,KAFlB;AAGH,iCAAiB,KAAKpG,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,CAH5D;AAIH,iCAAiB,KAAKrB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B;AAJ3D,eAAP;AAMH,aAPQ,CAAT;AAQA6I,YAAAA,OAAO,CAAC,cAAD,CAAP,GAAwB,EAAxB,CAT8D,CAU/D;;AACE,iBAAK9M,KAAL,CAAWyB,cAAX,CAA0BsL,oBAA1B,CAA+CjM,GAA/C,CAAmDgB,IAAI,IAAI;AACxDgL,cAAAA,OAAO,CAAC,cAAD,CAAP,IAA0BhL,IAAI,CAACsE,KAAL,GAAW,GAArC;AACH,aAFA;AAGD0G,YAAAA,OAAO,GAAC;AACJ,+BAAiB,KAAK9M,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,CAD3D;AAEJ,+BAAiB,KAAKrB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAF1D;AAGJ,8BAAe6I,OAAO,CAAC,cAAD,CAAP,CAAwBE,SAAxB,CAAkC,CAAlC,EAAqCF,OAAO,CAAC,cAAD,CAAP,CAAwBzK,MAAxB,GAAiC,CAAtE;AAHX,aAAR;AAKH,WAnBD,MAoBK;AACDwK,YAAAA,MAAM,CAACxL,IAAP,CAAY;AACR,8BAAgB,KAAKrB,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,EAAkD,CAAlD,EAAqDH,KAD7D;AAER,8BAAgB,KAAKtB,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,EAAkD,CAAlD,EAAqD2E,KAF7D;AAGR,+BAAiB,KAAKpG,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,CAHvD;AAIR,+BAAiB,KAAKrB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B;AAJtD,aAAZ;AAMJ6I,YAAAA,OAAO,GAAC;AACJ,+BAAiB,KAAK9M,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,CAD3D;AAEJ,+BAAiB,KAAKrB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAF1D;AAGH,8BAAiB,KAAKjE,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,EAAkD,CAAlD,EAAqD2E;AAHnE,aAAR;AAKC;;AACDK,UAAAA,SAAS,CAAC,qBAAD,CAAT,GAAmCJ,IAAI,CAACC,SAAL,CAAeuG,MAAf,CAAnC;AACApG,UAAAA,SAAS,CAAC,qBAAD,CAAT,GAAmCJ,IAAI,CAACC,SAAL,CAAewG,OAAf,CAAnC;AACAvG,UAAAA,UAAU,GAAG;AACTK,YAAAA,QAAQ,EAAE,UADD;AAETC,YAAAA,SAAS,EAAE,iBAFF;AAGTJ,YAAAA,SAAS,EAAEA,SAHF;AAITD,YAAAA,SAAS,EAAE,QAJF;AAKTmC,YAAAA,mBAAmB,EAAEA,mBALZ;AAMTlH,YAAAA,cAAc,EAAE,KAAKzB,KAAL,CAAWyB,cANlB;AAOTgI,YAAAA,SAAS,EAAE,KAAKA;AAPP,WAAb;AASH,SAjDD,MAkDK;AACD,cAAIwD,SAAS,GAAG,EAAhB;AACAxG,UAAAA,SAAS,CAAC,eAAD,CAAT,GAA6B,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAA1E;;AACA,cAAIS,KAAK,CAACC,OAAN,CAAc,KAAK3E,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,CAAd,CAAJ,EAAsE;AAClEwL,YAAAA,SAAS,CAAC5L,IAAV,CAAe;AACX,8BAAgB,KAAKrB,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,EAAkD,CAAlD,EAAqDH,KAD1D;AAEX,8BAAgB,KAAKtB,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,EAAkD,CAAlD,EAAqD2E,KAF1D;AAGX,+BAAiB,KAAKpG,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,CAHpD;AAIX,+BAAiB,KAAKrB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B;AAJnD,aAAf;AAMH,WAPD,MAQK;AACDgJ,YAAAA,SAAS,CAAC5L,IAAV,CAAe;AACX,8BAAgB,KAAKrB,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,EAAkDH,KADvD;AAEX,8BAAgB,KAAKtB,KAAL,CAAWyB,cAAX,CAA0B,sBAA1B,EAAkD2E,KAFvD;AAGX,+BAAiB,KAAKpG,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,CAHpD;AAIX,+BAAiB,KAAKrB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B;AAJnD,aAAf;AAMH;;AACDwC,UAAAA,SAAS,CAAC,qBAAD,CAAT,GAAmCJ,IAAI,CAACC,SAAL,CAAe2G,SAAf,CAAnC;AACAxG,UAAAA,SAAS,CAAC,iBAAD,CAAT,GAA+B;AAC3B,6BAAiB,KAAKzG,KAAL,CAAWyB,cAAX,CAA0B,eAA1B,KAA8C,KAAKzB,KAAL,CAAWyB,cAAX,CAA0B,eAA1B;AADpC,WAA/B;AAIAgF,UAAAA,SAAS,CAAC,sBAAD,CAAT,GAAoC,KAAKzG,KAAL,CAAWyB,cAAX,CAA0ByL,mCAA9D;AAEA3G,UAAAA,UAAU,GAAG;AACTK,YAAAA,QAAQ,EAAE,UADD;AAETC,YAAAA,SAAS,EAAE,iBAFF;AAGTJ,YAAAA,SAAS,EAAEA,SAHF;AAITkC,YAAAA,mBAAmB,EAAE,KAJZ;AAKTnC,YAAAA,SAAS,EAAE,QALF;AAMT/E,YAAAA,cAAc,EAAE,KAAKzB,KAAL,CAAWyB,cANlB;AAOTgI,YAAAA,SAAS,EAAE,KAAKA;AAPP,WAAb;AASH;;AACD,cAAM9I,UAAU,GAAG,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAApC;;AACA,YAAIxD,SAAS,CAAC,KAAKiD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,EAA8E,KAAKnI,KAAL,CAAWH,KAAX,CAAiBoI,YAA/F,CAAb,EAA2H;AACvH,gBAAMvF,UAAU,GAAG;AACfC,YAAAA,QAAQ,EAAEpE,cADK;AAEfqE,YAAAA,IAAI,EAAE;AACFwF,cAAAA,SAAS,EAAE,IADT;AACeC,cAAAA,UAAU,EAAE;AAAElC,gBAAAA,UAAF;AAAc5F,gBAAAA;AAAd,eAD3B;AACuDmL,cAAAA;AADvD;AAFS,WAAnB;AAMA,eAAK1L,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,SARD,MASK;AACD,eAAK1C,KAAL,CAAWxC,UAAX,CAAsB2I,UAAtB,EAAkC5F,UAAlC,EAA8C,WAA9C;AACH;AACJ;AACJ,KA51DkB;;AAAA,SA62DnBwM,oBA72DmB,GA62DI,CAAC/G,KAAD,EAAQlB,IAAR,KAAiB;AACpC,UAAIzD,cAAc,GAAG,KAAKzB,KAAL,CAAWyB,cAAhC,CADoC,CAEpC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAA,MAAAA,cAAc,CAACyD,IAAD,CAAd,GAAuBkB,KAAvB;AACA,WAAK7F,QAAL,CAAc;AAAEkB,QAAAA;AAAF,OAAd,EAboC,CAepC;AAEA;AACA;AAEH,KAj4DkB;;AAAA,SAk5DnB4K,gBAl5DmB,GAk5DA,MAAM;AACrB,WAAKtD,cAAL,CAAoBC,OAApB,CAA4B,cAA5B,EAA4C,eAA5C,EAA6D,KAAK5I,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAA7D,EACI,IADJ,EACU,QADV,EACoB,MAAM,KAAKiE,aAAL,EAD1B;AAEH,KAr5DkB;;AAAA,SAo8DnBC,UAp8DmB,GAo8DN,MAAM;AACf,WAAK5D,SAAL,CAAeC,OAAf,CAAuBtD,KAAvB,GAA+B,EAA/B;AACA,UAAIK,SAAS,GAAG,EAAhB;AACAA,MAAAA,SAAS,CAAC,mBAAD,CAAT,GAAiC,KAAKzG,KAAL,CAAW2J,aAAX,CAAyB,mBAAzB,CAAjC;AACAlD,MAAAA,SAAS,CAAC,iBAAD,CAAT,GAA+B,KAAKzG,KAAL,CAAW4J,eAA1C;AACA,WAAKrJ,QAAL,CAAc;AAAE8G,QAAAA,gBAAgB,EAAE;AAAEC,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,IAAI,EAAE;AAAjB;AAApB,OAAd;;AACA,UAAI,KAAKvH,KAAL,CAAW2J,aAAX,CAAyB,mBAAzB,CAAJ,EAAmD;AAC/C,aAAKvJ,KAAL,CAAW/B,iBAAX,CAA6B,KAAK+B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAAzD,EAA+E,KAAK/L,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2M,wBAA3G,EACI,KAAKlN,KAAL,CAAWH,KAAX,CAAiBU,UADrB,EACiC,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QADlD;AAEH,OAHD,MAGO;AACH1J,QAAAA,KAAK,CAAC0N,IAAN,CAAW,KAAK1J,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACH;AACJ,KAh9DkB;;AAEf,UAAM1B,UAAS,GAAG;AACdH,MAAAA,IAAI,EAAE,CADQ;AAEdC,MAAAA,IAAI,EAAE,KAAKnH,KAAL,CAAWH,KAAX,CAAiB+H,QAAjB,GAA4BuF,QAAQ,CAAC,KAAKnN,KAAL,CAAWH,KAAX,CAAiB+H,QAAjB,CAA0B,EAA1B,CAAD,CAApC,GAAsE;AAF9D,KAAlB;AAIA,SAAKhI,KAAL,GAAa;AACTwN,MAAAA,YAAY,EAAE,EADL;AAETnG,MAAAA,gBAAgB,EAAE;AAAEC,QAAAA,IAAI,EAAE,CAAR;AAAWC,QAAAA,IAAI,EAAE;AAAjB,OAFT;AAGTkG,MAAAA,KAAK,EAAE,EAHE;AAIThM,MAAAA,cAAc,EAAE,EAJP;AAKTiM,MAAAA,aAAa,EAAE,EALN;AAMTlH,MAAAA,SAAS,EAAE,EANF;AAOTsE,MAAAA,SAAS,EAAEpJ,SAPF;AAQTmB,MAAAA,UAAU,EAAEnB,SARH;AASTiI,MAAAA,aAAa,EAAEjI,SATN;AAUTe,MAAAA,sBAAsB,EAAE,KAVf;AAWT8H,MAAAA,oBAAoB,EAAE,KAXb;AAYTV,MAAAA,mBAAmB,EAAEnI,SAZZ;AAaTkI,MAAAA,eAAe,EAAE,EAbR;AAcTxC,MAAAA,qBAAqB,EAAE,EAdd;AAeTuG,MAAAA,aAAa,EAAEjM,SAfN;AAgBTyF,MAAAA,UAAU,EAAE,IAAIH,GAAJ,EAhBH;AAiBT4G,MAAAA,UAAU,EAAE,EAjBH;AAkBTtG,MAAAA,IAAI,EAAE,CAlBG;AAmBTC,MAAAA,IAAI,EAAE,KAAKnH,KAAL,CAAWH,KAAX,CAAiB+H,QAAjB,IAA6B,KAAK5H,KAAL,CAAWH,KAAX,CAAiB+H,QAAjB,CAA0B,CAA1B,CAnB1B;AAoBTP,MAAAA,SAAS,EAAEA,UApBF;AAqBTzE,MAAAA,IAAI,EAAE,EArBG;AAsBTxC,MAAAA,0BAA0B,EAAE;AAtBnB,KAAb;AAwBA,SAAKiJ,SAAL,GAAiBjO,KAAK,CAACqS,SAAN,EAAjB;AACA,SAAK9E,cAAL,GAAsB,IAAI9J,cAAJ,EAAtB;AACH;;AAC8B,SAAxB6O,wBAAwB,CAAC1N,KAAD,EAAQJ,KAAR,EAAe;AAC1C,QAAII,KAAK,CAACH,KAAN,CAAYuN,YAAZ,KAA6B,EAA7B,IAAmCpN,KAAK,CAACH,KAAN,CAAYuN,YAAZ,KAA6BxN,KAAK,CAACwN,YAA1E,EAAwF;AACpFpR,MAAAA,KAAK,CAAC0N,IAAN,CAAW1J,KAAK,CAACH,KAAN,CAAYuN,YAAvB;AACApN,MAAAA,KAAK,CAACH,KAAN,CAAYuN,YAAZ,GAA2B,EAA3B;AACH;;AACD,QAAIpN,KAAK,CAACH,KAAN,CAAYwN,KAAZ,KAAsBzN,KAAK,CAACyN,KAAhC,EAAuC;AACnCrR,MAAAA,KAAK,CAACqR,KAAN,CAAYrN,KAAK,CAACH,KAAN,CAAYwN,KAAxB;AACArN,MAAAA,KAAK,CAACH,KAAN,CAAYwN,KAAZ,GAAoB,EAApB;AACH;;AACD,WAAO,IAAP;AACH;;AAMDM,EAAAA,MAAM,GAAG;AACP;AACE,UAAMC,KAAK,GAAG,KAAKhO,KAAL,CAAWmH,UAAX,CAAsB8G,GAAtB,CAA0B,aAA1B,KAA4C,KAAKjO,KAAL,CAAWmH,UAAX,CAAsB+G,GAAtB,CAA0B,aAA1B,EAAyCC,YAAnG;AACA,UAAMC,MAAM,GAAG,KAAKpO,KAAL,CAAWmH,UAAX,CAAsB8G,GAAtB,CAA0B,cAA1B,KAA6C,KAAKjO,KAAL,CAAWmH,UAAX,CAAsB+G,GAAtB,CAA0B,cAA1B,EAA0CC,YAAtG;AACA,UAAMrF,QAAQ,GAAG,KAAK9I,KAAL,CAAWmH,UAAX,CAAsB8G,GAAtB,CAA0B,gBAA1B,KAA+C,KAAKjO,KAAL,CAAWmH,UAAX,CAAsB+G,GAAtB,CAA0B,gBAA1B,EAA4CC,YAA5G;AACA,UAAME,cAAc,GAAG,KAAKrO,KAAL,CAAWmH,UAAX,CAAsB8G,GAAtB,CAA0B,+BAA1B,KAChB,KAAKjO,KAAL,CAAWmH,UAAX,CAAsB+G,GAAtB,CAA0B,+BAA1B,EAA2DC,YADlE;AAEA,UAAM/P,mBAAmB,GAAG,KAAK4B,KAAL,CAAWmH,UAAX,CAAsB8G,GAAtB,CAA0B,uBAA1B,KACrB,KAAKjO,KAAL,CAAWmH,UAAX,CAAsB+G,GAAtB,CAA0B,uBAA1B,EAAmDC,YAD1D;AAEA,QAAIG,cAAc,GAAG,EAArB;AACA,SAAKlO,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BT,QAA5B,GAAuC,KAAKE,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BT,QAA5B,IACnClD,QAAQ,CAAC,KAAKoD,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BT,QAA7B,EAAuC,YAAvC,EAAqD,eAArD,CADZ;AAEA,SAAKE,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B4N,YAA5B,GAA2C,KAAKnO,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B4N,YAA5B,IACvCvR,QAAQ,CAAC,KAAKoD,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B4N,YAA7B,EAA2C,WAA3C,EAAwD,mBAAxD,CADZ;AAEA,SAAKnO,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6N,oBAA5B,GAAmD,KAAKpO,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6N,oBAA5B,IAC/CxR,QAAQ,CAAC,KAAKoD,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6N,oBAA7B,EAAmD,WAAnD,EAAgE,kBAAhE,CADZ;;AAEA,QAAI,KAAKpO,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2M,wBAA5B,IACA,KAAKlN,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2M,wBAA5B,CAAqDmB,eAArD,KAAyE7P,iBAAiB,CAACiD,GAD/F,EACoG;AAChG,UAAI,KAAKzB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAAhC,EAAkD;AAC9C,eAAO,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C,SAA7C,CAAP;AACA,eAAO,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C,eAA7C,CAAP;AACH;AACJ,KAtBI,CAwBL;AACA;AACA;AACA;;;AACA,QAAIuM,oBAAoB,GAAG,EAA3B,CA5BK,CA8BL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIC,eAAe,GAAG,EAAtB;AACA,QAAIC,2BAA2B,GAAG,EAAlC,CAvCK,CAwCL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,WAAW,GAAG;AAChBC,MAAAA,aAAa,EAAE,UADC;AACWC,MAAAA,cAAc,EAAE,kBAD3B;AAC+CC,MAAAA,eAAe,EAAE,eADhE;AAEhBC,MAAAA,QAAQ,EAAE,0BAFM;AAEsBC,MAAAA,gBAAgB,EAAE;AAAExI,QAAAA,QAAQ,EAAE,KAAKtG,KAAL,CAAWH,KAAX,CAAiB6F;AAA7B,OAFxC;AAGhBnF,MAAAA,UAAU,EAAE,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAHb;AAIhB;AACAgO,MAAAA,eAAe,EAAE,CAAC,KAAKvO,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,IACd9I,IAAI,CAAC+I,KAAL,CAAW,KAAKhP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,CAA+C,UAA/C,EAA2D/I,KAAtE,EAA6E,iBAA7E,EAAgG,CAAhG,EAAmG,iBAAnG,CADc,IAEdC,IAAI,CAAC+I,KAAL,CAAW,KAAKhP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,CAA+C,UAA/C,EAA2D/I,KAAtE,EAA6E,iBAA7E,EAAgG,CAAhG,EAAmG,iBAAnG,CAFa;AALD,KAApB;AASA,SAAKhG,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,4BAAhC,IAAiE,KAAKpH,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,IAC7D,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgCmC,mBAAhC,KAAwD/E,cAAc,CAACyF,IAD3E,GAEIsK,2BAA2B,GAAG,CAC1B;AAAE,iBAAW,cAAb;AAA6B,mBAAa,eAA1C;AAA2D,mBAAa,IAAxE;AAA8E,wBAAkB,YAAhG;AAA8G,qBAAe;AAA7H,KAD0B,EAE1B;AAAE,iBAAW,cAAb;AAA6B,mBAAa,WAA1C;AAAuD,mBAAa,IAApE;AAA0E,wBAAkB,YAA5F;AAA0G,qBAAe;AAAzH,KAF0B,CAFlC,GAOIA,2BAA2B,GAAG,CAC1B;AAAE,iBAAW,UAAb;AAAyB,mBAAa,WAAtC;AAAmD,mBAAa,IAAhE;AAAsE,wBAAkB,YAAxF;AAAsG,qBAAe;AAArH,KAD0B,CAPlC;AAWA,UAAMS,8BAA8B,GAAG,CACnC;AACI,mBAAa,KADjB;AACwB,iBAAW,qBADnC;AAC0D,mBAAa,sBADvE;AAEI,wBAAkB,YAFtB;AAEoC,qBAAe;AAFnD,KADmC,CAAvC;AAMA,UAAMC,cAAc,GAAG,KAAKtP,KAAL,CAAWuP,UAAX,IAAyB,EAAhD;AACA,wBACI,uDAEI;AAAK,MAAA,SAAS,EAAC,8DAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,cAAc,CAACjN,MAAf,GAAwB,CAAxB,gBACG,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,mBAAD;AAAqB,MAAA,cAAc,EAAEiN,cAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADH,GAIK,EALV,eAOI,oBAAC,GAAD;AAAK,MAAA,SAAS,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,UAAD;AACI,MAAA,aAAa,EAAE,KAAKlP,KAAL,CAAW6I,IAAX,CAAgBC,aADnC;AAEI,MAAA,UAAU,EAAE,UAFhB;AAGI,MAAA,UAAU,EAAE,KAAK9I,KAAL,CAAWH,KAAX,CAAiBU,UAHjC;AAII,MAAA,QAAQ,EAAE,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QAJ/B,CAKI;AALJ;AAMI,MAAA,UAAU,EAAE,KAAK1F,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6O,YAA5B,IAA4C,KAAKpP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BT,QANxF;AAOI,MAAA,eAAe,EAAGuP,MAAD,IAAY,KAAKrP,KAAL,CAAWjC,kBAAX,CAA8BsR,MAA9B,EAAsC,KAAKrP,KAAL,CAAWH,KAAX,CAAiBU,UAAvD,EAAmE,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QAApF,CAPjC;AAQI,MAAA,cAAc,EAAE,KAAK1F,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,IAAgD,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBARhG;AASI,MAAA,eAAe,EAAC,eATpB,CAUI;AACA;AACA;AACA;AACA;AACA;AACA;AAhBJ;AAiBI,MAAA,SAAS,EAAE,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,IACP9I,IAAI,CAAC+I,KAAL,CAAW,KAAKhP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,CAA+C,UAA/C,EAA2D/I,KAAtE,EAA6E,iBAA7E,EAAgG,CAAhG,EAAmG,WAAnG,CAlBR;AAmBI,MAAA,UAAU,EACN,KAAKhG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,IACA9I,IAAI,CAAC+I,KAAL,CAAW,KAAKhP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,CAA+C,UAA/C,EAA2D/I,KAAtE,EAA6E,iBAA7E,EAAgG,CAAhG,EAAmG,YAAnG,CADA,IAEAC,IAAI,CAAC+I,KAAL,CAAW,KAAKhP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,CAA+C,UAA/C,EAA2D/I,KAAtE,EAA6E,iBAA7E,EAAgG,CAAhG,EAAmG,YAAnG,CAHM,CAIN;AAvBR;AAyBI,MAAA,UAAU,EAAC,KAzBf;AA0BI,MAAA,gBAAgB,EAAE,KAAKhG,KAAL,CAAWvC,gBA1BjC;AA2BI,MAAA,WAAW,EAAEgR,WA3BjB;AA4BI,MAAA,qBAAqB,EAAE,KAAK7O,KAAL,CAAWoH,qBA5BtC;AA6BI,MAAA,KAAK,EAAE4G,KA7BX;AA8BI,MAAA,SAAS,EAAE,KAAKvE,SA9BpB;AA+BI,MAAA,UAAU,EAAE,KAAK4D,UA/BrB;AAgCI,MAAA,UAAU,EAAE,KAhChB;AAiCI,MAAA,UAAU,EAAE,KAAKhE,UAjCrB;AAkCI,MAAA,WAAW,EAAE,KAAKE,WAlCtB;AAmCI,MAAA,cAAc,EAAE,IAnCpB;AAoCI,MAAA,cAAc,EAAE,KAAKC,cApCzB;AAqCI,MAAA,eAAe,EAAE,CACb;AACI,mCACI,oBAAC,cAAD;AACI,UAAA,aAAa,EAAE,KAAKxJ,KAAL,CAAW0N,aAAX,IAA4B,EAD/C;AAEI,UAAA,eAAe,EAAE,KAAK1N,KAAL,CAAW4J,eAAX,IAA8B,EAFnD;AAGI,UAAA,cAAc,EAAE,KAAK5J,KAAL,CAAW2J,aAAX,IAA4B,EAHhD,CAGmD;AAHnD;AAII,UAAA,mBAAmB,EAAE,KAAK3J,KAAL,CAAW6J,mBAAX,IAAkC,EAJ3D;AAKI,UAAA,aAAa,EAAE,KAAKY,aALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFR,OADa,CArCrB;AAiDI,MAAA,SAAS,EAAE,MAAM,KAAKrK,KAAL,CAAWlC,mBAAX,CACb,QADa,EACH,KAAKkC,KAAL,CAAWH,KADR,EACe,KAAKD,KAAL,CAAW2J,aAD1B,EAEbqE,KAFa,EAEN,KAAK5N,KAAL,CAAWH,KAAX,CAAiBU,UAFX,EAGb,KAAKX,KAAL,CAAWyB,cAHE,CAjDrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eA0DI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,SAAS,EAAC,oBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKrB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BT,QAA5B,IAAwC,KAAKE,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BT,QAA5B,CAAqCmC,MAArC,GAA8C,CAAtF,IAA2F,KAAKjC,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAAvH,gBACG,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,SAAS,EAAC,oBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,GACG,KAAK/L,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C,eAA7C,CADH,GACmE,EAFxE,CADJ,eAKI,oBAAC,IAAD,CAAM,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,yCAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,+BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,oBAAC,UAAD;AACI,MAAA,SAAS,EAAG,oBAAmB,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAC3BwB,gBAD2B,CACV,YADU,MACQ,KADR,GAE3B,iBAF2B,GAEP,gBAAiB,cAH7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIK,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CACA,YADA,MACkB,KADlB,GAEG,KAFH,GAEW,IANhB,CAJJ,CADJ,eAeI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,YAAD;AAAc,MAAA,KAAK,EAAC,QAApB;AAA6B,MAAA,cAAc,EAAC,OAA5C;AAAoD,MAAA,EAAE,EAAC,mBAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,kCAApB;AAAuD,MAAA,IAAI,EAAC,GAA5D;AACI,kBAAU,KAAK/B,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADd;AAEI,kBAAS,mBAFb;AAGI,MAAA,OAAO,EAAGa,CAAD,IACL,KAAK5J,KAAL,CAAWlC,mBAAX,CACI,QADJ,EACc,KAAKkC,KAAL,CAAWH,KADzB,EACgC,KAAKD,KAAL,CAAW2J,aAD3C,EAEIyE,MAFJ,EAEY,KAAKhO,KAAL,CAAWH,KAAX,CAAiBU,UAF7B,EAGI,KAAKX,KAAL,CAAWyB,cAHf,CAJR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAWI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAElF,WAAvB;AACI,MAAA,KAAK,EAAE,KAAK6D,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXJ,CAHJ,eAkBI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,oDAApB;AAAyE,MAAA,IAAI,EAAC,EAA9E;AACI,kBAAU,KAAK/I,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADd;AAEI,kBAAS,mBAFb;AAGI,MAAA,OAAO,EAAE,MAAM,KAAKN,aAAL,CAAmBC,QAAnB,CAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAExM,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CAlBJ,eA2BI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,kCAApB;AACI,kBAAU,KAAK8D,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADd;AAEI,kBAAS,mBAFb;AAGI,MAAA,OAAO,EAAGa,CAAD,IAAO,KAAK5J,KAAL,CAAWnC,qBAAX,CAAiC,KAAKmC,KAAL,CAAWH,KAAX,CAAiBU,UAAlD,EACZ,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QADL,EACeuI,cADf,EAC+B,QAD/B,EACyC,EADzC,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAC,cAAlB;AAAiC,MAAA,KAAK,EAAC,IAAvC;AAA4C,MAAA,MAAM,EAAC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CA3BJ,eAmCI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,kCAApB;AAAuD,MAAA,IAAI,EAAC,GAA5D;AACI,kBAAU,KAAKjO,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADd;AAEI,kBAAS,mBAFb;AAGI,MAAA,OAAO,EAAGa,CAAD,IAAO,KAAK5J,KAAL,CAAWhC,mBAAX,CAA+B,KAAKgC,KAAL,CAAWH,KAAX,CAAiBU,UAAhD,EACZ,KAAKP,KAAL,CAAWH,KAAX,CAAiB6F,QADL,EACe1H,mBADf,EACoC,QADpC,EAC8C,EAD9C,CAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAMI,oBAAC,QAAD;AAAU,MAAA,SAAS,EAAC,cAApB;AAAmC,MAAA,KAAK,EAAC,IAAzC;AAA8C,MAAA,MAAM,EAAC,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,CAnCJ,CAfJ,CADJ,CALJ,CADJ,eAqEI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI,oBAAC,cAAD;AACI,MAAA,IAAI,EAAE,KAAKgC,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBADtC;AAEI,MAAA,UAAU,EAAEkE,IAAI,CAAC+I,KAAL,CAAW,KAAKhP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwO,kBAA5B,CAA+C,UAA/C,EAA2D/I,KAAtE,EACX,KAAKhG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,CAAiD,CAAjD,EAAoDxB,iBAApD,KAA0E,CAA1E,GACO,4BADP,GACsC,KAAKvK,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,CAAiD,CAAjD,EAAoDxB,iBAApD,KAA0E,CAA1E,GAC3B,8BAD2B,GACM,6BAHjC,CAFhB;AAOI,MAAA,UAAU,EAAC,gBAPf;AAQI,MAAA,QAAQ,EAAE,KAAKvK,KAAL,CAAWH,KAAX,CAAiB6F,QAR/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,EAeK,KAAK1F,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,iBAA+B,oBAAC,SAAD;AAAW,MAAA,SAAS,EAAE,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BiC,SAA5B,IAAyC,4BAA/D;AAA6F,MAAA,SAAS,EAAE,KAAKkE,SAAL,EAAxG;AAA0H,MAAA,WAAW,EAAE,KAAKpE,WAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfpC,CArEJ,CADH,GAuFa,EAxFlB,CADJ,CADJ,CADJ,CA1DJ,CAPJ,CAFJ,EAqLQ,KAAKtC,KAAL,CAAWH,KAAX,CAAiByI,SAAjB,iBACA,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKtI,KAAL,CAAWH,KAAX,CAAiByI,SAAtC;AACI,MAAA,UAAU,EAAE,KAAK4B,UADrB;AAEI,MAAA,SAAS,EAAE,KAAKlK,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,gCAAhC,GAAmE,EAAnE,GACP,KAAKpH,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,sBAAhC,GAAyD,EAAzD,GACI,KAAKpH,KAAL,CAAWH,KAAX,CAAiBuG,SAJ7B;AAKI,MAAA,UAAU,EAAE,KAAKpG,KAAL,CAAWH,KAAX,CAAiBsG,UALjC;AAMI,MAAA,UAAU,EAAE,KAAKnG,KAAL,CAAWH,KAAX,CAAiBuH,UANjC;AAOI,MAAA,WAAW,EAAE,KAAKqE,WAPtB;AAQI,MAAA,KAAK,EAAE,KAAKzL,KAAL,CAAWH,KAAX,CAAiBuI,SAR5B;AASI,MAAA,aAAa,EAAE,KAAKyB,aATxB;AAUI,MAAA,YAAY,EAAE,KAAK7J,KAAL,CAAWH,KAAX,CAAiBuN,YAVnC;AAWI,MAAA,cAAc,EAAE,KAAKxN,KAAL,CAAWyB,cAAX,IAA6B,EAXjD;AAYI,MAAA,eAAe,EAAE,KAAKrB,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,4BAAhC,GAA+DoH,2BAA/D,GAA6F,KAAKxO,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,cAAhC,GAAiD,KAAK/G,sBAAL,EAAjD,GAC1G,KAAKL,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,sBAAhC,GACI,KAAKpH,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,gCAAhC,GAAmE6H,8BAAnE,GAAoG,EADxG,GAEM,EAfd;AAgBI,MAAA,WAAW,EAAE,KAAKjP,KAAL,CAAWzC,WAhB5B;AAiBI,MAAA,YAAY,EACR,KAAKyC,KAAL,CAAWH,KAAX,CAAiBuI,SAAjB,gBACI,oBAAC,KAAD;AAAO,QAAA,SAAS,EAAE,KAAKpI,KAAL,CAAWH,KAAX,CAAiBuG,SAAnC;AACI,QAAA,eAAe,EAAE,KAAKiF,eAD1B;AAEI,QAAA,UAAU,EAAE,KAAKrL,KAAL,CAAWH,KAAX,CAAiBsG,UAFjC;AAGI,QAAA,cAAc,EAAE,KAAKvG,KAAL,CAAWyB,cAAX,IAA6B,EAHjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,GAOI,KAAKrB,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,4BAAhC,GACI,KAAKpH,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,sBAAhC,GACI,KAAKpH,KAAL,CAAWH,KAAX,CAAiBuH,UAAjB,KAAgC,gCAAhC,GACI,KAAKpH,KAAL,CAAWH,KAAX,CAAiB0I,mBAAjB,gBACI,oBAAC,kBAAD;AACI,QAAA,cAAc,EAAE,KAAKvI,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,IAAmC,EADvD;AAEI,QAAA,eAAe,EAAE,KAAKgK,eAF1B;AAGI,QAAA,wBAAwB,EAAE,KAAKrL,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B+O,eAA5B,IAA+C,KAAKtP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B+O,eAHzG;AAII,QAAA,oBAAoB,EAAE,KAAKvC,oBAJ/B;AAKI,QAAA,aAAa,EAAE,KAAK1C,aALxB;AAMI,QAAA,UAAU,EAAE,KAAKrK,KAAL,CAAWH,KAAX,CAAiB2I,gBAAjB,IAAqC,KAAKxI,KAAL,CAAWH,KAAX,CAAiB2I,gBANtE;AAOI,QAAA,qBAAqB,EAAE,KAAKxI,KAAL,CAAWH,KAAX,CAAiB0P,qBAP5C;AASI,QAAA,SAAS,EAAE,KAAKvP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BiP,mBAT3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,gBAaI,oBAAC,eAAD;AACI,QAAA,SAAS,EAAE,KAAKxP,KAAL,CAAWH,KAAX,CAAiBuG,SADhC;AAEI,QAAA,oBAAoB,EAAE,KAAKxG,KAAL,CAAWuK,oBAFrC;AAGI,QAAA,cAAc,EAAE,KAAKvK,KAAL,CAAWyB,cAH/B;AAII,QAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWH,KAAX,CAAiB6F,QAJ/B;AAKI,QAAA,oBAAoB,EACnB,KAAK1F,KAAL,CAAWH,KAAX,CAAiBuG,SAAjB,KAA6B,QAA7B,GACD,KAAKpG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2M,wBAA5B,CAAqDuC,gBAArD,KACI,KAAKzP,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqD2E,KADzD,GAC+D,IAD/D,GACoE,KAFnE,GAGA,KATL;AAUI,QAAA,uBAAuB,EAAE,KAAKhG,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,QAAhC,CAV7B;AAWI,QAAA,uBAAuB,EAAE,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,kBAAhC,CAX7B;AAYI,QAAA,yBAAyB,EAAE,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,oBAAhC,CAZ/B;AAaI,QAAA,YAAY,EAAE,KAAKrB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BC,gBAA5B,IACV,KAAKR,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BC,gBAA5B,CAA6C,CAA7C,EAAgDC,QAdxD;AAeI,QAAA,oBAAoB,EAAE,KAAKsM,oBAf/B;AAgBI,QAAA,YAAY,EAAE,KAAK2C,YAhBvB;AAiBI,QAAA,eAAe,EAAE,KAAKrE,eAjB1B;AAkBI,QAAA,YAAY,EAAE,KAAKrL,KAAL,CAAWH,KAAX,CAAiB8P,YAlBnC;AAmBI,QAAA,gBAAgB,EAAE,KAAKzN,gBAnB3B;AAoBI,QAAA,SAAS,EAAE,KAAKlC,KAAL,CAAWH,KAAX,CAAiB+P,YAAjB,IAAiC,KAAK5P,KAAL,CAAWH,KAAX,CAAiB+P,YAAjB,CAA8BtF,SApB9E;AAqBI,QAAA,aAAa,EAAE,KAAKK,oBArBxB,CAsBI;AAtBJ;AAuBI,QAAA,UAAU,EAAE,KAAK3K,KAAL,CAAWH,KAAX,CAAiBuH,UAvBjC;AAwBI,QAAA,qBAAqB,EAAE,KAAKpH,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,KAAwD,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDE,IAA7G,IACnB,KAAKvB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDE,IAArD,CAA0Dd,QAA1D,CAAmEe,eADhD,IAEhB,KAAKxB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,KAAwD,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,CAAgC,mBAAhC,EAAqDG,eAF7F,IAEgH,KAAKxB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BsG,qBA1BvK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdR,gBA2CI,oBAAC,eAAD;AACI,QAAA,cAAc,EAAE,KAAKjH,KAAL,CAAWyB,cAD/B;AAEI,QAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWH,KAAX,CAAiB6F,QAF/B;AAGI,QAAA,YAAY,EAAE,KAAK1F,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2L,kCAA5B,IACV,KAAKlM,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2L,kCAA5B,CAA+D,CAA/D,EAAkEzL,QAJ1E;AAKI,QAAA,YAAY,EAAE,KAAKiP,YALvB;AAMI,QAAA,eAAe,EAAE,KAAK7E,sBAN1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5CR,gBAqDI,oBAAC,eAAD;AACI,QAAA,cAAc,EAAE,KAAK7K,KAAL,CAAWH,KAAX,CAAiBwB,cADrC;AAEI,QAAA,QAAQ,EAAE,KAAKrB,KAAL,CAAWH,KAAX,CAAiB6F,QAF/B;AAGI,QAAA,YAAY,EAAE,KAAK1F,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B+L,0BAA5B,IACV,KAAKtM,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B+L,0BAA5B,CAAuD,CAAvD,EAA0D7L,QAJlE,CAKI;AALJ;AAMI,QAAA,YAAY,EAAE,KAAKiP,YANvB;AAOI,QAAA,eAAe,EAAE,KAAKrE,eAP1B;AAQI,QAAA,gBAAgB,EAAE,KAAKnJ,gBAR3B;AASI,QAAA,YAAY,EAAE,KAAKlC,KAAL,CAAWH,KAAX,CAAiB8P,YAAjB,IAAiC,KAAK3P,KAAL,CAAWH,KAAX,CAAiB8P,YATpE;AAUI,QAAA,aAAa,EAAE,KAAKhF,oBAVxB;AAWI,QAAA,eAAe,EAAE,KAAK3K,KAAL,CAAWH,KAAX,CAAiBgQ,eAXtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAtDR,gBAmEI,oBAAC,eAAD;AACI,QAAA,cAAc,EAAE,KAAKjQ,KAAL,CAAWyB,cAAX,IAA6B,EADjD;AAEI,QAAA,eAAe,EAAE,KAAKgK,eAF1B;AAGI,QAAA,MAAM,EAAE,KAAKxI,kBAHjB;AAII,QAAA,gBAAgB,EAAE,KAAKK,gBAJ3B;AAKI,QAAA,aAAa,EAAE,KAAKmH,aALxB;AAMI,QAAA,UAAU,EAAE,KAAKrK,KAAL,CAAWH,KAAX,CAAiBiQ,UANjC;AAOI,QAAA,OAAO,EAAE,EAPb;AAQI,QAAA,QAAQ,EAAE,CARd;AASI,QAAA,QAAQ,EAAE,KATd;AAUI,QAAA,KAAK,EAAE,KAAK9P,KAAL,CAAW6I,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAVX;AAWI,QAAA,IAAI,EAAC,cAXT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA5FhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtLR,CADJ;AAqSH;;AA8bDgH,EAAAA,iBAAiB,GAAG;AAChB,QAAI,KAAKC,YAAT,EAAuB;AACnB,YAAMC,MAAM,GAAG,KAAKD,YAAL,CAAkBE,YAAjC;AACA,WAAK/P,QAAL,CAAc;AACVgQ,QAAAA,SAAS,EAAEF,MAAM,GAAG,EADV;AAEVD,QAAAA,YAAY,EAAEC;AAFJ,OAAd;AAIH;AACJ;;AAEDG,EAAAA,qBAAqB,GAAG;AACpB,UAAMlB,cAAc,GAAG,EAAvB,CADoB,CAEpB;;AACAA,IAAAA,cAAc,CAACjO,IAAf,CACI;AACI,eAAS,kBADb;AAEI,eAAS,KAAKjB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,GACL,KAAK/L,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,CAAiD,CAAjD,EAAoD,UAApD,EAAgEsE,iBAAhE,IAAqF,KAAKrQ,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,CAAiD,CAAjD,EAAoD,UAApD,EAAgEsE,iBAAhE,CAAkF,KAAKrQ,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B4K,iBAA5G,CADhF,GACiN;AAH9N,KADJ,EAMO;AAEH,eAAS,iBAFN;AAGH,eAAS,KAAKtQ,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2M,wBAA5B,GACL,KAAKlN,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2M,wBAA5B,CAAqDqD,gBAArD,KAA0EjP,SAA1E,GACI,KAAKtB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2M,wBAA5B,CAAqDqD,gBADzD,GAC4E,IAFvE,GAE8E;AALpF,KANP,EAHoB,CAiBpB;;AACA,WAAOrB,cAAP;AACH;;AAEDsB,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAC9B,QAAIC,IAAI,GAAG,KAAX;AACA,QAAI;AAAErP,MAAAA,cAAF;AAAkBkI,MAAAA,aAAlB;AAAiCmB,MAAAA,SAAjC;AAA4CyE,MAAAA,UAA5C;AAAwD7B,MAAAA,aAAxD;AAAuE7D,MAAAA,mBAAvE;AACAD,MAAAA,eADA;AACiB3C,MAAAA,qBADjB;AACwCsD,MAAAA;AADxC,QACgE,KAAKvK,KADzE;AAEA,UAAMW,UAAU,GAAG,KAAKP,KAAL,CAAWH,KAAX,CAAiBU,UAApC,CAJ8B,CAK9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAI,KAAKP,KAAL,CAAWH,KAAX,CAAiBwB,cAAjB,KAAoCoP,aAAa,CAAC5Q,KAAd,CAAoBwB,cAA5D,EAA4E;AACxEqP,MAAAA,IAAI,GAAG,IAAP;AACArP,MAAAA,cAAc,GAAG,KAAKrB,KAAL,CAAWH,KAAX,CAAiBwB,cAAlC;AACH;;AACD,QAAI,KAAKrB,KAAL,CAAWH,KAAX,CAAiB0J,aAAjB,KAAmCkH,aAAa,CAAC5Q,KAAd,CAAoB0J,aAA3D,EAA0E;AACtEmH,MAAAA,IAAI,GAAG,IAAP;AACAnH,MAAAA,aAAa,GAAG,KAAKvJ,KAAL,CAAWH,KAAX,CAAiB0J,aAAjC;AACH;;AAED,QAAI,KAAKvJ,KAAL,CAAWH,KAAX,CAAiBsK,oBAAjB,KAA0CsG,aAAa,CAAC5Q,KAAd,CAAoBsK,oBAAlE,EAAwF;AACpFuG,MAAAA,IAAI,GAAG,IAAP;AACAvG,MAAAA,oBAAoB,GAAG,KAAKnK,KAAL,CAAWH,KAAX,CAAiBsK,oBAAxC;AACH;;AACD,QAAI,KAAKnK,KAAL,CAAWH,KAAX,CAAiB6K,SAAjB,KAA+B+F,aAAa,CAAC5Q,KAAd,CAAoB6K,SAAvD,EAAkE;AAC9DgG,MAAAA,IAAI,GAAG,IAAP;AACAhG,MAAAA,SAAS,GAAG,KAAK1K,KAAL,CAAWH,KAAX,CAAiB6K,SAA7B;AACH;;AACD,QAAI,KAAK1K,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAA1B,KAAwCsI,aAAa,CAAC5Q,KAAd,CAAoB6F,QAApB,CAA6ByC,SAAzE,EAAoF;AAChF,YAAMnB,qBAAqB,GAAG,EAA9B;;AACA,UAAI,KAAKhH,KAAL,CAAWH,KAAX,CAAiBmH,qBAArB,EAA4C;AACxC,aAAKhH,KAAL,CAAWH,KAAX,CAAiBmH,qBAAjB,CAAuC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAjE,KAA+ExD,MAAM,CAACgM,MAAP,CAAc,KAAK3Q,KAAL,CAAWH,KAAX,CAAiBmH,qBAAjB,CAAuC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAjE,CAAd,EAA2FzH,GAA3F,CAA+Fa,IAAI,IAC9KyF,qBAAqB,CAAC/F,IAAtB,CAA2BM,IAAI,CAACwM,YAAhC,CAD2E,CAA/E;AAEH;;AAED,YAAMhH,UAAU,GAAG/J,aAAa,CAAC,KAAKgD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,CAAhC;AACA,WAAKhI,QAAL,CAAc;AACV6G,QAAAA,qBADU;AACaD,QAAAA,UADb;AACyBnE,QAAAA,IAAI,EAAE,KAAK5C,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BgN;AAD3D,OAAd;AAGH;;AACD,QAAI,KAAKvN,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B4N,YAA5B,KAA6C7M,SAAjD,EAA4D;AACxD,UAAI,KAAKtB,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B4N,YAA5B,KAA6CsC,aAAa,CAAC5Q,KAAd,CAAoBU,UAApB,CAA+B4N,YAAhF,EAA8F;AAC1FuC,QAAAA,IAAI,GAAG,IAAP,CAD0F,CAE1F;AACA;AACA;AACA;AACA;;AACA,cAAME,gBAAgB,GAAGtU,uBAAuB,CAAC,KAAK0D,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B4N,YAA7B,EAC5C,mBAD4C,EACvB,mBADuB,EACF7M,SADE,EACSA,SADT,EAE5CA,SAF4C,EAEjCA,SAFiC,EAG5CA,SAH4C,EAGjC,IAHiC,EAG3B,KAAKtB,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B4K,iBAHC,CAAhD;AAIAhD,QAAAA,aAAa,GAAGsD,gBAAgB,CAAC9C,GAAjB,CAAqB,YAArB,CAAhB,CAX0F,CAY5F;;AACEvE,QAAAA,aAAa,GAAG;AACZgB,UAAAA,iBAAiB,EAAEhK,UAAU,CAAC4N,YAAX,IAA2B5N,UAAU,CAAC4N,YAAX,CAAwBlM,MAAxB,GAAiC,CAA5D,GAAgE;AAC/E,qBAAS1B,UAAU,CAAC4N,YAAX,CAAwB,CAAxB,EAA2B5D,iBAD2C;AAE/E,qBAAShK,UAAU,CAAC4N,YAAX,CAAwB,CAAxB,EAA2B,UAA3B,EAAuCkC,iBAAvC,CAAyD,KAAKrQ,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0B4K,iBAAnF;AAFsE,WAAhE,GAGf;AAJQ,SAAhB;AAMH;AACJ;;AACD,QAAI,KAAKtQ,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6N,oBAA5B,KAAqDqC,aAAa,CAAC5Q,KAAd,CAAoBU,UAApB,CAA+B6N,oBAAxF,EAA8G;AAC1G,YAAMA,oBAAoB,GAAGnR,mBAAmB,CAAC,KAAK+C,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6N,oBAA5B,IAAoD,EAArD,EAAyD,kBAAzD,EAC5C,kBAD4C,EACxB9M,SADwB,EACbA,SADa,EACFA,SADE,CAAhD;AAEAkI,MAAAA,eAAe,GAAG4E,oBAAoB,CAACN,GAArB,CAAyB,YAAzB,CAAlB;AAEArE,MAAAA,mBAAmB,GAAG;AAClBgG,QAAAA,gBAAgB,EAAElP,UAAU,CAAC6N,oBAAX,IAAmC7N,UAAU,CAAC6N,oBAAX,CAAgCnM,MAAhC,GAAyC,CAA5E,GAAgF;AAC9F,mBAAS1B,UAAU,CAAC6N,oBAAX,CAAgC,CAAhC,EAAmCqB,gBADkD;AAE9F,mBAASlP,UAAU,CAAC6N,oBAAX,CAAgC,CAAhC,EAAmCmC;AAFkD,SAAhF,GAGd;AAJc,OAAtB;AAMH;;AAED,QAAI,KAAKvQ,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,KAAgCkQ,aAAa,CAAC5Q,KAAd,CAAoBU,UAAxD,EAAoE;AAChEmQ,MAAAA,IAAI,GAAG,IAAP;AACAvB,MAAAA,UAAU,GAAG,KAAKiB,qBAAL,EAAb;AACH;;AAGD,QAAI,KAAKpQ,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6O,YAA5B,KAA6CqB,aAAa,CAAC5Q,KAAd,CAAoBU,UAApB,CAA+B6O,YAAhF,EAA8F;AAC1F,UAAI,KAAKpP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6O,YAAhC,EAA8C;AAC1C,YAAI,KAAKpP,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B6O,YAA5B,CAAyCnN,MAAzC,IAAmD,KAAKrC,KAAL,CAAWsH,IAAlE,EAAwE;AACpE,eAAK/G,QAAL,CAAc;AAAE+G,YAAAA,IAAI,EAAE;AAAR,WAAd;AACH;AACJ;AACJ;;AAED,QAAIwJ,IAAJ,EAAU;AACN,WAAKvQ,QAAL,CAAc;AACVkB,QAAAA,cADU;AACMqJ,QAAAA,SADN;AACiByE,QAAAA,UADjB;AAC6B5F,QAAAA,aAD7B;AAC4C+D,QAAAA,aAD5C;AAC2D7D,QAAAA,mBAD3D;AAEVD,QAAAA,eAFU;AAEOnH,QAAAA,sBAAsB,EAAE,KAF/B;AAEqC8H,QAAAA,oBAFrC,CAGV;AACA;AACA;AACA;;AANU,OAAd;AAQH,KAtG6B,CAuG9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACH;;AA85BD0G,EAAAA,oBAAoB,GAAG;AACnB,UAAMnO,UAAU,GAAG;AACfC,MAAAA,QAAQ,EAAEpE,cADK;AAEfqE,MAAAA,IAAI,EAAE;AACFrC,QAAAA,UAAU,EAAE,EADV;AACc4F,QAAAA,UAAU,EAAE7E,SAD1B;AACqC8E,QAAAA,SAAS,EAAE,IADhD;AACsD0K,QAAAA,SAAS,EAAExP;AADjE;AAFS,KAAnB;AAMA,SAAKtB,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH;;AACDsG,EAAAA,iBAAiB,CAACzI,UAAD,EAAawN,YAAb,EAA2B+C,SAA3B,EAAsC;AACnD,UAAMC,UAAU,GAAG,EAAnB;AACA,QAAIlF,SAAS,GAAG;AACZ6C,MAAAA,aAAa,EAAE,UADH;AACeC,MAAAA,cAAc,EAAE,kBAD/B;AAEZC,MAAAA,eAAe,EAAE,eAFL;AAGZoC,MAAAA,eAAe,EAAED,UAHL;AAIZlC,MAAAA,QAAQ,EAAE,sBAJE;AAKZC,MAAAA,gBAAgB,EAAE;AAAExI,QAAAA,QAAQ,EAAE,KAAKtG,KAAL,CAAWH,KAAX,CAAiB6F;AAA7B;AALN,KAAhB;AAOAoL,IAAAA,SAAS,GAAG,WAAZ;AACA,UAAM3K,UAAU,GAAG;AACfM,MAAAA,SAAS,EAAE,UADI;AAEfD,MAAAA,QAAQ,EAAE,UAFK;AAGfH,MAAAA,SAAS,EAAE;AACP,oBAAY,KAAKrG,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBADjC;AAEP,4BAAoB,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4B2M,wBAA5B,CAAqDuC,gBAFlE;AAGP,oBAAY,KAAKzP,KAAL,CAAWH,KAAX,CAAiB6F,QAHtB;AAIP,yBAAiB,KAAK1F,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,IAAgD,KAAK/B,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwB,gBAA5B,CAA6C8B,aAJvG;AAKP,6BAAqB,KAAK7D,KAAL,CAAWH,KAAX,CAAiBU,UAAjB,CAA4BwL,oBAA5B,CAAiD,CAAjD,EAAoDxB;AALlE,OAHI;AAUfnE,MAAAA,SAAS,EAAE,QAVI;AAUMyF,MAAAA,SAVN;AAWfoF,MAAAA,WAAW,EAAE;AAXE,KAAnB;;AAaA,QAAIlU,SAAS,CAAC,KAAKiD,KAAL,CAAWH,KAAX,CAAiBmH,qBAAlB,EAAyC,KAAKhH,KAAL,CAAWH,KAAX,CAAiB6F,QAAjB,CAA0ByC,SAAnE,EAA8E4F,YAA9E,CAAb,EAA0G;AACtG,YAAMrL,UAAU,GAAG;AACfC,QAAAA,QAAQ,EAAEpE,cADK;AAEfqE,QAAAA,IAAI,EAAE;AACFwF,UAAAA,SAAS,EAAE,IADT;AACeC,UAAAA,UAAU,EAAE;AAAElC,YAAAA,UAAF;AAAc5F,YAAAA;AAAd,WAD3B;AACuD,WAACuQ,SAAD,GAAa,IADpE;AAEF1K,UAAAA,SAAS,EAAE,QAFT;AAEmB3D,UAAAA,UAAU,EAAE,UAF/B;AAE2CsG,UAAAA,EAAE,EAAE;AAF/C;AAFS,OAAnB;AAOA,WAAK/I,KAAL,CAAWzC,WAAX,CAAuBmF,UAAvB;AACH,KATD,MAUK;AACD,WAAK1C,KAAL,CAAWxC,UAAX,CAAsB2I,UAAtB,EAAkC5F,UAAlC,EAA8CuQ,SAA9C;AACH;AACJ;;AAp8D4B;;AAm9DjC,eAAexV,OAAO,CAACqE,eAAD,EAAkB;AACpCrC,EAAAA,WADoC;AACvBC,EAAAA,WADuB;AACVK,EAAAA,qBADU;AACaE,EAAAA,mBADb;AACkCH,EAAAA,cADlC;AACkDM,EAAAA,iBADlD;AAEpCT,EAAAA,UAFoC;AAExBO,EAAAA,kBAFwB;AAEJG,EAAAA,eAFI;AAEaC,EAAAA,qBAFb;AAEoCG,EAAAA,eAFpC;AAGlCF,EAAAA,0BAHkC;AAGNC,EAAAA,sBAHM;AAGkBZ,EAAAA,gBAHlB;AAGoCC,EAAAA,uBAHpC;AAG6DG,EAAAA,qBAH7D;AAGoFG,EAAAA;AAHpF,CAAlB,CAAP,CAIZxC,UAAU,CAACsE,QAAD,CAJE,CAAf","sourcesContent":["import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav, Card, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { toast } from 'react-toastify';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt, faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { constructjsonOptionList, convertDateTimetoString, convertDateTimetoStringDBformat, rearrangeDateFormatDateOnly, formatInputDate, convertDateTimetoStringDBFormat, sortData } from '../../components/CommonScript';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component'\r\nimport { showEsign, getControlMap, constructOptionList, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, rearrangeDateFormat } from '../../components/CommonScript';\r\nimport {\r\n    callService, updateStore, crudMaster, filterColumnData, validateEsignCredential, viewAttachment,\r\n    initialcombochangeget, addSafetyInstructions, getAddMaterialPopup, getMaterialDetails, addMaterialProperty, getMaterialReload,\r\n    getMaterialEdit, getMaterialByTypeCode, getAddMaterialSectionPopup, getMaterialSectionEdit, addMaterialFile\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { transactionStatus, attachmentType } from '../../components/Enumeration';\r\nimport { ContentPanel, ReadOnlyText, MediaLabel } from '../../components/App.styles';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport MaterialFilter from './MaterialFilter';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout';\r\nimport MaterialSectionTab from './MaterialSectionTab';\r\nimport AddMaterialSection from './AddMaterialSection';\r\nimport { Affix } from 'rsuite';\r\nimport MaterialMsdsAttachmentTab from './MaterialMsdsAttachmentTab';\r\nimport AddMaterialFile from './AddMaterialFile';\r\nimport { ReactComponent as Safety } from '../../assets/image/safety.svg';\r\nimport { ReactComponent as Property } from '../../assets/image/managed-hosting.svg';\r\nimport { ProductList } from '../product/product.styled';\r\nimport PortalModal from '../../PortalModal';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Material extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n        };\r\n        this.state = {\r\n            masterStatus: \"\",\r\n            sectionDataState: { skip: 0, take: 10 },\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            filterCatList: [],\r\n            operation: \"\",\r\n            comboitem: undefined,\r\n            screenName: undefined,\r\n            selectedcombo: undefined,\r\n            isSelectedRecordChange: false,\r\n            showSectionWhileEdit: false,\r\n            selectedMaterialCat: undefined,\r\n            materialCatList: [],\r\n            userRoleControlRights: [],\r\n            ControlRights: undefined,\r\n            controlMap: new Map(),\r\n            dataResult: [],\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            dataState: dataState,\r\n            data: [],\r\n            splitChangeWidthPercentage: 30,\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    paneSizeChange = (d) => {\r\n        this.setState({\r\n            splitChangeWidthPercentage: d\r\n        })\r\n    }\r\n    render() {\r\n      //  console.log('selected r :', this.props.Login.masterData)\r\n        const addId = this.state.controlMap.has(\"AddMaterial\") && this.state.controlMap.get(\"AddMaterial\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditMaterial\") && this.state.controlMap.get(\"EditMaterial\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteMaterial\") && this.state.controlMap.get(\"DeleteMaterial\").ncontrolcode;\r\n        const addParameterId = this.state.controlMap.has(\"AddMaterialSafetyInstructions\")\r\n            && this.state.controlMap.get(\"AddMaterialSafetyInstructions\").ncontrolcode;\r\n        const addMaterialProperty = this.state.controlMap.has(\"AddMaterialProperties\")\r\n            && this.state.controlMap.get(\"AddMaterialProperties\").ncontrolcode;\r\n        let masterlistmain = []\r\n        this.props.Login.masterData.Material = this.props.Login.masterData.Material &&\r\n            sortData(this.props.Login.masterData.Material, \"descending\", \"nmaterialcode\")\r\n        this.props.Login.masterData.MaterialType = this.props.Login.masterData.MaterialType &&\r\n            sortData(this.props.Login.masterData.MaterialType, \"ascending\", \"nmaterialtypecode\")\r\n        this.props.Login.masterData.MaterialCategoryMain = this.props.Login.masterData.MaterialCategoryMain &&\r\n            sortData(this.props.Login.masterData.MaterialCategoryMain, \"ascending\", \"nmaterialcatcode\")\r\n        if (this.props.Login.masterData.SelectedMaterialCategory &&\r\n            this.props.Login.masterData.SelectedMaterialCategory.needSectionwise === transactionStatus.YES) {\r\n            if (this.props.Login.masterData.SelectedMaterial) {\r\n                delete this.props.Login.masterData.SelectedMaterial['Section'];\r\n                delete this.props.Login.masterData.SelectedMaterial['Reorder Level'];\r\n            }\r\n        }\r\n\r\n        // this.props.Login.masterData.Material &&\r\n        //     this.props.Login.masterData.Material.map((temp, i) => {\r\n        //         return masterlistmain.push(this.props.Login.masterData.Material[i].jsondata)\r\n        //     })\r\n        let searchedDatalistmain = []\r\n\r\n        // if (this.props.Login.masterData.searchedData === undefined) {\r\n        //     searchedDatalistmain = undefined\r\n        // } else {\r\n        //     this.props.Login.masterData.searchedData &&\r\n        //         this.props.Login.masterData.searchedData.map((temp, i) => {\r\n        //             return searchedDatalistmain.push(this.props.Login.masterData.searchedData[i].jsondata)\r\n        //         })\r\n        // }\r\n        let searchFieldList = []\r\n        let mandatoryFieldsMaterialFile = []\r\n        // if (this.props.Login.masterData.SelectedMaterialType) {\r\n        //     if (this.props.Login.masterData.SelectedMaterialType.length > 0) {\r\n        //         if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\r\n        //             searchFieldList = [\r\n        //                 \"Standard Name\"\r\n        //             ]\r\n        //         }\r\n        //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\r\n        //             searchFieldList = [\r\n        //                 \"Volumetric Name\"\r\n        //             ]\r\n        //         }\r\n        //         else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\r\n        //             searchFieldList = [\r\n        //                 \"Material Name\"\r\n        //             ]\r\n        //         }\r\n        //     }\r\n        // }\r\n        const filterParam = {\r\n            inputListName: \"Material\", selectedObject: \"SelectedMaterial\", primaryKeyField: \"nmaterialcode\",\r\n            fetchUrl: \"material/getMaterialByID\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData,\r\n            // isjsondata: true,\r\n            searchFieldList: [this.props.Login.masterData.DesignMappedFeilds &&\r\n                JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList'] &&\r\n                JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['searchFieldList'][0]['searchFieldList']]\r\n        };\r\n        this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' && (this.props.Login.selectedRecord &&\r\n            this.props.Login.selectedRecord.nattachmenttypecode === attachmentType.LINK) ?\r\n            mandatoryFieldsMaterialFile = [\r\n                { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n            ]\r\n            :\r\n            mandatoryFieldsMaterialFile = [\r\n                { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n            ]\r\n\r\n        const mandatoryFieldsMaterialSection = [\r\n            {\r\n                \"mandatory\": false, \"idsName\": \"IDS_MATERIALSECTION\", \"dataField\": \"nmaterialsectioncode\",\r\n                \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n            }\r\n        ];\r\n        const breadCrumbData = this.state.filterData || [];\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb  fixed_breadcrumd \">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={64}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix>\r\n                        : \"\"\r\n                    }\r\n                    <Row noGutters>\r\n                        <Col md={4} >\r\n\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"Material\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                //  masterList={searchedDatalistmain || masterlistmain}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Material}\r\n                                getMasterDetail={(master) => this.props.getMaterialDetails(master, this.props.Login.masterData, this.props.Login.userInfo)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial}\r\n                                primaryKeyField=\"nmaterialcode\"\r\n                                // mainField={this.props.Login.masterData.SelectedMaterialType ?\r\n                                //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n                                //         \"Standard Name\" :\r\n                                //         this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n                                //             \"Volumetric Name\" :\r\n                                //             \"Material Name\" : \"\"}\r\n                                // firstField={\"Reorder Level\"}\r\n                                mainField={this.props.Login.masterData.DesignMappedFeilds &&\r\n                                    JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['mainField']}\r\n                                firstField={\r\n                                    this.props.Login.masterData.DesignMappedFeilds &&\r\n                                    JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField'] &&\r\n                                    JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\r\n                                    //||JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)['ListMasterProps'][0]['firstField']\r\n                                }\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                showFilterIcon={true}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":\r\n                                            <MaterialFilter\r\n                                                filterCatList={this.state.filterCatList || []}\r\n                                                materialCatList={this.state.materialCatList || []}\r\n                                                selectedRecord={this.state.selectedcombo || {}}//\r\n                                                selectedMaterialCat={this.state.selectedMaterialCat || {}}\r\n                                                onComboChange={this.onComboChange}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                                openModal={() => this.props.getAddMaterialPopup(\r\n                                    \"create\", this.props.Login, this.state.selectedcombo,\r\n                                    addId, this.props.Login.masterData,\r\n                                    this.state.selectedRecord)}\r\n                            />\r\n                        </Col>\r\n                        <Col md='8'>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        {this.props.Login.masterData.Material && this.props.Login.masterData.Material.length > 0 && this.props.Login.masterData.SelectedMaterial ?\r\n                                            <Card className=\"border-0\">\r\n                                                <Card.Header>\r\n                                                    <Card.Title className=\"product-title-main\">\r\n                                                        {this.props.Login.masterData.SelectedMaterialType ?\r\n                                                            this.props.Login.masterData.SelectedMaterial['Material Name'] : \"\"}\r\n                                                    </Card.Title>\r\n                                                    <Card.Subtitle>\r\n                                                        <ProductList className=\"d-flex product-category icon-group-wrap\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                <MediaLabel >\r\n                                                                    Quarantine :\r\n                                                                </MediaLabel>\r\n                                                                <MediaLabel\r\n                                                                    className={`btn btn-outlined ${this.props.Login.masterData.\r\n                                                                        SelectedMaterial['Quarantine'] === \"Yes\" ?\r\n                                                                        \"outline-success\" : \"outline-danger\"} btn-sm ml-3`}>\r\n                                                                    {this.props.Login.masterData.SelectedMaterial\r\n                                                                    ['Quarantine'] === \"Yes\" ?\r\n                                                                        'Yes' : 'No'}\r\n                                                                </MediaLabel>\r\n                                                            </h2>\r\n\r\n                                                            <div className=\"d-inline \">\r\n                                                                <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) =>\r\n                                                                        this.props.getAddMaterialPopup(\r\n                                                                            \"update\", this.props.Login, this.state.selectedcombo,\r\n                                                                            editId, this.props.Login.masterData,\r\n                                                                            this.state.selectedRecord)\r\n                                                                    }\r\n                                                                >\r\n\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" href=\"\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.ConfirmDelete(deleteId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                                </Nav.Link>\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALSAFETYINSTRUCTIONS\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) => this.props.addSafetyInstructions(this.props.Login.masterData,\r\n                                                                        this.props.Login.userInfo, addParameterId, \"create\", {})}\r\n                                                                >\r\n                                                                    <Safety className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\" href=\"#\"\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDMATERIALPROPERTY\" })}\r\n                                                                    data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={(e) => this.props.addMaterialProperty(this.props.Login.masterData,\r\n                                                                        this.props.Login.userInfo, addMaterialProperty, \"create\", {})}\r\n                                                                >\r\n                                                                    <Property className=\"custom_icons\" width=\"15\" height=\"15\" />\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n                                                        </ProductList>\r\n                                                    </Card.Subtitle>\r\n                                                </Card.Header>\r\n                                                <Card.Body>\r\n                                                    <Row>\r\n                                                        {/* {this.accordianDesign()} */}\r\n                                                        <SampleInfoView\r\n                                                            data={this.props.Login.masterData.SelectedMaterial}\r\n                                                            SingleItem={JSON.parse(this.props.Login.masterData.DesignMappedFeilds['jsondata'].value)\r\n                                                            [this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n                                                                    'MaterialStandardViewFields' : this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n                                                                        'MaterialVolumetricViewFields' : 'MaterialMatInventViewFields'\r\n                                                            ]}\r\n                                                            screenName=\"IDS_SAMPLEINFO\"\r\n                                                            userInfo={this.props.Login.userInfo}\r\n\r\n                                                        />\r\n                                                    </Row>\r\n                                                    {this.props.Login.masterData && <CustomTab activeKey={this.props.Login.masterData.tabScreen || 'IDS_MATERIALMSDSATTACHMENT'} tabDetail={this.tabDetail()} onTabChange={this.onTabChange} />}\r\n                                                </Card.Body>\r\n                                            </Card> : \"\"}\r\n                                    </ContentPanel>\r\n                                </Col>\r\n                            </Row>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n                {/* {this.props.Login.openPortal &&\r\n\r\n                        <DynamicSlideout\r\n                            selectedRecord={this.state.selectedRecord}\r\n                            enableDisableTextInput={this.props.Login.selectedRecord['IDS_EXPIRY']}\r\n                            templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                this.props.Login.masterData.selectedTemplate[0].jsondata}\r\n                            onNumericInputChange={this.onNumericInputChange}\r\n                            handleChange={this.handleChange}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            comboData={this.props.Login.templateData && this.props.Login.templateData.comboData}\r\n                            onComboChange={this.onComboChangedynamic}\r\n\r\n                        />\r\n                } */}\r\n                {\r\n                    this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.screenname === 'IDS_MATERIALSAFETYINSTRUCTIONS' ? '' :\r\n                            this.props.Login.screenname === 'IDS_MATERIALPROPERTY' ? '' :\r\n                                this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenname}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenname === 'IDS_MATERIALMSDSATTACHMENT' ? mandatoryFieldsMaterialFile : this.props.Login.screenname === 'IDS_MATERIAL' ? this.dynamicmandatoryFeilds() :\r\n                            this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ?\r\n                                this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ? mandatoryFieldsMaterialSection : ''\r\n                                : ''}\r\n                        updateStore={this.props.updateStore}\r\n                        addComponent={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                />\r\n                                :\r\n                                this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\" ?\r\n                                    this.props.Login.screenname !== 'IDS_MATERIALPROPERTY' ?\r\n                                        this.props.Login.screenname !== 'IDS_MATERIALSAFETYINSTRUCTIONS' ?\r\n                                            this.props.Login.showMaterialSection ?\r\n                                                <AddMaterialSection\r\n                                                    selectedRecord={this.props.Login.selectedRecord || {}}\r\n                                                    onInputOnChange={this.onInputOnChange}\r\n                                                    MaterialSectionCombodata={this.props.Login.masterData.MaterialSection && this.props.Login.masterData.MaterialSection}\r\n                                                    onNumericInputChange={this.onNumericInputChange}\r\n                                                    onComboChange={this.onComboChange}\r\n                                                    isDisabled={this.props.Login.isneedcombomulti && this.props.Login.isneedcombomulti}\r\n                                                    ismaterialsectionEdit={this.props.Login.ismaterialsectionEdit}\r\n\r\n                                                    comboData={this.props.Login.masterData.productCategoryList}\r\n                                                />\r\n                                                :\r\n                                                <DynamicSlideout\r\n                                                    operation={this.props.Login.operation}\r\n                                                    showSectionWhileEdit={this.state.showSectionWhileEdit}\r\n                                                    selectedRecord={this.state.selectedRecord}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    isBreadCrumbCategory=\r\n                                                    {this.props.Login.operation==='update'?\r\n                                                    this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode===\r\n                                                        this.props.Login.selectedRecord['Material Category'].value?true:false\r\n                                                    :false}\r\n                                                    enableDisableNeedExpiry={this.props.Login.selectedRecord['Expiry']}\r\n                                                    enableDisableOpenExpiry={this.props.Login.selectedRecord['Open Expiry Need']}\r\n                                                    enableDisableExpiryPolicy={this.props.Login.selectedRecord['Expiry Validations']}\r\n                                                    templateData={this.props.Login.masterData.selectedTemplate &&\r\n                                                        this.props.Login.masterData.selectedTemplate[0].jsondata}\r\n                                                    onNumericInputChange={this.onNumericInputChange}\r\n                                                    handleChange={this.handleChange}\r\n                                                    onInputOnChange={this.onInputOnChange}\r\n                                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                                    handleDateChange={this.handleDateChange}\r\n                                                    comboData={this.props.Login.templateData && this.props.Login.templateData.comboData}\r\n                                                    onComboChange={this.onComboChangedynamic}\r\n                                                    // ismaterialSectionneed={this.state.ismaterialSectionneed}\r\n                                                    screenname={this.props.Login.screenname}\r\n                                                    ismaterialSectionneed={this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item &&\r\n                                                        this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise\r\n                                                        || this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].needsectionwise || this.props.Login.masterData.ismaterialSectionneed}\r\n                                                />\r\n                                            :\r\n                                            <DynamicSlideout\r\n                                                selectedRecord={this.state.selectedRecord}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                templateData={this.props.Login.masterData.selectedTemplateSafetyInstructions &&\r\n                                                    this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata}\r\n                                                handleChange={this.handleChange}\r\n                                                onInputOnChange={this.onInputOnChangeDynamic}\r\n                                            />\r\n                                        :\r\n                                        <DynamicSlideout\r\n                                            selectedRecord={this.props.Login.selectedRecord}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            templateData={this.props.Login.masterData.selectedTemplateProperties &&\r\n                                                this.props.Login.masterData.selectedTemplateProperties[0].jsondata}\r\n                                            // userInfo={this.props.Login.userInfo}\r\n                                            handleChange={this.handleChange}\r\n                                            onInputOnChange={this.onInputOnChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            timeZoneList={this.props.Login.timeZoneList && this.props.Login.timeZoneList}\r\n                                            onComboChange={this.onComboChangedynamic}\r\n                                            defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                        /> :\r\n                                    <AddMaterialFile\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onInputOnChange={this.onInputOnChange}\r\n                                        onDrop={this.onDropMaterialFile}\r\n                                        deleteAttachment={this.deleteAttachment}\r\n                                        onComboChange={this.onComboChange}\r\n                                        linkMaster={this.props.Login.linkMaster}\r\n                                        maxSize={20}\r\n                                        maxFiles={1}\r\n                                        multiple={false}\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_MATERIALMSDSATTACHMENT\" })}\r\n                                        name=\"testfilename\"\r\n                                    />\r\n                        }\r\n                    />\r\n                }\r\n            </>\r\n        );\r\n    }\r\n    dynamicmandatoryFeilds = () => {\r\n        let mandatoryFeildsMaterial = [];\r\n        this.props.Login.masterData.selectedTemplate &&\r\n            this.props.Login.masterData.selectedTemplate[0].jsondata.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        if (component.mandatory) {\r\n                            if (component.inputtype === 'combo') {\r\n                                mandatoryFeildsMaterial.push({\r\n                                    \"idsName\": component.label, \"dataField\": component.label,\r\n                                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                                })\r\n                            }\r\n                            else {\r\n                                mandatoryFeildsMaterial.push({\r\n                                    \"idsName\": component.label, \"dataField\": component.label,\r\n                                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                                })\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\r\n                            if (componentrow.mandatory) {\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    mandatoryFeildsMaterial.push({\r\n                                        \"idsName\": componentrow.label, \"dataField\": componentrow.label,\r\n                                        \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                                    })\r\n                                }\r\n                                else {\r\n                                    mandatoryFeildsMaterial.push({\r\n                                        \"idsName\": componentrow.label, \"dataField\": componentrow.label,\r\n                                        \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                                    })\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n            })\r\n        if (this.props.Login.selectedRecord['Expiry Validations']) {\r\n            if (this.props.Login.selectedRecord['Expiry Validations'] === 'Expiry policy') {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Expiry Policy Days\", \"dataField\": \"Expiry Policy Days\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                })\r\n            }\r\n        }\r\n        // if (this.props.Login.masterData.ismaterialSectionneed === transactionStatus.YES) {\r\n        if (this.props.Login.selectedRecord['Material Category'] !== undefined) {\r\n            if ((this.props.Login.selectedRecord['Material Category'] && this.props.Login.selectedRecord['Material Category'].item ?\r\n                this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise :\r\n                this.props.Login.selectedRecord['Material Category'].needsectionwise) === transactionStatus.YES) {\r\n                mandatoryFeildsMaterial.push({\r\n                    \"idsName\": \"Section\", \"dataField\": \"Section\",\r\n                    \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\"\r\n                }, {\r\n                    \"idsName\": \"Reorder Level\", \"dataField\": \"Reorder Level\",\r\n                    \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\"\r\n                })\r\n            } else {\r\n                mandatoryFeildsMaterial.map((temp, i) => {\r\n                    if (temp.idsName === 'Section' || temp.idsName === 'Reorder Level') {\r\n                        delete mandatoryFeildsMaterial[i];\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return mandatoryFeildsMaterial;\r\n    }\r\n    accordianDesign = () => {\r\n        let selectedmasterlistmain = [];\r\n        this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.jsondata !== undefined &&\r\n            selectedmasterlistmain.push(this.props.Login.masterData.SelectedMaterial.jsondata)\r\n\r\n        let designaccordian = [];\r\n        this.props.Login.masterData.selectedTemplate[0].jsondata.map((row) => {\r\n            row.children.map((column) => {\r\n                column.children.map((component) => {\r\n                    if (component.inputtype === 'combo') {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] ?\r\n                                            selectedmasterlistmain[0][component.label]['label'] : \"-\"}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    else if (component.inputtype === 'toggle') {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] &&\r\n                                            selectedmasterlistmain[0][component.label] === transactionStatus.YES ?\r\n                                            'Yes' : 'No'}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (component.label !== undefined) {\r\n                            designaccordian.push(<Col md='4'>\r\n                                <FormGroup>\r\n                                    <FormLabel><FormattedMessage id={[component.label]} message={[component.label]} /></FormLabel>\r\n                                    <ReadOnlyText>\r\n                                        {selectedmasterlistmain.length > 0 &&\r\n                                            selectedmasterlistmain[0][component.label] ? selectedmasterlistmain[0][component.label] : \"-\"}\r\n                                    </ReadOnlyText>\r\n\r\n                                </FormGroup>\r\n                            </Col>)\r\n                        }\r\n                    }\r\n                    component.hasOwnProperty(\"children\") && component.children.map((componentrow) => {\r\n                        if (componentrow.inputtype === 'combo') {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] ?\r\n                                                selectedmasterlistmain[0][componentrow.label]['label'] : \"-\"}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                        else if (componentrow.inputtype === 'toggle') {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] &&\r\n                                                selectedmasterlistmain[0][componentrow.label]['label'] === transactionStatus.YES ?\r\n                                                'Yes' : 'No'}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (componentrow.label !== undefined) {\r\n                                designaccordian.push(<Col md='4'>\r\n                                    <FormGroup>\r\n                                        <FormLabel><FormattedMessage id={[componentrow.label]} message={[componentrow.label]} /></FormLabel>\r\n                                        <ReadOnlyText>\r\n                                            {selectedmasterlistmain.length > 0 &&\r\n                                                selectedmasterlistmain[0][componentrow.label] ?\r\n                                                selectedmasterlistmain[0][componentrow.label] : \"-\"}\r\n                                        </ReadOnlyText>\r\n\r\n                                    </FormGroup>\r\n                                </Col>)\r\n                            }\r\n                        }\r\n                    }\r\n                    )\r\n                })\r\n            })\r\n        })\r\n        return designaccordian;\r\n    }\r\n    handleDateChange = (dateValue, dateName) => {\r\n\r\n        const { selectedRecord } = this.state;\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        isSelectedRecordChange = true;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord, isSelectedRecordChange });\r\n    }\r\n    onTabChange = (tabProps) => {\r\n        const tabScreen = tabProps.screenName;\r\n        let masterData = this.props.Login.masterData\r\n        masterData['tabScreen'] = tabScreen\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { masterData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onDropMaterialFile = (attachedFiles, fieldName, maxSize) => {\r\n\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\"\r\n        });\r\n    }\r\n    onSaveMaterialFile = () => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.sfilename;\r\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n        let isFileEdited = transactionStatus.NO;\r\n        let testFileArray = [];\r\n        let testFile = {\r\n            nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n            nmaterialfilecode: selectedRecord.nmaterialfilecode ? selectedRecord.nmaterialfilecode : 0,\r\n            nstatus: transactionStatus.ACTIVE,\r\n            nattachmenttypecode,\r\n            ndefaultstatus: selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] ? selectedRecord[nattachmenttypecode === attachmentType.LINK ? \"nlinkdefaultstatus\" : \"ndefaultstatus\"] : 4\r\n        };\r\n        const formData = new FormData();\r\n        if (nattachmenttypecode === attachmentType.FTP) {\r\n            if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    const tempData = Object.assign({}, testFile);\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                    const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\r\n                    const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\r\n                    const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0\r\n                        && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\r\n                    tempData[\"sfilename\"] = file.name;\r\n                    tempData[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    tempData[\"nfilesize\"] = file.size;\r\n                    tempData[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                        convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n                    formData.append(\"uploadedFile\" + index, file);\r\n                    formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                    testFileArray.push(tempData);\r\n                });\r\n                formData.append(\"filecount\", acceptedFiles.length);\r\n                isFileEdited = transactionStatus.YES;\r\n            } else {\r\n                testFile[\"sfilename\"] = selectedRecord.sfilename;\r\n                testFile[\"sdescription\"] = selectedRecord.sdescription ? selectedRecord.sdescription.trim() : \"\";\r\n                testFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                testFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                testFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                testFile[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                    convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n                testFileArray.push(testFile);\r\n            }\r\n        } else {\r\n            testFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n            testFile[\"sdescription\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\r\n            testFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            testFile[\"ssystemfilename\"] = \"\";\r\n            testFile[\"dcreateddate\"] = this.props.Login.dcreateddate &&\r\n                convertDateTimetoStringDBFormat(this.props.Login.dcreateddate, this.props.Login.userInfo)\r\n            testFile[\"nfilesize\"] = 0;\r\n            testFileArray.push(testFile);\r\n        }\r\n        formData.append(\"isFileEdited\", isFileEdited);\r\n        formData.append(\"materialmsdsattachment\", JSON.stringify(testFileArray[0]));\r\n\r\n        let inputParam;\r\n        if (this.props.Login.operation === 'create') {\r\n            inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"create\",\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialMsdsAttachment\"\r\n            }\r\n        }\r\n        else {\r\n            inputParam = {\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"update\",\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialMsdsAttachment\"\r\n            }\r\n        }\r\n\r\n        return inputParam;\r\n    }\r\n    tabDetail = () => {\r\n        const tabMap = new Map();\r\n        {\r\n            // let dataresultarr1 = []\r\n            // console.log('dcv :', this.props.Login.masterData.MaterialMsdsAttachment && this.props.Login.masterData.MaterialMsdsAttachment)\r\n            // this.props.Login.masterData.MaterialMsdsAttachment.map((temp) => {\r\n            //     temp['jsondata'].dcreateddate =\r\n            //      rearrangeDateFormatDateOnly(this.props.Login.userInfo, temp['jsondata'].dcreateddate)\r\n            // })\r\n            // console.log('dataresultarr1 :', this.props.Login.masterData.MaterialMsdsAttachment)\r\n\r\n            // let dataresultarr = []\r\n            // this.props.Login.masterData[\"MaterialSection\"] &&\r\n            //     this.props.Login.masterData[\"MaterialSection\"].map((temp) => {\r\n            //         return dataresultarr.push(temp.jsondata)\r\n            //     })\r\n           // console.log('xxx->>>', sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'))\r\n            this.props.Login.masterData.ismaterialSectionneed === 3 &&\r\n                tabMap.set(\"IDS_MATERIALSECTION\",\r\n                    <MaterialSectionTab\r\n                        controlMap={this.state.controlMap}\r\n                        userRoleControlRights={this.state.userRoleControlRights}\r\n                        dataResult={process(sortData(this.props.Login.masterData[\"MaterialSection\"], 'descending', 'nmaterialsectioncode'),\r\n                            (this.props.screenName === undefined || this.props.screenName === \"IDS_MATERIALSECTION\")\r\n                                ? this.state.sectionDataState : { skip: 0, take: 10 })}\r\n                        dataState={(this.props.screenName === undefined || this.props.screenname === \"IDS_MATERIALSECTION\")\r\n                            ? this.state.sectionDataState : { skip: 0, take: 10 }}\r\n                        dataStateChange={(event) => this.setState({ sectionDataState: event.dataState })}\r\n                        masterData={this.props.Login.masterData}\r\n                        userInfo={this.props.Login.userInfo}\r\n                        getTestDetails={this.props.getTestDetails}\r\n                        getAddMaterialSectionPopup={this.props.getAddMaterialSectionPopup}\r\n                        addParameter={this.addMaterialSection}\r\n                        deleteRecord={this.deleteRecordmain}\r\n                        fetchRecord={this.props.getMaterialSectionEdit}\r\n                        selectedRecord={this.props.Login.selectedRecord}\r\n                        screenName=\"IDS_MATERIALSECTION\"\r\n                    />\r\n                );\r\n            tabMap.set(\"IDS_MATERIALMSDSATTACHMENT\",\r\n                <MaterialMsdsAttachmentTab\r\n                    controlMap={this.state.controlMap}\r\n                    userRoleControlRights={this.state.userRoleControlRights}\r\n                    userInfo={this.props.Login.userInfo}\r\n                    deleteRecord={this.deleteRecordmain}\r\n                    MaterialMsdsAttachment={sortData(this.props.Login.masterData.MaterialMsdsAttachment, \"descending\", \"nmaterialfilecode\") || []}\r\n                    addMaterialFile={(param) => this.props.addMaterialFile(param, this.props.Login.masterData.SelectedMaterial)}\r\n                    viewMaterialFile={this.viewMaterialFile}\r\n                    screenName=\"IDS_MATERIALMSDSATTACHMENT\"\r\n                    settings={this.props.settings}\r\n                />);\r\n\r\n\r\n        }\r\n\r\n        return tabMap;\r\n    }\r\n    deleteRecordmain = (deleteParam) => {\r\n        const methodUrl = deleteParam.methodUrl;\r\n        const selected = deleteParam.methodUrl === 'MaterialSection' ? JSON.stringify(deleteParam.selectedRecord) :\r\n            JSON.stringify(deleteParam.selectedRecord);\r\n        let dataState = undefined;\r\n        if (this.props.screenName === \"IDS_SECTION\") {\r\n            dataState = this.state.sectionDataState;\r\n        } else if (this.props.screenName === \"IDS_METHOD\") {\r\n            dataState = this.state.methodDataState;\r\n        } else if (this.props.screenName === \"IDS_INSTRUMENTCATEGORY\") {\r\n            dataState = this.state.instrumentCatDataState;\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                ncontrolCode: deleteParam.ncontrolCode,\r\n                [methodUrl.toLowerCase()]: selected,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"material\",\r\n            operation: deleteParam.operation,\r\n            ncontrolCode: deleteParam.ncontrolCode,\r\n            methodUrl: methodUrl,\r\n            screenName: \"IDS_MATERIAL\", dataState\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"IDS_MATERIAL\", operation: deleteParam.operation, selectedRecord: {}\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\", {});\r\n        }\r\n    }\r\n\r\n    addMaterialSection = (param) => {\r\n        let showMaterialSection = this.props.Login.showMaterialSection\r\n        let ncontrolCode = this.props.Login.ncontrolCode\r\n\r\n        let openModal = this.props.Login.openModal\r\n        let isneedcombomulti = this.props.Login.isneedcombomulti;\r\n        isneedcombomulti = false;\r\n        showMaterialSection = true\r\n        openModal = true\r\n        ncontrolCode = param;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showMaterialSection, isneedcombomulti, openModal }\r\n        }\r\n        this.props.getAddMaterialSectionPopup(this.props.Login.masterData, this.props.Login.userInfo, updateInfo, ncontrolCode)\r\n\r\n\r\n    }\r\n\r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.handleClickDelete(this.props.Login.masterData, deleteId, \"openModal\"));\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = [];\r\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\r\n        inputData[\"materialCatList\"] = this.state.materialCatList;\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\r\n            this.props.getMaterialByTypeCode(this.state.selectedcombo,\r\n                this.state.selectedMaterialCat, this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.parentHeight) {\r\n            const height = this.parentHeight.clientHeight;\r\n            this.setState({\r\n                firstPane: height - 80,\r\n                parentHeight: height\r\n            });\r\n        }\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        // if (Array.isArray(this.props.Login.masterData)) {\r\n        breadCrumbData.push(\r\n            {\r\n                \"label\": \"IDS_MATERIALTYPE\",\r\n                \"value\": this.props.Login.masterData.SelectedMaterialType ?\r\n                    this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename && this.props.Login.masterData.SelectedMaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode] : \"NA\",\r\n\r\n            }, {\r\n\r\n            \"label\": \"IDS_MATERIALCAT\",\r\n            \"value\": this.props.Login.masterData.SelectedMaterialCategory ?\r\n                this.props.Login.masterData.SelectedMaterialCategory.smaterialcatname !== undefined ?\r\n                    this.props.Login.masterData.SelectedMaterialCategory.smaterialcatname : \"NA\" : \"NA\",\r\n        }\r\n        );\r\n        //  }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let bool = false;\r\n        let { selectedRecord, selectedcombo, comboitem, filterData, filterCatList, selectedMaterialCat,\r\n            materialCatList, ismaterialSectionneed ,showSectionWhileEdit} = this.state\r\n        const masterData = this.props.Login.masterData;\r\n        // if (this.props.Login.isSelectedRecordChange !== previousProps.Login.isSelectedRecordChange) {\r\n        //     bool = true;\r\n        //   isSelectedRecordChange = this.props.Login.isSelectedRecordChange\r\n        // }\r\n        // if (this.props.Login.selectedRecord.IDS_MATERIALCAT &&\r\n        //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        //     != previousProps.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise) {\r\n        //     bool = true;\r\n        //     ismaterialSectionneed = this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        // }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            bool = true;\r\n            selectedRecord = this.props.Login.selectedRecord\r\n        }\r\n        if (this.props.Login.selectedcombo !== previousProps.Login.selectedcombo) {\r\n            bool = true;\r\n            selectedcombo = this.props.Login.selectedcombo\r\n        }\r\n        \r\n        if (this.props.Login.showSectionWhileEdit !== previousProps.Login.showSectionWhileEdit) {\r\n            bool = true;\r\n            showSectionWhileEdit = this.props.Login.showSectionWhileEdit\r\n        }\r\n        if (this.props.Login.comboitem !== previousProps.Login.comboitem) {\r\n            bool = true;\r\n            comboitem = this.props.Login.comboitem\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({\r\n                userRoleControlRights, controlMap, data: this.props.Login.masterData.ControlRights\r\n            });\r\n        }\r\n        if (this.props.Login.masterData.MaterialType !== undefined) {\r\n            if (this.props.Login.masterData.MaterialType !== previousProps.Login.masterData.MaterialType) {\r\n                bool = true;\r\n                // const materialTypeList = constructOptionList(this.props.Login.masterData.MaterialType || [], \"nmaterialtypecode\",\r\n                //     \"smaterialtypename\", undefined, undefined, undefined);\r\n                //     constructOptionList(options, optionId,\r\n                //         optionValue, sortField, sortOrder, alphabeticalSort,\r\n                //          defaultStatusFieldName) \r\n                const materialTypeList = constructjsonOptionList(this.props.Login.masterData.MaterialType,\r\n                    \"nmaterialtypecode\", \"smaterialtypename\", undefined, undefined,\r\n                    undefined, undefined,\r\n                    undefined, true, this.props.Login.userInfo.slanguagetypecode)\r\n                filterCatList = materialTypeList.get(\"OptionList\");\r\n              //  console.log('masterData.MaterialType :', masterData.MaterialType)\r\n                selectedcombo = {\r\n                    nmaterialtypecode: masterData.MaterialType && masterData.MaterialType.length > 0 ? {\r\n                        \"value\": masterData.MaterialType[0].nmaterialtypecode,\r\n                        \"label\": masterData.MaterialType[0]['jsondata'].smaterialtypename[this.props.Login.userInfo.slanguagetypecode]\r\n                    } : \"\"\r\n                }\r\n            }\r\n        }\r\n        if (this.props.Login.masterData.MaterialCategoryMain !== previousProps.Login.masterData.MaterialCategoryMain) {\r\n            const MaterialCategoryMain = constructOptionList(this.props.Login.masterData.MaterialCategoryMain || [], \"nmaterialcatcode\",\r\n                \"smaterialcatname\", undefined, undefined, undefined);\r\n            materialCatList = MaterialCategoryMain.get(\"OptionList\");\r\n\r\n            selectedMaterialCat = {\r\n                nmaterialcatcode: masterData.MaterialCategoryMain && masterData.MaterialCategoryMain.length > 0 ? {\r\n                    \"value\": masterData.MaterialCategoryMain[0].nmaterialcatcode,\r\n                    \"label\": masterData.MaterialCategoryMain[0].smaterialcatname\r\n                } : \"\"\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            filterData = this.generateBreadCrumData();\r\n        }\r\n\r\n\r\n        if (this.props.Login.masterData.searchedData !== previousProps.Login.masterData.searchedData) {\r\n            if (this.props.Login.masterData.searchedData) {\r\n                if (this.props.Login.masterData.searchedData.length <= this.state.skip) {\r\n                    this.setState({ skip: 0 });\r\n                }\r\n            }\r\n        }\r\n\r\n        if (bool) {\r\n            this.setState({\r\n                selectedRecord, comboitem, filterData, selectedcombo, filterCatList, selectedMaterialCat,\r\n                materialCatList, isSelectedRecordChange: false,showSectionWhileEdit\r\n                //, \r\n                // ismaterialSectionneed \r\n                // : bool?this.props.Login.selectedRecord.IDS_MATERIALCAT&&\r\n                // this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise:ismaterialSectionneed\r\n            });\r\n        }\r\n        // else\r\n        // {\r\n        //     this.setState({\r\n        //     ismaterialSectionneed \r\n        //     : this.props.Login.selectedRecord.IDS_MATERIALCAT&&\r\n        //     this.props.Login.selectedRecord.IDS_MATERIALCAT.item.jsondata.needsectionwise\r\n        // });\r\n        // }\r\n    }\r\n\r\n    handlePageChange = e => {\r\n\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n\r\n    };\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    viewMaterialFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                nmaterialcode: this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                    && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                materialmsdsattachment: JSON.stringify(filedata),\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"material\",\r\n            operation: \"view\",\r\n            methodUrl: \"AttachedMaterialMsdsAttachment\",\r\n            screenname: \"IDS_MATERIALMSDSATTACHMENT\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let showSectionWhileEdit=this.props.Login.showSectionWhileEdit\r\n        let showMaterialSection = this.props.Login.showMaterialSection\r\n        let isneedcombomulti = this.props.Login.isneedcombomulti;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"retire\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            showMaterialSection = false;\r\n            isneedcombomulti = false;\r\n            showSectionWhileEdit= false;\r\n            selectedRecord = {};\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, showMaterialSection,showMaterialSection, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData != null) {\r\n            if (fieldName === \"nmaterialtypecode\") {\r\n                const selectedcombo = this.state.selectedcombo || {};\r\n                selectedcombo[fieldName] = comboData;\r\n                this.searchRef.current.value = \"\";\r\n                this.props.initialcombochangeget(comboData.item.nmaterialtypecode, this.props.Login.masterData, this.props.Login.userInfo);\r\n\r\n            }\r\n            else if (fieldName === \"nmaterialcatcode\") {\r\n                const selectedMaterialCat = this.state.selectedMaterialCat || {};\r\n                selectedMaterialCat[fieldName] = comboData;\r\n                this.setState({ selectedMaterialCat });\r\n            }\r\n\r\n            else if (fieldName === \"nmaterialsectioncode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nmaterialsectioncode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }\r\n            else if (fieldName === \"nlinkcode\") {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[\"nlinkcode\"] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }\r\n\r\n            else if (fieldName.displaymember === \"smaterialcatname\" || fieldName.displaymember === \"sunitname\" || fieldName.displaymember === \"speriodname\") {\r\n                const selectedMaterialCat = this.state.selectedMaterialCat || {};\r\n                selectedMaterialCat[fieldName] = comboData;\r\n                this.setState({ selectedMaterialCat });\r\n\r\n                let comboName = fieldName.label\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                if (comboData) {\r\n                    selectedRecord[comboName] = comboData;\r\n                } else {\r\n                    selectedRecord[comboName] = []\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n\r\n            else if (fieldName.label === \"IDS_STORAGECONDITION\") {\r\n                let comboName = fieldName.label\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                if (comboData) {\r\n                    selectedRecord[comboName] = comboData;\r\n                } else {\r\n                    selectedRecord[comboName] = []\r\n                }\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedRecord }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === \"value\") {\r\n                const comboitem = this.state.comboitem || {};\r\n                comboitem[fieldName] = comboData;\r\n                this.setState({ comboitem });\r\n            }\r\n        }\r\n    }\r\n\r\n    onComboChangedynamic = (comboData, control) => {\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if (control.inputtype === 'date') {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[`tz${control.label}`] = comboData;\r\n            isSelectedRecordChange = true\r\n            this.setState({ selectedRecord, isSelectedRecordChange });\r\n        }\r\n        else {\r\n            if (control.label === 'Material Category') {\r\n                let ismaterialSectionneed = this.props.Login.masterData.ismaterialSectionneed\r\n                let showSectionWhileEdit = this.state.showSectionWhileEdit\r\n                ismaterialSectionneed = comboData.item.jsondata.needsectionwise\r\n                // const updateInfo = {\r\n                //     typeName: DEFAULT_RETURN,\r\n                //     data: {\r\n                //         ismaterialSectionneed\r\n                //     }\r\n                // }\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[control.label] = comboData;\r\n                isSelectedRecordChange = true\r\n                showSectionWhileEdit = true\r\n                this.setState({ selectedRecord, isSelectedRecordChange, ismaterialSectionneed, showSectionWhileEdit });\r\n                //   this.props.onMaterialCatChange(comboData.item.jsondata.needsectionwise );\r\n            }\r\n            else {\r\n                const selectedRecord = this.state.selectedRecord || {};\r\n                selectedRecord[control.label] = comboData;\r\n                isSelectedRecordChange = true\r\n                this.setState({ selectedRecord, isSelectedRecordChange });\r\n            }\r\n        }\r\n\r\n    }\r\n    onInputOnChangeDynamic = (event, radiotext) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === 'timeonly') {\r\n                selectedRecord['dateonly'] = false;\r\n            }\r\n            if (event.target.name === 'dateonly') {\r\n                selectedRecord['timeonly'] = false;\r\n            }\r\n            const value = selectedRecord[event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index == 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(indexcomma + 1)\r\n\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            //  const  indexcomma= value.indexOf(\",\")\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = radiotext;\r\n            }\r\n        }\r\n        else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = radiotext;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        isSelectedRecordChange = true;\r\n        this.setState({ selectedRecord, isSelectedRecordChange });\r\n    }\r\n    onInputOnChange = (event, optional2) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let isSelectedRecordChange = this.state.isSelectedRecordChange\r\n        if (this.props.Login.screenname !== \"IDS_MATERIALMSDSATTACHMENT\") {\r\n            if (event.target.type === 'checkbox') {\r\n                if (event.target.name === \"ntransactionstatus\")\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n                else\r\n                    selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n                if (event.target.name === 'Expiry') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Expiry Policy Days']) {\r\n                            delete selectedRecord['Expiry Policy Days']\r\n                        }\r\n\r\n                        if (selectedRecord['tzExpiry Policy Days']) {\r\n                            delete selectedRecord['tzExpiry Policy Days']\r\n                        }\r\n                        if (selectedRecord['Need Expiry']) {\r\n                            selectedRecord['Need Expiry'] = 4\r\n                        }\r\n                    }\r\n                }\r\n                if (event.target.name === 'Need Expiry' || event.target.name === 'Expiry Validations') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Expiry Policy Days']) {\r\n                            delete selectedRecord['Expiry Policy Days']\r\n                        }\r\n                        if (selectedRecord['tzExpiry Policy Days']) {\r\n                            delete selectedRecord['tzExpiry Policy Days']\r\n                        }\r\n                    } \r\n                }\r\n\r\n                if (event.target.name === 'Open Expiry Need') {\r\n                    if (selectedRecord[event.target.name] === 4) {\r\n                        if (selectedRecord['Open Expiry']) {\r\n                            delete selectedRecord['Open Expiry']\r\n                        }\r\n                        if (selectedRecord['tzOpen Expiry']) {\r\n                            delete selectedRecord['tzOpen Expiry']\r\n                        }\r\n                    }\r\n                }\r\n            } else if (event.target.type === 'radio') {\r\n                 if (optional2 !== 'Expiry policy') {\r\n                    if (selectedRecord['Expiry Policy Days']) {\r\n                        delete selectedRecord['Expiry Policy Days']\r\n                    }\r\n                    if (selectedRecord['tzExpiry Policy Days']) {\r\n                        delete selectedRecord['tzExpiry Policy Days']\r\n                    }\r\n                }\r\n                selectedRecord[event.target.name] = optional2\r\n            }\r\n            else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n            isSelectedRecordChange = true\r\n            this.setState({ selectedRecord, isSelectedRecordChange });\r\n        }\r\n        else {\r\n            if (event.target.type === 'checkbox') {\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n            } else if (event.target.type === 'radio') {\r\n                selectedRecord[event.target.name] = optional2;\r\n            } else {\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n    }\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        let inputParam = {};\r\n        let varmain = {};\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let postParam = undefined;\r\n        inputData[\"DateList\"] = []\r\n        if (this.props.Login.screenname === \"IDS_MATERIAL\") {\r\n\r\n            // if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1) {\r\n            //     varmain = \"Standard Name\"\r\n            // }\r\n            // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2) {\r\n            //     varmain = \"Volumetric Name\"\r\n            // }\r\n            // else if (this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 3) {\r\n            //     varmain = \"Material Name\"\r\n            // }\r\n            inputData[\"Material\"] = {}\r\n            inputData[\"jsonuidata\"] = {}\r\n\r\n            const Layout = this.props.Login.masterData.selectedTemplate[0].jsondata\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n\r\n\r\n                        if (component.inputtype === 'combo') {\r\n\r\n                            inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] ? {\r\n                                label: this.state.selectedRecord[component.label][\"label\"],\r\n                                value: this.state.selectedRecord[component.label][\"value\"]\r\n                            } : \"\"\r\n                            inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ?\r\n                                this.state.selectedRecord[component.label][\"label\"]\r\n                                : \"\"\r\n                        }\r\n                        else if (component.inputtype === 'date') {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                inputData[\"Material\"][`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\r\n                                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\r\n                                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\r\n                                } : {\r\n                                    label: this.props.Login.userInfo['stimezoneid'],\r\n                                    value: this.props.Login.userInfo['ntimezonecode']\r\n                                }\r\n                                inputData[\"Material\"][component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                inputData[\"DateList\"].push(component.label)\r\n                            }\r\n                            inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] ?\r\n                                convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                : \"\"\r\n\r\n                        }\r\n                        else if (component.inputtype === 'toggle') {\r\n                            // if (component.label === 'Quarantine') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]===undefined?4:\r\n                            //     this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Expiry') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Need Expiry') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Open Expiry Need') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            // else if (component.label === 'Reusable') {\r\n                            //     inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            // }\r\n                            if (this.state.selectedRecord[component.label] === \"\") {\r\n                                inputData[\"Material\"][component.label] = 4\r\n                            } else if (this.state.selectedRecord[component.label] === undefined) {\r\n                                inputData[\"Material\"][component.label] = 4\r\n                            }\r\n                            else {\r\n                                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label]\r\n                            }\r\n                            if (this.state.selectedRecord[component.label] !== \"\") {\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] === transactionStatus.YES ?\r\n                                    'Yes' : 'No'\r\n                            }\r\n                        }\r\n                        else {\r\n                         //   if (this.state.selectedRecord[component.label] !== undefined) {\r\n                                inputData[\"Material\"][component.label] = this.state.selectedRecord[component.label] !== undefined?\r\n                                this.state.selectedRecord[component.label]?this.state.selectedRecord[component.label]:\"\":\"\"\r\n                           // }\r\n                        //    if (this.state.selectedRecord[component.label] !== undefined) {\r\n                                inputData[\"jsonuidata\"][component.label] = this.state.selectedRecord[component.label] !== undefined?\r\n                                this.state.selectedRecord[component.label]?this.state.selectedRecord[component.label]:\"\":\"\"\r\n                       //    }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                        {\r\n                                            label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                            value: this.state.selectedRecord[componentrow.label][\"value\"]\r\n                                        } : \"\"\r\n                                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                        this.state.selectedRecord[componentrow.label][\"label\"]\r\n                                        : \"\"\r\n                                } else if (componentrow.inputtype === 'date') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        inputData[\"Material\"][`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\r\n                                            label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\r\n                                            value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\r\n                                        } : {\r\n                                            label: this.props.Login.userInfo['stimezoneid'],\r\n                                            value: this.props.Login.userInfo['ntimezonecode']\r\n                                        }\r\n                                        inputData[\"Material\"][componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label],\r\n                                            this.props.Login.userInfo)\r\n                                        inputData[\"DateList\"].push(componentrow.label)\r\n                                    }\r\n                                    inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] ?\r\n                                        convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label], this.props.Login.userInfo)\r\n                                        : \"\"\r\n\r\n                                } else if (componentrow.inputtype === 'toggle') {\r\n                                    if (this.state.selectedRecord[componentrow.label] === \"\") {\r\n                                        inputData[\"Material\"][componentrow.label] = 4\r\n                                    } else if (this.state.selectedRecord[componentrow.label] === undefined) {\r\n                                        inputData[\"Material\"][componentrow.label] = 4\r\n                                    }\r\n                                    else {\r\n                                        inputData[\"Material\"][componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                    }\r\n                                    if (this.state.selectedRecord[componentrow.label] !== \"\") {\r\n                                        inputData[\"jsonuidata\"][componentrow.label] = this.state.selectedRecord[componentrow.label] === transactionStatus.YES ?\r\n                                            'Yes' : 'No'\r\n                                    }\r\n                                }\r\n                                else {\r\n                                 //  if (this.state.selectedRecord[componentrow.label] !== undefined) {\r\n                                        inputData[\"Material\"][componentrow.label] =this.state.selectedRecord[componentrow.label] !== undefined?\r\n                                        this.state.selectedRecord[componentrow.label]?this.state.selectedRecord[componentrow.label]:\"\":\"\"\r\n                                  // }\r\n                                  // if (this.state.selectedRecord[componentrow.label] !== undefined) {\r\n                                        inputData[\"jsonuidata\"][componentrow.label] =  this.state.selectedRecord[componentrow.label] !== undefined?\r\n                                        this.state.selectedRecord[componentrow.label]?this.state.selectedRecord[componentrow.label]:\"\":\"\"\r\n                              // }\r\n                            }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            // inputData[\"Material\"][varmain] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 1 ?\r\n            //     this.state.selectedRecord['Standard Name'] :\r\n            //     this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode === 2 ?\r\n            //         this.state.selectedRecord['Volumetric Name'] :\r\n            //         this.state.selectedRecord['Material Name']\r\n\r\n            inputData[\"Material\"][\"Material Name\"] = this.state.selectedRecord['Material Name'] && this.state.selectedRecord['Material Name']\r\n\r\n            inputData[\"Material\"] = {\r\n                ...inputData[\"Material\"],\r\n                \"nmaterialcatcode\": this.state.selectedRecord['Material Category'].value,\r\n                \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            }\r\n\r\n            inputData[\"materialJson\"] = JSON.stringify(inputData[\"Material\"])\r\n            inputData[\"jsonuidata\"] = JSON.stringify(inputData[\"jsonuidata\"])\r\n            inputData[\"ntransactionstatus\"] = inputData[\"Material\"]['Quarantine']\r\n            inputData[\"nmaterialtypecode\"] = this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            inputData[\"nmaterialcatcode\"] = this.state.selectedRecord['Material Category'].value\r\n            \r\n            inputData[\"needsectionwise\"] = this.props.Login.selectedRecord['Material Category'].item?\r\n            this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise:\r\n            this.props.Login.selectedRecord['Material Category'].needsectionwise\r\n            if (this.props.Login.selectedRecord['Material Category'].item?\r\n            this.props.Login.selectedRecord['Material Category'].item.jsondata.needsectionwise:\r\n            this.props.Login.selectedRecord['Material Category'].needsectionwise === transactionStatus.YES) {\r\n                // inputData[\"materialSectionJson\"] = [{\r\n                //     \"ssectionname\": this.state.selectedRecord[\"Section\"].label,\r\n                //     \"nsectioncode\": this.state.selectedRecord[\"Section\"].value,\r\n                //     \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"]\r\n                //     //,\r\n                //     //\"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                // }];\r\n                inputData[\"materialSectionJson\"]={\r\n                    \"nreorderlevel\": this.state.selectedRecord[\"Reorder Level\"] && this.state.selectedRecord[\"Reorder Level\"],\r\n                     \"nsectioncode\" : this.state.selectedRecord[\"Section\"]&&this.state.selectedRecord[\"Section\"].value\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(inputData[\"materialSectionJson\"])\r\n            }\r\n            if (this.props.Login.operation === 'create') {\r\n              \r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"Material\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef,\r\n                    dataState: this.state.dataState\r\n                }\r\n            }\r\n            else {\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"Material\",\r\n                    inputData: inputData,\r\n                    operation: this.props.Login.operation,\r\n                    saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef,\r\n                    dataState: this.state.dataState\r\n                }\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (this.props.Login.screenName === \"IDS_MATERIAL\") {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                }\r\n            } else {\r\n                if (this.props.Login.masterData.copyScreenRights ? this.props.Login.masterData.copyScreenRights.length > 0 : false) {\r\n                    this.ConfirmComponent()\r\n                }\r\n                else {\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALSAFETYINSTRUCTIONS\") {\r\n            const Layout = this.props.Login.masterData.selectedTemplateSafetyInstructions[0].jsondata\r\n            const dynamicobj = {};\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        if (component.inputtype === 'combo') {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[component.label] = {\r\n                                    label: this.state.selectedRecord[component.label][\"label\"],\r\n                                    value: this.state.selectedRecord[component.label][\"value\"]\r\n                                }\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[component.label] = this.state.selectedRecord[component.label]\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] =\r\n                                        {\r\n                                            label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                            value: this.state.selectedRecord[componentrow.label][\"value\"]\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n            if (this.props.Login.masterData.MaterialSafetyInstructions.length > 0) {\r\n                inputData[\"nmaterialsafetyinstructionscode\"] =\r\n                    this.props.Login.masterData.MaterialSafetyInstructions[0].nmaterialsafetyinstructionscode\r\n            }\r\n            else {\r\n                inputData[\"nmaterialsafetyinstructionscode\"] = 0\r\n            }\r\n\r\n            inputData[\"materialSafetyInstructions\"] = JSON.stringify(dynamicobj)\r\n            inputData[\"nflag\"] = 1;\r\n            inputParam = {\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialSafetyInstructions\",\r\n                inputData: inputData,\r\n                operation: 'create',\r\n                saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                searchRef: this.searchRef,\r\n                dataState: this.state.dataState\r\n            }\r\n            let masterData = this.props.Login.masterData\r\n            if (this.state.isSelectedRecordChange) {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n            else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: false\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALMSDSATTACHMENT\") {\r\n            inputParam = this.onSaveMaterialFile();\r\n            let masterData = this.props.Login.masterData\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n\r\n        }\r\n        else if (this.props.Login.screenname === \"IDS_MATERIALPROPERTY\") {\r\n\r\n            let masterData = this.props.Login.masterData\r\n            const Layout = this.props.Login.masterData.selectedTemplateProperties[0].jsondata\r\n            const dynamicobj = {};\r\n            inputData[\"DateList\"] = [];\r\n            Layout.map((row) => {\r\n                row.children.map((column) => {\r\n                    column.children.map((component) => {\r\n                        if (component.inputtype === 'combo') {\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[component.label] = {\r\n                                    label: this.state.selectedRecord[component.label][\"label\"],\r\n                                    value: this.state.selectedRecord[component.label][\"value\"]\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (component.inputtype === 'date') {\r\n\r\n                            if (this.state.selectedRecord[component.label]) {\r\n                                dynamicobj[`tz${component.label}`] = component.hasOwnProperty('timezone') ? {\r\n                                    label: this.state.selectedRecord[`tz${component.label}`][\"label\"],\r\n                                    value: this.state.selectedRecord[`tz${component.label}`][\"value\"]\r\n                                } : {\r\n                                    label: this.props.Login.userInfo['stimezoneid'],\r\n                                    value: this.props.Login.userInfo['ntimezonecode']\r\n                                }\r\n                                dynamicobj[component.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[component.label], this.props.Login.userInfo)\r\n                                inputData[\"DateList\"].push(component.label)\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (this.state.selectedRecord.hasOwnProperty(component.label)) {\r\n                                dynamicobj[component.label] = this.state.selectedRecord[component.label]\r\n                            }\r\n                        }\r\n                        component.hasOwnProperty(\"children\") && component.children.map(\r\n                            (componentrow) => {\r\n                                if (componentrow.inputtype === 'combo') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] =\r\n                                        {\r\n                                            label: this.state.selectedRecord[componentrow.label][\"label\"],\r\n                                            value: this.state.selectedRecord[componentrow.label][\"value\"]\r\n                                        }\r\n                                    }\r\n                                }\r\n                                else if (componentrow.inputtype === 'date') {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[`tz${componentrow.label}`] = componentrow.hasOwnProperty('timezone') ? {\r\n                                            label: this.state.selectedRecord[`tz${componentrow.label}`][\"label\"],\r\n                                            value: this.state.selectedRecord[`tz${componentrow.label}`][\"value\"]\r\n                                        } : {\r\n                                            label: this.props.Login.userInfo['stimezoneid'],\r\n                                            value: this.props.Login.userInfo['ntimezonecode']\r\n                                        }\r\n                                        dynamicobj[componentrow.label] = convertDateTimetoStringDBFormat(this.state.selectedRecord[componentrow.label],\r\n                                            this.props.Login.userInfo)\r\n                                        inputData[\"DateList\"].push(componentrow.label)\r\n                                    }\r\n\r\n                                }\r\n                                else {\r\n                                    if (this.state.selectedRecord[componentrow.label]) {\r\n                                        dynamicobj[componentrow.label] = this.state.selectedRecord[componentrow.label]\r\n                                    }\r\n                                }\r\n                            }\r\n                        )\r\n                    })\r\n                })\r\n            })\r\n            inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n            if (this.props.Login.masterData.MaterialProperties.length > 0) {\r\n                inputData[\"nmaterialpropertycode\"] =\r\n                    this.props.Login.masterData.MaterialProperties[0].nmaterialpropertycode\r\n            } else {\r\n                inputData[\"nmaterialpropertycode\"] = 0\r\n            }\r\n            //inputData[\"DateList\"] = JSON.stringify(DateList)\r\n            inputData[\"materialProperty\"] = JSON.stringify(dynamicobj)\r\n            inputData[\"nflag\"] = 2;\r\n            inputParam = {\r\n                classUrl: \"material\",\r\n                methodUrl: \"MaterialSafetyInstructions\",\r\n                inputData: inputData,\r\n                operation: 'create',\r\n                saveType, formRef, postParam, selectedRecord: this.state.selectedRecord,\r\n                searchRef: this.searchRef,\r\n                dataState: this.state.dataState\r\n            }\r\n            if (this.state.isSelectedRecordChange) {\r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n                }\r\n            }\r\n            else {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: false\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n        else {\r\n            if (this.props.Login.operation !== \"update\") {\r\n                let showMaterialSection = this.props.Login.showMaterialSection\r\n                let newarr = []\r\n                let newarr1 = []\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                if (this.state.selectedRecord[\"nmaterialsectioncode\"].length > 1) {\r\n                    newarr = this.state.selectedRecord.nmaterialsectioncode.map(temp => {\r\n                        return {\r\n                            \"ssectionname\": temp.label,\r\n                            \"nsectioncode\": temp.value,\r\n                            \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                            \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                        }\r\n                    })\r\n                    newarr1[\"nsectioncode\"]=\"\"\r\n                   // let nsectioncode;\r\n                     this.state.selectedRecord.nmaterialsectioncode.map(temp => {\r\n                        newarr1[\"nsectioncode\"]+= temp.value+','\r\n                    }) \r\n                    newarr1={\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                        \"nsectioncode\":newarr1[\"nsectioncode\"].substring(0, newarr1[\"nsectioncode\"].length - 1)\r\n                    }\r\n                }\r\n                else {\r\n                    newarr.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                    });\r\n                newarr1={\r\n                    \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                    \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                     \"nsectioncode\" : this.state.selectedRecord[\"nmaterialsectioncode\"][0].value\r\n                }\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarr)\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarr1)\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"MaterialSection\",\r\n                    inputData: inputData,\r\n                    operation: \"create\",\r\n                    showMaterialSection: showMaterialSection,\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef\r\n                }\r\n            }\r\n            else {\r\n                let newarrobj = []\r\n                inputData[\"nmaterialcode\"] = this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                if (Array.isArray(this.state.selectedRecord[\"nmaterialsectioncode\"])) {\r\n                    newarrobj.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"][0].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                    });\r\n                }\r\n                else {\r\n                    newarrobj.push({\r\n                        \"ssectionname\": this.state.selectedRecord[\"nmaterialsectioncode\"].label,\r\n                        \"nsectioncode\": this.state.selectedRecord[\"nmaterialsectioncode\"].value,\r\n                        \"nreorderlevel\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"],\r\n                        \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial.nmaterialcode\r\n                    });\r\n                }\r\n                inputData[\"materialSectionJson\"] = JSON.stringify(newarrobj)\r\n                inputData[\"MaterialSection\"] = {\r\n                    \"Reorder Level\": this.state.selectedRecord[\"nreorderlevel\"] && this.state.selectedRecord[\"nreorderlevel\"]\r\n\r\n                }\r\n                inputData[\"nmaterialsectioncode\"] = this.state.selectedRecord.nmaterialsectioncodeprimaryKeyValue\r\n\r\n                inputParam = {\r\n                    classUrl: \"material\",\r\n                    methodUrl: \"MaterialSection\",\r\n                    inputData: inputData,\r\n                    showMaterialSection: false,\r\n                    operation: \"update\",\r\n                    selectedRecord: this.state.selectedRecord,\r\n                    searchRef: this.searchRef\r\n                }\r\n            }\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }\r\n    }\r\n    // onNumericInputChange = (value, name) => {\r\n    //     // const re = /^[0-9\\b]+$/;\r\n    //     // let selectedRecord = this.state.selectedRecord\r\n    //     // if (re.test(value)) {\r\n    //     //     selectedRecord[name] = value;\r\n    //     //     this.setState({selectedRecord})\r\n    //     //  }\r\n    //     let selectedRecord = this.state.selectedRecord\r\n    //     selectedRecord[name] = value;\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    // handleDateChange = (dateValue, dateName) => {\r\n    //     const { selectedRecord } = this.state;\r\n    //     selectedRecord[dateName] = dateValue;\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        // let value = event.target.value;\r\n\r\n        // if (isNaN(value)) {\r\n        // if (parseInt(value) < 10) {\r\n        //  let x=value.toString().replace(/\\D/g,'')\r\n        // if (value === 0) {\r\n        //     delete selectedRecord[name]\r\n        //     selectedRecord[name]=''\r\n        // }\r\n        // else {\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n\r\n        //   }\r\n\r\n        // }\r\n        // }\r\n\r\n    }\r\n    // onNumericInputChange = (value, name) => {\r\n    //     console.log(\"value:\", value, name);\r\n    //     const selectedRecord = this.state.selectedRecord || {};\r\n    //     if (name === \"nroundingdigits\") {\r\n\r\n    //         if (/^-?\\d*?$/.test(value.target.value) || value.target.value === \"\") {\r\n    //             console.log(\"val:\", value.target.value);\r\n    //             selectedRecord[name] = value.target.value;\r\n    //         }\r\n    //     }\r\n    //     else {\r\n    //         selectedRecord[name] = value;\r\n    //     }\r\n\r\n    //     this.setState({ selectedRecord });\r\n    // }\r\n    ConfirmComponent = () => {\r\n        this.confirmMessage.confirm(\"confirmation\", \"Confiramtion!\", this.props.intl.formatMessage({ id: \"IDS_OVERWRITRTHEEXISTINGSCREENRIGHTS\" }),\r\n            \"ok\", \"cancel\", () => this.copyAlertSave());\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    handleClickDelete(masterData, ncontrolcode, modalName) {\r\n        const fieldArray = [];\r\n        let postParam = {\r\n            inputListName: \"Material\", selectedObject: \"SelectedMaterial\",\r\n            primaryKeyField: \"nmaterialcode\",\r\n            primaryKeyValue: fieldArray,\r\n            fetchUrl: \"material/getMaterial\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        modalName = 'openModal'\r\n        const inputParam = {\r\n            methodUrl: \"Material\",\r\n            classUrl: \"material\",\r\n            inputData: {\r\n                \"material\": this.props.Login.masterData.SelectedMaterial,\r\n                \"nmaterialcatcode\": this.props.Login.masterData.SelectedMaterialCategory.nmaterialcatcode,\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                \"nmaterialcode\": this.props.Login.masterData.SelectedMaterial && this.props.Login.masterData.SelectedMaterial.nmaterialcode,\r\n                \"nmaterialtypecode\": this.props.Login.masterData.SelectedMaterialType[0].nmaterialtypecode\r\n            },\r\n            operation: \"delete\", postParam,\r\n            displayName: \"Material\",\r\n        }\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, [modalName]: true,\r\n                    operation: 'delete', screenName: \"Material\", id: \"material\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, modalName);\r\n        }\r\n    }\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        let inputData = [];\r\n        inputData[\"nmaterialtypecode\"] = this.state.selectedcombo[\"nmaterialtypecode\"];\r\n        inputData[\"materialCatList\"] = this.state.materialCatList;\r\n        this.setState({ sectionDataState: { skip: 0, take: 10 } })\r\n        if (this.state.selectedcombo[\"nmaterialtypecode\"]) {\r\n            this.props.getMaterialReload(this.props.Login.masterData.SelectedMaterialType, this.props.Login.masterData.SelectedMaterialCategory,\r\n                this.props.Login.masterData, this.props.Login.userInfo);\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTUSERROLE\" }));\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, updateStore, initialcombochangeget, getAddMaterialPopup, viewAttachment, getMaterialReload,\r\n    crudMaster, getMaterialDetails, getMaterialEdit, getMaterialByTypeCode, addMaterialFile\r\n    , getAddMaterialSectionPopup, getMaterialSectionEdit, filterColumnData, validateEsignCredential, addSafetyInstructions, addMaterialProperty\r\n})(injectIntl(Material));\r\n\r\n"]},"metadata":{},"sourceType":"module"}