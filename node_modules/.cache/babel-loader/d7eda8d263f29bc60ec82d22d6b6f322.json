{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import{faBarcode,faFileExcel,faFileImport}from\"@fortawesome/free-solid-svg-icons\";import{connect}from'react-redux';import{injectIntl}from'react-intl';import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{Button,Nav}from\"react-bootstrap\";//import { openBarcodeModal } from '../../actions'\n//import { connect } from \"react-redux\";\nimport SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import Esign from\"../audittrail/Esign\";import{constructOptionList,deleteAttachmentDropZone,onDropAttachFileList,showEsign}from\"../../components/CommonScript\";import rsapi from\"../../rsapi\";import Axios from\"axios\";import{toast}from\"react-toastify\";import{FontIconWrap}from'../../components/data-grid/data-grid.styles';import Preloader from'../../components/preloader/preloader.component';import{dynamicExportTemplate,updateStore,crudMaster,dynamicImportTemplate}from'../../actions';import AddFile from\"../goodsin/AddFile\";import{DEFAULT_RETURN}from\"../../actions/LoginTypes\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var ExportButton=/*#__PURE__*/function(_React$Component){_inherits(ExportButton,_React$Component);var _super=_createSuper(ExportButton);function ExportButton(props){var _this;_classCallCheck(this,ExportButton);_this=_super.call(this,props);_this.openBarcodeModal=function(selectedMaster,ncontrolCode,userinfo){_this.setState({loading:true});var urlArray=[];var getPrinter=rsapi.post(\"barcode/getPrinter\",userinfo);var getControlBasedBarcode=rsapi.post(\"barcodeconfiguration/checkConfiguration\",{selectedMaster:selectedMaster,ncontrolCode:ncontrolCode,userinfo:userinfo,Multiselect:Array.isArray(selectedMaster)});urlArray=[getPrinter,getControlBasedBarcode];Axios.all(urlArray).then(function(response){var printer=constructOptionList(response[0].data||[],\"sprintername\",\"sprintername\",undefined,undefined,true).get(\"OptionList\");var barcode=constructOptionList(response[1].data.Barcode||[],\"sbarcodename\",\"sbarcodename\",undefined,undefined,true).get(\"OptionList\");var selectedRecord={};if(printer.length>0)selectedRecord['sprintername']=printer[0];if(barcode.length>0)selectedRecord['nbarcode']=barcode[0];selectedRecord['nbarcodeprint']=1;_this.setState({openBarcodeModal:true,ncontrolCode:ncontrolCode,Printer:printer,BarcodeList:barcode,operation:\"Printbarcode\",nbarcodeprint:response[1].data.nbarcodeprint,selectedRecord:selectedRecord,loadBarcode:true,loading:false});}).catch(function(error){// dispatch(initRequest(false));\nif(error.response.status===500){toast.error(error.message);}else{toast.warn(_this.props.intl.formatMessage({id:error.response.data}));}});};_this.onSaveImportClick=function(saveType,formRef){var inputParam={};var selectedRecord=_this.state.selectedRecord;var isFileupload=true;var formData=new FormData();formData.append(\"ImportFile\",selectedRecord['stemplatefilename'][0]);formData.append(\"nformcode\",_this.props.Login.userInfo&&_this.props.Login.userInfo.nformcode);inputParam={formData:formData,isFileupload:isFileupload,methodUrl:\"Template\",operation:\"import\",classUrl:\"exportimport\",inputData:{\"userinfo\":_this.props.Login.userInfo},displayName:_this.props.Login.displayName};var saveType=_this.statesaveType;var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,dynamicfields:[],screenData:{masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.dynamicImportTemplate(inputParam,masterData,\"openExcelModal\");}};_this.onNumericInputChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?3:4;if(event.target.name==='nclientprinter'&&event.target.checked===true){//const printers =   window.navigator.printer.getPrinters();\n/////const names = printers.map(printer => printer.name);\n//selectedPrinterDatas {printername: { = names;\n// this.setState({ selectedPrinterData });\n}}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openExcel=_this.props.Login.openExcel;var openExcelModal=_this.props.Login.openExcelModal;var selectedRecord=_this.state.selectedRecord;var inputData;if(loadEsign){inputData={loadEsign:false,openExcel:true,openExcelModal:true};}else{inputData={loadEsign:false,openExcel:false,openExcelModal:false,selectedRecord:{}};}var updateInfo={typeName:DEFAULT_RETURN,data:_objectSpread({},inputData)};_this.props.updateStore(updateInfo);};_this.mandatoryFields=function(){var mandatory=[{\"idsName\":\"IDS_FILE\",\"dataField\":\"stemplatefilename\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"file\"}];return mandatory;};_this.dynamicExportTemplate=function(ExportControl){var headerName=[];if(_this.props.isDataGrid){_this.props.extractedColumnList.map(function(item){if(item.tablecolumnname!==\"ndefaultstatus\"&&item.controlType!=='NA'){headerName.push({'headerName':_this.props.intl.formatMessage({id:item.idsName})+\" (\"+item.tablecolumnname+\")\",'controlType':item.controlType,'tablecolumnname':item.tablecolumnname});}});_this.props.detailedFieldList&&_this.props.detailedFieldList.map(function(item){if(item.tablecolumnname!==\"ndefaultstatus\"&&item.controlType!=='NA'){headerName.push({'headerName':_this.props.intl.formatMessage({id:item.idsName})+\" (\"+item.tablecolumnname+\")\",'controlType':item.controlType,'tablecolumnname':item.tablecolumnname});}});_this.props.dynamicExportTemplate({selectedHeader:headerName,ncontrolCode:ExportControl,userinfo:_this.props.userInfo,formName:_this.props.screenName,nformcode:_this.props.userInfo.nformcode,rowCount:_this.props.settings&&parseInt(_this.props.settings['76'])});}else{_this.props.dynamicExportTemplate({selectedHeader:headerName,ncontrolCode:ExportControl,userinfo:_this.props.userInfo,formName:_this.props.screenName,nformcode:_this.props.userInfo.nformcode,rowCount:_this.props.settings&&parseInt(_this.props.settings['76'])});}};_this.excelModal=function(ncontrolcode,operation){var updateInfo={typeName:DEFAULT_RETURN,data:{selectedRecord:{},operation:operation,ncontrolcode:ncontrolcode,selectedId:null,openExcel:true,openExcelModal:true}};_this.props.updateStore(updateInfo);};_this.onDropFile=function(attachedFiles,fieldName,maxSize){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=onDropAttachFileList(selectedRecord[fieldName],attachedFiles,maxSize);_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.deleteAttachment=function(event,file,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=deleteAttachmentDropZone(selectedRecord[fieldName],file);_this.setState({selectedRecord:selectedRecord,actionType:\"delete\"//fileToDelete:file.name \n});};_this.state={selectedRecord:\"\",ncontrolCode:-1,nbarcodeprint:1,BarcodeList:[],operation:\"Printbarcode\",Printer:[],openBarcodeModal:false,loadEsign:false,loadBarcode:false,loading:false};return _this;}_createClass(ExportButton,[{key:\"render\",value:function render(){var _this2=this;var ExportControl=this.props.controlMap&&this.props.controlMap.has(this.props.exportUrl)&&this.props.controlMap.get(this.props.exportUrl).ncontrolcode;var ImportControl=this.props.controlMap&&this.props.controlMap.has(this.props.importUrl)&&this.props.controlMap.get(this.props.importUrl).ncontrolcode;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Preloader,{loading:this.state.loading}),/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Nav.Link,{name:\"export\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EXPORTTEMPLATE\"})//  data-for=\"tooltip_list_wrap\"\n,hidden:ExportControl?this.props.userRoleControlRights&&this.props.userRoleControlRights.indexOf(ExportControl)===-1:true,onClick:function onClick(){return _this2.dynamicExportTemplate(ExportControl);},className:\"btn btn-circle outline-grey mr-2\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileExcel})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"export\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_IMPORTTEMPLATE\"})//  data-for=\"tooltip_list_wrap\"\n,hidden:ImportControl?this.props.userRoleControlRights&&this.props.userRoleControlRights.indexOf(ImportControl)===-1:true,onClick:function onClick(){return _this2.excelModal(ImportControl,'import');},className:\"btn btn-circle outline-grey mr-2\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileImport}))),this.props.Login.openExcelModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openExcelModal,closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:{methodUrl:this.props.methodUrl},screenName:this.props.Login.screenName,onSaveClick:this.onSaveImportClick,esign:this.state.loadEsign,validateEsign:this.validateEsign// masterStatus={this.props.Login.masterStatus}\n// updateStore={this.props.updateStore}\n,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.mandatoryFields(),addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.state.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange//inputParam={this.props.Login.inputParam}\n,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddFile,{selectedRecord:this.state.selectedRecord,onDrop:this.onDropFile,deleteAttachment:this.deleteAttachment})}));}}]);return ExportButton;}(React.Component);export default connect(mapStateToProps,{updateStore:updateStore,dynamicExportTemplate:dynamicExportTemplate,crudMaster:crudMaster,dynamicImportTemplate:dynamicImportTemplate})(injectIntl(ExportButton));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/export&import/ExportButton.jsx"],"names":["React","faBarcode","faFileExcel","faFileImport","connect","injectIntl","FontAwesomeIcon","Button","Nav","SlideOutModal","Esign","constructOptionList","deleteAttachmentDropZone","onDropAttachFileList","showEsign","rsapi","Axios","toast","FontIconWrap","Preloader","dynamicExportTemplate","updateStore","crudMaster","dynamicImportTemplate","AddFile","DEFAULT_RETURN","mapStateToProps","state","Login","ExportButton","props","openBarcodeModal","selectedMaster","ncontrolCode","userinfo","setState","loading","urlArray","getPrinter","post","getControlBasedBarcode","Multiselect","Array","isArray","all","then","response","printer","data","undefined","get","barcode","Barcode","selectedRecord","length","Printer","BarcodeList","operation","nbarcodeprint","loadBarcode","catch","error","status","message","warn","intl","formatMessage","id","onSaveImportClick","saveType","formRef","inputParam","isFileupload","formData","FormData","append","userInfo","nformcode","methodUrl","classUrl","inputData","displayName","statesaveType","masterData","userRoleControlRights","ncontrolcode","updateInfo","typeName","loadEsign","dynamicfields","screenData","onNumericInputChange","value","name","onInputOnChange","event","target","type","checked","onComboChange","comboData","fieldName","closeModal","openExcel","openExcelModal","mandatoryFields","mandatory","ExportControl","headerName","isDataGrid","extractedColumnList","map","item","tablecolumnname","controlType","push","idsName","detailedFieldList","selectedHeader","formName","screenName","rowCount","settings","parseInt","excelModal","selectedId","onDropFile","attachedFiles","maxSize","actionType","deleteAttachment","file","controlMap","has","exportUrl","ImportControl","importUrl","indexOf","validateEsign","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { faBarcode,faFileExcel,faFileImport } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button ,Nav} from \"react-bootstrap\";\r\n//import { openBarcodeModal } from '../../actions'\r\n//import { connect } from \"react-redux\";\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal'\r\nimport Esign from \"../audittrail/Esign\";\r\nimport { constructOptionList, deleteAttachmentDropZone, onDropAttachFileList, showEsign } from \"../../components/CommonScript\";\r\nimport rsapi from \"../../rsapi\";\r\nimport Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { FontIconWrap } from '../../components/data-grid/data-grid.styles';\r\nimport Preloader from '../../components/preloader/preloader.component'\r\nimport {  dynamicExportTemplate,updateStore ,crudMaster,dynamicImportTemplate} from '../../actions';\r\nimport AddFile from \"../goodsin/AddFile\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass ExportButton extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n\r\n        this.state = {\r\n            selectedRecord: \"\",\r\n            ncontrolCode: -1,\r\n            nbarcodeprint: 1,\r\n            BarcodeList: [],\r\n            operation: \"Printbarcode\",\r\n            Printer: [],\r\n            openBarcodeModal: false,\r\n            loadEsign: false,\r\n            loadBarcode: false,\r\n            loading: false,\r\n        }\r\n    }\r\n\r\n    openBarcodeModal = (selectedMaster, ncontrolCode, userinfo) => {\r\n        this.setState({ loading: true })\r\n        let urlArray = [];\r\n        const getPrinter = rsapi.post(\"barcode/getPrinter\", userinfo);\r\n        const getControlBasedBarcode = rsapi.post(\"barcodeconfiguration/checkConfiguration\", { selectedMaster, ncontrolCode, userinfo, Multiselect: Array.isArray(selectedMaster) });\r\n        urlArray = [getPrinter, getControlBasedBarcode]\r\n\r\n        Axios.all(urlArray).then(response => {\r\n\r\n            const printer = constructOptionList(response[0].data || [], \"sprintername\",\r\n                \"sprintername\", undefined, undefined, true).get(\"OptionList\");\r\n\r\n            const barcode = constructOptionList(response[1].data.Barcode || [], \"sbarcodename\",\r\n                \"sbarcodename\", undefined, undefined, true).get(\"OptionList\");\r\n\r\n            const selectedRecord = {}\r\n\r\n            if (printer.length > 0)\r\n                selectedRecord['sprintername'] = printer[0];\r\n\r\n            if (barcode.length > 0) selectedRecord['nbarcode'] = barcode[0];\r\n            selectedRecord['nbarcodeprint'] = 1\r\n\r\n\r\n            this.setState({\r\n                openBarcodeModal: true, ncontrolCode, Printer: printer,\r\n                BarcodeList: barcode, operation: \"Printbarcode\",\r\n                nbarcodeprint: response[1].data.nbarcodeprint, selectedRecord, loadBarcode: true, loading: false\r\n            })\r\n        }).catch(error => {\r\n\r\n            // dispatch(initRequest(false));\r\n\r\n            if (error.response.status === 500) {\r\n\r\n                toast.error(error.message);\r\n\r\n            } else {\r\n\r\n                toast.warn(this.props.intl.formatMessage({\r\n\r\n                    id: error.response.data\r\n\r\n                }));\r\n            }\r\n        })\r\n    }\r\n\r\n    onSaveImportClick=(saveType, formRef)=>{\r\n        let inputParam = {};\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let isFileupload =true;\r\n        const formData = new FormData();\r\n        formData.append(\"ImportFile\", selectedRecord['stemplatefilename'][0])\r\n        formData.append( \"nformcode\",this.props.Login.userInfo && this.props.Login.userInfo.nformcode);\r\n        inputParam = {\r\n            formData: formData,\r\n            isFileupload,\r\n            methodUrl:\"Template\",\r\n            operation: \"import\",\r\n            classUrl: \"exportimport\",\r\n            inputData:{\"userinfo\":this.props.Login.userInfo},\r\n            displayName:this.props.Login.displayName\r\n            \r\n        }\r\n        var saveType = this.statesaveType;\r\n        const masterData = this.props.Login.masterData;\r\n     \r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, dynamicfields: [], screenData: {  masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        } else {\r\n            this.props.dynamicImportTemplate(inputParam,masterData, \"openExcelModal\");\r\n\r\n        }\r\n    }\r\n\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n            if (event.target.name === 'nclientprinter' && event.target.checked === true) {\r\n                //const printers =   window.navigator.printer.getPrinters();\r\n                /////const names = printers.map(printer => printer.name);\r\n\r\n                //selectedPrinterDatas {printername: { = names;\r\n                // this.setState({ selectedPrinterData });\r\n            }\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openExcel = this.props.Login.openExcel;\r\n        let openExcelModal = this.props.Login.openExcelModal;\r\n        let selectedRecord = this.state.selectedRecord;\r\n        let inputData;\r\n        if (loadEsign) {\r\n            inputData= { loadEsign: false,openExcel:true,openExcelModal:true }\r\n        }\r\n        else {\r\n            inputData={ loadEsign: false, openExcel:false,openExcelModal:false, selectedRecord: {}}\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { ...inputData }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n\r\n    mandatoryFields = () => {\r\n\r\n        const mandatory = [\r\n            { \"idsName\": \"IDS_FILE\", \"dataField\": \"stemplatefilename\", \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n        ]\r\n\r\n        return mandatory;\r\n    }\r\n    dynamicExportTemplate=(ExportControl)=>{\r\n        let headerName=[];\r\n        if(this.props.isDataGrid){\r\n        this.props.extractedColumnList.map(item=>{\r\n            if((item.tablecolumnname!==\"ndefaultstatus\" && item.controlType!=='NA')){\r\n            headerName.push({'headerName':this.props.intl.formatMessage({ id:item.idsName})+\" (\"+item.tablecolumnname+\")\",\r\n            'controlType':item.controlType,\r\n            'tablecolumnname':item.tablecolumnname})\r\n            }\r\n        })\r\n        this.props.detailedFieldList && this.props.detailedFieldList.map(item=>{\r\n            if((item.tablecolumnname!==\"ndefaultstatus\" && item.controlType!=='NA')){\r\n            headerName.push({'headerName':this.props.intl.formatMessage({ id:item.idsName})+\" (\"+item.tablecolumnname+\")\",'controlType':item.controlType,'tablecolumnname':item.tablecolumnname})\r\n            }\r\n        })\r\n        this.props.dynamicExportTemplate({selectedHeader:headerName, ncontrolCode:ExportControl, userinfo:this.props.userInfo,formName:this.props.screenName,\r\n            nformcode:this.props.userInfo.nformcode,rowCount:this.props.settings && parseInt(this.props.settings['76'])})\r\n        }else{\r\n            this.props.dynamicExportTemplate({selectedHeader:headerName, ncontrolCode:ExportControl, userinfo:this.props.userInfo,formName:this.props.screenName,\r\n                nformcode:this.props.userInfo.nformcode,rowCount:this.props.settings && parseInt(this.props.settings['76'])})\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const ExportControl = this.props.controlMap && this.props.controlMap.has(this.props.exportUrl) && this.props.controlMap.get(this.props.exportUrl).ncontrolcode;\r\n        const ImportControl = this.props.controlMap && this.props.controlMap.has(this.props.importUrl) && this.props.controlMap.get(this.props.importUrl).ncontrolcode;\r\n        return (\r\n            <>\r\n\r\n                <Preloader loading={this.state.loading} />\r\n\r\n                {/* {this.props.isDataGrid ? */}\r\n                        <>\r\n                        <Nav.Link name=\"export\"\r\n                        data-tip={this.props.intl.formatMessage({ id: \"IDS_EXPORTTEMPLATE\" })}\r\n                        //  data-for=\"tooltip_list_wrap\"\r\n                        hidden={ExportControl ? this.props.\r\n                          userRoleControlRights && this.props.userRoleControlRights.indexOf(ExportControl) === -1:true}\r\n                        onClick={() => this.dynamicExportTemplate(ExportControl)}\r\n                        className=\"btn btn-circle outline-grey mr-2\"\r\n                        >\r\n                        <FontAwesomeIcon icon={faFileExcel} />\r\n                        </Nav.Link>       \r\n                        \r\n                        <Nav.Link name=\"export\"\r\n                        data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTTEMPLATE\" })}\r\n                        //  data-for=\"tooltip_list_wrap\"\r\n                        hidden={ImportControl ? this.props.\r\n                          userRoleControlRights && this.props.userRoleControlRights.indexOf(ImportControl) === -1:true}\r\n                        onClick={() => this.excelModal(ImportControl,'import')}\r\n                        className=\"btn btn-circle outline-grey mr-2\"\r\n                        >\r\n                        <FontAwesomeIcon icon={faFileImport} />\r\n                        </Nav.Link>     \r\n                        </>  \r\n                            {/* :\r\n                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                        hidden={this.props.userRoleControlRights.indexOf(ExportControl) === -1}\r\n                        data-tip={this.props.intl.formatMessage({ id: \"IDS_BARCODEGENERATE\" })}\r\n                        onClick={() => this.excelModal(this.props.selectedMaster, ExportControl, this.props.userInfo)}>\r\n                        <FontAwesomeIcon icon={faBarcode} />\r\n                    </Button>\r\n                } */}\r\n\r\n                {this.props.Login.openExcelModal &&\r\n                    <SlideOutModal\r\n                        show={this.props.Login.openExcelModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={{ methodUrl: this.props.methodUrl }}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveImportClick}\r\n                        esign={this.state.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        // masterStatus={this.props.Login.masterStatus}\r\n                        // updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.mandatoryFields()}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.state.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                //inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}/>:\r\n                                <AddFile\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                onDrop={this.onDropFile}\r\n                                deleteAttachment={this.deleteAttachment}\r\n                                />\r\n                        }\r\n                    ></SlideOutModal>\r\n\r\n                }\r\n            </>\r\n\r\n        )\r\n    }\r\n\r\n    excelModal = (ncontrolcode,operation) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                selectedRecord: {}, operation:operation, ncontrolcode, selectedId: null,\r\n                openExcel: true, openExcelModal: true,\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    onDropFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { updateStore, dynamicExportTemplate,crudMaster,dynamicImportTemplate})(injectIntl(ExportButton));"]},"metadata":{},"sourceType":"module"}