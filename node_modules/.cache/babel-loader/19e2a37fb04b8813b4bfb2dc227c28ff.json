{"ast":null,"code":"import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Col,Row}from'react-bootstrap';import{injectIntl}from'react-intl';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faAngleDoubleRight,faTimes}from'@fortawesome/free-solid-svg-icons';var SampleCertificationFilter=/*#__PURE__*/function(_React$Component){_inherits(SampleCertificationFilter,_React$Component);var _super=_createSuper(SampleCertificationFilter);function SampleCertificationFilter(props){var _this;_classCallCheck(this,SampleCertificationFilter);_this=_super.call(this,props);_this.showMoreToggle=function(){_this.setState({showMore:!_this.state.showMore});};_this.state={showMore:false};return _this;}_createClass(SampleCertificationFilter,[{key:\"render\",value:function render(){var _this2=this;console.log(\"response\",this.props);return/*#__PURE__*/React.createElement(\"div\",{className:\"side_more_filter_wrap\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"fromdate\",label:this.props.formatMessage({id:\"IDS_FROM\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.props.FromDate,dateFormat:this.props.userInfo[\"ssitedate\"],isClearable:false,onChange:function onChange(date){return _this2.props.handleDateChange(\"fromDate\",date);},value:this.props.FromDate})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"todate\",label:this.props.formatMessage({id:\"IDS_TO\"}),className:\"form-control\",placeholderText:\"Select date..\",selected:this.props.ToDate,dateFormat:this.props.userInfo[\"ssitedate\"],isClearable:false,onChange:function onChange(date){return _this2.props.handleDateChange(\"toDate\",date);},value:this.props.ToDate})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.formatMessage({id:\"IDS_SAMPLETYPE\"}),isSearchable:true,name:\"nsampletypecode\",isDisabled:false,placeholder:this.props.formatMessage({id:\"IDS_PLEASESELECT\"}),isMandatory:true,options:this.props.SampleType,optionId:\"nsampletypecode\",optionValue:\"ssampletypename\",value:this.props.SampleTypeValue?this.props.SampleTypeValue.nsampletypecode:\"\"//value={props.SampleTypeValue ? { \"label\": props.SampleTypeValue.ssampletypename, \"value\": props.SampleTypeValue.nsampletypecode } : \"\"}\n,showOption:true,sortField:\"nsorter\",sortOrder:\"ascending\"//onChange={(event) => this.props.onSampleTypeChange(event, 'nsampletypecode', 'SampleTypeValue')}\n})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.formatMessage({id:\"IDS_REGISTRATIONTYPE\"}),isSearchable:true,name:\"nregtypecode\",isDisabled:false,placeholder:this.props.formatMessage({id:\"IDS_PLEASESELECT\"}),isMandatory:true,options:this.props.RegistrationType,optionId:\"nregtypecode\",optionValue:\"sregtypename\"// value = { props.RegTypeValue[\"nregtypecode\"] }\n,value:this.props.RegTypeValue?this.props.RegTypeValue.nregtypecode:\"\",showOption:true//sortField=\"nsorter\"\n//sortOrder=\"ascending\"\n// onChange={(event) => props.onRegTypeChange(event, 'nregtypecode', 'RegTypeValue')}\n})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.formatMessage({id:\"IDS_REGISTRATIONSUBTYPE\"}),isSearchable:true,name:\"nregsubtypecode\",isDisabled:false,placeholder:this.props.formatMessage({id:\"IDS_PLEASESELECT\"}),isMandatory:true,options:this.props.RegistrationSubType,optionId:\"nregsubtypecode\",optionValue:\"sregsubtypename\",value:this.props.regSubTypeValue?this.props.regSubTypeValue.nregsubtypecode:\"\",showOption:true,sortField:\"nsorter\",sortOrder:\"ascending\",onChange:function onChange(event){return _this2.props.onRegSubTypeChange(event,'nregsubtypecode','RegSubTypeValue');}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.formatMessage({id:\"IDS_FILTERSTATUS\"}),isSearchable:true,name:\"ntransactionstatus\",isDisabled:false,placeholder:this.props.formatMessage({id:\"IDS_PLEASESELECT\"}),isMandatory:true,options:this.props.FilterStatus,optionId:\"ntransactionstatus\",optionValue:\"stransdisplaystatus\",value:this.props.FilterStatusValue?this.props.FilterStatusValue.ntransactionstatus:\"\"// value={props.FilterStatusValue ? { \"label\": props.FilterStatusValue.stransdisplaystatus, \"value\": props.FilterStatusValue.napprovalstatuscode } : \"\"}\n,showOption:true,sortField:\"stransdisplaystatus\",sortOrder:\"ascending\",onChange:function onChange(event){return _this2.props.onFilterChange(event,'ntransactionstatus');}}))),!this.state.showMore?/*#__PURE__*/React.createElement(\"button\",{className:\"btn_sidebar_open\",onClick:this.showMoreToggle},\" \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faAngleDoubleRight}),\" \"):'',/*#__PURE__*/React.createElement(\"div\",{className:\"side_more_filter \".concat(this.state.showMore?'active':'',\" \")},/*#__PURE__*/React.createElement(\"button\",{className:\"btn_sidebar_close\",onClick:this.showMoreToggle},\" \",/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTimes}),\" \"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_CONFIGVERSION\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_CONFIGVERSION\"}),name:\"napproveconfversioncode\",optionId:\"napprovalconfigversioncode\",optionValue:\"sversionname\",className:\"form-control\",options:this.props.ApprovalVersion//   value={this.props.ApprovalVersionValue? { \"label\": this.props.ApprovalVersionValue.sversionname, \n//   \"value\": this.props.ApprovalVersionValue.napproveconfversioncode } : \"\"}\n,value:this.props.ApprovalVersionValue?this.props.ApprovalVersionValue:\"\",isMandatory:false,isMulti:false,isSearchable:false,isDisabled:false,alphabeticalSort:false,isClearable:false,onChange:function onChange(event){return _this2.props.onFilterComboChange(event,\"napproveconfversioncode\");}})))));}}]);return SampleCertificationFilter;}(React.Component);export default injectIntl(SampleCertificationFilter);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/testapproval/SampleCertificationFilter.js"],"names":["React","Col","Row","injectIntl","DateTimePicker","FormSelectSearch","FontAwesomeIcon","faAngleDoubleRight","faTimes","SampleCertificationFilter","props","showMoreToggle","setState","showMore","state","console","log","formatMessage","id","FromDate","userInfo","date","handleDateChange","ToDate","SampleType","SampleTypeValue","nsampletypecode","RegistrationType","RegTypeValue","nregtypecode","RegistrationSubType","regSubTypeValue","nregsubtypecode","event","onRegSubTypeChange","FilterStatus","FilterStatusValue","ntransactionstatus","onFilterChange","intl","ApprovalVersion","ApprovalVersionValue","onFilterComboChange","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faAngleDoubleRight , faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\n\r\nclass SampleCertificationFilter extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            showMore:false\r\n        }\r\n    }\r\n    showMoreToggle =() =>{\r\n        this.setState({\r\n            showMore : !this.state.showMore\r\n           \r\n        })\r\n    }\r\n    render(){\r\n      console.log(\"response\",this.props)\r\n        return(\r\n            <div className=\"side_more_filter_wrap\">\r\n                <Row>\r\n            <Col md={6}>\r\n                <DateTimePicker\r\n                    name={\"fromdate\"}\r\n                    label={this.props.formatMessage({ id: \"IDS_FROM\" })}\r\n                    className='form-control'\r\n                    placeholderText=\"Select date..\"\r\n                    selected={this.props.FromDate}\r\n                    dateFormat={this.props.userInfo[\"ssitedate\"]}\r\n                    isClearable={false}\r\n                    onChange={date => this.props.handleDateChange(\"fromDate\", date)}\r\n                    value={this.props.FromDate}\r\n\r\n                />\r\n            </Col>\r\n            <Col md={6}>\r\n                <DateTimePicker\r\n                    name={\"todate\"}\r\n                    label={this.props.formatMessage({ id: \"IDS_TO\" })}\r\n                    className='form-control'\r\n                    placeholderText=\"Select date..\"\r\n                    selected={this.props.ToDate}\r\n                    dateFormat={this.props.userInfo[\"ssitedate\"]}\r\n                    isClearable={false}\r\n                    onChange={date => this.props.handleDateChange(\"toDate\", date)}\r\n                    value={this.props.ToDate}\r\n\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.formatMessage({ id: \"IDS_SAMPLETYPE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nsampletypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.SampleType}\r\n                    optionId=\"nsampletypecode\"\r\n                    optionValue=\"ssampletypename\"\r\n                    value={this.props.SampleTypeValue ? this.props.SampleTypeValue.nsampletypecode : \"\"}\r\n                    //value={props.SampleTypeValue ? { \"label\": props.SampleTypeValue.ssampletypename, \"value\": props.SampleTypeValue.nsampletypecode } : \"\"}\r\n                    showOption={true}\r\n                    sortField=\"nsorter\"\r\n                    sortOrder=\"ascending\"\r\n                    //onChange={(event) => this.props.onSampleTypeChange(event, 'nsampletypecode', 'SampleTypeValue')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.formatMessage({ id: \"IDS_REGISTRATIONTYPE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nregtypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.RegistrationType}\r\n                    optionId=\"nregtypecode\"\r\n                    optionValue=\"sregtypename\"\r\n                    // value = { props.RegTypeValue[\"nregtypecode\"] }\r\n                    value={this.props.RegTypeValue ? this.props.RegTypeValue.nregtypecode : \"\"}\r\n                    showOption={true}\r\n                    //sortField=\"nsorter\"\r\n                    //sortOrder=\"ascending\"\r\n                   // onChange={(event) => props.onRegTypeChange(event, 'nregtypecode', 'RegTypeValue')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.formatMessage({ id: \"IDS_REGISTRATIONSUBTYPE\" })}\r\n                    isSearchable={true}\r\n                    name={\"nregsubtypecode\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.RegistrationSubType}\r\n                    optionId=\"nregsubtypecode\"\r\n                    optionValue=\"sregsubtypename\"\r\n                    value={this.props.regSubTypeValue ? this.props.regSubTypeValue.nregsubtypecode : \"\"}\r\n                    showOption={true}\r\n                    sortField=\"nsorter\"\r\n                    sortOrder=\"ascending\"\r\n                    onChange={(event) => this.props.onRegSubTypeChange(event, 'nregsubtypecode', 'RegSubTypeValue')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={this.props.formatMessage({ id: \"IDS_FILTERSTATUS\" })}\r\n                    isSearchable={true}\r\n                    name={\"ntransactionstatus\"}\r\n                    isDisabled={false}\r\n                    placeholder={this.props.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                    isMandatory={true}\r\n                    options={this.props.FilterStatus}\r\n                    optionId=\"ntransactionstatus\"\r\n                    optionValue=\"stransdisplaystatus\"\r\n                    value={this.props.FilterStatusValue ? this.props.FilterStatusValue.ntransactionstatus : \"\"}\r\n                   // value={props.FilterStatusValue ? { \"label\": props.FilterStatusValue.stransdisplaystatus, \"value\": props.FilterStatusValue.napprovalstatuscode } : \"\"}\r\n                    showOption={true}\r\n                    sortField=\"stransdisplaystatus\"\r\n                    sortOrder=\"ascending\"\r\n                    onChange={(event) => this.props.onFilterChange(event, 'ntransactionstatus')}\r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n        </Row>\r\n                {!this.state.showMore ? <button className=\"btn_sidebar_open\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faAngleDoubleRight} /> </button> : ''}    \r\n                       <div className={`side_more_filter ${this.state.showMore ? 'active' : ''} `} >\r\n                                      <button className=\"btn_sidebar_close\" onClick={this.showMoreToggle}> <FontAwesomeIcon icon={faTimes} /> </button>    \r\n                                      <Row>\r\n                                          <Col md={12}>\r\n                                              <FormSelectSearch\r\n                                                  formLabel={this.props.intl.formatMessage({ id:\"IDS_CONFIGVERSION\"})}\r\n                                                  placeholder={this.props.intl.formatMessage({ id:\"IDS_CONFIGVERSION\"})}\r\n                                                  name=\"napproveconfversioncode\"\r\n                                                  optionId=\"napprovalconfigversioncode\"\r\n                                                  optionValue=\"sversionname\"\r\n                                                  className='form-control'\r\n                                                  options={this.props.ApprovalVersion}\r\n                                                //   value={this.props.ApprovalVersionValue? { \"label\": this.props.ApprovalVersionValue.sversionname, \r\n                                                //   \"value\": this.props.ApprovalVersionValue.napproveconfversioncode } : \"\"}\r\n                                                  value={this.props.ApprovalVersionValue ? this.props.ApprovalVersionValue : \"\"}\r\n                                                  isMandatory={false}\r\n                                                  isMulti={false}\r\n                                                  isSearchable={false}\r\n                                                  isDisabled={false}\r\n                                                  alphabeticalSort={false}\r\n                                                  isClearable={false}\r\n                                                  onChange={(event)=>this.props.onFilterComboChange(event,\"napproveconfversioncode\")}\r\n                                              />\r\n                                              {/* <FormSelectSearch\r\n                                                  formLabel={this.props.intl.formatMessage({ id:\"IDS_SECTION\"})}\r\n                                                  placeholder={this.props.intl.formatMessage({ id:\"IDS_SECTION\"})}\r\n                                                  name=\"nsectioncode\"\r\n                                                  optionId=\"nsectioncode\"\r\n                                                  optionValue=\"ssectionname\"\r\n                                                  className='form-control'\r\n                                                  options={this.props.UserSection||[]}\r\n                                                  value={this.props.UserSectionValue? { \"label\": this.props.UserSectionValue.ssectionname, \"value\": this.props.UserSectionValue.nsectioncode } : \"\"}\r\n                                                  isMandatory={false}\r\n                                                  isMulti={false}\r\n                                                  isSearchable={false}\r\n                                                  isDisabled={false}\r\n                                                  alphabeticalSort={false}\r\n                                                  isClearable={false}\r\n                                                  onChange={(event)=>this.props.onFilterComboChange(event,\"nsectioncode\")}\r\n                                              /> */}\r\n                                              {/* <FormSelectSearch\r\n                                                  formLabel={this.props.intl.formatMessage({ id:\"IDS_JOBSTATUS\"})}\r\n                                                  placeholder={this.props.intl.formatMessage({ id:\"IDS_JOBSTATUS\"})}\r\n                                                  name=\"njobstatuscode\"\r\n                                                  optionId=\"njobstatuscode\"\r\n                                                  optionValue=\"sidsjobstatusname\"\r\n                                                  className='form-control'\r\n                                                  options={this.props.JobStatus}\r\n                                                  value={this.props.JobStatusValue? { \"label\": this.props.JobStatusValue.sidsjobstatusname, \"value\": this.props.JobStatusValue.njobstatuscode } : \"\"}\r\n                                                  isMandatory={false}\r\n                                                  isMulti={false}\r\n                                                  isSearchable={false}\r\n                                                  isDisabled={false}\r\n                                                  alphabeticalSort={false}\r\n                                                  isClearable={false}\r\n                                                  onChange={(event)=>this.props.onFilterComboChange(event,\"njobstatuscode\")}\r\n                                              /> */}\r\n                                          </Col>\r\n                                      </Row>\r\n                                  </div>  \r\n            </div> \r\n        );\r\n    }\r\n}\r\nexport default injectIntl(SampleCertificationFilter)"]},"metadata":{},"sourceType":"module"}