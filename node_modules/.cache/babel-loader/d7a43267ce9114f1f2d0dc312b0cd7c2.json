{"ast":null,"code":"import _classCallCheck from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{Row,Col,Nav}from'react-bootstrap';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormInput from'../../components/form-input/form-input.component';import{TreeDesign,HeaderSpan}from'./registration.styled';import'./registration.css';import{ProductList}from'../product/product.styled';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCartArrowDown,faFileImport,faPlus}from'@fortawesome/free-solid-svg-icons';import{FormattedMessage,injectIntl}from'react-intl';//import { Tooltip } from '@progress/kendo-react-tooltip';\nimport ReactTooltip from'react-tooltip';import{process}from'@progress/kendo-data-query';import MultiColumnComboSearch from'../../components/multi-column-combo-search/multi-column-combo-search';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{toast}from'react-toastify';import FormTreeMenu from'../../components/form-tree-menu/form-tree-menu.component';import DataGrid from'../../components/data-grid/data-grid.component';import PerfectScrollbar from'react-perfect-scrollbar';import{RegistrationSubType,RegistrationType}from'../../components/Enumeration';//import { Label } from 'reactstrap';\nvar PreRegisterPopUp=/*#__PURE__*/function(_Component){_inherits(PreRegisterPopUp,_Component);var _super=_createSuper(PreRegisterPopUp);function PreRegisterPopUp(props){var _this;_classCallCheck(this,PreRegisterPopUp);_this=_super.call(this,props);_this.columnlist=function(RealRegTypeValue,RealRegSubTypeValue,RegistrationType,RegistrationSubType){var BatchColumnList=[];if(RealRegTypeValue.nregtypecode===RegistrationType.BATCH&&RealRegSubTypeValue.nregsubtypecode!==RegistrationSubType.PROTOCOL||RealRegTypeValue.nregtypecode===RegistrationType.NON_BATCH){BatchColumnList=[{\"idsName\":\"IDS_COMPONENTNAME\",\"dataField\":\"scomponentname\",width:\"200px\"},{\"idsName\":\"IDS_MANUFLOTNO\",\"dataField\":\"smanuflotno\",width:\"200px\"},{\"idsName\":\"IDS_STORAGECONDITION\",\"dataField\":\"sstorageconditionname\",width:\"150px\"},{\"idsName\":\"IDS_STORAGELOCATION\",\"dataField\":\"sstoragelocationname\",width:\"150px\"},{\"idsName\":\"IDS_NOOFCONTAINER\",\"dataField\":\"nnoofcontainer\",width:\"150px\"},{\"idsName\":\"IDS_DATERECEIVED\",\"dataField\":\"sreceiveddate\",width:\"250px\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",width:\"200px\"}];}else if(RealRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL&&RealRegSubTypeValue.nregsubtypecode!==RegistrationSubType.EXTERNAL_POOL){BatchColumnList=[{\"idsName\":\"IDS_COMPONENTNAME\",\"dataField\":\"scomponentname\",width:\"200px\"},{\"idsName\":\"IDS_MANUFLOTNO\",\"dataField\":\"smanuflotno\",width:\"200px\"},{\"idsName\":\"IDS_NOOFCONTAINER\",\"dataField\":\"nnoofcontainer\",width:\"150px\"},{\"idsName\":\"IDS_POOLBULKVOLUME\",\"dataField\":\"sbulkvolume\",width:\"200px\"},{\"idsName\":\"IDS_PLASMAFILENUMBER\",\"dataField\":\"splasmafilenumber\",width:\"200px\"}];}else if(RealRegSubTypeValue.nregsubtypecode===RegistrationSubType.PROTOCOL||RealRegSubTypeValue.nregsubtypecode===RegistrationSubType.EXTERNAL_POOL){BatchColumnList=[{\"idsName\":\"IDS_COMPONENTNAME\",\"dataField\":\"scomponentname\",width:\"200px\"},{\"idsName\":\"IDS_MANUFLOTNO\",\"dataField\":\"smanuflotno\",width:\"200px\"},{\"idsName\":\"IDS_DATERECEIVED\",\"dataField\":\"sreceiveddate\",width:\"250px\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",width:\"200px\"}];}else{BatchColumnList=[{\"idsName\":\"IDS_COMPONENTNAME\",\"dataField\":\"scomponentname\",width:\"200px\"},{\"idsName\":\"IDS_MANUFLOTNO\",\"dataField\":\"smanuflotno\",width:\"200px\"},{\"idsName\":\"IDS_NOOFCONTAINER\",\"dataField\":\"nnoofcontainer\",width:\"150px\"},{\"idsName\":\"IDS_POOLBULKVOLUME\",\"dataField\":\"sbulkvolume\",width:\"200px\"},{\"idsName\":\"IDS_PLASMAFILENUMBER\",\"dataField\":\"splasmafilenumber\",width:\"200px\"}];}return BatchColumnList;};_this.state={selectedTestItem:[],selectedSourceItem:[],selectedTest:[]};return _this;}_createClass(PreRegisterPopUp,[{key:\"render\",value:function render(){var _this2=this;var getComponent=function getComponent(event,selectedRecord){var booleanFlag=true;if(_this2.props.RealRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL){if(selectedRecord.nmanufcode===undefined){booleanFlag=false;toast.warn(_this2.props.intl.formatMessage({id:\"IDS_SELECTMANUFACTURER\"}));}}if(booleanFlag){if(selectedRecord.nallottedspeccode!==undefined&&selectedRecord.nallottedspeccode!==\"\"){if(_this2.props.Component.length>0){_this2.props.ConfirmComponent(selectedRecord);}else{_this2.props.getComponentfromJava(selectedRecord);}}else{toast.warn(_this2.props.intl.formatMessage({id:\"IDS_SELECTSPECIFICATION\"}));//\"Select Specification\"\n}}};// const BatchColumnList = [\n//     { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\n//     { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\n//     { \"idsName\": \"IDS_STORAGECONDITION\", \"dataField\": \"sstorageconditionname\", width: \"150px\" },\n//     { \"idsName\": \"IDS_STORAGELOCATION\", \"dataField\": \"sstoragelocationname\", width: \"150px\" },\n//     { \"idsName\": \"IDS_NOOFCONTAINER\", \"dataField\": \"nnoofcontainer\", width: \"150px\" },\n//     { \"idsName\": \"IDS_DATERECEIVED\", \"dataField\": \"sreceiveddate\", width: \"200px\" },\n//     { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"200px\" },\n// ];\nvar testColumnList=[{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",width:\"200px\"},{\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",width:\"150px\"},{\"idsName\":\"IDS_SOURCE\",\"dataField\":\"ssourcename\",width:\"150px\"},{\"idsName\":\"IDS_METHOD\",\"dataField\":\"smethodname\",width:\"150px\"},{\"idsName\":\"IDS_INSTRUMENTCATEGORY\",\"dataField\":\"sinstrumentcatname\",width:\"200px\"}];// const plasmaColumnList = [\n//     { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\n//     { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\n//     { \"idsName\": \"IDS_NOOFCONTAINER\", \"dataField\": \"nnoofcontainer\", width: \"150px\" },\n//     { \"idsName\": \"IDS_POOL/BULKVOLUME\", \"dataField\": \"spoolbulkvolume\", width: \"200px\" },\n//     { \"idsName\": \"IDS_PLASMAFILENUMBER\", \"dataField\": \"splasmafilenumber\", width: \"200px\" },\n// ];\n// const externalColumnList = [\n//     { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\n//     { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\n//     { \"idsName\": \"IDS_DATERECEIVED\", \"dataField\": \"dreceiveddate\", width: \"200px\" },\n//     { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"200px\" },\n// ];\nvar countryColumnList=[{\"idsName\":\"IDS_SOURCE\",\"dataField\":\"scountryname\",width:\"150px\"}];var _this$props=this.props,ProductCategory=_this$props.ProductCategory,Product=_this$props.Product,Goodsin=_this$props.Goodsin,EProtocol=_this$props.EProtocol,Manufacturer=_this$props.Manufacturer,Specification=_this$props.Specification,Component=_this$props.Component,selectedTest=_this$props.selectedTest,Client=_this$props.Client,RealRegTypeValue=_this$props.RealRegTypeValue,RealRegSubTypeValue=_this$props.RealRegSubTypeValue,SelectedSource=_this$props.SelectedSource,ProductMaholder=_this$props.ProductMaholder,AgaramTree=_this$props.AgaramTree,OpenNodes=_this$props.OpenNodes,FocusKey=_this$props.FocusKey,ActiveKey=_this$props.ActiveKey;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},RealRegSubTypeValue.nregsubtypecode!==RegistrationSubType.PROTOCOL&&RealRegSubTypeValue.nregsubtypecode!==RegistrationSubType.EXTERNAL_POOL&&/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_RMSNO\"}),isSearchable:true,name:\"nrmsno\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:Goodsin,alphabeticalSort:\"true\",optionId:\"nrmsno\",optionValue:\"nrmsno\",value:this.props.selectedRecord?this.props.selectedRecord[\"nrmsno\"]:\"\",defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"nrmsno\"]:\"\"//  showOption={true}\n,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.props.onComboChange(event,'nrmsno');}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_PRODUCTCATEGORY\"}),isSearchable:true,name:\"nproductcatcode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:ProductCategory,alphabeticalSort:\"true\",optionId:\"nproductcatcode\",optionValue:\"sproductcatname\",value:this.props.selectedRecord?this.props.selectedRecord[\"nproductcatcode\"]:\"\",defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"nproductcatcode\"]:\"\"//  showOption={true}\n,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.props.onproductCategoryChange(event,'nproductcatcode');}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_PRODUCT\"}),isSearchable:true,name:\"nproductcode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:true,options:Product,alphabeticalSort:\"true\",optionId:\"nproductcode\",optionValue:\"sproductname\",value:this.props.selectedRecord?this.props.selectedRecord[\"nproductcode\"]:\"\",defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"nproductcode\"]:\"\"//  showOption={true}\n,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.props.onProductChange(event,'nproductcode');}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MultiColumnComboSearch,{data:Manufacturer,visibility:\"show-all\",labelledBy:\"IDS_MANUFNAME\",fieldToShow:[\"smanufname\",\"smanufsitename\",\"seprotocolname\"],selectedId:[this.props.selectedRecord[\"nmanufcode\"]],value:this.props.selectedRecord?[this.props.selectedRecord]:[],isMandatory:true,showInputkey:\"smanufname\",idslabelfield:[\"IDS_MANUFACTURERNAME\",\"IDS_SITENAME\",\"IDS_EPROTOCOL\"],getValue:function getValue(value){return _this2.props.onMultiColumnValue(value,[\"nproductmanufcode\",\"nmanufcode\",\"nmanufsitecode\",\"smanufname\",\"smanufsitename\"],true,[\"seprotocolname\"],[\"neprotocolcode\"]);},singleSelection:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_MANUFACTURERSITE\"}),name:\"smanufsitename\",type:\"text\",maxLength:\"100\",isMandatory:true,value:this.props.selectedRecord[\"smanufsitename\"]||[],onChange:function onChange(event){return _this2.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_MANUFACTURERSITE\"}),isDisabled:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_EPROTOCOL\"}),isSearchable:true,name:\"neprotocolcode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,options:EProtocol,alphabeticalSort:\"true\",optionId:\"neprotocolcode\",optionValue:\"seprotocolname\",value:this.props.selectedRecord?this.props.selectedRecord[\"neprotocolcode\"]:\"\",defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"neprotocolcode\"]:\"\"//  showOption={true}\n,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.props.onComboChange(event,'neprotocolcode');}})),RealRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MultiColumnComboSearch,{data:ProductMaholder,visibility:\"show-all\",labelledBy:\"IDS_MAHOLDERNAME\",fieldToShow:[\"smahname\",\"slicencenumber\",\"sdosagepercontainer\"],selectedId:[this.props.selectedRecord[\"nproductmahcode\"]],value:this.props.selectedRecord?[this.props.selectedRecord]:[],showInputkey:\"smahname\",idslabelfield:[\"IDS_MAHNAME\",\"IDS_LICENSENUMBER\",\"IDS_DOSAGEPERCONTAINER\"],getValue:function getValue(value){return _this2.props.onMultiColumnMAHChange(value,[\"nproductmahcode\",\"smahname\"]);},singleSelection:true}))),RealRegTypeValue.nregtypecode===RegistrationType.NON_BATCH&&/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_CLIENTNAME\"}),isSearchable:true,name:\"nclientcode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),isMandatory:false,isClearable:true,options:Client// alphabeticalSort=\"true\"\n// optionId=\"nclientcode\"\n// optionValue=\"sclientname\"\n,value:this.props.selectedRecord?this.props.selectedRecord[\"nclientcode\"]:\"\"//defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nclientcode\"] : \"\"}\n//  showOption={true}\n,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.props.onClientComboChange(event);}}),/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_CLIENTSITENAME\"}),name:\"sclientsitename\",type:\"text\",maxLength:\"100\",value:this.props.selectedRecord[\"saddress1\"]||[],onChange:function onChange(event){return _this2.props.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_CLIENTSITENAME\"}),isDisabled:true})))),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(Col,{md:12,className:\"r_treepadding\"},/*#__PURE__*/React.createElement(TreeDesign,null,AgaramTree&&AgaramTree.length>0&&/*#__PURE__*/React.createElement(PerfectScrollbar,null,/*#__PURE__*/React.createElement(FormTreeMenu,{data:AgaramTree,handleTreeClick:this.props.onTreeClick// openNodes={OpenNodes}\n,hasSearch:false,initialOpenNodes:OpenNodes// initialFocusKey={InitialFocusKey}\n// initialActiveKey={InitialActiveKey}\n,focusKey:FocusKey||\"\",activeKey:ActiveKey||\"\"})))),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_TESTGROUP\"}),isSearchable:true,name:\"nallottedspeccode\",isDisabled:false,placeholder:this.props.intl.formatMessage({id:\"IDS_TESTGROUP\"}),isMandatory:true,options:Specification,alphabeticalSort:\"true\",optionId:\"nallottedspeccode\",optionValue:\"sspecname\",value:this.props.selectedRecord?this.props.selectedRecord[\"nallottedspeccode\"]:\"\",defaultValue:this.props.selectedRecord?this.props.selectedRecord[\"nallottedspeccode\"]:\"\"//  showOption={true}\n,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.props.onspecChange(event,['nallottedspeccode','sversionno']);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_VERSION\"}),name:\"sversion\",type:\"text\",maxLength:\"100\",value:this.props.selectedRecord[\"sversion\"]||[],placeholder:this.props.intl.formatMessage({id:\"IDS_VERSION\"}),isDisabled:true}))),/*#__PURE__*/React.createElement(Col,{md:12,className:\"actioncolor\"},/*#__PURE__*/React.createElement(ProductList,{className:\"d-flex justify-content-end dropdown badget_menu hideboxshadow\"},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ntransactionstatus\",type:\"switch\",parentClassName:\"customswitchcss\",labelClassName:\"mb-0 paddingleft5\",label:this.props.intl.formatMessage({id:\"IDS_ALLTEST\"}),placeholder:this.props.formatMessage({id:\"IDS_ALLTEST\"}),defaultValue:this.props.selectedRecord[\"ntransactionstatus\"]===3?true:false,isMandatory:false,required:false,checked:this.props.selectedRecord[\"ntransactionstatus\"]===3?true:false,onChange:function onChange(event){return _this2.props.onInputOnChange(event);}}),/*#__PURE__*/React.createElement(ReactTooltip,{place:\"bottom\",globalEventOff:\"click\"}),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\",href:\"#\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_GETCOMPONENTS\"})},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCartArrowDown,className:\"ActionIconColor\",onClick:function onClick(event){return getComponent(event,_this2.props.selectedRecord);}})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\",href:\"\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_IMPORTEXCEL\"}),hidden:false},/*#__PURE__*/React.createElement(\"input\",{type:\"file\",style:{display:\"none\"}}),/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileImport,className:\"ActionIconColor\",onClick:function onClick(event){return _this2.props.AddFile();}}))))),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12,className:\"p-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(HeaderSpan,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMPONENT\",defaultMessage:\"Component\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn text-right\"// onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \n,onClick:function onClick(e){return _this2.props.AddComponent(e);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_COMPONENT\",defaultMessage:\"Component\"})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"slno\",primaryKeyField:\"slno\",selectedId:this.props.selectedComponent.slno// data={selectedTest}\n,dataResult:process(Component||[],this.props.componentDataState),dataState:this.props.componentDataState,dataStateChange:this.props.componentDataStateChange,extractedColumnList:this.columnlist(RealRegTypeValue,RealRegSubTypeValue,RegistrationType,RegistrationSubType),controlMap:this.props.controlMap,userRoleControlRights:this.props.userRoleControlRights,hasControlWithOutRights:true,inputParam:this.props.inputParam,userInfo:this.props.userInfo,pageable:true,scrollable:\"scrollable\",isActionRequired:true,plasmaMasterFile:this.props.plasmaMasterFile,handleRowClick:this.props.selectComponent,methodUrl:\"PopUp\",gridHeight:\"350px\",editRecordWORights:this.props.editComponent,deleteRecordWORights:this.props.deleteComponent,showdeleteRecordWORights:true,showeditRecordWORights:true})),/*#__PURE__*/React.createElement(Col,{md:RealRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL?8:12,className:\"p-0\"},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(HeaderSpan,null,\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TEST\",defaultMessage:\"Test\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn text-right\",onClick:function onClick(){return _this2.props.addComponentTest(_this2.props.selectedComponent);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TEST\",defaultMessage:\"Test\"})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"ntestgrouptestcode\",primaryKeyField:\"ntestgrouptestcode\",selectedId:this.state.selectedTestItem.ntestgrouptestcode// data={selectedTest}\n,dataResult:process(selectedTest||[],this.props.popUptestDataState),dataState:this.props.popUptestDataState,dataStateChange:this.props.testdataStateChange,extractedColumnList:testColumnList,controlMap:new Map(),userRoleControlRights:this.props.userRoleControlRights,hasControlWithOutRights:true,inputParam:this.props.inputParam,userInfo:this.props.userInfo,pageable:true,scrollable:\"scrollable\",isActionRequired:true// handleRowClick={this.handleRowClick}\n,methodUrl:\"PopUp\",gridHeight:\"400px\",deleteRecordWORights:this.props.deleteTest,showdeleteRecordWORights:true,showeditRecordWORights:false})),RealRegTypeValue.nregtypecode===RegistrationType.PLASMA_POOL&&/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(\"div\",{className:\"actions-stripe\"},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(HeaderSpan,null,\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SOURCE\",defaultMessage:\"Source\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"add-txt-btn text-right\",onClick:function onClick(){return _this2.props.addComponentSource(_this2.props.selectedComponent);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus}),\" \",/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_SOURCE\",defaultMessage:\"IDS_SOURCE\"})))),/*#__PURE__*/React.createElement(DataGrid,{key:\"ncountrycode\",primaryKeyField:\"ncountrycode\",selectedId:this.state.selectedSourceItem.ncountrycode// data={selectedTest}\n,dataResult:process(SelectedSource||[],this.props.popUpsourceDataState),dataState:this.props.popUpsourceDataState,dataStateChange:this.props.popUpsourceDataStateChange,extractedColumnList:countryColumnList,controlMap:new Map(),userRoleControlRights:this.props.userRoleControlRights,hasControlWithOutRights:true,inputParam:this.props.inputParam,userInfo:this.props.userInfo,pageable:false,scrollable:\"scrollable\",isActionRequired:true,handleRowClick:this.handleRowClick,methodUrl:\"PopUp\",gridHeight:\"400px\",deleteRecordWORights:this.props.deleteSource,showdeleteRecordWORights:true,showeditRecordWORights:false,actionColWidth:\"100px\"}))));}// componentDidUpdate(previousProps) {\n//     if (this.state.selectedTest !== this.props.selectedTest) {\n//         this.setState({ selectedTestItem: this.props.selectedTest.length > 0 ? this.props.selectedTest[this.props.selectedTest.length - 1] : [], selectedTest: this.props.selectedTest });\n//     } else if (this.props.SelectedSource !== previousProps.SelectedSource) {\n//         this.setState({ selectedSourceItem: this.props.SelectedSource.length > 0 ? this.props.SelectedSource[this.props.SelectedSource.length - 1] : [], SelectedSource: this.props.SelectedSource });\n//     }\n// }\n// handleRowClick = (event) => {\n//     this.setState({ selectedTestItem: event.dataItem })\n// }\n}]);return PreRegisterPopUp;}(Component);export default injectIntl(PreRegisterPopUp);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/registration/PreRegisterPopUp.jsx"],"names":["React","Component","Row","Col","Nav","FormSelectSearch","FormInput","TreeDesign","HeaderSpan","ProductList","FontAwesomeIcon","faCartArrowDown","faFileImport","faPlus","FormattedMessage","injectIntl","ReactTooltip","process","MultiColumnComboSearch","CustomSwitch","toast","FormTreeMenu","DataGrid","PerfectScrollbar","RegistrationSubType","RegistrationType","PreRegisterPopUp","props","columnlist","RealRegTypeValue","RealRegSubTypeValue","BatchColumnList","nregtypecode","BATCH","nregsubtypecode","PROTOCOL","NON_BATCH","width","PLASMA_POOL","EXTERNAL_POOL","state","selectedTestItem","selectedSourceItem","selectedTest","getComponent","event","selectedRecord","booleanFlag","nmanufcode","undefined","warn","intl","formatMessage","id","nallottedspeccode","length","ConfirmComponent","getComponentfromJava","testColumnList","countryColumnList","ProductCategory","Product","Goodsin","EProtocol","Manufacturer","Specification","Client","SelectedSource","ProductMaholder","AgaramTree","OpenNodes","FocusKey","ActiveKey","onComboChange","onproductCategoryChange","onProductChange","value","onMultiColumnValue","onInputOnChange","onMultiColumnMAHChange","onClientComboChange","onTreeClick","onspecChange","display","AddFile","e","AddComponent","selectedComponent","slno","componentDataState","componentDataStateChange","controlMap","userRoleControlRights","inputParam","userInfo","plasmaMasterFile","selectComponent","editComponent","deleteComponent","addComponentTest","ntestgrouptestcode","popUptestDataState","testdataStateChange","Map","deleteTest","addComponentSource","ncountrycode","popUpsourceDataState","popUpsourceDataStateChange","handleRowClick","deleteSource"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { TreeDesign, HeaderSpan } from './registration.styled';\r\nimport './registration.css'\r\nimport { ProductList } from '../product/product.styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartArrowDown, faFileImport, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport MultiColumnComboSearch from '../../components/multi-column-combo-search/multi-column-combo-search';\r\n\r\n\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\n\r\nimport { toast } from 'react-toastify';\r\n\r\nimport FormTreeMenu from '../../components/form-tree-menu/form-tree-menu.component';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { RegistrationSubType, RegistrationType } from '../../components/Enumeration';\r\n//import { Label } from 'reactstrap';\r\n\r\n\r\nclass PreRegisterPopUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedTestItem: [],\r\n            selectedSourceItem: [],\r\n            selectedTest: []\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const getComponent = (event, selectedRecord) => {\r\n            let booleanFlag = true\r\n            if (this.props.RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL) {\r\n                if (selectedRecord.nmanufcode === undefined) {\r\n                    booleanFlag = false;\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTMANUFACTURER\" }));\r\n                }\r\n            }\r\n            if (booleanFlag) {\r\n                if (selectedRecord.nallottedspeccode !== undefined && selectedRecord.nallottedspeccode !== \"\") {\r\n                    if (this.props.Component.length > 0) {\r\n                        this.props.ConfirmComponent(selectedRecord);\r\n                    } else {\r\n                        this.props.getComponentfromJava(selectedRecord) \r\n                    }\r\n\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSPECIFICATION\" })); //\"Select Specification\"\r\n                }\r\n            }\r\n\r\n        }\r\n        // const BatchColumnList = [\r\n        //     { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_STORAGECONDITION\", \"dataField\": \"sstorageconditionname\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_STORAGELOCATION\", \"dataField\": \"sstoragelocationname\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_NOOFCONTAINER\", \"dataField\": \"nnoofcontainer\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_DATERECEIVED\", \"dataField\": \"sreceiveddate\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"200px\" },\r\n        // ];\r\n        const testColumnList = [\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", width: \"200px\" },\r\n            { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"ssourcename\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_METHOD\", \"dataField\": \"smethodname\", width: \"150px\" },\r\n            { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", width: \"200px\" }]\r\n        // const plasmaColumnList = [\r\n        //     { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_NOOFCONTAINER\", \"dataField\": \"nnoofcontainer\", width: \"150px\" },\r\n        //     { \"idsName\": \"IDS_POOL/BULKVOLUME\", \"dataField\": \"spoolbulkvolume\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_PLASMAFILENUMBER\", \"dataField\": \"splasmafilenumber\", width: \"200px\" },\r\n        // ];\r\n        // const externalColumnList = [\r\n        //     { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_DATERECEIVED\", \"dataField\": \"dreceiveddate\", width: \"200px\" },\r\n        //     { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"200px\" },\r\n        // ];\r\n        const countryColumnList = [\r\n            { \"idsName\": \"IDS_SOURCE\", \"dataField\": \"scountryname\", width: \"150px\" }\r\n        ];\r\n        const { ProductCategory, Product, Goodsin, EProtocol, Manufacturer, Specification, Component,\r\n            selectedTest, Client, RealRegTypeValue,\r\n            RealRegSubTypeValue, SelectedSource, ProductMaholder, AgaramTree, OpenNodes, FocusKey, ActiveKey } = this.props;\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={6}>\r\n                        {(RealRegSubTypeValue.nregsubtypecode !== RegistrationSubType.PROTOCOL && RealRegSubTypeValue.nregsubtypecode !== RegistrationSubType.EXTERNAL_POOL) &&\r\n                            <Col md={12}>\r\n                                <FormSelectSearch\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_RMSNO\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"nrmsno\"}\r\n                                    isDisabled={false}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    isMandatory={true}\r\n                                    options={Goodsin}\r\n                                    alphabeticalSort=\"true\"\r\n                                    optionId=\"nrmsno\"\r\n                                    optionValue=\"nrmsno\"\r\n                                    value={this.props.selectedRecord ? this.props.selectedRecord[\"nrmsno\"] : \"\"}\r\n                                    defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nrmsno\"] : \"\"}\r\n                                    //  showOption={true}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.props.onComboChange(event, 'nrmsno')}>\r\n                                </FormSelectSearch>\r\n                            </Col>\r\n                        }\r\n                        <Col md={12}>\r\n\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PRODUCTCATEGORY\" })}\r\n                                isSearchable={true}\r\n                                name={\"nproductcatcode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                options={ProductCategory}\r\n                                alphabeticalSort=\"true\"\r\n                                optionId=\"nproductcatcode\"\r\n                                optionValue=\"sproductcatname\"\r\n                                value={this.props.selectedRecord ? this.props.selectedRecord[\"nproductcatcode\"] : \"\"}\r\n                                defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nproductcatcode\"] : \"\"}\r\n                                //  showOption={true}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onproductCategoryChange(event, 'nproductcatcode')}>\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                        <Col md={12}>\r\n\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_PRODUCT\" })}\r\n                                isSearchable={true}\r\n                                name={\"nproductcode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={true}\r\n                                options={Product}\r\n                                alphabeticalSort=\"true\"\r\n                                optionId=\"nproductcode\"\r\n                                optionValue=\"sproductname\"\r\n                                value={this.props.selectedRecord ? this.props.selectedRecord[\"nproductcode\"] : \"\"}\r\n                                defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nproductcode\"] : \"\"}\r\n                                //  showOption={true}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onProductChange(event, 'nproductcode')}>\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                        <Col md={12} >\r\n\r\n                            <MultiColumnComboSearch data={Manufacturer}\r\n                                visibility='show-all'\r\n                                labelledBy=\"IDS_MANUFNAME\"\r\n                                fieldToShow={[\"smanufname\", \"smanufsitename\", \"seprotocolname\"]}\r\n                                selectedId={[this.props.selectedRecord[\"nmanufcode\"]]}\r\n                                value={this.props.selectedRecord ? [this.props.selectedRecord] : []}\r\n                                isMandatory={true}\r\n                                showInputkey=\"smanufname\"\r\n                                idslabelfield={[\"IDS_MANUFACTURERNAME\", \"IDS_SITENAME\", \"IDS_EPROTOCOL\"]}\r\n                                getValue={(value) => this.props.onMultiColumnValue(value, [\"nproductmanufcode\", \"nmanufcode\", \"nmanufsitecode\", \"smanufname\", \"smanufsitename\"], true, [\"seprotocolname\"], [\"neprotocolcode\"])}\r\n                                singleSelection={true}\r\n                            />\r\n\r\n                            {/* <MultiColumnComboSearch\r\n                                data={Manufacturer}\r\n                                alphabeticalSort=\"true\"\r\n                                labelledBy=\"IDS_MANUFACTURERNAME\"\r\n                                fieldToShow={[\"smanufname\", \"smanufsitename\", \"seprotocolname\"]}\r\n                                idslabelfield={[\"IDS_MANUFACTURERNAME\", \"IDS_SITENAME\", \"IDS_EPROTOCOL\"]}\r\n                                showInputkey=\"smanufname\"\r\n                                value={this.props.selectedRecord[\"smanufname\"] || \"\"}\r\n                                onMultiColumnValue={(value) => this.props.onMultiColumnValue(value, [\"nmanufcode\", \"nmanufsitecode\", \"smanufname\", \"smanufsitename\"], true, [\"seprotocolname\"], [\"neprotocolcode\"])}\r\n                            /> */}\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_MANUFACTURERSITE\" })}\r\n                                name=\"smanufsitename\"\r\n                                type=\"text\"\r\n                                maxLength=\"100\"\r\n                                isMandatory={true}\r\n                                value={this.props.selectedRecord[\"smanufsitename\"] || []}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_MANUFACTURERSITE\" })}\r\n                                isDisabled={true}\r\n                            />\r\n                        </Col>\r\n                        <Col md={12}>\r\n\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_EPROTOCOL\" })}\r\n                                isSearchable={true}\r\n                                name={\"neprotocolcode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                isMandatory={false}\r\n                                options={EProtocol}\r\n                                alphabeticalSort=\"true\"\r\n                                optionId=\"neprotocolcode\"\r\n                                optionValue=\"seprotocolname\"\r\n                                value={this.props.selectedRecord ? this.props.selectedRecord[\"neprotocolcode\"] : \"\"}\r\n                                defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"neprotocolcode\"] : \"\"}\r\n                                //  showOption={true}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onComboChange(event, 'neprotocolcode')}>\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n\r\n                        {RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL &&\r\n                            <>\r\n                                <Col md={12}>\r\n                                    <MultiColumnComboSearch data={ProductMaholder}\r\n                                        visibility='show-all'\r\n                                        labelledBy=\"IDS_MAHOLDERNAME\"\r\n                                        fieldToShow={[\"smahname\", \"slicencenumber\", \"sdosagepercontainer\"]}\r\n                                        selectedId={[this.props.selectedRecord[\"nproductmahcode\"]]}\r\n                                        value={this.props.selectedRecord ? [this.props.selectedRecord] : []}\r\n                                        showInputkey=\"smahname\"\r\n                                        idslabelfield={[\"IDS_MAHNAME\", \"IDS_LICENSENUMBER\", \"IDS_DOSAGEPERCONTAINER\"]}\r\n                                        getValue={(value) => this.props.onMultiColumnMAHChange(value, [\"nproductmahcode\", \"smahname\"])}\r\n                                        singleSelection={true}\r\n                                    />\r\n                                </Col>\r\n                            </>\r\n                        }\r\n                          {RealRegTypeValue.nregtypecode === RegistrationType.NON_BATCH &&\r\n                            <>\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_CLIENTNAME\" })}\r\n                                        isSearchable={true}\r\n                                        name={\"nclientcode\"}\r\n                                        isDisabled={false}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        isMandatory={false}\r\n                                        isClearable={true}\r\n                                        options={Client}\r\n                                        // alphabeticalSort=\"true\"\r\n                                        // optionId=\"nclientcode\"\r\n                                        // optionValue=\"sclientname\"\r\n                                        value={this.props.selectedRecord ? this.props.selectedRecord[\"nclientcode\"] : \"\"}\r\n                                        //defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nclientcode\"] : \"\"}\r\n                                        //  showOption={true}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => this.props.onClientComboChange(event)}>\r\n                                    </FormSelectSearch>\r\n                                    <FormInput\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_CLIENTSITENAME\" })}\r\n                                        name=\"sclientsitename\"\r\n                                        type=\"text\"\r\n                                        maxLength=\"100\"\r\n                                        value={this.props.selectedRecord[\"saddress1\"] || []}\r\n                                        onChange={(event) => this.props.onInputOnChange(event)}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_CLIENTSITENAME\" })}\r\n                                        isDisabled={true}\r\n                                    />\r\n                                </Col>\r\n                            </>\r\n                        }\r\n                    </Col>\r\n                    <Col md={6}>                      \r\n\r\n                        <Col md={12} className=\"r_treepadding\" >\r\n                            <TreeDesign>\r\n\r\n                                {AgaramTree && AgaramTree.length > 0 &&\r\n                                    <PerfectScrollbar>\r\n                                        <FormTreeMenu\r\n                                            data={AgaramTree}\r\n                                            handleTreeClick={this.props.onTreeClick}\r\n                                            // openNodes={OpenNodes}\r\n                                            hasSearch={false}\r\n                                            initialOpenNodes={OpenNodes}\r\n                                            // initialFocusKey={InitialFocusKey}\r\n                                            // initialActiveKey={InitialActiveKey}\r\n                                            focusKey={FocusKey || \"\"}\r\n                                            activeKey={ActiveKey || \"\"}\r\n                                        />\r\n                                    </PerfectScrollbar>\r\n\r\n                                }\r\n\r\n                            </TreeDesign>\r\n                        </Col>\r\n                        <Col md={12}>\r\n\r\n                            <FormSelectSearch\r\n                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTGROUP\" })}\r\n                                isSearchable={true}\r\n                                name={\"nallottedspeccode\"}\r\n                                isDisabled={false}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_TESTGROUP\" })}\r\n                                isMandatory={true}\r\n                                options={Specification}\r\n                                alphabeticalSort=\"true\"\r\n                                optionId=\"nallottedspeccode\"\r\n                                optionValue=\"sspecname\"\r\n                                value={this.props.selectedRecord ? this.props.selectedRecord[\"nallottedspeccode\"] : \"\"}\r\n                                defaultValue={this.props.selectedRecord ? this.props.selectedRecord[\"nallottedspeccode\"] : \"\"}\r\n                                //  showOption={true}\r\n                                closeMenuOnSelect={true}\r\n                                onChange={(event) => this.props.onspecChange(event, ['nallottedspeccode', 'sversionno'])}>\r\n                            </FormSelectSearch>\r\n                        </Col>\r\n                        <Col md={12}>\r\n                            <FormInput\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_VERSION\" })}\r\n                                name=\"sversion\"\r\n                                type=\"text\"\r\n                                maxLength=\"100\"\r\n                                value={this.props.selectedRecord[\"sversion\"] || []}\r\n                                placeholder={this.props.intl.formatMessage({ id: \"IDS_VERSION\" })}\r\n                                isDisabled={true}\r\n                            />\r\n                        </Col>\r\n\r\n\r\n                    </Col>\r\n                    <Col md={12} className=\"actioncolor\">\r\n                        {/* <ProductList className=\"d-inline dropdown badget_menu actionfloat hideboxshadow\"> */}\r\n                        <ProductList className=\"d-flex justify-content-end dropdown badget_menu hideboxshadow\">\r\n                            <CustomSwitch\r\n                                name={\"ntransactionstatus\"}\r\n                                type=\"switch\"\r\n                                parentClassName=\"customswitchcss\"\r\n                                labelClassName={\"mb-0 paddingleft5\"}\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_ALLTEST\" })}\r\n                                placeholder={this.props.formatMessage({ id: \"IDS_ALLTEST\" })}\r\n                                defaultValue={this.props.selectedRecord[\"ntransactionstatus\"] === 3 ? true : false}\r\n                                isMandatory={false}\r\n                                required={false}\r\n                                checked={this.props.selectedRecord[\"ntransactionstatus\"] === 3 ? true : false}\r\n                                onChange={(event) => this.props.onInputOnChange(event)}\r\n                            />\r\n                            {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                            <ReactTooltip place=\"bottom\" globalEventOff='click' />\r\n                            <Nav.Link className=\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\"\r\n                                href=\"#\" data-tip={this.props.intl.formatMessage({ id: \"IDS_GETCOMPONENTS\" })}>\r\n                                <FontAwesomeIcon icon={faCartArrowDown} className=\"ActionIconColor\" onClick={(event) => getComponent(event, this.props.selectedRecord)} />\r\n                            </Nav.Link>\r\n                            <Nav.Link className=\"btn btn-circle mr-2 mt-2 action-icons-wrap iconsize iconmargin\" href=\"\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTEXCEL\" })} hidden={false}>\r\n                                <input type=\"file\" style={{ display: \"none\" }} />\r\n                                <FontAwesomeIcon icon={faFileImport} className=\"ActionIconColor\" onClick={(event) => this.props.AddFile()}>\r\n                                </FontAwesomeIcon>\r\n\r\n                            </Nav.Link>\r\n                            {/* </Tooltip> */}\r\n                        </ProductList>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col md={12} className=\"p-0\">\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan>\r\n                                    <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\"\r\n                                    // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                    onClick={(e) => this.props.AddComponent(e)}\r\n                                >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                    <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n                        {/* <Col md={12} className=\"p-0\" >\r\n                            <HeaderSpan> \r\n                                <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\"\r\n                                // onClick={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? (e) => this.props.addComponentTest(e) : (e) => this.props.AddComponent(e)} \r\n                                    onClick={(e) => this.props.AddComponent(e)}\r\n                                >\r\n                                <FontAwesomeIcon icon={faPlus} /> { }{ }\r\n                                <FormattedMessage id='IDS_COMPONENT' defaultMessage='Component' />\r\n                            </Nav.Link>\r\n                        </Col>\r\n                        <Col md={12} className=\"p-0\"> */}\r\n                        <DataGrid\r\n                            key=\"slno\"\r\n                            primaryKeyField=\"slno\"\r\n                            selectedId={this.props.selectedComponent.slno}\r\n                            // data={selectedTest}\r\n                            dataResult={process(Component || [], this.props.componentDataState)}\r\n                            dataState={this.props.componentDataState}\r\n                            dataStateChange={this.props.componentDataStateChange}\r\n                            extractedColumnList={this.columnlist(RealRegTypeValue, RealRegSubTypeValue, RegistrationType, RegistrationSubType)}\r\n                            controlMap={this.props.controlMap}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            hasControlWithOutRights={true}\r\n                            inputParam={this.props.inputParam}\r\n                            userInfo={this.props.userInfo}\r\n                            pageable={true}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            plasmaMasterFile={this.props.plasmaMasterFile}\r\n                            handleRowClick={this.props.selectComponent}\r\n                            methodUrl=\"PopUp\"\r\n                            gridHeight={\"350px\"}\r\n                            editRecordWORights={this.props.editComponent}\r\n                            deleteRecordWORights={this.props.deleteComponent}\r\n                            showdeleteRecordWORights={true}\r\n                            showeditRecordWORights={true}\r\n                        >\r\n                        </DataGrid>\r\n                        {/* </Col> */}\r\n                    </Col>\r\n\r\n                    <Col md={RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL ? 8 : 12} className=\"p-0\">\r\n                        <div className=\"actions-stripe\">\r\n                            <div className=\"d-flex justify-content-end\">\r\n                                <HeaderSpan> <FormattedMessage id='IDS_TEST' defaultMessage='Test' /></HeaderSpan>\r\n                                <Nav.Link className=\"add-txt-btn text-right\" onClick={() => this.props.addComponentTest(this.props.selectedComponent)} >\r\n                                    <FontAwesomeIcon icon={faPlus} /> { }\r\n                                    <FormattedMessage id='IDS_TEST' defaultMessage='Test' />\r\n                                </Nav.Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <DataGrid\r\n                            key=\"ntestgrouptestcode\"\r\n                            primaryKeyField=\"ntestgrouptestcode\"\r\n                            selectedId={this.state.selectedTestItem.ntestgrouptestcode}\r\n                            // data={selectedTest}\r\n                            dataResult={process(selectedTest || [], this.props.popUptestDataState)}\r\n                            dataState={this.props.popUptestDataState}\r\n                            dataStateChange={this.props.testdataStateChange}\r\n                            extractedColumnList={testColumnList}\r\n                            controlMap={new Map()}\r\n                            userRoleControlRights={this.props.userRoleControlRights}\r\n                            hasControlWithOutRights={true}\r\n                            inputParam={this.props.inputParam}\r\n                            userInfo={this.props.userInfo}\r\n                            pageable={true}\r\n                            scrollable={\"scrollable\"}\r\n                            isActionRequired={true}\r\n                            // handleRowClick={this.handleRowClick}\r\n                            methodUrl=\"PopUp\"\r\n                            gridHeight={\"400px\"}\r\n                            deleteRecordWORights={this.props.deleteTest}\r\n                            showdeleteRecordWORights={true}\r\n                            showeditRecordWORights={false}\r\n                        >\r\n                        </DataGrid>\r\n                    </Col>\r\n\r\n\r\n                    {RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL &&\r\n                        <Col md={4}  >\r\n\r\n                            <div className=\"actions-stripe\">\r\n                                <div className=\"d-flex justify-content-end\">\r\n                                    <HeaderSpan> <FormattedMessage id='IDS_SOURCE' defaultMessage='Source' /></HeaderSpan>\r\n                                    <Nav.Link className=\"add-txt-btn text-right\" onClick={() => this.props.addComponentSource(this.props.selectedComponent)} >\r\n                                        <FontAwesomeIcon icon={faPlus} /> { }\r\n                                        <FormattedMessage id='IDS_SOURCE' defaultMessage='IDS_SOURCE' />\r\n                                    </Nav.Link>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <DataGrid\r\n                                key=\"ncountrycode\"\r\n                                primaryKeyField=\"ncountrycode\"\r\n                                selectedId={this.state.selectedSourceItem.ncountrycode}\r\n                                // data={selectedTest}\r\n                                dataResult={process(SelectedSource || [],this.props.popUpsourceDataState)}\r\n                                dataState={this.props.popUpsourceDataState}\r\n                                dataStateChange={this.props.popUpsourceDataStateChange}\r\n                                extractedColumnList={countryColumnList}\r\n                                controlMap={new Map()}\r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                hasControlWithOutRights={true}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.userInfo}\r\n                                pageable={false}\r\n                                scrollable={\"scrollable\"}\r\n                                isActionRequired={true}\r\n                                handleRowClick={this.handleRowClick}\r\n                                methodUrl=\"PopUp\"\r\n                                gridHeight={\"400px\"}\r\n                                deleteRecordWORights={this.props.deleteSource}\r\n                                showdeleteRecordWORights={true}\r\n                                showeditRecordWORights={false}\r\n                                actionColWidth={\"100px\"}\r\n                            >\r\n                            </DataGrid>\r\n                        </Col>}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n    columnlist = (RealRegTypeValue, RealRegSubTypeValue, RegistrationType, RegistrationSubType) => {\r\n        let BatchColumnList = [];\r\n        if (((RealRegTypeValue.nregtypecode === RegistrationType.BATCH && RealRegSubTypeValue.nregsubtypecode !== RegistrationSubType.PROTOCOL)\r\n            || (RealRegTypeValue.nregtypecode === RegistrationType.NON_BATCH))) {\r\n            BatchColumnList = [\r\n                { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_STORAGECONDITION\", \"dataField\": \"sstorageconditionname\", width: \"150px\" },\r\n                { \"idsName\": \"IDS_STORAGELOCATION\", \"dataField\": \"sstoragelocationname\", width: \"150px\" },\r\n                { \"idsName\": \"IDS_NOOFCONTAINER\", \"dataField\": \"nnoofcontainer\", width: \"150px\" },\r\n                { \"idsName\": \"IDS_DATERECEIVED\", \"dataField\": \"sreceiveddate\", width: \"250px\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"200px\" },\r\n            ];\r\n\r\n\r\n        } else if (RealRegTypeValue.nregtypecode === RegistrationType.PLASMA_POOL && RealRegSubTypeValue.nregsubtypecode !== RegistrationSubType.EXTERNAL_POOL) {\r\n            BatchColumnList = [\r\n                { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_NOOFCONTAINER\", \"dataField\": \"nnoofcontainer\", width: \"150px\" },\r\n                { \"idsName\": \"IDS_POOLBULKVOLUME\", \"dataField\": \"sbulkvolume\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_PLASMAFILENUMBER\", \"dataField\": \"splasmafilenumber\", width: \"200px\" },\r\n            ];\r\n\r\n        } else if (RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.PROTOCOL || RealRegSubTypeValue.nregsubtypecode === RegistrationSubType.EXTERNAL_POOL) {\r\n            BatchColumnList = [\r\n                { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_DATERECEIVED\", \"dataField\": \"sreceiveddate\", width: \"250px\" },\r\n                { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", width: \"200px\" },\r\n            ];\r\n        } else {\r\n            BatchColumnList = [\r\n                { \"idsName\": \"IDS_COMPONENTNAME\", \"dataField\": \"scomponentname\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_MANUFLOTNO\", \"dataField\": \"smanuflotno\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_NOOFCONTAINER\", \"dataField\": \"nnoofcontainer\", width: \"150px\" },\r\n                { \"idsName\": \"IDS_POOLBULKVOLUME\", \"dataField\": \"sbulkvolume\", width: \"200px\" },\r\n                { \"idsName\": \"IDS_PLASMAFILENUMBER\", \"dataField\": \"splasmafilenumber\", width: \"200px\" },\r\n            ];\r\n        }\r\n\r\n        return BatchColumnList;\r\n\r\n    }\r\n    // componentDidUpdate(previousProps) {\r\n    //     if (this.state.selectedTest !== this.props.selectedTest) {\r\n    //         this.setState({ selectedTestItem: this.props.selectedTest.length > 0 ? this.props.selectedTest[this.props.selectedTest.length - 1] : [], selectedTest: this.props.selectedTest });\r\n    //     } else if (this.props.SelectedSource !== previousProps.SelectedSource) {\r\n    //         this.setState({ selectedSourceItem: this.props.SelectedSource.length > 0 ? this.props.SelectedSource[this.props.SelectedSource.length - 1] : [], SelectedSource: this.props.SelectedSource });\r\n    //     }\r\n    // }\r\n    // handleRowClick = (event) => {\r\n    //     this.setState({ selectedTestItem: event.dataItem })\r\n    // }\r\n}\r\n\r\nexport default injectIntl(PreRegisterPopUp)\r\n"]},"metadata":{},"sourceType":"module"}