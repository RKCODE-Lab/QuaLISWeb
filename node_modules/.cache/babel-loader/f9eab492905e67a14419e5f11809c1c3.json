{"ast":null,"code":"import*as React from'react';import{injectIntl}from'react-intl';import{Row,Col,Form}from'react-bootstrap';import'@progress/kendo-react-animation';import TreeViewEditable from'../../components/form-tree-editable/form-tree-editable.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import FormInput from'../../components/form-input/form-input.component';var AddTreeview=function AddTreeview(props){return/*#__PURE__*/React.createElement(React.Fragment,null,props.isSendToStore===true?/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_SAMPLE\"}),name:\"sampleToStore\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_SAMPLE\"}),value:props.selectedRecord?props.selectedRecord[\"sampleToStore\"]:\"\",isMandatory:false,isDisabled:true,required:true,maxLength:\"100\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormNumericInput,{name:\"nsampleqty\",label:props.intl.formatMessage({id:\"IDS_SAMPLEQTY\"}),type:\"number\",value:props.selectedRecord[\"nsampleqty\"],placeholder:props.intl.formatMessage({id:\"IDS_SAMPLEQTY\"}),strict:true,min:0//max={99999999.99}\n,maxLength:11,onChange:function onChange(value){return props.onNumericInputChange(value,\"nsampleqty\");},noStyle:true,precision:2//isMandatory={true}\n,className:\"form-control\",errors:\"Please provide a valid number.\"})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nunitcode\",formLabel:props.intl.formatMessage({id:\"IDS_UNIT\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.unitMaster,value:props.selectedRecord[\"nunitcode\"],isMandatory:false,isClearable:false,isMulti:false,isSearchable:true,isDisabled:true,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'nunitcode',4);}}))):/*#__PURE__*/React.createElement(React.Fragment,null),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nstoragecategorycode\",formLabel:props.intl.formatMessage({id:\"IDS_STORAGECATEGORY\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.storageCategory,value:props.selectedRecord[\"nstoragecategorycode\"],isMandatory:true,isClearable:false,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'nstoragecategorycode',4);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsamplestoragelocationcode\",formLabel:props.intl.formatMessage({id:\"IDS_STORAGELOCATION\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.approvedLocation,value:props.selectedRecord[\"nsamplestoragelocationcode\"],isMandatory:true,isClearable:false,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,'nsamplestoragelocationcode',5);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(TreeViewEditable,{id:\"samplestoragelocation\",name:\"samplestoragelocation\",placeholder:\"Enter samplestoragelocation\",data:props.treeData,expandIcons:true,selectField:'active-node',item:props.itemRender,onExpandChange:props.onExpandChange,onItemClick:props.onItemClick}))));};export default injectIntl(AddTreeview);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/MoveSampleOrContainers.jsx"],"names":["React","injectIntl","Row","Col","Form","TreeViewEditable","FormSelectSearch","FormNumericInput","FormInput","AddTreeview","props","isSendToStore","intl","formatMessage","id","event","onInputOnChange","selectedRecord","value","onNumericInputChange","unitMaster","onComboChange","storageCategory","approvedLocation","treeData","itemRender","onExpandChange","onItemClick"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nconst AddTreeview = (props) => {\r\n  return (\r\n    <>\r\n      {props.isSendToStore === true ?\r\n        <Row>\r\n          <Col md={12}>\r\n            <FormInput\r\n              label={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n              name={\"sampleToStore\"}\r\n              type=\"text\"\r\n              onChange={(event) => props.onInputOnChange(event)}\r\n              placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLE\" })}\r\n              value={props.selectedRecord ? props.selectedRecord[\"sampleToStore\"] : \"\"}\r\n              isMandatory={false}\r\n              isDisabled={true}\r\n              required={true}\r\n              maxLength={\"100\"}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormNumericInput\r\n              name={\"nsampleqty\"}\r\n              label={props.intl.formatMessage({ id: \"IDS_SAMPLEQTY\" })}\r\n              type=\"number\"\r\n              value={props.selectedRecord[\"nsampleqty\"]}\r\n              placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLEQTY\" })}\r\n              strict={true}\r\n              min={0}\r\n              //max={99999999.99}\r\n              maxLength={11}\r\n              onChange={(value) => props.onNumericInputChange(value, \"nsampleqty\")}\r\n              noStyle={true}\r\n              precision={2}\r\n              //isMandatory={true}\r\n              className=\"form-control\"\r\n              errors=\"Please provide a valid number.\"\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <FormSelectSearch\r\n              name={\"nunitcode\"}\r\n              formLabel={props.intl.formatMessage({ id: \"IDS_UNIT\" })}\r\n              placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n              options={props.unitMaster}\r\n              value={props.selectedRecord[\"nunitcode\"]}\r\n              isMandatory={false}\r\n              isClearable={false}\r\n              isMulti={false}\r\n              isSearchable={true}\r\n              isDisabled={true}\r\n              closeMenuOnSelect={true}\r\n              onChange={(event) => props.onComboChange(event, 'nunitcode', 4)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        :\r\n        <></>\r\n      }\r\n      <Row>\r\n\r\n        <Col md={12}>\r\n          <FormSelectSearch\r\n            name={\"nstoragecategorycode\"}\r\n            formLabel={props.intl.formatMessage({ id: \"IDS_STORAGECATEGORY\" })}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n            options={props.storageCategory}\r\n            value={props.selectedRecord[\"nstoragecategorycode\"]}\r\n            isMandatory={true}\r\n            isClearable={false}\r\n            isMulti={false}\r\n            isSearchable={true}\r\n            isDisabled={false}\r\n            closeMenuOnSelect={true}\r\n            onChange={(event) => props.onComboChange(event, 'nstoragecategorycode', 4)}\r\n          />\r\n        </Col>\r\n        <Col md={12}>\r\n          <FormSelectSearch\r\n            name={\"nsamplestoragelocationcode\"}\r\n            formLabel={props.intl.formatMessage({ id: \"IDS_STORAGELOCATION\" })}\r\n            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n            options={props.approvedLocation}\r\n            value={props.selectedRecord[\"nsamplestoragelocationcode\"]}\r\n            isMandatory={true}\r\n            isClearable={false}\r\n            isMulti={false}\r\n            isSearchable={true}\r\n            isDisabled={false}\r\n            closeMenuOnSelect={true}\r\n            onChange={(event) => props.onComboChange(event, 'nsamplestoragelocationcode', 5)}\r\n          />\r\n        </Col>\r\n        <Col md={12}>\r\n          <TreeViewEditable\r\n            id=\"samplestoragelocation\"\r\n            name=\"samplestoragelocation\"\r\n            placeholder=\"Enter samplestoragelocation\"\r\n            data={props.treeData}\r\n            expandIcons={true}\r\n            selectField={'active-node'}\r\n            item={props.itemRender}\r\n            onExpandChange={props.onExpandChange}\r\n            onItemClick={props.onItemClick}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </>)\r\n}\r\nexport default injectIntl(AddTreeview);\r\n"]},"metadata":{},"sourceType":"module"}