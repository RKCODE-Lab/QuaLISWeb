{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import FormTextarea from'../../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../../components/form-select-search/form-select-search.component';import{MediaHeader}from'../../../components/App.styles';import TestPopOver from'../../ResultEntryBySample/TestPopOver';var AddComment=function AddComment(props){var nameString=props.operation==='update'?props.selectedRecord.jsondata&&[props.selectedRecord.jsondata[props.displayName]]||[]:props.masterList?props.masterList.map(function(obj){return obj[props.displayName]||obj[props.jsonField][props.displayName];}):[];var message=\"\".concat(nameString.length,\" \").concat(props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"}),\" \").concat(props.intl.formatMessage({id:\"IDS_SELECTED\"}));return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,props.masterList&&Object.values(props.masterList).length>0?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,{className:\"mb-4\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(MediaHeader,{className:\"labelfont\"},nameString.length===1?\"\".concat(props.intl.formatMessage({id:props.selectedListName||\"IDS_TESTS\"}),\": \").concat(nameString[0]):/*#__PURE__*/React.createElement(TestPopOver,{stringList:nameString,message:message}))))):\"\"),/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"12\"},props.isTestComment?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_SAMPLETESTCOMMENTS\"}),isSearchable:true,name:\"nsamplecommentscode\",isDisabled:false,placeholder:props.intl.formatMessage({id:\"IDS_PLEASESELECT\"}),isMandatory:true,showOption:true,isClearable:false,options:props.SampleTestComments||[],optionId:\"nsampletestcommentcode\",optionValue:\"ssampletestcommentname\",value:props.selectedRecord[\"nsamplecommentscode\"],onChange:function onChange(value){return props.onComboChange(value,\"nsamplecommentscode\");},alphabeticalSort:true}):\"\",props.isSampleTestComment&&props.isSampleTestComment===true?/*#__PURE__*/React.createElement(React.Fragment,null,\"   \",/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_COMMENTNAME\"}),isSearchable:true,name:\"ncommentsubtypecode\",showOption:true,options:props.CommentSubType||[],optionId:\"ncommentsubtypecode\",optionValue:\"scommentsubtype\",value:props.selectedRecord[\"ncommentsubtypecode\"]&&props.selectedRecord[\"ncommentsubtypecode\"]||\"\",onChange:function onChange(value){return props.onComboChange(value,'ncommentsubtypecode');},isMandatory:true}),props.selectedRecord[\"ncommentsubtypecode\"]&&props.selectedRecord[\"ncommentsubtypecode\"].value===3?/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:props.intl.formatMessage({id:\"IDS_ABBREVIATIONNAME\"}),isSearchable:true,name:\"nsampletestcommentscode\",showOption:true,options:props.predefcomments||[],optionId:\"nsampletestcommentscode\",optionValue:\"spredefinedname\",value:props.selectedRecord[\"nsampletestcommentscode\"]&&props.selectedRecord[\"nsampletestcommentscode\"]||\"\",onChange:function onChange(value){return props.onComboChange(value,'nsampletestcommentscode');},isMandatory:true}):\"\",/*#__PURE__*/React.createElement(FormTextarea,{formGroupClassName:\"remove-floating-label-margin\",label:props.intl.formatMessage({id:\"IDS_COMMENT\"}),name:\"scomments\",type:\"text\",required:false,isMandatory:true,value:props.selectedRecord[\"scomments\"]&&props.selectedRecord[\"scomments\"]||\"\",onChange:function onChange(event){return props.onInputOnChange(event);}})):/*#__PURE__*/React.createElement(FormTextarea,{name:\"scomments\",label:props.intl.formatMessage({id:\"IDS_COMMENT\"}),onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_COMMENT\"}),value:props.selectedRecord?props.selectedRecord[\"scomments\"]:\"\",rows:\"2\",required:true,isMandatory:true,maxLength:1500}))));};export default injectIntl(AddComment);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/attachmentscomments/comments/AddComment.jsx"],"names":["React","injectIntl","Row","Col","FormTextarea","FormSelectSearch","MediaHeader","TestPopOver","AddComment","props","nameString","operation","selectedRecord","jsondata","displayName","masterList","map","obj","jsonField","message","length","intl","formatMessage","id","selectedListName","Object","values","isTestComment","SampleTestComments","value","onComboChange","isSampleTestComment","CommentSubType","predefcomments","event","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormTextarea from '../../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport { MediaHeader } from '../../../components/App.styles';\r\nimport TestPopOver from '../../ResultEntryBySample/TestPopOver';\r\n\r\nconst AddComment = props => {\r\n    let nameString = props.operation === 'update' ? props.selectedRecord.jsondata && [props.selectedRecord.jsondata[props.displayName]] || [] : props.masterList ? props.masterList.map(obj => obj[props.displayName] || obj[props.jsonField][props.displayName]) : []\r\n    let message = `${nameString.length} ${props.intl.formatMessage({ id: props.selectedListName || \"IDS_TESTS\" })} ${props.intl.formatMessage({ id: \"IDS_SELECTED\" })}`\r\n    return (\r\n        <>\r\n            <Row>\r\n                {props.masterList && Object.values(props.masterList).length > 0 ?\r\n                    <div>\r\n                        <Row className=\"mb-4\">\r\n                            <Col md={12}>\r\n                                <MediaHeader className={`labelfont`}>\r\n                                    {nameString.length === 1 ?\r\n                                        `${props.intl.formatMessage({ id: props.selectedListName || \"IDS_TESTS\" })}: ${nameString[0]}` :\r\n                                        <TestPopOver stringList={nameString} message={message}></TestPopOver>\r\n\r\n                                    }\r\n                                </MediaHeader>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                    : \"\"}\r\n            </Row>\r\n            <Row>\r\n                <Col md=\"12\">\r\n                    {props.isTestComment ?\r\n                        <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_SAMPLETESTCOMMENTS\" })}\r\n                            isSearchable={true}\r\n                            name={\"nsamplecommentscode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_PLEASESELECT\" })}\r\n                            isMandatory={true}\r\n                            showOption={true}\r\n                            isClearable={false}\r\n                            options={props.SampleTestComments || []}\r\n                            optionId='nsampletestcommentcode'\r\n                            optionValue='ssampletestcommentname'\r\n                            value={props.selectedRecord[\"nsamplecommentscode\"]}\r\n                            onChange={value => props.onComboChange(value, \"nsamplecommentscode\")}\r\n                            alphabeticalSort={true}\r\n                        />\r\n                        : \"\"}\r\n                    {props.isSampleTestComment && props.isSampleTestComment === true ?\r\n                        <>   <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_COMMENTNAME\" })}\r\n                            isSearchable={true}\r\n                            name={\"ncommentsubtypecode\"}\r\n                            showOption={true}\r\n                            options={props.CommentSubType || []}\r\n                            optionId='ncommentsubtypecode'\r\n                            optionValue='scommentsubtype'\r\n                            value={props.selectedRecord[\"ncommentsubtypecode\"] && props.selectedRecord[\"ncommentsubtypecode\"] || \"\"}\r\n                            onChange={value => props.onComboChange(value, 'ncommentsubtypecode')}\r\n                            isMandatory={true}\r\n                        ></FormSelectSearch>\r\n                            {props.selectedRecord[\"ncommentsubtypecode\"]&&\r\n                            props.selectedRecord[\"ncommentsubtypecode\"].value === 3   ?\r\n                                <FormSelectSearch\r\n                                    formLabel={props.intl.formatMessage({ id: \"IDS_ABBREVIATIONNAME\" })}\r\n                                    isSearchable={true}\r\n                                    name={\"nsampletestcommentscode\"}\r\n                                    showOption={true}\r\n                                    options={props.predefcomments || []}\r\n                                    optionId='nsampletestcommentscode'\r\n                                    optionValue='spredefinedname'\r\n                                    value={props.selectedRecord[\"nsampletestcommentscode\"] && props.selectedRecord[\"nsampletestcommentscode\"] || \"\"}\r\n                                    onChange={value => props.onComboChange(value, 'nsampletestcommentscode')}\r\n                                    isMandatory={true}\r\n                                ></FormSelectSearch> : \"\"}\r\n\r\n                            <FormTextarea\r\n                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                label={props.intl.formatMessage({ id: \"IDS_COMMENT\" })}\r\n                                name={`scomments`}\r\n                                type=\"text\"\r\n                                required={false}\r\n                                isMandatory={true}\r\n                                value={props.selectedRecord[\"scomments\"] && props.selectedRecord[\"scomments\"] || \"\"}\r\n                                onChange={(event) => props.onInputOnChange(event)}\r\n                            /></> : <FormTextarea\r\n                            name={\"scomments\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_COMMENT\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_COMMENT\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"scomments\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={true}\r\n                            isMandatory={true}\r\n                            maxLength={1500}\r\n                        />\r\n                    }\r\n\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddComment);"]},"metadata":{},"sourceType":"module"}