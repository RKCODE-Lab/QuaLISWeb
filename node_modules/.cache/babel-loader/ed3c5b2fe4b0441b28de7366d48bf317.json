{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\release\\\\Release.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport { Utils as QbUtils } from \"@react-awesome-query-builder/ui\";\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { callService, crudMaster, updateStore, validateEsignCredential, filterColumnData, getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType, getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample, generateReleasedReport, //getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType,\npreviewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise, getreportcomments, fetchReportInfoReleaseById, UpdateReportComments, getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData, //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\n//getSectionForSectionWise, \n//fetchParameterById,updateCorrectionStatus,\n//previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\nfetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory, downloadVersionReport, viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool, getPatientWiseSample, preliminaryReport, releaseReportHistory } from '../../actions';\nimport ListMaster from \"../../components/list-master/list-master.component\";\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData, showEsign, Lims_JSON_stringify, create_UUID } from '../../components/CommonScript';\nimport { SampleType, designProperties, formCode, ResultEntry, reportCOAType, transactionStatus } from '../../components/Enumeration';\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\nimport DataGrid from '../../components/data-grid/data-grid.component';\nimport { Affix } from 'rsuite';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\nimport ReleaseFilter from './ReleaseFilter';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../audittrail/Esign';\nimport { ContentPanel, ProductList } from '../product/product.styled';\nimport { faEdit, faExpandArrowsAlt, faEye, faInfoCircle, faPencilAlt, faRecycle, faStore, faTrash, faFilePen, faFileCode, faDownload, faFilePdf, faHistory, faFile, faComments, faPaperclip } from '@fortawesome/free-solid-svg-icons';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { ReactComponent as Generate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/generate-certificate.svg\";\nimport { ReactComponent as ReGenerate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/regenerate-icon.svg\";\nimport { ReactComponent as ResultCorrection } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/resultcorrection.svg\";\nimport { ReactComponent as Correction } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/correctionrelease.svg\";\nimport { ReactComponent as Comment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/comment-edit-svgrepo-com.svg\";\nimport { ReactComponent as DownloadCertificate } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Download Certificate.svg\";\nimport { ReactComponent as PreliminaryReport } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/preliminary_report.svg\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { fileViewUrl, reportUrl } from '../../rsapi';\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\nimport { REPORTTYPE } from \"../../components/Enumeration\";\nimport { jsonSchema } from 'uuidv4';\nimport SampleInfoView from '../approval/SampleInfoView'; //import DataGrid from '../../components/data-grid/data-grid.component';\n//import ModalShow from '../../components/ModalShow';\n\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport AddOpenDate from '../instrumentmanagement/AddOpenDate';\nimport AddCloseDate from '../instrumentmanagement/AddCloseDate';\nimport ModalShow from '../../components/ModalShow';\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\nimport ResultGrid from '../resultgrid/ResultGrid';\nimport ListAttachment from '../../components/ListAttachment'; //import FormInput from '../../components/form-input/form-input.component'\n\nimport ReleaseTestAttachment from './ReleaseTestAttachment';\nimport ReleaseTestComment from './ReleaseTestComment';\nimport VersionHistGrid from './VersionHistGrid';\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport ReleaseReportHistory from './ReleaseReportHistory';\nimport { ReactComponent as Preview } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Preview.svg\";\nimport { ReactComponent as TestAttachment } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Test Attachment.svg\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Release extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.outsourceFileDataStateChange = event => {\n      this.setState({\n        outsourceFileDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.reportInfoDataChange = event => {\n      this.setState({\n        reportInfoDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.correctionDataStateChange = event => {\n      this.setState({\n        correctionDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.versionHistoryDataStateChange = event => {\n      this.setState({\n        versionHistoryDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.preliminaryHistoryDataStateChange = event => {\n      this.setState({\n        preliminaryHistoryDataState: event.dataState,\n        dataResult: process(this.state.data, event.dataState)\n      }); // this.expandNextData(event.dataState);\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      if (dateValue === null) {\n        dateValue = new Date();\n      }\n\n      let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date();\n      let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date();\n      let obj = {};\n\n      if (dateName === 'fromDate') {\n        obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      } else {\n        obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo);\n        dfrom = obj.fromDate;\n        dto = obj.toDate;\n      }\n\n      let inputParam = {\n        inputData: {\n          nflag: 2,\n          nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          dfrom: String(dfrom),\n          dto: String(dto),\n          userinfo: this.props.Login.userInfo,\n          realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n          realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n          realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n          realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n          realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n          realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n          realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReleasedApprovalVersion(inputParam);\n    };\n\n    this.onFilterComboChange = (comboData, fieldName) => {\n      if (comboData) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let inputParamData = {};\n\n        if (fieldName === 'nsampletypecode') {\n          if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\n            inputParamData = {\n              nflag: 2,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              SampleTypeValue: comboData.item,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            this.props.getReleasedRegistrationType(inputParamData);\n          }\n        } else if (fieldName === 'nregtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\n            inputParamData = {\n              nflag: 3,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: this.props.Login.masterData,\n              RegTypeValue: comboData.item,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            this.props.getReleasedRegistrationSubType(inputParamData);\n          }\n        } else if (fieldName === 'nregsubtypecode') {\n          if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\n            let inputData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              realSampleTypeList: this.props.Login.masterData.realSampleTypeList || [],\n              realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\n              realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\n              realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\n              realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\n              realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\n              realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\n            };\n            inputParamData = {\n              inputData,\n              masterData: { ...this.props.Login.masterData,\n                RegSubTypeValue: comboData.item\n              }\n            };\n            this.props.getReleasedApprovalVersion(inputParamData);\n          }\n        } else if (fieldName === 'ndesigntemplatemappingcode') {\n          // const inputParamData = {\n          //     dfrom: obj.fromDate,\n          //     dto: obj.toDate,\n          //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          //     userinfo: this.props.Login.userInfo,\n          //     masterData: { ...this.props.Login.masterData },\n          //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n          //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n          //     ndesigntemplatemappingcode: comboData.value,\n          //     DesignTemplateMappingValue: comboData.item\n          // }\n          // this.props.getReleaseFilterBasedTest(inputParamData)\n          let masterData = { ...this.props.Login.masterData,\n            DesignTemplateMappingValue: comboData.item\n          };\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              masterData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else if (fieldName === 'napproveconfversioncode') {\n          if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\n            inputParamData = {\n              nflag: 4,\n              dfrom: obj.fromDate,\n              dto: obj.toDate,\n              nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n              nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n              nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n              napprovalversioncode: comboData.value,\n              userinfo: this.props.Login.userInfo,\n              masterData: { ...this.props.Login.masterData,\n                ApprovalVersionValue: comboData.item\n              },\n              RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n              ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n            };\n            this.props.getReleasedFilterStatus(inputParamData);\n          }\n        } //Don't Remove\n        // else if (fieldName === 'nsectioncode') {\n        //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\n        //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             nsectioncode: comboData.value === -1 ? null\n        //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //                 : comboData.value,\n        //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\n        //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\n        //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleasedFilterBasedTest(inputParamData);\n        //     }\n        // }\n        // else if (fieldName === 'njobstatuscode') {\n        //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\n        //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\n        //         const updateInfo = {\n        //             typeName: DEFAULT_RETURN,\n        //             data: { masterData }\n        //         }\n        //         this.props.updateStore(updateInfo);\n        //     }\n        // }\n        else if (fieldName === 'ntestcode') {\n          if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\n            let masterData = { ...this.props.Login.masterData,\n              TestValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } else if (fieldName === 'ncoareporttypecode') {\n          if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\n            let masterData = { ...this.props.Login.masterData,\n              ReportTypeValue: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        } // else {\n        //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\n        //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\n        //         //  const updateInfo = {\n        //         //     typeName: DEFAULT_RETURN,\n        //         //    data: { masterData }\n        //         // }\n        //         inputParamData = {\n        //             dfrom: obj.fromDate,\n        //             dto: obj.toDate,\n        //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n        //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n        //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n        //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n        //             userinfo: this.props.Login.userInfo,\n        //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\n        //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\n        //             ntransactionstatus: comboData.value,\n        //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\n        //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \n        //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \n        //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\n        //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n        //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\n        //         }\n        //         this.props.getReleaseFilterBasedTest(inputParamData);\n        //     }\n        // }\n\n      }\n    };\n\n    this.closeFilter = () => {\n      let inputValues = {\n        fromDate: this.props.Login.masterData.realFromDate || new Date(),\n        //this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date() ,\n        toDate: this.props.Login.masterData.realToDate || new Date(),\n        //this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() ,\n        SampleTypeValue: this.props.Login.masterData.realSampleTypeValue || {},\n        ReportTypeValue: this.props.Login.masterData.realReportTypeValue || {},\n        RegTypeValue: this.props.Login.masterData.realRegTypeValue || {},\n        RegSubTypeValue: this.props.Login.masterData.realRegSubTypeValue || {},\n        ApprovalVersionValue: this.props.Login.masterData.realApprovalVersionValue || {},\n        DesignTemplateMappingValue: this.props.Login.masterData.realDesignTemplateMappingValue || {},\n        FilterStatusValue: this.props.Login.masterData.realFilterStatusValue || {},\n        SampleType: this.props.Login.masterData.realSampleTypeList || [],\n        ReportType: this.props.Login.masterData.realReportTypeList || [],\n        RegType: this.props.Login.masterData.realRegTypeList || [],\n        RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\n        FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\n        ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\n        DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\n      };\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false,\n          masterData: { ...this.props.Login.masterData,\n            ...inputValues\n          }\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewDownloadFile = filedata => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          // change: this.props.Login.change,\n          // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          ncoareporthistorycode: filedata.inputData.ncoareporthistorycode ? filedata.inputData.ncoareporthistorycode : -1,\n          npreliminaryreporthistorycode: filedata.inputData.npreliminaryreporthistorycode ? filedata.inputData.npreliminaryreporthistorycode : -1,\n          //ntransactionstatus: String(transactionStatus.RELEASED),\n          //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n          // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          //nflag: 2,\n          userinfo: this.props.Login.userInfo,\n          //sreportcomments: \"\",\n          //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          //nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          action: \"DownloadVersionhistory\",\n          doAction: \"download\",\n          // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\n          openModal: true,\n          userInfo: this.props.Login.userInfo,\n          ncontrolCode: filedata.ncontrolCode\n        },\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RELEASEREPORTHISTORY\"\n        })\n      };\n      this.props.downloadVersionReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n    };\n\n    this.onFilterSubmit = () => {\n      this.searchRef.current.value = \"\";\n      this.props.Login.change = false;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      let realFromDate = obj.fromDate;\n      let realToDate = obj.toDate;\n      let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n      let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n      let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n      let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n      let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue; //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\n      //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\n\n      let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n      let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n      let realSampleTypeList = this.props.Login.masterData.SampleType || [];\n      let realReportTypeList = this.props.Login.masterData.ReportType || [];\n      let realRegTypeList = this.props.Login.masterData.RegType || [];\n      let realRegSubTypeList = this.props.Login.masterData.RegSubType || [];\n      let realFilterStatusList = this.props.Login.masterData.FilterStatus || [];\n      let realApprovalVersionList = this.props.Login.masterData.ApprovalVersion || [];\n      let realDesignTemplateMappingList = this.props.Login.masterData.DesignTemplateMapping || [];\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        //  realUserSectionValue, realTestValue,\n        realDesignTemplateMappingValue,\n        realReportTypeList,\n        realRegSubTypeList,\n        realRegTypeList,\n        realReportTypeValue,\n        realSampleTypeList,\n        realFilterStatusList,\n        realApprovalVersionList,\n        realDesignTemplateMappingList\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode) {\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.checkFunction = data => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          arrayfalse: data.arrayfalse,\n          childfalsearray: data.childfalsearray\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.checkFunction1 = () => {\n      this.setState({\n        count: 1\n      });\n    };\n\n    this.expandFunc = change => {\n      let count = change.count;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          masterData: { ...this.props.Login.masterData\n          },\n          change: change.change,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false,\n          checkFlag: \"1\",\n          count: count\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_REPORTNOTGENERATED\"\n        }));\n      }\n    };\n\n    this.onKeyPress = (event, index, paremterResultcode) => {\n      if (event.keyCode === 13) {\n        for (let i = 0; i < event.target.form.elements.length; i++) {\n          if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\n            event.target.form.elements[i].focus();\n            break;\n          }\n        }\n\n        event.preventDefault();\n      }\n    };\n\n    this.onResultInputChange = parameterResults => {\n      this.setState({\n        parameterResults: [...parameterResults],\n        isParameterInitialRender: false // currentAlertResultCode,\n        //  currentntestgrouptestpredefcode\n\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      if (comboData !== null) {\n        const selectedRecord = this.state.selectedRecord || {};\n        selectedRecord[fieldName] = comboData;\n        this.setState({\n          selectedRecord\n        });\n      }\n\n      if (fieldName === 'nprojecttypecode') {\n        const inputParamData = {\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\n          nprojecttypecode: comboData.value,\n          userinfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.getApprovedProjectByProjectType(inputParamData);\n      }\n\n      if (fieldName === 'nprojectmastercode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo); //let realFromDate = obj.fromDate;\n        //let realToDate = obj.toDate\n\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          //realFromDate, realToDate, \n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nprojectmastercode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n        let selectedRecord = { ...this.props.Login.selectedRecord\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData,\n            selectedRecord\n          };\n\n          if (inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || inputData.isneedsection === transactionStatus.YES) {\n            this.props.getSectionForSectionWise(inputParam);\n          } else {\n            this.props.getReleasedSample(inputParam);\n          }\n        }\n      }\n\n      if (fieldName === 'nsectioncode') {\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n        let realFromDate = obj.fromDate;\n        let realToDate = obj.toDate;\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue;\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue;\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue;\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue;\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue;\n        let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue;\n        let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue;\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue;\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue;\n        let masterData = { ...this.props.Login.masterData,\n          realFromDate,\n          realToDate,\n          realSampleTypeValue,\n          realRegTypeValue,\n          realRegSubTypeValue,\n          realFilterStatusValue,\n          realApprovalVersionValue,\n          realUserSectionValue,\n          realTestValue,\n          realDesignTemplateMappingValue,\n          realReportTypeValue\n        };\n        let inputData = {\n          npreregno: \"0\",\n          nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n          nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n          nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n          ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n          nsectioncode: comboData.value,\n          napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n          ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n          nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          userinfo: this.props.Login.userInfo,\n          nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\n          // ModalStatusValue: true,\n          isPopup: true,\n          isAddPopup: true,\n          ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n        };\n\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" && realFilterStatusValue.sfilterstatus !== null) {\n          inputData['dfrom'] = obj.fromDate;\n          inputData['dto'] = obj.toDate;\n          let inputParam = {\n            masterData,\n            inputData\n          };\n          this.props.getReleasedSample(inputParam);\n        }\n      }\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let closeModal = true;\n      let modalShow = this.props.Login.modalShow;\n      let ReportmodalShow = this.props.Login.ReportmodalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedComment = this.props.Login.masterData.selectedComment;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        ReportmodalShow = false;\n        selectedRecord = {};\n        selectedComment = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          closeModal,\n          selectedComment,\n          ReportmodalShow\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.downloadHistory = downloadReportId => {\n      if (this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus !== transactionStatus.DRAFT) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        const inputParam = {\n          inputData: {\n            // change: this.props.Login.change,\n            // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n            //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n            //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n            //ncoareporthistorycode:filedata.inputData.ncoareporthistorycode,\n            //ntransactionstatus: String(transactionStatus.RELEASED),\n            //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n            // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            action: \"Download\",\n            doAction: \"preview\",\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n            //openModal:true,\n            userInfo: this.props.Login.userInfo,\n            ncontrolCode: downloadReportId\n          },\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_DOWNLOAD\"\n          })\n        };\n        this.props.downloadHistory(inputParam, this.props.Login.masterData, inputParam.screenName);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTRELEASEDRECORD\"\n        }));\n      }\n    };\n\n    this.previewReport = previewId => {\n      if (this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus == transactionStatus.DRAFT) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        const inputParam = {\n          inputData: {\n            nflag: 2,\n            change: this.props.Login.change,\n            ncontrolcode: previewId,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n            npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n            ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n            ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n            url: this.props.Login.settings[24],\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            userinfo: this.props.Login.userInfo,\n            nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            nreporttypecode: REPORTTYPE.COAPREVIEW,\n            sprimarykeyname: \"npreregno\",\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            userinfo: this.props.Login.userInfo,\n            action: 'DOWNLOADFILE',\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n            doAction: \"download\",\n            nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n            reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1\n          },\n          userinfo: this.props.Login.userInfo,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_PREVIEWREPORT\"\n          })\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: true,\n              modalShow: false,\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              screenName: inputParam.screenName,\n              ncontrolcode: previewId,\n              operation: \"download\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_FINALREPORTGEN\"\n        }));\n      }\n    };\n\n    this.preliminaryReport = preliminaryId => {\n      if (this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus == transactionStatus.DRAFT) {\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n        const inputParam = {\n          inputData: {\n            nflag: 2,\n            change: this.props.Login.change,\n            ncontrolcode: preliminaryId,\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n            npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n            ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n            ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n            url: this.props.Login.settings[24],\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n            ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n            nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n            nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n            userinfo: this.props.Login.userInfo,\n            nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n            ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n            nreporttypecode: REPORTTYPE.COAPRELIMINARY,\n            sprimarykeyname: \"npreregno\",\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n            nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n            nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n            dfrom: obj.fromDate,\n            dto: obj.toDate,\n            userinfo: this.props.Login.userInfo,\n            action: 'preliminary',\n            ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n            doAction: \"preliminary\",\n            nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n            reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1\n          },\n          userinfo: this.props.Login.userInfo,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_PRELIMINARYREPORT\"\n          })\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, preliminaryId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              openModal: true,\n              modalShow: false,\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              screenName: inputParam.screenName,\n              ncontrolcode: preliminaryId,\n              operation: \"preliminary\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.preliminaryReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_FINALREPORTGEN\"\n        }));\n      }\n    };\n\n    this.CorrectionComments = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          loadEsign: false,\n          screenData: {\n            masterData: this.props.Login.masterData\n          },\n          operation: this.props.Login.operation,\n          openModal: true,\n          screenName: this.props.intl.formatMessage({\n            id: \"IDS_CORRECTIONCOMMENTS\"\n          })\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.downloadReleasedFile = () => {\n      const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          ncontrolcode: downloadId,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          // ntransactionsamplecode: ntransactionsamplecode,\n          //ntransactiontestcode: ntransactiontestcode,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          // ntransactionstatus: String(transactionStatus.RELEASED),\n          ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n          noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          listStatus: this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          // nsectioncode: -1,\n          sreportcomments: this.state.selectedRecord && this.state.selectedRecord.sreportcomments ? this.state.selectedRecord.sreportcomments : \"\",\n          nversionno: this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno ? this.props.Login.masterData.nversionno : 0,\n          action: \"Generatefile\",\n          doAction: \"generate\",\n          nflag: 2,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n          nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode,\n          reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1,\n          isSMTLFlow: parseInt(this.props.Login.settings[29]),\n          ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\n          confirmMessage: this.confirmMessage\n        },\n        userinfo: this.props.Login.userInfo,\n        methodUrl: \"ReleaseAfterCorrection\",\n        classUrl: \"release\",\n        operation: \"update\",\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_GENERATEFILE\"\n        })\n      };\n      const masterData = this.props.Login.masterData; // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\n      //              && this.state.selectedRecord && this.state.selectedRecord.sreportcomments===\"\" || this.state.selectedRecord.sreportcomments===undefined) {\n      //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERDESCRIPTION\" }));  \n      // }\n      //     else{\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, downloadId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncontrolcode: downloadId,\n            openModal: true,\n            modalShow: false,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            operation: this.props.Login.operation,\n            screenName: inputParam.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, inputParam.screenName);\n      } // }\n\n    };\n\n    this.reportcomments = () => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          // ntransactionsamplecode: ntransactionsamplecode,\n          //ntransactiontestcode: ntransactiontestcode,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          // ntransactionstatus: String(transactionStatus.RELEASED),\n          ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          // nsectioncode: -1,\n          nflag: 2,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo\n      };\n      this.props.getreportcomments(inputParam.inputData, this.props.Login.masterData);\n    };\n\n    this.regenerateReleasedFile = regenerateId => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          sreportno: this.props.Login.masterData.selectedReleaseHistory.sreportno,\n          ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\n          ntransactionstatus: String(transactionStatus.RELEASED),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          nflag: 2,\n          userinfo: this.props.Login.userInfo,\n          sreportcomments: \"\",\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          action: \"Regenerate\",\n          doAction: \"download\",\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n          ncontrolcode: regenerateId,\n          nprojectcode: this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode || -1,\n          reportSectionCode: this.props.Login.masterData.reportSectionCode ? this.props.Login.masterData.reportSectionCode : -1\n        },\n        userinfo: this.props.Login.userInfo,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_REGENERATEFILE\"\n        })\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, regenerateId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncontrolcode: regenerateId,\n            openModal: true,\n            modalShow: false,\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            screenName: inputParam.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName);\n      }\n    };\n\n    this.CorrectionStatus = correctionId => {\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo); // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \n\n      const inputParam = {\n        inputData: {\n          change: this.props.Login.change,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          url: this.props.Login.settings[24],\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          // ntransactionsamplecode: ntransactionsamplecode,\n          //ntransactiontestcode: ntransactiontestcode,\n          ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\n          // nTransStatus: ntransCode,\n          // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \n          //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\n          //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n          // ntransactionstatus: String(transactionStatus.RELEASED),\n          ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n          nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n          nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n          nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n          nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\n          napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n          nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n          nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n          dfrom: obj.fromDate,\n          dto: obj.toDate,\n          userinfo: this.props.Login.userInfo,\n          // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\n          // ncontrolCode,\n          nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n          isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n          nreporttypecode: REPORTTYPE.COAREPORT,\n          sprimarykeyname: \"npreregno\",\n          doAction: \"correction\",\n          nflag: 2,\n          ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1\n        },\n        userinfo: this.props.Login.userInfo,\n        methodUrl: \"CorrectionStatus\",\n        classUrl: \"release\",\n        operation: \"update\",\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_CORRECTION\"\n        })\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncontrolcode: correctionId,\n            openModal: true,\n            modalShow: false,\n            loadEsign: true,\n            operation: \"update\",\n            screenData: {\n              inputParam,\n              masterData\n            },\n            screenName: inputParam.screenName\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName);\n      }\n    };\n\n    this.onSaveModalResultClick = (saveType, data) => {\n      let ReleaseParameter = this.state.parameterResults || this.props.Login.parameterResults && this.props.Login.parameterResults[0];\n      let selectedRecord = this.state.selectedRecord || {};\n      let selectedId = this.props.Login.selectedId || null;\n      let additionalInfo = this.state.selectedRecord.additionalInfo || [];\n      const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\n      const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\n      const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      const classUrl = \"release\";\n      const formData = new FormData();\n      let neditable = 0;\n      let releaseParameters = [];\n      let inputParam = {};\n      let inputData = [];\n      let i = 0;\n\n      if (ReleaseParameter.length > 0 && ReleaseParameter !== undefined && ReleaseParameter[0].sresult !== \"\") {\n        ReleaseParameter.map((resultData, index) => {\n          let results = {};\n\n          if (resultData.editable === true) {\n            neditable = 1;\n\n            switch (resultData.nparametertypecode) {\n              case 1:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: resultData[\"ncalculatedresult\"],\n                  sresult: resultData.sresult,\n                  sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\"\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\n                results[\"sresult\"] = resultData.sresult;\n                results[\"sfinal\"] = resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\n                results[\"ngradecode\"] = resultData.sresult !== \"\" ? numericGrade(resultData, results[\"sfinal\"]) : -1;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                break;\n\n              case 2:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: 4,\n                  sresult: Lims_JSON_stringify(resultData.sresult, false),\n                  sfinal: Lims_JSON_stringify(resultData.sfinal, false),\n                  sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\n                  salertmessage: resultData.salertmessage,\n                  additionalInfo: resultData['additionalInfo'],\n                  additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\n                  ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"sresult\"] = resultData.sresult;\n                results[\"ncalculatedresult\"] = 4;\n                results[\"sfinal\"] = resultData.sresult;\n                results[\"ngradecode\"] = resultData.ngradecode;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                break;\n\n              case 3:\n                results[\"jsondata\"] = {\n                  ncalculatedresult: 4,\n                  sresult: Lims_JSON_stringify(resultData.sresult, false),\n                  sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                };\n                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                results[\"sresult\"] = resultData.sresult;\n                results[\"ncalculatedresult\"] = 4;\n                results[\"sfinal\"] = resultData.sresult;\n                results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\n                results['nenteredby'] = this.props.Login.userInfo.nusercode;\n                results['ntransactionresultcode'] = resultData.ntransactionresultcode;\n                results['ntransactiontestcode'] = resultData.ntransactiontestcode;\n                results['nparametertypecode'] = resultData.nparametertypecode;\n                break;\n\n              case 4:\n                if (resultData.sfinal.length > 0) {\n                  const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                  const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                  const uniquefilename = create_UUID() + '.' + fileExtension;\n                  results[\"jsondata\"] = {\n                    ssystemfilename: uniquefilename,\n                    nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\n                    ncalculatedresult: 4,\n                    sresult: Lims_JSON_stringify(resultData.sresult, false),\n                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sresult\"] = resultData.sresult;\n                  results[\"sfinal\"] = resultData.sresult;\n                  results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\n                  results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                  results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                  results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                  results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results[\"ssystemfilename\"] = uniquefilename;\n                  results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\n                  formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\n                  formData.append(\"uniquefilename\" + index, uniquefilename);\n                  formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\n                  i++;\n                } else {\n                  const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\n                  const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\n                  const uniquefilename = \"\";\n                  results[\"jsondata\"] = {\n                    ssystemfilename: uniquefilename,\n                    nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\n                    ncalculatedresult: 4,\n                    sresult: \"\",\n                    sfinal: \"\"\n                  };\n                  results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\n                  results[\"ncalculatedresult\"] = 4;\n                  results[\"sresult\"] = \"\";\n                  results[\"sfinal\"] = \"\";\n                  results[\"ngradecode\"] = -1;\n                  results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\n                  results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\n                  results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\n                  results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\n                  results['nparametertypecode'] = resultData.nparametertypecode;\n                  results[\"ssystemfilename\"] = \"\";\n                  results[\"nfilesize\"] = \"\";\n                  formData.append(\"uploadedFile\" + index, \"\");\n                  formData.append(\"uniquefilename\" + index, \"\");\n                  formData.append(\"ntransactiontestcode\", \"\");\n                }\n\n                break;\n\n              default:\n                break;\n            }\n\n            if (Object.values(results).length > 0) {\n              releaseParameters.push(results);\n            }\n          }\n\n          return null;\n        });\n\n        if (neditable === 0) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loading: false,\n              openModal: false,\n              parameterResults: [],\n              selectedRecord: {}\n            }\n          };\n          return this.props.updateStore(updateInfo);\n        }\n\n        formData.append(\"filecount\", i);\n        formData.append(\"nregtypecode\", nregtypecode);\n        formData.append(\"nregsubtypecode\", nregsubtypecode);\n        formData.append(\"ncoaparentcode\", this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode);\n        formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\n        formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\n        formData.append(\"resultData\", JSON.stringify(releaseParameters));\n        inputParam = {\n          classUrl: classUrl,\n          methodUrl: \"ReleaseParameter\",\n          inputData: {\n            userinfo: this.props.Login.userInfo,\n            doAction: \"editresult\"\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: \"update\",\n          displayName: this.props.Login.inputParam.displayName,\n          saveType //, postParam\n\n        };\n        const masterData = this.props.Login.masterData;\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              modalShow: false,\n              openModal: true,\n              ncontrolcode: editResultId,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\n        }\n      } // else {\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: { loading: false, openModal: false }\n      //     }\n      //     return this.props.updateStore(updateInfo);\n      // }\n      else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_ENTERRESULT\"\n        }));\n      }\n    };\n\n    this.onSaveModalClick = () => {\n      //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\n      if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\n        this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData);\n      } else {\n        let ntransactionsamplecode = \"\";\n        let ntransactiontestcode = \"\";\n        let npreregno = \"\";\n\n        if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n          if (this.state.npreregno && this.state.npreregno.length > 0) {\n            let sample = this.state.npreregno.filter((c, index) => {\n              return this.state.npreregno.indexOf(c) === index;\n            });\n            let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n              return this.state.ntransactionsamplecode.indexOf(c) === index;\n            });\n            let test = this.state.ntransactiontestcode.filter((c, index) => {\n              return this.state.ntransactiontestcode.indexOf(c) === index;\n            });\n            npreregno = sample.map(x => x).join(\",\");\n            ntransactionsamplecode = subsample.map(x => x).join(\",\");\n            ntransactiontestcode = test.map(x => x).join(\",\");\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n            const inputParam = {\n              inputData: {\n                change: this.props.Login.change,\n                npreregno: String(npreregno),\n                ntransactionsamplecode: ntransactionsamplecode,\n                ntransactiontestcode: ntransactiontestcode,\n                // ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\n                //     && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\n                ncoaparentcode: this.props.Login.masterData && this.props.Login.masterData.selectedReleaseHistory ? this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\n                url: this.props.Login.settings[24],\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n                nneedsubsample: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n                nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n                dfrom: obj.fromDate,\n                dto: obj.toDate,\n                //  isPopup:true,\n                isAddPopup: false,\n                isEditPopup: false,\n                nflag: 2,\n                userinfo: this.props.Login.userInfo,\n                ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n                doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\n                isSMTLFlow: parseInt(this.props.Login.settings[29])\n              },\n              userinfo: this.props.Login.userInfo,\n              methodUrl: \"Release\",\n              classUrl: \"release\",\n              operation: this.props.Login.operation\n            };\n            const masterData = this.props.Login.masterData;\n\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n              const updateInfo = {\n                typeName: DEFAULT_RETURN,\n                data: {\n                  loadEsign: true,\n                  screenData: {\n                    inputParam,\n                    masterData\n                  },\n                  operation: this.props.Login.operation,\n                  screenName: this.props.Login.screenName,\n                  ncontrolcode: this.props.Login.ncontrolCode\n                }\n              };\n              this.props.updateStore(updateInfo);\n            } else {\n              if (this.props.Login.isDeletePopup) {\n                this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData);\n              } else if (this.props.Login.isEditPopup) {\n                this.props.UpdateApprovedSample(inputParam.inputData, this.props.Login.masterData);\n              } else {\n                this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData);\n              }\n            }\n          } else {\n            toast.info(this.props.intl.formatMessage({\n              id: \"IDS_SELECTANYONESAMPLE\"\n            }));\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTANYONESAMPLE\"\n          }));\n        }\n      }\n    };\n\n    this.sendToPortal = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo\n        },\n        url: this.props.Login.settings[24],\n        isPortal: true,\n        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n        allPreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n        nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n        userinfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData\n      };\n      this.props.getReportForPortal(inputParam);\n    };\n\n    this.reportHistory = () => {\n      if (this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus !== transactionStatus.DRAFT) {\n        let inputParam = {\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          spreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n          stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n          stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n          userInfo: this.props.Login.userInfo,\n          masterData: this.props.Login.masterData\n        };\n        this.props.versionHistory(inputParam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTRELEASEDRECORD\"\n        }));\n      }\n    };\n\n    this.releaseReportHistory = () => {\n      //if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\n      let inputParam = {\n        ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n        spreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\n        stransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\n        stransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\n        userInfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RELEASEREPORTHISTORY\"\n        })\n      };\n      this.props.releaseReportHistory(inputParam); //    }else{\n      //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\n      //    }\n    };\n\n    this.patientInfo = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          isPatientDetails: true,\n          openModal: true,\n          hideSave: true,\n          isAddPopup: false,\n          isEditPopup: false,\n          isDeletePopup: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.reportHistoryInfo = () => {\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.viewReportHistory(inputParam);\n    };\n\n    this.releaseTestAttachmentData = actionName => {\n      const inputParam = {\n        inputData: {\n          userinfo: this.props.Login.userInfo,\n          ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\n          actionName: actionName\n        },\n        masterData: this.props.Login.masterData\n      };\n      this.props.viewReleaseTestAttachment(inputParam);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      delete this.props.Login.masterData[\"searchedData\"];\n      this.props.Login.change = false;\n      let {\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      } = this.props.Login.masterData;\n      let masterData = { ...this.props.Login.masterData,\n        realFromDate,\n        realToDate,\n        realSampleTypeValue,\n        realRegTypeValue,\n        realRegSubTypeValue,\n        realFilterStatusValue,\n        realApprovalVersionValue,\n        // realUserSectionValue, realTestValue,\n        realReportTypeValue\n      };\n      let inputData = {\n        npreregno: \"0\",\n        nneedsubsample: realRegSubTypeValue && realRegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow || false,\n        nsampletypecode: realSampleTypeValue && realSampleTypeValue.nsampletypecode || -1,\n        nregtypecode: realRegTypeValue && realRegTypeValue.nregtypecode || -1,\n        nregsubtypecode: realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode || -1,\n        ncoareporttypecode: realReportTypeValue && realReportTypeValue.ncoareporttypecode || -1,\n        isneedsection: parseInt(realReportTypeValue && realReportTypeValue.isneedsection) || transactionStatus.NO,\n        ntransactionstatus: realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined || realFilterStatusValue.ntransactionstatus !== '0' ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\n        napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\n        // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\n        userinfo: this.props.Login.userInfo,\n        ndesigntemplatemappingcode: this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1\n      };\n\n      if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1 && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\" // && realFilterStatusValue.sfilterstatus !== null\n      && inputData.ncoareporttypecode !== -1) {\n        let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo);\n        inputData['dfrom'] = obj.fromDate;\n        inputData['dto'] = obj.toDate;\n        let inputParam = {\n          masterData,\n          inputData\n        };\n        this.props.getReleasedSample(inputParam);\n      } else {\n        toast.info(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLVALUESINFILTER\"\n        }));\n      }\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let isPatientDetails = this.props.Login.isPatientDetails;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let hideSave = this.props.Login.hideSave;\n      let isAddPopup = this.props.Login.isAddPopup;\n      let isEditPopup = this.props.Login.isEditPopup;\n      let isDeletePopup = this.props.Login.isDeletePopup;\n      let isCorrectionNeed = this.props.Login.isCorrectionNeed;\n      let ncontrolcode = this.props.Login.ncontrolcode;\n      let modalShow = this.props.Login.modalShow;\n      let screenName = this.props.Login.screenName;\n      let isPatientReports = this.props.Login.isPatientReports;\n      let openModalTitle = this.props.Login.openModalTitle;\n      let isReleaseTestAttachment = this.props.Login.isReleaseTestAttachment;\n      let isReleaseTestComment = this.props.Login.isReleaseTestComment;\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      let projectMasterList = [];\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false; // openModal = false;\n\n          isPatientDetails = false;\n          hideSave = false;\n          isAddPopup = false;\n          isEditPopup = false;\n          isDeletePopup = false;\n          isCorrectionNeed = false;\n          isPatientReports = false;\n          isReleaseTestAttachment = false;\n          isReleaseTestComment = false;\n          screenName = undefined;\n          selectedRecord = {};\n        } else {\n          if (ncontrolcode && ncontrolcode === editResultId) {\n            modalShow = true;\n          }\n\n          if (this.props.Login.screenName !== undefined && this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_CORRECTION\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_CORRECTIONCOMMENTS\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_REGENERATEFILE\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_GENERATEFILE\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_PREVIEWREPORT\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_PRELIMINARYREPORT\"\n          }) || this.props.Login.screenName === this.props.intl.formatMessage({\n            id: \"IDS_RELEASEREPORTHISTORY\"\n          })) {\n            openModal = false;\n            screenName = undefined;\n          }\n\n          loadEsign = false;\n          selectedRecord[\"agree\"] = 4;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        isPatientDetails = false;\n        hideSave = false;\n        isAddPopup = false;\n        isEditPopup = false;\n        isDeletePopup = false;\n        isCorrectionNeed = false;\n        isPatientReports = false;\n        isReleaseTestAttachment = false;\n        isReleaseTestComment = false;\n        screenName = undefined;\n        selectedRecord = {};\n        openModalTitle = undefined;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          modalShow,\n          loadEsign,\n          screenName,\n          selectedRecord,\n          selectedId: null,\n          isPatientDetails,\n          hideSave,\n          isAddPopup,\n          isEditPopup,\n          isDeletePopup,\n          isCorrectionNeed,\n          isPatientReports,\n          openModalTitle,\n          isReleaseTestAttachment,\n          isReleaseTestComment,\n          projectMasterList\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeModalShow = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let modalShow = this.props.Login.modalShow;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let ReportmodalShow = this.props.Login.ReportmodalShow; // const editResultId =this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n\n      if (this.props.Login.loadEsign) {\n        loadEsign = false;\n      } else {\n        modalShow = false;\n        ReportmodalShow = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          modalShow,\n          selectedRecord,\n          selectedId: null,\n          loadEsign,\n          ReportmodalShow\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeDocModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = event => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[event.target.name] = event.target.value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onChangeAwesomeQueryBuilder = (immutableTree, config) => {\n      //let selectedRecord = this.state.selectedRecord || {};\n      const filterquery = QbUtils.sqlFormat(immutableTree, config);\n      const filterQueryTreeStr = QbUtils.getTree(immutableTree);\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          awesomeTree: immutableTree,\n          awesomeConfig: config,\n          filterquery,\n          filterQueryTreeStr\n        }\n      };\n      this.props.updateStore(updateInfo); // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\n    };\n\n    this.handleExecuteClick = event => {\n      //const selectedRecord = this.state.selectedRecord\n      const filterquery = this.props.Login.filterquery;\n\n      if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\n        const inputparam = {\n          component: this.props.Login.seletedFilterComponent,\n          userinfo: this.props.Login.userInfo,\n          filterquery: filterquery // selectedRecord:this.state.selectedRecord\n\n        };\n        this.props.getPatientFilterExecuteData(inputparam);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTALLINFILTER\"\n        }));\n      }\n    };\n\n    this.handleKendoRowClick = event => {\n      let patientinfo = event.dataItem;\n      const component = this.props.Login.seletedFilterComponent;\n      let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n      const inputparam = {\n        realFromDate: obj.fromDate,\n        realToDate: obj.toDate,\n        realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n        realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n        realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n        realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n        realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n        realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n        masterData: { ...this.props.Login.masterData\n        },\n        realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n        Login: this.props.Login,\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        }),\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        userinfo: this.props.Login.userInfo,\n        patientinfo: event.dataItem,\n        spatientid: event.dataItem.spatientid // selectedRecord:this.state.selectedRecord\n\n      }; // if (component[\"childFields\"]) {\n      //     const index = this.props.Login.masterIndex;\n      //     let selectedRecord = this.state.selectedMaster || {};\n      //     component[\"childFields\"].map(item => {\n      //         let data = item1[item.columnname];\n      //         if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\n      //             //combocontrol\n      //             data = { label: item1[item.sdisplaymember], value: item1[item.svaluemember] };\n      //         }\n      //         else if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\n      //             //Date picker control\n      //             data = rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, data);\n      //         }\n      //         selectedRecord[index][item.columnname] = data;\n      //     })\n      //     const updateInfo = {\n      //         typeName: DEFAULT_RETURN,\n      //         data: { selectedMaster: selectedRecord, loadCustomSearchFilter: false, }\n      //     }\n      //     this.props.updateStore(updateInfo);\n      // }\n      // else {\n      //     const newdata = {\n      //         label: item1[component['displaymember']],\n      //         value: item1[component['valuemember']], item: { jsondata: { ...item1, jsondata: { ...item1 } } }\n      //     };\n      //     this.onComboChange(newdata, component, component['label']);\n      // }\n\n      this.props.getPatientWiseSample(inputparam);\n    };\n\n    this.onInputChange = event => {\n      let selectedComment = this.props.Login.masterData.selectedComment || {};\n      selectedComment[event.target.name] = event.target.value;\n      const coaFileInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          selectedComment\n        }\n      };\n      this.props.updateStore(coaFileInfo);\n    };\n\n    this.validateEsign = () => {\n      let ncontrolcode = this.props.Login.ncontrolcode;\n      const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n      let modalName = \"\";\n\n      if (ncontrolcode && ncontrolcode === editResultId) {\n        modalName = \"modalShow\";\n      } else {\n        modalName = \"openModal\";\n      }\n\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignforRelease(inputParam, modalName);\n    };\n\n    this.selectionChange = (event, nflag, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (nflag === undefined) {\n        this.state.dataResult.data.map(item => {\n          if (item.npreregno === event.dataItem.npreregno) {\n            item.selected = checked;\n          }\n        });\n        let preregno = event.dataItem.npreregno;\n        let ncoahistorycode = event.dataItem.ncoahistorycode;\n        let ssystemfilename = event.dataItem.ssystemfilename;\n        const coaFileInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            ncoahistorycode,\n            ssystemfilename\n          }\n        };\n        this.props.updateStore(coaFileInfo);\n        this.childHeaderSelectionChange(event, preregno, checkedflag);\n      } else {\n        let data = [];\n        event.dataItems.map(item => {\n          data.push({\n            \"npreregno\": item.npreregno\n          });\n        });\n        this.childHeaderSelectionChange(event, data, checkedflag);\n      }\n    };\n\n    this.childHeaderSelectionChange = (event, preregno, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let subsamplecode = [];\n      let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno;\n\n      if (npreregno.length === 0 || npreregno.length === undefined) {\n        this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\n          item.selected = checked;\n\n          if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n            subsamplecode.push({\n              \"ntransactionsamplecode\": item.ntransactionsamplecode\n            });\n          }\n        });\n        this.props.Login.masterData.ReleaseSample.map(data => {\n          if (data.npreregno === npreregno) {\n            data.selected = checked;\n          }\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      } else {\n        npreregno.map(value => {\n          this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\n            item.selected = checked;\n\n            if (!subsamplecode.includes(item.ntransactionsamplecode)) {\n              subsamplecode.push({\n                \"ntransactionsamplecode\": item.ntransactionsamplecode\n              });\n            }\n          });\n        });\n        this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag);\n      }\n    };\n\n    this.subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\n      const checked = event.syntheticEvent.target.checked;\n      let transactionsamplecode = subsamplecode;\n\n      if (subsamplecode !== undefined) {\n        //  transactionsamplecode = subsamplecode\n        transactionsamplecode.map(value => {\n          this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n            item.selected = checked;\n            this.collectData(item, checkedflag);\n            return item;\n          });\n        });\n      } else {\n        event.dataItems.map(value => this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\n          item.selected = checked;\n          this.collectData(item, checkedflag);\n          return item;\n        }));\n        this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\n          if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItems[0].npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      }\n    };\n\n    this.headerSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n\n      if (event.dataItems.length !== 0) {\n        this.state.dataResult.data.map(item => {\n          item.selected = checked;\n          return item;\n        });\n        this.selectionChange(event, 1, checked);\n      } else {\n        this.setState({\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      }\n    };\n\n    this.childSelectionChange = event => {\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          item.selected = checked;\n        }\n      });\n      let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n        return item.slected === true;\n      });\n\n      if (data === true) {\n        this.props.Login.masterData.ReleaseSample.map(item => {\n          if (event.dataItem.npreregno === item.npreregno) {\n            item.selected = checked;\n          }\n        });\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n          if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\n            item.selected = checked;\n            this.collectData(item);\n          }\n        });\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\n          return item.selected === true;\n        });\n\n        if (data === true) {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = checked;\n            }\n          });\n        } else {\n          this.props.Login.masterData.ReleaseSample.map(item => {\n            if (event.dataItem.npreregno === item.npreregno) {\n              item.selected = false;\n            }\n          });\n        }\n      }\n    };\n\n    this.subChildSelectionChange = event => {\n      let x = [];\n      const checked = event.syntheticEvent.target.checked;\n      this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\n        if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\n          item.selected = checked;\n          this.collectData(item);\n        }\n      });\n      this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\n        if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n          if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\n            x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode];\n          }\n        }\n      });\n      let y = x.filter(t => t.selected === true);\n\n      if (x.length === y.length) {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true;\n          }\n        });\n      } else {\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\n          if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false;\n          }\n        });\n      }\n\n      this.state.dataResult.data.map(item => {\n        if (item.npreregno === event.dataItem.npreregno) {\n          if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\n            x = this.props.Login.masterData.ReleaseSubSample[item.npreregno];\n          }\n        }\n      });\n      let y1 = x.filter(t => t.selected === true);\n\n      if (x.length === y1.length) {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === y1[0].npreregno) {\n            this.state.dataResult.data[i].selected = true;\n          }\n        });\n      } else {\n        this.state.dataResult.data.map((t, i) => {\n          if (t.npreregno === event.dataItem.npreregno) {\n            this.state.dataResult.data[i].selected = false;\n          }\n        });\n      }\n    };\n\n    this.collectData = (item, checkedflag) => {\n      let npreregno = this.state.npreregno || [];\n      let ntransactionsamplecode = this.state.ntransactionsamplecode || [];\n      let ntransactiontestcode = this.state.ntransactiontestcode || [];\n\n      if (item.selected === true) {\n        if (!npreregno.includes(item.npreregno)) {\n          npreregno.push(item.npreregno);\n        }\n\n        if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\n          ntransactionsamplecode.push(item.ntransactionsamplecode);\n        } // Don't Remove\n\n\n        if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\n          ntransactiontestcode.push(item.ntransactiontestcode);\n        }\n      } else {\n        const preregno = npreregno.filter(data => data !== item.npreregno);\n        npreregno = preregno;\n        const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode);\n        ntransactionsamplecode = transactionsamplecode; // Don't Remove\n\n        const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode);\n        ntransactiontestcode = transactiontestcode;\n      }\n\n      this.setState({\n        npreregno: checkedflag === false ? [] : npreregno,\n        ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode,\n        ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\n      });\n    };\n\n    this.viewSelectedReport = filedata => {\n      delete filedata.inputData.userinfo;\n      const inputParam = {\n        inputData: {\n          releasedcoareport: filedata.inputData,\n          userinfo: this.props.Login.userInfo,\n          ncontrolCode: filedata.ncontrolCode\n        },\n        classUrl: \"release\",\n        operation: \"view\",\n        methodUrl: \"ReleasedCOAReport\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    const dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const outsourceFileDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const reportInfoDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const correctionDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const versionHistoryDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    const preliminaryHistoryDataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      outsourceFileDataState: outsourceFileDataState,\n      reportInfoDataState: reportInfoDataState,\n      correctionDataState: correctionDataState,\n      versionHistoryDataState: versionHistoryDataState,\n      preliminaryHistoryDataState: preliminaryHistoryDataState,\n      childDataResult: [],\n      dataState: dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      SampletypeList: [],\n      ProjecttypeList: [],\n      ProjectMasterList: [],\n      SectionList: [],\n      ReporttypeList: [],\n      RegistrationTypeList: [],\n      RegistrationSubTypeList: [],\n      FilterStatusList: [],\n      sampleSearchField: [],\n      subsampleSearchField: [],\n      testSearchField: [],\n      searchedData: [],\n      count: 0,\n      SampleGridItem: [],\n      combinedSearchField: [],\n      npreregno: [],\n      ntransactiontestcode: [],\n      ntransactionsamplecode: [],\n      stateDynamicDesign: [],\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  gridfillingColumn(data) {\n    const temparray = data && data.map(option => {\n      return {\n        \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode],\n        \"dataField\": option[designProperties.VALUE],\n        \"width\": \"200px\",\n        \"columnSize\": \"3\"\n      };\n    });\n    return temparray;\n  }\n\n  render() {\n    const editReportParam = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"nreportinforeleasecode\",\n      operation: \"update\",\n      //selectedId:,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: -1,\n      masterData: this.props.Login.masterData,\n      selectedId: this.props.Login.selectedId\n    };\n    this.feildsForGrid = [// { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },  \n    {\n      \"idsName\": \"IDS_SCREEN\",\n      \"dataField\": \"testname\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_FIELDNAME\",\n      \"dataField\": \"sreportfieldname\",\n      \"width\": \"100px\"\n    }, {\n      \"idsName\": \"IDS_VALUE\",\n      \"dataField\": \"sreportfieldvalue\",\n      \"width\": \"100px\"\n    }];\n    this.fieldsForReleasedReportGrid = [{\n      \"idsName\": \"IDS_RELEASENO\",\n      \"dataField\": \"sreleaseno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_VERSIONNO\",\n      \"dataField\": \"nversionno\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_ORDERID\",\n      \"dataField\": \"sexternalorderid\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDSITE\",\n      \"dataField\": \"ssitename\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDDATE\",\n      \"dataField\": \"sreleasedate\",\n      \"width\": \"200px\"\n    }, {\n      \"idsName\": \"IDS_REPORTEDUSER\",\n      \"dataField\": \"susername\",\n      \"width\": \"200px\"\n    }];\n    const mandatoryFields = [{\n      \"mandatory\": true,\n      \"idsName\": \"IDS_DESCRIPTION\",\n      \"dataField\": \"sreportcomments\",\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    } //  { \"mandatory\": true, \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\n    // { \"mandatory\": true, \"idsName\": \"IDS_INTERFACETYPE\", \"dataField\": \"ninterfacetypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\n    ];\n    const resultCorrectionColumnList = [{\n      \"idsName\": \"IDS_ARNO\",\n      \"dataField\": \"sarno\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_SAMPLEARNO\",\n      \"dataField\": \"ssamplearno\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_TESTNAME\",\n      \"dataField\": \"stestsynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_PARAMETERNAME\",\n      \"dataField\": \"sparametersynonym\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_RESULT\",\n      \"dataField\": \"sfinal\",\n      \"width\": \"150px\"\n    }, {\n      \"idsName\": \"IDS_RESULTFLAG\",\n      \"dataField\": \"sgradename\",\n      \"width\": \"150px\",\n      \"fieldType\": \"gradeColumn\"\n    }];\n    let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\n    let filePath = \"\";\n\n    if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\n      filePath = reportUrl();\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    }\n\n    let userStatusCSS = \"\";\n    let activeIconCSS = \"fa fa-check\";\n\n    if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\n      userStatusCSS = \"outline-secondary\";\n      activeIconCSS = \"\";\n    } else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\n      userStatusCSS = \"outline-success\";\n    } else {\n      userStatusCSS = \"outline-Final\";\n    }\n\n    const filterParam = {\n      inputListName: \"ReleaseHistory\",\n      selectedObject: \"selectedReleaseHistory\",\n      primaryKeyField: \"ncoaparentcode\",\n      fetchUrl: \"release/getReleaseHistory\",\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      fecthInputObject: {\n        isSearch: true,\n        userinfo: this.props.Login.userInfo,\n        nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\n        nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        dfrom: obj.fromDate,\n        dto: obj.toDate,\n        masterData: this.props.Login.masterData,\n        searchFieldList: this.searchFieldList,\n        nsampletypecode: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode || -1,\n        nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\n        ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\n        nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\n        ntransactionstatus: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0' ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\n        napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\n        napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\n        //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        nneedsubsample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        nneedtemplatebasedflow: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow || false,\n        ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\n      }\n    };\n    let breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": obj.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": obj.breadCrumbto\n    }, {\n      \"label\": \"IDS_REGTYPE\",\n      \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" : this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\n    }, {\n      \"label\": \"IDS_REGSUBTYPE\",\n      \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" : this.props.Login.masterData.RegSubTypeValue ? this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\n    }, {\n      \"label\": \"IDS_REPORTTYPE\",\n      \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" : this.props.Login.masterData.ReportTypeValue ? this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\n    }];\n    const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get('AddSamples').ncontrolcode;\n    const preliminaryId = this.state.controlMap.has(\"PreliminaryReport\") && this.state.controlMap.get(\"PreliminaryReport\").ncontrolcode;\n    const previewId = this.state.controlMap.has(\"PreviewFinalReport\") && this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\n    const downloadId = this.state.controlMap.has(\"ReleaseReportGeneration\") && this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\n    const regenerateId = this.state.controlMap.has(\"RegenerateRelease\") && this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\n    const viewreportId = this.state.controlMap.has(\"ViewReportRelease\") && this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\n    const sendtoportalId = this.state.controlMap.has(\"SendToPortal\") && this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"AppendSamples\") && this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"RemoveSamples\") && this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\n    const patientinfoId = this.state.controlMap.has(\"PatientInfo\") && this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\n    const ResultCorrectionId = this.state.controlMap.has(\"ResultCorrection\") && this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\n    const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\n    const editcommentsId = this.state.controlMap.has(\"EditComment\") && this.state.controlMap.get(\"EditComment\").ncontrolcode;\n    const correctionId = this.state.controlMap.has(\"Correction\") && this.state.controlMap.get(\"Correction\").ncontrolcode;\n    const releaseHistoryId = this.state.controlMap.has(\"ReleaseHistory\") && this.state.controlMap.get(\"ReleaseHistory\").ncontrolcode;\n    const downloadVersionHist = this.state.controlMap.has(\"DownloadReleaseVersion\") && this.state.controlMap.get(\"DownloadReleaseVersion\").ncontrolcode;\n    const downloadReportId = this.state.controlMap.has(\"DownloadReport\") && this.state.controlMap.get(\"DownloadReport\").ncontrolcode;\n    const reportHistoryId = this.state.controlMap.has(\"ReportHistory\") && this.state.controlMap.get(\"ReportHistory\").ncontrolcode;\n    const releaseTestAttachmentId = this.state.controlMap.has(\"ReleaseTestAttachment\") && this.state.controlMap.get(\"ReleaseTestAttachment\").ncontrolcode;\n    const releaseTestCommentId = this.state.controlMap.has(\"ReleaseTestComment\") && this.state.controlMap.get(\"ReleaseTestComment\").ncontrolcode;\n    const releaseReportHistoryId = this.state.controlMap.has(\"ReleaseReportHistory\") && this.state.controlMap.get(\"ReleaseReportHistory\").ncontrolcode;\n    const editParam = {\n      screenName: this.props.Login.screenName,\n      primaryKeyField: \"ntransactionresultcode\",\n      operation: \"update\",\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editResultId,\n      masterData: this.props.Login.masterData\n    };\n    const ReleaseMasterDataParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\n      //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\n      masterData: { ...this.props.Login.masterData\n      },\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno || \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\n        //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode || -1,\n        'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO // 'ncoahistorycode':COAHistory\n\n      }\n    };\n    const ApprovedModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      Login: this.props.Login,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'isAddPopup': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_ADDSAMPLE\"\n        })\n      }\n    };\n    const RemoveModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\n        ncontrolCode: deleteId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_REMOVESAMPLES\"\n        }),\n        spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\n        patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\n      }\n    };\n    const EditModalParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneededit': true,\n        'isPopup': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\n        ncontrolCode: editId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_EDITSAMPLES\"\n        }),\n        nsectioncode: this.props.Login.nsectioncode,\n        spatientid: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? this.props.Login.masterData.ReleasedSampleDetails.length !== 0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1 : -1,\n        patientwise: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) === reportCOAType.PATIENTWISE ? true : false\n      }\n    };\n    const jsonParam = {\n      screenName: \"IDS_RELEASE\",\n      operation: \"update\",\n      primaryKeyName: \"ncoaparentcode\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      ncontrolcode: editId,\n      selectedReleaseHistory: this.props.Login.masterData.selectedReleaseHistory\n    };\n    const ResultCorrectionParam = {\n      realFromDate: obj.fromDate,\n      realToDate: obj.toDate,\n      realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\n      realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\n      realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\n      realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\n      realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\n      realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\n      masterData: { ...this.props.Login.masterData\n      },\n      realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\n      inputData: {\n        obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\n        selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\n        'dfrom': obj.fromDate,\n        'dto': obj.toDate,\n        'npreregno': \"0\",\n        'nsampletypecode': this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode || -1,\n        'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\n        'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\n        'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\n        \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\n        \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\n        'nneedsubsample': this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample || false,\n        'userinfo': this.props.Login.userInfo,\n        'ndesigntemplatemappingcode': this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode || -1,\n        'nneedremove': true,\n        'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\n        'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\n        'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\n        ncontrolCode: ResultCorrectionId,\n        screenName: this.props.intl.formatMessage({\n          id: \"IDS_RESULTCORRECTION\"\n        })\n      }\n    };\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1092,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1095,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1098,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1099,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setState({\n        sidebarview: !this.state.sidebarview\n      }),\n      className: \"sidebar-view-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1100,\n        columnNumber: 29\n      }\n    }, !this.state.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1102,\n        columnNumber: 37\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1103,\n        columnNumber: 37\n      }\n    })), /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_RELEASE\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory,\n      getMasterDetail: ReleaseSample => this.props.getReleasedDataDetails({ ...ReleaseMasterDataParam,\n        ...ReleaseSample\n      }),\n      selectedMaster: this.props.Login.masterData.selectedReleaseHistory,\n      primaryKeyField: \"ncoaparentcode\",\n      mainField: \"sreportno\",\n      firstField: \"susername\",\n      secondField: \"sgenerateddate\" // secondField=\"stransdisplaystatus\"\n      ,\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: releaseId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: () => this.props.getApprovedSample(ApprovedModalParam, releaseId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      callCloseFunction: true,\n      filterComponent: [{\n        \"Sample Filter\": /*#__PURE__*/React.createElement(ReleaseFilter, {\n          SampleType: this.state.SampletypeList || [],\n          SampleTypeValue: this.props.Login.masterData.SampleTypeValue || [],\n          ReportType: this.state.ReporttypeList || [],\n          ReportTypeValue: this.props.Login.masterData.ReportTypeValue || [],\n          RegType: this.state.RegistrationTypeList || [],\n          RegTypeValue: this.props.Login.masterData.RegTypeValue || [],\n          RegSubType: this.state.RegistrationSubTypeList || [],\n          RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue || [],\n          ApprovalVersion: this.state.ConfigVersionList || [],\n          ApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue || [],\n          DesignTemplateMapping: this.props.Login.masterData.DesignTemplateMapping,\n          DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue || {} //   UserSection={this.state.UserSectionList || []}\n          //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\n          //   Test={this.state.TestList || []}\n          //  TestValue={this.props.Login.masterData.TestValue || []}\n          ,\n          FilterStatus: this.state.FilterStatusList || [],\n          FilterStatusValue: this.props.Login.masterData.FilterStatusValue || [],\n          fromDate: this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date(),\n          toDate: this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date(),\n          onFilterComboChange: this.onFilterComboChange,\n          handleDateChange: this.handleDateChange,\n          userInfo: this.props.Login.userInfo,\n          onDesignTemplateChange: this.onDesignTemplateChange,\n          DynamicDesignMapping: this.state.stateDynamicDesign || [],\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1144,\n            columnNumber: 58\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1106,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '8' : \"10\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1176,\n        columnNumber: 25\n      }\n    }, this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ? /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1178,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1179,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1180,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 45\n      }\n    }, this.props.Login.masterData && this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno !== 0 ? this.props.intl.formatMessage({\n      id: \"IDS_VERSIONNUMBER\"\n    }) + \" : \" + this.props.Login.masterData.nversionno : \"\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1189,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1190,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1191,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1192,\n        columnNumber: 57\n      }\n    }, this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus)), /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1201,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(patientinfoId) === -1,\n      onClick: () => this.patientInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1206,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faInfoCircle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1213,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(previewId) === -1,\n      onClick: () => this.previewReport(previewId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1217,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Preview, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1225,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_PRELIMINARYREPORT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(preliminaryId) === -1,\n      onClick: () => this.preliminaryReport(preliminaryId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1228,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(PreliminaryReport, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1236,\n        columnNumber: 61\n      }\n    })), (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE || this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE) && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADDSAMPLE\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      onClick: () => this.props.getEditApprovedSample(EditModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1246,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faEdit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1253,\n        columnNumber: 65\n      }\n    })), (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE || this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE) && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REMOVESAMPLES\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.props.getRemoveApprovedSample(RemoveModalParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1265,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrash,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1272,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(downloadId) === -1,\n      onClick: () => {\n        this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION ? this.CorrectionComments(downloadId) : this.downloadReleasedFile(downloadId);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1278,\n        columnNumber: 58\n      }\n    }, /*#__PURE__*/React.createElement(Generate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1288,\n        columnNumber: 61\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(correctionId) === -1,\n      onClick: () => this.CorrectionStatus(correctionId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1292,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Correction, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1299,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESULTCORRECTION\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1,\n      onClick: () => this.props.getResultCorrectionData(ResultCorrectionParam),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1308,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ResultCorrection, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1315,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_SENDTOPORTAL\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(sendtoportalId) === -1,\n      onClick: () => this.sendToPortal(sendtoportalId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1332,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faStore,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1339,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTHISTORY\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(reportHistoryId) === -1,\n      onClick: () => this.reportHistoryInfo(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1344,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFilePdf,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1350,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(regenerateId) === -1,\n      onClick: () => this.regenerateReleasedFile(regenerateId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1364,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(ReGenerate, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1370,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASEREPORTHISTORY\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseReportHistoryId) === -1,\n      onClick: () => this.releaseReportHistory(releaseReportHistoryId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1373,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faHistory,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1381,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE ? /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REPORTCORRECTION\"\n      }),\n      \"data-place\": \"left\" //  data-for=\"tooltip-common-wrap\"\n      ,\n      hidden: this.state.userRoleControlRights.indexOf(editcommentsId) === -1,\n      onClick: () => this.reportcomments('IDS_REPORTCORRECTION'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1384,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Comment, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1390,\n        columnNumber: 65\n      }\n    })) : \"\", this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE && this.props.Login.settings && parseInt(this.props.Login.settings[29]) === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseTestAttachmentId) === -1,\n      onClick: () => this.releaseTestAttachmentData(\"IDS_RELEASETESTATTACHMENT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1396,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1402,\n        columnNumber: 65\n      }\n    })), this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE && this.props.Login.settings && parseInt(this.props.Login.settings[29]) === transactionStatus.YES && /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTCOMMENT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(releaseTestCommentId) === -1,\n      onClick: () => this.releaseTestAttachmentData(\"IDS_RELEASETESTCOMMENT\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1409,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(TestAttachment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1416,\n        columnNumber: 65\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DOWNLOADFINALREPORT\"\n      }),\n      \"data-place\": \"left\",\n      hidden: this.state.userRoleControlRights.indexOf(downloadReportId) === -1,\n      onClick: () => this.downloadHistory(downloadReportId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1420,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(DownloadCertificate, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1427,\n        columnNumber: 57\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      className: \"form-static-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1435,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n      needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n      data: this.state.data,\n      dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState),\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      expandNextData: this.expandNextData,\n      checkFunction: this.checkFunction,\n      checkFunction1: this.checkFunction1,\n      expandFunc: this.expandFunc //expandData={this.expandData}\n      ,\n      childDataResult: this.state.childDataResult,\n      subChildDataResult: this.state.subChildDataResult,\n      extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n      subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n      expandField: \"expanded\",\n      reloadData: this.reloadData,\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '525px',\n      gridTop: '10px' //   isActionRequired={true}\n      //   isToolBarRequired={true}\n      //  isExpandRequired={true}\n      //   isDownloadRequired={true}\n      ,\n      isCheckBoxRequired: false,\n      isCollapseRequired: true,\n      selectedId: this.props.Login.selectedId,\n      hasChild: true,\n      hasSubChild: true,\n      childList: this.props.Login.masterData.ReleasedSubSampleDetails,\n      childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n      childMappingField: \"npreregno\",\n      subChildMappingField: \"ntransactionsamplecode\" // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\n      ,\n      subChildList: this.props.Login.masterData.ReleasedTestDetails,\n      selectedsubcild: this.props.Login.selectedsubcild,\n      methodUrl: \"Release\",\n      headerSelectionChange: this.headerSelectionChange,\n      childHeaderSelectionChange: this.childHeaderSelectionChange,\n      childSelectionChange: this.childSelectionChange,\n      subChildSelectionChange: this.subChildSelectionChange,\n      subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n      selectionChange: this.selectionChange,\n      releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1447,\n        columnNumber: 45\n      }\n    })))) : \"\"))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeDocModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1517,\n        columnNumber: 25\n      }\n    }) : \"\", this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.state.openModal,\n      size: this.props.Login.loadEsign && this.props.Login.loadEsign ? \"lg\" : \"xl\",\n      closeModal: this.closeModal,\n      inputParam: this.props.Login.inputParam,\n      mandatoryFields: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? mandatoryFields : \"\",\n      screenName: this.props.Login.isPatientDetails ? this.props.intl.formatMessage({\n        id: \"IDS_PATIENTINFO\"\n      }) : this.props.Login.isPatientReports ? this.props.intl.formatMessage({\n        id: \"IDS_REPORTHISTORY\"\n      }) : this.props.Login.isReleaseTestAttachment ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTATTACHMENT\"\n      }) : this.props.Login.isReleaseTestComment ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASETESTCOMMENT\"\n      }) : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? this.props.intl.formatMessage({\n        id: \"IDS_RELEASEHISTORY\"\n      }) : this.props.Login.screenName,\n      onSaveClick: this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? this.downloadReleasedFile : this.onSaveModalClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {} //noSave={this.props.Login.openModalTitle=='versionhistory' ? true : false}\n      ,\n      hideSave: this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" || this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASEREPORTHISTORY\"\n      }) || this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" ? true : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? true : this.props.Login.isReleaseTestAttachment || this.props.Login.isReleaseTestComment ? true : this.props.Login.hideSave,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1550,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_RELEASEREPORTHISTORY\"\n      }) ? /*#__PURE__*/React.createElement(ReleaseReportHistory, {\n        operation: this.props.Login.operation // designData={this.props.Login.designData || {}}\n        ,\n        inputParam: this.props.Login.inputParam,\n        dataResult: this.props.Login.masterData //    this.props.Login.dataResult || [] :\n        //   this.props.Login.dataResult || {}}\n        //onChangeToggle={this.onChangeToggle}\n        ,\n        settings: this.props.Login.settings,\n        viewDownloadFile: this.viewDownloadFile,\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1556,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_PATIENTSEARCH\" ? /*#__PURE__*/React.createElement(FilterQueryBuilder, {\n        fields: this.props.Login.fields || {},\n        onChange: this.onChangeAwesomeQueryBuilder,\n        tree: this.props.Login.awesomeTree,\n        config: this.props.Login.awesomeConfig,\n        skip: this.props.Login.kendoSkip,\n        take: this.props.Login.kendoTake,\n        handlePageChange: this.handlePageChange,\n        gridColumns: this.props.Login.gridColumns || [],\n        filterData: this.props.Login.lstPatient,\n        onRowClick: this.handleKendoRowClick,\n        handleExecuteClick: this.handleExecuteClick,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1570,\n          columnNumber: 29\n        }\n      }) : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? /*#__PURE__*/React.createElement(VersionHistGrid, {\n        versionHistory: this.props.Login.masterData.versionHistory,\n        isExportExcelRequired: false,\n        dataState: this.state.versionHistoryDataState,\n        dataResult: process(this.props.Login.masterData && this.props.Login.masterData.versionHistory || [], this.state.versionHistoryDataState),\n        dataStateChange: this.versionHistoryDataStateChange,\n        userInfo: this.props.Login.userInfo,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        viewDownloadFile: this.viewDownloadFile,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1585,\n          columnNumber: 29\n        }\n      }) : this.props.Login.isPatientDetails ? /*#__PURE__*/React.createElement(SampleInfoView, {\n        data: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0 ? this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {},\n        SingleItem: this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ? this.state.SingleItem : [],\n        screenName: \"IDS_SAMPLEINFO\",\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1597,\n          columnNumber: 33\n        }\n      }) : this.props.Login.isPatientReports && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid // key=\"nreleaseoutsourceattachcode\"\n      , {\n        primaryKeyField: \"nreleaseoutsourceattachcode\",\n        data: this.props.Login.masterData.PatientReports || [],\n        dataResult: process(this.props.Login.masterData.PatientReports && this.props.Login.masterData.PatientReports || [], this.state.outsourceFileDataState),\n        dataState: this.state.outsourceFileDataState,\n        isExportExcelRequired: false,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.fieldsForReleasedReportGrid,\n        selectedId: this.props.Login.selectedId,\n        pageable: true,\n        dataStateChange: this.outsourceFileDataStateChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'PatientReports',\n        viewDownloadFile: this.viewSelectedReport,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1606,\n          columnNumber: 33\n        }\n      }) : this.props.Login.isReleaseTestAttachment && this.props.Login.openModal ? /*#__PURE__*/React.createElement(ReleaseTestAttachment, {\n        ReleaseTestAttachmentDetails: this.props.Login.masterData.ReleaseTestAttachmentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestAttachment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"ReleaseTestAttachment\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1627,\n          columnNumber: 33\n        }\n      }) : this.props.Login.isReleaseTestComment && this.props.Login.openModal ? /*#__PURE__*/React.createElement(ReleaseTestComment, {\n        ReleaseTestCommentDetails: this.props.Login.masterData.ReleaseTestCommentDetails || [],\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        storeUserRoleControlRights: this.props.Login.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        methodUrl: 'ReleaseTestComment',\n        settings: this.props.Login.settings,\n        isAddRequired: true,\n        isRefreshRequired: false,\n        isImportRequired: false,\n        isDownloadPDFRequired: false,\n        isDownloadExcelRequired: false,\n        inputParam: this.props.Login.inputParam,\n        screenName: \"ReleaseTestComment\",\n        maxSize: 20,\n        masterData: this.props.Login.masterData,\n        CommentSubType: this.props.Login.masterData.CommentSubType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1646,\n          columnNumber: 33\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"reportinforeleasecode\",\n        primaryKeyField: \"nreportinforeleasecode\",\n        data: this.props.Login.masterData.reportinforelease || [],\n        dataResult: process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState),\n        dataState: this.state.reportInfoDataState //dataResult={this.props.selectedWorklist || []}\n        //expandField=\"expanded\"\n        ,\n        isExportExcelRequired: false //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\n        ,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.feildsForGrid,\n        detailedFieldList: this.props.detailedFieldList,\n        editParam: editReportParam,\n        selectedId: this.props.Login.selectedId,\n        fetchRecord: this.props.fetchReportInfoReleaseById,\n        pageable: true,\n        dataStateChange: this.reportInfoDataChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'ReportComment' // actionIcons={[{\n        //     title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\n        //     controlname: \"faEye\",\n        //     objectName: \"ExceptionLogs\",\n        //     hidden: -1 === -1,\n        //    onClick: (viewSample) => this.props.viewSample(viewSample)\n        // }]}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1666,\n          columnNumber: 37\n        }\n      }) : this.props.Login.screenName === this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) ? /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1699,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        md: 12,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1700,\n          columnNumber: 45\n        }\n      }, /*#__PURE__*/React.createElement(FormInput, {\n        label: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        name: \"sreportcomments\",\n        type: \"text\",\n        onChange: event => this.onInputOnChange(event),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_DESCRIPTION\"\n        }),\n        value: this.state.selectedRecord[\"sreportcomments\"] ? this.state.selectedRecord[\"sreportcomments\"] : \"\",\n        isMandatory: true,\n        required: true,\n        maxLength: 255,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1701,\n          columnNumber: 49\n        }\n      }))) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1716,\n          columnNumber: 45\n        }\n      }, this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && //  this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\n      //  (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\n      this.props.Login.masterData.realReportTypeValue && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE && this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_RELEASEREPORTHISTORY\"\n      }) && /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1733,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nprojecttypecode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PROJECTTYPE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.ProjectTypeList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true //  isDisabled={this.props.Login.isEditPopup === true ? true : false}\n        ,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nprojecttypecode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1735,\n          columnNumber: 57\n        }\n      })), this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && // this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\n      // (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\n      this.props.Login.masterData.realReportTypeValue && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) && this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE && this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_RELEASEREPORTHISTORY\"\n      }) && /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1768,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nprojectmastercode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_PROJECTCODE\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.projectMasterList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] !== undefined ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\" : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true // isDisabled={this.props.Login.isEditPopup === true ? true : false}\n        ,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nprojectmastercode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1770,\n          columnNumber: 57\n        }\n      })), this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && this.props.Login.masterData.realReportTypeValue && (this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE || this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) && this.props.Login.isDeletePopup !== true && this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true && /*#__PURE__*/React.createElement(Col, {\n        md: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1796,\n          columnNumber: 53\n        }\n      }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n        name: \"nsectioncode\",\n        formLabel: this.props.intl.formatMessage({\n          id: \"IDS_SECTION\"\n        }),\n        placeholder: this.props.intl.formatMessage({\n          id: \"IDS_SELECTRECORD\"\n        }),\n        options: this.props.Login.sectionList,\n        value: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] !== undefined ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\" : \"\",\n        defaultValue: this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\",\n        isMandatory: true,\n        isMulti: false,\n        isSearchable: true // isDisabled={this.props.Login.isEditPopup === true ? true : false}\n        ,\n        closeMenuOnSelect: true,\n        alphabeticalSort: true,\n        onChange: event => this.onComboChange(event, 'nsectioncode', 1),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1797,\n          columnNumber: 57\n        }\n      })), this.props.Login.ReportmodalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n        modalShow: this.props.Login.ReportmodalShow,\n        closeModal: this.closeModalShow,\n        onSaveClick: this.onSaveModalClick,\n        validateEsign: this.validateEsign,\n        masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n        ,\n        updateStore: this.props.updateStore,\n        selectedRecord: this.state.selectedRecord || {},\n        modalTitle: this.props.Login.modalTitle,\n        modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n          operation: this.props.Login.operation,\n          onInputOnChange: this.onEsignInputOnChange,\n          inputParam: this.props.Login.inputParam,\n          selectedRecord: this.state.selectedRecord || {},\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1831,\n            columnNumber: 65\n          }\n        }) : /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1839,\n            columnNumber: 65\n          }\n        }, /*#__PURE__*/React.createElement(FormTextarea, {\n          label: this.props.intl.formatMessage({\n            id: this.props.Login.masterData.selectedComment.sreportfieldname\n          }),\n          name: \"sreportfieldvalue\",\n          type: \"text\",\n          onChange: this.onInputChange,\n          placeholder: this.props.intl.formatMessage({\n            id: this.props.Login.masterData.selectedComment.sreportfieldname\n          }),\n          value: this.state.selectedComment ? this.state.selectedComment.sreportfieldvalue : \"\",\n          isMandatory: true,\n          required: true,\n          maxLength: \"500\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 1841,\n            columnNumber: 69\n          }\n        })),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1819,\n          columnNumber: 53\n        }\n      }) : \"\"), this.props.Login.isCorrectionNeed && this.props.Login.isCorrectionNeed ? /*#__PURE__*/React.createElement(DataGrid, {\n        primaryKeyField: \"ntransactionresultcode\",\n        selectedId: this.props.Login.selectedId,\n        data: this.props.Login.masterData.ResultCorrection,\n        dataResult: process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.correctionDataState),\n        dataState: this.state.correctionDataState,\n        dataStateChange: this.correctionDataStateChange,\n        extractedColumnList: resultCorrectionColumnList,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        methodUrl: \"Result\",\n        userInfo: this.props.Login.userInfo,\n        fetchRecord: this.props.fetchParameterById,\n        deleteRecord: this.deleteRecord //  reloadData={this.reloadData}\n        //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\n        ,\n        editParam: editParam //  deleteParam={deleteParam}\n        ,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        isActionRequired: true //  isToolBarRequired={true}\n        ,\n        pageable: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1863,\n          columnNumber: 49\n        }\n      }) : this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTION\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_CORRECTIONCOMMENTS\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_REGENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_GENERATEFILE\"\n      }) && this.props.Login.screenName !== this.props.intl.formatMessage({\n        id: \"IDS_PREVIEWREPORT\"\n      }) && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENT\" && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" ? /*#__PURE__*/React.createElement(DataGridWithMultipleGrid, {\n        needSubSample: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false,\n        data: this.state.data,\n        dataResult: process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        dataState: this.state.dataState,\n        dataStateChange: this.dataStateChange,\n        expandNextData: this.expandNextData,\n        checkFunction: this.checkFunction,\n        checkFunction1: this.checkFunction1,\n        expandFunc: this.expandFunc,\n        childDataResult: this.state.childDataResult,\n        subChildDataResult: this.state.subChildDataResult,\n        extractedColumnList: this.gridfillingColumn(this.state.DynamicGridItem) || [],\n        subChildColumnList: this.gridfillingColumn(this.state.DynamicTestGridItem) || [],\n        expandField: \"expanded\",\n        handleExpandChange: this.handleExpandChange,\n        childHandleExpandChange: this.childHandleExpandChange,\n        isCheckBoxRequired: true,\n        reloadData: this.reloadData,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        pageable: true,\n        scrollable: 'scrollable',\n        gridHeight: '600px',\n        gridTop: '10px' // isActionRequired={true}\n        //   isToolBarRequired={true}\n        //  isExpandRequired={true}\n        //   isDownloadRequired={true}\n        ,\n        isCollapseRequired: true,\n        selectedId: this.props.Login.selectedId,\n        hasChild: true,\n        hasSubChild: true,\n        childList: this.props.Login.masterData.searchedData2 || this.props.Login.masterData.ReleaseSubSample,\n        childColumnList: this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || [],\n        childMappingField: \"npreregno\",\n        subChildMappingField: \"ntransactionsamplecode\",\n        subChildList: this.props.Login.masterData.searchedData3 || this.props.Login.masterData.ReleaseTest,\n        selectedsubcild: this.props.Login.selectedsubcild,\n        methodUrl: \"Release\",\n        headerSelectionChange: this.headerSelectionChange,\n        childHeaderSelectionChange: this.childHeaderSelectionChange,\n        childSelectAll: this.props.Login.childSelectAll,\n        childSelectionChange: this.childSelectionChange,\n        subChildSelectionChange: this.subChildSelectionChange,\n        subChildHeaderSelectionChange: this.subChildHeaderSelectionChange,\n        subChildSelectAll: this.props.Login.subChildSelectAll,\n        selectionChange: this.selectionChange,\n        selectAll: this.props.Login.selectAll,\n        releaseRecord: this.onSaveModalClick // viewDownloadFile={this.viewDownloadFile}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1891,\n          columnNumber: 53\n        }\n      }) : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ? /*#__PURE__*/React.createElement(DataGrid, {\n        key: \"reportinforeleasecode\",\n        primaryKeyField: \"nreportinforeleasecode\",\n        data: this.props.Login.masterData.reportinforelease || [],\n        dataResult: process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState),\n        dataState: this.state.reportInfoDataState //dataResult={this.props.selectedWorklist || []}\n        //expandField=\"expanded\"\n        ,\n        isExportExcelRequired: false //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\n        ,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        extractedColumnList: this.feildsForGrid,\n        detailedFieldList: this.props.detailedFieldList,\n        editParam: editParam,\n        fetchRecord: this.props.fetchReportInfoReleaseById,\n        pageable: true,\n        dataStateChange: this.reportInfoDataChange,\n        scrollable: 'scrollable',\n        gridHeight: '630px',\n        isActionRequired: true,\n        methodUrl: 'ReportComment',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1956,\n          columnNumber: 57\n        }\n      }) : //     <DataGridWithMultipleGrid\n      //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\n      //     data={this.state.data}\n      //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\n      //     dataState={this.state.dataState}\n      //     dataStateChange={this.dataStateChange}\n      //     expandNextData={this.expandNextData}\n      //     checkFunction={this.checkFunction}\n      //     checkFunction1={this.checkFunction1}\n      //     expandFunc={this.expandFunc}\n      //     childDataResult={this.state.childDataResult}\n      //     subChildDataResult={this.state.subChildDataResult}\n      //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\n      //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\n      //     expandField=\"expanded\"\n      //     handleExpandChange={this.handleExpandChange}\n      //     childHandleExpandChange={this.childHandleExpandChange}\n      //     isCheckBoxRequired={true}\n      //     reloadData={this.reloadData}\n      //     controlMap={this.state.controlMap}\n      //     userRoleControlRights={this.state.userRoleControlRights}\n      //     inputParam={this.props.Login.inputParam}\n      //     userInfo={this.props.Login.userInfo}\n      //     pageable={true}\n      //     scrollable={'scrollable'}\n      //     gridHeight={'600px'}\n      //     gridTop={'10px'}\n      //    // isActionRequired={true}\n      //     //   isToolBarRequired={true}\n      //     //  isExpandRequired={true}\n      //     //   isDownloadRequired={true}\n      //     isCollapseRequired={true}\n      //     selectedId={this.props.Login.selectedId}\n      //     hasChild={true}\n      //     hasSubChild={true}\n      //     childList={\n      //         this.props.Login.masterData.searchedData2 ||\n      //         this.props.Login.masterData.ReleaseSubSample\n      //     }\n      //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\n      //     childMappingField={\"npreregno\"}\n      //     subChildMappingField={\"ntransactionsamplecode\"}\n      //     subChildList={\n      //         this.props.Login.masterData.searchedData3 ||\n      //         this.props.Login.masterData.ReleaseTest\n      //     }\n      //     selectedsubcild={this.props.Login.selectedsubcild}\n      //     methodUrl={\"Release\"}\n      //     headerSelectionChange={this.headerSelectionChange}\n      //     childHeaderSelectionChange={this.childHeaderSelectionChange}\n      //     childSelectAll={this.props.Login.childSelectAll}\n      //     childSelectionChange={this.childSelectionChange}\n      //     subChildSelectionChange={this.subChildSelectionChange}\n      //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\n      //     subChildSelectAll={this.props.Login.subChildSelectAll}\n      //     selectionChange={this.selectionChange}\n      //     selectAll={this.props.Login.selectAll}\n      //     releaseRecord={this.onSaveModalClick}\n      //    // viewDownloadFile={this.viewDownloadFile}\n      // />\n      \"\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1526,\n        columnNumber: 21\n      }\n    }), this.props.Login.modalShow ? /*#__PURE__*/React.createElement(ModalShow, {\n      modalShow: this.props.Login.modalShow,\n      closeModal: this.closeModalShow,\n      onSaveClick: this.onSaveModalResultClick,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus //  mandatoryFields={mandatoryFields}\n      ,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      modalTitle: this.props.Login.modalTitle,\n      modalBody: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onEsignInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 2153,\n          columnNumber: 33\n        }\n      }) : this.state.selectedRecord.ReleaseParameter && this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\n        return /*#__PURE__*/React.createElement(ResultEntryForm, {\n          index: index,\n          ResultParameter: [...this.state.selectedRecord.ReleaseParameter],\n          predefinedValues: this.props.Login.masterData.PredefinedValues,\n          defaultPredefinedValues: this.props.Login.masterData.PredefinedValues,\n          gradeValues: this.props.Login.masterData.GradeValues || [],\n          selectedNumericData: this.props.Login.masterData.selectedNumericData,\n          selectedResultGrade: this.state.selectedRecord.selectedResultGrade || [],\n          paremterResultcode: this.props.Login.masterData.paremterResultcode || [],\n          parameterResults: parameterResult || [],\n          Login: this.props.Login,\n          handleClose: this.handleClose,\n          onSaveClick: this.onSaveClick,\n          onResultInputChange: this.onResultInputChange //onGradeEvent={this.onGradeEvent}\n          ,\n          getFormula: this.getFormula,\n          onDropTestFile: this.onDropTestFile,\n          onKeyPress: this.onKeyPress //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\n          ,\n          viewAdditionalInfo: this.viewAdditionalInfo,\n          needSubSample: this.props.Login.masterData.realRegSubTypeValue.nneedsubsample,\n          needdelete: true,\n          needmandatory: true //intl={this.props.intl}\n          ,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 2161,\n            columnNumber: 44\n          }\n        });\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 2141,\n        columnNumber: 21\n      }\n    }) : \"\");\n  }\n\n  //     onSaveModalClick = () => {\n  //         //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\n  //         if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\n  //             this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\n  //         }\n  //         else {\n  //             let ntransactionsamplecode = \"\"\n  //             let ntransactiontestcode = \"\"\n  //             let npreregno = \"\"\n  //             if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\n  //                 if (this.state.npreregno && this.state.npreregno.length > 0) {\n  //                     let sample = this.state.npreregno.filter((c, index) => {\n  //                         return this.state.npreregno.indexOf(c) === index;\n  //                     });\n  //                     let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\n  //                         return this.state.ntransactionsamplecode.indexOf(c) === index;\n  //                     });\n  //                     let test = this.state.ntransactiontestcode.filter((c, index) => {\n  //                         return this.state.ntransactiontestcode.indexOf(c) === index;\n  //                     });\n  //                     npreregno = sample.map(x => x).join(\",\")\n  //                     ntransactionsamplecode = subsample.map(x => x).join(\",\")\n  //                     ntransactiontestcode = test.map(x => x).join(\",\")\n  //                     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\n  //                     const inputParam = {\n  //                         inputData: {\n  //                             change: this.props.Login.change,\n  //                             npreregno: String(npreregno),\n  //                             ntransactionsamplecode: ntransactionsamplecode,\n  //                             ntransactiontestcode: ntransactiontestcode,\n  //                             ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\n  //                                 && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\n  //                             url: this.props.Login.settings[24],\n  //                             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\n  //                             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\n  //                             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\n  //                             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\n  //                             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\n  //                             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\n  //                             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\n  //                             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\n  //                             dfrom: obj.fromDate,\n  //                             dto: obj.toDate,\n  //                             isAddPopup: false,\n  //                             isEditPopup: false,\n  //                             nflag: 2,\n  //                             userinfo: this.props.Login.userInfo,\n  //                             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\n  //                             doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\n  //                         },\n  //                         userinfo: this.props.Login.userInfo,\n  //                         methodUrl: \"Release\",\n  //                         classUrl: \"release\",\n  //                         operation: this.props.Login.operation\n  //                     }\n  //                     const masterData = this.props.Login.masterData;\n  //                     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n  //                         const updateInfo = {\n  //                             typeName: DEFAULT_RETURN,\n  //                             data: {\n  //                                 loadEsign: true,\n  //                                 screenData: { inputParam, masterData },\n  //                                 operation: this.props.Login.operation,\n  //                                 screenName: this.props.Login.screenName,\n  //                                 ncontrolcode:this.props.Login.ncontrolCode\n  //                             }\n  //                         }\n  //                         this.props.updateStore(updateInfo);\n  //                     }\n  //                     else {\n  //                         if (this.props.Login.isDeletePopup) {\n  //                             this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\n  //                         }\n  //                         else if (this.props.Login.isEditPopup) {\n  // <<<<<<< .mine\n  //                             this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\n  // ||||||| .r76787\n  //                             this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \n  // =======\n  //                             this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \n  // >>>>>>> .r76792\n  //                         }\n  //                         else {\n  //                             this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\n  //                         }\n  //                     }\n  //                 }\n  //                 else {\n  //                     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\n  //                 }\n  //             }\n  //             else {\n  //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\n  //             }\n  //         }\n  //     }\n  componentDidUpdate(previousProps) {\n    let {\n      userRoleControlRights,\n      controlMap,\n      SampleGridItem,\n      selectedRecord,\n      SampletypeList,\n      RegistrationTypeList,\n      ReporttypeList,\n      RegistrationSubTypeList,\n      FilterStatusList,\n      ConfigVersionList,\n      //UserSectionList, TestList,\n      SingleItem,\n      DynamicGridItem,\n      DynamicTestGridItem,\n      DynamicSubSampleGridItem,\n      stateDynamicDesign,\n      checkedflag,\n      dataState,\n      selectedComment\n    } = this.state;\n    let bool = false;\n    let reportFilePath = \"\";\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      reportFilePath = this.props.Login.masterData.ReportPDFFile;\n      bool = true;\n    } // else {\n    //     if (this.state.dataState === undefined) {\n    //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\n    //     }\n    //     //  const npreregno =  [];\n    //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\n    //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      bool = true;\n    }\n\n    if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\n      checkedflag = this.props.Login.checkedflag;\n      bool = true;\n    } // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\n    //     npreregno = this.props.Login.npreregno\n    //     bool = true;\n    // }\n\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\n      const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false); // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\n      // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \n\n      const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\n      const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\n      const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\n      const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\n      const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\n      SampletypeList = SampletypeListMap.get(\"OptionList\");\n      ReporttypeList = ReporttypeListMap.get(\"OptionList\"); // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\n      //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\n\n      RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\n      RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\n      FilterStatusList = FilterStatusListMap.get(\"OptionList\");\n      ConfigVersionList = ConfigVersionListMap.get(\"OptionList\"); //  UserSectionList = UserSectionListMap.get(\"OptionList\");\n      //   TestList = TestListMap.get(\"OptionList\");\n\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.selectedComment !== previousProps.Login.masterData.selectedComment) {\n      selectedComment = this.props.Login.masterData.selectedComment;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\n      const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\n      DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\n      DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\n      DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\n      SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\n      bool = true;\n      let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo);\n      selectedRecord['fromDate'] = obj.fromDate;\n      selectedRecord['toDate'] = obj.toDate;\n      bool = true;\n    }\n\n    if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\n      const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\", \"sregtemplatename\", undefined, undefined, false);\n      stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\");\n    }\n\n    if (bool) {\n      bool = false;\n      let allData = {\n        userRoleControlRights,\n        controlMap,\n        SampleGridItem,\n        selectedRecord,\n        SampletypeList,\n        RegistrationTypeList,\n        ReporttypeList,\n        RegistrationSubTypeList,\n        FilterStatusList,\n        ConfigVersionList,\n        selectedComment,\n        //UserSectionList, TestList,\n        SingleItem,\n        DynamicGridItem,\n        DynamicTestGridItem,\n        DynamicSubSampleGridItem,\n        stateDynamicDesign,\n        checkedflag,\n        data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\n        dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\n        reportFilePath\n      };\n\n      if (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true) {\n        this.setState({ ...allData,\n          npreregno: [],\n          ntransactionsamplecode: [],\n          ntransactiontestcode: []\n        });\n      } else {\n        this.setState(allData);\n      }\n    } else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  filterColumnData,\n  getApprovedRecordsAsDraft,\n  getReleasedRegistrationType,\n  getReleasedRegistrationSubType,\n  getReleasedFilterStatus,\n  getReleasedApprovalVersion,\n  getReleasedFilterBasedTest,\n  getReleasedSample,\n  getApprovedSample,\n  //, generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\n  previewAndFinalReport,\n  getRemoveApprovedSample,\n  getDeleteApprovedSample,\n  UpdateApprovedSample,\n  getEditApprovedSample,\n  getSectionForSectionWise,\n  getreportcomments,\n  fetchReportInfoReleaseById,\n  UpdateReportComments,\n  generateReleasedReport,\n  getReleasedDataDetails,\n  getApprovedProjectByProjectType,\n  getApprovedProjectType,\n  getReportForPortal,\n  getResultCorrectionData,\n  //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\n  getSectionForSectionWise,\n  fetchParameterById,\n  updateCorrectionStatus,\n  validateEsignforRelease,\n  viewReportHistory,\n  viewAttachment,\n  versionHistory,\n  downloadVersionReport,\n  viewReleaseTestAttachment,\n  downloadHistory,\n  getPatientFilterExecuteData,\n  rearrangeDateFormatforKendoDataTool,\n  getPatientWiseSample,\n  preliminaryReport,\n  releaseReportHistory\n})(injectIntl(Release));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/release/Release.jsx"],"names":["React","Row","Col","Card","FormGroup","FormLabel","Nav","toast","process","Utils","QbUtils","connect","injectIntl","callService","crudMaster","updateStore","validateEsignCredential","filterColumnData","getApprovedRecordsAsDraft","getReleasedRegistrationType","getReleasedRegistrationSubType","getReleasedFilterStatus","getReleasedApprovalVersion","getReleasedFilterBasedTest","getReleasedSample","generateReleasedReport","previewAndFinalReport","getRemoveApprovedSample","getDeleteApprovedSample","UpdateApprovedSample","getEditApprovedSample","getSectionForSectionWise","getreportcomments","fetchReportInfoReleaseById","UpdateReportComments","getApprovedSample","getReleasedDataDetails","getApprovedProjectByProjectType","getApprovedProjectType","getReportForPortal","getResultCorrectionData","fetchParameterById","updateCorrectionStatus","validateEsignforRelease","viewReportHistory","viewAttachment","versionHistory","downloadVersionReport","viewReleaseTestAttachment","downloadHistory","getPatientFilterExecuteData","rearrangeDateFormatforKendoDataTool","getPatientWiseSample","preliminaryReport","releaseReportHistory","ListMaster","getControlMap","convertDateValuetoString","rearrangeDateFormat","constructOptionList","searchJsonData","showEsign","Lims_JSON_stringify","create_UUID","SampleType","designProperties","formCode","ResultEntry","reportCOAType","transactionStatus","DataGridWithMultipleGrid","DataGrid","Affix","DEFAULT_RETURN","BreadcrumbComponent","ReleaseFilter","SlideOutModal","Esign","ContentPanel","ProductList","faEdit","faExpandArrowsAlt","faEye","faInfoCircle","faPencilAlt","faRecycle","faStore","faTrash","faFilePen","faFileCode","faDownload","faFilePdf","faHistory","faFile","faComments","faPaperclip","FormSelectSearch","FontAwesomeIcon","fileViewUrl","reportUrl","DocViewer","REPORTTYPE","jsonSchema","SampleInfoView","FormInput","FormTextarea","AddOpenDate","AddCloseDate","ModalShow","ResultEntryForm","numberConversion","numericGrade","ResultGrid","ListAttachment","ReleaseTestAttachment","ReleaseTestComment","VersionHistGrid","FilterQueryBuilder","ConfirmMessage","ReleaseReportHistory","mapStateToProps","state","Login","Release","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","dataStateChange","event","dataState","dataResult","data","outsourceFileDataStateChange","outsourceFileDataState","reportInfoDataChange","reportInfoDataState","correctionDataStateChange","correctionDataState","versionHistoryDataStateChange","versionHistoryDataState","preliminaryHistoryDataStateChange","preliminaryHistoryDataState","handleDateChange","dateName","dateValue","Date","dfrom","masterData","fromDate","userInfo","dto","toDate","obj","inputParam","inputData","nflag","nregtypecode","RegTypeValue","nregsubtypecode","RegSubTypeValue","String","userinfo","realSampleTypeList","realReportTypeList","realRegTypeList","realRegSubTypeList","realFilterStatusList","realApprovalVersionList","realDesignTemplateMappingList","onFilterComboChange","comboData","fieldName","inputParamData","value","SampleTypeValue","nsampletypecode","item","DesignTemplateMappingValue","updateInfo","typeName","ApprovalVersionValue","napproveconfversioncode","napprovalversioncode","ndesigntemplatemappingcode","TestValue","ntestcode","ReportTypeValue","ncoareporttypecode","closeFilter","inputValues","realFromDate","realToDate","realSampleTypeValue","realReportTypeValue","realRegTypeValue","realRegSubTypeValue","realApprovalVersionValue","realDesignTemplateMappingValue","FilterStatusValue","realFilterStatusValue","ReportType","RegType","RegSubType","FilterStatus","ApprovalVersion","DesignTemplateMapping","showFilter","viewDownloadFile","filedata","ncoaparentcode","selectedReleaseHistory","ncoareporthistorycode","npreliminaryreporthistorycode","sprimarykeyname","action","doAction","openModal","ncontrolCode","screenName","intl","formatMessage","id","onFilterSubmit","searchRef","current","change","npreregno","parseInt","ntransactionstatus","undefined","RELEASED","isneedsection","NO","napprovalconfigcode","napprovalconfigversioncode","nneedsubsample","nneedtemplatebasedflow","info","checkFunction","arrayfalse","childfalsearray","checkFunction1","count","expandFunc","isAddPopup","isEditPopup","isDeletePopup","checkFlag","viewReport","ReportPDFFile","length","showReport","warn","onKeyPress","index","paremterResultcode","keyCode","i","target","form","elements","focus","preventDefault","onResultInputChange","parameterResults","isParameterInitialRender","onComboChange","selectedRecord","nprojecttypecode","realUserSectionValue","UserSectionValue","realTestValue","nprojectmastercode","isPopup","sfilterstatus","SECTIONWISEMULTIPLESAMPLE","YES","nsectioncode","closeModalShow","loadEsign","closeModal","modalShow","ReportmodalShow","selectedComment","selectedId","downloadReportId","DRAFT","previewReport","previewId","ncontrolcode","spreregno","ntransactionsamplecode","stransactionsamplecode","ntransactiontestcode","stransactiontestcode","url","settings","nprimarykey","nreporttypecode","COAPREVIEW","nprojectcode","ReleasedSampleDetails","reportSectionCode","userRoleControlRights","nformcode","screenData","operation","preliminaryId","COAPRELIMINARY","CorrectionComments","downloadReleasedFile","downloadId","controlMap","has","get","nclinicaltyperequired","noutsourcerequired","listStatus","COAREPORT","sreportcomments","nversionno","isSMTLFlow","confirmMessage","methodUrl","classUrl","reportcomments","regenerateReleasedFile","regenerateId","sreportno","CorrectionStatus","correctionId","onSaveModalResultClick","saveType","ReleaseParameter","additionalInfo","editResultId","formData","FormData","neditable","releaseParameters","sresult","map","resultData","results","editable","nparametertypecode","ncalculatedresult","sfinal","parseFloat","nroundingdigits","JSON","stringify","nuserrole","nusercode","ntransactionresultcode","sresultcomment","salertmessage","additionalInfoUidata","ntestgrouptestpredefcode","ngradecode","trim","RESULTSTATUS_FIO","splittedFileName","name","split","fileExtension","uniquefilename","ssystemfilename","nfilesize","size","append","Object","values","push","loading","isFileupload","displayName","onSaveModalClick","ReleaseSample","sample","filter","c","indexOf","subsample","test","x","join","sendToPortal","isPortal","allPreregno","reportHistory","patientInfo","isPatientDetails","hideSave","reportHistoryInfo","releaseTestAttachmentData","actionName","reloadData","isCorrectionNeed","isPatientReports","openModalTitle","isReleaseTestAttachment","isReleaseTestComment","projectMasterList","closeDocModal","onInputOnChange","onChangeAwesomeQueryBuilder","immutableTree","config","filterquery","sqlFormat","filterQueryTreeStr","getTree","awesomeTree","awesomeConfig","handleExecuteClick","includes","inputparam","component","seletedFilterComponent","handleKendoRowClick","patientinfo","dataItem","PARTIAL","spatientid","onInputChange","coaFileInfo","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","label","password","selectionChange","checkedflag","checked","syntheticEvent","selected","preregno","ncoahistorycode","childHeaderSelectionChange","dataItems","subsamplecode","ReleaseSubSample","subChildHeaderSelectionChange","transactionsamplecode","ReleaseTest","collectData","every","headerSelectionChange","childSelectionChange","slected","subChildSelectionChange","y","t","y1","transactiontestcode","viewSelectedReport","releasedcoareport","formRef","createRef","skip","take","masterStatus","error","childDataResult","Map","SampletypeList","ProjecttypeList","ProjectMasterList","SectionList","ReporttypeList","RegistrationTypeList","RegistrationSubTypeList","FilterStatusList","sampleSearchField","subsampleSearchField","testSearchField","searchedData","SampleGridItem","combinedSearchField","stateDynamicDesign","searchFieldList","getDerivedStateFromProps","gridfillingColumn","temparray","option","LABEL","slanguagetypecode","VALUE","render","editReportParam","primaryKeyField","feildsForGrid","fieldsForReleasedReportGrid","mandatoryFields","resultCorrectionColumnList","filePath","filetype","reportFilePath","userStatusCSS","activeIconCSS","filterParam","inputListName","selectedObject","fetchUrl","fecthInputObject","isSearch","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","scoareporttypename","releaseId","viewreportId","sendtoportalId","editId","deleteId","patientinfoId","ResultCorrectionId","editcommentsId","releaseHistoryId","downloadVersionHist","reportHistoryId","releaseTestAttachmentId","releaseTestCommentId","releaseReportHistoryId","editParam","ReleaseMasterDataParam","ApprovedModalParam","RemoveModalParam","PATIENTWISE","patientwise","EditModalParam","jsonParam","primaryKeyName","ResultCorrectionParam","ReleaseHistory","openFilter","ConfigVersionList","onDesignTemplateChange","stransdisplaystatus","nprojectspecrequired","MULTIPLESAMPLE","CORRECTION","nportalrequired","CLINICALTYPE","PROJECTSAMPLETYPE","searchedData1","expandNextData","subChildDataResult","DynamicGridItem","DynamicTestGridItem","ReleasedSubSampleDetails","DynamicSubSampleGridItem","ReleasedTestDetails","selectedsubcild","fields","kendoSkip","kendoTake","handlePageChange","gridColumns","lstPatient","SingleItem","PatientReports","ReleaseTestAttachmentDetails","ReleaseTestCommentDetails","CommentSubType","reportinforelease","detailedFieldList","SECTIONWISE","PROJECTWISE","isComboCheck","ProjectTypeList","sectionList","modalTitle","onEsignInputOnChange","sreportfieldname","sreportfieldvalue","ResultCorrection","deleteRecord","handleExpandChange","childHandleExpandChange","searchedData2","searchedData3","childSelectAll","subChildSelectAll","selectAll","parameterResult","PredefinedValues","GradeValues","selectedNumericData","selectedResultGrade","handleClose","onSaveClick","getFormula","onDropTestFile","viewAdditionalInfo","componentDidUpdate","previousProps","bool","SampletypeListMap","ReporttypeListMap","RegistrationTypeListMap","RegistrationSubTypeListMap","FilterStatusListMap","ConfigVersionListMap","TestListMap","Test","DynamicDesign","dynamicColumn","parse","jsondata","samplegriditem","testListFields","releasetestfields","subsamplelistitem","sampledisplayfields","DesignTemplateMappingMap","allData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport {\r\n    Utils as QbUtils,\r\n} from \"@react-awesome-query-builder/ui\";\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    filterColumnData,\r\n    getApprovedRecordsAsDraft,\r\n    getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample,\r\n    generateReleasedReport,\r\n    //getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType,\r\n    previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    getSectionForSectionWise, getreportcomments, fetchReportInfoReleaseById, UpdateReportComments,\r\n    getApprovedSample, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData,\r\n    //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    //getSectionForSectionWise, \r\n    //fetchParameterById,updateCorrectionStatus,\r\n    //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory, downloadVersionReport,\r\n    viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool, getPatientWiseSample,\r\n    preliminaryReport,releaseReportHistory\r\n} from '../../actions';\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { getControlMap, convertDateValuetoString, rearrangeDateFormat, constructOptionList, searchJsonData, showEsign, Lims_JSON_stringify, create_UUID } from '../../components/CommonScript';\r\nimport { SampleType, designProperties, formCode, ResultEntry, reportCOAType, transactionStatus } from '../../components/Enumeration';\r\nimport DataGridWithMultipleGrid from '../../components/data-grid/DataGridWithMultipleGrid';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { Affix } from 'rsuite';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport ReleaseFilter from './ReleaseFilter';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ContentPanel, ProductList } from '../product/product.styled';\r\nimport { faEdit, faExpandArrowsAlt, faEye, faInfoCircle, faPencilAlt, faRecycle, faStore, faTrash, faFilePen, faFileCode, faDownload, faFilePdf,faHistory, faFile, faComments, faPaperclip } from '@fortawesome/free-solid-svg-icons';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { ReactComponent as Generate } from '../../assets/image/generate-certificate.svg'\r\nimport { ReactComponent as ReGenerate } from '../../assets/image/regenerate-icon.svg'\r\nimport { ReactComponent as ResultCorrection } from '../../assets/image/resultcorrection.svg'\r\nimport { ReactComponent as Correction } from '../../assets/image/correctionrelease.svg'\r\nimport { ReactComponent as Comment } from '../../assets/image/comment-edit-svgrepo-com.svg'\r\nimport { ReactComponent as DownloadCertificate } from '../../assets/image/Download Certificate.svg';\r\nimport {ReactComponent as PreliminaryReport} from '../../assets/image/preliminary_report.svg';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { fileViewUrl, reportUrl } from '../../rsapi';\r\nimport DocViewer from '../../components/doc-viewer/doc-viewer.component';\r\nimport { REPORTTYPE } from \"../../components/Enumeration\";\r\nimport { jsonSchema } from 'uuidv4';\r\nimport SampleInfoView from '../approval/SampleInfoView';\r\n//import DataGrid from '../../components/data-grid/data-grid.component';\r\n//import ModalShow from '../../components/ModalShow';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport AddOpenDate from '../instrumentmanagement/AddOpenDate';\r\nimport AddCloseDate from '../instrumentmanagement/AddCloseDate';\r\nimport ModalShow from '../../components/ModalShow';\r\nimport ResultEntryForm from '../ResultEntryBySample/ResultEntryForm';\r\nimport { numberConversion, numericGrade } from '../ResultEntryBySample/ResultEntryValidation';\r\nimport ResultGrid from '../resultgrid/ResultGrid';\r\nimport ListAttachment from '../../components/ListAttachment';\r\n//import FormInput from '../../components/form-input/form-input.component'\r\nimport ReleaseTestAttachment from './ReleaseTestAttachment';\r\nimport ReleaseTestComment from './ReleaseTestComment';\r\nimport VersionHistGrid from './VersionHistGrid';\r\nimport FilterQueryBuilder from '../../components/FilterQueryBuilder';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport ReleaseReportHistory from './ReleaseReportHistory';\r\nimport { ReactComponent as Preview} from '../../assets/image/Preview.svg';\r\nimport { ReactComponent as TestAttachment} from '../../assets/image/Test Attachment.svg';\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Release extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const outsourceFileDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const reportInfoDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const correctionDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const versionHistoryDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        const preliminaryHistoryDataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        \r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            outsourceFileDataState: outsourceFileDataState,\r\n            reportInfoDataState: reportInfoDataState,\r\n            correctionDataState: correctionDataState,\r\n            versionHistoryDataState: versionHistoryDataState,\r\n            preliminaryHistoryDataState:preliminaryHistoryDataState,\r\n            childDataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            SampletypeList: [],\r\n            ProjecttypeList: [],\r\n            ProjectMasterList: [],\r\n            SectionList: [],\r\n            ReporttypeList: [],\r\n            RegistrationTypeList: [],\r\n            RegistrationSubTypeList: [],\r\n            FilterStatusList: [],\r\n            sampleSearchField: [],\r\n            subsampleSearchField: [],\r\n            testSearchField: [],\r\n            searchedData: [],\r\n            count: 0,\r\n            SampleGridItem: [],\r\n            combinedSearchField: [],\r\n            npreregno: [],\r\n            ntransactiontestcode: [],\r\n            ntransactionsamplecode: [],\r\n            stateDynamicDesign: [],\r\n            sidebarview: false\r\n\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.searchFieldList = [\"sreportno\", \"susername\", \"stransdisplaystatus\"];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })\r\n    }\r\n\r\n\r\n\r\n    // expandNextData(y) {\r\n    //     let change = []\r\n    //     let x = process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], y);\r\n\r\n    //     let data = x.data.every(item => {\r\n    //         return item.expanded === true\r\n    //     })\r\n    //     if (data === true) {\r\n    //         change = true\r\n    //     } else {\r\n    //         change = false\r\n    //     }\r\n    //     this.expandFunc({ change: change })\r\n\r\n    // }\r\n    dataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ dataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    outsourceFileDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ outsourceFileDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    reportInfoDataChange = (event) => {\r\n\r\n\r\n        this.setState({ reportInfoDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    correctionDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ correctionDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    versionHistoryDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ versionHistoryDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    preliminaryHistoryDataStateChange = (event) => {\r\n\r\n\r\n        this.setState({ preliminaryHistoryDataState: event.dataState, dataResult: process(this.state.data, event.dataState) })\r\n        // this.expandNextData(event.dataState);\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        let dfrom = this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()\r\n        let dto = this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()\r\n        let obj = {}\r\n        if (dateName === 'fromDate') {\r\n            obj = convertDateValuetoString(dateValue, dto, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n        } else {\r\n            obj = convertDateValuetoString(dfrom, dateValue, this.props.Login.userInfo)\r\n            dfrom = obj.fromDate\r\n            dto = obj.toDate\r\n\r\n        }\r\n        let inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                dfrom: String(dfrom),\r\n                dto: String(dto),\r\n                userinfo: this.props.Login.userInfo,\r\n                realSampleTypeList:this.props.Login.masterData.realSampleTypeList || [],\r\n                realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n            },\r\n            masterData: this.props.Login.masterData\r\n\r\n        }\r\n        this.props.getReleasedApprovalVersion(inputParam)\r\n    }\r\n\r\n    onFilterComboChange = (comboData, fieldName) => {\r\n\r\n        if (comboData) {\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let inputParamData = {};\r\n            if (fieldName === 'nsampletypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.SampleTypeValue.nsampletypecode) {\r\n                    inputParamData = {\r\n                        nflag: 2,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        SampleTypeValue: comboData.item,\r\n                        realSampleTypeList:this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    };\r\n                    this.props.getReleasedRegistrationType(inputParamData)\r\n                }\r\n            }\r\n\r\n            else if (fieldName === 'nregtypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.RegTypeValue.nregtypecode) {\r\n                    inputParamData = {\r\n                        nflag: 3,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: this.props.Login.masterData,\r\n                        RegTypeValue: comboData.item,\r\n                        realSampleTypeList:this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    }\r\n                    this.props.getReleasedRegistrationSubType(inputParamData)\r\n                }\r\n            } else if (fieldName === 'nregsubtypecode') {\r\n\r\n                if (comboData.value !== this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) {\r\n                    let inputData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        realSampleTypeList:this.props.Login.masterData.realSampleTypeList || [],\r\n                        realReportTypeList: this.props.Login.masterData.realReportTypeList || [],\r\n                        realRegTypeList: this.props.Login.masterData.realRegTypeList || [],\r\n                        realRegSubTypeList: this.props.Login.masterData.realRegSubTypeList || [],\r\n                        realFilterStatusList: this.props.Login.masterData.realFilterStatusList || [],\r\n                        realApprovalVersionList: this.props.Login.masterData.realApprovalVersionList || [],\r\n                        realDesignTemplateMappingList: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n                    }\r\n                    inputParamData = {\r\n                        inputData,\r\n                        masterData: {\r\n                            ...this.props.Login.masterData,\r\n                            RegSubTypeValue: comboData.item\r\n                        }\r\n                    }\r\n                    this.props.getReleasedApprovalVersion(inputParamData)\r\n                }\r\n            }\r\n\r\n\r\n            else if (fieldName === 'ndesigntemplatemappingcode') {\r\n                // const inputParamData = {\r\n                //     dfrom: obj.fromDate,\r\n                //     dto: obj.toDate,\r\n                //     nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                //     nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                //     nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                //     napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     masterData: { ...this.props.Login.masterData },\r\n                //     RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                //     ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n                //     ndesigntemplatemappingcode: comboData.value,\r\n                //     DesignTemplateMappingValue: comboData.item\r\n                // }\r\n                // this.props.getReleaseFilterBasedTest(inputParamData)\r\n\r\n                let masterData = { ...this.props.Login.masterData, DesignTemplateMappingValue: comboData.item }\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { masterData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else if (fieldName === 'napproveconfversioncode') {\r\n                if (comboData.value !== this.props.Login.masterData.ApprovalVersionValue.napproveconfversioncode) {\r\n                    inputParamData = {\r\n                        nflag: 4,\r\n                        dfrom: obj.fromDate,\r\n                        dto: obj.toDate,\r\n                        nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                        nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                        nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                        napprovalversioncode: comboData.value,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        masterData: { ...this.props.Login.masterData, ApprovalVersionValue: comboData.item },\r\n                        RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n                        ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                    }\r\n                    this.props.getReleasedFilterStatus(inputParamData)\r\n                }\r\n            }\r\n            //Don't Remove\r\n            // else if (fieldName === 'nsectioncode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.UserSectionValue.nsectioncode) {\r\n            //         // let masterData = { ...this.props.Login.masterData, UserSectionValue: comboData.item }\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, UserSectionValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             nsectioncode: comboData.value === -1 ? null\r\n            //                 // this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //                 : comboData.value,\r\n            //             stransactionstatus: this.props.Login.masterData.FilterStatusValue.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.FilterStatusValue.ntransactionstatus,\r\n            //             ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1,\r\n            //             DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            //         }\r\n\r\n            //         this.props.getReleasedFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n            // else if (fieldName === 'njobstatuscode') {\r\n            //     if (comboData.value !== this.props.Login.masterData.JobStatusValue.njobstatuscode) {\r\n            //         let masterData = { ...this.props.Login.masterData, JobStatusValue: comboData.item }\r\n            //         const updateInfo = {\r\n            //             typeName: DEFAULT_RETURN,\r\n            //             data: { masterData }\r\n            //         }\r\n            //         this.props.updateStore(updateInfo);\r\n            //     }\r\n            // }\r\n            else if (fieldName === 'ntestcode') {\r\n                if (comboData.value !== this.props.Login.masterData.TestValue.ntestcode) {\r\n                    let masterData = { ...this.props.Login.masterData, TestValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            else if (fieldName === 'ncoareporttypecode') {\r\n                if (comboData.value !== this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) {\r\n                    let masterData = { ...this.props.Login.masterData, ReportTypeValue: comboData.item }\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n            }\r\n            // else {\r\n            //     if (comboData.value !== this.props.Login.masterData.FilterStatusValue.ntransactionstatus) {\r\n            //         //  let masterData = { ...this.props.Login.masterData, FilterStatusValue: comboData.item }\r\n            //         //  const updateInfo = {\r\n            //         //     typeName: DEFAULT_RETURN,\r\n            //         //    data: { masterData }\r\n            //         // }\r\n\r\n            //         inputParamData = {\r\n            //             dfrom: obj.fromDate,\r\n            //             dto: obj.toDate,\r\n            //             nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n            //             nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n            //             nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n            //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n            //             userinfo: this.props.Login.userInfo,\r\n            //             masterData: { ...this.props.Login.masterData, FilterStatusValue: comboData.item },\r\n            //             RegSubTypeValue: this.props.Login.masterData.RegSubTypeValue,\r\n            //             ntransactionstatus: comboData.value,\r\n            //             stransactionstatus: comboData.value === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : comboData.value,\r\n            //             nsectioncode: null//this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? \r\n            //             //this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") \r\n            //             //: this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n            //             , ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n            //             , DesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n\r\n            //         }\r\n\r\n            //         this.props.getReleaseFilterBasedTest(inputParamData);\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n    closeFilter=()=>{\r\n        let inputValues = {\r\n            fromDate : this.props.Login.masterData.realFromDate || new Date(),//this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date() ,\r\n            toDate : this.props.Login.masterData.realToDate || new Date(),//this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date() ,\r\n            SampleTypeValue :this.props.Login.masterData.realSampleTypeValue || {} ,\r\n            ReportTypeValue : this.props.Login.masterData.realReportTypeValue || {} ,\r\n            RegTypeValue : this.props.Login.masterData.realRegTypeValue || {},\r\n            RegSubTypeValue : this.props.Login.masterData.realRegSubTypeValue || {},\r\n            ApprovalVersionValue : this.props.Login.masterData.realApprovalVersionValue || {},\r\n            DesignTemplateMappingValue :this.props.Login.masterData.realDesignTemplateMappingValue || {},\r\n            FilterStatusValue : this.props.Login.masterData.realFilterStatusValue || {},\r\n            SampleType:this.props.Login.masterData.realSampleTypeList || [],\r\n            ReportType: this.props.Login.masterData.realReportTypeList || [],\r\n            RegType: this.props.Login.masterData.realRegTypeList || [],\r\n            RegSubType: this.props.Login.masterData.realRegSubTypeList || [],\r\n            FilterStatus: this.props.Login.masterData.realFilterStatusList || [],\r\n            ApprovalVersion: this.props.Login.masterData.realApprovalVersionList || [],\r\n            DesignTemplateMapping: this.props.Login.masterData.realDesignTemplateMappingList || []\r\n\r\n        }\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false, masterData: { ...this.props.Login.masterData, ...inputValues } },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    viewDownloadFile = (filedata) => {\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                // change: this.props.Login.change,\r\n                // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                ncoareporthistorycode: filedata.inputData.ncoareporthistorycode ? filedata.inputData.ncoareporthistorycode : -1,\r\n                npreliminaryreporthistorycode:filedata.inputData.npreliminaryreporthistorycode?filedata.inputData.npreliminaryreporthistorycode:-1,\r\n                //ntransactionstatus: String(transactionStatus.RELEASED),\r\n                //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                //nflag: 2,\r\n                userinfo: this.props.Login.userInfo,\r\n                //sreportcomments: \"\",\r\n                //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                //nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                action: \"DownloadVersionhistory\",\r\n                doAction: \"download\",\r\n               // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                openModal:true,\r\n                userInfo: this.props.Login.userInfo,\r\n                ncontrolCode:filedata.ncontrolCode\r\n            },\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASEREPORTHISTORY\" })\r\n\r\n        }\r\n        this.props.downloadVersionReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n    }\r\n\r\n    // downloadPreliminaryHistory = (filedata) => {\r\n\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             // change: this.props.Login.change,\r\n    //             // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //             //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //             //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //             npreliminaryreporthistorycode:filedata.inputData.npreliminaryreporthistorycode,\r\n    //             //ntransactionstatus: String(transactionStatus.RELEASED),\r\n    //             //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n    //             // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //             // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             //nflag: 2,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             //sreportcomments: \"\",\r\n    //             //nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             //ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             //nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //             sprimarykeyname: \"npreregno\",\r\n    //             action: \"DownloadPreliminaryHistory\",\r\n    //             doAction: \"download\",\r\n    //            // ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             openModal:true,\r\n    //             userInfo: this.props.Login.userInfo,\r\n    //             ncontrolCode:filedata.ncontrolCode\r\n    //         },\r\n    //       //  screenName: this.props.intl.formatMessage({ id: \"IDS_VERSIONHISTORY\" })\r\n\r\n    //     }\r\n    //     this.props.downloadPreliminaryHistory(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n    // }\r\n\r\n\r\n    onFilterSubmit = () => {\r\n        this.searchRef.current.value = \"\";\r\n        this.props.Login.change = false\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n        let realFromDate = obj.fromDate;\r\n        let realToDate = obj.toDate\r\n        let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n        let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n        let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n        let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n        let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n        //  let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n        //  let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n        let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n        let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n        let realSampleTypeList=this.props.Login.masterData.SampleType || [];\r\n        let  realReportTypeList= this.props.Login.masterData.ReportType || [];\r\n        let  realRegTypeList= this.props.Login.masterData.RegType || [];\r\n        let  realRegSubTypeList= this.props.Login.masterData.RegSubType || [];\r\n        let  realFilterStatusList= this.props.Login.masterData.FilterStatus || [];\r\n        let realApprovalVersionList= this.props.Login.masterData.ApprovalVersion || [];\r\n        let realDesignTemplateMappingList=this.props.Login.masterData.DesignTemplateMapping || [];\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n            realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            //  realUserSectionValue, realTestValue,\r\n            realDesignTemplateMappingValue,realReportTypeList,realRegSubTypeList,realRegTypeList,\r\n            realReportTypeValue,realSampleTypeList,realFilterStatusList,realApprovalVersionList,realDesignTemplateMappingList\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n            ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n            nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode) {\r\n\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n\r\n    }\r\n    //end- search logic\r\n    checkFunction = (data) => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                arrayfalse: data.arrayfalse,\r\n                childfalsearray: data.childfalsearray\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    checkFunction1 = () => {\r\n        this.setState({\r\n            count: 1\r\n        })\r\n    }\r\n    expandFunc = (change) => {\r\n        let count = change.count;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: { ...this.props.Login.masterData },\r\n                change: change.change,\r\n                isAddPopup: false,\r\n                isEditPopup: false,\r\n                isDeletePopup: false,\r\n                checkFlag: \"1\",\r\n                count: count,\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n            return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \"dataField\": option[designProperties.VALUE], \"width\": \"200px\", \"columnSize\": \"3\" };\r\n        });\r\n        return temparray;\r\n    }\r\n    viewReport = () => {\r\n        if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_REPORTNOTGENERATED\" }));\r\n        }\r\n    }\r\n    render() {\r\n        const editReportParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"nreportinforeleasecode\", operation: \"update\",//selectedId:,\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: -1, masterData: this.props.Login.masterData, selectedId: this.props.Login.selectedId\r\n        };\r\n        this.feildsForGrid =\r\n            [\r\n                // { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestsynonym\", \"width\": \"200px\" },  \r\n                { \"idsName\": \"IDS_SCREEN\", \"dataField\": \"testname\", \"width\": \"100px\" },\r\n                { \"idsName\": \"IDS_FIELDNAME\", \"dataField\": \"sreportfieldname\", \"width\": \"100px\" },\r\n                { \"idsName\": \"IDS_VALUE\", \"dataField\": \"sreportfieldvalue\", \"width\": \"100px\" }\r\n            ];\r\n\r\n            this.fieldsForReleasedReportGrid =\r\n            [\r\n                { \"idsName\": \"IDS_RELEASENO\", \"dataField\": \"sreleaseno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_VERSIONNO\", \"dataField\": \"nversionno\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_ORDERID\", \"dataField\": \"sexternalorderid\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDSITE\", \"dataField\": \"ssitename\", \"width\": \"200px\" },\r\n                { \"idsName\": \"IDS_REPORTEDDATE\", \"dataField\": \"sreleasedate\", \"width\": \"200px\"},\r\n                { \"idsName\": \"IDS_REPORTEDUSER\", \"dataField\": \"susername\", \"width\": \"200px\" },\r\n            ];\r\n\r\n        const mandatoryFields = [{ \"mandatory\": true, \"idsName\": \"IDS_DESCRIPTION\", \"dataField\": \"sreportcomments\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            //  { \"mandatory\": true, \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\"  , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n            // { \"mandatory\": true, \"idsName\": \"IDS_INTERFACETYPE\", \"dataField\": \"ninterfacetypecode\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        ];\r\n\r\n        const resultCorrectionColumnList = [\r\n            { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_PARAMETERNAME\", \"dataField\": \"sparametersynonym\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULT\", \"dataField\": \"sfinal\", \"width\": \"150px\" },\r\n            { \"idsName\": \"IDS_RESULTFLAG\", \"dataField\": \"sgradename\", \"width\": \"150px\", \"fieldType\": \"gradeColumn\" }\r\n        ];\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        let filePath = \"\";\r\n        if (this.props.Login.masterData.filetype && this.props.Login.masterData.filetype == \"mrt\") {\r\n            filePath = reportUrl();\r\n        } else {\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        let userStatusCSS = \"\";\r\n        let activeIconCSS = \"fa fa-check\";\r\n        if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.DRAFT) {\r\n            userStatusCSS = \"outline-secondary\";\r\n            activeIconCSS = \"\";\r\n        }\r\n        else if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.RELEASED) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else {\r\n            userStatusCSS = \"outline-Final\";\r\n        }\r\n        const filterParam = {\r\n            inputListName: \"ReleaseHistory\",\r\n            selectedObject: \"selectedReleaseHistory\",\r\n            primaryKeyField: \"ncoaparentcode\",\r\n            fetchUrl: \"release/getReleaseHistory\",\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: this.searchFieldList,\r\n            fecthInputObject: {\r\n                isSearch: true, userinfo: this.props.Login.userInfo,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                masterData: this.props.Login.masterData,\r\n                searchFieldList: this.searchFieldList,\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined)\r\n                    || this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                //  ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n        };\r\n\r\n        let breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n\r\n            {\r\n                \"label\": \"IDS_REGTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegTypeValue ? this.props.Login.masterData.RegTypeValue.sregtypename || \"NA\" : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REGSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename || \"NA\" :\r\n                    this.props.Login.masterData.RegSubTypeValue ?\r\n                        this.props.Login.masterData.RegSubTypeValue.sregsubtypename : \"NA\"\r\n            }, {\r\n                \"label\": \"IDS_REPORTTYPE\",\r\n                \"value\": this.props.Login.masterData.realReportTypeValue ? this.props.Login.masterData.realReportTypeValue.scoareporttypename || \"NA\" :\r\n                    this.props.Login.masterData.ReportTypeValue ?\r\n                        this.props.Login.masterData.ReportTypeValue.scoareporttypename : \"NA\"\r\n            }\r\n        ];\r\n        const releaseId = this.props.Login.inputParam && this.state.controlMap.has(\"AddSamples\")\r\n            && this.state.controlMap.get('AddSamples').ncontrolcode;\r\n        \r\n        const preliminaryId =\r\n            this.state.controlMap.has(\"PreliminaryReport\") &&\r\n            this.state.controlMap.get(\"PreliminaryReport\").ncontrolcode;\r\n        const previewId =\r\n            this.state.controlMap.has(\"PreviewFinalReport\") &&\r\n            this.state.controlMap.get(\"PreviewFinalReport\").ncontrolcode;\r\n        const downloadId =\r\n            this.state.controlMap.has(\"ReleaseReportGeneration\") &&\r\n            this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        const regenerateId =\r\n            this.state.controlMap.has(\"RegenerateRelease\") &&\r\n            this.state.controlMap.get(\"RegenerateRelease\").ncontrolcode;\r\n        const viewreportId =\r\n            this.state.controlMap.has(\"ViewReportRelease\") &&\r\n            this.state.controlMap.get(\"ViewReportRelease\").ncontrolcode;\r\n        const sendtoportalId =\r\n            this.state.controlMap.has(\"SendToPortal\") &&\r\n            this.state.controlMap.get(\"SendToPortal\").ncontrolcode;\r\n        const editId =\r\n            this.state.controlMap.has(\"AppendSamples\") &&\r\n            this.state.controlMap.get(\"AppendSamples\").ncontrolcode;\r\n        const deleteId =\r\n            this.state.controlMap.has(\"RemoveSamples\") &&\r\n            this.state.controlMap.get(\"RemoveSamples\").ncontrolcode;\r\n        const patientinfoId =\r\n            this.state.controlMap.has(\"PatientInfo\") &&\r\n            this.state.controlMap.get(\"PatientInfo\").ncontrolcode;\r\n        const ResultCorrectionId =\r\n            this.state.controlMap.has(\"ResultCorrection\") &&\r\n            this.state.controlMap.get(\"ResultCorrection\").ncontrolcode;\r\n        const editResultId =\r\n            this.state.controlMap.has(\"EditResult\") &&\r\n            this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n\r\n        const editcommentsId =\r\n            this.state.controlMap.has(\"EditComment\") &&\r\n            this.state.controlMap.get(\"EditComment\").ncontrolcode;\r\n\r\n        const correctionId =\r\n            this.state.controlMap.has(\"Correction\") &&\r\n            this.state.controlMap.get(\"Correction\").ncontrolcode;\r\n\r\n        const releaseHistoryId =\r\n            this.state.controlMap.has(\"ReleaseHistory\") &&\r\n            this.state.controlMap.get(\"ReleaseHistory\").ncontrolcode;\r\n\r\n        \r\n        const downloadVersionHist =\r\n            this.state.controlMap.has(\"DownloadReleaseVersion\") &&\r\n            this.state.controlMap.get(\"DownloadReleaseVersion\").ncontrolcode;\r\n\r\n        const downloadReportId =\r\n            this.state.controlMap.has(\"DownloadReport\") &&\r\n            this.state.controlMap.get(\"DownloadReport\").ncontrolcode;\r\n\r\n        const reportHistoryId =\r\n            this.state.controlMap.has(\"ReportHistory\") &&\r\n            this.state.controlMap.get(\"ReportHistory\").ncontrolcode;\r\n\r\n        const releaseTestAttachmentId =\r\n            this.state.controlMap.has(\"ReleaseTestAttachment\") &&\r\n            this.state.controlMap.get(\"ReleaseTestAttachment\").ncontrolcode;\r\n\r\n        const releaseTestCommentId =\r\n            this.state.controlMap.has(\"ReleaseTestComment\") &&\r\n            this.state.controlMap.get(\"ReleaseTestComment\").ncontrolcode;\r\n        \r\n        const releaseReportHistoryId =\r\n            this.state.controlMap.has(\"ReleaseReportHistory\") &&\r\n            this.state.controlMap.get(\"ReleaseReportHistory\").ncontrolcode;\r\n\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.screenName, primaryKeyField: \"ntransactionresultcode\", operation: \"update\",\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editResultId, masterData: this.props.Login.masterData\r\n        };\r\n\r\n        const ReleaseMasterDataParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            //   realUserSectionValue: this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue,\r\n            //   realTestValue: this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue,\r\n            masterData: { ...this.props.Login.masterData },\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.npreregno) || \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': String(transactionStatus.RELEASED) + ',' + String(this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus),\r\n                //  'ntestcode': this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n                'ncoareporttypecode': this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n\r\n                // 'ncoahistorycode':COAHistory\r\n\r\n            }\r\n        };\r\n\r\n        const ApprovedModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            Login:this.props.Login,\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'isAddPopup': true,\r\n                'isPopup': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })\r\n\r\n\r\n            }\r\n        };\r\n        const RemoveModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\r\n                ncontrolCode: deleteId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" }),\r\n                spatientid:parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode)=== reportCOAType.PATIENTWISE ?this.props.Login.masterData.ReleasedSampleDetails.length!==0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1:-1,\r\n                patientwise:parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode)=== reportCOAType.PATIENTWISE ? true:false\r\n\r\n            }\r\n        };\r\n        const EditModalParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneededit': true,\r\n                'isPopup': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\r\n                ncontrolCode: editId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_EDITSAMPLES\" }),\r\n                nsectioncode: this.props.Login.nsectioncode,\r\n                spatientid:parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode)=== reportCOAType.PATIENTWISE ?this.props.Login.masterData.ReleasedSampleDetails.length!==0 ? this.props.Login.masterData.ReleasedSampleDetails[0].spatientid || -1 : -1:-1,\r\n                patientwise:parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode)=== reportCOAType.PATIENTWISE ? true:false\r\n\r\n\r\n\r\n            }\r\n        };\r\n\r\n        const jsonParam = {\r\n            screenName: \"IDS_RELEASE\", operation: \"update\", primaryKeyName: \"ncoaparentcode\",\r\n            masterData: this.props.Login.masterData, userInfo: this.props.Login.userInfo,\r\n            ncontrolcode: editId, selectedReleaseHistory: this.props.Login.masterData.selectedReleaseHistory\r\n        };\r\n\r\n        const ResultCorrectionParam = {\r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n\r\n            inputData: {\r\n                obj: convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo),\r\n                selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n                'dfrom': obj.fromDate,\r\n                'dto': obj.toDate,\r\n                'npreregno': \"0\",\r\n                'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n                'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n                'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n                'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n                \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                'userinfo': this.props.Login.userInfo,\r\n                'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                'nneedremove': true,\r\n                'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                'isneedsection': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                'ncoaparentcode': this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode || -1,\r\n                ncontrolCode: ResultCorrectionId,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })\r\n\r\n\r\n\r\n            }\r\n        };\r\n        return (\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                            <span onClick={() => this.setState({ sidebarview: !this.state.sidebarview })} className='sidebar-view-btn'>\r\n                                {!this.state.sidebarview ?\r\n                                    <i class=\"fa fa-less-than\"></i> :\r\n                                    <i class=\"fa fa-greater-than\"></i>\r\n                                }\r\n                            </span>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_RELEASE\" })}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ReleaseHistory}\r\n                                getMasterDetail={(ReleaseSample) =>\r\n                                    this.props.getReleasedDataDetails(\r\n\r\n                                        {\r\n                                            ...ReleaseMasterDataParam,\r\n                                            ...ReleaseSample\r\n                                        }\r\n                                    )\r\n                                }\r\n                                selectedMaster={this.props.Login.masterData.selectedReleaseHistory}\r\n                                primaryKeyField=\"ncoaparentcode\"\r\n                                mainField=\"sreportno\"\r\n                                firstField=\"susername\"\r\n                                secondField=\"sgenerateddate\"\r\n                                // secondField=\"stransdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={releaseId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getApprovedSample(ApprovedModalParam, releaseId)}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                callCloseFunction={true}\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"Sample Filter\": <ReleaseFilter\r\n                                            SampleType={this.state.SampletypeList || []}\r\n                                            SampleTypeValue={this.props.Login.masterData.SampleTypeValue || []}\r\n                                            ReportType={this.state.ReporttypeList || []}\r\n                                            ReportTypeValue={this.props.Login.masterData.ReportTypeValue || []}\r\n                                            RegType={this.state.RegistrationTypeList || []}\r\n                                            RegTypeValue={this.props.Login.masterData.RegTypeValue || []}\r\n                                            RegSubType={this.state.RegistrationSubTypeList || []}\r\n                                            RegSubTypeValue={this.props.Login.masterData.RegSubTypeValue || []}\r\n                                            ApprovalVersion={this.state.ConfigVersionList || []}\r\n                                            ApprovalVersionValue={this.props.Login.masterData.ApprovalVersionValue || []}\r\n                                            DesignTemplateMapping={this.props.Login.masterData.DesignTemplateMapping}\r\n                                            DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || {}}\r\n                                            //   UserSection={this.state.UserSectionList || []}\r\n                                            //   UserSectionValue={this.props.Login.masterData.UserSectionValue || []}\r\n                                            //   Test={this.state.TestList || []}\r\n                                            //  TestValue={this.props.Login.masterData.TestValue || []}\r\n                                            FilterStatus={this.state.FilterStatusList || []}\r\n                                            FilterStatusValue={this.props.Login.masterData.FilterStatusValue || []}\r\n                                            fromDate={this.props.Login.masterData.fromDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.fromDate) : new Date()}\r\n                                            toDate={this.props.Login.masterData.toDate ? rearrangeDateFormat(this.props.Login.userInfo, this.props.Login.masterData.toDate) : new Date()}\r\n                                            onFilterComboChange={this.onFilterComboChange}\r\n                                            handleDateChange={this.handleDateChange}\r\n                                            userInfo={this.props.Login.userInfo}\r\n                                            onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                            DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n\r\n                                        />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                        <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                            {this.props.Login.masterData.ReleaseHistory && this.props.Login.masterData.ReleaseHistory.length > 0 && this.props.Login.masterData.selectedReleaseHistory && Object.values(this.props.Login.masterData.selectedReleaseHistory).length > 0 ?\r\n                                <ContentPanel className=\"panel-main-content\">\r\n                                    <Card className=\"border-0\">\r\n                                        <Card.Header>\r\n                                            <Card.Title className=\"product-title-main\">\r\n\r\n                                                {this.props.Login.masterData && this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno !== 0 ?\r\n                                                    this.props.intl.formatMessage({ id: \"IDS_VERSIONNUMBER\" }) + \" : \" + this.props.Login.masterData.nversionno : \"\"}\r\n\r\n                                                {/* {( this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.sreportno )\r\n                                                    +  (this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno!==0 ?'-'+ this.props.Login.masterData.nversionno: \"\") } */}\r\n                                            </Card.Title>\r\n                                            <Card.Subtitle>\r\n                                                <div className=\"d-flex product-category\">\r\n                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                        <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                            {/* <i className={activeIconCSS}></i> */}\r\n                                                            {this.props.Login.masterData.selectedReleaseHistory.stransdisplaystatus}\r\n                                                        </span>\r\n\r\n                                                    </h2>\r\n\r\n\r\n\r\n                                                    <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n                                                   \r\n\r\n                                                    {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(patientinfoId) === -1}\r\n                                                                onClick={() => this.patientInfo()}>\r\n                                                                <FontAwesomeIcon icon={faInfoCircle} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(previewId) === -1}\r\n                                                            onClick={() => this.previewReport(previewId)}\r\n\r\n                                                        >\r\n                                                            {/* <FontAwesomeIcon icon={faEye} /> */}\r\n                                                            <Preview/>\r\n\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(preliminaryId) === -1}\r\n                                                            onClick={() => this.preliminaryReport(preliminaryId)}\r\n\r\n                                                        >\r\n                                                            {/* <FontAwesomeIcon icon={faPaperclip} /> */}\r\n                                                            <PreliminaryReport className=\"custom_icons\" width=\"20\" height=\"20\"/>\r\n\r\n                                                        </Nav.Link>\r\n                                                        \r\n                                                        {/* {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) && */}\r\n                                                            {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) && \r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.props.getEditApprovedSample(EditModalParam)}\r\n\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faEdit} />\r\n\r\n                                                            </Nav.Link>\r\n                            }\r\n                                                        {/* } */}\r\n                                                        {/* {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE)) && */}\r\n                                                             {((this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nprojectspecrequired === transactionStatus.YES) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PATIENTWISE) ||\r\n                                                            (this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.MULTIPLESAMPLE)) && \r\n\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REMOVESAMPLES\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                onClick={() => this.props.getRemoveApprovedSample(RemoveModalParam)}\r\n\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrash} />\r\n\r\n                                                            </Nav.Link>\r\n    }\r\n                                                        {/* } */}\r\n                                                         \r\n                                                         <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-common-wrap\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                            onClick={() => {\r\n                                                                this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                                    this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\r\n                                                                    ? this.CorrectionComments(downloadId) : this.downloadReleasedFile(downloadId)\r\n                                                            }}>\r\n                                                            <Generate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        </Nav.Link>\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES &&\r\n\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(correctionId) === -1}\r\n                                                                onClick={() => this.CorrectionStatus(correctionId)}\r\n                                                          \r\n                                                            >\r\n                                                                <Correction className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                        \r\n                                                            \r\n                                                            </Nav.Link>\r\n                                                        \r\n                                                        }\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired === transactionStatus.YES &&\r\n\r\n\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RESULTCORRECTION\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(ResultCorrectionId) === -1}\r\n                                                                onClick={() => this.props.getResultCorrectionData(ResultCorrectionParam)}\r\n\r\n                                                            >\r\n                                                                <ResultCorrection className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                       \r\n                                                       \r\n\r\n\r\n                                                        {/* <Nav.Link\r\n\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            //   data-for=\"tooltip_list_wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(viewreportId) === -1}\r\n                                                            onClick={() => this.viewReport()}>\r\n                                                            <FontAwesomeIcon icon={faExpandArrowsAlt} />\r\n                                                        </Nav.Link> */}\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nportalrequired === transactionStatus.YES &&\r\n                                                            <Nav.Link\r\n\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_SENDTOPORTAL\" })}\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(sendtoportalId) === -1}\r\n                                                                onClick={() => this.sendToPortal(sendtoportalId)}>\r\n                                                                <FontAwesomeIcon icon={faStore} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n                                                        {this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE &&\r\n                                                            this.props.Login.masterData.realSampleTypeValue.noutsourcerequired === transactionStatus.YES &&\r\n                                                        <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(reportHistoryId) === -1}\r\n                                                                onClick={() => this.reportHistoryInfo()}>\r\n                                                                <FontAwesomeIcon icon={faFilePdf} />\r\n                                                            </Nav.Link>\r\n                                                        }\r\n\r\n                                                          {/* <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(releaseHistoryId) === -1}\r\n                                                                onClick={() => this.reportHistory(releaseHistoryId)}\r\n                                                          \r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faHistory} />                                                                                                                \r\n                                                            </Nav.Link> */}\r\n\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })} data-place=\"left\"\r\n                                                                //  data-for=\"tooltip-common-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(regenerateId) === -1}\r\n                                                                onClick={() => this.regenerateReleasedFile(regenerateId)}>\r\n                                                                <ReGenerate className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n\r\n                                                            </Nav.Link>\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASEREPORTHISTORY\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(releaseReportHistoryId) === -1}\r\n                                                                onClick={() => this.releaseReportHistory(releaseReportHistoryId)}\r\n                                                          \r\n                                                            >\r\n                                                                {/* <Correction className=\"custom_icons\" width=\"20\" height=\"20\" /> */}\r\n                                                                <FontAwesomeIcon icon={faHistory} />                                                                                                                \r\n                                                        </Nav.Link>\r\n                                                        {this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE ?\r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REPORTCORRECTION\" })} data-place=\"left\"\r\n                                                                //  data-for=\"tooltip-common-wrap\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(editcommentsId) === -1}\r\n                                                                onClick={() => this.reportcomments('IDS_REPORTCORRECTION')}>\r\n                                                                <Comment className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                            </Nav.Link>\r\n                                                            : \"\"}\r\n                                                        {this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue \r\n                                                        && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE\r\n                                                        && this.props.Login.settings && (parseInt(this.props.Login.settings[29]) === transactionStatus.YES) && \r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(releaseTestAttachmentId) === -1}\r\n                                                                onClick={() => this.releaseTestAttachmentData(\"IDS_RELEASETESTATTACHMENT\")}>\r\n                                                                <FontAwesomeIcon icon={faFile} />\r\n                                                            </Nav.Link>                                                           \r\n                                                        }\r\n\r\n                                                        {this.props.Login.masterData && this.props.Login.masterData.SampleTypeValue \r\n                                                        && this.props.Login.masterData.SampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE\r\n                                                        && this.props.Login.settings && (parseInt(this.props.Login.settings[29]) === transactionStatus.YES) && \r\n                                                            <Nav.Link\r\n                                                                className=\"btn btn-circle outline-grey ml-2\"\r\n                                                                //   data-for=\"tooltip_list_wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" })} data-place=\"left\"\r\n                                                                hidden={this.state.userRoleControlRights.indexOf(releaseTestCommentId) === -1}\r\n                                                                onClick={() => this.releaseTestAttachmentData(\"IDS_RELEASETESTCOMMENT\")}>\r\n                                                                {/* <FontAwesomeIcon icon={faComments} /> */}\r\n                                                                <TestAttachment/>\r\n                                                            </Nav.Link>                                                           \r\n                                                        }\r\n\r\n                                                        <Nav.Link\r\n                                                            className=\"btn btn-circle outline-grey ml-2\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id:\"IDS_DOWNLOADFINALREPORT\"})} data-place=\"left\"\r\n                                                            hidden={this.state.userRoleControlRights.indexOf(downloadReportId) === -1}\r\n                                                            onClick={() => this.downloadHistory(downloadReportId)}\r\n\r\n                                                        >\r\n                                                        <DownloadCertificate/>\r\n                                                        {/* <FontAwesomeIcon icon={faDownload} /> */}\r\n                                                        </Nav.Link>\r\n\r\n                                                    </ProductList>\r\n                                                </div>\r\n                                            </Card.Subtitle>\r\n                                        </Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            {/* <Row>\r\n                                                <Col md=\"4\">\r\n                                                    <FormGroup>\r\n                                                        <FormLabel>{this.props.intl.formatMessage({ id: \"IDS_REPORTNO\" })}</FormLabel>\r\n                                                        <ReadOnlyText>{this.props.Login.masterData.selectedReleaseHistory &&\r\n                                                            this.props.Login.masterData.selectedReleaseHistory.sreportno}</ReadOnlyText>\r\n                                                    </FormGroup>\r\n                                                </Col>\r\n\r\n\r\n                                            </Row> */}\r\n                                            <DataGridWithMultipleGrid\r\n                                                needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                data={this.state.data}\r\n                                                dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails || [], this.state.dataState)}\r\n                                                dataState={this.state.dataState}\r\n                                                dataStateChange={this.dataStateChange}\r\n                                                expandNextData={this.expandNextData}\r\n                                                checkFunction={this.checkFunction}\r\n                                                checkFunction1={this.checkFunction1}\r\n                                                expandFunc={this.expandFunc}\r\n                                                //expandData={this.expandData}\r\n                                                childDataResult={this.state.childDataResult}\r\n                                                subChildDataResult={this.state.subChildDataResult}\r\n                                                extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                expandField=\"expanded\"\r\n                                                reloadData={this.reloadData}\r\n                                                controlMap={this.state.controlMap}\r\n                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                inputParam={this.props.Login.inputParam}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                                pageable={true}\r\n                                                scrollable={'scrollable'}\r\n                                                gridHeight={'525px'}\r\n                                                gridTop={'10px'}\r\n                                                //   isActionRequired={true}\r\n                                                //   isToolBarRequired={true}\r\n                                                //  isExpandRequired={true}\r\n                                                //   isDownloadRequired={true}\r\n                                                isCheckBoxRequired={false}\r\n                                                isCollapseRequired={true}\r\n\r\n                                                selectedId={this.props.Login.selectedId}\r\n                                                hasChild={true}\r\n                                                hasSubChild={true}\r\n                                                childList={\r\n                                                    this.props.Login.masterData.ReleasedSubSampleDetails\r\n                                                }\r\n                                                childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                childMappingField={\"npreregno\"}\r\n                                                subChildMappingField={\"ntransactionsamplecode\"}\r\n\r\n                                                // subChildMappingField={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample ? \"ntransactionsamplecode\" : \"npreregno\"}\r\n                                                subChildList={\r\n                                                    this.props.Login.masterData.ReleasedTestDetails\r\n                                                }\r\n                                                selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                methodUrl={\"Release\"}\r\n                                                headerSelectionChange={this.headerSelectionChange}\r\n                                                childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                childSelectionChange={this.childSelectionChange}\r\n                                                subChildSelectionChange={this.subChildSelectionChange}\r\n                                                subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                selectionChange={this.selectionChange}\r\n                                                releaseRecord={this.onSaveModalClick}\r\n                                            // viewDownloadFile={this.viewDownloadFile}\r\n                                            />\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </ContentPanel>\r\n                                : \"\"\r\n                            }\r\n\r\n                        </Col>\r\n                    </Row>\r\n\r\n                </div >\r\n                {\r\n                    this.state.showReport ?\r\n                        <DocViewer file={filePath}\r\n                            showReport={this.state.showReport}\r\n                            closeModal={this.closeDocModal}\r\n                            type={\"pdf\"}>\r\n                        </DocViewer>\r\n                        : \"\"\r\n                }\r\n                {\r\n                    this.props.Login.openModal && \r\n                    <SlideOutModal \r\n                        show={this.props.Login.openModal || this.state.openModal}\r\n                        size={this.props.Login.loadEsign&&this.props.Login.loadEsign?\"lg\":\"xl\"}\r\n                        closeModal={this.closeModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        mandatoryFields={this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ?\r\n                            mandatoryFields : \"\"}\r\n                        screenName={this.props.Login.isPatientDetails ?\r\n                            this.props.intl.formatMessage({ id: \"IDS_PATIENTINFO\" })\r\n                            : this.props.Login.isPatientReports ? this.props.intl.formatMessage({ id: \"IDS_REPORTHISTORY\" }) \r\n                            : this.props.Login.isReleaseTestAttachment ? this.props.intl.formatMessage({ id: \"IDS_RELEASETESTATTACHMENT\" })\r\n                            : this.props.Login.isReleaseTestComment ? this.props.intl.formatMessage({ id: \"IDS_RELEASETESTCOMMENT\" })\r\n                            : this.props.Login.openModalTitle == 'IDS_VERSIONHISTORY' ? this.props.intl.formatMessage({ id: \"IDS_RELEASEHISTORY\" })\r\n                            : this.props.Login.screenName}\r\n                        onSaveClick={this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ? this.downloadReleasedFile : this.onSaveModalClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        //noSave={this.props.Login.openModalTitle=='versionhistory' ? true : false}\r\n                        hideSave={this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEREPORTHISTORY\" }) ||\r\n                        this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" ? true : this.props.Login.openModalTitle=='IDS_VERSIONHISTORY' ? true : (this.props.Login.isReleaseTestAttachment || this.props.Login.isReleaseTestComment) ? true : this.props.Login.hideSave}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            /> : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEREPORTHISTORY\" }) ?\r\n                            <ReleaseReportHistory\r\n                                    operation={this.props.Login.operation}\r\n                                    // designData={this.props.Login.designData || {}}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    dataResult={this.props.Login.masterData}\r\n                                //    this.props.Login.dataResult || [] :\r\n                                 //   this.props.Login.dataResult || {}}\r\n                                //onChangeToggle={this.onChangeToggle}\r\n                                    settings={this.props.Login.settings}\r\n                                    viewDownloadFile={this.viewDownloadFile}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                controlMap={this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}                            />\r\n                            :this.props.Login.screenName ===\"IDS_PATIENTSEARCH\"?\r\n                            <FilterQueryBuilder\r\n                            fields={this.props.Login.fields || {}}\r\n                            onChange={this.onChangeAwesomeQueryBuilder}\r\n                            tree={this.props.Login.awesomeTree}\r\n                            config={this.props.Login.awesomeConfig}\r\n                            skip={this.props.Login.kendoSkip}\r\n                            take={this.props.Login.kendoTake}\r\n                            handlePageChange={this.handlePageChange}\r\n                            gridColumns={this.props.Login.gridColumns || []}\r\n                            filterData={this.props.Login.lstPatient}\r\n                            onRowClick={this.handleKendoRowClick}\r\n                            handleExecuteClick={this.handleExecuteClick}\r\n                            userInfo={this.props.Login.userInfo}\r\n                        />\r\n                            :this.props.Login.openModalTitle=='IDS_VERSIONHISTORY'?\r\n                            <VersionHistGrid\r\n                                versionHistory={this.props.Login.masterData.versionHistory}\r\n                                isExportExcelRequired={false}\r\n                                dataState={this.state.versionHistoryDataState}\r\n                                dataResult={process(this.props.Login.masterData && this.props.Login.masterData.versionHistory || [], this.state.versionHistoryDataState)}\r\n                                dataStateChange={this.versionHistoryDataStateChange}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                controlMap={this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                viewDownloadFile={this.viewDownloadFile}\r\n                            />\r\n                            : this.props.Login.isPatientDetails ?\r\n                                <SampleInfoView\r\n                                    data={(this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails.length > 0) ?\r\n                                        this.props.Login.masterData.ReleasedSampleDetails[this.props.Login.masterData.ReleasedSampleDetails.length - 1] : {}}\r\n                                    SingleItem={this.props.Login.masterData.ReleasedSampleDetails && this.props.Login.masterData.ReleasedSampleDetails ?\r\n                                        this.state.SingleItem : []}\r\n                                    screenName=\"IDS_SAMPLEINFO\"\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                />\r\n                                : this.props.Login.isPatientReports && this.props.Login.openModal ? \r\n                                <DataGrid\r\n                                        // key=\"nreleaseoutsourceattachcode\"\r\n                                        primaryKeyField=\"nreleaseoutsourceattachcode\"\r\n                                        data={this.props.Login.masterData.PatientReports || []}\r\n                                        dataResult={process(this.props.Login.masterData.PatientReports && this.props.Login.masterData.PatientReports || [], this.state.outsourceFileDataState)}\r\n                                        dataState={this.state.outsourceFileDataState}\r\n                                        isExportExcelRequired={false}\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        extractedColumnList={this.fieldsForReleasedReportGrid}\r\n                                        selectedId={this.props.Login.selectedId}\r\n                                        pageable={true}\r\n                                        dataStateChange={this.outsourceFileDataStateChange}\r\n                                        scrollable={'scrollable'}\r\n                                        gridHeight={'630px'}\r\n                                        isActionRequired={true}\r\n                                        methodUrl={'PatientReports'}\r\n                                        viewDownloadFile={this.viewSelectedReport}\r\n                                    >\r\n                                    </DataGrid>\r\n                                : this.props.Login.isReleaseTestAttachment && this.props.Login.openModal ? \r\n                                <ReleaseTestAttachment\r\n                                    ReleaseTestAttachmentDetails={this.props.Login.masterData.ReleaseTestAttachmentDetails || []}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    methodUrl={'ReleaseTestAttachment'}\r\n                                    settings={this.props.Login.settings}\r\n                                    isAddRequired={true}\r\n                                    isRefreshRequired={false}      \r\n                                    isImportRequired={false}  \r\n                                    isDownloadPDFRequired={false}\r\n                                    isDownloadExcelRequired={false}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    screenName={\"ReleaseTestAttachment\"}\r\n                                    maxSize={20}\r\n                                    masterData={this.props.Login.masterData}\r\n                                />\r\n                                : this.props.Login.isReleaseTestComment && this.props.Login.openModal ? \r\n                                <ReleaseTestComment\r\n                                    ReleaseTestCommentDetails={this.props.Login.masterData.ReleaseTestCommentDetails || []}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    storeUserRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    methodUrl={'ReleaseTestComment'}\r\n                                    settings={this.props.Login.settings}\r\n                                    isAddRequired={true}\r\n                                    isRefreshRequired={false}      \r\n                                    isImportRequired={false}  \r\n                                    isDownloadPDFRequired={false}\r\n                                    isDownloadExcelRequired={false}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    screenName={\"ReleaseTestComment\"}\r\n                                    maxSize={20}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    CommentSubType={this.props.Login.masterData.CommentSubType}\r\n                                />\r\n                                : this.props.Login.screenName === \"IDS_REPORTINFOCOMMENT\" && this.props.Login.openModal ?\r\n                                    <DataGrid\r\n                                        key=\"reportinforeleasecode\"\r\n                                        primaryKeyField=\"nreportinforeleasecode\"\r\n                                        data={this.props.Login.masterData.reportinforelease || []}\r\n                                        dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState)}\r\n                                        dataState={this.state.reportInfoDataState}\r\n                                        //dataResult={this.props.selectedWorklist || []}\r\n                                        //expandField=\"expanded\"\r\n                                        isExportExcelRequired={false}\r\n                                        //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                                        controlMap={this.state.controlMap}\r\n                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                        extractedColumnList={this.feildsForGrid}\r\n                                        detailedFieldList={this.props.detailedFieldList}\r\n                                        editParam={editReportParam}\r\n                                        selectedId={this.props.Login.selectedId}\r\n                                        fetchRecord={this.props.fetchReportInfoReleaseById}\r\n                                        pageable={true}\r\n                                        dataStateChange={this.reportInfoDataChange}\r\n                                        scrollable={'scrollable'}\r\n                                        gridHeight={'630px'}\r\n                                        isActionRequired={true}\r\n                                        methodUrl={'ReportComment'}\r\n                                    // actionIcons={[{\r\n                                    //     title: this.props.intl.formatMessage({ id: \"IDS_PREVIOUSRESULTVIEW\" }),\r\n                                    //     controlname: \"faEye\",\r\n                                    //     objectName: \"ExceptionLogs\",\r\n                                    //     hidden: -1 === -1,\r\n                                    //    onClick: (viewSample) => this.props.viewSample(viewSample)\r\n                                    // }]}\r\n                                    >\r\n                                    </DataGrid>\r\n                                    : this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ?\r\n                                        <Row>\r\n                                            <Col md={12}>\r\n                                                <FormInput\r\n                                                    label={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                    name=\"sreportcomments\"\r\n                                                    type=\"text\"\r\n                                                    onChange={(event) => this.onInputOnChange(event)}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                                                    value={this.state.selectedRecord[\"sreportcomments\"] ? this.state.selectedRecord[\"sreportcomments\"] : \"\"}\r\n                                                    isMandatory={true}\r\n                                                    required={true}\r\n                                                    maxLength={255}\r\n                                                />\r\n                                            </Col>\r\n                                        </Row>\r\n                                        :\r\n                                        <>\r\n                                            <Row>\r\n                                                {\r\n                                                (this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                    //  this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                                    //  (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                    this.props.Login.masterData.realReportTypeValue\r\n                                                    && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                        this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE||this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) && \r\n                                                        this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                                                        this.props.Login.isDeletePopup !== true &&\r\n                                                    this.props.Login.isComboCheck !== true &&\r\n                                                    this.props.Login.isEditPopup !== true &&\r\n                                                    this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_RELEASEREPORTHISTORY\" }) &&\r\n                                                    \r\n                                                    <Col md={4}>\r\n\r\n                                                        <FormSelectSearch\r\n                                                            name={\"nprojecttypecode\"}\r\n                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                            options={this.props.Login.ProjectTypeList}\r\n                                                            value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                            defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojecttypecode\"] : \"\"}\r\n                                                            isMandatory={true}\r\n                                                            isMulti={false}\r\n                                                            isSearchable={true}\r\n                                                          //  isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                            closeMenuOnSelect={true}\r\n                                                            alphabeticalSort={true}\r\n                                                            onChange={(event) => this.onComboChange(event, 'nprojecttypecode', 1)}\r\n                                                        />\r\n\r\n                                                    </Col>\r\n                                                }\r\n                                                {(this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                    // this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE ||\r\n                                                    // (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) &&\r\n                                                    this.props.Login.masterData.realReportTypeValue\r\n                                                    && (this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                        this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE||this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.PROJECTWISE) && \r\n                                                        this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE &&\r\n                                                    this.props.Login.isDeletePopup !== true &&\r\n                                                    this.props.Login.isComboCheck !== true &&\r\n                                                    this.props.Login.isEditPopup !== true &&\r\n                                                    this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\" &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_RELEASEREPORTHISTORY\" }) &&\r\n\r\n                                                    <Col md={4}>\r\n\r\n                                                        <FormSelectSearch\r\n                                                            name={\"nprojectmastercode\"}\r\n                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                            options={this.props.Login.projectMasterList}\r\n                                                            value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"]!==undefined ?this.props.Login.selectedRecord[\"nprojectmastercode\"] :\"\" : \"\"}\r\n                                                            defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nprojectmastercode\"] : \"\"}\r\n                                                            isMandatory={true}\r\n                                                            isMulti={false}\r\n                                                            isSearchable={true}\r\n                                                           // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                            closeMenuOnSelect={true}\r\n                                                            alphabeticalSort={true}\r\n                                                            onChange={(event) => this.onComboChange(event, 'nprojectmastercode', 1)}\r\n                                                        />\r\n\r\n                                                    </Col>\r\n                                                }\r\n                                                {(this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) &&\r\n                                                    this.props.Login.masterData.realReportTypeValue &&\r\n                                                    (this.props.Login.masterData.realReportTypeValue.isneedsection === transactionStatus.YES ||this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISE ||\r\n                                                    this.props.Login.masterData.realReportTypeValue.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) &&\r\n                                                    this.props.Login.isDeletePopup !== true &&\r\n                                                    this.props.Login.isComboCheck !== true && this.props.Login.isEditPopup !== true &&\r\n                                                    <Col md={4}>\r\n                                                        <FormSelectSearch\r\n                                                            name={\"nsectioncode\"}\r\n                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_SECTION\" })}\r\n                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                                            options={this.props.Login.sectionList}\r\n                                                            value={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"]!==undefined ?this.props.Login.selectedRecord[\"nsectioncode\"] :\"\" : \"\"}\r\n                                                            defaultValue={this.props.Login.selectedRecord ? this.props.Login.selectedRecord[\"nsectioncode\"] : \"\"}\r\n                                                            isMandatory={true}\r\n                                                            isMulti={false}\r\n                                                            isSearchable={true}\r\n                                                           // isDisabled={this.props.Login.isEditPopup === true ? true : false}\r\n                                                            closeMenuOnSelect={true}\r\n                                                            alphabeticalSort={true}\r\n                                                            onChange={(event) => this.onComboChange(event, 'nsectioncode', 1)}\r\n                                                        />\r\n\r\n                                                    </Col>\r\n                                                }\r\n\r\n\r\n\r\n                                                {this.props.Login.ReportmodalShow ? (\r\n                                                    <ModalShow\r\n                                                        modalShow={this.props.Login.ReportmodalShow}\r\n                                                        closeModal={this.closeModalShow}\r\n                                                        onSaveClick={this.onSaveModalClick}\r\n                                                        validateEsign={this.validateEsign}\r\n                                                        masterStatus={this.props.Login.masterStatus}\r\n                                                        //  mandatoryFields={mandatoryFields}\r\n                                                        updateStore={this.props.updateStore}\r\n                                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                                        modalTitle={this.props.Login.modalTitle}\r\n                                                        modalBody={\r\n                                                            this.props.Login.loadEsign ?\r\n                                                                <Esign\r\n                                                                    operation={this.props.Login.operation}\r\n                                                                    onInputOnChange={this.onEsignInputOnChange}\r\n                                                                    inputParam={this.props.Login.inputParam}\r\n                                                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                                                /> :\r\n\r\n\r\n                                                                <Col md={12}>\r\n\r\n                                                                    <FormTextarea\r\n                                                                        label={this.props.intl.formatMessage({ id: this.props.Login.masterData.selectedComment.sreportfieldname })}\r\n                                                                        name={\"sreportfieldvalue\"}\r\n                                                                        type=\"text\"\r\n                                                                        onChange={this.onInputChange}\r\n                                                                        placeholder={this.props.intl.formatMessage({ id: this.props.Login.masterData.selectedComment.sreportfieldname })}\r\n                                                                        value={this.state.selectedComment ? this.state.selectedComment.sreportfieldvalue : \"\"}\r\n                                                                        isMandatory={true}\r\n                                                                        required={true}\r\n                                                                        maxLength={\"500\"}\r\n                                                                    />\r\n                                                                </Col>\r\n\r\n                                                        }\r\n                                                    />\r\n                                                ) : (\r\n                                                    \"\"\r\n                                                )}\r\n\r\n                                            </Row>\r\n\r\n                                            {this.props.Login.isCorrectionNeed && this.props.Login.isCorrectionNeed ?\r\n                                                <DataGrid\r\n                                                    primaryKeyField={\"ntransactionresultcode\"}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    data={this.props.Login.masterData.ResultCorrection}\r\n                                                    dataResult={process(this.props.Login.masterData.ResultCorrection && this.props.Login.masterData.ResultCorrection || [], this.state.correctionDataState)}\r\n                                                    dataState={this.state.correctionDataState}\r\n                                                    dataStateChange={this.correctionDataStateChange}\r\n                                                    extractedColumnList={resultCorrectionColumnList}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    inputParam={this.props.Login.inputParam}\r\n                                                    methodUrl={\"Result\"}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    fetchRecord={this.props.fetchParameterById}\r\n                                                    deleteRecord={this.deleteRecord}\r\n                                                    //  reloadData={this.reloadData}\r\n                                                    //  addRecord={() => this.props.openProductCategoryModal(\"IDS_PRODUCTCATEGORY\", addId,this.props.Login.settings)}\r\n                                                    editParam={editParam}\r\n                                                    //  deleteParam={deleteParam}\r\n                                                    scrollable={'scrollable'}\r\n                                                    gridHeight={'600px'}\r\n                                                    isActionRequired={true}\r\n                                                    //  isToolBarRequired={true}\r\n                                                    pageable={true}\r\n                                                /> :\r\n                                                (this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) && this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) &&\r\n                                                    this.props.Login.screenName !== this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })) && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENT\" && this.props.Login.screenName !== \"IDS_REPORTINFOCOMMENTS\"  ?\r\n                                                    <DataGridWithMultipleGrid\r\n                                                        needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                        data={this.state.data}\r\n                                                        dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                                        dataState={this.state.dataState}\r\n                                                        dataStateChange={this.dataStateChange}\r\n                                                        expandNextData={this.expandNextData}\r\n                                                        checkFunction={this.checkFunction}\r\n                                                        checkFunction1={this.checkFunction1}\r\n                                                        expandFunc={this.expandFunc}\r\n                                                        childDataResult={this.state.childDataResult}\r\n                                                        subChildDataResult={this.state.subChildDataResult}\r\n                                                        extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                        subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                        expandField=\"expanded\"\r\n                                                        handleExpandChange={this.handleExpandChange}\r\n                                                        childHandleExpandChange={this.childHandleExpandChange}\r\n                                                        isCheckBoxRequired={true}\r\n\r\n                                                        reloadData={this.reloadData}\r\n                                                        controlMap={this.state.controlMap}\r\n                                                        userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        inputParam={this.props.Login.inputParam}\r\n                                                        userInfo={this.props.Login.userInfo}\r\n                                                        pageable={true}\r\n                                                        scrollable={'scrollable'}\r\n                                                        gridHeight={'600px'}\r\n                                                        gridTop={'10px'}\r\n                                                        // isActionRequired={true}\r\n                                                        //   isToolBarRequired={true}\r\n                                                        //  isExpandRequired={true}\r\n                                                        //   isDownloadRequired={true}\r\n                                                        isCollapseRequired={true}\r\n\r\n                                                        selectedId={this.props.Login.selectedId}\r\n                                                        hasChild={true}\r\n                                                        hasSubChild={true}\r\n                                                        childList={\r\n                                                            this.props.Login.masterData.searchedData2 ||\r\n                                                            this.props.Login.masterData.ReleaseSubSample\r\n                                                        }\r\n                                                        childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                        childMappingField={\"npreregno\"}\r\n                                                        subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                        subChildList={\r\n                                                            this.props.Login.masterData.searchedData3 ||\r\n                                                            this.props.Login.masterData.ReleaseTest\r\n                                                        }\r\n                                                        selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                        methodUrl={\"Release\"}\r\n                                                        headerSelectionChange={this.headerSelectionChange}\r\n                                                        childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                        childSelectAll={this.props.Login.childSelectAll}\r\n                                                        childSelectionChange={this.childSelectionChange}\r\n                                                        subChildSelectionChange={this.subChildSelectionChange}\r\n                                                        subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                        subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                        selectionChange={this.selectionChange}\r\n                                                        selectAll={this.props.Login.selectAll}\r\n                                                        releaseRecord={this.onSaveModalClick}\r\n                                                    // viewDownloadFile={this.viewDownloadFile}\r\n                                                    />\r\n                                                    :\r\n                                                    this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ?\r\n                                                        <DataGrid\r\n                                                            key=\"reportinforeleasecode\"\r\n                                                            primaryKeyField=\"nreportinforeleasecode\"\r\n                                                            data={this.props.Login.masterData.reportinforelease || []}\r\n                                                            dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.reportInfoDataState)}\r\n                                                            dataState={this.state.reportInfoDataState}\r\n                                                            //dataResult={this.props.selectedWorklist || []}\r\n                                                            //expandField=\"expanded\"\r\n                                                            isExportExcelRequired={false}\r\n                                                            //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                                                            controlMap={this.state.controlMap}\r\n                                                            userRoleControlRights={this.state.userRoleControlRights}\r\n                                                            extractedColumnList={this.feildsForGrid}\r\n                                                            detailedFieldList={this.props.detailedFieldList}\r\n                                                            editParam={editParam}\r\n                                                            fetchRecord={this.props.fetchReportInfoReleaseById}\r\n                                                            pageable={true}\r\n                                                            dataStateChange={this.reportInfoDataChange}\r\n                                                            scrollable={'scrollable'}\r\n                                                            gridHeight={'630px'}\r\n                                                            isActionRequired={true}\r\n                                                            methodUrl={'ReportComment'}\r\n                                                        >\r\n                                                        </DataGrid> :\r\n                                                        //     <DataGridWithMultipleGrid\r\n                                                        //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                                                        //     data={this.state.data}\r\n                                                        //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                                                        //     dataState={this.state.dataState}\r\n                                                        //     dataStateChange={this.dataStateChange}\r\n                                                        //     expandNextData={this.expandNextData}\r\n                                                        //     checkFunction={this.checkFunction}\r\n                                                        //     checkFunction1={this.checkFunction1}\r\n                                                        //     expandFunc={this.expandFunc}\r\n                                                        //     childDataResult={this.state.childDataResult}\r\n                                                        //     subChildDataResult={this.state.subChildDataResult}\r\n                                                        //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                                                        //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                                                        //     expandField=\"expanded\"\r\n                                                        //     handleExpandChange={this.handleExpandChange}\r\n                                                        //     childHandleExpandChange={this.childHandleExpandChange}\r\n                                                        //     isCheckBoxRequired={true}\r\n\r\n                                                        //     reloadData={this.reloadData}\r\n                                                        //     controlMap={this.state.controlMap}\r\n                                                        //     userRoleControlRights={this.state.userRoleControlRights}\r\n                                                        //     inputParam={this.props.Login.inputParam}\r\n                                                        //     userInfo={this.props.Login.userInfo}\r\n                                                        //     pageable={true}\r\n                                                        //     scrollable={'scrollable'}\r\n                                                        //     gridHeight={'600px'}\r\n                                                        //     gridTop={'10px'}\r\n                                                        //    // isActionRequired={true}\r\n                                                        //     //   isToolBarRequired={true}\r\n                                                        //     //  isExpandRequired={true}\r\n                                                        //     //   isDownloadRequired={true}\r\n                                                        //     isCollapseRequired={true}\r\n\r\n                                                        //     selectedId={this.props.Login.selectedId}\r\n                                                        //     hasChild={true}\r\n                                                        //     hasSubChild={true}\r\n                                                        //     childList={\r\n                                                        //         this.props.Login.masterData.searchedData2 ||\r\n                                                        //         this.props.Login.masterData.ReleaseSubSample\r\n                                                        //     }\r\n                                                        //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                                                        //     childMappingField={\"npreregno\"}\r\n                                                        //     subChildMappingField={\"ntransactionsamplecode\"}\r\n                                                        //     subChildList={\r\n                                                        //         this.props.Login.masterData.searchedData3 ||\r\n                                                        //         this.props.Login.masterData.ReleaseTest\r\n                                                        //     }\r\n                                                        //     selectedsubcild={this.props.Login.selectedsubcild}\r\n                                                        //     methodUrl={\"Release\"}\r\n                                                        //     headerSelectionChange={this.headerSelectionChange}\r\n                                                        //     childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                                                        //     childSelectAll={this.props.Login.childSelectAll}\r\n                                                        //     childSelectionChange={this.childSelectionChange}\r\n                                                        //     subChildSelectionChange={this.subChildSelectionChange}\r\n                                                        //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                                                        //     subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                                                        //     selectionChange={this.selectionChange}\r\n                                                        //     selectAll={this.props.Login.selectAll}\r\n                                                        //     releaseRecord={this.onSaveModalClick}\r\n                                                        //    // viewDownloadFile={this.viewDownloadFile}\r\n                                                        // />\r\n                                                        \"\"\r\n                                            }\r\n\r\n                                            {/* {this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\" && this.props.Login.openModal ?\r\n                      <DataGrid \r\n                            key=\"reportinforeleasecode\"\r\n                            primaryKeyField=\"nreportinforeleasecode\"\r\n                            data={this.props.Login.masterData.reportinforelease || []}\r\n                            dataResult={process(this.props.Login.masterData.reportinforelease && this.props.Login.masterData.reportinforelease || [], this.state.dataState)}\r\n                            dataState={this.state.dataState}\r\n                            //dataResult={this.props.selectedWorklist || []}\r\n                            //expandField=\"expanded\"\r\n                            isExportExcelRequired = {false}\r\n                            //dataStateChange={(event) => this.setState({ sampleDataState: event.dataState })}\r\n                            controlMap={this.state.controlMap}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            extractedColumnList={this.feildsForGrid}\r\n                            detailedFieldList={this.props.detailedFieldList}\r\n                            editParam={editParam}   \r\n                            fetchRecord={this.props.fetchReportInfoReleaseById}                         \r\n                            pageable={true}\r\n                            dataStateChange={this.dataStateChange}\r\n                            scrollable={'scrollable'}\r\n                            gridHeight={'630px'}\r\n                             isActionRequired={true}\r\n                            methodUrl={'ReportComment'}\r\n                        >\r\n                        </DataGrid>:\r\n                    //     <DataGridWithMultipleGrid\r\n                    //     needSubSample={this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample || false}\r\n                    //     data={this.state.data}\r\n                    //     dataResult={process(this.props.Login.masterData.searchedData1 && this.props.Login.masterData.searchedData1 || this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample || [], this.state.dataState)}\r\n                    //     dataState={this.state.dataState}\r\n                    //     dataStateChange={this.dataStateChange}\r\n                    //     expandNextData={this.expandNextData}\r\n                    //     checkFunction={this.checkFunction}\r\n                    //     checkFunction1={this.checkFunction1}\r\n                    //     expandFunc={this.expandFunc}\r\n                    //     childDataResult={this.state.childDataResult}\r\n                    //     subChildDataResult={this.state.subChildDataResult}\r\n                    //     extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n                    //     subChildColumnList={this.gridfillingColumn(this.state.DynamicTestGridItem) || []}\r\n\r\n                    //     expandField=\"expanded\"\r\n                    //     handleExpandChange={this.handleExpandChange}\r\n                    //     childHandleExpandChange={this.childHandleExpandChange}\r\n                    //     isCheckBoxRequired={true}\r\n\r\n                    //     reloadData={this.reloadData}\r\n                    //     controlMap={this.state.controlMap}\r\n                    //     userRoleControlRights={this.state.userRoleControlRights}\r\n                    //     inputParam={this.props.Login.inputParam}\r\n                    //     userInfo={this.props.Login.userInfo}\r\n                    //     pageable={true}\r\n                    //     scrollable={'scrollable'}\r\n                    //     gridHeight={'600px'}\r\n                    //     gridTop={'10px'}\r\n                    //    // isActionRequired={true}\r\n                    //     //   isToolBarRequired={true}\r\n                    //     //  isExpandRequired={true}\r\n                    //     //   isDownloadRequired={true}\r\n                    //     isCollapseRequired={true}\r\n\r\n                    //     selectedId={this.props.Login.selectedId}\r\n                    //     hasChild={true}\r\n                    //     hasSubChild={true}\r\n                    //     childList={\r\n                    //         this.props.Login.masterData.searchedData2 ||\r\n                    //         this.props.Login.masterData.ReleaseSubSample\r\n                    //     }\r\n                    //     childColumnList={this.gridfillingColumn(this.state.DynamicSubSampleGridItem) || []}\r\n                    //     childMappingField={\"npreregno\"}\r\n                    //     subChildMappingField={\"ntransactionsamplecode\"}\r\n                    //     subChildList={\r\n                    //         this.props.Login.masterData.searchedData3 ||\r\n                    //         this.props.Login.masterData.ReleaseTest\r\n                    //     }\r\n                    //     selectedsubcild={this.props.Login.selectedsubcild}\r\n                    //     methodUrl={\"Release\"}\r\n                    //     headerSelectionChange={this.headerSelectionChange}\r\n                    //     childHeaderSelectionChange={this.childHeaderSelectionChange}\r\n                    //     childSelectAll={this.props.Login.childSelectAll}\r\n                    //     childSelectionChange={this.childSelectionChange}\r\n                    //     subChildSelectionChange={this.subChildSelectionChange}\r\n                    //     subChildHeaderSelectionChange={this.subChildHeaderSelectionChange}\r\n                    //     subChildSelectAll={this.props.Login.subChildSelectAll}\r\n                    //     selectionChange={this.selectionChange}\r\n                    //     selectAll={this.props.Login.selectAll}\r\n                    //     releaseRecord={this.onSaveModalClick}\r\n                    //    // viewDownloadFile={this.viewDownloadFile}\r\n                    // />\r\n                    \"\"\r\n                        } */}\r\n                                        </>\r\n                        }\r\n                    />\r\n                }\r\n                {this.props.Login.modalShow ? (\r\n                    <ModalShow\r\n                        modalShow={this.props.Login.modalShow}\r\n                        closeModal={this.closeModalShow}\r\n                        onSaveClick={this.onSaveModalResultClick}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        //  mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        modalTitle={this.props.Login.modalTitle}\r\n                        modalBody={\r\n                            this.props.Login.loadEsign ?\r\n                                <Esign\r\n                                    operation={this.props.Login.operation}\r\n                                    onInputOnChange={this.onEsignInputOnChange}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                /> :\r\n                                this.state.selectedRecord.ReleaseParameter &&\r\n                                this.state.selectedRecord.ReleaseParameter.map((parameterResult, index) => {\r\n                                    return <ResultEntryForm\r\n                                        index={index}\r\n\r\n                                        ResultParameter={[...this.state.selectedRecord.ReleaseParameter]}\r\n                                        predefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        defaultPredefinedValues={this.props.Login.masterData.PredefinedValues}\r\n                                        gradeValues={this.props.Login.masterData.GradeValues || []}\r\n                                        selectedNumericData={this.props.Login.masterData.selectedNumericData}\r\n                                        selectedResultGrade={this.state.selectedRecord.selectedResultGrade || []}\r\n                                        paremterResultcode={this.props.Login.masterData.paremterResultcode || []}\r\n                                        parameterResults={parameterResult\r\n                                            || []}\r\n                                        Login={this.props.Login}\r\n                                        handleClose={this.handleClose}\r\n                                        onSaveClick={this.onSaveClick}\r\n                                        onResultInputChange={this.onResultInputChange}\r\n                                        //onGradeEvent={this.onGradeEvent}\r\n                                        getFormula={this.getFormula}\r\n                                        onDropTestFile={this.onDropTestFile}\r\n                                        onKeyPress={this.onKeyPress}\r\n                                        //deleteAttachmentParamFile={this.deleteAttachmentParameterFile}\r\n                                        viewAdditionalInfo={this.viewAdditionalInfo}\r\n                                        needSubSample={this.props.Login.masterData.realRegSubTypeValue.nneedsubsample}\r\n                                        needdelete={true}\r\n                                        needmandatory={true}\r\n                                    //intl={this.props.intl}\r\n                                    />\r\n                                })\r\n                        }\r\n                    />\r\n                ) : (\r\n                    \"\"\r\n                )}\r\n\r\n            </>\r\n        );\r\n    }\r\n    onKeyPress = (event, index, paremterResultcode) => {\r\n        if (event.keyCode === 13) {\r\n            for (let i = 0; i < event.target.form.elements.length; i++) {\r\n                if (parseInt(event.target.form.elements[i].id) === paremterResultcode[index + 1]) {\r\n                    event.target.form.elements[i].focus();\r\n                    break;\r\n                }\r\n            }\r\n            event.preventDefault();\r\n        }\r\n    }\r\n    onResultInputChange = (parameterResults) => {\r\n        this.setState({\r\n            parameterResults: [...parameterResults],\r\n            isParameterInitialRender: false\r\n            // currentAlertResultCode,\r\n            //  currentntestgrouptestpredefcode\r\n        });\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        if (comboData !== null) {\r\n            const selectedRecord = this.state.selectedRecord || {};\r\n            selectedRecord[fieldName] = comboData;\r\n            this.setState({ selectedRecord });\r\n        }\r\n\r\n        if (fieldName === 'nprojecttypecode') {\r\n            const inputParamData = {\r\n\r\n                nsampletypecode: this.props.Login.masterData.SampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.RegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.RegSubTypeValue.nregsubtypecode,\r\n                nprojecttypecode: comboData.value,\r\n                userinfo: this.props.Login.userInfo,\r\n                masterData: this.props.Login.masterData,\r\n            }\r\n            this.props.getApprovedProjectByProjectType(inputParamData)\r\n        }\r\n        if (fieldName === 'nprojectmastercode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            //let realFromDate = obj.fromDate;\r\n            //let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, //realFromDate, realToDate, \r\n                realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nprojectmastercode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n\r\n           let selectedRecord={...this.props.Login.selectedRecord}\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData,\r\n                    selectedRecord\r\n                    \r\n                }\r\n                if (inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE || inputData.isneedsection === transactionStatus.YES) {\r\n                    this.props.getSectionForSectionWise(inputParam)\r\n                }\r\n                else {\r\n                    this.props.getReleasedSample(inputParam)\r\n                }\r\n            }\r\n        }\r\n        if (fieldName === 'nsectioncode') {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            let realFromDate = obj.fromDate;\r\n            let realToDate = obj.toDate\r\n            let realSampleTypeValue = this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue\r\n            let realRegTypeValue = this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue\r\n            let realRegSubTypeValue = this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue\r\n            let realFilterStatusValue = this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue\r\n            let realApprovalVersionValue = this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue\r\n            let realUserSectionValue = this.props.Login.masterData.UserSectionValue && this.props.Login.masterData.UserSectionValue\r\n            let realTestValue = this.props.Login.masterData.TestValue && this.props.Login.masterData.TestValue\r\n            let realReportTypeValue = this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue\r\n            let realDesignTemplateMappingValue = this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue\r\n            let masterData = {\r\n                ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue,\r\n                realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue, realUserSectionValue, realTestValue, realDesignTemplateMappingValue, realReportTypeValue\r\n            }\r\n            let inputData = {\r\n                npreregno: \"0\",\r\n                nsampletypecode: (this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue.nsampletypecode) || -1,\r\n                nregtypecode: parseInt(this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue.nregtypecode) || -1,\r\n                nregsubtypecode: parseInt(this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nregsubtypecode) || -1,\r\n                ncoareporttypecode: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                ntransactionstatus: ((this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== undefined) || this.props.Login.masterData.FilterStatusValue.ntransactionstatus !== '0') ? String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) : \"-1\",\r\n                nsectioncode: comboData.value,\r\n                napprovalconfigcode: this.props.Login.masterData.ApprovalVersionValue ? this.props.Login.masterData.ApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode) : null,\r\n                ntestcode: this.props.Login.masterData.TestValue ? this.props.Login.masterData.TestValue.ntestcode : -1,\r\n                nneedsubsample: (this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                userinfo: this.props.Login.userInfo,\r\n                nprojectmastercode: this.props.Login.selectedRecord.nprojectmastercode && this.props.Login.selectedRecord.nprojectmastercode.value || -1,\r\n                // ModalStatusValue: true,\r\n                isPopup: true,\r\n                isAddPopup: true,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode\r\n                    ? this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode : this.props.Login.masterData.DesignTemplateMappingValue) || -1\r\n            }\r\n            if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n                && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n                && realFilterStatusValue.sfilterstatus !== null) {\r\n\r\n                inputData['dfrom'] = obj.fromDate;\r\n                inputData['dto'] = obj.toDate;\r\n                let inputParam = {\r\n                    masterData,\r\n                    inputData\r\n                }\r\n\r\n                this.props.getReleasedSample(inputParam)\r\n            }\r\n        }\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let closeModal = true;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedComment = this.props.Login.masterData.selectedComment;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n        } else {\r\n            modalShow = false;\r\n            ReportmodalShow = false;\r\n            selectedRecord = {};\r\n            selectedComment = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign, closeModal, selectedComment, ReportmodalShow },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n\r\n    downloadHistory = (downloadReportId) => {\r\n    if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                // change: this.props.Login.change,\r\n                // npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                //ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                //ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                //ncoareporthistorycode:filedata.inputData.ncoareporthistorycode,\r\n                //ntransactionstatus: String(transactionStatus.RELEASED),\r\n                //nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n\r\n                // napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                // nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                // nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                action: \"Download\",\r\n                doAction: \"preview\",\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                //openModal:true,\r\n                userInfo: this.props.Login.userInfo,\r\n                ncontrolCode:downloadReportId\r\n            },\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })\r\n\r\n        }\r\n        this.props.downloadHistory(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n      }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n       }\r\n    }\r\n\r\n\r\n    previewReport = (previewId) => {\r\n    if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus ==transactionStatus.DRAFT){\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                nflag: 2,\r\n                change: this.props.Login.change,\r\n                ncontrolcode:previewId,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) ,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                userinfo: this.props.Login.userInfo,\r\n                \r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nreporttypecode: REPORTTYPE.COAPREVIEW,\r\n                sprimarykeyname: \"npreregno\",\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                napproveconfversioncode:this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                action :'DOWNLOADFILE',\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                doAction: \"download\",\r\n                nprojectcode:(this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode )||-1,\r\n                reportSectionCode:this.props.Login.masterData.reportSectionCode?this.props.Login.masterData.reportSectionCode:-1,\r\n\r\n                \r\n            },\r\n            userinfo: this.props.Login.userInfo,\r\n            screenName:this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })\r\n        }\r\n                   const masterData = this.props.Login.masterData;\r\n                  if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,previewId)) {\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                openModal:true,\r\n                                modalShow: false,\r\n                                loadEsign: true,\r\n                                screenData: { inputParam, masterData },\r\n                                screenName: inputParam.screenName,\r\n                                ncontrolcode:previewId,\r\n                                operation: \"download\"\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n                    }\r\n        }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_FINALREPORTGEN\" }));\r\n        }\r\n    }\r\n    preliminaryReport = (preliminaryId) => {\r\n        if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus ==transactionStatus.DRAFT){\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n            const inputParam = {\r\n                inputData: {\r\n                    nflag: 2,\r\n                    change: this.props.Login.change,\r\n                    ncontrolcode:preliminaryId,\r\n                    ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                    npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                    ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                    ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                    url: this.props.Login.settings[24],\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                    ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) ,\r\n                    nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                    nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                    nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    \r\n                    nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                    ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                    isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                    nreporttypecode: REPORTTYPE.COAPRELIMINARY,\r\n                    sprimarykeyname: \"npreregno\",\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    napproveconfversioncode:this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                    nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                    nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                    dfrom: obj.fromDate,\r\n                    dto: obj.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    action :'preliminary',\r\n                    ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                    doAction: \"preliminary\",\r\n                    nprojectcode:(this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode )||-1,\r\n                    reportSectionCode:this.props.Login.masterData.reportSectionCode?this.props.Login.masterData.reportSectionCode:-1,\r\n\r\n                    \r\n                },\r\n                userinfo: this.props.Login.userInfo,\r\n                screenName:this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })\r\n            }\r\n                       const masterData = this.props.Login.masterData;\r\n                      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,preliminaryId)) {\r\n    \r\n                            const updateInfo = {\r\n                                typeName: DEFAULT_RETURN,\r\n                                data: {\r\n                                    openModal:true,\r\n                                    modalShow: false,\r\n                                    loadEsign: true,\r\n                                    screenData: { inputParam, masterData },\r\n                                    screenName: inputParam.screenName,\r\n                                    ncontrolcode:preliminaryId,\r\n                                    operation: \"preliminary\"\r\n                                }\r\n                            }\r\n                            this.props.updateStore(updateInfo);\r\n                        }\r\n                        else {\r\n                            this.props.preliminaryReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n    \r\n                        }\r\n            }else{\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_FINALREPORTGEN\" }));\r\n            }\r\n        }\r\n    // previewReport = (previewId) => {\r\n\r\n    //     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n    //     const inputParam = {\r\n    //         inputData: {\r\n    //             nflag: 2,\r\n    //             change: this.props.Login.change,\r\n    //             ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n    //             npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n    //             ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n    //             url: this.props.Login.settings[24],\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n    //             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n    //             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n    //             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n    //             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n    //             userinfo: this.props.Login.userInfo,\r\n\r\n    //             nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n    //             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n    //             nreporttypecode: REPORTTYPE.COAREPORT,\r\n    //             sprimarykeyname: \"npreregno\",\r\n    //             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n    //             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n    //             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n    //             dfrom: obj.fromDate,\r\n    //             dto: obj.toDate,\r\n    //             userinfo: this.props.Login.userInfo,\r\n    //             action: 'DOWNLOADFILE',\r\n    //             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n    //             doAction: \"download\",\r\n\r\n    //         },\r\n    //         userinfo: this.props.Login.userInfo,\r\n    //         screenName: this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })\r\n    //     }\r\n    //     const masterData = this.props.Login.masterData;\r\n    //     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, previewId)) {\r\n\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 openModal: true,\r\n    //                 modalShow: false,\r\n    //                 loadEsign: true,\r\n    //                 screenData: { inputParam, masterData },\r\n    //                 screenName: inputParam.screenName,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n    //         this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n    //                     const updateInfo = {\r\n    //                         typeName: DEFAULT_RETURN,\r\n    //                         data: {\r\n    //                             openModal:true,\r\n    //                             modalShow: false,\r\n    //                             loadEsign: true,\r\n    //                             screenData: { inputParam, masterData },\r\n    //                             screenName: inputParam.screenName,\r\n    //                         }\r\n    //                     }\r\n    //                     this.props.updateStore(updateInfo);\r\n    //                 }\r\n    //                 else {\r\n    //                     this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n    //                     const updateInfo = {\r\n    //                         typeName: DEFAULT_RETURN,\r\n    //                         data: {\r\n    //                             openModal:true,\r\n    //                             modalShow: false,\r\n    //                             loadEsign: true,\r\n    //                             screenData: { inputParam, masterData },\r\n    //                             screenName: inputParam.screenName,\r\n    //                             ncontrolcode:previewId\r\n    //                         }\r\n    //                     }\r\n    //                     this.props.updateStore(updateInfo);\r\n    //                 }\r\n    //                 else {\r\n    //                     this.props.previewAndFinalReport(inputParam, this.props.Login.masterData,inputParam.screenName)\r\n\r\n    //     }\r\n    // }\r\n    CorrectionComments = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                loadEsign: false,\r\n                screenData: { masterData: this.props.Login.masterData },\r\n                operation: this.props.Login.operation,\r\n                openModal: true,\r\n                screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }),\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    downloadReleasedFile = () => {\r\n        const downloadId =this.state.controlMap.has(\"ReleaseReportGeneration\") &&this.state.controlMap.get(\"ReleaseReportGeneration\").ncontrolcode;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncontrolcode:downloadId,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                // ntransactionsamplecode: ntransactionsamplecode,\r\n                //ntransactiontestcode: ntransactiontestcode,\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                listStatus: this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                // nsectioncode: -1,\r\n                sreportcomments: this.state.selectedRecord && this.state.selectedRecord.sreportcomments ? this.state.selectedRecord.sreportcomments : \"\",\r\n                nversionno: this.props.Login.masterData.nversionno && this.props.Login.masterData.nversionno ? this.props.Login.masterData.nversionno : 0,\r\n                action: \"Generatefile\",\r\n                doAction: \"generate\",\r\n                nflag: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                nprojectcode:this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode&&this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode,\r\n                reportSectionCode:this.props.Login.masterData.reportSectionCode?this.props.Login.masterData.reportSectionCode:-1,\r\n                isSMTLFlow: parseInt(this.props.Login.settings[29]),\r\n                ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\r\n                confirmMessage: this.confirmMessage\r\n            },\r\n            userinfo: this.props.Login.userInfo,\r\n            methodUrl: \"ReleaseAfterCorrection\",\r\n            classUrl: \"release\",\r\n            operation: \"update\",\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" })\r\n\r\n        }\r\n\r\n        const masterData = this.props.Login.masterData;\r\n        // if (this.props.Login.masterData.selectedReleaseHistory && this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus === transactionStatus.CORRECTION\r\n        //              && this.state.selectedRecord && this.state.selectedRecord.sreportcomments===\"\" || this.state.selectedRecord.sreportcomments===undefined) {\r\n        //                 toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERDESCRIPTION\" }));  \r\n\r\n        // }\r\n        //     else{\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, downloadId)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    ncontrolcode: downloadId,\r\n                    openModal: true,\r\n                    modalShow: false,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: this.props.Login.operation,\r\n                    screenName: inputParam.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.generateReleasedReport(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n\r\n        }\r\n        // }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    reportcomments = () => {\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                // ntransactionsamplecode: ntransactionsamplecode,\r\n                //ntransactiontestcode: ntransactiontestcode,\r\n\r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n                // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                // nsectioncode: -1,\r\n                nflag: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo\r\n        }\r\n        this.props.getreportcomments(inputParam.inputData, this.props.Login.masterData)\r\n\r\n    }\r\n    // regenerateReleasedFile = (action) => {\r\n    regenerateReleasedFile = (regenerateId) => {\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                sreportno: this.props.Login.masterData.selectedReleaseHistory.sreportno,\r\n                ReleasedSampleDetails: this.props.Login.masterData.ReleasedSampleDetails,\r\n                ntransactionstatus: String(transactionStatus.RELEASED),\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                noutsourcerequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.noutsourcerequired,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                napproveconfversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                nflag: 2,\r\n                userinfo: this.props.Login.userInfo,\r\n                sreportcomments: \"\",\r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                action: \"Regenerate\",\r\n                doAction: \"download\",\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                ncontrolcode:regenerateId,\r\n                nprojectcode:(this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode && this.props.Login.masterData.ReleasedSampleDetails[0].nprojectmastercode )||-1,\r\n                reportSectionCode:this.props.Login.masterData.reportSectionCode?this.props.Login.masterData.reportSectionCode:-1,\r\n\r\n            },\r\n            userinfo: this.props.Login.userInfo,\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" })\r\n\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, regenerateId)) {\r\n\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    ncontrolcode: regenerateId,\r\n                    openModal: true,\r\n                    modalShow: false,\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    screenName: inputParam.screenName,\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.previewAndFinalReport(inputParam, this.props.Login.masterData, inputParam.screenName)\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    CorrectionStatus = (correctionId) => {\r\n      \r\n        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n       // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \r\n        const inputParam = {\r\n            inputData: {\r\n                change: this.props.Login.change,\r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n                ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n                url: this.props.Login.settings[24],\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n               // ntransactionsamplecode: ntransactionsamplecode,\r\n                //ntransactiontestcode: ntransactiontestcode,\r\n                \r\n                ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n                // nTransStatus: ntransCode,\r\n                // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n                //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n                //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n               // ntransactionstatus: String(transactionStatus.RELEASED),\r\n                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus) ,\r\n                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                dfrom: obj.fromDate,\r\n                dto: obj.toDate,\r\n                userinfo: this.props.Login.userInfo,\r\n                // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n                // ncontrolCode,\r\n                nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                nreporttypecode: REPORTTYPE.COAREPORT,\r\n                sprimarykeyname: \"npreregno\",\r\n                doAction:\"correction\",\r\n                nflag: 2,\r\n                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n            },\r\n            userinfo: this.props.Login.userInfo,\r\n            methodUrl: \"CorrectionStatus\",\r\n            classUrl: \"release\",\r\n            operation: \"update\",\r\n            screenName:this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n       }\r\n                    const masterData = this.props.Login.masterData;\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,correctionId)) {\r\n\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                ncontrolcode:correctionId,\r\n                                openModal:true,\r\n                                modalShow: false,\r\n                                loadEsign: true,\r\n                                operation: \"update\",\r\n                                screenData: { inputParam, masterData },\r\n                                screenName: inputParam.screenName,\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }\r\n                    else {\r\n                        this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n\r\n                    }\r\n\r\n\r\n\r\n    }\r\n//     CorrectionStatus = (correctionId) => {\r\n\r\n//         let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n//         // const correctionId =this.state.controlMap.has(\"Correction\") &&this.state.controlMap.get(\"Correction\").ncontrolcode; \r\n//         const inputParam = {\r\n//             inputData: {\r\n//                 change: this.props.Login.change,\r\n//                 ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n//                 npreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n//                 ntransactionsamplecode: this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n//                 ntransactiontestcode: this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n//                 url: this.props.Login.settings[24],\r\n//                 nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n//                 // ntransactionsamplecode: ntransactionsamplecode,\r\n//                 //ntransactiontestcode: ntransactiontestcode,\r\n\r\n//                 ntestcode: this.props.Login.masterData.realTestValue && this.props.Login.masterData.realTestValue.ntestcode,\r\n//                 // nTransStatus: ntransCode,\r\n//                 // ntransactionstatus: ((this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus \r\n//                 //     !== undefined) || this.props.Login.masterData.realFilterStatusValue.ntransactionstatus !== '0')\r\n//                 //      ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) : \"-1\",\r\n\r\n//                 // ntransactionstatus: String(transactionStatus.RELEASED),\r\n//                 ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n//                 nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n//                 nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n//                 nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n//                 nclinicaltyperequired: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nclinicaltyperequired,\r\n//                 napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n//                 nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n//                 nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n//                 dfrom: obj.fromDate,\r\n//                 dto: obj.toDate,\r\n//                 userinfo: this.props.Login.userInfo,\r\n//                 // retestcount: action.ntransactionstatus === transactionStatus.RETEST ? this.state.selectedRecord ? this.state.selectedRecord.retestcount || 1 : 1 : undefined,\r\n//                 // ncontrolCode,\r\n//                 nprimarykey: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n//                 ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n//                 nreporttypecode: REPORTTYPE.COAREPORT,\r\n//                 sprimarykeyname: \"npreregno\",\r\n//                 doAction: \"correction\",\r\n//                 nflag: 2,\r\n//                 ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1\r\n//             },\r\n//             userinfo: this.props.Login.userInfo,\r\n//             methodUrl: \"CorrectionStatus\",\r\n//             classUrl: \"release\",\r\n//             operation: \"update\",\r\n//             screenName: this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n//         }\r\n//         const masterData = this.props.Login.masterData;\r\n//         if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, correctionId)) {\r\n\r\n// <<<<<<< .mine\r\n//             const updateInfo = {\r\n//                 typeName: DEFAULT_RETURN,\r\n//                 data: {\r\n//                     ncontrolcode: correctionId,\r\n//                     openModal: true,\r\n//                     modalShow: false,\r\n//                     loadEsign: true,\r\n//                     screenData: { inputParam, masterData },\r\n//                     screenName: inputParam.screenName,\r\n//                 }\r\n//             }\r\n//             this.props.updateStore(updateInfo);\r\n//         }\r\n//         else {\r\n//             this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData, inputParam.screenName)\r\n// ||||||| .r76787\r\n//                         const updateInfo = {\r\n//                             typeName: DEFAULT_RETURN,\r\n//                             data: {\r\n//                                 ncontrolcode:correctionId,\r\n//                                 openModal:true,\r\n//                                 modalShow: false,\r\n//                                 loadEsign: true,\r\n//                                 screenData: { inputParam, masterData },\r\n//                                 screenName: inputParam.screenName,\r\n//                             }\r\n//                         }\r\n//                         this.props.updateStore(updateInfo);\r\n//                     }\r\n//                     else {\r\n//                         this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n// =======\r\n//                         const updateInfo = {\r\n//                             typeName: DEFAULT_RETURN,\r\n//                             data: {\r\n//                                 ncontrolcode:correctionId,\r\n//                                 openModal:true,\r\n//                                 modalShow: false,\r\n//                                 loadEsign: true,\r\n//                                 operation: \"update\",\r\n//                                 screenData: { inputParam, masterData },\r\n//                                 screenName: inputParam.screenName,\r\n//                             }\r\n//                         }\r\n//                         this.props.updateStore(updateInfo);\r\n//                     }\r\n//                     else {\r\n//                         this.props.updateCorrectionStatus(inputParam.inputData, this.props.Login.masterData,inputParam.screenName)\r\n// >>>>>>> .r76792\r\n\r\n//         }\r\n\r\n\r\n\r\n//     }\r\n    onSaveModalResultClick = (saveType, data) => {\r\n\r\n        let ReleaseParameter = this.state.parameterResults || this.props.Login.parameterResults && this.props.Login.parameterResults[0];\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        let selectedId = this.props.Login.selectedId || null;\r\n        let additionalInfo = this.state.selectedRecord.additionalInfo || [];\r\n        const nregtypecode = parseInt(this.props.Login.masterData.realRegTypeValue.nregtypecode);\r\n        const nregsubtypecode = parseInt(this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode);\r\n        const ndesigntemplatemappingcode = parseInt(this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode);\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        const classUrl = \"release\";\r\n        const formData = new FormData();\r\n        let neditable = 0;\r\n        let releaseParameters = [];\r\n        let inputParam = {};\r\n        let inputData = [];\r\n        let i = 0;\r\n        if (ReleaseParameter.length > 0 && ReleaseParameter !== undefined && ReleaseParameter[0].sresult !== \"\") {\r\n            ReleaseParameter.map((resultData, index) => {\r\n                let results = {};\r\n                if (resultData.editable === true) {\r\n                    neditable = 1;\r\n                    switch (resultData.nparametertypecode) {\r\n                        case 1:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: resultData[\"ncalculatedresult\"],\r\n                                sresult: resultData.sresult,\r\n                                sfinal: resultData.sresult !== \"\" ? numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\"\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"ncalculatedresult\"] = resultData[\"ncalculatedresult\"];\r\n                            results[\"sresult\"] = resultData.sresult;\r\n                            results[\"sfinal\"] = resultData.sresult !== \"\" ?\r\n                                numberConversion(parseFloat(resultData.sresult), parseInt(resultData.nroundingdigits)) : \"\";\r\n                            results[\"ngradecode\"] = resultData.sresult !== \"\" ?\r\n                                numericGrade(resultData, results[\"sfinal\"]) : -1;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n\r\n                            break;\r\n                        case 2:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: 4,\r\n                                sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                sfinal: Lims_JSON_stringify(resultData.sfinal, false),\r\n                                sresultcomment: resultData.sresultcomment === 'null' ? \"-\" : resultData.sresultcomment,\r\n                                salertmessage: resultData.salertmessage,\r\n                                additionalInfo: resultData['additionalInfo'],\r\n                                additionalInfoUidata: resultData['additionalInfoUidata'] === undefined ? \"\" : resultData['additionalInfoUidata'],\r\n                                ntestgrouptestpredefcode: resultData.ntestgrouptestpredefcode\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"sresult\"] = resultData.sresult;\r\n\r\n                            results[\"ncalculatedresult\"] = 4;\r\n                            results[\"sfinal\"] = resultData.sresult;\r\n                            results[\"ngradecode\"] = resultData.ngradecode;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n\r\n                            break;\r\n                        case 3:\r\n                            results[\"jsondata\"] = {\r\n                                ncalculatedresult: 4,\r\n                                sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                            }\r\n                            results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                            results[\"sresult\"] = resultData.sresult;\r\n                            results[\"ncalculatedresult\"] = 4;\r\n                            results[\"sfinal\"] = resultData.sresult;\r\n                            results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                            results['nenteredrole'] = this.props.Login.userInfo.nuserrole;\r\n                            results['nenteredby'] = this.props.Login.userInfo.nusercode;\r\n                            results['ntransactionresultcode'] = resultData.ntransactionresultcode;\r\n                            results['ntransactiontestcode'] = resultData.ntransactiontestcode;\r\n                            results['nparametertypecode'] = resultData.nparametertypecode;\r\n\r\n                            break;\r\n                        case 4:\r\n                            if (resultData.sfinal.length > 0) {\r\n                                const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                const uniquefilename = create_UUID() + '.' + fileExtension;\r\n                                results[\"jsondata\"] = {\r\n                                    ssystemfilename: uniquefilename,\r\n                                    nfilesize: resultData.sfinal[0] && resultData.sfinal[0].size,\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: Lims_JSON_stringify(resultData.sresult, false),\r\n                                    sfinal: Lims_JSON_stringify(resultData.sresult, false)\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sresult\"] = resultData.sresult;\r\n                                results[\"sfinal\"] = resultData.sresult;\r\n                                results[\"ngradecode\"] = resultData.sresult.trim() === \"\" ? -1 : ResultEntry.RESULTSTATUS_FIO;\r\n                                results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results[\"ssystemfilename\"] = uniquefilename;\r\n                                results[\"nfilesize\"] = resultData.sfinal[0] && resultData.sfinal[0].size;\r\n                                formData.append(\"uploadedFile\" + index, resultData.sfinal[0] && resultData.sfinal[0]);\r\n                                formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                                formData.append(\"ntransactiontestcode\", resultData.ntransactiontestcode);\r\n                                i++;\r\n                            }\r\n                            else {\r\n                                const splittedFileName = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.') : \"\";\r\n                                const fileExtension = resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].name.split('.')[splittedFileName.length - 1] : \"\";\r\n                                const uniquefilename = \"\";\r\n                                results[\"jsondata\"] = {\r\n                                    ssystemfilename: uniquefilename,\r\n                                    nfilesize: resultData.sfinal ? resultData.sfinal[0] && resultData.sfinal[0].size : \"\",\r\n                                    ncalculatedresult: 4,\r\n                                    sresult: \"\",\r\n                                    sfinal: \"\"\r\n                                }\r\n                                results[\"jsonstring\"] = JSON.stringify(results[\"jsondata\"]);\r\n                                results[\"ncalculatedresult\"] = 4;\r\n                                results[\"sresult\"] = \"\";\r\n                                results[\"sfinal\"] = \"\";\r\n                                results[\"ngradecode\"] = -1;\r\n                                results[\"nenteredrole\"] = this.props.Login.userInfo.nuserrole;\r\n                                results[\"nenteredby\"] = this.props.Login.userInfo.nusercode;\r\n                                results[\"ntransactionresultcode\"] = resultData.ntransactionresultcode;\r\n                                results[\"ntransactiontestcode\"] = resultData.ntransactiontestcode;\r\n                                results['nparametertypecode'] = resultData.nparametertypecode;\r\n                                results[\"ssystemfilename\"] = \"\";\r\n                                results[\"nfilesize\"] = \"\";\r\n                                formData.append(\"uploadedFile\" + index, \"\");\r\n                                formData.append(\"uniquefilename\" + index, \"\");\r\n                                formData.append(\"ntransactiontestcode\", \"\");\r\n                            }\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    if (Object.values(results).length > 0) {\r\n                        releaseParameters.push(results);\r\n                    }\r\n                }\r\n                return null;\r\n            });\r\n\r\n            if (neditable === 0) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { loading: false, openModal: false, parameterResults: [], selectedRecord: {} }\r\n                }\r\n                return this.props.updateStore(updateInfo);\r\n            }\r\n\r\n            formData.append(\"filecount\", i);\r\n            formData.append(\"nregtypecode\", nregtypecode);\r\n            formData.append(\"nregsubtypecode\", nregsubtypecode);\r\n            formData.append(\"ncoaparentcode\", this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode);\r\n            formData.append(\"ncontrolcode\", this.props.Login.ncontrolcode);\r\n            formData.append(\"ndesigntemplatemappingcode\", ndesigntemplatemappingcode);\r\n\r\n            formData.append(\"resultData\", JSON.stringify(releaseParameters));\r\n            inputParam = {\r\n                classUrl: classUrl,\r\n                methodUrl: \"ReleaseParameter\",\r\n                inputData: { userinfo: this.props.Login.userInfo, doAction: \"editresult\" },\r\n                formData: formData,\r\n                isFileupload: true,\r\n                operation: \"update\",\r\n                displayName: this.props.Login.inputParam.displayName, saveType//, postParam\r\n            }\r\n\r\n\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, editResultId)) {\r\n\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true,\r\n                        modalShow: false,\r\n                        openModal: true,\r\n                        ncontrolcode: editResultId,\r\n                        screenData: { inputParam, masterData }, saveType\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"modalShow\");\r\n            }\r\n        }\r\n        // else {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: { loading: false, openModal: false }\r\n        //     }\r\n        //     return this.props.updateStore(updateInfo);\r\n        // }\r\n        else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERRESULT\" }));\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    onSaveModalClick = () => {\r\n        //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\r\n        if(this.props.Login.screenName===\"IDS_REPORTINFOCOMMENTS\")\r\n        {\r\n            this.props.UpdateReportComments (this.props.Login.userInfo, this.props.Login.masterData) \r\n        }\r\n        else {\r\n                let ntransactionsamplecode = \"\"\r\n                let ntransactiontestcode = \"\"\r\n                let npreregno = \"\"\r\n                if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n                    if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n                        let sample = this.state.npreregno.filter((c, index) => {\r\n                            return this.state.npreregno.indexOf(c) === index;\r\n                        });\r\n                        let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n                            return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n                        });\r\n                        let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n                            return this.state.ntransactiontestcode.indexOf(c) === index;\r\n                        });\r\n                        \r\n                        npreregno = sample.map(x => x).join(\",\")\r\n                        ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n                        ntransactiontestcode = test.map(x => x).join(\",\")\r\n                        let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n                        const inputParam = {\r\n                            inputData: {\r\n                                change: this.props.Login.change,\r\n                                npreregno: String(npreregno),\r\n                                ntransactionsamplecode: ntransactionsamplecode,\r\n                                ntransactiontestcode: ntransactiontestcode,\r\n                                // ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n                                //     && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\r\n                                ncoaparentcode:  this.props.Login.masterData&&this.props.Login.masterData.selectedReleaseHistory\r\n                                ? this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode:-1,\r\n                                url: this.props.Login.settings[24],\r\n                                ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n                                nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n                                ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n                                isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n                                nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n                                nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n                                napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n                                nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n                                nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n                                dfrom: obj.fromDate,\r\n                                dto: obj.toDate,\r\n                              //  isPopup:true,\r\n                                isAddPopup: false,\r\n                                isEditPopup: false,\r\n                                nflag: 2,\r\n                                userinfo: this.props.Login.userInfo,\r\n                                ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n                                doAction:this.props.Login.operation===\"save\"? \"saveasdraft\":this.props.Login.operation===\"delete\"?\"removesample\":\"appendsample\",\r\n                                isSMTLFlow: parseInt(this.props.Login.settings[29])\r\n                            },\r\n                            userinfo: this.props.Login.userInfo,\r\n                            methodUrl: \"Release\",\r\n                            classUrl: \"release\",\r\n                            operation:this.props.Login.operation\r\n                        }\r\n                      \r\n                            const masterData = this.props.Login.masterData;\r\n                            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode,this.props.Login.ncontrolCode)) {\r\n        \r\n                                const updateInfo = {\r\n                                    typeName: DEFAULT_RETURN,\r\n                                    data: {\r\n                                        loadEsign: true,\r\n                                        screenData: { inputParam, masterData },\r\n                                        operation:this.props.Login.operation,\r\n                                        screenName: this.props.Login.screenName,\r\n                                        ncontrolcode:this.props.Login.ncontrolCode\r\n                                    }\r\n                                }\r\n                                this.props.updateStore(updateInfo);\r\n                            }\r\n                            else {\r\n                                if (this.props.Login.isDeletePopup) {\r\n                                    this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n                                }\r\n                                else if (this.props.Login.isEditPopup) {\r\n                                    this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \r\n                                }\r\n                                else {\r\n                                    this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\r\n                                }\r\n                            }\r\n                        \r\n                    }\r\n                    else {\r\n                        toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n                    }\r\n                }\r\n                else {\r\n                    toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n                }\r\n               \r\n                   \r\n                }\r\n        \r\n            }\r\n//     onSaveModalClick = () => {\r\n//         //if(this.props.Login.masterData.selectedComment && this.props.Login.masterData.selectedComment !==0)\r\n//         if (this.props.Login.screenName === \"IDS_REPORTINFOCOMMENTS\") {\r\n//             this.props.UpdateReportComments(this.props.Login.userInfo, this.props.Login.masterData)\r\n//         }\r\n//         else {\r\n//             let ntransactionsamplecode = \"\"\r\n//             let ntransactiontestcode = \"\"\r\n//             let npreregno = \"\"\r\n//             if (this.props.Login.masterData.ReleaseSample && this.props.Login.masterData.ReleaseSample.length !== 0) {\r\n//                 if (this.state.npreregno && this.state.npreregno.length > 0) {\r\n//                     let sample = this.state.npreregno.filter((c, index) => {\r\n//                         return this.state.npreregno.indexOf(c) === index;\r\n//                     });\r\n//                     let subsample = this.state.ntransactionsamplecode.filter((c, index) => {\r\n//                         return this.state.ntransactionsamplecode.indexOf(c) === index;\r\n//                     });\r\n//                     let test = this.state.ntransactiontestcode.filter((c, index) => {\r\n//                         return this.state.ntransactiontestcode.indexOf(c) === index;\r\n//                     });\r\n\r\n//                     npreregno = sample.map(x => x).join(\",\")\r\n//                     ntransactionsamplecode = subsample.map(x => x).join(\",\")\r\n//                     ntransactiontestcode = test.map(x => x).join(\",\")\r\n//                     let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo)\r\n//                     const inputParam = {\r\n//                         inputData: {\r\n//                             change: this.props.Login.change,\r\n//                             npreregno: String(npreregno),\r\n//                             ntransactionsamplecode: ntransactionsamplecode,\r\n//                             ntransactiontestcode: ntransactiontestcode,\r\n//                             ncoaparentcode: this.props.Login.isEditPopup || this.props.Login.isDeletePopup ? this.props.Login.masterData.selectedReleaseHistory\r\n//                                 && this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode : -1,\r\n//                             url: this.props.Login.settings[24],\r\n//                             ntransactionstatus: String(this.props.Login.masterData.FilterStatusValue.ntransactionstatus),\r\n//                             nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n//                             ncoareporttypecode: this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode,\r\n//                             nregtypecode: this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode,\r\n//                             nregsubtypecode: this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode,\r\n//                             napprovalversioncode: this.props.Login.masterData.ApprovalVersionValue.napprovalconfigversioncode,\r\n//                             nneedsubsample: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n//                             nneedtemplatebasedflow: (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n//                             dfrom: obj.fromDate,\r\n//                             dto: obj.toDate,\r\n//                             isAddPopup: false,\r\n//                             isEditPopup: false,\r\n//                             nflag: 2,\r\n//                             userinfo: this.props.Login.userInfo,\r\n//                             ndesigntemplatemappingcode: (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n//                             doAction: this.props.Login.operation === \"save\" ? \"saveasdraft\" : this.props.Login.operation === \"delete\" ? \"removesample\" : \"appendsample\",\r\n//                         },\r\n//                         userinfo: this.props.Login.userInfo,\r\n//                         methodUrl: \"Release\",\r\n//                         classUrl: \"release\",\r\n//                         operation: this.props.Login.operation\r\n//                     }\r\n\r\n//                     const masterData = this.props.Login.masterData;\r\n//                     if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n\r\n//                         const updateInfo = {\r\n//                             typeName: DEFAULT_RETURN,\r\n//                             data: {\r\n//                                 loadEsign: true,\r\n//                                 screenData: { inputParam, masterData },\r\n//                                 operation: this.props.Login.operation,\r\n//                                 screenName: this.props.Login.screenName,\r\n//                                 ncontrolcode:this.props.Login.ncontrolCode\r\n//                             }\r\n//                         }\r\n//                         this.props.updateStore(updateInfo);\r\n//                     }\r\n//                     else {\r\n//                         if (this.props.Login.isDeletePopup) {\r\n//                             this.props.getDeleteApprovedSample(inputParam.inputData, this.props.Login.masterData)\r\n//                         }\r\n//                         else if (this.props.Login.isEditPopup) {\r\n// <<<<<<< .mine\r\n//                             this.props.UpdateApprovedSample(this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)\r\n// ||||||| .r76787\r\n//                             this.props.UpdateApprovedSample (this.props.Login.userInfo, this.props.Login.masterData, inputParam.inputData)  \r\n// =======\r\n//                             this.props.UpdateApprovedSample (inputParam.inputData, this.props.Login.masterData)  \r\n// >>>>>>> .r76792\r\n//                         }\r\n//                         else {\r\n//                             this.props.getApprovedRecordsAsDraft(inputParam.inputData, this.props.Login.masterData)\r\n//                         }\r\n//                     }\r\n\r\n//                 }\r\n//                 else {\r\n//                     toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n//                 }\r\n//             }\r\n//             else {\r\n//                 toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTANYONESAMPLE\" }));\r\n//             }\r\n\r\n\r\n//         }\r\n\r\n//     }\r\n    componentDidUpdate(previousProps) {\r\n        let { userRoleControlRights, controlMap,\r\n            SampleGridItem,\r\n            selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n            RegistrationSubTypeList, FilterStatusList, ConfigVersionList,\r\n            //UserSectionList, TestList,\r\n            SingleItem, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem,\r\n            stateDynamicDesign, checkedflag, dataState, selectedComment } = this.state;\r\n\r\n        let bool = false;\r\n        let reportFilePath = \"\";\r\n\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            reportFilePath = this.props.Login.masterData.ReportPDFFile;\r\n\r\n            bool = true;\r\n        }\r\n        // else {\r\n        //     if (this.state.dataState === undefined) {\r\n        //         dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n        //     }\r\n        //     //  const npreregno =  [];\r\n        //     //  const ntransactionsamplecode = this.props.Login.ntransactionsamplecode || [];\r\n        //     //  const ntransactiontestcode = this.props.Login.ntransactiontestcode || [];\r\n        //     bool = true;\r\n\r\n        // }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n\r\n            selectedRecord = this.props.Login.selectedRecord\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.checkedflag !== previousProps.Login.checkedflag) {\r\n\r\n            checkedflag = this.props.Login.checkedflag\r\n            bool = true;\r\n        }\r\n        // if (this.props.Login.npreregno !== previousProps.Login.npreregno) {\r\n\r\n        //     npreregno = this.props.Login.npreregno\r\n        //     bool = true;\r\n        // }\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const SampletypeListMap = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'ascending', 'nsampletypecode', false);\r\n            const ReporttypeListMap = constructOptionList(this.props.Login.masterData.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", 'ascending', 'ncoareporttypecode', false);\r\n            // const ProjecttypeListMap = constructOptionList(this.props.Login.masterData.ProjectType || [], \"nprojecttypecode\", \"sprojecttypename\", 'ascending', 'nprojecttypecode', false);\r\n            // const ProjectMasterListMap = constructOptionList(this.props.Login.masterData.ProjectMaster || [], \"nprojectmastercode\", \"sprojectcode\", 'ascending', 'nprojectmastercode', false);           \r\n            const RegistrationTypeListMap = constructOptionList(this.props.Login.masterData.RegType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            const RegistrationSubTypeListMap = constructOptionList(this.props.Login.masterData.RegSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            const FilterStatusListMap = constructOptionList(this.props.Login.masterData.FilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\", undefined, undefined, true);\r\n            const ConfigVersionListMap = constructOptionList(this.props.Login.masterData.ApprovalVersion || [], \"napprovalconfigversioncode\", \"sversionname\", 'descending', 'ntransactionstatus', false);\r\n            const TestListMap = constructOptionList(this.props.Login.masterData.Test || [], \"ntestcode\", \"stestsynonym\", undefined, undefined, true);\r\n            SampletypeList = SampletypeListMap.get(\"OptionList\");\r\n            ReporttypeList = ReporttypeListMap.get(\"OptionList\");\r\n            // ProjecttypeList = ProjecttypeListMap.get(\"OptionList\");\r\n            //ProjectMasterList = ProjectMasterListMap.get(\"OptionList\");\r\n            RegistrationTypeList = RegistrationTypeListMap.get(\"OptionList\");\r\n            RegistrationSubTypeList = RegistrationSubTypeListMap.get(\"OptionList\");\r\n            FilterStatusList = FilterStatusListMap.get(\"OptionList\");\r\n            ConfigVersionList = ConfigVersionListMap.get(\"OptionList\");\r\n            //  UserSectionList = UserSectionListMap.get(\"OptionList\");\r\n            //   TestList = TestListMap.get(\"OptionList\");\r\n            \r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData.selectedComment !== previousProps.Login.masterData.selectedComment) {\r\n            selectedComment = this.props.Login.masterData.selectedComment;\r\n            bool = true;\r\n        }\r\n\r\n\r\n\r\n\r\n        if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n            const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);\r\n            DynamicGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n            DynamicTestGridItem = dynamicColumn.testListFields.releasetestfields ? dynamicColumn.testListFields.releasetestfields : [];\r\n            DynamicSubSampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];\r\n            SingleItem = dynamicColumn.sampledisplayfields ? dynamicColumn.sampledisplayfields : [];\r\n\r\n            bool = true;\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n            selectedRecord['fromDate'] = obj.fromDate;\r\n            selectedRecord['toDate'] = obj.toDate;\r\n\r\n            bool = true;\r\n        }\r\n        if (this.props.Login.masterData.DesignTemplateMapping !== previousProps.Login.masterData.DesignTemplateMapping) {\r\n\r\n            const DesignTemplateMappingMap = constructOptionList(this.props.Login.masterData.DesignTemplateMapping || [], \"ndesigntemplatemappingcode\",\r\n                \"sregtemplatename\", undefined, undefined, false);\r\n\r\n            stateDynamicDesign = DesignTemplateMappingMap.get(\"OptionList\")\r\n        }\r\n\r\n        if (bool) {\r\n            bool = false;\r\n            let allData = {\r\n                userRoleControlRights, controlMap,\r\n                SampleGridItem, selectedRecord, SampletypeList, RegistrationTypeList, ReporttypeList,\r\n                RegistrationSubTypeList, FilterStatusList, ConfigVersionList, selectedComment,\r\n                //UserSectionList, TestList,\r\n                SingleItem, DynamicGridItem, DynamicTestGridItem, DynamicSubSampleGridItem, stateDynamicDesign, checkedflag,\r\n                data: this.props.Login.data || this.props.Login.masterData.ReleaseSample || [],\r\n                dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n\r\n                dataResult: process(this.props.Login.data || this.props.Login.masterData.ReleaseSample || [], this.state.dataState),\r\n                reportFilePath\r\n            }\r\n            if (this.props.Login.isAddPopup && this.props.Login.isAddPopup === true\r\n                || this.props.Login.isEditPopup && this.props.Login.isEditPopup === true\r\n                || this.props.Login.isDeletePopup && this.props.Login.isDeletePopup === true) {\r\n                this.setState({ ...allData, npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] });\r\n\r\n            }\r\n            else {\r\n                this.setState(allData);\r\n            }\r\n\r\n        }\r\n\r\n        else if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n\r\n    }\r\n    sendToPortal = () => {\r\n        const inputParam = {\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            url: this.props.Login.settings[24],\r\n            isPortal: true,\r\n            ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n            allPreregno: this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n            nsampletypecode: this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode,\r\n            userinfo: this.props.Login.userInfo,\r\n            masterData : this.props.Login.masterData\r\n        }\r\n        this.props.getReportForPortal(inputParam)\r\n\r\n    }\r\n\r\n\r\n    reportHistory = () =>{\r\n        if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\r\n        let inputParam ={\r\n            ncoaparentcode : this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n            spreregno:this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n            stransactionsamplecode:this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n            stransactiontestcode:this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n            userInfo: this.props.Login.userInfo,\r\n            masterData:this.props.Login.masterData\r\n        }\r\n        this.props.versionHistory(inputParam)\r\n       }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n       }\r\n    }\r\n    releaseReportHistory = () =>{\r\n        //if(this.props.Login.masterData.selectedReleaseHistory.ntransactionstatus!==transactionStatus.DRAFT){\r\n        let inputParam ={\r\n            ncoaparentcode : this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n            spreregno:this.props.Login.masterData.selectedReleaseHistory.spreregno,\r\n            stransactionsamplecode:this.props.Login.masterData.selectedReleaseHistory.stransactionsamplecode,\r\n            stransactiontestcode:this.props.Login.masterData.selectedReleaseHistory.stransactiontestcode,\r\n            userInfo: this.props.Login.userInfo,\r\n            masterData: this.props.Login.masterData,\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_RELEASEREPORTHISTORY\" })\r\n        }\r\n        this.props.releaseReportHistory(inputParam)\r\n    //    }else{\r\n    //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTRELEASEDRECORD\" }));\r\n    //    }\r\n    }\r\n    patientInfo = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { isPatientDetails: true, openModal: true, hideSave: true, isAddPopup: false, isEditPopup: false, isDeletePopup: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    reportHistoryInfo = () => {\r\n        const inputParam = {\r\n            inputData: { \r\n                userinfo: this.props.Login.userInfo, \r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode\r\n            },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        this.props.viewReportHistory(inputParam);\r\n    }\r\n\r\n    releaseTestAttachmentData = (actionName) => {\r\n        const inputParam = {\r\n            inputData: { \r\n                userinfo: this.props.Login.userInfo, \r\n                ncoaparentcode: this.props.Login.masterData.selectedReleaseHistory.ncoaparentcode,\r\n                actionName: actionName\r\n            },\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        this.props.viewReleaseTestAttachment(inputParam);\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        delete this.props.Login.masterData[\"searchedData\"]\r\n\r\n        this.props.Login.change = false\r\n        let { realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue,\r\n            realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue } = this.props.Login.masterData\r\n        let masterData = {\r\n            ...this.props.Login.masterData, realFromDate, realToDate, realSampleTypeValue, realRegTypeValue, realRegSubTypeValue, realFilterStatusValue, realApprovalVersionValue,\r\n            // realUserSectionValue, realTestValue,\r\n            realReportTypeValue\r\n        }\r\n        let inputData = {\r\n            npreregno: \"0\",\r\n            nneedsubsample: (realRegSubTypeValue && realRegSubTypeValue.nneedsubsample) || false,\r\n            nneedtemplatebasedflow: (realRegSubTypeValue && realRegSubTypeValue.nneedtemplatebasedflow) || false,\r\n            nsampletypecode: (realSampleTypeValue && realSampleTypeValue.nsampletypecode) || -1,\r\n            nregtypecode: (realRegTypeValue && realRegTypeValue.nregtypecode) || -1,\r\n            nregsubtypecode: (realRegSubTypeValue && realRegSubTypeValue.nregsubtypecode) || -1,\r\n            ncoareporttypecode: (realReportTypeValue && realReportTypeValue.ncoareporttypecode) || -1,\r\n            isneedsection: parseInt(realReportTypeValue && realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n\r\n            ntransactionstatus: ((realFilterStatusValue && realFilterStatusValue.ntransactionstatus !== undefined) || realFilterStatusValue.ntransactionstatus !== '0') ? String(realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.RELEASED) : \"-1\",\r\n            napprovalconfigcode: realApprovalVersionValue ? realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            napprovalversioncode: realApprovalVersionValue && realApprovalVersionValue.napprovalconfigversioncode ? String(realApprovalVersionValue.napprovalconfigversioncode) : -1,\r\n            // ntestcode: realTestValue && realTestValue.ntestcode ? realTestValue.ntestcode : -1,\r\n            userinfo: this.props.Login.userInfo,\r\n            ndesigntemplatemappingcode: (this.props.Login.masterData.realDesignTemplateMappingValue && this.props.Login.masterData.realDesignTemplateMappingValue.ndesigntemplatemappingcode) || -1,\r\n        }\r\n        if (inputData.nsampletypecode !== -1 && inputData.nregtypecode !== -1 && inputData.nregsubtypecode !== -1\r\n            && inputData.ntransactionstatus !== \"-1\" && inputData.napprovalconfigcode !== -1 && inputData.napprovalversioncode !== \"-1\"\r\n            // && realFilterStatusValue.sfilterstatus !== null\r\n            && inputData.ncoareporttypecode !== -1\r\n        ) {\r\n\r\n            let obj = convertDateValuetoString(realFromDate, realToDate, this.props.Login.userInfo)\r\n            inputData['dfrom'] = obj.fromDate;\r\n            inputData['dto'] = obj.toDate;\r\n            let inputParam = {\r\n                masterData,\r\n                inputData,\r\n            }\r\n            this.props.getReleasedSample(inputParam)\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }))\r\n        }\r\n    }\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let isPatientDetails = this.props.Login.isPatientDetails;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let hideSave = this.props.Login.hideSave;\r\n        let isAddPopup = this.props.Login.isAddPopup;\r\n        let isEditPopup = this.props.Login.isEditPopup;\r\n        let isDeletePopup = this.props.Login.isDeletePopup;\r\n        let isCorrectionNeed = this.props.Login.isCorrectionNeed;\r\n        let ncontrolcode = this.props.Login.ncontrolcode;\r\n        let modalShow = this.props.Login.modalShow;\r\n        let screenName = this.props.Login.screenName;\r\n        let isPatientReports = this.props.Login.isPatientReports;\r\n        let openModalTitle = this.props.Login.openModalTitle;\r\n        let isReleaseTestAttachment = this.props.Login.isReleaseTestAttachment;\r\n        let isReleaseTestComment = this.props.Login.isReleaseTestComment;\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        let projectMasterList =[];\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                // openModal = false;\r\n                isPatientDetails = false;\r\n                hideSave = false;\r\n                isAddPopup = false;\r\n                isEditPopup = false;\r\n                isDeletePopup = false;\r\n                isCorrectionNeed = false;\r\n                isPatientReports = false;\r\n                isReleaseTestAttachment = false;\r\n                isReleaseTestComment = false;\r\n                screenName = undefined;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n\r\n                if (ncontrolcode && ncontrolcode === editResultId) {\r\n                    modalShow = true;\r\n                }\r\n                if (this.props.Login.screenName !== undefined && this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTION\" })\r\n                    || this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_CORRECTIONCOMMENTS\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_REGENERATEFILE\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_GENERATEFILE\" }) ||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_PREVIEWREPORT\" })||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_PRELIMINARYREPORT\" })||\r\n                    this.props.Login.screenName === this.props.intl.formatMessage({ id: \"IDS_RELEASEREPORTHISTORY\" })) {\r\n                    openModal = false;\r\n                    screenName = undefined;\r\n                }\r\n                loadEsign = false;\r\n                selectedRecord[\"agree\"] = 4;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            isPatientDetails = false;\r\n            hideSave = false;\r\n            isAddPopup = false;\r\n            isEditPopup = false;\r\n            isDeletePopup = false;\r\n            isCorrectionNeed = false;\r\n            isPatientReports = false;\r\n            isReleaseTestAttachment = false;\r\n            isReleaseTestComment = false;\r\n            screenName = undefined;\r\n            selectedRecord = {};\r\n            openModalTitle=undefined;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, modalShow, loadEsign, screenName, selectedRecord, selectedId: null, isPatientDetails, hideSave, isAddPopup, isEditPopup, isDeletePopup, \r\n                isCorrectionNeed, isPatientReports,openModalTitle, isReleaseTestAttachment, isReleaseTestComment,projectMasterList }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n    closeModalShow = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n\r\n        let modalShow = this.props.Login.modalShow;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let ReportmodalShow = this.props.Login.ReportmodalShow;\r\n        // const editResultId =this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        if (this.props.Login.loadEsign) {\r\n            loadEsign = false;\r\n\r\n        } else {\r\n            modalShow = false;\r\n            ReportmodalShow = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { modalShow, selectedRecord, selectedId: null, loadEsign, ReportmodalShow },\r\n        };\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n    closeDocModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport, openModal, selectedRecord });\r\n    }\r\n    onInputOnChange = (event) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n    onChangeAwesomeQueryBuilder = (immutableTree, config) => {\r\n        //let selectedRecord = this.state.selectedRecord || {};\r\n        const filterquery = QbUtils.sqlFormat(immutableTree, config);\r\n        const filterQueryTreeStr = QbUtils.getTree(immutableTree);\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                awesomeTree: immutableTree, awesomeConfig: config, filterquery,filterQueryTreeStr\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo)\r\n\r\n        // this.setState({ awesomeTree: immutableTree, awesomeConfig: config, selectedRecord: selectedRecord });\r\n\r\n    };\r\n\r\n    handleExecuteClick = (event) => {\r\n        //const selectedRecord = this.state.selectedRecord\r\n        const filterquery = this.props.Login.filterquery\r\n        if (filterquery !== \"\" && filterquery !== undefined && !filterquery.includes('Invalid date')) {\r\n\r\n            const inputparam = {\r\n                component: this.props.Login.seletedFilterComponent,\r\n                userinfo: this.props.Login.userInfo,\r\n                filterquery: filterquery,\r\n                // selectedRecord:this.state.selectedRecord\r\n\r\n            }\r\n            this.props.getPatientFilterExecuteData(inputparam)\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLINFILTER\" }));\r\n        }\r\n    }\r\n\r\n\r\n    handleKendoRowClick = (event) => {\r\n        let patientinfo = event.dataItem;\r\n        const component = this.props.Login.seletedFilterComponent;\r\n       let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        const inputparam = {\r\n             \r\n            realFromDate: obj.fromDate,\r\n            realToDate: obj.toDate,\r\n            realSampleTypeValue: this.props.Login.masterData.SampleTypeValue && this.props.Login.masterData.SampleTypeValue,\r\n            realRegTypeValue: this.props.Login.masterData.RegTypeValue && this.props.Login.masterData.RegTypeValue,\r\n            realRegSubTypeValue: this.props.Login.masterData.RegSubTypeValue && this.props.Login.masterData.RegSubTypeValue,\r\n            realFilterStatusValue: this.props.Login.masterData.FilterStatusValue && this.props.Login.masterData.FilterStatusValue,\r\n            realApprovalVersionValue: this.props.Login.masterData.ApprovalVersionValue && this.props.Login.masterData.ApprovalVersionValue,\r\n            realDesignTemplateMappingValue: this.props.Login.masterData.DesignTemplateMappingValue && this.props.Login.masterData.DesignTemplateMappingValue.ndesigntemplatemappingcode,\r\n            masterData: { ...this.props.Login.masterData },\r\n            realReportTypeValue: this.props.Login.masterData.ReportTypeValue && this.props.Login.masterData.ReportTypeValue,\r\n            Login:this.props.Login,\r\n            selectedRecord: this.props.Login.selectedRecord && this.props.Login.selectedRecord || [],\r\n            'dfrom': obj.fromDate,\r\n            'dto': obj.toDate,\r\n            'npreregno': \"0\",\r\n            'nsampletypecode': (this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.nsampletypecode) || -1,\r\n            'nregtypecode': parseInt(this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode) || -1,\r\n            'nregsubtypecode': parseInt(this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode) || -1,\r\n            'ntransactionstatus': this.props.Login.masterData.realFilterStatusValue && this.props.Login.masterData.realFilterStatusValue.ntransactionstatus ? String(this.props.Login.masterData.realFilterStatusValue.ntransactionstatus) + ',' + String(transactionStatus.PARTIAL) : \"-1\",\r\n            \"napprovalconfigcode\": this.props.Login.masterData.realApprovalVersionValue ? this.props.Login.masterData.realApprovalVersionValue.napprovalconfigcode || -1 : null,\r\n            \"napprovalversioncode\": this.props.Login.masterData.realApprovalVersionValue && this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode ? String(this.props.Login.masterData.realApprovalVersionValue.napprovalconfigversioncode) : null,\r\n            'nneedsubsample': (this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nneedsubsample) || false,\r\n            'userinfo': this.props.Login.userInfo,\r\n            'ndesigntemplatemappingcode': (this.props.Login.masterData.ndesigntemplatemappingcode && this.props.Login.masterData.ndesigntemplatemappingcode) || -1,\r\n            'isAddPopup': true,\r\n            'isPopup': true,\r\n            'ncoareporttypecode': parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.ncoareporttypecode) || -1,\r\n            screenName: this.props.intl.formatMessage({ id: \"IDS_ADDSAMPLE\" }),\r\n            isneedsection: parseInt(this.props.Login.masterData.realReportTypeValue && this.props.Login.masterData.realReportTypeValue.isneedsection) || transactionStatus.NO,\r\n            userinfo: this.props.Login.userInfo,\r\n            patientinfo : event.dataItem,\r\n            spatientid:event.dataItem.spatientid\r\n            // selectedRecord:this.state.selectedRecord\r\n\r\n        }\r\n        // if (component[\"childFields\"]) {\r\n        //     const index = this.props.Login.masterIndex;\r\n        //     let selectedRecord = this.state.selectedMaster || {};\r\n\r\n        //     component[\"childFields\"].map(item => {\r\n        //         let data = item1[item.columnname];\r\n        //         if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n        //             //combocontrol\r\n        //             data = { label: item1[item.sdisplaymember], value: item1[item.svaluemember] };\r\n        //         }\r\n        //         else if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n        //             //Date picker control\r\n        //             data = rearrangeDateFormatforKendoDataTool(this.props.Login.userInfo, data);\r\n        //         }\r\n        //         selectedRecord[index][item.columnname] = data;\r\n        //     })\r\n\r\n\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: { selectedMaster: selectedRecord, loadCustomSearchFilter: false, }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const newdata = {\r\n        //         label: item1[component['displaymember']],\r\n        //         value: item1[component['valuemember']], item: { jsondata: { ...item1, jsondata: { ...item1 } } }\r\n        //     };\r\n\r\n        //     this.onComboChange(newdata, component, component['label']);\r\n        // }\r\nthis.props.getPatientWiseSample(inputparam)\r\n    };\r\n    onInputChange = (event) => {\r\n        let selectedComment = this.props.Login.masterData.selectedComment || {};\r\n        selectedComment[event.target.name] = event.target.value;\r\n        const coaFileInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { selectedComment },\r\n        };\r\n        this.props.updateStore(coaFileInfo);\r\n    }\r\n    validateEsign = () => {\r\n        let ncontrolcode = this.props.Login.ncontrolcode;\r\n        const editResultId = this.state.controlMap.has(\"EditResult\") && this.state.controlMap.get(\"EditResult\").ncontrolcode;\r\n        let modalName = \"\";\r\n        if (ncontrolcode && ncontrolcode === editResultId) {\r\n            modalName = \"modalShow\";\r\n        }\r\n        else {\r\n            modalName = \"openModal\";\r\n        }\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignforRelease(inputParam, modalName);\r\n    }\r\n    selectionChange = (event, nflag, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (nflag === undefined) {\r\n            this.state.dataResult.data.map(item => {\r\n                if (item.npreregno === event.dataItem.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n\r\n            })\r\n            let preregno = event.dataItem.npreregno\r\n            let ncoahistorycode = event.dataItem.ncoahistorycode\r\n            let ssystemfilename = event.dataItem.ssystemfilename\r\n            const coaFileInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { ncoahistorycode, ssystemfilename },\r\n            };\r\n            this.props.updateStore(coaFileInfo);\r\n\r\n            this.childHeaderSelectionChange(event, preregno, checkedflag)\r\n        }\r\n        else {\r\n            let data = []\r\n            event.dataItems.map(item => {\r\n                data.push({ \"npreregno\": item.npreregno })\r\n            })\r\n            this.childHeaderSelectionChange(event, data, checkedflag)\r\n\r\n        }\r\n\r\n    }\r\n    childHeaderSelectionChange = (event, preregno, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let subsamplecode = [];\r\n        let npreregno = preregno === undefined ? event.dataItems[0].npreregno : preregno\r\n        if (npreregno.length === 0 || npreregno.length === undefined) {\r\n            this.props.Login.masterData.ReleaseSubSample[npreregno].map(item => {\r\n\r\n                item.selected = checked\r\n                if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                    subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                }\r\n\r\n            })\r\n            this.props.Login.masterData.ReleaseSample.map(data => {\r\n                if (data.npreregno === npreregno) {\r\n                    data.selected = checked\r\n                }\r\n            })\r\n\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n        else {\r\n            npreregno.map(value => {\r\n                this.props.Login.masterData.ReleaseSubSample[value.npreregno].map(item => {\r\n                    item.selected = checked\r\n                    if (!subsamplecode.includes(item.ntransactionsamplecode)) {\r\n                        subsamplecode.push({ \"ntransactionsamplecode\": item.ntransactionsamplecode })\r\n                    }\r\n                })\r\n\r\n            })\r\n            this.subChildHeaderSelectionChange(event, subsamplecode, checkedflag)\r\n        }\r\n\r\n    }\r\n\r\n    subChildHeaderSelectionChange = (event, subsamplecode, checkedflag) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let transactionsamplecode = subsamplecode;\r\n        if (subsamplecode !== undefined) {\r\n            //  transactionsamplecode = subsamplecode\r\n            transactionsamplecode.map(value => {\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n\r\n                    return item;\r\n                })\r\n            })\r\n        }\r\n        else {\r\n            event.dataItems.map(value =>\r\n                this.props.Login.masterData.ReleaseTest[value.ntransactionsamplecode].map(item => {\r\n                    item.selected = checked;\r\n                    this.collectData(item, checkedflag)\r\n                    return item;\r\n                })\r\n            )\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].map(item => {\r\n                if (event.dataItems[0].ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItems[0].npreregno].every(item => {\r\n                return item.selected === true;\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItems[0].npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        if (event.dataItems.length !== 0) {\r\n            this.state.dataResult.data.map(item => {\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n            this.selectionChange(event, 1, checked);\r\n        }\r\n        else {\r\n            this.setState({ npreregno: [], ntransactionsamplecode: [], ntransactiontestcode: [] })\r\n        }\r\n    }\r\n    childSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno && item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                item.selected = checked;\r\n            }\r\n\r\n        })\r\n        let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n            return item.slected === true\r\n        })\r\n        if (data === true) {\r\n            this.props.Login.masterData.ReleaseSample.map(item => {\r\n                if (event.dataItem.npreregno === item.npreregno) {\r\n                    item.selected = checked;\r\n                }\r\n            })\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n                if (event.dataItem.ntransactionsamplecode === item.ntransactionsamplecode) {\r\n                    item.selected = checked;\r\n                    this.collectData(item)\r\n                }\r\n            })\r\n            let data = this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].every(item => {\r\n                return item.selected === true\r\n            })\r\n            if (data === true) {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = checked;\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                this.props.Login.masterData.ReleaseSample.map(item => {\r\n                    if (event.dataItem.npreregno === item.npreregno) {\r\n                        item.selected = false;\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n    subChildSelectionChange = (event) => {\r\n        let x = []\r\n        const checked = event.syntheticEvent.target.checked;\r\n        this.props.Login.masterData.ReleaseTest[event.dataItem.ntransactionsamplecode].map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = checked;\r\n                this.collectData(item)\r\n            }\r\n        })\r\n        this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map(item => {\r\n\r\n            if (item.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                if (this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]) {\r\n                    x = this.props.Login.masterData.ReleaseTest[item.ntransactionsamplecode]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y = x.filter(t => t.selected === true);\r\n        if (x.length === y.length) {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === y[0].ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = true\r\n                }\r\n            })\r\n\r\n        }\r\n        else {\r\n            this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno].map((t, i) => {\r\n                if (t.ntransactionsamplecode === event.dataItem.ntransactionsamplecode) {\r\n                    this.props.Login.masterData.ReleaseSubSample[event.dataItem.npreregno][i].selected = false\r\n                }\r\n            })\r\n        }\r\n        this.state.dataResult.data.map(item => {\r\n            if (item.npreregno === event.dataItem.npreregno) {\r\n                if (this.props.Login.masterData.ReleaseSubSample[item.npreregno]) {\r\n                    x = this.props.Login.masterData.ReleaseSubSample[item.npreregno]\r\n                }\r\n            }\r\n\r\n        })\r\n        let y1 = x.filter(t => t.selected === true);\r\n        if (x.length === y1.length) {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === y1[0].npreregno) {\r\n                    this.state.dataResult.data[i].selected = true\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            this.state.dataResult.data.map((t, i) => {\r\n                if (t.npreregno === event.dataItem.npreregno) {\r\n                    this.state.dataResult.data[i].selected = false\r\n                }\r\n            })\r\n        }\r\n    }\r\n    collectData = (item, checkedflag) => {\r\n        let npreregno = this.state.npreregno || []\r\n        let ntransactionsamplecode = this.state.ntransactionsamplecode || []\r\n        let ntransactiontestcode = this.state.ntransactiontestcode || []\r\n        if (item.selected === true) {\r\n            if (!npreregno.includes(item.npreregno)) {\r\n                npreregno.push(item.npreregno)\r\n            }\r\n            if (!ntransactionsamplecode.includes(item.ntransactionsamplecode)) {\r\n                ntransactionsamplecode.push(item.ntransactionsamplecode)\r\n            }\r\n            // Don't Remove\r\n            if (!ntransactiontestcode.includes(item.ntransactiontestcode)) {\r\n                ntransactiontestcode.push(item.ntransactiontestcode)\r\n            }\r\n        }\r\n        else {\r\n            const preregno = npreregno.filter(data => data !== item.npreregno)\r\n            npreregno = preregno\r\n\r\n            const transactionsamplecode = ntransactionsamplecode.filter(data => data !== item.ntransactionsamplecode)\r\n            ntransactionsamplecode = transactionsamplecode\r\n            // Don't Remove\r\n            const transactiontestcode = ntransactiontestcode.filter(data => data !== item.ntransactiontestcode)\r\n            ntransactiontestcode = transactiontestcode\r\n        }\r\n        this.setState({\r\n            npreregno: checkedflag === false ? [] : npreregno,\r\n            ntransactionsamplecode: checkedflag === false ? [] : ntransactionsamplecode, ntransactiontestcode: checkedflag === false ? [] : ntransactiontestcode\r\n        })\r\n    }\r\n\r\n    viewSelectedReport = (filedata) => {\r\n        delete(filedata.inputData.userinfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                releasedcoareport: filedata.inputData,\r\n                userinfo: this.props.Login.userInfo,\r\n                ncontrolCode: filedata.ncontrolCode\r\n            },\r\n            classUrl: \"release\",\r\n            operation: \"view\",\r\n            methodUrl: \"ReleasedCOAReport\",\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential, filterColumnData,\r\n    getApprovedRecordsAsDraft, getReleasedRegistrationType, getReleasedRegistrationSubType,\r\n    getReleasedFilterStatus, getReleasedApprovalVersion, getReleasedFilterBasedTest, getReleasedSample,\r\n    getApprovedSample,\r\n    //, generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal,\r\n    previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample, getSectionForSectionWise, getreportcomments,\r\n    fetchReportInfoReleaseById, UpdateReportComments\r\n    , generateReleasedReport, getReleasedDataDetails, getApprovedProjectByProjectType, getApprovedProjectType, getReportForPortal, getResultCorrectionData,\r\n    //previewAndFinalReport, getRemoveApprovedSample, getDeleteApprovedSample, UpdateApprovedSample, getEditApprovedSample,\r\n    getSectionForSectionWise, fetchParameterById, updateCorrectionStatus, validateEsignforRelease, viewReportHistory, viewAttachment, versionHistory,\r\n    downloadVersionReport, viewReleaseTestAttachment, downloadHistory, getPatientFilterExecuteData, rearrangeDateFormatforKendoDataTool,\r\n    getPatientWiseSample,preliminaryReport,releaseReportHistory\r\n})(injectIntl(Release));"]},"metadata":{},"sourceType":"module"}