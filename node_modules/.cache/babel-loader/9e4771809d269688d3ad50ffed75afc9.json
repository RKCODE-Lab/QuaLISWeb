{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\pages\\\\contactmaster\\\\AddPatient.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nconst AddPatient = props => {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sfirstname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FIRSTNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FIRSTNAME\"\n    }),\n    value: props.selectedRecord[\"sfirstname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"slastname\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_LASTNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_LASTNAME\"\n    }),\n    value: props.selectedRecord[\"slastname\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"snationalid\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_NATIONALID\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_NATIONALID\"\n    }),\n    value: props.selectedRecord[\"snationalid\"],\n    isMandatory: false,\n    required: false,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sfathername\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_FATHERGUARDIANNAME\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FATHERGUARDIANNAME\"\n    }),\n    value: props.selectedRecord[\"sfathername\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"ddob\",\n    label: props.intl.formatMessage({\n      id: \"IDS_DATEOFBIRTH\"\n    }),\n    className: \"form-control\",\n    placeholderText: \"Select date..\",\n    selected: props.selectedRecord[\"ddob\"] || \"\",\n    dateFormat: props.userInfo.ssitedate,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    maxDate: props.currentTime,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"ddob\", date),\n    value: props.selectedRecord[\"ddob\"],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sage\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_AGE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_AGE\"\n    }),\n    value: props.selectedRecord[\"sage\"],\n    isMandatory: true,\n    required: true,\n    readOnly: true,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ngendercode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_SEX\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.genderList,\n    value: props.selectedRecord[\"ngendercode\"],\n    isMandatory: true,\n    isClearable: true,\n    isMulti: false,\n    isSearchable: false,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'ngendercode'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"saddress\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDRESS\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_ADDRESS\"\n    }),\n    value: props.selectedRecord[\"saddress\"],\n    rows: \"2\",\n    isMandatory: true,\n    required: true,\n    maxLength: 255,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 31\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"sphoneno\",\n    type: \"text\",\n    label: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_PHONENO\"\n    }),\n    value: props.selectedRecord[\"sphoneno\"],\n    isMandatory: true,\n    required: true,\n    maxLength: 100,\n    onChange: event => props.onInputOnChange(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 31\n    }\n  }))));\n};\n\nexport default injectIntl(AddPatient);","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/pages/contactmaster/AddPatient.jsx"],"names":["React","injectIntl","Row","Col","FormInput","FormTextarea","FormSelectSearch","DateTimePicker","AddPatient","props","intl","formatMessage","id","selectedRecord","event","onInputOnChange","userInfo","ssitedate","currentTime","date","handleDateChange","genderList","onComboChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport {Row, Col} from 'react-bootstrap';\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\n\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\n\r\nconst AddPatient = (props) =>{    \r\n       return (<>\r\n\r\n                    <Row>\r\n                         <Col md={12}>                            \r\n                        \r\n                              <FormInput\r\n                                   name={\"sfirstname\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_FIRSTNAME\"})}                            \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_FIRSTNAME\"})}\r\n                                   value ={ props.selectedRecord[\"sfirstname\"] }\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}                            \r\n                              />\r\n                     \r\n                              <FormInput\r\n                                   name={\"slastname\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_LASTNAME\"})}                          \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_LASTNAME\"})}\r\n                                   value ={ props.selectedRecord[\"slastname\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n              \r\n                              <FormInput\r\n                                   name={\"snationalid\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_NATIONALID\"})}                   \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_NATIONALID\"})}\r\n                                   value ={ props.selectedRecord[\"snationalid\"] }\r\n                                   isMandatory={false}\r\n                                   required={false}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n\r\n                              <FormInput\r\n                                   name={\"sfathername\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_FATHERGUARDIANNAME\"})}                   \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_FATHERGUARDIANNAME\"})}\r\n                                   value ={ props.selectedRecord[\"sfathername\"] }\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n                      \r\n                              <DateTimePicker\r\n                                                  name={\"ddob\"} \r\n                                                  label={ props.intl.formatMessage({ id:\"IDS_DATEOFBIRTH\"})}                     \r\n                                                  className='form-control'\r\n                                                  placeholderText=\"Select date..\"\r\n                                                  selected={props.selectedRecord[\"ddob\"] || \"\"}\r\n                                                  dateFormat={props.userInfo.ssitedate}\r\n                                                  isClearable={false}\r\n                                                  isMandatory={true}\r\n                                                  required={true}\r\n                                                  maxDate={props.currentTime}\r\n                                                  maxTime={props.currentTime}\r\n                                                  onChange={date => props.handleDateChange(\"ddob\", date)}\r\n                                                  value={props.selectedRecord[\"ddob\"]}\r\n                                                                                \r\n                                   />\r\n                           \r\n                              <FormInput\r\n                                   name={\"sage\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_AGE\"})}                        \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_AGE\"})}\r\n                                   value ={ props.selectedRecord[\"sage\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   readOnly\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              />\r\n\r\n                              <FormSelectSearch\r\n                                        name={\"ngendercode\"}\r\n                                        formLabel={ props.intl.formatMessage({ id:\"IDS_SEX\"})}                                \r\n                                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                                \r\n                                        options={ props.genderList}                                      \r\n                                        value = { props.selectedRecord[\"ngendercode\"] }\r\n                                        isMandatory={true}\r\n                                        isClearable={true}\r\n                                        isMulti={false}\r\n                                        isSearchable={false}                               \r\n                                        isDisabled={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange = {(event)=> props.onComboChange(event, 'ngendercode')}                               \r\n                                   />\r\n                       \r\n                              <FormTextarea\r\n                                   name={\"saddress\"}\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_ADDRESS\"})}                    \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_ADDRESS\"})}\r\n                                   value ={ props.selectedRecord[\"saddress\"]}\r\n                                   rows=\"2\"\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={255}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                                   />\r\n                        \r\n                              <FormInput\r\n                                   name={\"sphoneno\"}\r\n                                   type=\"text\"\r\n                                   label={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}                  \r\n                                   placeholder={ props.intl.formatMessage({ id:\"IDS_PHONENO\"})}\r\n                                   value ={ props.selectedRecord[\"sphoneno\"]}\r\n                                   isMandatory={true}\r\n                                   required={true}\r\n                                   maxLength={100}\r\n                                   onChange={(event)=> props.onInputOnChange(event)}\r\n                              /> \r\n                 \r\n                    </Col> \r\n       </Row></>\r\n       )\r\n   }\r\n   export default injectIntl(AddPatient);\r\n"]},"metadata":{},"sourceType":"module"}