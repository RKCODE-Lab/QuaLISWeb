{"ast":null,"code":"import Axios from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { intl } from \"../components/App\";\nimport { constructOptionList, replaceUpdatedObject, sortData } from \"../components/CommonScript\";\nimport { reportCOAType, REPORTTYPE } from \"../components/Enumeration\";\nimport TrainingUpdateChildTab from \"../pages/competencemanagement/trainingupdate/TrainingUpdateChildTab\";\nimport rsapi from \"../rsapi\";\nimport { initRequest } from \"./LoginAction\";\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\nexport function getReleasedSelectedSampleSubSampleTest(userInfo, Data1, inputData) {\n  return function (dispatch) {\n    if (inputData !== undefined && inputData.npreregno !== \"\") {\n      dispatch(initRequest(true));\n      return rsapi.post(\"release/updateRelease\", inputData).then(response => {\n        if (response.data.statusCodeValue !== 200) {\n          toast.warn(intl.formatMessage({\n            id: response.data.body\n          }));\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              loading: false\n            }\n          });\n        } else {\n          let masterData = { ...Data1,\n            ...response.data.body\n          };\n          console.log(\"ReleasedTest,\", masterData);\n          sortData(masterData.ReleaseHistory, \"\", 'sreportno'); //  dispatch(generateReport(inputData,masterData))\n\n          dispatch({\n            type: DEFAULT_RETURN,\n            payload: {\n              masterData,\n              change: inputData.change,\n              loading: false,\n              openModal: false\n            }\n          });\n        }\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n          console.log(\"ErrorRelease,\", error);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\"\n      }));\n    }\n  };\n}\nexport function getReleasedRegistrationType(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"release/getRegistrationType\", inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputData.masterData,\n            ...responseData,\n            SampleTypeValue: inputData.SampleTypeValue\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getReleasedRegistrationSubType(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"release/getRegistrationSubType\", inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputData.masterData,\n            ...responseData,\n            RegTypeValue: inputData.RegTypeValue\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getReleasedFilterStatus(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"release/getFilterStatus\", inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputData.masterData,\n            ...responseData,\n            RegSubTypeValue: inputData.RegSubTypeValue\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getReleasedFilterBasedTest(inputData) {\n  return function (dispatch) {\n    if (inputData.napprovalversioncode) {\n      dispatch(initRequest(true));\n      rsapi.post(\"release/getFilterBasedTest\", inputData).then(response => {\n        let responseData = { ...response.data\n        };\n        responseData = sortData(responseData);\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            masterData: { ...inputData.masterData,\n              ...responseData,\n              RegSubTypeValue: inputData.RegSubTypeValue,\n              ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\n              DesignTemplateMappingValue: inputData.DesignTemplateMappingValue\n            },\n            loading: false\n          }\n        });\n\n        if (response.data.rtn) {\n          toast.warn(response.data.rtn);\n        }\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_PLSSELECTALLVALUESINFILTER\"\n      }));\n    }\n  };\n}\nexport function getReleasedApprovalVersion(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"release/getApprovalVersion\", inputParam.inputData).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData: { ...inputParam.masterData,\n            ...responseData // fromDate: inputParam.inputData.dfrom,\n            // toDate: inputParam.inputData.dto,\n\n          },\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getReleasedSample(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"release/getReleaseSample\", inputParam.inputData).then(response => {\n      let responseData = { ...response.data\n      }; // responseData = sortData(responseData)\n\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n\n      if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\n        inputParam.searchRef.current.value = \"\";\n        masterData['searchedData'] = undefined;\n      }\n\n      if (inputParam.searchSampleRef !== undefined && inputParam.searchSampleRef.current !== null) {\n        inputParam.searchSampleRef.current.value = \"\";\n        masterData['searchedData'] = undefined;\n      }\n\n      if (inputParam.searchSubSampleRef !== undefined && inputParam.searchSubSampleRef.current !== null) {\n        inputParam.searchSubSampleRef.current.value = \"\";\n        masterData['searchedSubSample'] = undefined;\n      }\n\n      if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\n        inputParam.searchTestRef.current.value = \"\"; // masterData['searchedTest'] = undefined\n\n        masterData['searchedTests'] = undefined;\n      }\n\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          showFilter: false,\n          skip: 0,\n          take: inputParam.take,\n          testskip: 0,\n          testtake: inputParam.testtake,\n          resultDataState: { ...inputParam.resultDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          instrumentDataState: { ...inputParam.instrumentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          materialDataState: { ...inputParam.materialDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          taskDataState: { ...inputParam.taskDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          documentDataState: { ...inputParam.documentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          resultChangeDataState: { ...inputParam.resultChangeDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          testCommentDataState: { ...inputParam.testCommentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          historyDataState: { ...inputParam.historyDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          sampleHistoryDataState: { ...inputParam.sampleHistoryDataState,\n            sort: undefined,\n            filter: undefined\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getApprovedSample(inputParam) {\n  return function (dispatch) {\n    let urlArray = [];\n    inputParam.inputData['isAddPopup'] = true;\n    const releaseSample = rsapi.post(\"release/getReleaseSample\", inputParam.inputData);\n    const reportType = rsapi.post(\"release/getCOAReportType\", {\n      userinfo: inputParam.inputData.userinfo\n    });\n    urlArray = [releaseSample, reportType];\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(response => {\n      const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\", \"scoareporttypename\", undefined, undefined, false);\n      const ReportTypeList = reportTypeMap.get(\"OptionList\");\n      let selectedRecord = {\n        \"ncoareporttypecode\": {\n          \"value\": response[1].data.ReportType[0].ncoareporttypecode,\n          \"label\": response[1].data.ReportType[0].scoareporttypename\n        }\n      };\n      let responseData = { ...response[0].data\n      }; // responseData = sortData(responseData)\n\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          selectedRecord,\n          ReportTypeList,\n          loading: false,\n          showFilter: false,\n          openModal: true,\n          skip: 0,\n          take: inputParam.take,\n          testskip: 0,\n          testtake: inputParam.testtake,\n          resultDataState: { ...inputParam.resultDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          instrumentDataState: { ...inputParam.instrumentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          materialDataState: { ...inputParam.materialDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          taskDataState: { ...inputParam.taskDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          documentDataState: { ...inputParam.documentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          resultChangeDataState: { ...inputParam.resultChangeDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          testCommentDataState: { ...inputParam.testCommentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          historyDataState: { ...inputParam.historyDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          sampleHistoryDataState: { ...inputParam.sampleHistoryDataState,\n            sort: undefined,\n            filter: undefined\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function generateReleasedReport(inputParam, Data) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    const inputData = {\n      npreregno: inputParam.npreregno,\n      //   nsectioncode: inputParam.nsectioncode || -1,\n      userinfo: inputParam.userinfo,\n      nprimarykey: inputParam.npreregno,\n      ncoareporttypecode: reportCOAType.SAMPLEWISE,\n      nreporttypecode: REPORTTYPE.COAREPORT,\n      sprimarykeyname: \"npreregno\",\n      ncontrolcode: inputParam.ncontrolCode,\n      nregtypecode: inputParam.nregtypecode,\n      nregsubtypecode: inputParam.nregsubtypecode,\n      ntransactiontestcode: inputParam.ntransactiontestcode,\n      napproveconfversioncode: inputParam.napprovalversioncode,\n      action: inputParam.action\n    };\n    rsapi.post(\"release/generateReleasedReport\", inputData).then(response => {\n      let masterData = { ...Data,\n        ...response.data\n      };\n\n      if (response.data.rtn === \"Success\") {\n        document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\n        document.getElementById(\"download_data\").click();\n      } else {\n        toast.warn(response.data.rtn);\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false,\n          change: inputParam.change,\n          masterData,\n          modalShow: false,\n          selectedRecord: {},\n          loadEsign: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getReleasedDataDetails(inputParam, coahistory) {\n  return function (dispatch) {\n    let inputParamData = {\n      dfrom: inputParam.inputData.dfrom,\n      dto: inputParam.inputData.dto,\n      nsampletypecode: inputParam.inputData.nsampletypecode,\n      nregtypecode: inputParam.inputData.nregtypecode,\n      nregsubtypecode: inputParam.inputData.nregsubtypecode,\n      ntransactionstatus: inputParam.inputData.ntransactionstatus,\n      nsectioncode: inputParam.inputData.nsectioncode,\n      ntestcode: inputParam.inputData.ntestcode,\n      napprovalversioncode: inputParam.inputData.napprovalversioncode,\n      napprovalconfigcode: inputParam.inputData.napprovalconfigcode,\n      userinfo: inputParam.inputData.userinfo,\n      nneedsubsample: inputParam.inputData.nneedsubsample,\n      ncoaparentcode: inputParam.ncoaparentcode,\n      npreregno: inputParam.npreregno,\n      ndesigntemplatemappingcode: inputParam.masterData.ndesigntemplatemappingcode,\n      isAddPopup: false\n    };\n    dispatch(initRequest(true));\n    rsapi.post(\"release/getReleaseSample\", inputParamData).then(response => {\n      let responseData = { ...response.data\n      }; // responseData = sortData(responseData)\n\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n\n      if (inputParam.searchSampleRef !== undefined && inputParam.searchSampleRef.current !== null) {\n        inputParam.searchSampleRef.current.value = \"\";\n        masterData['searchedSample'] = undefined;\n      }\n\n      if (inputParam.searchSubSampleRef !== undefined && inputParam.searchSubSampleRef.current !== null) {\n        inputParam.searchSubSampleRef.current.value = \"\";\n        masterData['searchedSubSample'] = undefined;\n      }\n\n      if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\n        inputParam.searchTestRef.current.value = \"\"; // masterData['searchedTest'] = undefined\n\n        masterData['searchedTests'] = undefined;\n      }\n\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          showFilter: false,\n          skip: 0,\n          take: inputParam.take,\n          testskip: 0,\n          testtake: inputParam.testtake,\n          resultDataState: { ...inputParam.resultDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          instrumentDataState: { ...inputParam.instrumentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          materialDataState: { ...inputParam.materialDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          taskDataState: { ...inputParam.taskDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          documentDataState: { ...inputParam.documentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          resultChangeDataState: { ...inputParam.resultChangeDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          testCommentDataState: { ...inputParam.testCommentDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          historyDataState: { ...inputParam.historyDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState,\n            sort: undefined,\n            filter: undefined\n          },\n          sampleHistoryDataState: { ...inputParam.sampleHistoryDataState,\n            sort: undefined,\n            filter: undefined\n          }\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ReleaseAction.js"],"names":["Axios","toast","intl","constructOptionList","replaceUpdatedObject","sortData","reportCOAType","REPORTTYPE","TrainingUpdateChildTab","rsapi","initRequest","DEFAULT_RETURN","getReleasedSelectedSampleSubSampleTest","userInfo","Data1","inputData","dispatch","undefined","npreregno","post","then","response","data","statusCodeValue","warn","formatMessage","id","body","type","payload","loading","masterData","console","log","ReleaseHistory","change","openModal","catch","error","status","message","getReleasedRegistrationType","responseData","SampleTypeValue","getReleasedRegistrationSubType","RegTypeValue","getReleasedFilterStatus","RegSubTypeValue","getReleasedFilterBasedTest","napprovalversioncode","ndesigntemplatemappingcode","DesignTemplateMappingValue","rtn","getReleasedApprovalVersion","inputParam","getReleasedSample","searchRef","current","value","searchSampleRef","searchSubSampleRef","searchTestRef","showFilter","skip","take","testskip","testtake","resultDataState","sort","filter","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","samplePrintHistoryDataState","sampleHistoryDataState","getApprovedSample","urlArray","releaseSample","reportType","userinfo","all","reportTypeMap","ReportType","ReportTypeList","get","selectedRecord","ncoareporttypecode","scoareporttypename","generateReleasedReport","Data","nprimarykey","SAMPLEWISE","nreporttypecode","COAREPORT","sprimarykeyname","ncontrolcode","ncontrolCode","nregtypecode","nregsubtypecode","ntransactiontestcode","napproveconfversioncode","action","document","getElementById","setAttribute","filepath","click","modalShow","loadEsign","getReleasedDataDetails","coahistory","inputParamData","dfrom","dto","nsampletypecode","ntransactionstatus","nsectioncode","ntestcode","napprovalconfigcode","nneedsubsample","ncoaparentcode","isAddPopup"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { intl } from \"../components/App\";\r\nimport { constructOptionList, replaceUpdatedObject, sortData } from \"../components/CommonScript\";\r\nimport { reportCOAType, REPORTTYPE } from \"../components/Enumeration\";\r\nimport TrainingUpdateChildTab from \"../pages/competencemanagement/trainingupdate/TrainingUpdateChildTab\";\r\nimport rsapi from \"../rsapi\";\r\nimport { initRequest } from \"./LoginAction\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\n\r\nexport function getReleasedSelectedSampleSubSampleTest(userInfo, Data1, inputData) {\r\n\r\n\r\n    return function (dispatch) {\r\n      if (inputData !== undefined &&inputData.npreregno!==\"\") {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"release/updateRelease\",\r\n\r\n            inputData\r\n        )\r\n            .then(response => {\r\n                if (response.data.statusCodeValue !== 200) {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: response.data.body\r\n                    }));\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n\r\n\r\n                }\r\n                else {\r\n         \r\n\r\n                    let masterData = {\r\n\r\n                        ...Data1, ...response.data.body,\r\n    \r\n\r\n                    };\r\n\r\n                    console.log(\"ReleasedTest,\", masterData);\r\n                     sortData(masterData.ReleaseHistory,\"\",'sreportno');\r\n                  //  dispatch(generateReport(inputData,masterData))\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            change: inputData.change,\r\n                            loading: false,\r\n                            openModal:false\r\n                        }\r\n                    });\r\n                }\r\n            })\r\n\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    console.log(\"ErrorRelease,\", error);\r\n\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n\r\n\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTANYONESAMPLE/SUBSAMPLE/TEST\"\r\n            }));\r\n        }\r\n    }\r\n}\r\nexport function getReleasedRegistrationType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getRegistrationType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            SampleTypeValue: inputData.SampleTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedRegistrationSubType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getRegistrationSubType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegTypeValue: inputData.RegTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedFilterStatus(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getFilterStatus\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputData.RegSubTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getReleasedFilterBasedTest(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.napprovalversioncode) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"release/getFilterBasedTest\", inputData)\r\n                .then(response => {\r\n\r\n\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...inputData.masterData,\r\n                                ...responseData,\r\n                                RegSubTypeValue: inputData.RegSubTypeValue,\r\n                                ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n                                DesignTemplateMappingValue: inputData.DesignTemplateMappingValue\r\n                            },\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (response.data.rtn) {\r\n                        toast.warn(response.data.rtn);\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_PLSSELECTALLVALUESINFILTER\"\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getReleasedApprovalVersion(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getApprovalVersion\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            // fromDate: inputParam.inputData.dfrom,\r\n                            // toDate: inputParam.inputData.dto,\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseSample\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                    inputParam.searchRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                if (inputParam.searchSampleRef !== undefined && inputParam.searchSampleRef.current !== null) {\r\n                    inputParam.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedData'] = undefined\r\n                }\r\n                if (inputParam.searchSubSampleRef !== undefined && inputParam.searchSubSampleRef.current !== null) {\r\n                    inputParam.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\r\n                    inputParam.searchTestRef.current.value = \"\"\r\n                    // masterData['searchedTest'] = undefined\r\n                    masterData['searchedTests'] = undefined\r\n\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        take: inputParam.take,\r\n                        testskip: 0,\r\n                        testtake: inputParam.testtake,\r\n                        resultDataState: { ...inputParam.resultDataState, sort: undefined, filter: undefined },\r\n                        instrumentDataState: { ...inputParam.instrumentDataState, sort: undefined, filter: undefined },\r\n                        materialDataState: { ...inputParam.materialDataState, sort: undefined, filter: undefined },\r\n                        taskDataState: { ...inputParam.taskDataState, sort: undefined, filter: undefined },\r\n                        documentDataState: { ...inputParam.documentDataState, sort: undefined, filter: undefined },\r\n                        resultChangeDataState: { ...inputParam.resultChangeDataState, sort: undefined, filter: undefined },\r\n                        testCommentDataState: { ...inputParam.testCommentDataState, sort: undefined, filter: undefined },\r\n                        historyDataState: { ...inputParam.historyDataState, sort: undefined, filter: undefined },\r\n                        samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState, sort: undefined, filter: undefined },\r\n                        sampleHistoryDataState: { ...inputParam.sampleHistoryDataState, sort: undefined, filter: undefined }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n    export function getApprovedSample(inputParam) {\r\n    return function (dispatch) {\r\n        let urlArray = []; \r\n        inputParam.inputData['isAddPopup']=true\r\n        const releaseSample = rsapi.post(\"release/getReleaseSample\", inputParam.inputData);\r\n        const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\r\n\r\n        urlArray = [releaseSample, reportType];\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\r\n                    \"scoareporttypename\", undefined, undefined, false);\r\n\r\n                const ReportTypeList = reportTypeMap.get(\"OptionList\");\r\n                let selectedRecord = {\"ncoareporttypecode\": {\r\n                    \"value\": response[1].data.ReportType[0].ncoareporttypecode,\r\n                     \"label\": response[1].data.ReportType[0].scoareporttypename\r\n                 }};\r\n                let responseData = { ...response[0].data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                \r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        selectedRecord,\r\n                        ReportTypeList,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        openModal:true,\r\n                        skip: 0,\r\n                        take: inputParam.take,\r\n                        testskip: 0,\r\n                        testtake: inputParam.testtake,\r\n                        resultDataState: { ...inputParam.resultDataState, sort: undefined, filter: undefined },\r\n                        instrumentDataState: { ...inputParam.instrumentDataState, sort: undefined, filter: undefined },\r\n                        materialDataState: { ...inputParam.materialDataState, sort: undefined, filter: undefined },\r\n                        taskDataState: { ...inputParam.taskDataState, sort: undefined, filter: undefined },\r\n                        documentDataState: { ...inputParam.documentDataState, sort: undefined, filter: undefined },\r\n                        resultChangeDataState: { ...inputParam.resultChangeDataState, sort: undefined, filter: undefined },\r\n                        testCommentDataState: { ...inputParam.testCommentDataState, sort: undefined, filter: undefined },\r\n                        historyDataState: { ...inputParam.historyDataState, sort: undefined, filter: undefined },\r\n                        samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState, sort: undefined, filter: undefined },\r\n                        sampleHistoryDataState: { ...inputParam.sampleHistoryDataState, sort: undefined, filter: undefined }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function generateReleasedReport(inputParam,Data) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const inputData = {\r\n            npreregno: inputParam.npreregno,\r\n         //   nsectioncode: inputParam.nsectioncode || -1,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLEWISE,\r\n            nreporttypecode: REPORTTYPE.COAREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.nregtypecode,\r\n            nregsubtypecode: inputParam.nregsubtypecode,\r\n            ntransactiontestcode:inputParam.ntransactiontestcode,\r\n            napproveconfversioncode: inputParam.napprovalversioncode,\r\n            action:inputParam.action\r\n        }\r\n        rsapi.post(\"release/generateReleasedReport\", inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...Data,\r\n                    ...response.data,\r\n                }\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n               \r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false,change: inputParam.change,masterData,\r\n                    modalShow: false, selectedRecord: {}, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedDataDetails(inputParam,coahistory) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            dfrom: inputParam.inputData.dfrom,\r\n            dto: inputParam.inputData.dto,\r\n\r\n            nsampletypecode: inputParam.inputData.nsampletypecode,\r\n            nregtypecode: inputParam.inputData.nregtypecode,\r\n            nregsubtypecode: inputParam.inputData.nregsubtypecode,\r\n            ntransactionstatus: inputParam.inputData.ntransactionstatus,\r\n            nsectioncode: inputParam.inputData.nsectioncode,\r\n            ntestcode: inputParam.inputData.ntestcode,\r\n            napprovalversioncode: inputParam.inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputParam.inputData.napprovalconfigcode,          \r\n            userinfo: inputParam.inputData.userinfo,\r\n            nneedsubsample: inputParam.inputData.nneedsubsample,\r\n            ncoaparentcode:inputParam.ncoaparentcode,\r\n            npreregno: inputParam.npreregno,\r\n            ndesigntemplatemappingcode:inputParam.masterData.ndesigntemplatemappingcode,\r\n            isAddPopup:false\r\n            \r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseSample\", inputParamData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchSampleRef !== undefined && inputParam.searchSampleRef.current !== null) {\r\n                    inputParam.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputParam.searchSubSampleRef !== undefined && inputParam.searchSubSampleRef.current !== null) {\r\n                    inputParam.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\r\n                    inputParam.searchTestRef.current.value = \"\"\r\n                    // masterData['searchedTest'] = undefined\r\n                    masterData['searchedTests'] = undefined\r\n\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        take: inputParam.take,\r\n                        testskip: 0,\r\n                        testtake: inputParam.testtake,\r\n                        resultDataState: { ...inputParam.resultDataState, sort: undefined, filter: undefined },\r\n                        instrumentDataState: { ...inputParam.instrumentDataState, sort: undefined, filter: undefined },\r\n                        materialDataState: { ...inputParam.materialDataState, sort: undefined, filter: undefined },\r\n                        taskDataState: { ...inputParam.taskDataState, sort: undefined, filter: undefined },\r\n                        documentDataState: { ...inputParam.documentDataState, sort: undefined, filter: undefined },\r\n                        resultChangeDataState: { ...inputParam.resultChangeDataState, sort: undefined, filter: undefined },\r\n                        testCommentDataState: { ...inputParam.testCommentDataState, sort: undefined, filter: undefined },\r\n                        historyDataState: { ...inputParam.historyDataState, sort: undefined, filter: undefined },\r\n                        samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState, sort: undefined, filter: undefined },\r\n                        sampleHistoryDataState: { ...inputParam.sampleHistoryDataState, sort: undefined, filter: undefined }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}