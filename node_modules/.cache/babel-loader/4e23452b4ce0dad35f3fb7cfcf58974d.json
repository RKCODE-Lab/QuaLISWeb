{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { sortData, constructOptionList, rearrangeDateFormat } from '../components/CommonScript';\nimport { toast } from 'react-toastify';\nimport Axios from 'axios';\nimport { initRequest } from './LoginAction';\nimport { intl } from '../components/App';\nimport { designProperties, SampleType, formCode } from '../components/Enumeration';\nexport function getDesignTemplateMappingDetail(designtemplatemapping, userInfo, masterData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"designtemplatemapping/getDesignTemplateMapping\", {\n      ndesigntemplatemappingcode: designtemplatemapping.ndesigntemplatemappingcode,\n      nsampletypecode: designtemplatemapping.nsampletypecode,\n      nregtypecode: designtemplatemapping.nregtypecode,\n      nregsubtypecode: designtemplatemapping.nregsubtypecode,\n      userinfo: userInfo,\n      nformcode: designtemplatemapping.nformcode\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response\n        }));\n      }\n    });\n  };\n}\nexport function getDesignTemplateMappingComboService(param) {\n  return function (dispatch) {\n    const screenName = param.screenName;\n    const operation = param.operation;\n    const userInfo = param.userInfo;\n    const nsampletypecode = param.realSampleValue;\n    const nregtypecode = param.realRegTypeValue;\n    const nregsubtypecode = param.realRegSubTypeValue;\n    const ncontrolCode = param.controlId;\n    const moduleTypeArray = param.moduleTypeArray; //if (//(operation === \"create\") && (nsampletypecode != -1) && (nregtypecode != -1) && (nregsubtypecode != -1)) {\n\n    let isValid = true;\n\n    if (nsampletypecode !== 4) {\n      if (nsampletypecode != -1 && nregtypecode != -1 && nregsubtypecode != -1) {\n        isValid = true;\n      } else {\n        isValid = false;\n      }\n    }\n\n    if (isValid) {\n      const designtemplatemappingService = rsapi.post(\"designtemplatemapping/getDynamicPreRegDesign\", {\n        userinfo: userInfo,\n        nsampletypecode,\n        nregtypecode,\n        nregsubtypecode\n      });\n      let urlArray = [designtemplatemappingService];\n      dispatch(initRequest(true));\n      Axios.all(urlArray).then(response => {\n        let selectedRecord = {\n          nnewmodule: moduleTypeArray[0]\n        };\n        let designtemplatemappingMap = constructOptionList(response[0].data.DesignTemplateMapping || [], \"nreactregtemplatecode\", \"sregtemplatename\", undefined, undefined, true);\n        const designtemplatemappingList = designtemplatemappingMap.get(\"OptionList\");\n        let subSampleTemplateList = [];\n        let testListFields = {};\n\n        if (nsampletypecode !== SampleType.Masters) {\n          designtemplatemappingMap = constructOptionList(response[0].data.SubSampleTemplate || [], \"nreactregtemplatecode\", \"sregtemplatename\", undefined, undefined, true);\n          subSampleTemplateList = designtemplatemappingMap.get(\"OptionList\");\n          testListFields = response[0].data.TestListFields.jsondata;\n        }\n\n        const qualisModuleMap = constructOptionList(response[0].data.DT_QualisModule || [], \"nmodulecode\", \"sdisplayname\", undefined, undefined, true);\n        const qualisModuleList = qualisModuleMap.get(\"OptionList\");\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            designtemplatemappingList,\n            subSampleTemplateList,\n            testListFields,\n            operation,\n            screenName,\n            selectedRecord,\n            openModal: true,\n            ncontrolCode,\n            loading: false,\n            designTemplateQualisModule: qualisModuleList\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(intl.formatMessage({\n            id: error.message\n          }));\n        } else {\n          toast.warn(intl.formatMessage({\n            id: error.response.data\n          }));\n        }\n      });\n    } else {\n      toast.warn(intl.formatMessage({\n        id: \"IDS_SELECTALLVALUESINFILTER\"\n      }));\n    }\n  };\n}\nexport function reloadDesignTemplateMapping(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"designtemplatemapping/getDesignTemplateMapping\", { ...inputParam.inputData\n    }).then(response => {\n      let responseData = { ...response.data\n      };\n      responseData = sortData(responseData);\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      }; //if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\n      //    inputParam.searchRef.current.value = \"\";\n\n      masterData['searchedData'] = undefined; //}\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          showFilter: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getTMPFilterRegType(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"designtemplatemapping/getTemplateRegType\", inputParam.inputData).then(response => {\n      let masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getTMPFilterRegSubType(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"designtemplatemapping/getTemplateRegSubType\", inputParam.inputData).then(response => {\n      let masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getTMPFilterSubmit(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    return rsapi.post(\"designtemplatemapping/getFilterSubmit\", inputParam.inputData).then(response => {\n      let masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      let listdesigntemplatemapping = sortData(response.data.DesignTemplateMapping);\n      masterData = { ...masterData,\n        listdesigntemplatemapping\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getMappedFieldProps(inputParam) {\n  return function (dispatch) {\n    const fieldService = rsapi.post('designtemplatemapping/getMappedFieldProps', {\n      designtemplatemapping: inputParam.inputData.designtemplatemapping,\n      userinfo: inputParam.inputData.userinfo\n    });\n    let urlArray = [fieldService];\n\n    if (inputParam.inputData[\"napprovalconfigcode\"]) {\n      const regSubTypeVersionService = rsapi.post(\"registrationsubtype/getApprovedVersion\", {\n        napprovalconfigcode: inputParam.inputData.napprovalconfigcode\n      });\n      urlArray.push(regSubTypeVersionService);\n    }\n\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(response => {\n      let dataResult = {};\n      let designData = response[0].data.jsondataobj || {}; //console.log(\"design:\", designData);\n\n      if (inputParam[\"SampleType\"] === SampleType.Masters) {\n        // Object.keys(designData).map(formcode => {\n        dataResult = [];\n        designData.mastertemplatefields.map(field => dataResult.push({\n          // label: field[designProperties.VALUE],\n          label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\n          griditem: designData.griditem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n          gridmoreitem: designData.gridmoreitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n          realData: field\n        })); // })                   \n      } else {\n        // const regSubTypeVersionData = response[1].data;\n        //if(regSubTypeVersionData &&  regSubTypeVersionData.jsondata.nneedsubsample === true){\n        if (inputParam.operation === \"configuresubsample\") {\n          Object.keys(designData).map(formcode => {\n            dataResult[formcode] = [];\n            designData.subsampletemplatefields.map(field => !Array.isArray(designData[formcode]) && dataResult[formcode].push({\n              //label: field[designProperties.VALUE],\n              label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\n              subsamplelistitem: designData[formcode].subsamplelistitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n              realData: field\n            }));\n          });\n        } else {\n          Object.keys(designData).map(formcode => {\n            dataResult[formcode] = [];\n            designData.sampletemplatefields.map(field => !Array.isArray(designData[formcode]) && dataResult[formcode].push({\n              // label: field[designProperties.VALUE],\n              label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\n              sampledisplayfields: designData[formcode].sampledisplayfields.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n              // samplelistitem: designData[formcode].samplelistitem.find(val => val[\"2\"] === field[designProperties.VALUE]) === undefined ? \"none\" : true,\n              samplelistitem: designData[formcode].samplelistitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n              samplelistmoreitems: designData[formcode].samplelistmoreitems ? designData[formcode].samplelistmoreitems.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined : false,\n              samplegriditem: designData[formcode].samplegriditem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n              samplegridmoreitem: designData[formcode].samplegridmoreitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\n              realData: field\n            }));\n          });\n        }\n      } // console.log(\"response[1].data:\", response[1].data);\n\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          loading: false,\n          designData: designData,\n          //response[0].data.jsondataobj,\n          approvedRegSubTypeVersion: inputParam.inputData[\"napprovalconfigcode\"] ? response[1].data : undefined,\n          dataResult,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolcode\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function combinationUniqueConfigService(inputParam) {\n  return function (dispatch) {\n    const fieldService = rsapi.post('designtemplatemapping/getMappedFieldProps', {\n      designtemplatemapping: inputParam.inputData.designtemplatemapping,\n      userinfo: inputParam.inputData.userinfo\n    });\n    let urlArray = [fieldService];\n\n    if (inputParam.inputData[\"napprovalconfigcode\"]) {\n      const regSubTypeVersionService = rsapi.post(\"registrationsubtype/getApprovedVersion\", {\n        napprovalconfigcode: inputParam.inputData.napprovalconfigcode\n      });\n      urlArray.push(regSubTypeVersionService);\n    }\n\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(response => {\n      let dataList = [];\n      let dataListCount = [];\n      let designData = response[0].data.jsondataobj || {};\n      let dataListSubSample = [];\n      let dataListCountSubSample = [];\n\n      if (inputParam[\"SampleType\"] === SampleType.Masters) {\n        dataList = designData.mastercombinationunique && [...designData.mastercombinationunique] || [];\n        designData.mastercombinationunique && designData.mastercombinationunique.map((item, index) => {\n          dataListCount.push(index);\n        });\n      } else {\n        dataList = designData.samplecombinationunique && [...designData.samplecombinationunique] || [];\n        designData.samplecombinationunique && designData.samplecombinationunique.map((item, index) => {\n          dataListCount.push(index);\n        });\n        dataListSubSample = designData.subsamplecombinationunique && [...designData.subsamplecombinationunique] || [];\n        designData.subsamplecombinationunique && designData.subsamplecombinationunique.map((item, index) => {\n          dataListCountSubSample.push(index);\n        });\n      }\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          loading: false,\n          designData: designData,\n          //response[0].data.jsondataobj,\n          approvedRegSubTypeVersion: inputParam.inputData[\"napprovalconfigcode\"] ? response[1].data : undefined,\n          dataList,\n          dataListCount,\n          dataListSubSample,\n          dataListCountSubSample,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolcode: inputParam.ncontrolcode\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function editFieldConfigService(inputParam) {\n  return function (dispatch) {\n    const fieldService = rsapi.post('designtemplatemapping/getMappedFieldProps', {\n      designtemplatemapping: inputParam.inputData.designtemplatemapping,\n      userinfo: inputParam.inputData.userinfo\n    });\n    const filterStatusService = rsapi.post('registration/getRegistrationFilterStatus', {\n      nregtypecode: inputParam.inputData.nregtypecode,\n      nregsubtypecode: inputParam.inputData.nregsubtypecode,\n      userinfo: { ...inputParam.inputData.userinfo,\n        nformcode: 43\n      }\n    });\n    let urlArray = [fieldService, filterStatusService];\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(response => {\n      let dataResult = {};\n      let designData = response[0].data.jsondataobj || {};\n      let filterStatus = response[1].data || [];\n      const list = filterStatus.filter(item => item[\"ntransactionstatus\"] !== 0);\n      filterStatus = list;\n      let selectedRecord = {};\n\n      if (inputParam[\"SampleType\"] === SampleType.Masters) {\n        dataResult = [];\n        designData.mastertemplatefields.map(field => dataResult.push({\n          label: field[designProperties.VALUE],\n          editablestatus: filterStatus,\n          realData: field\n        }));\n      } else {\n        if (inputParam.operation === \"configuresubsampleedit\") {\n          Object.keys(designData).map(formcode => {\n            dataResult[formcode] = [];\n            selectedRecord[formcode] = {};\n            const editArray = designData[formcode][\"subsampleeditable\"] || [];\n            designData.subsampletemplatefields.map(field => {\n              if (!Array.isArray(designData[formcode])) {\n                const index = editArray.findIndex(x => x.label === field[designProperties.VALUE]);\n\n                if (index !== -1) {\n                  const fieldEditStatus = editArray[index];\n\n                  if (fieldEditStatus.editableuntill.length > 0) {\n                    const statusArray = [];\n                    filterStatus.map(item1 => {\n                      const foundIndex = fieldEditStatus.editableuntill.findIndex(x => x === item1.ntransactionstatus);\n\n                      if (foundIndex !== -1) {\n                        statusArray.push({\n                          label: item1.stransdisplaystatus,\n                          value: item1.ntransactionstatus,\n                          item: item1\n                        });\n                      }\n                    });\n                    selectedRecord[formcode][field[designProperties.VALUE]] = statusArray;\n                    dataResult[formcode].push({\n                      label: field[designProperties.VALUE],\n                      editablestatus: filterStatus,\n                      realData: field\n                    });\n                  } else {\n                    dataResult[formcode].push({\n                      label: field[designProperties.VALUE],\n                      editablestatus: filterStatus,\n                      realData: field\n                    });\n                  }\n                }\n              }\n            });\n          });\n        } else {\n          Object.keys(designData).map(formcode => {\n            dataResult[formcode] = [];\n            selectedRecord[formcode] = {};\n            const editArray = designData[formcode][\"sampleeditable\"] || [];\n            designData.sampletemplatefields.map(field => {\n              if (!Array.isArray(designData[formcode])) {\n                const index = editArray.findIndex(x => x.label === field[designProperties.VALUE]);\n\n                if (index !== -1) {\n                  const fieldEditStatus = editArray[index];\n\n                  if (fieldEditStatus.editableuntill.length > 0) {\n                    const statusArray = [];\n                    filterStatus.map(item1 => {\n                      const foundIndex = fieldEditStatus.editableuntill.findIndex(x => x === item1.ntransactionstatus);\n\n                      if (foundIndex !== -1) {\n                        statusArray.push({\n                          label: item1.stransdisplaystatus,\n                          value: item1.ntransactionstatus,\n                          item: item1\n                        });\n                      }\n                    });\n                    selectedRecord[formcode][field[designProperties.VALUE]] = statusArray;\n                    dataResult[formcode].push({\n                      label: field[designProperties.VALUE],\n                      editablestatus: filterStatus,\n                      realData: field\n                    });\n                  } else {\n                    dataResult[formcode].push({\n                      label: field[designProperties.VALUE],\n                      editablestatus: filterStatus,\n                      realData: field\n                    });\n                  }\n                }\n              }\n            });\n          });\n        }\n      } // console.log(\"selectedRecord:\", selectedRecord);\n\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          loading: false,\n          editFieldDesignData: designData,\n          //response[0].data.jsondataobj,\n          //approvedRegSubTypeVersion: inputParam.inputData[\"napprovalconfigcode\"] ? response[1].data :undefined,\n          editFieldDataResult: dataResult,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolcode,\n          selectedRecord\n        }\n      });\n    }).catch(error => {\n      //console.log(\"error:\", error);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function mappingFieldConfigService(inputParam) {\n  return function (dispatch) {\n    let urlArray = [];\n    let regSubTypeVersionService;\n    let fieldService = [];\n    fieldService = rsapi.post(\"designtemplatemapping/getMappedfield\", {\n      \"ndesigntemplatemappingcode\": inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode.ndesigntemplatemappingcode,\n      \"userinfo\": inputParam.inputData.userinfo\n    });\n\n    if (inputParam.inputData[\"napprovalconfigcode\"]) {\n      regSubTypeVersionService = rsapi.post(\"registrationsubtype/getApprovedVersion\", {\n        napprovalconfigcode: inputParam.inputData.napprovalconfigcode\n      });\n    }\n\n    urlArray = [regSubTypeVersionService, fieldService];\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(response => {\n      let dateSubSamLablesNumber = [];\n      let dateSubSamLablesComboBox = [];\n      let selectedValue = [];\n      let data = {};\n      let count = 1;\n      let dateLablesnumber = [];\n      let dateLablescombobox = [];\n\n      if (response[1].data.mappedFields[0].jsondataobj !== null) {\n        response[1].data.mappedFields.map(row => {\n          let displaynameSampleqty = {\n            \"displayname\": row.jsondataobj.samplefields[0].nsampleqty['1']\n          };\n          let displaynameSubSampleqty = {\n            \"displayname\": row.jsondataobj.subsamplefields[0].nsampleqty['1']\n          };\n          let displaynameSampleunit = {\n            \"displayname\": row.jsondataobj.samplefields[0].nunitcode['1']\n          };\n          let displaynameSubSampleunit = {\n            \"displayname\": row.jsondataobj.subsamplefields[0].nunitcode['1']\n          };\n          const Quantity = {\n            \"label\": row.jsondataobj.samplefields[0].nsampleqty['2'],\n            \"value\": 1,\n            \"item\": displaynameSampleqty\n          };\n          const Unit = {\n            \"label\": row.jsondataobj.samplefields[0].nunitcode['2'],\n            \"value\": 2,\n            \"item\": displaynameSampleunit\n          };\n          const SubUnit = {\n            \"label\": row.jsondataobj.subsamplefields[0].nunitcode['2'],\n            \"value\": 3,\n            \"item\": displaynameSubSampleunit\n          };\n          const SubQuantity = {\n            \"label\": row.jsondataobj.subsamplefields[0].nsampleqty['2'],\n            \"value\": 4,\n            \"item\": displaynameSubSampleqty\n          };\n          const value = {\n            \"Quantity\": Quantity,\n            \"Unit\": Unit,\n            \"SubQuantity\": SubQuantity,\n            \"SubUnit\": SubUnit\n          };\n          selectedValue.push(value);\n        });\n      }\n\n      const needsubsample = response[0].data.jsondata.nneedsubsample !== undefined ? response[0].data.jsondata.nneedsubsample : false;\n      const samplename = inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode.sregtemplatename;\n      const mainSample = inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode.jsondata;\n      const subSample = inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode.subsamplejsondata;\n      mainSample.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.children) {\n              component.children.map(componentrow => {\n                if (componentrow.children) {\n                  if (componentrow.componentname === 'Number') {\n                    data = {\n                      \"LableName\": componentrow.label,\n                      \"displayvalue\": count++,\n                      \"displayname\": componentrow.displayname\n                    };\n                    dateLablesnumber.push(data);\n                  }\n\n                  if (componentrow.componentname === 'Combo Box' || componentrow.componentname === 'Drop Down') {\n                    data = {\n                      \"LableName\": componentrow.label,\n                      \"displayvalue\": count++,\n                      \"displayname\": componentrow.displayname\n                    };\n                    dateLablescombobox.push(data);\n                  }\n                } else {\n                  if (componentrow.componentname === 'Number') {\n                    data = {\n                      \"LableName\": componentrow.label,\n                      \"displayvalue\": count++,\n                      \"displayname\": componentrow.displayname\n                    };\n                    dateLablesnumber.push(data);\n                  }\n\n                  if (componentrow.componentname === 'Combo Box' || componentrow.componentname === 'Drop Down') {\n                    data = {\n                      \"LableName\": componentrow.label,\n                      \"displayvalue\": count++,\n                      \"displayname\": componentrow.displayname\n                    };\n                    dateLablescombobox.push(data);\n                  }\n                }\n              });\n            } else {\n              if (component.componentname === 'Number') {\n                data = {\n                  \"LableName\": component.label,\n                  \"displayvalue\": count++,\n                  \"displayname\": component.displayname\n                };\n                dateLablesnumber.push(data);\n              }\n\n              if (component.componentname === 'Combo Box' || component.componentname === 'Drop Down') {\n                data = {\n                  \"LableName\": component.label,\n                  \"displayvalue\": count++,\n                  \"displayname\": component.displayname\n                };\n                dateLablescombobox.push(data);\n              }\n            }\n          });\n        });\n      });\n      let countsubsample = 1;\n      subSample.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.children) {\n              component.children.map(componentrow => {\n                if (componentrow.children) {\n                  if (componentrow.componentname === 'Number') {\n                    data = {\n                      \"LableName\": componentrow.displayname[inputParam.inputData.userinfo.slanguagetypecode],\n                      \"displayvalue\": countsubsample++,\n                      \"displayname\": componentrow.displayname\n                    };\n                    dateSubSamLablesNumber.push(data);\n                  }\n\n                  if (componentrow.componentname === 'Combo Box' || componentrow.componentname === 'Drop Down') {\n                    data = {\n                      \"LableName\": componentrow.displayname[inputParam.inputData.userinfo.slanguagetypecode],\n                      \"displayvalue\": countsubsample++,\n                      \"displayname\": componentrow.displayname\n                    };\n                    dateSubSamLablesComboBox.push(data);\n                  }\n                } else {\n                  if (componentrow.componentname === 'Number') {\n                    data = {\n                      \"LableName\": componentrow.displayname[inputParam.inputData.userinfo.slanguagetypecode],\n                      \"displayvalue\": countsubsample++,\n                      \"displayname\": componentrow.displayname\n                    };\n                    dateSubSamLablesNumber.push(data);\n                  }\n\n                  if (componentrow.componentname === 'Combo Box' || componentrow.componentname === 'Drop Down') {\n                    data = {\n                      \"LableName\": componentrow.displayname[inputParam.inputData.userinfo.slanguagetypecode],\n                      \"displayvalue\": countsubsample++,\n                      \"displayname\": componentrow.displayname\n                    };\n                    dateSubSamLablesComboBox.push(data);\n                  }\n                }\n              });\n            } else {\n              if (component.componentname === 'Number') {\n                data = {\n                  \"LableName\": component.displayname[inputParam.inputData.userinfo.slanguagetypecode],\n                  \"displayvalue\": countsubsample++,\n                  \"displayname\": component.displayname\n                };\n                dateSubSamLablesNumber.push(data);\n              }\n\n              if (component.componentname === 'Combo Box' || component.componentname === 'Drop Down') {\n                data = {\n                  \"LableName\": component.displayname[inputParam.inputData.userinfo.slanguagetypecode],\n                  \"displayvalue\": countsubsample++,\n                  \"displayname\": component.displayname\n                };\n                dateSubSamLablesComboBox.push(data);\n              }\n            }\n          });\n        });\n      });\n      const sample = constructOptionList(dateLablesnumber || [], \"displayvalue\", \"LableName\", \"displayvalue\", undefined, true);\n      let SampleTemplateNumber = sample.get(\"OptionList\");\n      const sampleCombox = constructOptionList(dateLablescombobox || [], \"displayvalue\", \"LableName\", \"displayvalue\", undefined, true);\n      let SampleTemplatecombobox = sampleCombox.get(\"OptionList\");\n      const subSampleListNumber = constructOptionList(dateSubSamLablesNumber || [], \"displayvalue\", \"LableName\", \"displayvalue\", undefined, undefined);\n      let subSampleTemplateNumber = subSampleListNumber.get(\"OptionList\");\n      const subSampleListComboBox = constructOptionList(dateSubSamLablesComboBox || [], \"displayvalue\", \"LableName\", \"displayvalue\", undefined, undefined);\n      let subSampleTemplateCombobox = subSampleListComboBox.get(\"OptionList\");\n      const value = response[1].data.mappedFields[0].jsondataobj;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          loading: false,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolcode,\n          needsubsample,\n          SampleTemplateNumber,\n          SampleTemplatecombobox,\n          subSampleTemplateNumber,\n          subSampleTemplateCombobox,\n          samplename,\n          needsubsample,\n          selectedValue,\n          selectedRecord: value !== null ? selectedValue[0] : \"\"\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function auditFieldConfigService(inputParam) {\n  return function (dispatch) {\n    const fieldService = rsapi.post('designtemplatemapping/getAuditMappedFieldProps', {\n      designtemplatemapping: inputParam.inputData.designtemplatemapping,\n      userinfo: inputParam.inputData.userinfo\n    });\n    let urlArray = [fieldService];\n\n    if (inputParam.inputData[\"napprovalconfigcode\"]) {\n      const regSubTypeVersionService = rsapi.post(\"registrationsubtype/getApprovedVersion\", {\n        napprovalconfigcode: inputParam.inputData.napprovalconfigcode\n      });\n      urlArray.push(regSubTypeVersionService);\n    }\n\n    dispatch(initRequest(true));\n    Axios.all(urlArray).then(response => {\n      let dataResult = {};\n      let designData = response[0].data[\"MappedTemplateFieldProps\"].jsondataobj || {};\n      const dynamicTable = response[0].data[\"DynamicAuditRecordTable\"] ? Object.keys(response[0].data[\"DynamicAuditRecordTable\"]) : {};\n      let auditData = response[0].data[\"DynamicAuditRecordTable\"] || {};\n      console.log(\"design:\", designData, inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode);\n      console.log(\"auditData:\", auditData);\n\n      if (inputParam[\"SampleType\"] === SampleType.Masters) {\n        const formcode = Object.keys(auditData)[0];\n        dataResult[formcode] = {\n          \"dynamicmaster\": []\n        }; //const tableArray = Object.keys(auditData[formcode]) || [];\n        // tableArray.map(item => dataResult[formcode][item] = []);\n\n        designData.mastertemplatefields.map(field => {\n          //if(!Array.isArray(designData))\n          //  {    \n          dataResult[formcode][\"dynamicmaster\"].push({\n            //label: field[designProperties.VALUE],\n            label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\n            sampleauditfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.auditcapturefields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\n            sampleauditeditfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.editmandatoryfields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\n            realData: field\n          });\n        });\n        designData = {\n          [formcode]: { ...designData,\n            \"dynamicmaster\": {\n              sampleauditfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.auditcapturefields,\n              sampleauditeditfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.editmandatoryfields,\n              multilingualfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.multilingualfields\n            }\n          }\n        }; // designData = {[formcode] : {\"dynamicmaster\": {...designData, \n        //                                                 sampleauditeditfields : auditData[formcode][\"dynamicmaster\"].jsondataobj.editmandatoryfields, \n        //                                                 multilingualfields:auditData[formcode][\"dynamicmaster\"].jsondataobj.multilingualfields\n        //                                             }\n        //                                         }};\n        // }\n        //})                                \n      } else {\n        Object.keys(designData).map(formcode => {\n          if (parseInt(formcode) === formCode.SAMPLEREGISTRATION) {\n            dataResult[formcode] = [];\n            const tableArray = Object.keys(auditData[formcode]) || [];\n            tableArray.map(item => dataResult[formcode][item] = []);\n            designData.sampletemplatefields.map(field => {\n              if (!Array.isArray(designData[formcode])) {\n                dataResult[formcode][\"registration\"].push({\n                  //label: field[designProperties.VALUE],\n                  label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\n                  sampleauditfields: auditData[formcode][\"registration\"].jsondataobj.auditcapturefields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\n                  sampleauditeditfields: auditData[formcode][\"registration\"].jsondataobj.editmandatoryfields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\n                  realData: field\n                });\n                designData[formcode][\"registration\"] = { ...designData[formcode][\"registration\"],\n                  sampleauditfields: auditData[formcode][\"registration\"].jsondataobj.auditcapturefields,\n                  multilingualfields: auditData[formcode][\"registration\"].jsondataobj.auditData\n                };\n                designData[formcode][\"registration\"] = { ...designData[formcode][\"registration\"],\n                  sampleauditeditfields: auditData[formcode][\"registration\"].jsondataobj.editmandatoryfields,\n                  multilingualfields: auditData[formcode][\"registration\"].jsondataobj.multilingualfields\n                };\n              }\n            });\n\n            if (inputParam.inputData.nneedsubsample) {\n              designData.subsampletemplatefields.map(field => {\n                if (!Array.isArray(designData[formcode])) {\n                  dataResult[formcode][\"registrationsample\"].push({\n                    //label: field[designProperties.VALUE],\n                    label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\n                    subsampleauditfields: auditData[formcode][\"registrationsample\"].jsondataobj.auditcapturefields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\n                    subsampleauditeditfields: auditData[formcode][\"registrationsample\"].jsondataobj.editmandatoryfields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\n                    realData: field\n                  });\n                  designData[formcode][\"registrationsample\"] = { ...designData[formcode][\"registrationsample\"],\n                    subsampleauditfields: auditData[formcode][\"registrationsample\"].jsondataobj.auditcapturefields,\n                    multilingualfields: auditData[formcode][\"registrationsample\"].jsondataobj.multilingualfields\n                  };\n                  designData[formcode][\"registrationsample\"] = { ...designData[formcode][\"registrationsample\"],\n                    subsampleauditeditfields: auditData[formcode][\"registrationsample\"].jsondataobj.editmandatoryfields,\n                    multilingualfields: auditData[formcode][\"registrationsample\"].jsondataobj.multilingualfields\n                  };\n                }\n              });\n            }\n          }\n        });\n      }\n\n      console.log(\"response[1].data:\", designData, \"dataResult:\", dataResult);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openModal: true,\n          loading: false,\n          auditFieldDesignData: designData,\n          //response[0].data.jsondataobj,\n          approvedRegSubTypeVersion: inputParam.inputData[\"napprovalconfigcode\"] ? response[1].data : undefined,\n          auditFieldDataResult: dataResult,\n          auditData,\n          auditTable: dynamicTable,\n          operation: inputParam.operation,\n          screenName: inputParam.screenName,\n          ncontrolCode: inputParam.ncontrolcode\n        }\n      });\n    }).catch(error => {\n      console.log(\"error:\", error);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/DesignTemplateMappingAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","constructOptionList","rearrangeDateFormat","toast","Axios","initRequest","intl","designProperties","SampleType","formCode","getDesignTemplateMappingDetail","designtemplatemapping","userInfo","masterData","dispatch","post","ndesigntemplatemappingcode","nsampletypecode","nregtypecode","nregsubtypecode","userinfo","nformcode","then","response","data","type","payload","loading","catch","error","status","formatMessage","id","message","warn","getDesignTemplateMappingComboService","param","screenName","operation","realSampleValue","realRegTypeValue","realRegSubTypeValue","ncontrolCode","controlId","moduleTypeArray","isValid","designtemplatemappingService","urlArray","all","selectedRecord","nnewmodule","designtemplatemappingMap","DesignTemplateMapping","undefined","designtemplatemappingList","get","subSampleTemplateList","testListFields","Masters","SubSampleTemplate","TestListFields","jsondata","qualisModuleMap","DT_QualisModule","qualisModuleList","openModal","designTemplateQualisModule","reloadDesignTemplateMapping","inputParam","inputData","responseData","showFilter","getTMPFilterRegType","getTMPFilterRegSubType","getTMPFilterSubmit","listdesigntemplatemapping","getMappedFieldProps","fieldService","regSubTypeVersionService","napprovalconfigcode","push","dataResult","designData","jsondataobj","mastertemplatefields","map","field","label","LABEL","slanguagetypecode","griditem","find","val","VALUE","gridmoreitem","realData","Object","keys","formcode","subsampletemplatefields","Array","isArray","subsamplelistitem","sampletemplatefields","sampledisplayfields","samplelistitem","samplelistmoreitems","samplegriditem","samplegridmoreitem","approvedRegSubTypeVersion","ncontrolcode","combinationUniqueConfigService","dataList","dataListCount","dataListSubSample","dataListCountSubSample","mastercombinationunique","item","index","samplecombinationunique","subsamplecombinationunique","editFieldConfigService","filterStatusService","filterStatus","list","filter","editablestatus","editArray","findIndex","x","fieldEditStatus","editableuntill","length","statusArray","item1","foundIndex","ntransactionstatus","stransdisplaystatus","value","editFieldDesignData","editFieldDataResult","mappingFieldConfigService","dateSubSamLablesNumber","dateSubSamLablesComboBox","selectedValue","count","dateLablesnumber","dateLablescombobox","mappedFields","row","displaynameSampleqty","samplefields","nsampleqty","displaynameSubSampleqty","subsamplefields","displaynameSampleunit","nunitcode","displaynameSubSampleunit","Quantity","Unit","SubUnit","SubQuantity","needsubsample","nneedsubsample","samplename","sregtemplatename","mainSample","subSample","subsamplejsondata","children","column","component","componentrow","componentname","displayname","countsubsample","sample","SampleTemplateNumber","sampleCombox","SampleTemplatecombobox","subSampleListNumber","subSampleTemplateNumber","subSampleListComboBox","subSampleTemplateCombobox","auditFieldConfigService","dynamicTable","auditData","console","log","sampleauditfields","auditcapturefields","sampleauditeditfields","editmandatoryfields","multilingualfields","parseInt","SAMPLEREGISTRATION","tableArray","subsampleauditfields","subsampleauditeditfields","auditFieldDesignData","auditFieldDataResult","auditTable"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData, constructOptionList, rearrangeDateFormat } from '../components/CommonScript'\r\nimport { toast } from 'react-toastify';\r\nimport Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport { intl } from '../components/App';\r\nimport { designProperties, SampleType, formCode } from '../components/Enumeration';\r\n\r\nexport function getDesignTemplateMappingDetail(designtemplatemapping, userInfo, masterData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n\r\n        return rsapi.post(\"designtemplatemapping/getDesignTemplateMapping\", {\r\n            ndesigntemplatemappingcode: designtemplatemapping.ndesigntemplatemappingcode,\r\n            nsampletypecode: designtemplatemapping.nsampletypecode,\r\n            nregtypecode: designtemplatemapping.nregtypecode,\r\n            nregsubtypecode: designtemplatemapping.nregsubtypecode,\r\n            userinfo: userInfo,\r\n            nformcode: designtemplatemapping.nformcode,\r\n        })\r\n            .then(response => {\r\n\r\n                masterData = { ...masterData, ...response.data };\r\n                sortData(masterData);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { masterData, loading: false } });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({ id: error.message }));\r\n                }\r\n                else {\r\n\r\n                    toast.warn(intl.formatMessage({ id: error.response }));\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getDesignTemplateMappingComboService(param) {\r\n    return function (dispatch) {\r\n\r\n        const screenName = param.screenName;\r\n        const operation = param.operation;\r\n        const userInfo = param.userInfo;\r\n        const nsampletypecode = param.realSampleValue;\r\n        const nregtypecode = param.realRegTypeValue;\r\n        const nregsubtypecode = param.realRegSubTypeValue;\r\n        const ncontrolCode = param.controlId;\r\n        const moduleTypeArray = param.moduleTypeArray;\r\n        //if (//(operation === \"create\") && (nsampletypecode != -1) && (nregtypecode != -1) && (nregsubtypecode != -1)) {\r\n\r\n        let isValid = true;\r\n        if (nsampletypecode !== 4) {\r\n            if ((nsampletypecode != -1) && (nregtypecode != -1) && (nregsubtypecode != -1)) {\r\n                isValid = true;\r\n            }\r\n            else {\r\n                isValid = false;\r\n            }\r\n        }\r\n\r\n        if (isValid) {\r\n            const designtemplatemappingService = rsapi.post(\"designtemplatemapping/getDynamicPreRegDesign\", { userinfo: userInfo, nsampletypecode, nregtypecode, nregsubtypecode });\r\n            let urlArray = [designtemplatemappingService];\r\n            dispatch(initRequest(true));\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n                    let selectedRecord = { nnewmodule: moduleTypeArray[0] };\r\n                    let designtemplatemappingMap = constructOptionList(response[0].data.DesignTemplateMapping || [], \"nreactregtemplatecode\",\r\n                        \"sregtemplatename\", undefined, undefined, true);\r\n                    const designtemplatemappingList = designtemplatemappingMap.get(\"OptionList\");\r\n\r\n                    let subSampleTemplateList = [];\r\n                    let testListFields = {};\r\n                    if (nsampletypecode !== SampleType.Masters) {\r\n\r\n                        designtemplatemappingMap = constructOptionList(response[0].data.SubSampleTemplate || [], \"nreactregtemplatecode\",\r\n                            \"sregtemplatename\", undefined, undefined, true);\r\n\r\n                        subSampleTemplateList = designtemplatemappingMap.get(\"OptionList\");\r\n\r\n                        testListFields = response[0].data.TestListFields.jsondata;\r\n                    }\r\n\r\n                    const qualisModuleMap = constructOptionList(response[0].data.DT_QualisModule || [], \"nmodulecode\",\r\n                        \"sdisplayname\", undefined, undefined, true);\r\n\r\n                    const qualisModuleList = qualisModuleMap.get(\"OptionList\");\r\n\r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n\r\n                            designtemplatemappingList,\r\n                            subSampleTemplateList,\r\n                            testListFields,\r\n                            operation, screenName, selectedRecord, openModal: true,\r\n                            ncontrolCode, loading: false,\r\n                            designTemplateQualisModule: qualisModuleList\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(intl.formatMessage({ id: error.message }));\r\n                    }\r\n                    else {\r\n\r\n                        toast.warn(intl.formatMessage({ id: error.response.data }));\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n\r\n            toast.warn(intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" }));\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport function reloadDesignTemplateMapping(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"designtemplatemapping/getDesignTemplateMapping\", { ...inputParam.inputData })\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                //if (inputParam.searchRef !== undefined && inputParam.searchRef.current !== null) {\r\n                //    inputParam.searchRef.current.value = \"\";\r\n                masterData['searchedData'] = undefined\r\n                //}\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTMPFilterRegType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"designtemplatemapping/getTemplateRegType\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTMPFilterRegSubType(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"designtemplatemapping/getTemplateRegSubType\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getTMPFilterSubmit(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"designtemplatemapping/getFilterSubmit\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = { ...inputParam.masterData, ...response.data }\r\n                let listdesigntemplatemapping = sortData(response.data.DesignTemplateMapping);\r\n                masterData = { ...masterData, listdesigntemplatemapping }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData, loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport function getMappedFieldProps(inputParam) {\r\n    return function (dispatch) {\r\n        const fieldService = rsapi.post('designtemplatemapping/getMappedFieldProps',\r\n            {\r\n                designtemplatemapping: inputParam.inputData.designtemplatemapping,\r\n                userinfo: inputParam.inputData.userinfo\r\n            });\r\n        let urlArray = [fieldService];\r\n\r\n        if (inputParam.inputData[\"napprovalconfigcode\"]) {\r\n            const regSubTypeVersionService = rsapi.post(\"registrationsubtype/getApprovedVersion\",\r\n                { napprovalconfigcode: inputParam.inputData.napprovalconfigcode });\r\n\r\n            urlArray.push(regSubTypeVersionService);\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let dataResult = {};\r\n                let designData = response[0].data.jsondataobj || {};\r\n                //console.log(\"design:\", designData);\r\n\r\n                if (inputParam[\"SampleType\"] === SampleType.Masters) {\r\n                    // Object.keys(designData).map(formcode => {\r\n                    dataResult = [];\r\n                    designData.mastertemplatefields.map(field =>\r\n                        dataResult.push({\r\n                            // label: field[designProperties.VALUE],\r\n                            label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\r\n                            griditem: designData.griditem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                            gridmoreitem: designData.gridmoreitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                            realData: field\r\n                        })\r\n                    )\r\n                    // })                   \r\n                }\r\n                else {\r\n                    // const regSubTypeVersionData = response[1].data;\r\n                    //if(regSubTypeVersionData &&  regSubTypeVersionData.jsondata.nneedsubsample === true){\r\n                    if (inputParam.operation === \"configuresubsample\") {\r\n                        Object.keys(designData).map(formcode => {\r\n                            dataResult[formcode] = [];\r\n                            designData.subsampletemplatefields.map(field =>\r\n                                !Array.isArray(designData[formcode]) &&\r\n                                dataResult[formcode].push({\r\n                                    //label: field[designProperties.VALUE],\r\n                                    label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\r\n                                    subsamplelistitem: designData[formcode].subsamplelistitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                                    realData: field\r\n                                })\r\n                            )\r\n                        })\r\n                    }\r\n                    else {\r\n                        Object.keys(designData).map(formcode => {\r\n                            dataResult[formcode] = [];\r\n                            designData.sampletemplatefields.map(field =>\r\n\r\n                                !Array.isArray(designData[formcode]) &&\r\n                                dataResult[formcode].push({\r\n                                    // label: field[designProperties.VALUE],\r\n                                    label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\r\n                                    sampledisplayfields: designData[formcode].sampledisplayfields.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                                    // samplelistitem: designData[formcode].samplelistitem.find(val => val[\"2\"] === field[designProperties.VALUE]) === undefined ? \"none\" : true,\r\n                                    samplelistitem: designData[formcode].samplelistitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                                    samplelistmoreitems: designData[formcode].samplelistmoreitems ? designData[formcode].samplelistmoreitems.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined : false,\r\n                                    samplegriditem: designData[formcode].samplegriditem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                                    samplegridmoreitem: designData[formcode].samplegridmoreitem.find(val => val[\"2\"] === field[designProperties.VALUE]) !== undefined,\r\n                                    realData: field\r\n                                })\r\n                            )\r\n                        })\r\n                    }\r\n                }\r\n                // console.log(\"response[1].data:\", response[1].data);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        openModal: true,\r\n                        loading: false,\r\n                        designData: designData,//response[0].data.jsondataobj,\r\n                        approvedRegSubTypeVersion: inputParam.inputData[\"napprovalconfigcode\"] ? response[1].data : undefined,\r\n                        dataResult,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolcode\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function combinationUniqueConfigService(inputParam) {\r\n    return function (dispatch) {\r\n        const fieldService = rsapi.post('designtemplatemapping/getMappedFieldProps',\r\n            {\r\n                designtemplatemapping: inputParam.inputData.designtemplatemapping,\r\n                userinfo: inputParam.inputData.userinfo\r\n            });\r\n        let urlArray = [fieldService];\r\n\r\n        if (inputParam.inputData[\"napprovalconfigcode\"]) {\r\n            const regSubTypeVersionService = rsapi.post(\"registrationsubtype/getApprovedVersion\",\r\n                { napprovalconfigcode: inputParam.inputData.napprovalconfigcode });\r\n\r\n            urlArray.push(regSubTypeVersionService);\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let dataList = [];\r\n                let dataListCount = [];\r\n                let designData = response[0].data.jsondataobj || {};\r\n\r\n                let dataListSubSample = []\r\n                let dataListCountSubSample = [];\r\n\r\n                if (inputParam[\"SampleType\"] === SampleType.Masters) {\r\n                    dataList = designData.mastercombinationunique && [...designData.mastercombinationunique] || []\r\n                    designData.mastercombinationunique && designData.mastercombinationunique.map((item, index) => { dataListCount.push(index) })\r\n                } else {\r\n                    dataList = designData.samplecombinationunique && [...designData.samplecombinationunique] || []\r\n                    designData.samplecombinationunique && designData.samplecombinationunique.map((item, index) => { dataListCount.push(index) })\r\n\r\n                    dataListSubSample = designData.subsamplecombinationunique && [...designData.subsamplecombinationunique] || []\r\n                    designData.subsamplecombinationunique && designData.subsamplecombinationunique.map((item, index) => { dataListCountSubSample.push(index) })\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        openModal: true,\r\n                        loading: false,\r\n                        designData: designData,//response[0].data.jsondataobj,\r\n                        approvedRegSubTypeVersion: inputParam.inputData[\"napprovalconfigcode\"] ? response[1].data : undefined,\r\n                        dataList, dataListCount, dataListSubSample, dataListCountSubSample,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolcode: inputParam.ncontrolcode\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function editFieldConfigService(inputParam) {\r\n    return function (dispatch) {\r\n        const fieldService = rsapi.post('designtemplatemapping/getMappedFieldProps',\r\n            {\r\n                designtemplatemapping: inputParam.inputData.designtemplatemapping,\r\n                userinfo: inputParam.inputData.userinfo\r\n            });\r\n\r\n        const filterStatusService = rsapi.post('registration/getRegistrationFilterStatus',\r\n            {\r\n                nregtypecode: inputParam.inputData.nregtypecode,\r\n                nregsubtypecode: inputParam.inputData.nregsubtypecode,\r\n                userinfo: { ...inputParam.inputData.userinfo, nformcode: 43 }\r\n            });\r\n        let urlArray = [fieldService, filterStatusService];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let dataResult = {};\r\n                let designData = response[0].data.jsondataobj || {};\r\n                let filterStatus = response[1].data || [];\r\n\r\n                const list = filterStatus.filter(item => item[\"ntransactionstatus\"] !== 0)\r\n                filterStatus = list;\r\n\r\n                let selectedRecord = {};\r\n                if (inputParam[\"SampleType\"] === SampleType.Masters) {\r\n                    dataResult = [];\r\n                    designData.mastertemplatefields.map(field =>\r\n                        dataResult.push({ label: field[designProperties.VALUE], editablestatus: filterStatus, realData: field })\r\n                    )\r\n                }\r\n                else {\r\n                    if (inputParam.operation === \"configuresubsampleedit\") {\r\n                        Object.keys(designData).map(formcode => {\r\n                            dataResult[formcode] = [];\r\n                            selectedRecord[formcode] = {};\r\n                            const editArray = designData[formcode][\"subsampleeditable\"] || [];\r\n\r\n                            designData.subsampletemplatefields.map(field => {\r\n                                if (!Array.isArray(designData[formcode])) {\r\n                                    const index = editArray.findIndex(x => x.label === field[designProperties.VALUE]);\r\n                                    if (index !== -1) {\r\n                                        const fieldEditStatus = editArray[index];\r\n                                        if (fieldEditStatus.editableuntill.length > 0) {\r\n                                            const statusArray = [];\r\n                                            filterStatus.map(item1 => {\r\n\r\n                                                const foundIndex = fieldEditStatus.editableuntill.findIndex(x => x === item1.ntransactionstatus);\r\n\r\n                                                if (foundIndex !== -1) {\r\n                                                    statusArray.push({ label: item1.stransdisplaystatus, value: item1.ntransactionstatus, item: item1 });\r\n                                                }\r\n                                            })\r\n                                            selectedRecord[formcode][field[designProperties.VALUE]] = statusArray;\r\n\r\n                                            dataResult[formcode].push({\r\n                                                label: field[designProperties.VALUE],\r\n                                                editablestatus: filterStatus,\r\n                                                realData: field\r\n                                            })\r\n                                        } else {\r\n\r\n                                            dataResult[formcode].push({\r\n                                                label: field[designProperties.VALUE],\r\n                                                editablestatus: filterStatus,\r\n                                                realData: field\r\n                                            })\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            })\r\n\r\n                        })\r\n                    }\r\n                    else {\r\n                        Object.keys(designData).map(formcode => {\r\n                            dataResult[formcode] = [];\r\n                            selectedRecord[formcode] = {};\r\n                            const editArray = designData[formcode][\"sampleeditable\"] || [];\r\n\r\n                            designData.sampletemplatefields.map(field => {\r\n                                if (!Array.isArray(designData[formcode])) {\r\n\r\n                                    const index = editArray.findIndex(x => x.label === field[designProperties.VALUE]);\r\n                                    if (index !== -1) {\r\n                                        const fieldEditStatus = editArray[index];\r\n                                        if (fieldEditStatus.editableuntill.length > 0) {\r\n                                            const statusArray = [];\r\n                                            filterStatus.map(item1 => {\r\n\r\n                                                const foundIndex = fieldEditStatus.editableuntill.findIndex(x => x === item1.ntransactionstatus);\r\n\r\n                                                if (foundIndex !== -1) {\r\n                                                    statusArray.push({ label: item1.stransdisplaystatus, value: item1.ntransactionstatus, item: item1 });\r\n                                                }\r\n                                            })\r\n                                            selectedRecord[formcode][field[designProperties.VALUE]] = statusArray;\r\n\r\n                                            dataResult[formcode].push({\r\n                                                label: field[designProperties.VALUE],\r\n                                                editablestatus: filterStatus,\r\n                                                realData: field\r\n                                            })\r\n                                        } else {\r\n\r\n                                            dataResult[formcode].push({\r\n                                                label: field[designProperties.VALUE],\r\n                                                editablestatus: filterStatus,\r\n                                                realData: field\r\n                                            })\r\n                                        }\r\n\r\n                                    }\r\n                                }\r\n                            })\r\n\r\n                        })\r\n                    }\r\n                }\r\n\r\n                // console.log(\"selectedRecord:\", selectedRecord);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        openModal: true,\r\n                        loading: false,\r\n                        editFieldDesignData: designData,//response[0].data.jsondataobj,\r\n                        //approvedRegSubTypeVersion: inputParam.inputData[\"napprovalconfigcode\"] ? response[1].data :undefined,\r\n                        editFieldDataResult: dataResult,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolcode,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                //console.log(\"error:\", error);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function mappingFieldConfigService(inputParam) {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        let regSubTypeVersionService;\r\n        let fieldService = [];\r\n        fieldService = rsapi.post(\"designtemplatemapping/getMappedfield\",\r\n            { \"ndesigntemplatemappingcode\": inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode.ndesigntemplatemappingcode, \"userinfo\": inputParam.inputData.userinfo });\r\n        if (inputParam.inputData[\"napprovalconfigcode\"]) {\r\n\r\n            regSubTypeVersionService = rsapi.post(\"registrationsubtype/getApprovedVersion\",\r\n                { napprovalconfigcode: inputParam.inputData.napprovalconfigcode });\r\n\r\n        }\r\n        urlArray = [regSubTypeVersionService, fieldService];\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let dateSubSamLablesNumber = [];\r\n                let dateSubSamLablesComboBox = [];\r\n                let selectedValue = [];\r\n                let data = {};\r\n                let count = 1;\r\n                let dateLablesnumber = [];\r\n                let dateLablescombobox = [];\r\n                if (response[1].data.mappedFields[0].jsondataobj !== null) {\r\n                    response[1].data.mappedFields.map((row) => {\r\n                        let displaynameSampleqty = { \"displayname\": row.jsondataobj.samplefields[0].nsampleqty['1'] }\r\n                        let displaynameSubSampleqty = { \"displayname\": row.jsondataobj.subsamplefields[0].nsampleqty['1'] }\r\n                        let displaynameSampleunit = { \"displayname\": row.jsondataobj.samplefields[0].nunitcode['1'] }\r\n                        let displaynameSubSampleunit = { \"displayname\": row.jsondataobj.subsamplefields[0].nunitcode['1'] }\r\n                        const Quantity = { \"label\": row.jsondataobj.samplefields[0].nsampleqty['2'], \"value\": 1, \"item\": displaynameSampleqty };\r\n                        const Unit = { \"label\": row.jsondataobj.samplefields[0].nunitcode['2'], \"value\": 2, \"item\": displaynameSampleunit }\r\n                        const SubUnit = { \"label\": row.jsondataobj.subsamplefields[0].nunitcode['2'], \"value\": 3, \"item\": displaynameSubSampleunit }\r\n                        const SubQuantity = { \"label\": row.jsondataobj.subsamplefields[0].nsampleqty['2'], \"value\": 4, \"item\": displaynameSubSampleqty }\r\n                        const value = { \"Quantity\": Quantity, \"Unit\": Unit, \"SubQuantity\": SubQuantity, \"SubUnit\": SubUnit }\r\n                        selectedValue.push(value);\r\n                    });\r\n                }\r\n                const needsubsample = response[0].data.jsondata.nneedsubsample !== undefined ? response[0].data.jsondata.nneedsubsample : false;\r\n                const samplename = inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode.sregtemplatename;\r\n                const mainSample = inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode.jsondata;\r\n                const subSample = inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode.subsamplejsondata;\r\n                mainSample.map((row) => {\r\n                    row.children.map((column) => {\r\n                        column.children.map((component) => {\r\n                            if (component.children) {\r\n                                component.children.map((componentrow) => {\r\n                                    if (componentrow.children) {\r\n                                        if (componentrow.componentname === 'Number') {\r\n                                            data = { \"LableName\": componentrow.label, \"displayvalue\": count++, \"displayname\": componentrow.displayname }\r\n                                            dateLablesnumber.push(data)\r\n                                        }\r\n                                        if (componentrow.componentname === 'Combo Box' || componentrow.componentname === 'Drop Down') {\r\n                                            data = { \"LableName\": componentrow.label, \"displayvalue\": count++, \"displayname\": componentrow.displayname }\r\n                                            dateLablescombobox.push(data)\r\n\r\n                                        }\r\n                                    }\r\n                                    else {\r\n                                        if (componentrow.componentname === 'Number') {\r\n                                            data = { \"LableName\": componentrow.label, \"displayvalue\": count++, \"displayname\": componentrow.displayname }\r\n                                            dateLablesnumber.push(data)\r\n                                        }\r\n                                        if (componentrow.componentname === 'Combo Box' || componentrow.componentname === 'Drop Down') {\r\n                                            data = { \"LableName\": componentrow.label, \"displayvalue\": count++, \"displayname\": componentrow.displayname }\r\n                                            dateLablescombobox.push(data)\r\n\r\n                                        }\r\n                                    }\r\n                                })\r\n                            } else {\r\n                                if (component.componentname === 'Number') {\r\n                                    data = { \"LableName\": component.label, \"displayvalue\": count++, \"displayname\": component.displayname }\r\n                                    dateLablesnumber.push(data)\r\n                                }\r\n                                if (component.componentname === 'Combo Box' || component.componentname === 'Drop Down') {\r\n                                    data = { \"LableName\": component.label, \"displayvalue\": count++, \"displayname\": component.displayname }\r\n                                    dateLablescombobox.push(data)\r\n\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n                let countsubsample = 1\r\n                subSample.map((row) => {\r\n                    row.children.map((column) => {\r\n                        column.children.map((component) => {\r\n                            if (component.children) {\r\n                                component.children.map((componentrow) => {\r\n                                    if (componentrow.children) {\r\n                                        if (componentrow.componentname === 'Number') {\r\n                                            data = { \"LableName\": componentrow.displayname[inputParam.inputData.userinfo.slanguagetypecode], \"displayvalue\": countsubsample++, \"displayname\": componentrow.displayname }\r\n                                            dateSubSamLablesNumber.push(data)\r\n\r\n                                        }\r\n                                        if (componentrow.componentname === 'Combo Box' || componentrow.componentname === 'Drop Down') {\r\n                                            data = { \"LableName\": componentrow.displayname[inputParam.inputData.userinfo.slanguagetypecode], \"displayvalue\": countsubsample++, \"displayname\": componentrow.displayname }\r\n                                            dateSubSamLablesComboBox.push(data)\r\n\r\n                                        }\r\n                                    } else {\r\n                                        if (componentrow.componentname === 'Number') {\r\n                                            data = { \"LableName\": componentrow.displayname[inputParam.inputData.userinfo.slanguagetypecode], \"displayvalue\": countsubsample++, \"displayname\": componentrow.displayname }\r\n                                            dateSubSamLablesNumber.push(data)\r\n\r\n                                        }\r\n                                        if (componentrow.componentname === 'Combo Box' || componentrow.componentname === 'Drop Down') {\r\n                                            data = { \"LableName\": componentrow.displayname[inputParam.inputData.userinfo.slanguagetypecode], \"displayvalue\": countsubsample++, \"displayname\": componentrow.displayname }\r\n                                            dateSubSamLablesComboBox.push(data)\r\n\r\n                                        }\r\n                                    }\r\n                                })\r\n                            } else {\r\n                                if (component.componentname === 'Number') {\r\n                                    data = { \"LableName\": component.displayname[inputParam.inputData.userinfo.slanguagetypecode], \"displayvalue\": countsubsample++, \"displayname\": component.displayname }\r\n                                    dateSubSamLablesNumber.push(data)\r\n                                }\r\n                                if (component.componentname === 'Combo Box' || component.componentname === 'Drop Down') {\r\n                                    data = { \"LableName\": component.displayname[inputParam.inputData.userinfo.slanguagetypecode], \"displayvalue\": countsubsample++, \"displayname\": component.displayname }\r\n                                    dateSubSamLablesComboBox.push(data)\r\n\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n                const sample = constructOptionList(dateLablesnumber || [], \"displayvalue\",\r\n                    \"LableName\", \"displayvalue\", undefined, true);\r\n                let SampleTemplateNumber = sample.get(\"OptionList\");\r\n                const sampleCombox = constructOptionList(dateLablescombobox || [], \"displayvalue\",\r\n                    \"LableName\", \"displayvalue\", undefined, true);\r\n                let SampleTemplatecombobox = sampleCombox.get(\"OptionList\");\r\n                const subSampleListNumber = constructOptionList(dateSubSamLablesNumber || [], \"displayvalue\",\r\n                    \"LableName\", \"displayvalue\", undefined, undefined);\r\n                let subSampleTemplateNumber = subSampleListNumber.get(\"OptionList\");\r\n                const subSampleListComboBox = constructOptionList(dateSubSamLablesComboBox || [], \"displayvalue\",\r\n                    \"LableName\", \"displayvalue\", undefined, undefined);\r\n                let subSampleTemplateCombobox = subSampleListComboBox.get(\"OptionList\");\r\n                const value = response[1].data.mappedFields[0].jsondataobj;\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        openModal: true,\r\n                        loading: false,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolcode,\r\n                        needsubsample, SampleTemplateNumber, SampleTemplatecombobox,\r\n                        subSampleTemplateNumber, subSampleTemplateCombobox, samplename, needsubsample,\r\n                        selectedValue, selectedRecord: value !== null ? selectedValue[0] : \"\"\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function auditFieldConfigService(inputParam) {\r\n    return function (dispatch) {\r\n        const fieldService = rsapi.post('designtemplatemapping/getAuditMappedFieldProps',\r\n            {\r\n                designtemplatemapping: inputParam.inputData.designtemplatemapping,\r\n                userinfo: inputParam.inputData.userinfo\r\n            });\r\n        let urlArray = [fieldService];\r\n\r\n        if (inputParam.inputData[\"napprovalconfigcode\"]) {\r\n            const regSubTypeVersionService = rsapi.post(\"registrationsubtype/getApprovedVersion\",\r\n                { napprovalconfigcode: inputParam.inputData.napprovalconfigcode });\r\n\r\n            urlArray.push(regSubTypeVersionService);\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                let dataResult = {};\r\n\r\n                let designData = response[0].data[\"MappedTemplateFieldProps\"].jsondataobj || {};\r\n\r\n                const dynamicTable = response[0].data[\"DynamicAuditRecordTable\"] ?\r\n                    Object.keys(response[0].data[\"DynamicAuditRecordTable\"]) : {};\r\n                let auditData = response[0].data[\"DynamicAuditRecordTable\"] || {};\r\n\r\n                console.log(\"design:\", designData, inputParam.inputData.designtemplatemapping.ndesigntemplatemappingcode);\r\n\r\n                console.log(\"auditData:\", auditData);\r\n                if (inputParam[\"SampleType\"] === SampleType.Masters) {\r\n\r\n                    const formcode = Object.keys(auditData)[0];\r\n\r\n                    dataResult[formcode] = { \"dynamicmaster\": [] };\r\n\r\n                    //const tableArray = Object.keys(auditData[formcode]) || [];\r\n                    // tableArray.map(item => dataResult[formcode][item] = []);\r\n\r\n                    designData.mastertemplatefields.map(field => {\r\n                        //if(!Array.isArray(designData))\r\n                        //  {    \r\n                        dataResult[formcode][\"dynamicmaster\"].push({\r\n                            //label: field[designProperties.VALUE],\r\n                            label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\r\n                            sampleauditfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.auditcapturefields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\r\n                            sampleauditeditfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.editmandatoryfields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\r\n                            realData: field\r\n                        })\r\n                    })\r\n                    designData = {\r\n                        [formcode]: {\r\n                            ...designData, \"dynamicmaster\": {\r\n                                sampleauditfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.auditcapturefields,\r\n                                sampleauditeditfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.editmandatoryfields,\r\n                                multilingualfields: auditData[formcode][\"dynamicmaster\"].jsondataobj.multilingualfields\r\n                            }\r\n                        }\r\n                    };\r\n                    // designData = {[formcode] : {\"dynamicmaster\": {...designData, \r\n                    //                                                 sampleauditeditfields : auditData[formcode][\"dynamicmaster\"].jsondataobj.editmandatoryfields, \r\n                    //                                                 multilingualfields:auditData[formcode][\"dynamicmaster\"].jsondataobj.multilingualfields\r\n                    //                                             }\r\n                    //                                         }};\r\n                    // }\r\n                    //})                                \r\n\r\n                }\r\n                else {\r\n                    Object.keys(designData).map(formcode => {\r\n                        if (parseInt(formcode) === formCode.SAMPLEREGISTRATION) {\r\n                            dataResult[formcode] = [];\r\n\r\n                            const tableArray = Object.keys(auditData[formcode]) || [];\r\n                            tableArray.map(item => dataResult[formcode][item] = []);\r\n\r\n                            designData.sampletemplatefields.map(field => {\r\n                                if (!Array.isArray(designData[formcode])) {\r\n                                    dataResult[formcode][\"registration\"].push({\r\n                                        //label: field[designProperties.VALUE],\r\n                                        label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\r\n                                        sampleauditfields: auditData[formcode][\"registration\"].jsondataobj.auditcapturefields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\r\n                                        sampleauditeditfields: auditData[formcode][\"registration\"].jsondataobj.editmandatoryfields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\r\n                                        realData: field\r\n                                    })\r\n\r\n                                    designData[formcode][\"registration\"] = { ...designData[formcode][\"registration\"], sampleauditfields: auditData[formcode][\"registration\"].jsondataobj.auditcapturefields, multilingualfields: auditData[formcode][\"registration\"].jsondataobj.auditData };\r\n                                    designData[formcode][\"registration\"] = { ...designData[formcode][\"registration\"], sampleauditeditfields: auditData[formcode][\"registration\"].jsondataobj.editmandatoryfields, multilingualfields: auditData[formcode][\"registration\"].jsondataobj.multilingualfields };\r\n                                }\r\n                            })\r\n\r\n                            if (inputParam.inputData.nneedsubsample) {\r\n                                designData.subsampletemplatefields.map(field => {\r\n                                    if (!Array.isArray(designData[formcode])) {\r\n                                        dataResult[formcode][\"registrationsample\"].push({\r\n                                            //label: field[designProperties.VALUE],\r\n                                            label: field[designProperties.LABEL][inputParam.inputData.userinfo.slanguagetypecode],\r\n                                            subsampleauditfields: auditData[formcode][\"registrationsample\"].jsondataobj.auditcapturefields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\r\n                                            subsampleauditeditfields: auditData[formcode][\"registrationsample\"].jsondataobj.editmandatoryfields.findIndex(x => x === field[designProperties.VALUE]) !== -1,\r\n                                            realData: field\r\n                                        })\r\n\r\n                                        designData[formcode][\"registrationsample\"] = { ...designData[formcode][\"registrationsample\"], subsampleauditfields: auditData[formcode][\"registrationsample\"].jsondataobj.auditcapturefields, multilingualfields: auditData[formcode][\"registrationsample\"].jsondataobj.multilingualfields };\r\n                                        designData[formcode][\"registrationsample\"] = { ...designData[formcode][\"registrationsample\"], subsampleauditeditfields: auditData[formcode][\"registrationsample\"].jsondataobj.editmandatoryfields, multilingualfields: auditData[formcode][\"registrationsample\"].jsondataobj.multilingualfields };\r\n                                    }\r\n                                }\r\n                                )\r\n                            }\r\n                        }\r\n\r\n                    })\r\n\r\n                }\r\n                console.log(\"response[1].data:\", designData, \"dataResult:\", dataResult);\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        openModal: true,\r\n                        loading: false,\r\n                        auditFieldDesignData: designData,//response[0].data.jsondataobj,\r\n                        approvedRegSubTypeVersion: inputParam.inputData[\"napprovalconfigcode\"] ? response[1].data : undefined,\r\n                        auditFieldDataResult: dataResult,\r\n                        auditData,\r\n                        auditTable: dynamicTable,\r\n                        operation: inputParam.operation,\r\n                        screenName: inputParam.screenName,\r\n                        ncontrolCode: inputParam.ncontrolcode\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                console.log(\"error:\", error);\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } });\r\n                if (error.response.status === 500) {\r\n                    toast.error(intl.formatMessage({\r\n                        id: error.message\r\n                    }));\r\n                } else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: error.response.data\r\n                    }));\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}