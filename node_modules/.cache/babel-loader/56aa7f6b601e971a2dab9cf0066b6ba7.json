{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5294\\\\QuaLISWeb\\\\src\\\\components\\\\droparea\\\\Column.jsx\";\nimport React, { useRef } from \"react\";\nimport { useDrag } from \"react-dnd\";\nimport { COLUMN } from \"./constants\";\nimport DropArea from \"./DropArea.jsx\";\nimport \"./styles.css\";\nimport Componentrow from \"./Componentrow\";\nconst style = {};\n\nconst Column = ({\n  data,\n  components,\n  baselength,\n  handleDrop,\n  validateDrop,\n  path,\n  onclickcomponent,\n  deleteInput,\n  selectedFieldRecord,\n  slanguagetypecode\n}) => {\n  const ref = useRef(null);\n  const mandatoryCheck = [];\n  const [{\n    isDragging\n  }, drag] = useDrag({\n    type: COLUMN,\n    item: {\n      type: COLUMN,\n      id: data.id,\n      children: data.children,\n      path\n    },\n    collect: monitor => ({\n      isDragging: monitor.isDragging()\n    })\n  });\n  const opacity = isDragging ? 0 : 1;\n  drag(ref);\n\n  const renderComponent = (component, currentPath) => {\n    return /*#__PURE__*/React.createElement(Componentrow, {\n      key: component.id,\n      data: component,\n      baselength: baselength,\n      components: components,\n      path: currentPath,\n      handleDrop: handleDrop,\n      deleteInput: deleteInput,\n      validateDrop: validateDrop,\n      onclickcomponent: onclickcomponent,\n      selectedFieldRecord: selectedFieldRecord,\n      slanguagetypecode: slanguagetypecode,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"position-relative column\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, data.children && data.children.map(item => {\n    if (item.children) {\n      item.children.map(item2 => {\n        if (item2.templatemandatory) {\n          mandatoryCheck.push(item2.templatemandatory);\n        }\n      });\n    } else {\n      if (item.templatemandatory) {\n        mandatoryCheck.push(item.templatemandatory);\n      }\n    }\n  }), mandatoryCheck.length === 0 && /*#__PURE__*/React.createElement(\"a\", {\n    class: \"position-absolute delete-dynamic-row\",\n    onClick: e => deleteInput(e, data, {\n      type: COLUMN,\n      id: data.id,\n      data: data,\n      path\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    class: \"fa fa-times-circle\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    ref: ref,\n    style: { ...style,\n      opacity\n    },\n    className: \"base draggable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 5\n    }\n  }, data.children ? data.children.map((component, index) => {\n    const currentPath = `${path}-${index}`;\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: component.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(DropArea, {\n      data: {\n        path: currentPath,\n        childrenCount: data.children.length\n      },\n      onDrop: handleDrop,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }\n    }), renderComponent(component, currentPath));\n  }) : \"\", /*#__PURE__*/React.createElement(DropArea, {\n    data: {\n      path: `${path}-${data.children.length}`,\n      childrenCount: data.children.length\n    },\n    onDrop: handleDrop,\n    deleteInput: deleteInput,\n    isLast: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Column;","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/components/droparea/Column.jsx"],"names":["React","useRef","useDrag","COLUMN","DropArea","Componentrow","style","Column","data","components","baselength","handleDrop","validateDrop","path","onclickcomponent","deleteInput","selectedFieldRecord","slanguagetypecode","ref","mandatoryCheck","isDragging","drag","type","item","id","children","collect","monitor","opacity","renderComponent","component","currentPath","map","item2","templatemandatory","push","length","e","index","childrenCount"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\r\nimport { useDrag } from \"react-dnd\";\r\nimport { COLUMN } from \"./constants\";\r\nimport DropArea from \"./DropArea.jsx\";\r\nimport \"./styles.css\"\r\nimport Componentrow from \"./Componentrow\";\r\n\r\nconst style = {};\r\nconst Column = ({ data, components, baselength, handleDrop, validateDrop, path, onclickcomponent, deleteInput, selectedFieldRecord,  slanguagetypecode }) => {\r\n  const ref = useRef(null);\r\n  const mandatoryCheck = [];\r\n  const [{ isDragging }, drag] = useDrag({\r\n    \r\n    type: COLUMN,\r\n    item: {\r\n      type: COLUMN,\r\n      id: data.id,\r\n      children: data.children,\r\n      path\r\n    },\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging()\r\n    })\r\n  });\r\n\r\n  const opacity = isDragging ? 0 : 1;\r\n  drag(ref);\r\n\r\n  const renderComponent = (component, currentPath) => {\r\n      return (\r\n      <Componentrow\r\n        key={component.id}\r\n        data={component}\r\n        baselength= {baselength}\r\n        components={components}\r\n        path={currentPath}\r\n        handleDrop={handleDrop}\r\n        deleteInput={deleteInput}\r\n        validateDrop={validateDrop}\r\n        onclickcomponent={onclickcomponent}\r\n        selectedFieldRecord={selectedFieldRecord}\r\n        slanguagetypecode={slanguagetypecode}\r\n        >\r\n              </Componentrow>\r\n    );\r\n  };\r\n\r\n    return (\r\n        <div class=\"position-relative column\">\r\n          {data.children && data.children.map(item=>{\r\n            if(item.children){\r\n                item.children.map(item2=>{\r\n                  if(item2.templatemandatory){\r\n                    mandatoryCheck.push(item2.templatemandatory);\r\n                   }\r\n                })\r\n            }else{\r\n              if(item.templatemandatory){\r\n                mandatoryCheck.push(item.templatemandatory);\r\n               }\r\n            }\r\n          })}\r\n        {mandatoryCheck.length === 0 &&\r\n                <a class=\"position-absolute delete-dynamic-row\" onClick={(e) => deleteInput(e,data, {\r\n                  type: COLUMN,\r\n                  id: data.id,\r\n                  data: data,\r\n                  path\r\n              })}><i class=\"fa fa-times-circle\" aria-hidden=\"true\"></i></a>\r\n        }\r\n          \r\n        \r\n      \r\n    <div\r\n      ref={ref}\r\n      style={{ ...style, opacity }}\r\n      className=\"base draggable\"\r\n\r\n      >\r\n\r\n          \r\n      {/* {\"Column\"} */}\r\n      {data.children ? data.children.map((component, index) => {\r\n        const currentPath = `${path}-${index}`;\r\n\r\n        return (\r\n            <React.Fragment key={component.id}>\r\n            <DropArea\r\n              data={{\r\n                path: currentPath,\r\n                childrenCount: data.children.length\r\n              }}\r\n              onDrop={handleDrop}\r\n            />\r\n            {renderComponent(component, currentPath)}\r\n          </React.Fragment>\r\n        );\r\n      }) : \"\"}\r\n      <DropArea\r\n        data={{\r\n          path: `${path}-${data.children.length}`,\r\n          childrenCount: data.children.length\r\n        }}\r\n              onDrop={handleDrop}\r\n              deleteInput={deleteInput}\r\n        isLast\r\n      />\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Column;\r\n"]},"metadata":{},"sourceType":"module"}