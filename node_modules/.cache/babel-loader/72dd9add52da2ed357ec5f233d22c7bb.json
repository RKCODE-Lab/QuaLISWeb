{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\reports\\\\viewreports\\\\Reports.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport Iframe from 'react-iframe';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Nav } from 'react-bootstrap'; //import { Tooltip } from '@progress/kendo-react-tooltip';\n// import ReactTooltip from 'react-tooltip';\n// import DocViewer from '../../../components/doc-viewer/doc-viewer.component'\n\nimport ListMaster from '../../../components/list-master/list-master.component';\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\nimport { formatInputDate, constructOptionList, sortByField, rearrangeDateFormat } from '../../../components/CommonScript';\nimport { fileViewUrl, reportUrl } from '../../../rsapi';\nimport { viewReportDetail, updateStore, getReportViewChildDataList, viewReportDetailWithParameters, getReportsByModule, filterColumnData, callService } from '../../../actions';\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\nimport DynamicControl from './DynamicControl';\nimport { transactionStatus } from '../../../components/Enumeration';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport { ReactComponent as ReportViewIcon } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/image/reports-view.svg\";\nimport { designComponents } from '../../../components/Enumeration';\nimport DocViewer from '../../../components/doc-viewer/doc-viewer.component';\nimport { faExpandArrowsAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'; //import { Stimulsoft } from 'stimulsoft-reports-js/Scripts/stimulsoft.viewer';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Reports extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.closeModal = () => {\n      let openModal = false;\n      let showReport = false;\n      let selectedRecord = {};\n      this.setState({\n        showReport,\n        openModal,\n        selectedRecord\n      });\n    };\n\n    this.viewReport = () => {\n      if (this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0) {\n        let showReport = true;\n        this.setState({\n          showReport\n        });\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_GENERATETHEREPORT\"\n        }));\n      }\n    };\n\n    this.onfilterChange = (comboData, fieldName, item) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.props.getReportsByModule({\n        userInfo: this.props.Login.userInfo,\n        nreportmodulecode: comboData.value,\n        selectedRecord,\n        masterData: this.props.Login.masterData\n      });\n    };\n\n    this.onComboChange = (comboData, fieldName, item) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      const inputData = {\n        reportdesignconfig: item,\n        inputfielddata: { ...this.state.inputFieldData,\n          [fieldName]: comboData.value,\n          [fieldName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\n          [fieldName.concat(\"_componentname\")]: item.sdesigncomponentname\n        },\n        parentcode: comboData.value.toString(),\n        parentid: item.nreportdesigncode,\n        userinfo: this.props.Login.userInfo,\n        nreportdetailcode: this.props.Login.masterData.SelectedReportDetails.nreportdetailcode\n      };\n      const inputParam = {\n        viewReportDesignConfigList: this.state.viewReportDesignConfigList,\n        selectedRecord,\n        inputData\n      };\n      this.props.getReportViewChildDataList(inputParam);\n    };\n\n    this.handleDateChange = (dateName, dateValue, item) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      const inputData = {\n        reportdesignconfig: item,\n        inputfielddata: { ...this.state.inputFieldData,\n          [dateName]: formatInputDate(dateValue, true),\n          [dateName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\n          [dateName.concat(\"_componentname\")]: item.sdesigncomponentname,\n          [dateName.concat(\"_days\")]: item.ndays\n        },\n        parentcode: formatInputDate(dateValue, true),\n        parentid: item.nreportdesigncode,\n        userinfo: this.props.Login.userInfo,\n        nreportdetailcode: this.props.Login.masterData.SelectedReportDetails.nreportdetailcode\n      };\n      const inputParam = {\n        viewReportDesignConfigList: this.state.viewReportDesignConfigList,\n        selectedRecord,\n        inputData\n      };\n      this.props.getReportViewChildDataList(inputParam);\n    };\n\n    this.onNumericInputOnChange = (value, name, item) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      const inputData = {\n        reportdesignconfig: item,\n        inputfielddata: { ...this.state.inputFieldData,\n          [name]: value,\n          [name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\n          [name.concat(\"_componentname\")]: item.sdesigncomponentname\n        },\n        parentcode: value.toString(),\n        parentid: item.nreportdesigncode,\n        userinfo: this.props.Login.userInfo,\n        nreportdetailcode: this.props.Login.masterData.SelectedReportDetails.nreportdetailcode\n      };\n      const inputParam = {\n        viewReportDesignConfigList: this.state.viewReportDesignConfigList,\n        selectedRecord,\n        inputData\n      };\n      this.props.getReportViewChildDataList(inputParam);\n    };\n\n    this.onInputOnChange = (event, item) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else {\n        selectedRecord[event.target.name] = event.target.value;\n      }\n\n      const inputData = {\n        reportdesignconfig: item,\n        inputfielddata: { ...this.state.inputFieldData,\n          [event.target.name]: selectedRecord[event.target.name],\n          [event.target.name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\n          [event.target.name.concat(\"_componentname\")]: item.sdesigncomponentname\n        },\n        parentcode: selectedRecord[event.target.name].toString(),\n        parentid: item.nreportdesigncode,\n        userinfo: this.props.Login.userInfo,\n        nreportdetailcode: this.props.Login.masterData.SelectedReportDetails.nreportdetailcode\n      };\n      const inputParam = {\n        viewReportDesignConfigList: this.state.viewReportDesignConfigList,\n        selectedRecord,\n        inputData\n      };\n      this.props.getReportViewChildDataList(inputParam);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      // const selectedRecord = this.props.Login.selectedRecord;        \n      const inputFieldData = this.state.inputFieldData;\n      const inputParam = {\n        reportmaster: this.props.Login.masterData.SelectedViewReportMaster,\n        inputfielddata: inputFieldData,\n        userinfo: this.props.Login.userInfo,\n        masterData: this.props.Login.masterData\n      };\n      this.props.viewReportDetailWithParameters(inputParam);\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: \"reportview\",\n        methodUrl: \"ReportView\",\n        displayName: \"IDS_REPORTS\",\n        userInfo: this.props.Login.userInfo\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.state = {\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      screenName: undefined,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      selectedReportModule: undefined,\n      sidebarview: false\n    };\n    this.searchRef = React.createRef();\n    this.searchFieldList = [\"sactivestatus\", \"sdescription\", \"sregsubtypename\", \"sregtypename\", \"sreportmodulename\", \"smoduledisplayname\", \"sreportname\", \"sreporttypename\"];\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    if (state.reportFilePath !== undefined) {\n      return {\n        openModal: false\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    const filterParam = {\n      inputListName: \"ViewReportMaster\",\n      selectedObject: \"SelectedViewReportMaster\",\n      primaryKeyField: \"nreportcode\",\n      fetchUrl: \"reportview/searchViewReport\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: this.searchFieldList,\n      unchangeList: [\"SelectedReportModule\", \"ViewReportModuleList\"],\n      selectedRecord: {}\n    }; // const filePath = fileViewURL + \"/SharedFolder/FileUpload/\" + this.props.Login.reportFilePath;\n\n    let filePath = \"\"; //filePath = fileViewUrl() + \"/Connecting_to_Databases01/\" \n\n    if (this.props.Login.masterData.filetype == \"mrt\") {\n      filePath = reportUrl() + \"?name=\" + this.props.Login.userInfo.sreportingtoolfilename + \"&slanguagetypecode=\" + this.props.Login.userInfo.sreportlanguagecode + \"&foldername=\" + this.props.Login.masterData.SelectedReportDetails.sreportname + \"&filename=\" + this.props.Login.masterData.SelectedReportDetails.ssystemfilename + \"&sconnectionstring=\" + this.props.Login.userInfo.sconnectionString + \"&sreportlink=\" + this.props.Login.reportSettings[15] //this.props.Login.userInfo.sreportLink  \n      + \"&smrttemplatelink=\" + this.props.Login.reportSettings[16] //this.props.Login.userInfo.smrttemplateLink \n      + \"&sourceparameter=\" + encodeURIComponent(this.props.Login.masterData.sourceparameter);\n    } else {\n      filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\n    }\n\n    console.log(filePath); // const docPath = this.props.Login.masterData.ReportPDFPath && (this.props.Login.masterData.ReportPDFPath+this.state.reportFilePath);\n    // const filePath1 = this.props.Login.settings && this.props.Login.settings[6] + this.state.reportFilePath;\n\n    const fieldList = this.state.viewReportDesignConfigList || [];\n    const mandatoryFields = [];\n    fieldList.forEach(item => item.ndesigncomponentcode !== designComponents.PATH ? mandatoryFields.push({\n      \"idsName\": item.sdisplayname,\n      \"dataField\": item.sreportparametername,\n      \"mandatoryLabel\": item.ndesigncomponentcode === 5 ? \"IDS_ENTER\" : \"IDS_PROVIDE\",\n      \"controlType\": \"textbox\"\n    }) : \"\"); //console.log(\"file:\", window.location.origin, filePath, this.state.reportFilePath);\n    // console.log(\"docPath:\", this.props.Login.masterData, this.props.Login.masterData.ReportPDFPath, docPath);\n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: () => this.setState({\n        sidebarview: !this.state.sidebarview\n      }),\n      className: \"sidebar-view-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, !this.state.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 47\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"list-fixed-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_REPORTS\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.ViewReportMaster,\n      getMasterDetail: report => this.props.viewReportDetail(report, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedViewReportMaster,\n      primaryKeyField: \"nreportcode\",\n      mainField: \"sreportname\",\n      firstField: \"sreporttypename\",\n      secondField: \"sactivestatus\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights // addId = {addId}\n      ,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData //openModal = {()=>this.props.getUserComboService(addParam)}\n      ,\n      isMultiSelecct: false,\n      needAccordianFilter: true,\n      hidePaging: true //allowDuplicateHits={true}\n      ,\n      filterComponent: [{\n        \"IDS_FILTER\": /*#__PURE__*/React.createElement(Row, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 49\n          }\n        }, /*#__PURE__*/React.createElement(Col, {\n          md: 12,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 53\n          }\n        }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n          name: \"nreportmodulecode\",\n          formLabel: this.props.intl.formatMessage({\n            id: \"IDS_MODULENAME\"\n          }),\n          placeholder: \"Please Select...\",\n          options: this.state.reportModuleList || [],\n          value: this.state.selectedReportModule ? this.state.selectedReportModule : this.props.Login.masterData.SelectedReportModule && {\n            label: this.props.Login.masterData.SelectedReportModule.sdisplayname,\n            value: this.props.Login.masterData.SelectedReportModule.nreportmodulecode\n          },\n          isMandatory: true,\n          isMulti: false,\n          isClearable: false,\n          isSearchable: true,\n          isDisabled: false,\n          closeMenuOnSelect: true,\n          menuPosition: \"fixed\",\n          onChange: event => this.onfilterChange(event, \"nreportmodulecode\"),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 57\n          }\n        })))\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }))))), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.state.sidebarview ? '8' : \"10\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end pad-15\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\" //  data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-place\": \"left\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESETREPORTPARAMETER\"\n      }),\n      onClick: () => this.props.viewReportDetail(this.props.Login.masterData.SelectedViewReportMaster, this.props.Login.userInfo, this.props.Login.masterData),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ReportViewIcon, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      name: \"resetreporticon\" //title={this.props.intl.formatMessage({ id: \"IDS_RESETREPORTPARAMETER\" })} \n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 33\n      }\n    })), this.props.Login.masterData.filetype === \"mrt\" ? \"\" : /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\" //   data-for=\"tooltip_list_wrap\"\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_VIEWREPORT\"\n      }),\n      onClick: () => this.viewReport(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 30\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faExpandArrowsAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 32\n      }\n    }))), this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0 && this.state.reportFilePath ? /*#__PURE__*/React.createElement(Iframe //url=\"https://arxiv.org/pdf/quant-ph/0410100.pdf\"\n    , {\n      url: filePath // url={this.state.reportFilePath}\n      ,\n      width: \"98%\",\n      height: \"1000px\",\n      id: \"reportviewID\",\n      className: \"reportview\",\n      display: \"initial\",\n      position: \"relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 29\n      }\n    }) : /*#__PURE__*/React.createElement(Iframe //url=\"https://arxiv.org/pdf/quant-ph/0410100.pdf\"\n    , {\n      url: filePath // url={this.state.reportFilePath}\n      ,\n      width: \"98%\",\n      height: \"1000px\",\n      id: \"reportviewID\",\n      className: \"reportview\",\n      display: \"initial\",\n      position: \"relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 33\n      }\n    })))), this.state.showReport ? /*#__PURE__*/React.createElement(DocViewer, {\n      file: filePath,\n      showReport: this.state.showReport,\n      closeModal: this.closeModal,\n      type: \"pdf\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    }) : \"\", this.state.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.state.openModal,\n      closeModal: this.closeModal,\n      operation: this.state.operation,\n      inputParam: this.state.inputParam,\n      screenName: this.state.screenName,\n      onSaveClick: this.onSaveClick,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: mandatoryFields,\n      buttonLabel: \"Submit\",\n      addComponent: /*#__PURE__*/React.createElement(DynamicControl, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        viewReportDesignConfigList: this.state.viewReportDesignConfigList || [],\n        operation: this.props.Login.operation,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo // screenName={this.props.intl.formatMessage({id:\"IDS_FILTERPARAMETER\"})}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 25\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord,\n        inputFieldData: this.props.Login.inputFieldData,\n        viewReportDesignConfigList: this.props.Login.viewReportDesignConfigList\n      });\n    } else {\n      if (this.props.Login.inputFieldData !== previousProps.Login.inputFieldData) {\n        this.setState({\n          inputFieldData: this.props.Login.inputFieldData,\n          viewReportDesignConfigList: this.props.Login.viewReportDesignConfigList\n        });\n      }\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      const reportModuleMap = constructOptionList(this.props.Login.masterData.ViewReportModuleList || [], \"nreportmodulecode\", \"sdisplayname\", undefined, undefined, true);\n      const reportModuleList = reportModuleMap.get(\"OptionList\");\n      const masterData = this.props.Login.masterData;\n      sortByField(masterData[\"ViewReportDesignConfig\"], \"ascending\", \"nreportdesigncode\");\n      let respObj = {\n        reportFilePath: masterData[\"ReportPDFFile\"]\n      };\n\n      if (masterData[\"ReportPDFFile\"] === \"\") {\n        respObj[\"reportFilePath\"] = undefined;\n      }\n\n      if (masterData[\"ViewReportDesignConfig\"] !== undefined) {\n        respObj[\"openModal\"] = true;\n        respObj[\"viewReportDesignConfigList\"] = masterData[\"ViewReportDesignConfig\"];\n        let selectedRecord = {};\n        let inputFieldData = {};\n        respObj[\"viewReportDesignConfigList\"].map(item => {\n          if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\n            selectedRecord[item.sreportparametername] = rearrangeDateFormat(this.props.Login.userInfo, item.dataList[0]);\n            inputFieldData = { ...inputFieldData,\n              [item.sreportparametername]: rearrangeDateFormat(this.props.Login.userInfo, item.dataList[0]),\n              [item.sreportparametername.concat(\"_componentcode\")]: item.ndesigncomponentcode,\n              [item.sreportparametername.concat(\"_componentname\")]: item.sdesigncomponentname\n            };\n          } else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\n            const comboMap = constructOptionList(item.dataList || [], item.svaluemember, item.sdisplaymember, undefined, undefined, true);\n            const comboList = comboMap.get(\"OptionList\");\n            item.dataList = comboList;\n          }\n\n          return null;\n        });\n        respObj[\"inputFieldData\"] = inputFieldData;\n        respObj[\"selectedRecord\"] = selectedRecord;\n        respObj[\"operation\"] = \"filter\";\n        respObj[\"screenName\"] = \"IDS_PARAMETER\";\n        respObj[\"inputParam\"] = this.props.Login.inputParam;\n      } else {\n        respObj[\"openModal\"] = false;\n      }\n\n      this.setState({\n        reportModuleList,\n        ...respObj\n      });\n    } // if (this.props.Login.masterData !== previousProps.Login.masterData && \n    //     this.props.Login.SelectedReportDetails!==previousProps.Login.SelectedReportDetails) {\n    //         Stimulsoft.Base.StiLicense.loadFromFile(\"license.key\");\n    //         const params = new URLSearchParams(window.location.search);\n    // \tlet clanguagefile = params.get('name')\n    // \tlet paramfilename = params.get('filename')\n    // \tlet paramfoldername = params.get('foldername')\n    // \tlet paramsourceparameter = params.get('sourceparameter')\n    //     //StiOptions.WebServer.url = \"JSDataAdapter/\";\n    //     var report = Stimulsoft.Report.StiReport.createNewReport();\n    // \tif (!paramfilename){\n    // \t\t//report.loadFile(\"reports/R_users.mrt\");\n    // \t}\n    // \telse{\n    // \t\treport.loadFile(\"//localhost:8090/SharedFolder/QuaLISjrxml/\" + paramfoldername + \"/\" + paramfilename);\n    // \t}\n    // \t// Parameter begin\n    // \tif(paramsourceparameter){\n    // \tlet jsonparse = JSON.parse(paramsourceparameter);\n    // \t// console.log(jsonparse);\n    // \t// console.log(\"----\");\n    // \tObject.entries(jsonparse).forEach(([key, value]) => \n    // \treport[key] = value);\n    // \t//Object.entries(jsonparse).forEach(([key, value]) => \n    // \t//console.log(`${key}: ${value}`));\n    // \t}\n    //     //((StiSqlDatabase)report.Dictionary.Databases[\"Connection\"]).ConnectionString = \"\"\n    //     var dbMySQL = report.dictionary.databases.getByName(\"Connection\");\n    // \tdbMySQL.connectionString = \"Server=agl92; Database=LIMSDB20230420;User=postgres; Pwd=admin@123;\";\n    //     var options = new Stimulsoft.Viewer.StiViewerOptions();\n    //     var viewer = new Stimulsoft.Viewer.StiViewer(options, \"StiViewer\", false);\n    //     viewer.report = report;\n    //     }\n\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  viewReportDetail,\n  updateStore,\n  filterColumnData,\n  callService,\n  getReportViewChildDataList,\n  viewReportDetailWithParameters,\n  getReportsByModule\n})(injectIntl(Reports));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/reports/viewreports/Reports.jsx"],"names":["React","connect","toast","Iframe","injectIntl","Row","Col","Nav","ListMaster","SlideOutModal","formatInputDate","constructOptionList","sortByField","rearrangeDateFormat","fileViewUrl","reportUrl","viewReportDetail","updateStore","getReportViewChildDataList","viewReportDetailWithParameters","getReportsByModule","filterColumnData","callService","FormSelectSearch","DynamicControl","transactionStatus","designComponents","DocViewer","faExpandArrowsAlt","FontAwesomeIcon","mapStateToProps","state","Login","Reports","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","closeModal","openModal","showReport","selectedRecord","viewReport","masterData","ReportPDFFile","length","warn","intl","formatMessage","id","onfilterChange","comboData","fieldName","item","userInfo","nreportmodulecode","value","onComboChange","inputData","reportdesignconfig","inputfielddata","inputFieldData","concat","ndesigncomponentcode","sdesigncomponentname","parentcode","toString","parentid","nreportdesigncode","userinfo","nreportdetailcode","SelectedReportDetails","inputParam","viewReportDesignConfigList","handleDateChange","dateName","dateValue","ndays","onNumericInputOnChange","name","onInputOnChange","event","target","type","checked","YES","NO","onSaveClick","saveType","formRef","reportmaster","SelectedViewReportMaster","reloadData","searchRef","current","classUrl","methodUrl","displayName","masterStatus","error","operation","screenName","undefined","userRoleControlRights","controlMap","Map","selectedReportModule","createRef","searchFieldList","getDerivedStateFromProps","reportFilePath","render","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","unchangeList","filePath","filetype","sreportingtoolfilename","sreportlanguagecode","sreportname","ssystemfilename","sconnectionString","reportSettings","encodeURIComponent","sourceparameter","console","log","fieldList","mandatoryFields","forEach","PATH","push","sdisplayname","sreportparametername","searchedData","ViewReportMaster","report","reportModuleList","SelectedReportModule","label","componentDidUpdate","previousProps","reportModuleMap","ViewReportModuleList","get","respObj","map","DATEPICKER","dataList","COMBOBOX","comboMap","svaluemember","sdisplaymember","comboList"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,QAA8B,iBAA9B,C,CACA;AACA;AACA;;AACA,OAAOC,UAAP,MAAuB,uDAAvB;AACA,OAAOC,aAAP,MAA0B,mDAA1B;AACA,SAASC,eAAT,EAA0BC,mBAA1B,EAA+CC,WAA/C,EAA4DC,mBAA5D,QAAuF,kCAAvF;AACA,SAAQC,WAAR,EAAqBC,SAArB,QAAqC,gBAArC;AACA,SACIC,gBADJ,EACsBC,WADtB,EACmCC,0BADnC,EAC+DC,8BAD/D,EAEIC,kBAFJ,EAEwBC,gBAFxB,EAE0CC,WAF1C,QAGO,kBAHP;AAIA,OAAOC,gBAAP,MAA6B,qEAA7B;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,SAASC,iBAAT,QAAkC,iCAAlC;AACA,OAAO,6CAAP;;AAEA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,SAAP,MAAsB,qDAAtB;AACA,SAASC,iBAAT,QAAiC,mCAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC,C,CACA;;AAEA,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC7B,SAAQ;AAAEC,IAAAA,KAAK,EAAED,KAAK,CAACC;AAAf,GAAR;AACH,CAFD;;AAIA,MAAMC,OAAN,SAAsBjC,KAAK,CAACkC,SAA5B,CAAsC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmBnBC,qBAnBmB,GAmBK,MAAM;AAC1B,WAAKC,QAAL,CAAc;AACVC,QAAAA,WAAW,EAAE;AADH,OAAd;AAGH,KAvBkB;;AAAA,SAoWnBC,UApWmB,GAoWN,MAAM;AACf,UAAIC,SAAS,GAAG,KAAhB;AACA,UAAIC,UAAU,GAAG,KAAjB;AACA,UAAIC,cAAc,GAAG,EAArB;AACA,WAAKL,QAAL,CAAc;AAAEI,QAAAA,UAAF;AAAaD,QAAAA,SAAb;AAAwBE,QAAAA;AAAxB,OAAd;AACH,KAzWkB;;AAAA,SA2WnBC,UA3WmB,GA2WR,MAAI;AACX,UAAG,KAAKR,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BC,aAA5B,IAA6C,KAAKV,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BC,aAA5B,CAA0CC,MAA1C,GAAmD,CAAnG,EACA;AACI,YAAIL,UAAU,GAAG,IAAjB;AACA,aAAKJ,QAAL,CAAc;AAAEI,UAAAA;AAAF,SAAd;AACH,OAJD,MAKG;AACCxC,QAAAA,KAAK,CAAC8C,IAAN,CAAW,KAAKZ,KAAL,CAAWa,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,UAAAA,EAAE,EAAE;AAAN,SAA9B,CAAX;AACJ;AACH,KApXkB;;AAAA,SAsXnBC,cAtXmB,GAsXF,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,IAAvB,KAAgC;AAC7C,YAAMZ,cAAc,GAAG,KAAKZ,KAAL,CAAWY,cAAX,IAA6B,EAApD;AACAA,MAAAA,cAAc,CAACW,SAAD,CAAd,GAA4BD,SAA5B;AAEA,WAAKjB,KAAL,CAAWhB,kBAAX,CAA8B;AAC1BoC,QAAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWJ,KAAX,CAAiBwB,QADD;AACWC,QAAAA,iBAAiB,EAAEJ,SAAS,CAACK,KADxC;AAE1Bf,QAAAA,cAF0B;AAEVE,QAAAA,UAAU,EAAE,KAAKT,KAAL,CAAWJ,KAAX,CAAiBa;AAFnB,OAA9B;AAIH,KA9XkB;;AAAA,SAgYnBc,aAhYmB,GAgYH,CAACN,SAAD,EAAYC,SAAZ,EAAuBC,IAAvB,KAAgC;AAC5C,YAAMZ,cAAc,GAAG,KAAKZ,KAAL,CAAWY,cAAX,IAA6B,EAApD;AACAA,MAAAA,cAAc,CAACW,SAAD,CAAd,GAA4BD,SAA5B;AACA,YAAMO,SAAS,GAAG;AACdC,QAAAA,kBAAkB,EAAEN,IADN;AAEdO,QAAAA,cAAc,EAAE,EACZ,GAAG,KAAK/B,KAAL,CAAWgC,cADF;AAEZ,WAACT,SAAD,GAAaD,SAAS,CAACK,KAFX;AAGZ,WAACJ,SAAS,CAACU,MAAV,CAAiB,gBAAjB,CAAD,GAAsCT,IAAI,CAACU,oBAH/B;AAIZ,WAACX,SAAS,CAACU,MAAV,CAAiB,gBAAjB,CAAD,GAAsCT,IAAI,CAACW;AAJ/B,SAFF;AASdC,QAAAA,UAAU,EAAEd,SAAS,CAACK,KAAV,CAAgBU,QAAhB,EATE;AAUdC,QAAAA,QAAQ,EAAEd,IAAI,CAACe,iBAVD;AAWdC,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBwB,QAXb;AAYdgB,QAAAA,iBAAiB,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B4B,qBAA5B,CAAkDD;AAZvD,OAAlB;AAeA,YAAME,UAAU,GAAG;AACfC,QAAAA,0BAA0B,EAAE,KAAK5C,KAAL,CAAW4C,0BADxB;AAEfhC,QAAAA,cAFe;AAGfiB,QAAAA;AAHe,OAAnB;AAMA,WAAKxB,KAAL,CAAWlB,0BAAX,CAAsCwD,UAAtC;AACH,KAzZkB;;AAAA,SA2ZnBE,gBA3ZmB,GA2ZA,CAACC,QAAD,EAAWC,SAAX,EAAsBvB,IAAtB,KAA+B;AAC9C,YAAM;AAAEZ,QAAAA;AAAF,UAAqB,KAAKZ,KAAhC;AACAY,MAAAA,cAAc,CAACkC,QAAD,CAAd,GAA2BC,SAA3B;AAEA,YAAMlB,SAAS,GAAG;AACdC,QAAAA,kBAAkB,EAAEN,IADN;AAEdO,QAAAA,cAAc,EAAE,EACZ,GAAG,KAAK/B,KAAL,CAAWgC,cADF;AAEZ,WAACc,QAAD,GAAYnE,eAAe,CAACoE,SAAD,EAAY,IAAZ,CAFf;AAGZ,WAACD,QAAQ,CAACb,MAAT,CAAgB,gBAAhB,CAAD,GAAqCT,IAAI,CAACU,oBAH9B;AAIZ,WAACY,QAAQ,CAACb,MAAT,CAAgB,gBAAhB,CAAD,GAAqCT,IAAI,CAACW,oBAJ9B;AAKZ,WAACW,QAAQ,CAACb,MAAT,CAAgB,OAAhB,CAAD,GAA4BT,IAAI,CAACwB;AALrB,SAFF;AAUdZ,QAAAA,UAAU,EAAEzD,eAAe,CAACoE,SAAD,EAAY,IAAZ,CAVb;AAWdT,QAAAA,QAAQ,EAAEd,IAAI,CAACe,iBAXD;AAYdC,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBwB,QAZb;AAadgB,QAAAA,iBAAiB,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B4B,qBAA5B,CAAkDD;AAbvD,OAAlB;AAgBA,YAAME,UAAU,GAAG;AACfC,QAAAA,0BAA0B,EAAE,KAAK5C,KAAL,CAAW4C,0BADxB;AAEfhC,QAAAA,cAFe;AAGfiB,QAAAA;AAHe,OAAnB;AAMA,WAAKxB,KAAL,CAAWlB,0BAAX,CAAsCwD,UAAtC;AACH,KAtbkB;;AAAA,SAwbnBM,sBAxbmB,GAwbM,CAACtB,KAAD,EAAQuB,IAAR,EAAc1B,IAAd,KAAuB;AAC5C,YAAMZ,cAAc,GAAG,KAAKZ,KAAL,CAAWY,cAAX,IAA6B,EAApD;AACAA,MAAAA,cAAc,CAACsC,IAAD,CAAd,GAAuBvB,KAAvB;AAEA,YAAME,SAAS,GAAG;AACdC,QAAAA,kBAAkB,EAAEN,IADN;AAEdO,QAAAA,cAAc,EAAE,EACZ,GAAG,KAAK/B,KAAL,CAAWgC,cADF;AAEZ,WAACkB,IAAD,GAAQvB,KAFI;AAGZ,WAACuB,IAAI,CAACjB,MAAL,CAAY,gBAAZ,CAAD,GAAiCT,IAAI,CAACU,oBAH1B;AAIZ,WAACgB,IAAI,CAACjB,MAAL,CAAY,gBAAZ,CAAD,GAAiCT,IAAI,CAACW;AAJ1B,SAFF;AASdC,QAAAA,UAAU,EAAET,KAAK,CAACU,QAAN,EATE;AAUdC,QAAAA,QAAQ,EAAEd,IAAI,CAACe,iBAVD;AAWdC,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBwB,QAXb;AAYdgB,QAAAA,iBAAiB,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B4B,qBAA5B,CAAkDD;AAZvD,OAAlB;AAeA,YAAME,UAAU,GAAG;AACfC,QAAAA,0BAA0B,EAAE,KAAK5C,KAAL,CAAW4C,0BADxB;AAEfhC,QAAAA,cAFe;AAGfiB,QAAAA;AAHe,OAAnB;AAMA,WAAKxB,KAAL,CAAWlB,0BAAX,CAAsCwD,UAAtC;AACH,KAldkB;;AAAA,SAodnBQ,eApdmB,GAodD,CAACC,KAAD,EAAQ5B,IAAR,KAAiB;AAC/B,YAAMZ,cAAc,GAAG,KAAKZ,KAAL,CAAWY,cAAX,IAA6B,EAApD;;AAEA,UAAIwC,KAAK,CAACC,MAAN,CAAaC,IAAb,KAAsB,UAA1B,EAAsC;AAClC1C,QAAAA,cAAc,CAACwC,KAAK,CAACC,MAAN,CAAaH,IAAd,CAAd,GAAoCE,KAAK,CAACC,MAAN,CAAaE,OAAb,KAAyB,IAAzB,GAAgC7D,iBAAiB,CAAC8D,GAAlD,GAAwD9D,iBAAiB,CAAC+D,EAA9G;AACH,OAFD,MAGK;AACD7C,QAAAA,cAAc,CAACwC,KAAK,CAACC,MAAN,CAAaH,IAAd,CAAd,GAAoCE,KAAK,CAACC,MAAN,CAAa1B,KAAjD;AACH;;AAED,YAAME,SAAS,GAAG;AACdC,QAAAA,kBAAkB,EAAEN,IADN;AAEdO,QAAAA,cAAc,EAAE,EACZ,GAAG,KAAK/B,KAAL,CAAWgC,cADF;AAEZ,WAACoB,KAAK,CAACC,MAAN,CAAaH,IAAd,GAAqBtC,cAAc,CAACwC,KAAK,CAACC,MAAN,CAAaH,IAAd,CAFvB;AAGZ,WAACE,KAAK,CAACC,MAAN,CAAaH,IAAb,CAAkBjB,MAAlB,CAAyB,gBAAzB,CAAD,GAA8CT,IAAI,CAACU,oBAHvC;AAIZ,WAACkB,KAAK,CAACC,MAAN,CAAaH,IAAb,CAAkBjB,MAAlB,CAAyB,gBAAzB,CAAD,GAA8CT,IAAI,CAACW;AAJvC,SAFF;AASdC,QAAAA,UAAU,EAAExB,cAAc,CAACwC,KAAK,CAACC,MAAN,CAAaH,IAAd,CAAd,CAAkCb,QAAlC,EATE;AAUdC,QAAAA,QAAQ,EAAEd,IAAI,CAACe,iBAVD;AAWdC,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBwB,QAXb;AAYdgB,QAAAA,iBAAiB,EAAE,KAAKpC,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B4B,qBAA5B,CAAkDD;AAZvD,OAAlB;AAeA,YAAME,UAAU,GAAG;AACfC,QAAAA,0BAA0B,EAAE,KAAK5C,KAAL,CAAW4C,0BADxB;AAEfhC,QAAAA,cAFe;AAGfiB,QAAAA;AAHe,OAAnB;AAMA,WAAKxB,KAAL,CAAWlB,0BAAX,CAAsCwD,UAAtC;AACH,KApfkB;;AAAA,SAsfnBe,WAtfmB,GAsfL,CAACC,QAAD,EAAWC,OAAX,KAAuB;AACjC;AACA,YAAM5B,cAAc,GAAG,KAAKhC,KAAL,CAAWgC,cAAlC;AAEA,YAAMW,UAAU,GAAG;AACfkB,QAAAA,YAAY,EAAE,KAAKxD,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BgD,wBAD3B;AAEf/B,QAAAA,cAAc,EAAEC,cAFD;AAGfQ,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBwB,QAHZ;AAIfX,QAAAA,UAAU,EAAE,KAAKT,KAAL,CAAWJ,KAAX,CAAiBa;AAJd,OAAnB;AAMA,WAAKT,KAAL,CAAWjB,8BAAX,CAA0CuD,UAA1C;AAEH,KAlgBkB;;AAAA,SAogBnBoB,UApgBmB,GAogBN,MAAM;AACf,WAAKC,SAAL,CAAeC,OAAf,CAAuBtC,KAAvB,GAA+B,EAA/B;AACA,YAAMgB,UAAU,GAAG;AACfd,QAAAA,SAAS,EAAE;AAAE,sBAAY,KAAKxB,KAAL,CAAWJ,KAAX,CAAiBwB;AAA/B,SADI;AAEfyC,QAAAA,QAAQ,EAAE,YAFK;AAGfC,QAAAA,SAAS,EAAE,YAHI;AAIfC,QAAAA,WAAW,EAAE,aAJE;AAKf3C,QAAAA,QAAQ,EAAE,KAAKpB,KAAL,CAAWJ,KAAX,CAAiBwB;AALZ,OAAnB;AAQA,WAAKpB,KAAL,CAAWd,WAAX,CAAuBoD,UAAvB;AACH,KA/gBkB;;AAGf,SAAK3C,KAAL,GAAa;AACTqE,MAAAA,YAAY,EAAE,EADL;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGT1D,MAAAA,cAAc,EAAE,EAHP;AAIT2D,MAAAA,SAAS,EAAE,EAJF;AAKTC,MAAAA,UAAU,EAAEC,SALH;AAMTC,MAAAA,qBAAqB,EAAE,EANd;AAOTC,MAAAA,UAAU,EAAE,IAAIC,GAAJ,EAPH;AAQTC,MAAAA,oBAAoB,EAAEJ,SARb;AASTjE,MAAAA,WAAW,EAAE;AATJ,KAAb;AAWA,SAAKwD,SAAL,GAAiB/F,KAAK,CAAC6G,SAAN,EAAjB;AAEA,SAAKC,eAAL,GAAuB,CAAC,eAAD,EAAkB,cAAlB,EAAkC,iBAAlC,EAAqD,cAArD,EACnB,mBADmB,EACE,oBADF,EACwB,aADxB,EACuC,iBADvC,CAAvB;AAEH;;AAO8B,SAAxBC,wBAAwB,CAAC3E,KAAD,EAAQL,KAAR,EAAe;AAE1C,QAAIK,KAAK,CAACJ,KAAN,CAAYoE,YAAZ,KAA6B,EAA7B,IAAmChE,KAAK,CAACJ,KAAN,CAAYoE,YAAZ,KAA6BrE,KAAK,CAACqE,YAA1E,EAAwF;AACpFlG,MAAAA,KAAK,CAAC8C,IAAN,CAAWZ,KAAK,CAACJ,KAAN,CAAYoE,YAAvB;AACAhE,MAAAA,KAAK,CAACJ,KAAN,CAAYoE,YAAZ,GAA2B,EAA3B;AACH;;AACD,QAAIhE,KAAK,CAACJ,KAAN,CAAYqE,KAAZ,KAAsBtE,KAAK,CAACsE,KAAhC,EAAuC;AACnCnG,MAAAA,KAAK,CAACmG,KAAN,CAAYjE,KAAK,CAACJ,KAAN,CAAYqE,KAAxB;AACAjE,MAAAA,KAAK,CAACJ,KAAN,CAAYqE,KAAZ,GAAoB,EAApB;AACH;;AACD,QAAIjE,KAAK,CAACJ,KAAN,CAAYW,cAAZ,KAA+B6D,SAAnC,EAA8C;AAC1C,aAAO;AAAE7D,QAAAA,cAAc,EAAE;AAAlB,OAAP;AACH;;AACD,QAAIZ,KAAK,CAACiF,cAAN,KAAyBR,SAA7B,EAAwC;AACpC,aAAO;AAAE/D,QAAAA,SAAS,EAAE;AAAb,OAAP;AACH;;AACD,WAAO,IAAP;AACH;;AAEDwE,EAAAA,MAAM,GAAG;AAEL,UAAMC,WAAW,GAAG;AAChBC,MAAAA,aAAa,EAAE,kBADC;AACmBC,MAAAA,cAAc,EAAE,0BADnC;AAC+DC,MAAAA,eAAe,EAAE,aADhF;AAEhBC,MAAAA,QAAQ,EAAE,6BAFM;AAEyBC,MAAAA,gBAAgB,EAAE;AAAEhD,QAAAA,QAAQ,EAAE,KAAKnC,KAAL,CAAWJ,KAAX,CAAiBwB;AAA7B,OAF3C;AAGhBX,MAAAA,UAAU,EAAE,KAAKT,KAAL,CAAWJ,KAAX,CAAiBa,UAHb;AAGyBiE,MAAAA,eAAe,EAAE,KAAKA,eAH/C;AAIhBU,MAAAA,YAAY,EAAE,CAAC,sBAAD,EAAwB,sBAAxB,CAJE;AAI8C7E,MAAAA,cAAc,EAAC;AAJ7D,KAApB,CAFK,CASL;;AACA,QAAI8E,QAAQ,GAAG,EAAf,CAVK,CAWL;;AACA,QAAI,KAAKrF,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B6E,QAA5B,IAAwC,KAA5C,EAAkD;AAC7CD,MAAAA,QAAQ,GAAG1G,SAAS,KAClB,QADS,GACE,KAAKqB,KAAL,CAAWJ,KAAX,CAAiBwB,QAAjB,CAA0BmE,sBAD5B,GAET,qBAFS,GAEe,KAAKvF,KAAL,CAAWJ,KAAX,CAAiBwB,QAAjB,CAA0BoE,mBAFzC,GAGT,cAHS,GAGQ,KAAKxF,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B4B,qBAA5B,CAAkDoD,WAH1D,GAIT,YAJS,GAIM,KAAKzF,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B4B,qBAA5B,CAAkDqD,eAJxD,GAKT,qBALS,GAKe,KAAK1F,KAAL,CAAWJ,KAAX,CAAiBwB,QAAjB,CAA0BuE,iBALzC,GAMT,eANS,GAMS,KAAK3F,KAAL,CAAWJ,KAAX,CAAiBgG,cAAjB,CAAgC,EAAhC,CANT,CAM6C;AAN7C,QAOT,oBAPS,GAOc,KAAK5F,KAAL,CAAWJ,KAAX,CAAiBgG,cAAjB,CAAgC,EAAhC,CAPd,CAOiD;AAPjD,QAQT,mBARS,GAQaC,kBAAkB,CAAC,KAAK7F,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BqF,eAA7B,CAR1C;AASJ,KAVD,MAUK;AACDT,MAAAA,QAAQ,GAAG3G,WAAW,KAAK,2BAAhB,GAA8C,KAAKiB,KAAL,CAAWiF,cAApE;AACH;;AACDmB,IAAAA,OAAO,CAACC,GAAR,CAAYX,QAAZ,EAzBK,CA0BL;AAEA;;AAEA,UAAMY,SAAS,GAAG,KAAKtG,KAAL,CAAW4C,0BAAX,IAAyC,EAA3D;AAEA,UAAM2D,eAAe,GAAG,EAAxB;AACAD,IAAAA,SAAS,CAACE,OAAV,CAAkBhF,IAAI,IAAIA,IAAI,CAACU,oBAAL,KAA8BvC,gBAAgB,CAAC8G,IAA/C,GACtBF,eAAe,CAACG,IAAhB,CAAqB;AAAE,iBAAWlF,IAAI,CAACmF,YAAlB;AAAgC,mBAAanF,IAAI,CAACoF,oBAAlD;AAAwE,wBAAiBpF,IAAI,CAACU,oBAAL,KAA4B,CAA5B,GAA8B,WAA9B,GAA0C,aAAnI;AAAkJ,qBAAe;AAAjK,KAArB,CADsB,GAC+K,EADzM,EAjCK,CAqCL;AACA;;AACA,wBAAQ,uDAEJ;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAG,GAAE,CAAC,KAAKlC,KAAL,CAAWQ,WAAZ,GAA0B,GAA1B,GAAgC,GAAI,EAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,OAAO,EAAG,MAAI,KAAKD,QAAL,CAAc;AAACC,QAAAA,WAAW,EAAC,CAAC,KAAKR,KAAL,CAAWQ;AAAzB,OAAd,CAApB;AAA0E,MAAA,SAAS,EAAC,kBAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,CAAC,KAAKR,KAAL,CAAWQ,WAAZ,gBACG;AAAG,MAAA,KAAK,EAAC,iBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAEG;AAAG,MAAA,KAAK,EAAC,oBAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CADJ,eAOI,oBAAC,GAAD;AAAK,MAAA,SAAS,EAAE,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAsB,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAClB;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AACI,MAAA,UAAU,EAAE,KAAKH,KAAL,CAAWa,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CADhB;AAEI,MAAA,UAAU,EAAE,KAAKf,KAAL,CAAWJ,KAAX,CAAiBa,UAFjC;AAGI,MAAA,QAAQ,EAAE,KAAKT,KAAL,CAAWJ,KAAX,CAAiBwB,QAH/B;AAII,MAAA,UAAU,EAAE,KAAKpB,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B+F,YAA5B,IAA4C,KAAKxG,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BgG,gBAJxF;AAKI,MAAA,eAAe,EAAGC,MAAD,IAAY,KAAK1G,KAAL,CAAWpB,gBAAX,CAA4B8H,MAA5B,EAAoC,KAAK1G,KAAL,CAAWJ,KAAX,CAAiBwB,QAArD,EAA+D,KAAKpB,KAAL,CAAWJ,KAAX,CAAiBa,UAAhF,CALjC;AAMI,MAAA,cAAc,EAAE,KAAKT,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BgD,wBANhD;AAOI,MAAA,eAAe,EAAC,aAPpB;AAQI,MAAA,SAAS,EAAC,aARd;AASI,MAAA,UAAU,EAAC,iBATf;AAUI,MAAA,WAAW,EAAC,eAVhB;AAWI,MAAA,gBAAgB,EAAE,KAAKzD,KAAL,CAAWf,gBAXjC;AAYI,MAAA,WAAW,EAAE6F,WAZjB;AAaI,MAAA,qBAAqB,EAAE,KAAKnF,KAAL,CAAW0E,qBAbtC,CAcI;AAdJ;AAeI,MAAA,SAAS,EAAE,KAAKV,SAfpB;AAgBI,MAAA,UAAU,EAAE,KAAKD,UAhBrB,CAiBI;AAjBJ;AAkBI,MAAA,cAAc,EAAE,KAlBpB;AAmBI,MAAA,mBAAmB,EAAE,IAnBzB;AAoBI,MAAA,UAAU,EAAE,IApBhB,CAqBI;AArBJ;AAsBI,MAAA,eAAe,EAAE,CACb;AACI,mCACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACI,oBAAC,gBAAD;AACI,UAAA,IAAI,EAAE,mBADV;AAEI,UAAA,SAAS,EAAE,KAAK1D,KAAL,CAAWa,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,YAAAA,EAAE,EAAE;AAAN,WAA9B,CAFf;AAGI,UAAA,WAAW,EAAC,kBAHhB;AAII,UAAA,OAAO,EAAE,KAAKpB,KAAL,CAAWgH,gBAAX,IAA+B,EAJ5C;AAKI,UAAA,KAAK,EAAE,KAAKhH,KAAL,CAAW6E,oBAAX,GAAkC,KAAK7E,KAAL,CAAW6E,oBAA7C,GACH,KAAKxE,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BmG,oBAA5B,IACA;AACIC,YAAAA,KAAK,EAAE,KAAK7G,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BmG,oBAA5B,CAAiDN,YAD5D;AAEIhF,YAAAA,KAAK,EAAE,KAAKtB,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BmG,oBAA5B,CAAiDvF;AAF5D,WAPR;AAWI,UAAA,WAAW,EAAE,IAXjB;AAYI,UAAA,OAAO,EAAE,KAZb;AAaI,UAAA,WAAW,EAAE,KAbjB;AAcI,UAAA,YAAY,EAAE,IAdlB;AAeI,UAAA,UAAU,EAAE,KAfhB;AAgBI,UAAA,iBAAiB,EAAE,IAhBvB;AAiBI,UAAA,YAAY,EAAC,OAjBjB;AAkBI,UAAA,QAAQ,EAAG0B,KAAD,IAAW,KAAK/B,cAAL,CAAoB+B,KAApB,EAA2B,mBAA3B,CAlBzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ;AAFR,OADa,CAtBrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADkB,CAAtB,CAPJ,CADJ,eAiEI,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAG,GAAE,CAAC,KAAKpD,KAAL,CAAWQ,WAAZ,GAA0B,GAA1B,GAAgC,IAAK,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGI;AAAK,MAAA,SAAS,EAAC,mCAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBASI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,kCAApB,CACE;AADF;AAEI,oBAAW,MAFf;AAGI,kBAAU,KAAKH,KAAL,CAAWa,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAHd;AAII,MAAA,OAAO,EAAE,MAAM,KAAKf,KAAL,CAAWpB,gBAAX,CAA4B,KAAKoB,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BgD,wBAAxD,EAAkF,KAAKzD,KAAL,CAAWJ,KAAX,CAAiBwB,QAAnG,EAA6G,KAAKpB,KAAL,CAAWJ,KAAX,CAAiBa,UAA9H,CAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKI,oBAAC,cAAD;AAAgB,MAAA,SAAS,EAAC,cAA1B;AAAyC,MAAA,KAAK,EAAC,IAA/C;AAAoD,MAAA,MAAM,EAAC,IAA3D;AACI,MAAA,IAAI,EAAC,iBADT,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,CATJ,EAmBK,KAAKT,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4B6E,QAA5B,KAAuC,KAAvC,GAA+C,EAA/C,gBACA,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,SAAS,EAAC,kCAApB,CACD;AADC;AAEE,kBAAU,KAAKtF,KAAL,CAAWa,IAAX,CAAgBC,aAAhB,CAA8B;AAAEC,QAAAA,EAAE,EAAE;AAAN,OAA9B,CAFZ;AAGE,MAAA,OAAO,EAAE,MAAM,KAAKP,UAAL,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAIE,oBAAC,eAAD;AAAiB,MAAA,IAAI,EAAEhB,iBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,CApBL,CAHJ,EA+BK,KAAKQ,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BC,aAA5B,IAA6C,KAAKV,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BC,aAA5B,CAA0CC,MAA1C,GAAmD,CAAhG,IACM,KAAKhB,KAAL,CAAWiF,cADjB,gBAEG,oBAAC,MAAD,CAAQ;AAAR;AACI,MAAA,GAAG,EAAES,QADT,CAEI;AAFJ;AAGI,MAAA,KAAK,EAAC,KAHV;AAII,MAAA,MAAM,EAAC,QAJX;AAKI,MAAA,EAAE,EAAC,cALP;AAMI,MAAA,SAAS,EAAC,YANd;AAOI,MAAA,OAAO,EAAC,SAPZ;AAQI,MAAA,QAAQ,EAAC,UARb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,gBAWO,oBAAC,MAAD,CAAQ;AAAR;AACA,MAAA,GAAG,EAAEA,QADL,CAEA;AAFA;AAGA,MAAA,KAAK,EAAC,KAHN;AAIA,MAAA,MAAM,EAAC,QAJP;AAKA,MAAA,EAAE,EAAC,cALH;AAMA,MAAA,SAAS,EAAC,YANV;AAOA,MAAA,OAAO,EAAC,SAPR;AAQA,MAAA,QAAQ,EAAC,UART;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1CZ,CAjEJ,CADJ,CAFI,EAgIH,KAAK1F,KAAL,CAAWW,UAAX,gBACO,oBAAC,SAAD;AAAW,MAAA,IAAI,EAAE+E,QAAjB;AACA,MAAA,UAAU,EAAI,KAAK1F,KAAL,CAAWW,UADzB;AAEA,MAAA,UAAU,EAAI,KAAKF,UAFnB;AAGA,MAAA,IAAI,EAAE,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADP,GAMQ,EAtIL,EAwIH,KAAKT,KAAL,CAAWU,SAAX,gBACG,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAE,KAAKV,KAAL,CAAWU,SAAhC;AACI,MAAA,UAAU,EAAE,KAAKD,UADrB;AAEI,MAAA,SAAS,EAAE,KAAKT,KAAL,CAAWuE,SAF1B;AAGI,MAAA,UAAU,EAAE,KAAKvE,KAAL,CAAW2C,UAH3B;AAII,MAAA,UAAU,EAAE,KAAK3C,KAAL,CAAWwE,UAJ3B;AAKI,MAAA,WAAW,EAAE,KAAKd,WALtB;AAMI,MAAA,YAAY,EAAE,KAAKrD,KAAL,CAAWJ,KAAX,CAAiBoE,YANnC;AAOI,MAAA,WAAW,EAAE,KAAKhE,KAAL,CAAWnB,WAP5B;AAQI,MAAA,cAAc,EAAE,KAAKc,KAAL,CAAWY,cAAX,IAA6B,EARjD;AASI,MAAA,eAAe,EAAE2F,eATrB;AAUI,MAAA,WAAW,EAAE,QAVjB;AAWI,MAAA,YAAY,eACR,oBAAC,cAAD;AACI,QAAA,cAAc,EAAE,KAAKvG,KAAL,CAAWY,cAAX,IAA6B,EADjD;AAEI,QAAA,eAAe,EAAE,KAAKuC,eAF1B;AAGI,QAAA,sBAAsB,EAAE,KAAKF,sBAHjC;AAII,QAAA,aAAa,EAAE,KAAKrB,aAJxB;AAKI,QAAA,gBAAgB,EAAE,KAAKiB,gBAL3B;AAMI,QAAA,0BAA0B,EAAE,KAAK7C,KAAL,CAAW4C,0BAAX,IAAyC,EANzE;AAOI,QAAA,SAAS,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBsE,SAPhC;AAQI,QAAA,UAAU,EAAE,KAAKlE,KAAL,CAAWJ,KAAX,CAAiB0C,UARjC;AASI,QAAA,QAAQ,EAAE,KAAKtC,KAAL,CAAWJ,KAAX,CAAiBwB,QAT/B,CAUA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,GA2BQ,EAnKL,CAAR;AAuKH;;AAED0F,EAAAA,kBAAkB,CAACC,aAAD,EAAgB;AAE9B,QAAI,KAAK/G,KAAL,CAAWJ,KAAX,CAAiBW,cAAjB,KAAoCwG,aAAa,CAACnH,KAAd,CAAoBW,cAA5D,EAA4E;AACxE,WAAKL,QAAL,CAAc;AACVK,QAAAA,cAAc,EAAE,KAAKP,KAAL,CAAWJ,KAAX,CAAiBW,cADvB;AAEVoB,QAAAA,cAAc,EAAE,KAAK3B,KAAL,CAAWJ,KAAX,CAAiB+B,cAFvB;AAGVY,QAAAA,0BAA0B,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiB2C;AAHnC,OAAd;AAKH,KAND,MAOK;AACD,UAAI,KAAKvC,KAAL,CAAWJ,KAAX,CAAiB+B,cAAjB,KAAoCoF,aAAa,CAACnH,KAAd,CAAoB+B,cAA5D,EAA4E;AACxE,aAAKzB,QAAL,CAAc;AACVyB,UAAAA,cAAc,EAAE,KAAK3B,KAAL,CAAWJ,KAAX,CAAiB+B,cADvB;AAEVY,UAAAA,0BAA0B,EAAE,KAAKvC,KAAL,CAAWJ,KAAX,CAAiB2C;AAFnC,SAAd;AAIH;AACJ;;AAED,QAAI,KAAKvC,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,KAAgCsG,aAAa,CAACnH,KAAd,CAAoBa,UAAxD,EAAoE;AAChE,YAAMuG,eAAe,GAAGzI,mBAAmB,CAAC,KAAKyB,KAAL,CAAWJ,KAAX,CAAiBa,UAAjB,CAA4BwG,oBAA5B,IAAoD,EAArD,EAAyD,mBAAzD,EACvC,cADuC,EACvB7C,SADuB,EACZA,SADY,EACD,IADC,CAA3C;AAEA,YAAMuC,gBAAgB,GAAGK,eAAe,CAACE,GAAhB,CAAoB,YAApB,CAAzB;AAEA,YAAMzG,UAAU,GAAG,KAAKT,KAAL,CAAWJ,KAAX,CAAiBa,UAApC;AACAjC,MAAAA,WAAW,CAACiC,UAAU,CAAC,wBAAD,CAAX,EAAuC,WAAvC,EAAoD,mBAApD,CAAX;AAEA,UAAI0G,OAAO,GAAG;AAAEvC,QAAAA,cAAc,EAAEnE,UAAU,CAAC,eAAD;AAA5B,OAAd;;AACA,UAAGA,UAAU,CAAC,eAAD,CAAV,KAA8B,EAAjC,EAAoC;AAC5B0G,QAAAA,OAAO,CAAC,gBAAD,CAAP,GAA2B/C,SAA3B;AACP;;AACD,UAAI3D,UAAU,CAAC,wBAAD,CAAV,KAAyC2D,SAA7C,EAAwD;AACpD+C,QAAAA,OAAO,CAAC,WAAD,CAAP,GAAuB,IAAvB;AACAA,QAAAA,OAAO,CAAC,4BAAD,CAAP,GAAwC1G,UAAU,CAAC,wBAAD,CAAlD;AACA,YAAIF,cAAc,GAAG,EAArB;AACA,YAAIoB,cAAc,GAAG,EAArB;AACAwF,QAAAA,OAAO,CAAC,4BAAD,CAAP,CAAsCC,GAAtC,CAA0CjG,IAAI,IAAI;AAC9C,cAAIA,IAAI,CAACU,oBAAL,KAA8BvC,gBAAgB,CAAC+H,UAAnD,EAA+D;AAC3D9G,YAAAA,cAAc,CAACY,IAAI,CAACoF,oBAAN,CAAd,GAA4C9H,mBAAmB,CAAC,KAAKuB,KAAL,CAAWJ,KAAX,CAAiBwB,QAAlB,EAA4BD,IAAI,CAACmG,QAAL,CAAc,CAAd,CAA5B,CAA/D;AACA3F,YAAAA,cAAc,GAAG,EACb,GAAGA,cADU;AAEb,eAACR,IAAI,CAACoF,oBAAN,GAA6B9H,mBAAmB,CAAC,KAAKuB,KAAL,CAAWJ,KAAX,CAAiBwB,QAAlB,EAA4BD,IAAI,CAACmG,QAAL,CAAc,CAAd,CAA5B,CAFnC;AAGb,eAACnG,IAAI,CAACoF,oBAAL,CAA0B3E,MAA1B,CAAiC,gBAAjC,CAAD,GAAsDT,IAAI,CAACU,oBAH9C;AAIb,eAACV,IAAI,CAACoF,oBAAL,CAA0B3E,MAA1B,CAAiC,gBAAjC,CAAD,GAAsDT,IAAI,CAACW;AAJ9C,aAAjB;AAOH,WATD,MAUK,IAAIX,IAAI,CAACU,oBAAL,KAA8BvC,gBAAgB,CAACiI,QAAnD,EAA6D;AAC9D,kBAAMC,QAAQ,GAAGjJ,mBAAmB,CAAC4C,IAAI,CAACmG,QAAL,IAAiB,EAAlB,EAAsBnG,IAAI,CAACsG,YAA3B,EAChCtG,IAAI,CAACuG,cAD2B,EACXtD,SADW,EACAA,SADA,EACW,IADX,CAApC;AAGA,kBAAMuD,SAAS,GAAGH,QAAQ,CAACN,GAAT,CAAa,YAAb,CAAlB;AACA/F,YAAAA,IAAI,CAACmG,QAAL,GAAgBK,SAAhB;AACH;;AACD,iBAAO,IAAP;AAEH,SApBD;AAqBAR,QAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4BxF,cAA5B;AACAwF,QAAAA,OAAO,CAAC,gBAAD,CAAP,GAA4B5G,cAA5B;AACA4G,QAAAA,OAAO,CAAC,WAAD,CAAP,GAAuB,QAAvB;AACAA,QAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,eAAxB;AACAA,QAAAA,OAAO,CAAC,YAAD,CAAP,GAAwB,KAAKnH,KAAL,CAAWJ,KAAX,CAAiB0C,UAAzC;AACH,OA/BD,MAgCK;AACD6E,QAAAA,OAAO,CAAC,WAAD,CAAP,GAAuB,KAAvB;AACH;;AACD,WAAKjH,QAAL,CAAc;AAAEyG,QAAAA,gBAAF;AAAoB,WAAGQ;AAAvB,OAAd;AACH,KAlE6B,CAmE9B;AACA;AACA;AACA;AACA;AACN;AACA;AACA;AACM;AACA;AACN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACM;AACA;AACN;AACM;AACA;AACA;AACA;;AACH;;AAnWiC;;AAmhBtC,eAAetJ,OAAO,CAAC6B,eAAD,EAAkB;AACpCd,EAAAA,gBADoC;AAClBC,EAAAA,WADkB;AACLI,EAAAA,gBADK;AACaC,EAAAA,WADb;AAEpCJ,EAAAA,0BAFoC;AAERC,EAAAA,8BAFQ;AAEwBC,EAAAA;AAFxB,CAAlB,CAAP,CAGZhB,UAAU,CAAC6B,OAAD,CAHE,CAAf","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\n\r\nimport Iframe from 'react-iframe';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col, Nav } from 'react-bootstrap';\r\n//import { Tooltip } from '@progress/kendo-react-tooltip';\r\n// import ReactTooltip from 'react-tooltip';\r\n// import DocViewer from '../../../components/doc-viewer/doc-viewer.component'\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport { formatInputDate, constructOptionList, sortByField, rearrangeDateFormat } from '../../../components/CommonScript';\r\nimport {fileViewUrl, reportUrl} from '../../../rsapi'\r\nimport {\r\n    viewReportDetail, updateStore, getReportViewChildDataList, viewReportDetailWithParameters,\r\n    getReportsByModule, filterColumnData, callService\r\n} from '../../../actions';\r\nimport FormSelectSearch from '../../../components/form-select-search/form-select-search.component';\r\nimport DynamicControl from './DynamicControl';\r\nimport { transactionStatus } from '../../../components/Enumeration'\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport { ReactComponent as ReportViewIcon } from '../../../assets/image/reports-view.svg';\r\nimport { designComponents } from '../../../components/Enumeration';\r\nimport DocViewer from '../../../components/doc-viewer/doc-viewer.component';\r\nimport { faExpandArrowsAlt} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n//import { Stimulsoft } from 'stimulsoft-reports-js/Scripts/stimulsoft.viewer';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass Reports extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            screenName: undefined,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedReportModule: undefined,\r\n            sidebarview: false\r\n        };\r\n        this.searchRef = React.createRef();\r\n\r\n        this.searchFieldList = [\"sactivestatus\", \"sdescription\", \"sregsubtypename\", \"sregtypename\",\r\n            \"sreportmodulename\", \"smoduledisplayname\", \"sreportname\", \"sreporttypename\"];\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        if (state.reportFilePath !== undefined) {\r\n            return { openModal: false }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        const filterParam = {\r\n            inputListName: \"ViewReportMaster\", selectedObject: \"SelectedViewReportMaster\", primaryKeyField: \"nreportcode\",\r\n            fetchUrl: \"reportview/searchViewReport\", fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            masterData: this.props.Login.masterData, searchFieldList: this.searchFieldList,\r\n            unchangeList: [\"SelectedReportModule\",\"ViewReportModuleList\"],selectedRecord:{} \r\n        };\r\n        \r\n        // const filePath = fileViewURL + \"/SharedFolder/FileUpload/\" + this.props.Login.reportFilePath;\r\n        let filePath = \"\";\r\n        //filePath = fileViewUrl() + \"/Connecting_to_Databases01/\" \r\n        if (this.props.Login.masterData.filetype == \"mrt\"){\r\n             filePath = reportUrl() \r\n             + \"?name=\" + this.props.Login.userInfo.sreportingtoolfilename\r\n             + \"&slanguagetypecode=\" + this.props.Login.userInfo.sreportlanguagecode\r\n             + \"&foldername=\" + this.props.Login.masterData.SelectedReportDetails.sreportname\r\n             + \"&filename=\" + this.props.Login.masterData.SelectedReportDetails.ssystemfilename\r\n             + \"&sconnectionstring=\" + this.props.Login.userInfo.sconnectionString\r\n             + \"&sreportlink=\" + this.props.Login.reportSettings[15] //this.props.Login.userInfo.sreportLink  \r\n             + \"&smrttemplatelink=\" + this.props.Login.reportSettings[16]//this.props.Login.userInfo.smrttemplateLink \r\n             + \"&sourceparameter=\" + encodeURIComponent(this.props.Login.masterData.sourceparameter);\r\n        }else{\r\n            filePath = fileViewUrl() + \"/SharedFolder/ReportView/\" + this.state.reportFilePath;\r\n        }\r\n        console.log(filePath)\r\n        // const docPath = this.props.Login.masterData.ReportPDFPath && (this.props.Login.masterData.ReportPDFPath+this.state.reportFilePath);\r\n\r\n        // const filePath1 = this.props.Login.settings && this.props.Login.settings[6] + this.state.reportFilePath;\r\n\r\n        const fieldList = this.state.viewReportDesignConfigList || [];\r\n\r\n        const mandatoryFields = [];\r\n        fieldList.forEach(item => item.ndesigncomponentcode !== designComponents.PATH ?\r\n            mandatoryFields.push({ \"idsName\": item.sdisplayname, \"dataField\": item.sreportparametername, \"mandatoryLabel\":item.ndesigncomponentcode===5?\"IDS_ENTER\":\"IDS_PROVIDE\", \"controlType\": \"textbox\" }) : \"\"\r\n        );\r\n\r\n        //console.log(\"file:\", window.location.origin, filePath, this.state.reportFilePath);\r\n        // console.log(\"docPath:\", this.props.Login.masterData, this.props.Login.masterData.ReportPDFPath, docPath);\r\n        return (<>\r\n            {/* Start of get display*/}\r\n            <div className=\"client-listing-wrap mtop-4\">\r\n                <Row noGutters={true}>\r\n                    <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                        <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                            {!this.state.sidebarview ?\r\n                                <i class=\"fa fa-less-than\"></i> :\r\n                                <i class=\"fa fa-greater-than\"></i> \r\n                            }\r\n                        </span>\r\n                        <Row noGutters={true}><Col md={12}>\r\n                            <div className=\"list-fixed-wrap\">\r\n                                <ListMaster\r\n                                    screenName={this.props.intl.formatMessage({ id: \"IDS_REPORTS\" })}\r\n                                    masterData={this.props.Login.masterData}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ViewReportMaster}\r\n                                    getMasterDetail={(report) => this.props.viewReportDetail(report, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                    selectedMaster={this.props.Login.masterData.SelectedViewReportMaster}\r\n                                    primaryKeyField=\"nreportcode\"\r\n                                    mainField=\"sreportname\"\r\n                                    firstField=\"sreporttypename\"\r\n                                    secondField=\"sactivestatus\"\r\n                                    filterColumnData={this.props.filterColumnData}\r\n                                    filterParam={filterParam}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    // addId = {addId}\r\n                                    searchRef={this.searchRef}\r\n                                    reloadData={this.reloadData}\r\n                                    //openModal = {()=>this.props.getUserComboService(addParam)}\r\n                                    isMultiSelecct={false}\r\n                                    needAccordianFilter={true}\r\n                                    hidePaging={true}\r\n                                    //allowDuplicateHits={true}\r\n                                    filterComponent={[\r\n                                        {\r\n                                            \"IDS_FILTER\":\r\n                                                <Row>\r\n                                                    <Col md={12}>\r\n                                                        <FormSelectSearch\r\n                                                            name={\"nreportmodulecode\"}\r\n                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_MODULENAME\" })}\r\n                                                            placeholder=\"Please Select...\"\r\n                                                            options={this.state.reportModuleList || []}\r\n                                                            value={this.state.selectedReportModule ? this.state.selectedReportModule :\r\n                                                                this.props.Login.masterData.SelectedReportModule &&\r\n                                                                {\r\n                                                                    label: this.props.Login.masterData.SelectedReportModule.sdisplayname,\r\n                                                                    value: this.props.Login.masterData.SelectedReportModule.nreportmodulecode\r\n                                                                }}\r\n                                                            isMandatory={true}\r\n                                                            isMulti={false}\r\n                                                            isClearable={false}\r\n                                                            isSearchable={true}\r\n                                                            isDisabled={false}\r\n                                                            closeMenuOnSelect={true}\r\n                                                            menuPosition=\"fixed\"\r\n                                                            onChange={(event) => this.onfilterChange(event, \"nreportmodulecode\")}\r\n                                                        />\r\n                                                    </Col>\r\n                                                </Row>\r\n                                        }\r\n                                    ]}\r\n                                />\r\n                            </div>\r\n                        </Col></Row>\r\n                    </Col>\r\n                    <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                        <div className=\"d-flex justify-content-end pad-15\">\r\n                            {/* {this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0\r\n                             && this.state.reportFilePath &&\r\n                            <Nav.Link name={\"fullscreenreport\"}\r\n                                className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_FULLSCREENREPORT\" })}>\r\n                                <DocViewer file={filePath} type={\"pdf\"} ></DocViewer>\r\n                            </Nav.Link> \r\n                        } */}\r\n                            <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                              //  data-for=\"tooltip_list_wrap\"\r\n                                data-place=\"left\"\r\n                                data-tip={this.props.intl.formatMessage({ id: \"IDS_RESETREPORTPARAMETER\" })}\r\n                                onClick={() => this.props.viewReportDetail(this.props.Login.masterData.SelectedViewReportMaster, this.props.Login.userInfo, this.props.Login.masterData)}>\r\n                                <ReportViewIcon className=\"custom_icons\" width=\"20\" height=\"20\"\r\n                                    name=\"resetreporticon\"\r\n                                //title={this.props.intl.formatMessage({ id: \"IDS_RESETREPORTPARAMETER\" })} \r\n                                />\r\n                            </Nav.Link>\r\n                            {this.props.Login.masterData.filetype===\"mrt\" ? \"\"\r\n                            :<Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                            //   data-for=\"tooltip_list_wrap\"\r\n                               data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })}\r\n                               onClick={() => this.viewReport()}>\r\n                               <FontAwesomeIcon icon={faExpandArrowsAlt}/>\r\n                           </Nav.Link>}\r\n                        </div>\r\n                        {/* </Tooltip> */}\r\n                        {this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0\r\n                            && this.state.reportFilePath ?\r\n                            <Iframe //url=\"https://arxiv.org/pdf/quant-ph/0410100.pdf\"\r\n                                url={filePath}\r\n                                // url={this.state.reportFilePath}\r\n                                width=\"98%\"\r\n                                height=\"1000px\"\r\n                                id=\"reportviewID\"\r\n                                className=\"reportview\"\r\n                                display=\"initial\"\r\n                                position=\"relative\" />:\r\n                                <Iframe //url=\"https://arxiv.org/pdf/quant-ph/0410100.pdf\"\r\n                                url={filePath}\r\n                                // url={this.state.reportFilePath}\r\n                                width=\"98%\"\r\n                                height=\"1000px\"\r\n                                id=\"reportviewID\"\r\n                                className=\"reportview\"\r\n                                display=\"initial\"\r\n                                position=\"relative\" />\r\n                        }\r\n\r\n                        {/* </Col>\r\n                    </Row> */}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n            {/* Start of Modal Sideout for Creation */}\r\n            {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n            {this.state.showReport ?\r\n                    <DocViewer file={filePath} \r\n                    showReport = {this.state.showReport}\r\n                    closeModal = {this.closeModal}\r\n                    type={\"pdf\"}>\r\n                    </DocViewer>  \r\n                    :\"\"\r\n                }\r\n            {this.state.openModal ?\r\n                <SlideOutModal show={this.state.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.state.operation}\r\n                    inputParam={this.state.inputParam}\r\n                    screenName={this.state.screenName}\r\n                    onSaveClick={this.onSaveClick}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    updateStore={this.props.updateStore}\r\n                    selectedRecord={this.state.selectedRecord || {}}\r\n                    mandatoryFields={mandatoryFields}\r\n                    buttonLabel={\"Submit\"}\r\n                    addComponent={\r\n                        <DynamicControl\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            onNumericInputOnChange={this.onNumericInputOnChange}\r\n                            onComboChange={this.onComboChange}\r\n                            handleDateChange={this.handleDateChange}\r\n                            viewReportDesignConfigList={this.state.viewReportDesignConfigList || []}\r\n                            operation={this.props.Login.operation}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            userInfo={this.props.Login.userInfo}\r\n                        // screenName={this.props.intl.formatMessage({id:\"IDS_FILTERPARAMETER\"})}\r\n                        />\r\n\r\n                    }\r\n                /> : \"\"}\r\n            {/* End of Modal Sideout for Creation */}\r\n        </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({\r\n                selectedRecord: this.props.Login.selectedRecord,\r\n                inputFieldData: this.props.Login.inputFieldData,\r\n                viewReportDesignConfigList: this.props.Login.viewReportDesignConfigList\r\n            });\r\n        }\r\n        else {\r\n            if (this.props.Login.inputFieldData !== previousProps.Login.inputFieldData) {\r\n                this.setState({\r\n                    inputFieldData: this.props.Login.inputFieldData,\r\n                    viewReportDesignConfigList: this.props.Login.viewReportDesignConfigList\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            const reportModuleMap = constructOptionList(this.props.Login.masterData.ViewReportModuleList || [], \"nreportmodulecode\",\r\n                \"sdisplayname\", undefined, undefined, true);\r\n            const reportModuleList = reportModuleMap.get(\"OptionList\");\r\n\r\n            const masterData = this.props.Login.masterData;\r\n            sortByField(masterData[\"ViewReportDesignConfig\"], \"ascending\", \"nreportdesigncode\");\r\n\r\n            let respObj = { reportFilePath: masterData[\"ReportPDFFile\"] };\r\n            if(masterData[\"ReportPDFFile\"]===\"\"){\r\n                    respObj[\"reportFilePath\"]= undefined ;\r\n            }\r\n            if (masterData[\"ViewReportDesignConfig\"] !== undefined) {\r\n                respObj[\"openModal\"] = true;\r\n                respObj[\"viewReportDesignConfigList\"] = masterData[\"ViewReportDesignConfig\"];\r\n                let selectedRecord = {};\r\n                let inputFieldData = {};\r\n                respObj[\"viewReportDesignConfigList\"].map(item => {\r\n                    if (item.ndesigncomponentcode === designComponents.DATEPICKER) {\r\n                        selectedRecord[item.sreportparametername] = rearrangeDateFormat(this.props.Login.userInfo, item.dataList[0]);\r\n                        inputFieldData = {\r\n                            ...inputFieldData,\r\n                            [item.sreportparametername]: rearrangeDateFormat(this.props.Login.userInfo, item.dataList[0]),\r\n                            [item.sreportparametername.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                            [item.sreportparametername.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                        };\r\n\r\n                    }\r\n                    else if (item.ndesigncomponentcode === designComponents.COMBOBOX) {\r\n                        const comboMap = constructOptionList(item.dataList || [], item.svaluemember,\r\n                            item.sdisplaymember, undefined, undefined, true);\r\n\r\n                        const comboList = comboMap.get(\"OptionList\");\r\n                        item.dataList = comboList;\r\n                    }\r\n                    return null;\r\n\r\n                });\r\n                respObj[\"inputFieldData\"] = inputFieldData;\r\n                respObj[\"selectedRecord\"] = selectedRecord;\r\n                respObj[\"operation\"] = \"filter\";\r\n                respObj[\"screenName\"] = \"IDS_PARAMETER\";\r\n                respObj[\"inputParam\"] = this.props.Login.inputParam;\r\n            }\r\n            else {\r\n                respObj[\"openModal\"] = false;\r\n            }\r\n            this.setState({ reportModuleList, ...respObj });\r\n        }\r\n        // if (this.props.Login.masterData !== previousProps.Login.masterData && \r\n        //     this.props.Login.SelectedReportDetails!==previousProps.Login.SelectedReportDetails) {\r\n        //         Stimulsoft.Base.StiLicense.loadFromFile(\"license.key\");\r\n        //         const params = new URLSearchParams(window.location.search);\r\n        // \tlet clanguagefile = params.get('name')\r\n\t\t// \tlet paramfilename = params.get('filename')\r\n\t\t// \tlet paramfoldername = params.get('foldername')\r\n\t\t// \tlet paramsourceparameter = params.get('sourceparameter')\r\n        //     //StiOptions.WebServer.url = \"JSDataAdapter/\";\r\n        //     var report = Stimulsoft.Report.StiReport.createNewReport();\r\n\t\t// \tif (!paramfilename){\r\n\t\t// \t\t//report.loadFile(\"reports/R_users.mrt\");\r\n\t\t// \t}\r\n\t\t// \telse{\r\n\t\t// \t\treport.loadFile(\"//localhost:8090/SharedFolder/QuaLISjrxml/\" + paramfoldername + \"/\" + paramfilename);\r\n\t\t// \t}\r\n\t\t// \t// Parameter begin\r\n\t\t// \tif(paramsourceparameter){\r\n\t\t// \tlet jsonparse = JSON.parse(paramsourceparameter);\r\n\t\t// \t// console.log(jsonparse);\r\n\t\t// \t// console.log(\"----\");\r\n\r\n\t\t// \tObject.entries(jsonparse).forEach(([key, value]) => \r\n\t\t// \treport[key] = value);\r\n\r\n\t\t// \t//Object.entries(jsonparse).forEach(([key, value]) => \r\n\t\t// \t//console.log(`${key}: ${value}`));\r\n\t\t// \t}\r\n        //     //((StiSqlDatabase)report.Dictionary.Databases[\"Connection\"]).ConnectionString = \"\"\r\n        //     var dbMySQL = report.dictionary.databases.getByName(\"Connection\");\r\n\t\t// \tdbMySQL.connectionString = \"Server=agl92; Database=LIMSDB20230420;User=postgres; Pwd=admin@123;\";\r\n        //     var options = new Stimulsoft.Viewer.StiViewerOptions();\r\n        //     var viewer = new Stimulsoft.Viewer.StiViewer(options, \"StiViewer\", false);\r\n        //     viewer.report = report;\r\n        //     }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let openModal = false;\r\n        let showReport = false;\r\n        let selectedRecord = {};\r\n        this.setState({ showReport,openModal, selectedRecord });\r\n    }\r\n\r\n    viewReport=()=>{\r\n        if(this.props.Login.masterData.ReportPDFFile && this.props.Login.masterData.ReportPDFFile.length > 0)\r\n        {\r\n            let showReport = true;\r\n            this.setState({ showReport });\r\n        }\r\n       else{\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_GENERATETHEREPORT\" }));\r\n       }       \r\n    }\r\n\r\n    onfilterChange = (comboData, fieldName, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n\r\n        this.props.getReportsByModule({\r\n            userInfo: this.props.Login.userInfo, nreportmodulecode: comboData.value,\r\n            selectedRecord, masterData: this.props.Login.masterData\r\n        });\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        const inputData = {\r\n            reportdesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.state.inputFieldData,\r\n                [fieldName]: comboData.value,\r\n                [fieldName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [fieldName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: comboData.value.toString(),\r\n            parentid: item.nreportdesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nreportdetailcode: this.props.Login.masterData.SelectedReportDetails.nreportdetailcode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewReportDesignConfigList: this.state.viewReportDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataList(inputParam);\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue, item) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n\r\n        const inputData = {\r\n            reportdesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.state.inputFieldData,\r\n                [dateName]: formatInputDate(dateValue, true),\r\n                [dateName.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [dateName.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n                [dateName.concat(\"_days\")]: item.ndays\r\n\r\n            },\r\n            parentcode: formatInputDate(dateValue, true),\r\n            parentid: item.nreportdesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nreportdetailcode: this.props.Login.masterData.SelectedReportDetails.nreportdetailcode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewReportDesignConfigList: this.state.viewReportDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataList(inputParam);\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n\r\n        const inputData = {\r\n            reportdesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.state.inputFieldData,\r\n                [name]: value,\r\n                [name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: value.toString(),\r\n            parentid: item.nreportdesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nreportdetailcode: this.props.Login.masterData.SelectedReportDetails.nreportdetailcode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewReportDesignConfigList: this.state.viewReportDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataList(inputParam);\r\n    }\r\n\r\n    onInputOnChange = (event, item) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        const inputData = {\r\n            reportdesignconfig: item,\r\n            inputfielddata: {\r\n                ...this.state.inputFieldData,\r\n                [event.target.name]: selectedRecord[event.target.name],\r\n                [event.target.name.concat(\"_componentcode\")]: item.ndesigncomponentcode,\r\n                [event.target.name.concat(\"_componentname\")]: item.sdesigncomponentname,\r\n\r\n            },\r\n            parentcode: selectedRecord[event.target.name].toString(),\r\n            parentid: item.nreportdesigncode,\r\n            userinfo: this.props.Login.userInfo,\r\n            nreportdetailcode: this.props.Login.masterData.SelectedReportDetails.nreportdetailcode,\r\n\r\n        }\r\n        const inputParam = {\r\n            viewReportDesignConfigList: this.state.viewReportDesignConfigList,\r\n            selectedRecord,\r\n            inputData\r\n        }\r\n\r\n        this.props.getReportViewChildDataList(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        // const selectedRecord = this.props.Login.selectedRecord;        \r\n        const inputFieldData = this.state.inputFieldData;\r\n\r\n        const inputParam = {\r\n            reportmaster: this.props.Login.masterData.SelectedViewReportMaster,\r\n            inputfielddata: inputFieldData,\r\n            userinfo: this.props.Login.userInfo,\r\n            masterData: this.props.Login.masterData\r\n        }\r\n        this.props.viewReportDetailWithParameters(inputParam);\r\n\r\n    }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: \"reportview\",\r\n            methodUrl: \"ReportView\",\r\n            displayName: \"IDS_REPORTS\",\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    viewReportDetail, updateStore, filterColumnData, callService,\r\n    getReportViewChildDataList, viewReportDetailWithParameters, getReportsByModule\r\n})(injectIntl(Reports));\r\n\r\n"]},"metadata":{},"sourceType":"module"}