{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';import{transactionStatus}from'../../components/Enumeration';var AddInstrumentCategory=function AddInstrumentCategory(props){var Technique=props.Technique,Interfacetype=props.Interfacetype;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORY\"}),name:\"sinstrumentcatname\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_INSTRUMENTCATEGORY\"}),value:props.selectedRecord[\"sinstrumentcatname\"]?props.selectedRecord[\"sinstrumentcatname\"]:\"\",isMandatory:true,required:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),name:\"sdescription\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DESCRIPTION\"}),value:props.selectedRecord[\"sdescription\"]?props.selectedRecord[\"sdescription\"]:\"\",isMandatory:false,required:false,maxLength:255})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_CATEGORYBASEDFLOW\"}),type:\"switch\",name:\"ncategorybasedflow\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_CATEGORYBASEDFLOW\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"ncategorybasedflow\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[\"ncategorybasedflow\"]===transactionStatus.YES?true:false:false//disabled={props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === transactionStatus.YES  ? true : false : false}\n,disabled:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_CALIBRATIONREQUIRED\"}),type:\"switch\",name:\"ncalibrationreq\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_CALIBRATIONREQUIRED\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"ncalibrationreq\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[\"ncalibrationreq\"]===transactionStatus.YES?true:false:false//disabled={props.selectedRecord ? props.selectedRecord[\"ncalibrationreq\"] === transactionStatus.YES  ? true : false : false}\n,disabled:false})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"}),type:\"switch\",name:\"ndefaultstatus\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"}),defaultValue:props.selectedRecord?props.selectedRecord[\"ndefaultstatus\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:props.selectedRecord?props.selectedRecord[\"ndefaultstatus\"]===transactionStatus.YES?true:false:false//disabled={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES  ? true : false : false}\n,disabled:false})));};export default injectIntl(AddInstrumentCategory);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/instrumentmanagement/AddInstrumentCategory.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","FormSelectSearch","injectIntl","transactionStatus","AddInstrumentCategory","props","Technique","Interfacetype","intl","formatMessage","id","event","onInputOnChange","selectedRecord","YES"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AddInstrumentCategory = (props) => {\r\n    const { Technique, Interfacetype } = props;\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORY\" })}\r\n                    name= \"sinstrumentcatname\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_INSTRUMENTCATEGORY\" })}\r\n                    value={props.selectedRecord[\"sinstrumentcatname\"] ? props.selectedRecord[\"sinstrumentcatname\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={100}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id:\"IDS_DESCRIPTION\" })}\r\n                    name=\"sdescription\"\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord[\"sdescription\"] ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={255}\r\n                />\r\n            </Col>\r\n            {/* <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_TECHNIQUE\" })}\r\n                    name={\"ntechniquecode\"} \r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord.ntechniquecode ? props.selectedRecord.ntechniquecode: \"\"}\r\n                    options={Technique}\r\n                    optionId=\"ntechniquecode\"\r\n                    optionValue=\"stechniquename\"\r\n                    isMandatory={false}\r\n                    isMulti={false}\r\n                    isClearable={true}\r\n                    isSearchable={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"ntechniquecode\")}\r\n                    \r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_INTERFACETYPE\" })}\r\n                    name= {\"ninterfacetypecode\"}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    value={props.selectedRecord.ninterfacetypecode ? props.selectedRecord.ninterfacetypecode : \"\"}\r\n                    options={Interfacetype}\r\n                    optionId=\"ninterfacetypecode\"\r\n                    optionValue=\"sinterfacetypename\"\r\n                    isMandatory={true}\r\n                    isMulti={false}\r\n                    isSearchable={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    as={\"select\"}\r\n                    onChange={(event) => props.onComboChange(event, \"ninterfacetypecode\")}\r\n                    \r\n                />\r\n            </Col> */}\r\n            <Col md={12}>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_CATEGORYBASEDFLOW\" })}\r\n                    type=\"switch\"\r\n                    name={\"ncategorybasedflow\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CATEGORYBASEDFLOW\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === transactionStatus.YES  ? true : false : false}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === transactionStatus.YES  ? true : false : false}\r\n                    //disabled={props.selectedRecord ? props.selectedRecord[\"ncategorybasedflow\"] === transactionStatus.YES  ? true : false : false}\r\n                    disabled={false}\r\n                >\r\n                </CustomSwitch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_CALIBRATIONREQUIRED\" })}\r\n                    type=\"switch\"\r\n                    name={\"ncalibrationreq\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_CALIBRATIONREQUIRED\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ncalibrationreq\"] === transactionStatus.YES  ? true : false : false}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ncalibrationreq\"] === transactionStatus.YES  ? true : false : false}\r\n                    //disabled={props.selectedRecord ? props.selectedRecord[\"ncalibrationreq\"] === transactionStatus.YES  ? true : false : false}\r\n                    disabled={false}\r\n                >\r\n                </CustomSwitch>\r\n            </Col>\r\n            <Col md={12}>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    type=\"switch\"\r\n                    name={\"ndefaultstatus\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES  ? true : false : false}\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES  ? true : false : false}\r\n                    //disabled={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES  ? true : false : false}\r\n                    disabled={false}\r\n                >\r\n                </CustomSwitch>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddInstrumentCategory);"]},"metadata":{},"sourceType":"module"}