{"ast":null,"code":"import React from'react';import{injectIntl}from'react-intl';import{Row,Col}from'react-bootstrap';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{transactionStatus}from'../../components/Enumeration';var AddOpenDate=function AddOpenDate(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntranscode\",formLabel:props.intl.formatMessage({id:\"IDS_STATUS\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.Status,value:props.selectedRecord[\"ntranscode\"]?props.selectedRecord[\"ntranscode\"]:\"\",defaultValue:props.selectedRecord[\"ntranscode\"],isMulti:false,isSearchable:true,isMandatory:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntranscode',1);}})),/*#__PURE__*/React.createElement(Col,{md:props.userInfo.istimezoneshow===transactionStatus.YES?6:12},/*#__PURE__*/React.createElement(DateTimePicker,{name:\"dopendate\",label:props.intl.formatMessage({id:\"IDS_OPENDATE\"}),className:\"form-control\",selected:props.selectedRecord[\"dopendate\"],dateFormat:props.userInfo.ssitedate,minDate:props.currentTime,isClearable:false,required:true,isMandatory:true,onChange:function onChange(date){return props.handleDateChange(\"dopendate\",date);},value:props.selectedRecord[\"dopendate\"]})),props.userInfo.istimezoneshow===transactionStatus.YES&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzopendate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.TimeZoneList// optionId=\"ntimezonecode\"\n// optionValue=\"stimezoneid\"\n,value:props.selectedRecord[\"ntzopendate\"],defaultValue:props.selectedRecord[\"ntzopendate\"],isMandatory:false,isMulti:false,isSearchable:true// isClearable={false}                               \n,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'ntzopendate',1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_REASON\"}),name:\"sopenreason\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:\"IDS_OPENREASON\"}),value:props.selectedRecord?props.selectedRecord[\"sopenreason\"]:\"\",rows:\"2\",isMandatory:false,required:false,maxLength:\"255\"})));};export default injectIntl(AddOpenDate);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/instrumentmanagement/AddOpenDate.jsx"],"names":["React","injectIntl","Row","Col","DateTimePicker","FormTextarea","FormSelectSearch","transactionStatus","AddOpenDate","props","intl","formatMessage","id","Status","selectedRecord","event","onComboChange","userInfo","istimezoneshow","YES","ssitedate","currentTime","date","handleDateChange","TimeZoneList","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\n\r\nconst AddOpenDate = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"ntranscode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                    options={props.Status}\r\n                    value={props.selectedRecord[\"ntranscode\"] ? props.selectedRecord[\"ntranscode\"] : \"\"}\r\n                    defaultValue={props.selectedRecord[\"ntranscode\"]}\r\n                    isMulti={false}\r\n                    isSearchable={true}\r\n                    isMandatory={true}\r\n                    isDisabled={false}\r\n                    closeMenuOnSelect={true}\r\n                    alphabeticalSort={true}\r\n                    onChange={(event) => props.onComboChange(event, 'ntranscode', 1)}\r\n                />\r\n            </Col>\r\n\r\n            <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12}>\r\n                <DateTimePicker\r\n                    name={\"dopendate\"}\r\n                    label={props.intl.formatMessage({ id: \"IDS_OPENDATE\" })}\r\n                    className='form-control'\r\n                    selected={props.selectedRecord[\"dopendate\"]}\r\n                    dateFormat={props.userInfo.ssitedate}\r\n                    minDate={props.currentTime}\r\n                    isClearable={false}\r\n                    required={true}\r\n                    isMandatory={true}\r\n                    onChange={date => props.handleDateChange(\"dopendate\", date)}\r\n                    value={props.selectedRecord[\"dopendate\"]}\r\n                />\r\n            </Col>\r\n            {props.userInfo.istimezoneshow  === transactionStatus.YES &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzopendate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.TimeZoneList}\r\n                        // optionId=\"ntimezonecode\"\r\n                        // optionValue=\"stimezoneid\"\r\n                        value={props.selectedRecord[\"ntzopendate\"]}\r\n                        defaultValue={props.selectedRecord[\"ntzopendate\"]}\r\n                        isMandatory={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        // isClearable={false}                               \r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzopendate', 1)}\r\n                    />\r\n\r\n                </Col>\r\n            }\r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REASON\" })}\r\n                    name={\"sopenreason\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_OPENREASON\" })}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"sopenreason\"] : \"\"}\r\n                    rows=\"2\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddOpenDate);"]},"metadata":{},"sourceType":"module"}