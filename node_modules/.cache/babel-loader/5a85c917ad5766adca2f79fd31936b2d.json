{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{toast}from'react-toastify';import{injectIntl,FormattedMessage}from'react-intl';import{Row,Col,Card,Nav,FormGroup,FormLabel,Button}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faCheckCircle,faCopy,faEye,faPlay,faPlus,faSync}from'@fortawesome/free-solid-svg-icons';import{callService,crudMaster,updateStore,getTestInstrumentComboService,getTestInstrumentCategory,getInstrumentForInstCategory,getBatchCreationDetails,onActionFilterSubmit,getProductcategoryAction,createBatchmasterAction,getSamplesForGrid,getSelectedBatchCreationDetail,createSampleAction,deleteSampleAction,getActiveBatchCreationService,updateBatchcreationAction,deleteBatchCreation,batchInitiateAction,getBCRegistrationSubType,batchCompleteAction,validateEsignCredential,filterColumnData,getBatchhistoryAction,getBatchSection,viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType}from'../../actions';import{transactionStatus,designProperties,reportTypeEnum,reportCOAType,RegistrationSubType}from'../../components/Enumeration';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import{showEsign,getControlMap,getStartOfDay,getEndOfDay,formatInputDate,constructOptionList,rearrangeDateFormat,convertDateValuetoString}from'../../components/CommonScript';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import{ReadOnlyText,ContentPanel,MediaLabel}from'../../components/App.styles';import{ListWrapper}from'../../components/client-group.styles';import BreadcrumbComponent from'../../components/Breadcrumb.Component';import Esign from'../audittrail/Esign';import{ProductList}from'../product/product.styled';import CustomPopover from'../../components/customPopover';import BatchCreationFilter from'./BatchCreationFilter';import AddBatchCreation from'./AddBatchCreation';import AddBatchinitiate from'./AddBatchinitiate';import CustomTab from'../../components/custom-tabs/custom-tabs.component';import SampleTab from'./SampleTab';import BatchhistoryTab from'./BatchhistoryTab';import{process}from'@progress/kendo-data-query';import AddSample from'./AddSample';import ListMaster from'../../components/list-master/list-master.component';import ViewInfo from'./ViewInfo';import{Affix}from'rsuite';import AddMaterialIqc from'./AddMaterialIqc';import BatchIqcSampleTab from'./BatchIqcSampleTab';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var BatchCreation=/*#__PURE__*/function(_React$Component){_inherits(BatchCreation,_React$Component);var _super=_createSuper(BatchCreation);function BatchCreation(props){var _this;_classCallCheck(this,BatchCreation);_this=_super.call(this,props);_this.batchMandatoryFields=[{\"idsName\":\"IDS_SECTION\",\"dataField\":\"ssectionname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TEST\",\"dataField\":\"stestname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_INSTRUMENTCATEGORY\",\"dataField\":\"sinstrumentcatname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_INSTRUMENT\",\"dataField\":\"sinstrumentname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_PRODUCT\",\"dataField\":\"sproductname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"}];_this.completeMandatoryFields=[{\"idsName\":\"IDS_BATCHCOMPLETEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.initiateMandatoryFields=[{\"idsName\":\"IDS_BATCHINITIATEDATE\",//\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \n\"dataField\":\"dtransactiondate\",\"mandatoryLabel\":\"IDS_CHOOSE\",\"controlType\":\"selectbox\"}];_this.materialIqcMandatory=[{\"idsName\":\"IDS_MATERIALTYPE\",\"dataField\":\"smaterialtypename\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALCATEGORY\",\"dataField\":\"smaterialcatname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIAL\",\"dataField\":\"smaterialname\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_MATERIALINVENTORY\",\"dataField\":\"sinventoryid\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},//{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\n{\"idsName\":\"IDS_USEDQTY\",\"dataField\":\"susedquantity\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];_this.getSamples=function(selectedbatchmaster){var addSampleID=_this.state.controlMap.has(\"AddSamples\")&&_this.state.controlMap.get(\"AddSamples\").ncontrolcode;if(selectedbatchmaster.ntransactionstatus==transactionStatus.INITIATED||selectedbatchmaster.ntransactionstatus==transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else{_this.props.getSamplesForGrid(_this.props.Login.masterData.SelectedBatchmaster.ntestcode,_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this.props.Login.userInfo,_this.props.Login.masterData,_this.props.Login.masterData.defaultRegistrationType.nregtypecode,_this.state.nregsubtypecode.value,addSampleID);}};_this.getIqcSamples=function(SelectedBatchmaster){if(SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}else{var addcontrolcode=_this.state.controlMap.has(\"AddBatchCreation\")&&_this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var inputData={};inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData['naddcontrolCode']=addcontrolcode;// inputData['section']={\n//         nsectioncode: SelectedBatchmaster.nsectioncode\n// };\ninputData['nsectioncode']=SelectedBatchmaster.nsectioncode;inputData['userInfo']=_this.props.Login.userInfo;inputData['nbatchmastercode']=SelectedBatchmaster.nbatchmastercode;_this.props.getIqcSamples(inputData,_this.props.Login.masterData);}};_this.deleteRecord=function(inputData){if(_this.props.Login.masterData.SelectedBatchmaster==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster===transactionStatus.INITIATED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchsampleCode\",primaryKeyValue:inputData.selectedRecord.nbatchmastercode,fetchUrl:\"batchcreation/getSampleTabDetails\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var inputParam={classUrl:\"batchcreation\",methodUrl:\"Sample\",postParam:postParam,inputData:{Sample:inputData.selectedRecord,\"userInfo\":_this.props.Login.userInfo,nbatchsamplecode:inputData.selectedRecord.nbatchsamplecode,masterData:_this.props.Login.masterData,nbatchmastercode:inputData.selectedRecord.nbatchmastercode,userinfo:_this.props.Login.userInfo,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode},operation:inputData.operation,displayName:_this.props.Login.inputParam.displayName,dataState:_this.state.dataState};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,inputData.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:_this.props.intl.formatMessage({id:_this.props.Login.inputParam.displayName}),operation:inputData.operation}};_this.props.updateStore(updateInfo);}else{_this.props.deleteSampleAction(inputParam.inputData);}}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;if(screenName==\"IDS_BATCHHISTORY\"){var inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchhistoryAction(inputData,true);}if(screenName==\"IDS_BATCHIQCSAMPLE\"){var _inputData={masterData:_this.props.Login.masterData,userInfo:_this.props.Login.userInfo,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode};_this.props.getBatchIqcSampleAction(_inputData,true);}else{var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName,activeKey:screenName}};_this.props.updateStore(updateInfo);}};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Samples,event.dataState),sampleState:event.dataState});};_this.dataStateBatchHistoryChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.Batchhistory,event.dataState),histortState:event.dataState});};_this.dataStateBatchIqcChangeChange=function(event){_this.setState({dataResult:process(_this.props.Login.masterData.iqcsample,event.dataState),iqcsampleState:event.dataState});};_this.getApprovalVersion=function(data){var inputData=[];var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:data.item.nregtypecode,userInfo:_this.props.Login.userInfo,nregsubtypecode:data.item.nregsubtypecode,masterData:_this.props.Login.masterData,isneedapprovalfilter:true,defaultRegistrationSubType:data.item};_this.props.getBCApprovalConfigVersion(inputData);};_this.tabDetail=function(){var tabMap=new Map();tabMap.set(\"IDS_SAMPLE\",/*#__PURE__*/React.createElement(SampleTab,{sample:_this.props.Login.masterData.Samples||[],dataResult:process(_this.props.Login.masterData.Samples||[],_this.state.sampleState),dataState:_this.state.sampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,deleteRecord:_this.deleteRecord,extractedColumnList:_this.gridfillingColumn(_this.state.DynamicGridItem)||[],detailedFieldList:_this.gridfillingColumn(_this.state.DynamicGridMoreItem)||[],methodUrl:\"Samples\",getSamples:function getSamples(){return _this.getSamples(_this.props.Login.masterData.SelectedBatchmaster);}// getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\n//inputParam={this.props.Login.inputParam}\n,screenName:\"IDS_SAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));tabMap.set(\"IDS_BATCHHISTORY\",/*#__PURE__*/React.createElement(BatchhistoryTab,{batchhistory:_this.props.Login.masterData.Batchhistory||[],dataResult:process(_this.props.Login.masterData.Batchhistory||[],_this.state.histortState),dataState:_this.state.histortState,dataStateChange:_this.dataStateBatchHistoryChange,userInfo:_this.props.Login.userInfo,methodUrl:\"Batchhistory\",screenName:\"IDS_BATCHHISTORY\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));tabMap.set(\"IDS_BATCHIQCSAMPLE\",/*#__PURE__*/React.createElement(BatchIqcSampleTab,{iqcsample:_this.props.Login.masterData.iqcsample||[],dataResult:process(_this.props.Login.masterData.iqcsample||[],_this.state.iqcsampleState),dataState:_this.state.iqcsampleState,controlMap:_this.state.controlMap,dataStateChange:_this.dataStateBatchIqcChangeChange,userRoleControlRights:_this.state.userRoleControlRights,userInfo:_this.props.Login.userInfo,methodUrl:\"IqcSamples\",getIqcSamples:function getIqcSamples(){return _this.getIqcSamples(_this.props.Login.masterData.SelectedBatchmaster);},screenName:\"IDS_BATCHIQCSAMPLE\",nneedsubsample:_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample}));return tabMap;};_this.onFilterComboChange=function(event,fieldname){if(event!==null){var inputData=[];if(fieldname===\"fromDate\"){var dateObj=convertDateValuetoString(event,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:2,fromdate:dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\ntodate:dateObj.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData};_this.props.getBCApprovalConfigVersion(inputData);}if(fieldname===\"toDate\"){var _dateObj=convertDateValuetoString(_this.props.Login.masterData.fromDate,event,_this.props.Login.userInfo);inputData={nflag:2,fromdate:_dateObj.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_dateObj.toDate,//this.OnDateConverstion(event, fieldname),\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),defaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData};_this.props.getBCApprovalConfigVersion(inputData);}// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \n//                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \nif(fieldname===\"nsampletypecode\"){var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:2,nsampletypecode:parseInt(event.value),fromDate:obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nuserinfo:_this.props.Login.userInfo,defaultSampleType:event.item,masterData:_this.props.Login.masterData};_this.props.getBCRegistrationType(inputData);}else if(fieldname===\"nregtypecode\"){var _obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData={nflag:3,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),fromDate:_obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\ntoDate:_obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\nnregtypecode:parseInt(event.value),userInfo:_this.props.Login.userInfo,defaultRegistrationType:event.item,defaultSampleType:_this.props.Login.masterData.defaultSampleType};_this.props.getBCRegistrationSubType(inputData,_this.props.Login.masterData);}else if(fieldname===\"nregsubtypecode\"){var nregsubtypecode=_this.state;//this.setState({ nregsubtypecode:event });\n_this.getApprovalVersion(event);}else if(fieldname==='ndesigntemplatemappingcode'){var _obj2=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);var inputParamData={nflag:3,fromdate:_obj2.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj2.toDate,nsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:_this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,userinfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,//defaultFilterStatus: event.item,\ndefaultRegistrationSubType:_this.props.Login.masterData.defaultRegistrationSubType,ntranscode:String(_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),nneedsubsample:_this.props.Login.masterData.nneedsubsample||4,// stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\n//nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\nndesigntemplatemappingcode:event.value,DesignTemplateMappingValue:event.item};//this.props.getREFilterTestData(inputParamData)\n_this.props.getBCFilterTemplate(inputParamData);}else if(fieldname===\"version\"){// let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\n//     this.props.Login.masterData.toDate, this.props.Login.userInfo);\n// inputData = {\n//     nflag: 4,\n//     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\n//     todate: obj.toDate,//this.props.Login.masterData.toDate,\n//     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\n//     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\n//     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\n//     napprovalversioncode: event.value,\n//     userinfo: this.props.Login.userInfo,\n//     defaultApprovalConfigVersion: event.item,\n//     masterData: this.props.Login.masterData,\n//     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\n// }\n// this.props.getBCJobStatus(inputData)\nvar ApprovalVersionValue=_this.state;_this.setState({ApprovalVersionValue:event});}else if(fieldname===\"jobstatus\"){var _obj3=convertDateValuetoString(_this.props.Login.masterData.fromDate,_this.props.Login.masterData.toDate,_this.props.Login.userInfo);inputData={nflag:5,fromdate:_obj3.fromDate,//this.props.Login.masterData.fromDate,\ntodate:_obj3.toDate,//this.props.Login.masterData.toDate,\nnsampletypecode:parseInt(_this.props.Login.masterData.defaultSampleType.nsampletypecode),nregtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationType.nregtypecode),nregsubtypecode:parseInt(_this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),napprovalversioncode:parseInt(_this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),njobstatuscode:event.value,userinfo:_this.props.Login.userInfo,defaultjobstatus:event.item,masterData:_this.props.Login.masterData};_this.props.getBCFilterStatus(inputData);}else if(fieldname===\"filter\"){var FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else if(fieldname===\"test\"){var _FilterStatusValue=_this.state;_this.setState({FilterStatusValue:event});}else{var selectedRecord=_this.state;_this.setState({selectedRecord:event});}}};_this.handleFilterDateChange=function(dateValue,dateName){var selectedFilter=_this.state.selectedFilter;if(dateValue===null){dateValue=new Date();}selectedFilter[dateName]=dateValue;_this.setState({selectedFilter:selectedFilter});};_this.headerSelectionChange=function(event){var checked=event.syntheticEvent.target.checked;var sampleList=_this.state.samples||[];var addedSamplesList=[];if(checked){var data=event.dataItems.map(function(item){if(sampleList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})===-1){sampleList.push(_objectSpread(_objectSpread({},item),{},{selected:false}));item.selected=checked;var newItem=JSON.parse(JSON.stringify(item));newItem.selected=false;newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);return item;}else{var olditem=JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(function(x){return x.ntransactiontestcode===item.ntransactiontestcode;})]));olditem.selected=checked;var _newItem=JSON.parse(JSON.stringify(olditem));_newItem.selected=false;_newItem[\"jsondata\"]={};_newItem[\"jsonuidata\"]={};_newItem[\"jsondata\"]['samplelist']=olditem;_newItem[\"jsonuidata\"]['samplelist']=olditem;addedSamplesList.push(_newItem);return olditem;}});_this.setState({samples:data,addedSamplesList:addedSamplesList,sampleList:sampleList,addSelectAll:checked,deleteSelectAll:false});}else{// let sampleListData = this.state.sampleList || [];\n// let deletedListdData = this.state.sampleList || [];\nvar sampleListData=_this.state.samples||[];var deletedListdData=_this.state.samples||[];var _data=_this.state.samples.map(function(item){sampleListData=sampleListData.filter(function(item1){return item1.npreregno!==item.npreregno;});deletedListdData=deletedListdData.filter(function(item1){return item1.npreregno!==item.npreregno;});item.selected=checked;return item;});// console.log(\"data:\",data1, data2);\n_this.setState({samples:_data,addedSamplesList:sampleListData,deletedList:deletedListdData,addSelectAll:checked,deleteSelectAll:false});}// const data = this.state.addComponentDataList.map(item=>{\n//     if (checked){\n//         addedComponentList.push({...item, selected:false});\n//     }\n//     else{\n//         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\n//         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \n//     }  \n//     item.selected = checked;\n//     return item;\n// });\n};_this.selectionChange=function(event){//let addedSamplesList=this.state.addedSamplesList || [];\nvar addedSamplesList=[];var samples=_this.state.samples||[];var samplesList=_this.state.samples.map(function(item){if(item.ntransactiontestcode===event.dataItem.ntransactiontestcode){item.selected=!event.dataItem.selected;if(item.selected){var newItem=JSON.parse(JSON.stringify(item));newItem.selected=false;newItem[\"jsondata\"]={};newItem[\"jsonuidata\"]={};newItem[\"jsondata\"]['samplelist']=item;newItem[\"jsonuidata\"]['samplelist']=item;addedSamplesList.push(newItem);}else{// if(addedSamplesList.length === 0){\n//     addedSamplesList = lstsamples.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode)\n//   }else{\n_this.state.samples.map(function(item1,index){if(item1.ntransactiontestcode==event.dataItem.ntransactiontestcode){if(_this.state.samples.length==1){addedSamplesList=[];}else{var _newItem2=JSON.parse(JSON.stringify(item1));_newItem2.selected=false;_newItem2[\"jsondata\"]={};_newItem2[\"jsonuidata\"]={};_newItem2[\"jsondata\"]['samplelist']=item1;_newItem2[\"jsonuidata\"]['samplelist']=item1;addedSamplesList.push(_newItem2);}}});}}return item;});///samplesList = addedSamplesList;\n_this.setState({samplesList:samplesList,addedSamplesList:addedSamplesList,samples:samples,initialList:addedSamplesList,addSelectAll:_this.valiateCheckAll(samplesList),deleteSelectAll:_this.valiateCheckAll(samplesList)});};_this.handlePageChange=function(e){_this.setState({skip:e.skip,take:e.take});};_this.ConfirmDelete=function(selectedBatch,deleteId,operation){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.deleteBatchCreation(selectedBatch,deleteId,operation);});};_this.completePopUpStartActions=function(completeId){// if(this.props.Login.masterData.nneedtestinitiate === true){\nif(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}//    }else \nelse if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}else{var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,completeId:completeId,masterData:_this.props.Login.masterData,// screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\noperation:\"complete\"}};_this.props.updateStore(updateInfo);}};_this.testPopUpStartActions=function(testStartId){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED||_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}else{var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:true,testStartId:testStartId,masterData:_this.props.Login.masterData,operation:\"initiate\"}};_this.props.updateStore(updateInfo);}};_this.testStartActions=function(selectedmaster,testStartId){if(selectedmaster.ntransactionstatus==transactionStatus.INITIATED||selectedmaster.ntransactionstatus===transactionStatus.COMPLETED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else if(_this.props.Login.masterData.Samples.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLEFORINITIATE\"}));}else if(_this.props.Login.masterData.iqcsample.length==0){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTIQCSAMPLEFORINITIATE\"}));}else{var inputData={};var jsonuidata=[];var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/initiateBatchcreation\",isSingleGet:true,fecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");inputData[\"batchsample\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"nneedmyjob\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedmyjob;inputData[\"nneedjoballocation\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedjoballocation;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"napproveconfversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigversioncode:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;inputData[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"],false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;inputData[\"testStartId\"]=testStartId;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"npreregno\"]=_this.props.Login.masterData.iqcsample.map(function(sampleiqc){return sampleiqc.npreregno;}).join(\",\");var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"initiate\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,testStartId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchInitiateAction(inputData,_this.props.Login.masterData,_this.confirmMessage);}}};_this.batchSaveIQCActions=function(selectedmaster){if(parseFloat(_this.state.selectedRecord.susedquantity)<=parseFloat(_this.props.Login.masterData.inventoryTransaction.savailablequatity)){var userInfo={};var inputRegistrationData={};var inputMaterialInventoryData={};var inputBatchData={};var map={};var batchCreationSampleData={};var batchCreationTestData={};var batchCreationSampleArray=[];var batchCreationTestArray=[];var samplecombinationuniqueArray=[];var inputMaterialInventoryArrData=[];batchCreationSampleData[\"nspecsampletypecode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.nallottedspeccode:transactionStatus.NA;batchCreationSampleData[\"ncomponentcode\"]=_this.props.Login.masterData.SelectedBatchmaster.nproductcode;batchCreationSampleData[\"slno\"]=1;batchCreationSampleArray.push(batchCreationSampleData);inputRegistrationData[\"nallottedspeccode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.nallottedspeccode:transactionStatus.NA;inputRegistrationData[\"ntemplatemanipulationcode\"]=transactionStatus.NA;inputRegistrationData[\"nregsubtypeversioncode\"]=_this.props.Login.masterData.nregsubtypeversioncode;inputRegistrationData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode;inputRegistrationData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputRegistrationData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputRegistrationData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputRegistrationData[\"nproductcatcode\"]=_this.props.Login.masterData.SelectedBatchmaster.nproductcatcode?_this.props.Login.masterData.SelectedBatchmaster.nproductcatcode:transactionStatus.NA;inputRegistrationData[\"nproductcode\"]=transactionStatus.NA;inputRegistrationData[\"ninstrumentcatcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ninstrumentcatcode;inputRegistrationData[\"ninstrumentcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ninstrumentcode;inputRegistrationData[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;inputRegistrationData[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;inputRegistrationData[\"jsondata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks};inputRegistrationData[\"jsonuidata\"]={nmaterialcode:_this.state.selectedMaterial.value,nmaterialcatcode:_this.state.selectedMaterialCategory.value,sinventoryid:_this.state.selectedMaterialInventory.item.sinventoryid,nmaterialinventorycode:_this.state.selectedMaterialInventory.item.nmaterialinventorycode,smaterial:_this.state.selectedMaterial.item.smaterialname,smaterialtype:_this.state.selectedMaterialType.item.smaterialtypename,nmaterialtypecode:_this.state.selectedMaterialType.value,susedquantity:_this.state.selectedRecord.susedquantity,sunitname:_this.props.Login.masterData.inventoryTransaction.sunitname,savailablequatity:_this.props.Login.masterData.inventoryTransaction.savailablequatity,//materialtype:this.state.selectedMaterialType.label,\nsremarks:_this.state.selectedRecord.sremarks};// inputMaterialInventoryData = {\n//     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\n// }\n//  inputMaterialInventoryData = {\n//         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\n//         jsondata : {\n//             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         jsonuidata : {\n//             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\n//             nqtyused: this.state.selectedRecord.susedquantity\n//         },\n//         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\n//  };\ninputMaterialInventoryData[\"nmaterialinventorycode\"]=_this.state.selectedMaterialInventory.item.nmaterialinventorycode;inputMaterialInventoryData[\"jsondata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsondata']),{},{nqtyused:_this.state.selectedRecord.susedquantity});//inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\ninputMaterialInventoryData[\"nsectioncode\"]=_this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];inputMaterialInventoryData[\"jsonuidata\"]=_objectSpread(_objectSpread({},_this.props.Login.masterData.selectedInventoryUnit['jsonuidata']),{},{nqtyused:_this.state.selectedRecord.susedquantity});//inputMaterialInventoryArrData.push(inputMaterialInventoryData);\nbatchCreationTestData[\"ntestgrouptestcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode:transactionStatus.NA;//     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\nbatchCreationTestData[\"ntestcode\"]=_this.props.Login.masterData.SelectedBatchmaster.ntestcode;batchCreationTestData[\"nsectioncode\"]=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;batchCreationTestData[\"nmethodcode\"]=_this.props.Login.masterData.selectedTestDetails?_this.props.Login.masterData.selectedTestDetails.nmethodcode:transactionStatus.NA;//   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\nbatchCreationTestData[\"nrepeatcountno\"]=1;//--\n//    batchCreationTestData[\"ntestretestno\"]=0;\nbatchCreationTestData[\"nparametercount\"]=1;//--\nbatchCreationTestData[\"slno\"]=1;//--\nbatchCreationTestArray.push(batchCreationTestData);map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;map[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;userInfo=_this.props.Login.userInfo;map[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;map[\"napproveconfversioncode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;map[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;map[\"nneedtestinitiate\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedtestinitiate;map[\"nmaterialcatcode\"]=_this.state.selectedMaterialCategory?_this.state.selectedMaterialCategory.value:transactionStatus.NA;map[\"nmaterialcode\"]=_this.state.selectedMaterial?_this.state.selectedMaterial.value:transactionStatus.NA;map[\"nmaterialtypecode\"]=_this.state.selectedMaterialType?_this.state.selectedMaterialType.value:transactionStatus.NA;inputBatchData=_this.props.Login.masterData.SelectedBatchmaster;map['Registration']=inputRegistrationData;map['Batchsampleiqc']=inputBatchData;map['RegistrationSample']=batchCreationSampleArray;map['testgrouptest']=batchCreationTestArray;map['userInfo']=userInfo;map['samplecombinationunique']=samplecombinationuniqueArray;map['inputMaterialInventoryArrData']=inputMaterialInventoryData;var inputParam={inputData:map,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHIQCSAVE\",operation:\"createiqc\"};_this.props.batchSaveIQCActions(inputParam.inputData,_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\"}));}};_this.batchCompleteActions=function(selectedmaster,completeId){if(_this.props.Login.masterData.nneedtestinitiate===true){if(selectedmaster.ntransactionstatus==transactionStatus.COMPLETED||selectedmaster.ntransactionstatus==transactionStatus.DRAFT){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTINITIATEDBATCH\"}));}}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedmaster.nbatchmastercode,fetchUrl:\"batchcreation/completeBatchcreation\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);var jsondata=_this.props.Login.masterData.Samples.map(function(item){return{jsonuidata:item};});inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData[\"nbatchmastercode\"]=selectedmaster.nbatchmastercode;inputData[\"ntransactiontestcode\"]=_this.props.Login.masterData.Samples.map(function(sample){return sample.ntransactiontestcode;}).join(\",\");inputData[\"samples\"]=jsondata;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"sbatcharno\"]=selectedmaster.sbatcharno;inputData[\"nneedsubsample\"]=_this.state.nregsubtypecode&&_this.state.nregsubtypecode.item.nneedsubsample;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;inputData[\"Batchhistory\"]={dtransactiondate:formatInputDate(_this.state.selectedRecord[\"dtransactiondate\"],false),scomments:_this.state.selectedRecord&&_this.state.selectedRecord.scomments};inputData[\"completeId\"]=completeId;inputData[\"nneedtestinitiate\"]=_this.props.Login.masterData&&_this.props.Login.masterData.nneedtestinitiate;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;var inputParam={postParam:postParam,inputData:inputData,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",operation:\"complete\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,completeId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.batchCompleteAction(inputData,_this.props.Login.masterData);}}};_this.closeAlert=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showConfirmAlert:false,loading:false}};_this.props.updateStore(updateInfo);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"||_this.props.Login.operation===\"complete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};var inputData={};selectedRecord[fieldName]=comboData.item;if(fieldName===\"sproductname\"){selectedRecord[\"nproductcode\"]=comboData.value;_this.setState({selectedProduct:comboData});}else if(fieldName===\"ssectionname\"){inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData['naddcontrolCode']=_this.props.Login.naddcontrolCode;inputData['section']=selectedRecord.ssectionname;inputData['userInfo']=_this.props.Login.userInfo;_this.props.getTestInstrumentComboService(inputData,_this.props.Login.masterData);// this.setState({ selectedSection:comboData });\n}else if(fieldName===\"stestname\"){if(_this.props.Login.operation===\"update\"){selectedRecord[\"nprevioustestcode\"]=_this.state.selectedTestSynonym.value;}selectedRecord[\"ntestcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;selectedRecord['naddcontrolCode']=_this.props.Login.naddcontrolCode;selectedRecord[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;selectedRecord[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;_this.props.getTestInstrumentCategory(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"sinstrumentcatname\"){selectedRecord[\"ninstrumentcatcode\"]=comboData.value;selectedRecord[\"ntestcode\"]=_this.state.selectedTestSynonym.value;_this.props.getInstrumentForInstCategory(selectedRecord,_this.props.Login.masterData);}else if(fieldName===\"smaterialcatname\"){selectedRecord[\"nmaterialcatcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;_this.setState({selectedMaterialCategory:comboData});_this.props.getMaterialBasedOnMaterialCategory(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"smaterialname\"){selectedRecord[\"nmaterialcode\"]=comboData.value;selectedRecord['userInfo']=_this.props.Login.userInfo;selectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;_this.setState({selectedMaterial:comboData});_this.props.getMaterialInventoryBasedOnMaterial(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else if(fieldName===\"sinventoryid\"){selectedRecord[\"nmaterialcode\"]=comboData.value;selectedRecord[\"materialInvCode\"]=comboData.item.nmaterialinventorycode;selectedRecord['userInfo']=_this.props.Login.userInfo;_this.setState({selectedMaterialInventory:comboData});// if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\n//     selectedRecord['nsectioncode']=transactionStatus.NA;\n// }else{\nselectedRecord['nsectioncode']=_this.props.Login.masterData.SelectedBatchmaster.nsectioncode;//}\n_this.props.getMaterialAvailQtyBasedOnInv(selectedRecord,_this.props.Login.masterData,_this.state.selectedMaterialCategory);}else{_this.setState({selectedInstrument:comboData});}};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){if(event.target.name===\"ntransactionstatus\")selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.ACTIVE:transactionStatus.DEACTIVE;else selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onMultiColumnValue=function(value,key,flag,label,keys){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});if(flag){keys.map(function(objkey,index){return selectedRecord[objkey]={\"label\":value[0][label[index]],\"value\":value[0][objkey]};});}}else{key.forEach(function(objarray){selectedRecord[objarray]=\"\";});keys.map(function(objkey,index){return selectedRecord[objkey]=\"\";});}_this.props.getBatchManufacturerComboChange(selectedRecord,_this.props.Login.userInfo);};_this.onMultiColumnMAHChange=function(value,key){var selectedRecord=_this.state.selectedRecord||{};if(value.length>0){key.forEach(function(objarray){selectedRecord[objarray]=value[0][objarray];});}_this.setState({selectedRecord:selectedRecord});};_this.clearComponentInput=function(){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[\"nproductcode\"]=undefined;selectedRecord[\"ncomponentcode\"]=undefined;selectedRecord[\"smanuflotno\"]=\"\";selectedRecord[\"dateprompt\"]=transactionStatus.NO;selectedRecord[\"transdatefrom\"]=_this.props.Login.componentDefaultSearchDate;selectedRecord[\"transdateto\"]=_this.props.Login.componentDefaultSearchDate;_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord={};if(dateValue===null){dateValue=new Date();}selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onDropImage=function(attachedFiles,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=attachedFiles;_this.setState({selectedRecord:selectedRecord,actionType:\"new\"});};_this.saveSample=function(addedsamplelist){if(addedsamplelist===undefined){toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}else if(addedsamplelist.length>0){var sampleArray=[];addedsamplelist.map(function(item){return sampleArray.push({npreregno:item.npreregno,ntransactionsamplecode:item.ntransactionsamplecode,ntransactiontestcode:item.ntransactiontestcode,nbatchmastercode:_this.props.Login.masterData.SelectedBatchmaster?_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode:transactionStatus.NA,jsonuidata:{samplelist:item.jsonuidata.samplelist},jsondata:{samplelist:item.jsondata.samplelist}});});var nbatchmastercode=_this.props.Login.masterData.SelectedBatchmaster&&_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;// batchSample = {\n//     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\n//     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\n//     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\n//     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\n//     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\n//     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\n// }\n//jsondata : \nvar inputParam={inputData:{batchSample:nbatchmastercode,sampleArray:sampleArray,userInfo:_this.props.Login.userInfo,masterData:_this.props.Login.masterData,ndesigntemplatemappingcode:_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA}};_this.props.createSampleAction(inputParam.inputData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTSAMPLESTOSUBMIT\"}));}};_this.onSaveClick=function(saveType,formRef){if(_this.props.Login.operation===\"createSample\"){_this.saveSample(_this.state.addedSamplesList);}else if(_this.props.Login.operation===\"initiate\"){_this.testStartActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.testStartId);}else if(_this.props.Login.operation===\"complete\"){_this.batchCompleteActions(_this.props.Login.masterData.SelectedBatchmaster,_this.props.Login.completeId);}else if(_this.props.Login.operation===\"createiqcsample\"){_this.batchSaveIQCActions(_this.props.Login.masterData.SelectedBatchmaster);}else{var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);if(_this.props.Login.operation===\"create\"){inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;}inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"nprevioustestcode\"]=_this.state.selectedRecord.nprevioustestcode!=undefined?_this.state.selectedRecord.nprevioustestcode:_this.state.selectedTestSynonym.value;inputData[\"ntestcode\"]=_this.state.selectedTestSynonym?_this.state.selectedTestSynonym.value:transactionStatus.NA;inputData[\"nsectioncode\"]=_this.state.selectedSection?_this.state.selectedSection.item.nsectioncode:transactionStatus.NA;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType.nsampletypecode;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType.nregtypecode;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.value:transactionStatus.NA;inputData[\"ninstrumentcatcode\"]=_this.state.selectedInstCategory?_this.state.selectedInstCategory.value:transactionStatus.NA;inputData[\"ninstrumentcode\"]=_this.state.selectedInstrument?_this.state.selectedInstrument.value:transactionStatus.NA;inputData[\"nproductcode\"]=_this.state.selectedProduct?_this.state.selectedProduct.value:transactionStatus.NA;inputData[\"ntransactionstatus\"]=transactionStatus.DRAFT;inputData[\"sbatcharno\"]='-';inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode?_this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA;var postParam=undefined;postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",unchangeList:[\"FromDate\",\"ToDate\"],isSingleGet:true,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\"};var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,postParam:postParam,searchRef:_this.searchRef,operation:_this.props.Login.operation,saveType:saveType,formRef:formRef};if(_this.props.Login.operation===\"create\"){_this.props.createBatchmasterAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}else{inputData[\"nbatchmastercode\"]=_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.editId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:_this.props.Login.masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:inputParam.operation}};_this.props.updateStore(updateInfo);}else{_this.props.updateBatchcreationAction(inputParam[\"inputData\"],_this.props.Login.masterData,inputParam[\"operation\"]);}}}// const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n// if (esignNeeded) {\n//     const updateInfo = {\n//         typeName: DEFAULT_RETURN,\n//         data: {\n//             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\n//             openModal: true, screenName: \"IDS_BATCHCREATION\",\n//             operation: this.props.Login.operation\n//         }\n//     }\n//     this.props.updateStore(updateInfo);\n// }\n// else {\n//     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\n//     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\n// }\n};_this.deleteBatchCreation=function(selectedBatch,deleteId,operation){if(selectedBatch.stransdisplaystatus===transactionStatus.COMPLETED||selectedBatch.stransdisplaystatus===transactionStatus.INITIATED){toast.warn(_this.props.intl.formatMessage({id:\"IDS_BATCHALREADYINITIATEDCOMPLETED\"}));}else{var inputData={};var masterData=_this.props.Login.masterData;var postParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",primaryKeyValue:selectedBatch.nbatchmastercode,fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",isSingleGet:true,//task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\nfecthInputObject:{userinfo:_this.props.Login.userInfo}};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"userinfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData[\"nbatchmastercode\"]=selectedBatch.nbatchmastercode;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;var inputParam={postParam:postParam,inputData:inputData,operation:operation,classUrl:\"batchcreation\",methodUrl:\"Batchcreation\",displayName:\"IDS_BATCHCREATION\"};if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteId)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},openModal:true,screenName:\"IDS_BATCHCREATION\",operation:operation}};_this.props.updateStore(updateInfo);}else{_this.props.deleteBatchCreation(inputParam[\"inputData\"],masterData);}}};_this.fetchEditData=function(editParam){if(_this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.DRAFT){_this.props.getActiveBatchCreationService(editParam,_this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this.props.Login.masterData.SelectedBatchmaster.ntestcode);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTDRAFTBATCH\"}));}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"]}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onFilterSubmit=function(){if(_this.props.Login.masterData.defaultRegistrationType!=undefined&&_this.state.FilterStatusValue.item!=undefined&&_this.state.nregsubtypecode.item!=undefined&&_this.state.ApprovalVersionValue.item!=undefined){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.defaultSampleType?_this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.defaultRegistrationType?_this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA;inputData[\"ntranscode\"]=_this.state.FilterStatusValue?_this.state.FilterStatusValue.value:transactionStatus.DRAFT;inputData[\"napprovalconfigcode\"]=_this.state.ApprovalVersionValue?_this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;inputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA;inputData[\"defaultFilterStatus\"]=_this.state.FilterStatusValue&&_this.state.FilterStatusValue.item||transactionStatus.NA;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.reloadData=function(isFilterSubmit){_this.searchRef.current.value=\"\";// let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\nif(_this.props.Login.masterData.realRegTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegTypeValue!==null&&_this.props.Login.masterData.realRegSubTypeValue!==transactionStatus.NA||_this.props.Login.masterData.realRegSubTypeValue!==null&&_this.props.Login.masterData.realApproveConfigVersion!==transactionStatus.NA||_this.props.Login.masterData.realApproveConfigVersion!==null&&_this.props.Login.masterData.defaultFilterStatus!==transactionStatus.NA||_this.props.Login.masterData.defaultFilterStatus!==null){var inputData={};var obj=convertDateValuetoString(_this.state.selectedFilter.fromDate||_this.props.Login.masterData.realFromDate,_this.state.selectedFilter.toDate||_this.props.Login.masterData.realToDate,_this.props.Login.userInfo);inputData[\"fromDate\"]=obj.fromDate;inputData[\"toDate\"]=obj.toDate;inputData[\"userInfo\"]=_this.props.Login.userInfo;inputData[\"nsampletypecode\"]=_this.props.Login.masterData.realSampleTypeValue&&_this.props.Login.masterData.realSampleTypeValue.nsampletypecode?_this.props.Login.masterData.realSampleTypeValue.nsampletypecode:transactionStatus.NA;inputData[\"nregtypecode\"]=_this.props.Login.masterData.realRegTypeValue&&_this.props.Login.masterData.realRegTypeValue.nregtypecode?_this.props.Login.masterData.realRegTypeValue.nregtypecode:transactionStatus.NA;inputData[\"nregsubtypecode\"]=_this.props.Login.masterData.realRegSubTypeValue&&_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode?_this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode:transactionStatus.NA;inputData[\"defaultSampleType\"]=_this.props.Login.masterData.defaultSampleType;inputData[\"defaultRegistrationType\"]=_this.props.Login.masterData.defaultRegistrationType;inputData[\"defaultRegistrationSubType\"]=_this.state.nregsubtypecode?_this.state.nregsubtypecode.item:transactionStatus.NA;inputData[\"ntranscode\"]=_this.props.Login.masterData.defaultFilterStatus&&_this.props.Login.masterData.defaultFilterStatus.ntransactionstatus||transactionStatus.NA;inputData[\"napprovalconfigcode\"]=_this.props.Login.masterData.realApproveConfigVersion&&_this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode||transactionStatus.NA;inputData[\"realApproveConfigVersion\"]=_this.state.ApprovalVersionValue&&_this.state.ApprovalVersionValue.item||transactionStatus.NA;//inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\ninputData[\"defaultFilterStatus\"]=_this.props.Login.masterData.defaultFilterStatus&&_this.props.Login.masterData.defaultFilterStatus||transactionStatus.NA;inputData[\"ndesigntemplatemappingcode\"]=_this.props.Login.masterData.ndesigntemplatemappingcode||transactionStatus.NA;var inputParam={classUrl:\"batchcreation\",methodUrl:\"Batchmaster\",displayName:\"IDS_BATCHCREATION\",inputData:inputData,searchRef:_this.searchRef};_this.props.onActionFilterSubmit(inputParam[\"inputData\"],_this.props.Login.masterData);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTALLVALUESINFILTER\"}));}};_this.onClickReport=function(selectedRecord,flag,ncontrolcode){var reportParam={classUrl:\"certificategeneration\",methodUrl:\"reportGeneration\",screenName:\"CertificateGeneration\",operation:\"previewReport\",primaryKeyField:\"nreleasebatchcode\",inputParam:_this.props.Login.inputParam,userInfo:_this.props.Login.userInfo,ncontrolCode:-1,inputData:{sprimarykeyname:'nreleasebatchcode',nprimarykey:selectedRecord.nreleasebatchcode,nreleasebatchcode:selectedRecord.nreleasebatchcode,ncertificatetypecode:selectedRecord.ndecision===transactionStatus.PASS&&flag===1?selectedRecord.ncertificatetypecode:-1,ndecisionstatus:selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\nnreporttypecode:flag===2?reportTypeEnum.SCREENWISE:reportTypeEnum.BATCH,ncontrolcode:ncontrolcode,ncoareporttypecode:flag===2?-1:reportCOAType.BATCHPREVIEW,userinfo:_this.props.Login.userInfo,nflag:flag,skipbatchvalidation:true}};_this.props.onClickReport(reportParam);};_this.reportMethod=function(value){if(value.method===1){_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,2,value.controlId);}else{_this.onClickReport(_this.props.Login.masterData.SelectedBatchCreation,1,value.controlId);}};var sampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var histortState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};var iqcsampleState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={skip:0,take:_this.props.Login.settings&&_this.props.Login.settings[3],userRoleControlRights:[],controlMap:new Map(),selectedFilter:{},sampleState:sampleState,histortState:histortState,iqcsampleState:iqcsampleState,//confirmmsg:this.ConfirmMessage.bind(this),\ndataState:{skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5}};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.searchFieldList=[\"stestname\",\"sinstrumentcatname\",\"sinstrumentname\",\"sproductname\",\"smanufname\",\"stransactiondate\",\"username\",\"stransactionstatus\",\"sdecision\",\"sbatcharno\",\"stransdisplaystatus\"];_this.sampleMandatoryFields=[];_this.copyMandatoryFields=[];return _this;}_createClass(BatchCreation,[{key:\"gridfillingColumn\",value:function gridfillingColumn(data){var _this2=this;var temparray=data&&data.map(function(option){return{\"idsName\":option[designProperties.LABEL][_this2.props.Login.userInfo.slanguagetypecode],\"dataField\":option[designProperties.VALUE]==\"null\"?'-':option[designProperties.VALUE],\"width\":\"150px\",\"columnSize\":\"4\"};});return temparray;}},{key:\"valiateCheckAll\",value:// headerSelectionChange = (event) => {\n//     const checked = event.syntheticEvent.target.checked;\n//     let addedComponentList = this.state.addedComponentList || [];\n//     if (checked) {\n//         const data = this.state.addComponentDataList.map(item => {\n//             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\n//                 addedComponentList.push({ ...item, selected: false });\n//                 item.selected = checked;\n//                 return item;\n//             } else {\n//                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\n//                 olditem.selected = checked;\n//                 return olditem;\n//             }\n//         });\n//         this.setState({\n//             addComponentDataList: data, addedComponentList,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n//     else {\n//         let addedComponentData = this.state.addedComponentList || [];\n//         let deletedListdData = this.state.deletedList || [];\n//         const data = this.state.addComponentDataList.map(item => {\n//             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\n//             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\n//             item.selected = checked;\n//             return item;\n//         });\n//         // console.log(\"data:\",data1, data2);\n//         this.setState({\n//             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\n//             addSelectAll: checked, deleteSelectAll: false\n//         });\n//     }\n// }\nfunction valiateCheckAll(data){var selectAll=true;// let checkRepeatComponent;\n//  let addedComponentList = this.state.addedComponentList || [];\nif(data&&data.length>0){data.forEach(function(dataItem){if(dataItem.selected){if(dataItem.selected===false){selectAll=false;}}else{selectAll=false;// checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\n// if(checkRepeatComponent.length>0){\n//     selectAll = true;\n// }else{\n//     selectAll = false;\n// }\n}});}else{//if (gridType === \"originalgrid\"){\nselectAll=false;// }\n}return selectAll;}},{key:\"render\",value:function render(){var _this3=this;var reportActionList=[];var getBatch={screenName:\"IDS_BATCHCREATION\",operation:\"get\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,methodUrl:\"Batchcreation\",keyName:\"batchcreation\"};this.fromDate=this.state.selectedFilter[\"fromdate\"]&&this.state.selectedFilter[\"fromdate\"]||this.props.Login.masterData&&this.props.Login.masterData.realFromDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realFromDate):undefined;this.toDate=this.state.selectedFilter[\"todate\"]&&this.state.selectedFilter[\"todate\"]||this.props.Login.masterData&&this.props.Login.masterData.realToDate?rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realToDate):undefined;var addId=this.state.controlMap.has(\"AddBatchCreation\")&&this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;var editId=this.state.controlMap.has(\"EditBatchcreation\")&&this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;var deleteId=this.state.controlMap.has(\"DeleteBatchcreation\")&&this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;var testStartId=this.state.controlMap.has(\"BatchInitiate\")&&this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;var completeId=this.state.controlMap.has(\"BatchComplete\")&&this.state.controlMap.get(\"BatchComplete\").ncontrolcode;var addParam={screenName:\"IDS_BATCHCREATION\",primaryeyField:\"nreleasebatchcode\",primaryKeyValue:undefined,operation:\"create\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:addId,nneedtestinitiate:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedtestinitiate,masterData:this.props.Login.masterData,fromdate:this.props.Login.masterData.fromDate,todate:this.props.Login.masterData.toDate,napprovalversioncode:this.props.Login.masterData.defaultApprovalConfigVersion&&this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,nregtypecode:this.props.Login.masterData.defaultRegistrationType&&this.props.Login.masterData.defaultRegistrationType.nregtypecode,nregsubtypecode:this.props.Login.masterData.defaultRegistrationSubType&&this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,ntranscode:this.props.Login.masterData.defaultFilterStatus&&this.props.Login.masterData.defaultFilterStatus.ntransactionstatus};var viewInfoFields=[{\"fieldName\":\"sbatcharno\",\"label\":\"IDS_BATCHARNO\"},{\"fieldName\":\"ssectionname\",\"label\":\"IDS_SECTION\"},{\"fieldName\":\"stestname\",\"label\":\"IDS_TESTNAME\"},{\"fieldName\":\"sinstrumentcatname\",\"label\":\"IDS_INSTRUMENTCATEGORY\"},{\"fieldName\":\"sinstrumentname\",\"label\":\"IDS_INSTRUMENTNAME\"},{\"fieldName\":\"sproductname\",\"label\":\"IDS_SAMPLETYPE\"},{\"fieldName\":\"stransdisplaystatus\",\"label\":\"IDS_STATUS\"},{\"fieldName\":\"username\",\"label\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.INITIATED?\"IDS_BATCHINITIATEDBY\":this.props.Login.masterData.SelectedBatchmaster&&this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus===transactionStatus.COMPLETED?\"IDS_BATCHCOMPLETEDBY\":\"IDS_BATCHCREATEDBY\"}];var stransactionstatuscode=this.props.Login.masterData.SelectedFilterStatus?String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus):null;if(this.state.selectedRecord&&this.state.selectedRecord[\"nfiltertransstatus\"]!==undefined){stransactionstatuscode=this.state.selectedRecord[\"nfiltertransstatus\"].value===String(0)?null:String(this.state.selectedRecord[\"nfiltertransstatus\"].value);}var obj=convertDateValuetoString(this.props.Login.masterData.realFromDate,this.props.Login.masterData.realToDate,this.props.Login.userInfo);var editParam={screenName:\"IDS_BATCHCREATION\",operation:\"update\",primaryKeyField:\"nbatchmastercode\",inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,ncontrolCode:editId,masterData:this.props.Login.masterData,naddcontrolCode:addId,nsampletypecode:this.props.Login.masterData.defaultSampleType?this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA,nregtypecode:this.props.Login.masterData.defaultRegistrationType?this.props.Login.masterData.defaultRegistrationType.nregtypecode:transactionStatus.NA,nregsubtypecode:this.state.nregsubtypecode?this.state.nregsubtypecode.item.nregsubtypecode:transactionStatus.NA};var filterParam={inputListName:\"Batchmaster\",selectedObject:\"SelectedBatchmaster\",primaryKeyField:\"nbatchmastercode\",fetchUrl:\"batchcreation/getActiveSelectedBatchmaster\",fecthInputObject:{fromDate:obj.fromDate,toDate:obj.toDate,userInfo:this.props.Login.userInfo,ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,napprovalconfigcode:this.state.ApprovalVersionValue?this.state.ApprovalVersionValue.item.napprovalconfigcode:transactionStatus.NA,ntranscode:this.state.FilterStatusValue?this.state.FilterStatusValue.value:transactionStatus.DRAFT,nsampletypecode:this.props.Login.masterData.defaultSampleType?this.props.Login.masterData.defaultSampleType.nsampletypecode:transactionStatus.NA//fromDate, toDate, \n//stransactionstatuscode,\n//activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\n},masterData:this.props.Login.masterData,//unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\nsearchFieldList:this.searchFieldList};this.breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto},// {\n//     \"label\": \"IDS_SAMPLETYPE\",\n//     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\n// }, \n{\"label\":\"IDS_REGISTRATIONTYPE\",\"value\":this.props.Login.masterData.realRegTypeValue&&this.props.Login.masterData.realRegTypeValue.sregtypename?this.props.Login.masterData.realRegTypeValue.sregtypename:\"NA\"// \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\n// this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\n},{\"label\":\"IDS_REGISTRATIONSUBTYPE\",\"value\":this.props.Login.masterData.realRegSubTypeValue&&this.props.Login.masterData.realRegSubTypeValue.sregsubtypename?this.props.Login.masterData.realRegSubTypeValue.sregsubtypename:\"NA\"},{\"label\":\"IDS_BATCHSTATUS\",\"value\":this.props.Login.masterData.defaultFilterStatus&&this.props.Login.masterData.defaultFilterStatus.sfilterstatus?this.props.Login.masterData.defaultFilterStatus.sfilterstatus:\"NA\"}// {\n//     \"label\": \"IDS_CONFIGVERSION\",\n//     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\n// }\n];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:this.breadCrumbData})),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.Batchmaster||[],selectedMaster:this.props.Login.masterData.SelectedBatchmaster,primaryKeyField:\"nbatchmastercode\",userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData//getMasterDetail={this.props.getSelectedBatchCreationDetail}\n,getMasterDetail:function getMasterDetail(batch){return _this3.props.getSelectedBatchCreationDetail(batch,_this3.props.Login.userInfo,_this3.props.Login.masterData);},inputParam:getBatch,screenName:this.props.intl.formatMessage({id:\"IDS_BATCHCREATION\"})//mainField=\"stestname\"\n,mainField:\"sbatcharno\",firstField:\"stestname\",secondField:\"sinstrumentname\",selectedListName:\"SelectedBatchmaster\",objectName:\"BatchCreation\",listName:\"IDS_BATCHCREATION\",needValidation:false,hidePaging:false// subFields={\n//     [\n//         { [designProperties.VALUE]: \"sinstrumentcatname\" },\n//         { [designProperties.VALUE]: \"sinstrumentname\" },\n//         // { [designProperties.VALUE]: \"smahname\" },\n//         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\n//     ]\n// }\n,needFilter:true,needMultiSelect:false,subFieldsLabel:true,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterColumnData:this.props.filterColumnData,searchListName:\"searchedData\",searchRef:this.searchRef,filterParam:filterParam// skip={this.state.skip}\n// take={this.state.take}\n// handlePageChange={this.handlePageChange}\n,addId:addId,showFilterIcon:true,userRoleControlRights:this.state.userRoleControlRights,reloadData:this.reloadData,openModal:function openModal(){return _this3.props.getBatchSection(addParam);}// openModal={() => this.props.getTestInstrumentComboService(addParam)}\n,commonActions:/*#__PURE__*/ // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\nReact.createElement(ProductList,{className:\"d-flex product-category float-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",role:\"button\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"}),\"data-for\":\"tooltip-common-wrap\",hidden:this.state.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this3.props.getTestInstrumentComboService(addParam);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey ml-2\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"}),\"data-for\":\"tooltip-common-wrap\"//onClick={() => this.reloadData(false)} \n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync,style:{\"width\":\"0.6!important\"}})))// </Tooltip>\n,filterComponent:[{\"IDS_FILTER\":/*#__PURE__*/React.createElement(BatchCreationFilter,{fromDate:this.state.selectedFilter[\"fromDate\"]!=undefined?rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"fromDate\"]):this.fromDate,toDate:this.state.selectedFilter[\"toDate\"]!=undefined?rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"toDate\"]):this.toDate,SampleType:this.state.SampleType||[],SampleTypeValue:this.props.Login.masterData.defaultSampleType||[],RegType:this.state.RegistrationType||[],RegTypeValue:this.props.Login.masterData.defaultRegistrationType||[],RegSubType:this.state.RegistrationSubType||[],RegSubTypeValue:this.state.nregsubtypecode||[],DesignTemplateMappingValue:this.props.Login.masterData.DesignTemplateMappingValue||[],FilterStatus:this.state.BCFilterStatus||[],FilterStatusValue:this.state.FilterStatusValue||[],ApprovalVersion:this.state.ApprovalConfigVersion||[],ApprovalVersionValue:this.state.ApprovalVersionValue||[],REJobStatus:this.state.REJobStatus||[],JobStatusValue:this.props.Login.masterData.defaultjobstatus||[],Test:this.state.Testvalues||[],TestValue:this.props.Login.masterData.selectedTestSynonym||[],onFilterComboChange:this.onFilterComboChange,handleDateChange:this.handleDateChange,handleFilterDateChange:this.handleFilterDateChange,userInfo:this.props.Login.userInfo,onDesignTemplateChange:this.onDesignTemplateChange,DynamicDesignMapping:this.state.stateDynamicDesign||[]})}]})),/*#__PURE__*/React.createElement(Col,{md:\"8\"},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.Batchmaster&&this.props.Login.masterData.Batchmaster.length>0&&this.props.Login.masterData.SelectedBatchmaster?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.Login.masterData.SelectedBatchmaster.sbatcharno),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(MediaLabel,{className:\"btn btn-outlined \".concat(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.INITIATED?\"outline-initiate\":this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus==transactionStatus.COMPLETED?\"outline-success\":\"outline-secondary\",\" btn-sm ml-3\")},this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(Nav.Link,{name:\"view\",className:\"btn btn-circle outline-grey mr-2 action-icons-wrap\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_VIEWINFO\"})// hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\n,onClick:function onClick(){return _this3.props.viewInfo(_this3.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,_this3.props.Login.userInfo,_this3.props.Login.masterData);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"editBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(editId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EDIT\"}),onClick:function onClick(){return _this3.fetchEditData(editParam);}// onClick={() => this.props.getActiveBatchCreationService(editParam,\n//     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt//  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\n})),/*#__PURE__*/ // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\nReact.createElement(Nav.Link,{name:\"initiateBatchCreation\"//  data-for=\"tooltip-common-wrap\" \n,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_INITIATE\"}),hidden:this.state.userRoleControlRights.indexOf(testStartId)===-1,className:\"btn btn-circle outline-grey mr-2\"//role=\"button\"\n,onClick:function onClick(){return _this3.testPopUpStartActions(testStartId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlay}))// :\"\"\n,/*#__PURE__*/React.createElement(Nav.Link,{name:\"completeBatchCreation\",hidden:this.state.userRoleControlRights.indexOf(completeId)===-1,className:\"btn btn-circle outline-grey mr-2\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),onClick:function onClick(){return _this3.completePopUpStartActions(completeId);}//onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\n// onClick={() => this.props.validateBatchComplete({\n//     masterData: this.props.Login.masterData,\n//     userInfo: this.props.Login.userInfo,\n//     userRoleControlRights: this.props.Login.userRoleControlRights,\n//     ncontrolCode: completeId,\n//     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\n// })}\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheckCircle// title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\n})),/*#__PURE__*/React.createElement(Nav.Link,{name:\"deleteBatchCreation\",className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(deleteId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DELETEORCANCEL\"}),onClick:function onClick(){return _this3.ConfirmDelete(_this3.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\");}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),reportActionList.length>0?/*#__PURE__*/React.createElement(CustomPopover,{nav:true,data:reportActionList,Button:true,hideIcon:true,btnClasses:\"btn-circle btn_grey ml-2\",textKey:\"value\",dynamicButton:function dynamicButton(value){return _this3.reportMethod(value);},userRoleControlRights:this.state.userRoleControlRights}):\"\")))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,{className:\"no-gutters\"},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(Card,{className:\"at-tabs\"},/*#__PURE__*/React.createElement(CustomTab,{activeKey:this.props.Login.activeKey?this.props.Login.activeKey:\"IDS_SAMPLE\",tabDetail:this.tabDetail(),onTabChange:this.onTabChange})))))):\"\"))))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,size:\"lg\",closeModal:this.closeModal,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,screenName:this.props.Login.operation===\"createSample\"?this.props.intl.formatMessage({id:\"IDS_SAMPLE\"}):this.props.Login.operation===\"initiate\"?this.props.intl.formatMessage({id:\"IDS_BATCH\"}):this.props.Login.operation===\"createiqcsample\"?this.props.intl.formatMessage({id:\"IDS_BATCHIQCSAMPLE\"}):this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:this.props.Login.operation===\"create\"?this.batchMandatoryFields:this.props.Login.operation===\"initiate\"?this.initiateMandatoryFields:this.props.Login.operation===\"complete\"?this.completeMandatoryFields:this.props.Login.operation===\"createiqcsample\"?this.materialIqcMandatory:[],showSaveContinue:this.state.showSaveContinue,noSave:this.props.Login.operation===\"view\"?true:false,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):this.props.Login.operation===\"create\"||this.props.Login.operation===\"update\"?/*#__PURE__*/React.createElement(AddBatchCreation,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,onNumericInputOnChange:this.onNumericInputOnChange,handleDateChange:this.handleDateChange,Test:this.state.Testvalues||[],selectedInstrumentCategory:this.state.selectedInstCategory,InstrumentCategory:this.state.InstrumentCategory,Instrument:this.state.Instrument,selectedInstrument:this.state.selectedInstrument,productCategory:this.state.ProductCategory,selectedProductCategory:this.state.selectedProductCategory,TestValue:this.state.selectedTestSynonym||[],product:this.state.Product||[],selectedProduct:this.state.selectedProduct||[],studyPlanList:this.props.Login.studyPlanList||[],manufacturerList:this.props.Login.productManufacturerList||[],maHolderList:this.props.Login.maHolderList||[],timeZoneList:this.props.Login.timeZoneList||[],selectedBacthCreation:this.props.Login.masterData.SelectedBatchmaster||{},operation:this.props.Login.operation,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,onMultiColumnValue:this.onMultiColumnValue,onMultiColumnMAHChange:this.onMultiColumnMAHChange,batchCreationEditStatusList:this.props.Login.batchCreationEditStatusList,Section:this.state.Section,selectedSection:this.state.selectedSection}):this.props.Login.operation===\"createSample\"?/*#__PURE__*/React.createElement(AddSample,{onInputOnChange:this.onInputOnChange,getProductByCategory:this.getProductByCategory,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,userInfo:this.props.userInfo,productCategoryList:this.props.productCategoryList,productList:this.props.productList,componentList:this.props.componentList,getDataForAddComponent:this.getDataForAddComponent,clearComponentInput:this.props.clearComponentInput,samples:this.state.samples||[],headerSelectionChange:this.headerSelectionChange,selectionChange:this.selectionChange,addedComponentList:this.state.addedComponentList||[],addedHeaderSelectionChange:this.addedHeaderSelectionChange,addedSelectionChange:this.addedSelectionChange//dataStateChange={this.dataStateChange} \n,userRoleControlRights:this.props.userRoleControlRights,controlMap:this.props.controlMap,inputParam:this.props.inputParam,screenName:this.props.screenName,addSelectAll:this.state.addSelectAll,deleteSelectAll:this.state.deleteSelectAll,onDeleteSelectedComponent:this.onDeleteSelectedComponent,componentPopupSkip:this.props.componentPopupSkip,componentPopupTake:this.props.componentPopupTake,componentPageSizes:this.props.componentPageSizes,nneedsubsample:this.state.nregsubtypecode&&this.state.nregsubtypecode.item.nneedsubsample}):this.props.Login.operation===\"initiate\"||this.props.Login.operation===\"complete\"?/*#__PURE__*/React.createElement(AddBatchinitiate,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,handleDateChange:this.handleDateChange,selectedRecord:this.state.selectedRecord,onInputOnChange:this.onInputOnChange}):this.props.Login.operation===\"view\"?/*#__PURE__*/React.createElement(Card,{className:\"one\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(ViewInfo,{userInfo:this.props.Login.userInfo,selectedRecordView:this.props.Login.masterData.selectedRecordView,viewInfoFields:viewInfoFields}))):this.props.Login.operation===\"createiqcsample\"?/*#__PURE__*/React.createElement(AddMaterialIqc,{userInfo:this.props.Login.userInfo,operation:this.props.Login.operation,materialCategory:this.state.MaterialCategory,selectedMaterialType:this.state.selectedMaterialType,selectedMaterialCategory:this.state.selectedMaterialCategory,onComboChange:this.onComboChange,selectedMaterial:this.state.selectedMaterial,material:this.state.Material,materialInventory:this.state.MaterialInventory,onInputOnChange:this.onInputOnChange,selectedMaterialInventory:this.state.selectedMaterialInventory,selectedInventoryUnit:this.props.Login.masterData.selectedInventoryUnit}):\"\"}):\"\",this.state.showConfirmAlert?this.confirmAlert():\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){var _this$state=this.state,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,_this$state$selectedR=_this$state.selectedRecord,selectedRecord=_this$state$selectedR===void 0?{}:_this$state$selectedR,filterData=_this$state.filterData,addedComponentList=_this$state.addedComponentList,filterStatusList=_this$state.filterStatusList,dataState=_this$state.dataState,sahDataState=_this$state.sahDataState,bahDataState=_this$state.bahDataState,chDataState=_this$state.chDataState,testCommentDataState=_this$state.testCommentDataState,SampleType=_this$state.SampleType,RegistrationType=_this$state.RegistrationType,RegistrationSubType=_this$state.RegistrationSubType,BCFilterStatus=_this$state.BCFilterStatus,REJobStatus=_this$state.REJobStatus,Testvalues=_this$state.Testvalues,ApprovalConfigVersion=_this$state.ApprovalConfigVersion,skip=_this$state.skip,take=_this$state.take,testskip=_this$state.testskip,testtake=_this$state.testtake,selectedFilter=_this$state.selectedFilter,InstrumentCategory=_this$state.InstrumentCategory,selectedInstCategory=_this$state.selectedInstCategory,ProductCategory=_this$state.ProductCategory,Instrument=_this$state.Instrument,selectedInstrument=_this$state.selectedInstrument,selectedTestSynonym=_this$state.selectedTestSynonym,nregsubtypecode=_this$state.nregsubtypecode,selectedProductCategory=_this$state.selectedProductCategory,Product=_this$state.Product,selectedProduct=_this$state.selectedProduct,samples=_this$state.samples,addSelectAll=_this$state.addSelectAll,deleteSelectAll=_this$state.deleteSelectAll,ApprovalVersionValue=_this$state.ApprovalVersionValue,FilterStatusValue=_this$state.FilterStatusValue,Section=_this$state.Section,selectedSection=_this$state.selectedSection,sampleGridItem=_this$state.sampleGridItem,subsampleGridItem=_this$state.subsampleGridItem,_this$state$testGridI=_this$state.testGridItem,testGridItem=_this$state$testGridI===void 0?[]:_this$state$testGridI,DynamicGridItem=_this$state.DynamicGridItem,samplegridmoreitem=_this$state.samplegridmoreitem,DynamicGridMoreItem=_this$state.DynamicGridMoreItem,MaterialCategory=_this$state.MaterialCategory,selectedMaterialType=_this$state.selectedMaterialType,Material=_this$state.Material,selectedMaterial=_this$state.selectedMaterial,selectedMaterialCategory=_this$state.selectedMaterialCategory,MaterialInventory=_this$state.MaterialInventory,selectedMaterialInventory=_this$state.selectedMaterialInventory;var isStateChanged=false;var bool=false;if(this.props.Login.masterData.RegistrationSubType&&this.props.Login.masterData.RegistrationSubType!==previousProps.Login.masterData.RegistrationSubType){var _dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5//, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \n};bool=true;}if(this.props.Login.masterData!==previousProps.Login.masterData){bool=true;isStateChanged=true;SampleType=constructOptionList(this.props.Login.masterData.SampleType||[],\"nsampletypecode\",\"ssampletypename\",'nsampletypecode','ascending','nsampletypecode',false);RegistrationType=constructOptionList(this.props.Login.masterData.RegistrationType||[],\"nregtypecode\",\"sregtypename\",\"nsorter\",'ascending','nregtypecode',false);RegistrationSubType=constructOptionList(this.props.Login.masterData.RegistrationSubType||[],\"nregsubtypecode\",\"sregsubtypename\",\"nsorter\",'ascending','nregsubtypecode',false);BCFilterStatus=constructOptionList(this.props.Login.masterData.BCFilterStatus||[],\"ntransactionstatus\",\"sfilterstatus\",\"nsorter\",'ascending',\"ntransactionstatus\",false);REJobStatus=constructOptionList(this.props.Login.masterData.REJobStatus||[],'njobstatuscode','sidsjobstatusname','ascending','njobstatuscode',false);Testvalues=constructOptionList(this.props.Login.masterData.Testvalues||[],'ntestcode','stestname','ascending','ntestcode',false);ApprovalConfigVersion=constructOptionList(this.props.Login.masterData.ApprovalConfigVersion||[],'napprovalconfigversioncode','sversionname','ascending','napprovalconfigversioncode',false);InstrumentCategory=constructOptionList(this.props.Login.masterData.instrumentCategory||[],'ninstrumentcatcode','sinstrumentcatname','ascending','ninstrumentcatcode',false);Instrument=constructOptionList(this.props.Login.masterData.instrument||[],'ninstrumentcode','sinstrumentname','ascending','ninstrumentcode',false);ProductCategory=constructOptionList(this.props.Login.masterData.productcategory||[],'nproductcatcode','sproductcatname','ascending','nproductcatcode',false);Product=constructOptionList(this.props.Login.masterData.product||[],'nproductcode','sproductname','ascending','nproductcode',false);Section=constructOptionList(this.props.Login.masterData.Section||[],'nsectioncode','ssectionname','ascending','nsectioncode',false);MaterialCategory=constructOptionList(this.props.Login.masterData.MaterialCategory||[],'nmaterialcatcode','smaterialcatname','ascending','nmaterialcatcode',false);Material=constructOptionList(this.props.Login.masterData.Material||[],'nmaterialcode','smaterialname','ascending','nmaterialcode',false);MaterialInventory=constructOptionList(this.props.Login.masterData.MaterialInventory||[],'nmaterialinventtranscode','sinventoryid','ascending','nmaterialinventtranscode',false);skip=this.props.Login.skip===undefined?skip:this.props.Login.skip;take=this.props.Login.take||take;testskip=this.props.Login.testskip===undefined?testskip:this.props.Login.testskip;testtake=this.props.Login.testtake||testtake;var selectFilterStatus={ntransactionstatus:transactionStatus.PARTIAL,sfilterstatus:this.props.intl.formatMessage({id:\"IDS_PARTIAL\"}),scolorhexcode:\"#800000\"};var selectedFilters=this.props.Login.masterData.BCFilterStatus||[];var selectedFiltersNew=JSON.parse(JSON.stringify(selectedFilters));var index=selectedFiltersNew.findIndex(function(item){return item.ntransactionstatus===transactionStatus.PARTIAL;});if(selectedFiltersNew.length>0&&index===-1){selectedFiltersNew.push(selectFilterStatus);}selectedFilter=selectedFiltersNew;SampleType=SampleType.get(\"OptionList\");RegistrationType=RegistrationType.get(\"OptionList\");RegistrationSubType=RegistrationSubType.get(\"OptionList\");BCFilterStatus=BCFilterStatus.get(\"OptionList\");REJobStatus=REJobStatus.get(\"OptionList\");Testvalues=Testvalues.get(\"OptionList\");ApprovalConfigVersion=ApprovalConfigVersion.get(\"OptionList\");InstrumentCategory=InstrumentCategory.get(\"OptionList\");Instrument=Instrument.get(\"OptionList\");ProductCategory=ProductCategory.get(\"OptionList\");Product=Product.get(\"OptionList\");Section=Section.get(\"OptionList\");MaterialCategory=MaterialCategory.get(\"OptionList\");Material=Material.get(\"OptionList\");MaterialInventory=MaterialInventory.get(\"OptionList\");selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory||[];samples=this.props.Login.masterData.samples;addSelectAll=false;deleteSelectAll=true;nregsubtypecode=this.props.Login.masterData.defaultRegistrationSubType?{label:this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,value:this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,item:this.props.Login.masterData.defaultRegistrationSubType}:\"\";if(this.props.Login.masterData.selectedTestSynonym!==previousProps.Login.masterData.selectedTestSynonym){selectedTestSynonym=this.props.Login.masterData.selectedTestSynonym?{label:this.props.Login.masterData.selectedTestSynonym.stestname,value:this.props.Login.masterData.selectedTestSynonym.ntestcode,item:this.props.Login.masterData.selectedTestSynonym}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedProductcategory!==previousProps.Login.masterData.selectedProductcategory){selectedProductCategory=this.props.Login.masterData.selectedProductcategory?{label:this.props.Login.masterData.selectedProductcategory.sproductcatname,value:this.props.Login.masterData.selectedProductcategory.nproductcatcode,item:this.props.Login.masterData.selectedProductcategory}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedProduct!==previousProps.Login.masterData.selectedProduct){selectedProduct=this.props.Login.masterData.selectedProduct?{label:this.props.Login.masterData.selectedProduct.sproductname,value:this.props.Login.masterData.selectedProduct.nproductcode,item:this.props.Login.masterData.selectedProduct}:\"\";var sproductname=selectedProduct.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sproductname:sproductname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedInstrumentCategory!==previousProps.Login.masterData.selectedInstrumentCategory){selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory?{label:this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,value:this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,item:this.props.Login.masterData.selectedInstrumentCategory}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedInstrument!==previousProps.Login.masterData.selectedInstrument){selectedInstrument=this.props.Login.masterData.selectedInstrument?{label:this.props.Login.masterData.selectedInstrument.sinstrumentname,value:this.props.Login.masterData.selectedInstrument.ninstrumentcode,item:this.props.Login.masterData.selectedInstrument}:\"\";var sinstrumentname=selectedInstrument.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{sinstrumentname:sinstrumentname},selectedRecord);isStateChanged=true;}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});isStateChanged=true;}if(this.props.Login.selectedComponentList!==previousProps.Login.selectedComponentList){addedComponentList=this.props.Login.selectedComponentList;isStateChanged=true;// this.setState({ addedComponentList });\n}if(this.props.Login.masterData.defaultApprovalConfigVersion!==previousProps.Login.masterData.defaultApprovalConfigVersion){ApprovalVersionValue=this.props.Login.masterData.defaultApprovalConfigVersion?{label:this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,value:this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,item:this.props.Login.masterData.defaultApprovalConfigVersion}:\"\";isStateChanged=true;}if(this.props.Login.masterData.defaultFilterStatus!==previousProps.Login.masterData.defaultFilterStatus){FilterStatusValue=this.props.Login.masterData.defaultFilterStatus?{label:this.props.Login.masterData.defaultFilterStatus.sfilterstatus,value:this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,item:this.props.Login.masterData.defaultFilterStatus}:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedSection!==previousProps.Login.masterData.selectedSection){selectedSection=this.props.Login.masterData.selectedSection?{label:this.props.Login.masterData.selectedSection.ssectionname,value:this.props.Login.masterData.selectedSection.nsectioncode,item:this.props.Login.masterData.selectedSection}:\"\";var ssectionname=selectedSection.item;selectedRecord=_objectSpread(_objectSpread({},this.state.selectedRecord),{},{ssectionname:ssectionname},selectedRecord);isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialType!==previousProps.Login.masterData.selectedMaterialType){selectedMaterialType=this.props.Login.masterData.selectedMaterialType?{label:this.props.Login.masterData.selectedMaterialType.smaterialtypename,value:this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,item:this.props.Login.masterData.selectedMaterialType}:\"\";selectedRecord[\"smaterialtypename\"]=this.props.Login.masterData.selectedMaterialType.smaterialtypename;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialCategory!==previousProps.Login.masterData.selectedMaterialCategory){selectedMaterialCategory=this.props.Login.masterData.selectedMaterialCategory?{label:this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,value:this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,item:this.props.Login.masterData.selectedMaterialCategory}:\"\";selectedRecord[\"smaterialcatname\"]=this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterial!==previousProps.Login.masterData.selectedMaterial){selectedMaterial=this.props.Login.masterData.selectedMaterial?{label:this.props.Login.masterData.selectedMaterial.smaterialname,value:this.props.Login.masterData.selectedMaterial.nmaterialcode,item:this.props.Login.masterData.selectedMaterial}:\"\";selectedRecord[\"smaterialname\"]=this.props.Login.masterData.selectedMaterial.smaterialname;isStateChanged=true;}if(this.props.Login.masterData.selectedMaterialInventory!==previousProps.Login.masterData.selectedMaterialInventory){selectedMaterialInventory=this.props.Login.masterData.selectedMaterialInventory?{label:this.props.Login.masterData.selectedMaterialInventory.sinventoryid,value:this.props.Login.masterData.selectedMaterialInventory.nmaterialinventorycode,item:this.props.Login.masterData.selectedMaterialInventory}:\"\";selectedRecord[\"sinventoryid\"]=this.props.Login.masterData.selectedMaterialInventory&&this.props.Login.masterData.selectedMaterialInventory.sinventoryid!=null?this.props.Login.masterData.selectedMaterialInventory.sinventoryid:\"\";isStateChanged=true;}if(this.props.Login.masterData.selectedInventoryUnit!==previousProps.Login.masterData.selectedInventoryUnit){//selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\nselectedRecord[\"savailablequatity\"]=this.props.Login.masterData.selectedInventoryUnit&&this.props.Login.masterData.selectedInventoryUnit.savailablequatity!=null?this.props.Login.masterData.selectedInventoryUnit.savailablequatity:\"\";isStateChanged=true;}if(this.props.Login.isselectedrecordempty){selectedRecord={};isStateChanged=true;}}// if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\n//     // let selectedRecord = {};\n//     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\n//     'ascending', 'nmaterialcatcode', false);\n//     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\n//     'ascending', 'nmaterialcode', false);\n//     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\n//     'ascending', 'nmaterialinventorycode', false);\n//      MaterialCategory = MaterialCategory.get(\"OptionList\")\n//      Material = Material.get(\"OptionList\")\n//      MaterialInventory = MaterialInventory.get(\"OptionList\")\n//      selectedRecord[\"MaterialCategory\"]=MaterialCategory\n//      selectedRecord[\"Material\"]=Material\n//      selectedRecord[\"MaterialInventory\"]=MaterialInventory\n//  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\n//         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\n//             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\n//             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\n//         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\n//         isStateChanged = true;\n//     }\n//  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\n//         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\n//             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\n//             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \n//         }:\"\"\n//         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\n//         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\n//          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\n//             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\n//             item: this.props.Login.selectedRecord.selectedMaterial\n//         }:\"\"\n//         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\n//         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\n//         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\n//         {\n//             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\n//             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\n//             item: this.props.Login.selectedRecord.selectedMaterialInventory\n//         }:\"\"\n//         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\n//         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\n//         isStateChanged = true;\n//     }\n//     if (this.props.Login.selectedRecord.selectedInventoryUnit !== previousProps.Login.selectedRecord.selectedInventoryUnit) {\n//         selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\n//         selectedRecord[\"savailablequatity\"] = this.props.Login.selectedRecord.selectedInventoryUnit.savailablequatity;\n//         isStateChanged = true;\n//     }\n// }\nif(this.props.Login.masterData.DynamicDesign&&this.props.Login.masterData.DynamicDesign!==previousProps.Login.masterData.DynamicDesign){var dynamicColumn=JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value);testGridItem[0]=dynamicColumn.testListFields.releasetestfields[0]?dynamicColumn.testListFields.releasetestfields[0]:[];sampleGridItem=dynamicColumn.samplegriditem?dynamicColumn.samplegriditem:[];subsampleGridItem=dynamicColumn.subsamplelistitem?dynamicColumn.subsamplelistitem:[];samplegridmoreitem=dynamicColumn.samplegridmoreitem?dynamicColumn.samplegridmoreitem:[];DynamicGridMoreItem=_toConsumableArray(samplegridmoreitem);DynamicGridItem=[].concat(_toConsumableArray(testGridItem),_toConsumableArray(sampleGridItem),_toConsumableArray(subsampleGridItem));isStateChanged=true;}// if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n//     isStateChanged = true;\n//     selectedRecord = this.props.Login.selectedRecord;\n//     //this.setState({ selectedRecord: this.props.Login.selectedRecord });\n// }\nif(isStateChanged){this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,selectedRecord:selectedRecord,filterData:filterData,addedComponentList:addedComponentList,filterStatusList:filterStatusList,dataState:dataState,sahDataState:sahDataState,bahDataState:bahDataState,chDataState:chDataState,testCommentDataState:testCommentDataState,SampleType:SampleType,RegistrationType:RegistrationType,RegistrationSubType:RegistrationSubType,BCFilterStatus:BCFilterStatus,REJobStatus:REJobStatus,Testvalues:Testvalues,ApprovalConfigVersion:ApprovalConfigVersion,skip:skip,take:take,testskip:testskip,testtake:testtake,selectedFilter:selectedFilter,selectedInstCategory:selectedInstCategory,InstrumentCategory:InstrumentCategory,Instrument:Instrument,selectedInstrument:selectedInstrument,selectedTestSynonym:selectedTestSynonym,nregsubtypecode:nregsubtypecode,ProductCategory:ProductCategory,selectedProductCategory:selectedProductCategory,Product:Product,selectedProduct:selectedProduct,samples:samples,addSelectAll:addSelectAll,deleteSelectAll:deleteSelectAll,ApprovalVersionValue:ApprovalVersionValue,FilterStatusValue:FilterStatusValue,Section:Section,selectedSection:selectedSection,sampleGridItem:sampleGridItem,subsampleGridItem:subsampleGridItem,testGridItem:testGridItem,DynamicGridItem:DynamicGridItem,samplegridmoreitem:samplegridmoreitem,DynamicGridMoreItem:DynamicGridMoreItem,MaterialCategory:MaterialCategory,selectedMaterialType:selectedMaterialType,Material:Material,selectedMaterial:selectedMaterial,selectedMaterialCategory:selectedMaterialCategory,MaterialInventory:MaterialInventory,selectedMaterialInventory:selectedMaterialInventory});}}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){if(props.Login.operation==\"initiate\"){toast.warn(props.Login.masterStatus);//this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\n}else{toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}}if(props.Login.error!==\"\"&&props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}// if (props.Login.selectedRecord !== state.selectedRecord) {\n//     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\n// }\nreturn null;}}]);return BatchCreation;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,updateStore:updateStore,getTestInstrumentComboService:getTestInstrumentComboService,getTestInstrumentCategory:getTestInstrumentCategory,getInstrumentForInstCategory:getInstrumentForInstCategory,getBatchCreationDetails:getBatchCreationDetails,onActionFilterSubmit:onActionFilterSubmit,getProductcategoryAction:getProductcategoryAction,createBatchmasterAction:createBatchmasterAction,getSamplesForGrid:getSamplesForGrid,getSelectedBatchCreationDetail:getSelectedBatchCreationDetail,createSampleAction:createSampleAction,deleteSampleAction:deleteSampleAction,getActiveBatchCreationService:getActiveBatchCreationService,updateBatchcreationAction:updateBatchcreationAction,deleteBatchCreation:deleteBatchCreation,batchInitiateAction:batchInitiateAction,getBCRegistrationSubType:getBCRegistrationSubType,batchCompleteAction:batchCompleteAction,validateEsignCredential:validateEsignCredential,filterColumnData:filterColumnData,getBatchhistoryAction:getBatchhistoryAction,getBatchSection:getBatchSection,viewInfo:viewInfo,getIqcSamples:getIqcSamples,getMaterialBasedOnMaterialCategory:getMaterialBasedOnMaterialCategory,getMaterialInventoryBasedOnMaterial:getMaterialInventoryBasedOnMaterial,batchSaveIQCActions:batchSaveIQCActions,getMaterialAvailQtyBasedOnInv:getMaterialAvailQtyBasedOnInv,getBatchIqcSampleAction:getBatchIqcSampleAction,getBCApprovalConfigVersion:getBCApprovalConfigVersion,getBCRegistrationType:getBCRegistrationType})(injectIntl(BatchCreation));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/batchruncreation/BatchCreation.jsx"],"names":["React","connect","toast","injectIntl","FormattedMessage","Row","Col","Card","Nav","FormGroup","FormLabel","Button","FontAwesomeIcon","faPencilAlt","faTrashAlt","faCheckCircle","faCopy","faEye","faPlay","faPlus","faSync","callService","crudMaster","updateStore","getTestInstrumentComboService","getTestInstrumentCategory","getInstrumentForInstCategory","getBatchCreationDetails","onActionFilterSubmit","getProductcategoryAction","createBatchmasterAction","getSamplesForGrid","getSelectedBatchCreationDetail","createSampleAction","deleteSampleAction","getActiveBatchCreationService","updateBatchcreationAction","deleteBatchCreation","batchInitiateAction","getBCRegistrationSubType","batchCompleteAction","validateEsignCredential","filterColumnData","getBatchhistoryAction","getBatchSection","viewInfo","getIqcSamples","getMaterialBasedOnMaterialCategory","getMaterialInventoryBasedOnMaterial","batchSaveIQCActions","getMaterialAvailQtyBasedOnInv","getBatchIqcSampleAction","getBCApprovalConfigVersion","getBCRegistrationType","transactionStatus","designProperties","reportTypeEnum","reportCOAType","RegistrationSubType","DEFAULT_RETURN","showEsign","getControlMap","getStartOfDay","getEndOfDay","formatInputDate","constructOptionList","rearrangeDateFormat","convertDateValuetoString","ConfirmMessage","SlideOutModal","ReadOnlyText","ContentPanel","MediaLabel","ListWrapper","BreadcrumbComponent","Esign","ProductList","CustomPopover","BatchCreationFilter","AddBatchCreation","AddBatchinitiate","CustomTab","SampleTab","BatchhistoryTab","process","AddSample","ListMaster","ViewInfo","Affix","AddMaterialIqc","BatchIqcSampleTab","mapStateToProps","state","Login","BatchCreation","props","batchMandatoryFields","completeMandatoryFields","initiateMandatoryFields","materialIqcMandatory","getSamples","selectedbatchmaster","addSampleID","controlMap","has","get","ncontrolcode","ntransactionstatus","INITIATED","COMPLETED","warn","intl","formatMessage","id","masterData","SelectedBatchmaster","ntestcode","nbatchmastercode","userInfo","defaultRegistrationType","nregtypecode","nregsubtypecode","value","Samples","length","addcontrolcode","inputData","NA","item","nsectioncode","deleteRecord","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","selectedRecord","fetchUrl","isSingleGet","fecthInputObject","userinfo","inputParam","classUrl","methodUrl","Sample","nbatchsamplecode","ndesigntemplatemappingcode","operation","displayName","dataState","userRoleControlRights","nformcode","ncontrolCode","updateInfo","typeName","data","loadEsign","screenData","openModal","screenName","onTabChange","tabProps","activeKey","dataStateChange","event","setState","dataResult","sampleState","dataStateBatchHistoryChange","Batchhistory","histortState","dataStateBatchIqcChangeChange","iqcsample","iqcsampleState","getApprovalVersion","obj","selectedFilter","fromDate","realFromDate","toDate","realToDate","nsampletypecode","parseInt","defaultSampleType","isneedapprovalfilter","defaultRegistrationSubType","tabDetail","tabMap","Map","set","gridfillingColumn","DynamicGridItem","DynamicGridMoreItem","nneedsubsample","onFilterComboChange","fieldname","dateObj","nflag","fromdate","todate","ntranscode","String","defaultFilterStatus","inputParamData","napprovalversioncode","ApprovalConfigVersion","napprovalconfigversioncode","DesignTemplateMappingValue","getBCFilterTemplate","ApprovalVersionValue","defaultApprovalConfigVersion","njobstatuscode","defaultjobstatus","getBCFilterStatus","FilterStatusValue","handleFilterDateChange","dateValue","dateName","Date","headerSelectionChange","checked","syntheticEvent","target","sampleList","samples","addedSamplesList","dataItems","map","findIndex","x","ntransactiontestcode","push","selected","newItem","JSON","parse","stringify","olditem","addSelectAll","deleteSelectAll","sampleListData","deletedListdData","filter","item1","npreregno","deletedList","selectionChange","samplesList","dataItem","index","initialList","valiateCheckAll","handlePageChange","e","skip","take","ConfirmDelete","selectedBatch","deleteId","confirmMessage","confirm","completePopUpStartActions","completeId","DRAFT","testPopUpStartActions","testStartId","testStartActions","selectedmaster","jsonuidata","jsondata","sample","join","nneedmyjob","nneedjoballocation","napprovalconfigcode","nneedtestinitiate","dtransactiondate","scomments","sampleiqc","parseFloat","susedquantity","inventoryTransaction","savailablequatity","inputRegistrationData","inputMaterialInventoryData","inputBatchData","batchCreationSampleData","batchCreationTestData","batchCreationSampleArray","batchCreationTestArray","samplecombinationuniqueArray","inputMaterialInventoryArrData","selectedTestDetails","nallottedspeccode","nproductcode","nregsubtypeversioncode","nproductcatcode","ninstrumentcatcode","ninstrumentcode","selectedMaterialCategory","selectedMaterial","nmaterialcode","nmaterialcatcode","sinventoryid","selectedMaterialInventory","nmaterialinventorycode","smaterial","smaterialname","smaterialtype","selectedMaterialType","smaterialtypename","nmaterialtypecode","sunitname","sremarks","selectedInventoryUnit","nqtyused","ntestgrouptestcode","nmethodcode","PREREGISTER","batchCompleteActions","sbatcharno","closeAlert","showConfirmAlert","loading","closeModal","selectedId","onComboChange","comboData","fieldName","selectedProduct","naddcontrolCode","ssectionname","selectedTestSynonym","selectedInstrument","onNumericInputOnChange","name","onInputOnChange","type","ACTIVE","DEACTIVE","YES","NO","onMultiColumnValue","key","flag","label","keys","forEach","objarray","objkey","getBatchManufacturerComboChange","onMultiColumnMAHChange","clearComponentInput","undefined","componentDefaultSearchDate","handleDateChange","onDropImage","attachedFiles","actionType","saveSample","addedsamplelist","sampleArray","ntransactionsamplecode","samplelist","batchSample","onSaveClick","saveType","formRef","nprevioustestcode","selectedSection","selectedInstCategory","unchangeList","searchRef","editId","stransdisplaystatus","fetchEditData","editParam","validateEsign","sreason","password","onFilterSubmit","reloadData","isFilterSubmit","current","realRegTypeValue","realRegSubTypeValue","realApproveConfigVersion","realSampleTypeValue","onClickReport","reportParam","sprimarykeyname","nprimarykey","nreleasebatchcode","ncertificatetypecode","ndecision","PASS","ndecisionstatus","nreporttypecode","SCREENWISE","BATCH","ncoareporttypecode","BATCHPREVIEW","skipbatchvalidation","reportMethod","method","SelectedBatchCreation","controlId","settings","createRef","searchFieldList","sampleMandatoryFields","copyMandatoryFields","temparray","option","LABEL","slanguagetypecode","VALUE","selectAll","reportActionList","getBatch","keyName","addId","addParam","primaryeyField","viewInfoFields","stransactionstatuscode","SelectedFilterStatus","filterParam","breadCrumbData","breadCrumbFrom","breadCrumbto","sregtypename","sregsubtypename","sfilterstatus","searchedData","Batchmaster","batch","openFilter","closeFilter","indexOf","SampleType","RegistrationType","BCFilterStatus","REJobStatus","Testvalues","onDesignTemplateChange","stateDynamicDesign","masterStatus","showSaveContinue","InstrumentCategory","Instrument","ProductCategory","selectedProductCategory","Product","studyPlanList","productManufacturerList","maHolderList","timeZoneList","batchCreationEditStatusList","Section","getProductByCategory","productCategoryList","productList","componentList","getDataForAddComponent","addedComponentList","addedHeaderSelectionChange","addedSelectionChange","onDeleteSelectedComponent","componentPopupSkip","componentPopupTake","componentPageSizes","selectedRecordView","MaterialCategory","Material","MaterialInventory","confirmAlert","previousProps","filterData","filterStatusList","sahDataState","bahDataState","chDataState","testCommentDataState","testskip","testtake","sampleGridItem","subsampleGridItem","testGridItem","samplegridmoreitem","isStateChanged","bool","instrumentCategory","instrument","productcategory","product","selectFilterStatus","PARTIAL","scolorhexcode","selectedFilters","selectedFiltersNew","selectedInstrumentCategory","stestname","selectedProductcategory","sproductcatname","sproductname","sinstrumentcatname","sinstrumentname","Object","values","selectedComponentList","sversionname","smaterialcatname","isselectedrecordempty","DynamicDesign","dynamicColumn","testListFields","releasetestfields","samplegriditem","subsamplelistitem","errorCode","error","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel, Button, } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faCheckCircle, faCopy, faEye, faPlay,faPlus, faSync } from '@fortawesome/free-solid-svg-icons';\r\nimport {\r\n    callService, crudMaster,updateStore,\r\n    getTestInstrumentComboService,getTestInstrumentCategory,\r\n    getInstrumentForInstCategory,getBatchCreationDetails,onActionFilterSubmit,\r\n    getProductcategoryAction,createBatchmasterAction,getSamplesForGrid,\r\n    getSelectedBatchCreationDetail,createSampleAction,deleteSampleAction,\r\n    getActiveBatchCreationService,updateBatchcreationAction,deleteBatchCreation,\r\n    batchInitiateAction,getBCRegistrationSubType,batchCompleteAction,\r\n    validateEsignCredential,filterColumnData,getBatchhistoryAction,getBatchSection,\r\n    viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType\r\n} from '../../actions';\r\nimport { transactionStatus, designProperties, reportTypeEnum, reportCOAType, \r\n    RegistrationSubType } from '../../components/Enumeration';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport { showEsign, getControlMap, getStartOfDay, getEndOfDay, \r\nformatInputDate, constructOptionList, rearrangeDateFormat, convertDateValuetoString } from '../../components/CommonScript';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport { ReadOnlyText, ContentPanel, MediaLabel } from '../../components/App.styles';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport BreadcrumbComponent from '../../components/Breadcrumb.Component';\r\nimport Esign from '../audittrail/Esign';\r\nimport { ProductList } from '../product/product.styled';\r\nimport CustomPopover from '../../components/customPopover';\r\nimport BatchCreationFilter from './BatchCreationFilter';\r\nimport AddBatchCreation from './AddBatchCreation';\r\nimport AddBatchinitiate from './AddBatchinitiate';\r\nimport CustomTab from '../../components/custom-tabs/custom-tabs.component';\r\nimport SampleTab from './SampleTab';\r\nimport BatchhistoryTab from './BatchhistoryTab';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport AddSample from './AddSample';\r\nimport ListMaster from '../../components/list-master/list-master.component';\r\nimport ViewInfo from './ViewInfo';\r\nimport { Affix } from 'rsuite';\r\nimport AddMaterialIqc from './AddMaterialIqc';\r\nimport BatchIqcSampleTab from './BatchIqcSampleTab';\r\n\r\n\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass BatchCreation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const sampleState = { skip: 0, take: this.props.Login.settings ?\r\n             parseInt(this.props.Login.settings[14]) : 5 };\r\n        \r\n        const histortState = { skip: 0, take: this.props.Login.settings ?\r\n                parseInt(this.props.Login.settings[14]) : 5 };\r\n                \r\n        const iqcsampleState = { skip: 0, take: this.props.Login.settings ?\r\n                    parseInt(this.props.Login.settings[14]) : 5 };\r\n                    \r\n        this.state = {\r\n            skip: 0,\r\n            take: this.props.Login.settings && this.props.Login.settings[3],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedFilter: {},\r\n            sampleState,\r\n            histortState,\r\n            iqcsampleState,\r\n            //confirmmsg:this.ConfirmMessage.bind(this),\r\n            dataState: { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 },\r\n\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n        this.searchFieldList = [\"stestname\",\"sinstrumentcatname\", \"sinstrumentname\", \"sproductname\", \"smanufname\", \"stransactiondate\", \"username\",\r\n        \"stransactionstatus\", \"sdecision\",\"sbatcharno\",\"stransdisplaystatus\"];\r\n\r\n        this.sampleMandatoryFields = [];\r\n        this.copyMandatoryFields = [];\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n            if (props.Login.masterStatus !== \"\") {\r\n                if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n                   if(props.Login.operation == \"initiate\"){\r\n                    toast.warn(props.Login.masterStatus);\r\n                    //this.state.confirmmsg.confirm(\"warning\", \"Warning!\",  props.Login.masterStatus, undefined, \"ok\", undefined, true, undefined);\r\n                   }else{\r\n                    toast.warn(props.Login.masterStatus);\r\n                    props.Login.masterStatus = \"\";\r\n                   }\r\n                }\r\n            }\r\n            if (props.Login.error!==\"\" && props.Login.error !== state.error) {\r\n                toast.error(props.Login.error)\r\n                props.Login.error = \"\";\r\n            }\r\n            // if (props.Login.selectedRecord !== state.selectedRecord) {\r\n            //     return ({ selectedRecord: { ...state.selectedRecord, ...props.Login.selectedRecord } });\r\n            // }\r\n            return null;\r\n        }\r\n    \r\n\r\n    batchMandatoryFields = [\r\n        { \"idsName\": \"IDS_SECTION\", \"dataField\": \"ssectionname\" , \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_TEST\", \"dataField\": \"stestname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_INSTRUMENTCATEGORY\", \"dataField\": \"sinstrumentcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_INSTRUMENT\", \"dataField\": \"sinstrumentname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_PRODUCT\", \"dataField\": \"sproductname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n    ];\r\n     // const sampleColumnList = [];\r\n    \r\n    // if (props.nneedsubsample){\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\", \"width\": \"155px\"} );\r\n    // }\r\n    // else{\r\n    //     sampleColumnList.push({\"idsName\":\"IDS_ARNUMBER\",\"dataField\":\"sarno\", \"width\": \"155px\"});\r\n    // }\r\n    \r\n    completeMandatoryFields = [\r\n        { \r\n          \"idsName\":  \"IDS_BATCHCOMPLETEDATE\",\r\n          //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n          \"dataField\": \"dtransactiondate\" , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n    \r\n    initiateMandatoryFields = [\r\n        { \r\n          \"idsName\":  \"IDS_BATCHINITIATEDATE\",\r\n          //\"idsName\": this.props.Login.operation === \"initiate\" ? \"IDS_BATCHINITIATEDATE\" :\"IDS_BATCHCOMPLETEDATE\" , \r\n          \"dataField\": \"dtransactiondate\" , \"mandatoryLabel\":\"IDS_CHOOSE\", \"controlType\": \"selectbox\"\r\n        },\r\n    ];\r\n\r\n    \r\n\r\n    materialIqcMandatory = [\r\n        \r\n        { \"idsName\": \"IDS_MATERIALTYPE\", \"dataField\": \"smaterialtypename\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_MATERIALCATEGORY\", \"dataField\": \"smaterialcatname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\"},\r\n        { \"idsName\": \"IDS_MATERIAL\", \"dataField\": \"smaterialname\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        { \"idsName\": \"IDS_MATERIALINVENTORY\", \"dataField\": \"sinventoryid\", \"mandatoryLabel\":\"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n        //{ \"idsName\": \"IDS_AVAILABLEQUANTITY\", \"dataField\": \"savailablequatity\", \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_USEDQTY\", \"dataField\": \"susedquantity\" , \"mandatoryLabel\":\"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n    ]\r\n\r\n     getSamples=(selectedbatchmaster)=>{\r\n      const addSampleID = this.state.controlMap.has(\"AddSamples\") && this.state.controlMap.get(\"AddSamples\").ncontrolcode\r\n        if(selectedbatchmaster.ntransactionstatus == transactionStatus.INITIATED || \r\n            selectedbatchmaster.ntransactionstatus == transactionStatus.COMPLETED){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n        }else{\r\n            this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n                this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value,addSampleID)\r\n            }\r\n     }\r\n\r\n     getIqcSamples = (SelectedBatchmaster) =>{\r\n        if(SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        }else if (this.props.Login.masterData.Samples.length==0){\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n        }else{\r\n        let addcontrolcode=this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n        let inputData={};\r\n            inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData['naddcontrolCode']=addcontrolcode;\r\n            // inputData['section']={\r\n            //         nsectioncode: SelectedBatchmaster.nsectioncode\r\n           // };\r\n            inputData['nsectioncode']=SelectedBatchmaster.nsectioncode;\r\n            inputData['userInfo']=this.props.Login.userInfo;\r\n            inputData['nbatchmastercode']= SelectedBatchmaster.nbatchmastercode;\r\n        this.props.getIqcSamples(inputData,this.props.Login.masterData);\r\n      }\r\n    }\r\n\r\n     deleteRecord = (inputData) => {\r\n\r\n        if(this.props.Login.masterData.SelectedBatchmaster == transactionStatus.INITIATED || \r\n            this.props.Login.masterData.SelectedBatchmaster === transactionStatus.INITIATED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n            }else{\r\n\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchsampleCode\",\r\n                    primaryKeyValue: inputData.selectedRecord.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/getSampleTabDetails\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                const inputParam = {\r\n                    classUrl: \"batchcreation\",\r\n                    methodUrl: \"Sample\",\r\n                    postParam,\r\n                    inputData: {\r\n                        Sample: inputData.selectedRecord,\r\n                        \"userInfo\": this.props.Login.userInfo,\r\n                        nbatchsamplecode: inputData.selectedRecord.nbatchsamplecode,\r\n                        masterData : this.props.Login.masterData,\r\n                        nbatchmastercode : inputData.selectedRecord.nbatchmastercode,\r\n                        userinfo: this.props.Login.userInfo,\r\n                        ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode\r\n                    },\r\n                    operation: inputData.operation,\r\n                    displayName: this.props.Login.inputParam.displayName,\r\n                    dataState: this.state.dataState\r\n                }\r\n              if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, inputData.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                        typeName: DEFAULT_RETURN,\r\n                        data: {\r\n                            loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                            openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                            operation: inputData.operation\r\n                        }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }\r\n                else {\r\n                    this.props.deleteSampleAction(inputParam.inputData);\r\n                }\r\n            }\r\n       }\r\n\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n\r\n        if (screenName == \"IDS_BATCHHISTORY\") {\r\n         \r\n                let inputData = {\r\n                    masterData:this.props.Login.masterData,\r\n                    userInfo: this.props.Login.userInfo,\r\n                    nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n                }\r\n                this.props.getBatchhistoryAction(inputData, true);\r\n        }  if (screenName == \"IDS_BATCHIQCSAMPLE\") {\r\n         \r\n            let inputData = {\r\n                masterData:this.props.Login.masterData,\r\n                userInfo: this.props.Login.userInfo,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode\r\n            }\r\n            this.props.getBatchIqcSampleAction(inputData, true);\r\n         }\r\n        else{    \r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { screenName,activeKey : screenName }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n         }\r\n    }\r\n\r\n\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Samples, event.dataState),\r\n            sampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchHistoryChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.Batchhistory, event.dataState),\r\n            histortState: event.dataState\r\n        });\r\n    }\r\n\r\n    dataStateBatchIqcChangeChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.props.Login.masterData.iqcsample, event.dataState),\r\n            iqcsampleState: event.dataState\r\n        });\r\n    }\r\n\r\n    gridfillingColumn(data) {\r\n        const temparray = data && data.map((option) => {\r\n          return { \"idsName\": option[designProperties.LABEL][this.props.Login.userInfo.slanguagetypecode], \r\n                   \"dataField\": option[designProperties.VALUE] == \"null\" ? '-' : option[designProperties.VALUE],\r\n                    \"width\": \"150px\", \"columnSize\": \"4\" };\r\n    \r\n        });\r\n        return temparray;\r\n    \r\n      }\r\n\r\n      getApprovalVersion = (data) => {\r\n        let inputData = [];\r\n\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n            this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n         \r\n        inputData = {\r\n            nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n            fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n            toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n            nregtypecode: data.item.nregtypecode,\r\n            userInfo: this.props.Login.userInfo,\r\n            nregsubtypecode: data.item.nregsubtypecode,\r\n            masterData : this.props.Login.masterData,\r\n            isneedapprovalfilter : true,\r\n            defaultRegistrationSubType:data.item\r\n        }\r\n        this.props.getBCApprovalConfigVersion(inputData)\r\n    \r\n      }\r\n    \r\n   tabDetail = () => {\r\n        const tabMap = new Map();\r\n        tabMap.set(\"IDS_SAMPLE\",\r\n        <SampleTab\r\n            sample={this.props.Login.masterData.Samples || []}\r\n            dataResult={process(this.props.Login.masterData.Samples || [], this.state.sampleState)}\r\n            dataState={this.state.sampleState}\r\n            controlMap={this.state.controlMap}\r\n            dataStateChange={this.dataStateChange}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            userInfo={this.props.Login.userInfo}\r\n            deleteRecord={this.deleteRecord}\r\n            extractedColumnList={this.gridfillingColumn(this.state.DynamicGridItem) || []}\r\n            detailedFieldList={this.gridfillingColumn(this.state.DynamicGridMoreItem) || []}\r\n            methodUrl={\"Samples\"}\r\n            getSamples={() => this.getSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n            // getSamples={() => this.props.getSamplesForGrid(this.props.Login.masterData.SelectedBatchmaster.ntestcode,this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n            //     this.props.Login.userInfo,this.props.Login.masterData,this.props.Login.masterData.defaultRegistrationType.nregtypecode,this.state.nregsubtypecode.value)}\r\n            //inputParam={this.props.Login.inputParam}\r\n            screenName=\"IDS_SAMPLE\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n        />\r\n        )\r\n\r\n        tabMap.set(\"IDS_BATCHHISTORY\",\r\n        <BatchhistoryTab\r\n            batchhistory={this.props.Login.masterData.Batchhistory || []}\r\n            dataResult={process(this.props.Login.masterData.Batchhistory || [], this.state.histortState)}\r\n            dataState={this.state.histortState}\r\n            dataStateChange={this.dataStateBatchHistoryChange}\r\n            userInfo={this.props.Login.userInfo}\r\n            methodUrl={\"Batchhistory\"}\r\n            screenName=\"IDS_BATCHHISTORY\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n        />\r\n        )\r\n\r\n        tabMap.set(\"IDS_BATCHIQCSAMPLE\",\r\n        <BatchIqcSampleTab\r\n            iqcsample={this.props.Login.masterData.iqcsample || []}\r\n            dataResult={process(this.props.Login.masterData.iqcsample || [], this.state.iqcsampleState)}\r\n            dataState={this.state.iqcsampleState}\r\n            controlMap={this.state.controlMap}\r\n            dataStateChange={this.dataStateBatchIqcChangeChange}\r\n            userRoleControlRights={this.state.userRoleControlRights}\r\n            userInfo={this.props.Login.userInfo}\r\n            methodUrl={\"IqcSamples\"}\r\n            getIqcSamples={() => this.getIqcSamples(this.props.Login.masterData.SelectedBatchmaster)}\r\n            screenName=\"IDS_BATCHIQCSAMPLE\"\r\n            nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n        />\r\n        )\r\n\r\n        return tabMap;\r\n    }\r\n\r\n\r\n    onFilterComboChange = (event, fieldname) => {\r\n        if (event !== null) {\r\n            let inputData = [];\r\n\r\n            if (fieldname === \"fromDate\") {\r\n                let dateObj = convertDateValuetoString(event, this.props.Login.masterData.toDate, this.props.Login.userInfo)\r\n                inputData = {\r\n                    nflag: 2,\r\n                    fromdate: dateObj.fromDate,//this.OnDateConverstion(event, fieldname),\r\n                    todate: dateObj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n            if (fieldname === \"toDate\") {\r\n\r\n                let dateObj = convertDateValuetoString(this.props.Login.masterData.fromDate, event, this.props.Login.userInfo)\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    fromdate: dateObj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: dateObj.toDate,//this.OnDateConverstion(event, fieldname),\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getBCApprovalConfigVersion(inputData)\r\n            }\r\n\r\n            // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate, \r\n            //                  this.props.Login.masterData.toDate, this.props.Login.userInfo); \r\n\r\n            if (fieldname === \"nsampletypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 2,\r\n                    nsampletypecode: parseInt(event.value),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultSampleType: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getBCRegistrationType(inputData)\r\n            }\r\n            else if (fieldname === \"nregtypecode\") {\r\n\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n\r\n                inputData = {\r\n                    nflag: 3,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    fromDate: obj.fromDate,//(this.state.selectedRecord && this.state.selectedRecord[\"fromDate\"]) || this.props.Login.masterData.fromDate,\r\n                    toDate: obj.toDate,//(this.state.selectedRecord && this.state.selectedRecord[\"toDate\"]) || this.props.Login.masterData.toDate,\r\n                    nregtypecode: parseInt(event.value),\r\n                    userInfo: this.props.Login.userInfo,\r\n                    defaultRegistrationType: event.item,\r\n                    defaultSampleType:this.props.Login.masterData.defaultSampleType\r\n                }\r\n                this.props.getBCRegistrationSubType(inputData,this.props.Login.masterData)\r\n            }\r\n            else if (fieldname === \"nregsubtypecode\") {\r\n                const nregsubtypecode = this.state;\r\n                //this.setState({ nregsubtypecode:event });\r\n                this.getApprovalVersion(event);\r\n                \r\n            }\r\n\r\n            else if (fieldname === 'ndesigntemplatemappingcode') {\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                const inputParamData = {\r\n                    nflag: 3,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: this.props.Login.masterData.ApprovalConfigVersion[0].napprovalconfigversioncode,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    masterData: this.props.Login.masterData,\r\n                    //defaultFilterStatus: event.item,\r\n                    defaultRegistrationSubType: this.props.Login.masterData.defaultRegistrationSubType,\r\n                    ntranscode: String(this.props.Login.masterData.defaultFilterStatus.ntransactionstatus),\r\n                    nneedsubsample: this.props.Login.masterData.nneedsubsample || 4,\r\n                    // stransactionstatus: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus === 0 ? this.props.Login.masterData.FilterStatus.map(item => item.ntransactionstatus).join(\",\") : this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                    //nsectioncode: this.props.Login.masterData.UserSectionValue.nsectioncode === -1 ? this.props.Login.masterData.UserSection.map(item => item.nsectioncode).join(\",\") : this.props.Login.masterData.UserSectionValue.nsectioncode,\r\n                    ndesigntemplatemappingcode: event.value,\r\n                    DesignTemplateMappingValue: event.item\r\n                }\r\n                //this.props.getREFilterTestData(inputParamData)\r\n                this.props.getBCFilterTemplate(inputParamData)\r\n\r\n            }\r\n\r\n            else if (fieldname === \"version\") {\r\n\r\n                // let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                //     this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                // inputData = {\r\n                //     nflag: 4,\r\n                //     fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                //     todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                //     nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                //     nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                //     nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                //     napprovalversioncode: event.value,\r\n                //     userinfo: this.props.Login.userInfo,\r\n                //     defaultApprovalConfigVersion: event.item,\r\n                //     masterData: this.props.Login.masterData,\r\n                //     ndesigntemplatemappingcode: this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode : -1\r\n                // }\r\n                // this.props.getBCJobStatus(inputData)\r\n                const ApprovalVersionValue = this.state;\r\n                this.setState({ ApprovalVersionValue:event });\r\n            }\r\n            else if (fieldname === \"jobstatus\") {\r\n\r\n                let obj = convertDateValuetoString(this.props.Login.masterData.fromDate,\r\n                    this.props.Login.masterData.toDate, this.props.Login.userInfo);\r\n\r\n                inputData = {\r\n                    nflag: 5,\r\n                    fromdate: obj.fromDate,//this.props.Login.masterData.fromDate,\r\n                    todate: obj.toDate,//this.props.Login.masterData.toDate,\r\n                    nsampletypecode: parseInt(this.props.Login.masterData.defaultSampleType.nsampletypecode),\r\n                    nregtypecode: parseInt(this.props.Login.masterData.defaultRegistrationType.nregtypecode),\r\n                    nregsubtypecode: parseInt(this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode),\r\n                    napprovalversioncode: parseInt(this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode),\r\n                    njobstatuscode: event.value,\r\n                    userinfo: this.props.Login.userInfo,\r\n                    defaultjobstatus: event.item,\r\n                    masterData: this.props.Login.masterData,\r\n                }\r\n                this.props.getBCFilterStatus(inputData)\r\n            }\r\n            else if (fieldname === \"filter\") {\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue:event });\r\n                \r\n            }\r\n            else if(fieldname === \"test\") {\r\n\r\n                const FilterStatusValue = this.state;\r\n                this.setState({ FilterStatusValue:event });\r\n            }else{\r\n                const selectedRecord = this.state;\r\n                this.setState({ selectedRecord:event });\r\n            }\r\n        }\r\n    }\r\n\r\n    handleFilterDateChange = (dateValue,dateName) => {\r\n            const { selectedFilter } = this.state;\r\n            if (dateValue === null) {\r\n                dateValue = new Date();\r\n            }\r\n            selectedFilter[dateName] = dateValue;\r\n            this.setState({ selectedFilter });\r\n    \r\n    }\r\n\r\n    // headerSelectionChange = (event) => {\r\n    //     const checked = event.syntheticEvent.target.checked;\r\n    //     let addedComponentList = this.state.addedComponentList || [];\r\n    //     if (checked) {\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             if (addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n    //                 addedComponentList.push({ ...item, selected: false });\r\n    //                 item.selected = checked;\r\n    //                 return item;\r\n    //             } else {\r\n    //                 let olditem = JSON.parse(JSON.stringify(addedComponentList[addedComponentList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n    //                 olditem.selected = checked;\r\n    //                 return olditem;\r\n    //             }\r\n\r\n    //         });\r\n\r\n\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    //     else {\r\n    //         let addedComponentData = this.state.addedComponentList || [];\r\n    //         let deletedListdData = this.state.deletedList || [];\r\n\r\n    //         const data = this.state.addComponentDataList.map(item => {\r\n    //             addedComponentData = addedComponentData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n    //             item.selected = checked;\r\n    //             return item;\r\n    //         });\r\n\r\n    //         // console.log(\"data:\",data1, data2);\r\n    //         this.setState({\r\n    //             addComponentDataList: data, addedComponentList: addedComponentData, deletedList: deletedListdData,\r\n    //             addSelectAll: checked, deleteSelectAll: false\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n    valiateCheckAll(data) {\r\n        let selectAll = true;\r\n        // let checkRepeatComponent;\r\n        //  let addedComponentList = this.state.addedComponentList || [];\r\n        if (data && data.length > 0) {\r\n            data.forEach(dataItem => {\r\n                if (dataItem.selected) {\r\n                    if (dataItem.selected === false) {\r\n                        selectAll = false;\r\n                    }\r\n                }\r\n                else {\r\n                    selectAll = false;\r\n                    // checkRepeatComponent=this.state.addComponentDataList.filter(item=>item.npreregno==data.npreregno)\r\n                    // if(checkRepeatComponent.length>0){\r\n                    //     selectAll = true;\r\n                    // }else{\r\n                    //     selectAll = false;\r\n                    // }\r\n                }\r\n            })\r\n        }\r\n        else {\r\n            //if (gridType === \"originalgrid\"){\r\n            selectAll = false;\r\n            // }\r\n        }\r\n        return selectAll;\r\n    }\r\n\r\n\r\n    \r\n    headerSelectionChange = (event) => {\r\n        const checked = event.syntheticEvent.target.checked;\r\n        let sampleList = this.state.samples || [];\r\n        let addedSamplesList=[];\r\n        if (checked) {\r\n            const data = event.dataItems.map(item => {\r\n                if (sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode) === -1) {\r\n                    sampleList.push({ ...item, selected: false });\r\n                    item.selected = checked;   \r\n                    let newItem = JSON.parse(JSON.stringify(item));\r\n                    newItem.selected = false;\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item    \r\n                    addedSamplesList.push(newItem);\r\n                    return item;\r\n                } else {\r\n                    let olditem = JSON.parse(JSON.stringify(sampleList[sampleList.findIndex(x => x.ntransactiontestcode === item.ntransactiontestcode)]))\r\n                    olditem.selected = checked;\r\n                    let newItem = JSON.parse(JSON.stringify(olditem));\r\n                    newItem.selected = false;\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = olditem\r\n                    newItem[\"jsonuidata\"]['samplelist'] = olditem\r\n                    addedSamplesList.push(newItem);\r\n                    return olditem;\r\n                    \r\n                }\r\n\r\n            });\r\n\r\n\r\n            this.setState({\r\n                samples: data,\r\n                addedSamplesList:addedSamplesList,\r\n                sampleList,\r\n                addSelectAll: checked, \r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n        else {\r\n            // let sampleListData = this.state.sampleList || [];\r\n            // let deletedListdData = this.state.sampleList || [];\r\n\r\n            let sampleListData = this.state.samples || [];\r\n            let deletedListdData = this.state.samples || [];\r\n\r\n            const data = this.state.samples.map(item => {\r\n                sampleListData = sampleListData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                deletedListdData = deletedListdData.filter(item1 => item1.npreregno !== item.npreregno);\r\n                item.selected = checked;\r\n                return item;\r\n            });\r\n\r\n            // console.log(\"data:\",data1, data2);\r\n            this.setState({\r\n                samples: data, \r\n                addedSamplesList: sampleListData,\r\n                deletedList: deletedListdData,\r\n                addSelectAll: checked, \r\n                deleteSelectAll: false\r\n            });\r\n        }\r\n\r\n        // const data = this.state.addComponentDataList.map(item=>{\r\n        //     if (checked){\r\n        //         addedComponentList.push({...item, selected:false});\r\n        //     }\r\n        //     else{\r\n        //         data1 = data1.filter(item1=>item1.npreregno !== item.npreregno);\r\n        //         data2 = data2.filter(item1=>item1.npreregno !== item.npreregno);      \r\n        //     }  \r\n        //     item.selected = checked;\r\n        //     return item;\r\n        // });\r\n\r\n    }\r\n\r\n\r\n\r\n    selectionChange = (event) => {\r\n        //let addedSamplesList=this.state.addedSamplesList || [];\r\n        let addedSamplesList= [];\r\n        let samples = this.state.samples || [];\r\n        const samplesList = this.state.samples.map(item => {\r\n            if (item.ntransactiontestcode === event.dataItem.ntransactiontestcode) {\r\n                item.selected = !event.dataItem.selected;\r\n                if (item.selected) {\r\n                    const newItem = JSON.parse(JSON.stringify(item));\r\n                    newItem.selected = false;\r\n                    newItem[\"jsondata\"]={};\r\n                    newItem[\"jsonuidata\"]={};\r\n                    newItem[\"jsondata\"]['samplelist'] = item\r\n                    newItem[\"jsonuidata\"]['samplelist'] = item\r\n                    addedSamplesList.push(newItem);\r\n                }\r\n                else {\r\n                    // if(addedSamplesList.length === 0){\r\n                    //     addedSamplesList = lstsamples.filter(item1 => item1.ntransactiontestcode !== item.ntransactiontestcode)\r\n                    //   }else{\r\n                        this.state.samples.map((item1,index) => { \r\n                            if(item1.ntransactiontestcode == event.dataItem.ntransactiontestcode){\r\n                                if(this.state.samples.length == 1){\r\n                                    addedSamplesList=[];\r\n                                }else{\r\n                                    const newItem = JSON.parse(JSON.stringify(item1));\r\n                                    newItem.selected = false;\r\n                                    newItem[\"jsondata\"]={};\r\n                                    newItem[\"jsonuidata\"]={};\r\n                                    newItem[\"jsondata\"]['samplelist'] = item1\r\n                                    newItem[\"jsonuidata\"]['samplelist'] = item1\r\n                                    addedSamplesList.push(newItem);\r\n                                }  \r\n                            }\r\n                        } \r\n                      )\r\n                 }\r\n            }\r\n            return item;\r\n        });\r\n        ///samplesList = addedSamplesList;\r\n        this.setState({\r\n            samplesList,\r\n            addedSamplesList,\r\n            samples,\r\n            initialList :addedSamplesList,\r\n            addSelectAll: this.valiateCheckAll(samplesList),\r\n            deleteSelectAll: this.valiateCheckAll(samplesList)\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        let reportActionList=[];\r\n        const getBatch = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            operation: \"get\", \r\n            masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo, methodUrl: \"Batchcreation\", keyName: \"batchcreation\"\r\n        };\r\n        this.fromDate = (this.state.selectedFilter[\"fromdate\"] && this.state.selectedFilter[\"fromdate\"]) || this.props.Login.masterData && this.props.Login.masterData.realFromDate ? rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realFromDate):undefined;\r\n        this.toDate = (this.state.selectedFilter[\"todate\"] && this.state.selectedFilter[\"todate\"]) || this.props.Login.masterData && this.props.Login.masterData.realToDate ? rearrangeDateFormat(this.props.Login.userInfo,this.props.Login.masterData.realToDate):undefined;\r\n        const addId = this.state.controlMap.has(\"AddBatchCreation\") && this.state.controlMap.get(\"AddBatchCreation\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditBatchcreation\") && this.state.controlMap.get(\"EditBatchcreation\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteBatchcreation\") && this.state.controlMap.get(\"DeleteBatchcreation\").ncontrolcode;\r\n        const testStartId = this.state.controlMap.has(\"BatchInitiate\") && this.state.controlMap.get(\"BatchInitiate\").ncontrolcode;\r\n        const completeId = this.state.controlMap.has(\"BatchComplete\") && this.state.controlMap.get(\"BatchComplete\").ncontrolcode;\r\n        const addParam = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            primaryeyField: \"nreleasebatchcode\",\r\n            primaryKeyValue: undefined, \r\n            operation: \"create\", inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo, \r\n            ncontrolCode: addId,\r\n            nneedtestinitiate: this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate ,\r\n            masterData:this.props.Login.masterData,\r\n            fromdate:this.props.Login.masterData.fromDate,\r\n            todate:this.props.Login.masterData.toDate,\r\n            napprovalversioncode:this.props.Login.masterData.defaultApprovalConfigVersion && this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,\r\n            ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n            nregtypecode:this.props.Login.masterData.defaultRegistrationType && this.props.Login.masterData.defaultRegistrationType.nregtypecode,\r\n            nregsubtypecode:this.props.Login.masterData.defaultRegistrationSubType && this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,\r\n            ntranscode:this.props.Login.masterData.defaultFilterStatus && this.props.Login.masterData.defaultFilterStatus.ntransactionstatus\r\n        };\r\n\r\n        const viewInfoFields = [\r\n        { \"fieldName\": \"sbatcharno\", \"label\": \"IDS_BATCHARNO\"},\r\n        { \"fieldName\": \"ssectionname\", \"label\": \"IDS_SECTION\"},\r\n        { \"fieldName\": \"stestname\", \"label\": \"IDS_TESTNAME\"},\r\n        { \"fieldName\": \"sinstrumentcatname\", \"label\": \"IDS_INSTRUMENTCATEGORY\" },\r\n        { \"fieldName\": \"sinstrumentname\", \"label\": \"IDS_INSTRUMENTNAME\" },\r\n        { \"fieldName\": \"sproductname\", \"label\": \"IDS_SAMPLETYPE\" },\r\n        { \"fieldName\": \"stransdisplaystatus\", \"label\": \"IDS_STATUS\" },\r\n        { \"fieldName\": \"username\", \"label\":\r\n        this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.INITIATED ? \"IDS_BATCHINITIATEDBY\":\r\n        this.props.Login.masterData.SelectedBatchmaster && this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED ? \"IDS_BATCHCOMPLETEDBY\"\r\n        :\"IDS_BATCHCREATEDBY\"}\r\n      ];\r\n\r\n        let stransactionstatuscode = this.props.Login.masterData.SelectedFilterStatus ? String(this.props.Login.masterData.SelectedFilterStatus.ntransactionstatus) : null;\r\n\r\n        if (this.state.selectedRecord && this.state.selectedRecord[\"nfiltertransstatus\"] !== undefined) {\r\n            stransactionstatuscode = this.state.selectedRecord[\"nfiltertransstatus\"].value === String(0) ? null : String(this.state.selectedRecord[\"nfiltertransstatus\"].value);\r\n        }\r\n\r\n      \r\n         let obj = convertDateValuetoString(this.props.Login.masterData.realFromDate, this.props.Login.masterData.realToDate, \r\n            this.props.Login.userInfo);\r\n            \r\n        const editParam = {\r\n            screenName: \"IDS_BATCHCREATION\", \r\n            operation: \"update\",\r\n            primaryKeyField: \"nbatchmastercode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: editId,\r\n            masterData: this.props.Login.masterData,\r\n            naddcontrolCode:addId,\r\n            nsampletypecode:this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA,\r\n            nregtypecode : this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA,\r\n            nregsubtypecode : this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA\r\n        };\r\n\r\n\r\n        const filterParam = {\r\n            inputListName: \"Batchmaster\", \r\n            selectedObject: \"SelectedBatchmaster\", \r\n            primaryKeyField: \"nbatchmastercode\",\r\n            fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n           \r\n            fecthInputObject: {\r\n                fromDate : obj.fromDate,\r\n                toDate : obj.toDate,\r\n                userInfo: this.props.Login.userInfo,\r\n                ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode,\r\n                napprovalconfigcode:this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA,\r\n                ntranscode:this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT,\r\n                nsampletypecode:this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA,\r\n                //fromDate, toDate, \r\n                //stransactionstatuscode,\r\n                //activeBCTab: this.props.Login.activeBCTab || \"IDS_COMPONENT\"\r\n            },\r\n            masterData: this.props.Login.masterData, \r\n            //unchangeList: [\"FromDate\", \"ToDate\", \"SelectedFilterStatus\"],\r\n            searchFieldList: this.searchFieldList\r\n        }\r\n\r\n        this.breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": obj.breadCrumbFrom\r\n            }, {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": obj.breadCrumbto\r\n            },\r\n            // {\r\n            //     \"label\": \"IDS_SAMPLETYPE\",\r\n            //     \"value\": this.props.Login.masterData.realSampleTypeValue && this.props.Login.masterData.realSampleTypeValue.ssampletypename ? this.props.Login.masterData.realSampleTypeValue.ssampletypename : \"Product\"\r\n            // }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.sregtypename ? this.props.Login.masterData.realRegTypeValue.sregtypename : \"NA\"\r\n                // \"value\": this.props.Login.masterData.realRegTypeValue ? this.props.Login.masterData.realRegTypeValue.sregtypename || \"NA\" :\r\n                // this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.sregtypename || \"NA\" : \"NA\"\r\n            }, \r\n            {\r\n                \"label\": \"IDS_REGISTRATIONSUBTYPE\",\r\n                \"value\": this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.sregsubtypename ? this.props.Login.masterData.realRegSubTypeValue.sregsubtypename : \"NA\"\r\n            },\r\n            {\r\n                \"label\": \"IDS_BATCHSTATUS\",\r\n                \"value\": this.props.Login.masterData.defaultFilterStatus && this.props.Login.masterData.defaultFilterStatus.sfilterstatus ? this.props.Login.masterData.defaultFilterStatus.sfilterstatus : \"NA\"\r\n            }\r\n            // {\r\n            //     \"label\": \"IDS_CONFIGVERSION\",\r\n            //     \"value\": this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.sversionname ? this.props.Login.masterData.realApproveConfigVersion.sversionname : \"NA\"\r\n            // }\r\n        ]\r\n        return (<>\r\n            {/* Start of get display*/}\r\n            {/* <div className=\"client-listing-wrap mtop-4 mtop-fixed-breadcrumb\"> */}\r\n            <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n            <Affix top={53}>\r\n            <BreadcrumbComponent breadCrumbItem={this.breadCrumbData} />\r\n            </Affix>\r\n                <Row noGutters={true}>\r\n                    <Col md={4}>\r\n                            <ListMaster\r\n                                masterList={this.props.Login.masterData.searchedData || (this.props.Login.masterData.Batchmaster || [])}\r\n                                selectedMaster={this.props.Login.masterData.SelectedBatchmaster}\r\n                                primaryKeyField=\"nbatchmastercode\"\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterData={this.props.Login.masterData}\r\n                                //getMasterDetail={this.props.getSelectedBatchCreationDetail}\r\n                                getMasterDetail={(batch) => this.props.getSelectedBatchCreationDetail(batch, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                inputParam = {getBatch}\r\n                                screenName={this.props.intl.formatMessage({ id: \"IDS_BATCHCREATION\" })}\r\n                                //mainField=\"stestname\"\r\n                                mainField=\"sbatcharno\"\r\n                                firstField=\"stestname\"\r\n                                secondField=\"sinstrumentname\"\r\n                                selectedListName=\"SelectedBatchmaster\"\r\n                                objectName=\"BatchCreation\"\r\n                                listName=\"IDS_BATCHCREATION\"\r\n                                needValidation={false}\r\n                                hidePaging={false}\r\n                                // subFields={\r\n                                //     [\r\n                                //         { [designProperties.VALUE]: \"sinstrumentcatname\" },\r\n                                //         { [designProperties.VALUE]: \"sinstrumentname\" },\r\n                                //         // { [designProperties.VALUE]: \"smahname\" },\r\n                                //         // { [designProperties.VALUE]: \"stransactionstatus\", [designProperties.COLOUR]: \"transstatuscolor\" }\r\n                                //     ]\r\n                                // }\r\n                                needFilter={true}\r\n                                needMultiSelect={false}\r\n                                subFieldsLabel={true}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                searchListName=\"searchedData\"\r\n                                searchRef={this.searchRef}\r\n                                filterParam={filterParam}\r\n                                // skip={this.state.skip}\r\n                                // take={this.state.take}\r\n                               // handlePageChange={this.handlePageChange}\r\n                                addId={addId}\r\n                                showFilterIcon={true}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                reloadData={this.reloadData}\r\n                                openModal={() => this.props.getBatchSection(addParam)}\r\n                               // openModal={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                commonActions={\r\n                                    // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n                                    <ProductList className=\"d-flex product-category float-right\">\r\n                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' /> */}\r\n                                        <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                            hidden={this.state.userRoleControlRights.indexOf(addId) === -1}\r\n                                            onClick={() => this.props.getTestInstrumentComboService(addParam)}\r\n                                        >\r\n                                            <FontAwesomeIcon icon={faPlus} />\r\n                                        </Button>\r\n                                        <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                            data-for=\"tooltip-common-wrap\"\r\n                                            //onClick={() => this.reloadData(false)} \r\n                                        >\r\n                                            <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                        </Button>\r\n\r\n                                    </ProductList>\r\n                                    // </Tooltip>\r\n                                }\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":<BatchCreationFilter\r\n                                        fromDate={this.state.selectedFilter[\"fromDate\"] !=undefined ?\r\n                                        rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"fromDate\"])  : this.fromDate}\r\n                                        toDate={this.state.selectedFilter[\"toDate\"] !=undefined  ? \r\n                                        rearrangeDateFormat(this.props.Login.userInfo,this.state.selectedFilter[\"toDate\"]) :  this.toDate}\r\n                                        SampleType={this.state.SampleType || []}\r\n                                        SampleTypeValue={this.props.Login.masterData.defaultSampleType || []}\r\n                                        RegType={this.state.RegistrationType || []}\r\n                                        RegTypeValue={this.props.Login.masterData.defaultRegistrationType || []}\r\n                                        RegSubType={this.state.RegistrationSubType || []}\r\n                                        RegSubTypeValue={this.state.nregsubtypecode || []}\r\n                                        DesignTemplateMappingValue={this.props.Login.masterData.DesignTemplateMappingValue || []}\r\n                                        FilterStatus={this.state.BCFilterStatus || []}\r\n                                        FilterStatusValue={this.state.FilterStatusValue || []}\r\n                                        ApprovalVersion={this.state.ApprovalConfigVersion || []}\r\n                                        ApprovalVersionValue={this.state.ApprovalVersionValue || []}\r\n                                        REJobStatus={this.state.REJobStatus || []}\r\n                                        JobStatusValue={this.props.Login.masterData.defaultjobstatus || []}\r\n                                        Test={this.state.Testvalues || []}\r\n                                        TestValue={this.props.Login.masterData.selectedTestSynonym || []}\r\n                                        onFilterComboChange={this.onFilterComboChange}\r\n                                        handleDateChange={this.handleDateChange}\r\n                                        handleFilterDateChange={this.handleFilterDateChange}\r\n                                        userInfo={this.props.Login.userInfo}\r\n                                        onDesignTemplateChange={this.onDesignTemplateChange}\r\n                                        DynamicDesignMapping={this.state.stateDynamicDesign || []}\r\n                                    />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n                             <Col md='8'>\r\n                                {/* <Row> */}\r\n                                    {/* <Col md={12}> */}\r\n                                        <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                                {this.props.Login.masterData.Batchmaster && this.props.Login.masterData.Batchmaster.length > 0\r\n                                                    && this.props.Login.masterData.SelectedBatchmaster ?\r\n                                                    <>\r\n                                                        <Card.Header>\r\n                                                            <Card.Title className=\"product-title-main\">\r\n                                                                {this.props.Login.masterData.SelectedBatchmaster.sbatcharno}\r\n                                                            </Card.Title>\r\n                                                            <Card.Subtitle>\r\n                                                                <div className=\"d-flex product-category\">\r\n                                                                    <h2 className=\"product-title-sub flex-grow-1\">\r\n                                                                            <MediaLabel className={`btn btn-outlined ${this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED  ? \"outline-initiate\"\r\n                                                                            : this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED ? \"outline-success\" \r\n                                                                            : \"outline-secondary\"} btn-sm ml-3`}>\r\n                                                                                {this.props.Login.masterData.SelectedBatchmaster.stransdisplaystatus}\r\n                                                                            </MediaLabel>\r\n                                                                        </h2>              \r\n                                                                    {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                                                                    <div className=\"d-inline\">\r\n\r\n                                                                        <Nav.Link name=\"view\" className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWINFO\" })}\r\n                                                                        // hidden={this.props.userRoleControlRights.indexOf(this.props.viewVersionId) === -1}\r\n                                                                        onClick={() => this.props.viewInfo(this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.userInfo,this.props.Login.masterData)}\r\n                                                                        >\r\n                                                                        <FontAwesomeIcon icon={faEye} />\r\n                                                                        </Nav.Link>        \r\n\r\n                                                                        <Nav.Link name=\"editBatchCreation\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                            onClick={() => this.fetchEditData(editParam)}\r\n                                                                            // onClick={() => this.props.getActiveBatchCreationService(editParam,\r\n                                                                            //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                            //  title={this.props.intl.formatMessage({ id: \"IDS_EDITBATCH\" })}\r\n                                                                            />\r\n                                                                        </Nav.Link>\r\n                                                                       { \r\n                                                                      // this.props.Login.masterData && this.props.Login.masterData.nneedtestinitiate == true ?\r\n                                                                        <Nav.Link name=\"initiateBatchCreation\"                                                        //  data-for=\"tooltip-common-wrap\" \r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_INITIATE\" })} \r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(testStartId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            //role=\"button\"\r\n                                                                            onClick={() => this.testPopUpStartActions(testStartId)}\r\n                                                                             >\r\n                                                                            <FontAwesomeIcon icon={faPlay} \r\n                                                                            />\r\n                                                                        {/* </FontIconWrap>  */}\r\n                                                                        </Nav.Link>\r\n                                                                       // :\"\"\r\n                                                                        }\r\n\r\n                                                                        <Nav.Link name=\"completeBatchCreation\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(completeId) === -1}\r\n                                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                                                                            onClick={() => this.completePopUpStartActions(completeId)}\r\n                                                                            //onClick={() => this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,completeId)}\r\n                                                                            // onClick={() => this.props.validateBatchComplete({\r\n                                                                            //     masterData: this.props.Login.masterData,\r\n                                                                            //     userInfo: this.props.Login.userInfo,\r\n                                                                            //     userRoleControlRights: this.props.Login.userRoleControlRights,\r\n                                                                            //     ncontrolCode: completeId,\r\n                                                                            //     nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n                                                                            // })}\r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faCheckCircle}\r\n                                                                            // title={this.props.intl.formatMessage({ id: \"IDS_COMPLETEBATCH\" })}\r\n                                                                            />\r\n                                                                        </Nav.Link>\r\n\r\n                                                                        <Nav.Link name=\"deleteBatchCreation\" className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETEORCANCEL\" })}\r\n                                                                            onClick={() => this.ConfirmDelete( this.props.Login.masterData.SelectedBatchmaster,deleteId,\"delete\")}\r\n                                                                               \r\n                                                                        >\r\n                                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                                                            {/* <ConfirmDialog\r\n                                                                            name=\"deleteMessage\"\r\n                                                                            message={this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" })}\r\n                                                                            doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                            doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                            icon={faTrashAlt}\r\n                                                                            // title={this.props.intl.formatMessage({ id: \"IDS_DELETEBATCH\" })}\r\n                                                                            handleClickDelete={() => this.deleteBatchCreation(\"BatchCreation\", this.props.Login.masterData.SelectedBatchCreation,\r\n                                                                                \"delete\", deleteId, fromDate, toDate)}\r\n                                                                        /> */}\r\n                                                                        </Nav.Link>\r\n\r\n                                                                        {/* <Nav.Link name={\"bc_batchReport\"}\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(studyReportId) === -1}\r\n                                                                        className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_BATCHREPORT\" })}\r\n                                                                        onClick={() => this.onClickReport(this.props.Login.masterData.SelectedBatchCreation,2,studyReportId)}\r\n                                                                    >\r\n                                                                        <Reports className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                                    </Nav.Link>\r\n                                                                    <Nav.Link name={\"bc _report\"}\r\n                                                                        hidden={this.state.userRoleControlRights.indexOf(reportId) === -1}\r\n                                                                        className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                                        title={this.props.intl.formatMessage({ id: \"IDS_REPORT\" })}\r\n                                                                        onClick={() => this.onClickReport(this.props.Login.masterData.SelectedBatchCreation,1,reportId)}\r\n                                                                    >\r\n                                                                        <Reports className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                                    </Nav.Link> */}\r\n\r\n                                                                        {reportActionList.length>0?\r\n                                                                            <CustomPopover\r\n                                                                                nav={true}\r\n                                                                                data={reportActionList}\r\n                                                                                Button={true}\r\n                                                                                hideIcon={true}\r\n                                                                                btnClasses=\"btn-circle btn_grey ml-2\"\r\n                                                                                textKey=\"value\"\r\n                                                                                dynamicButton={(value) => this.reportMethod(value)}\r\n                                                                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                                                            />\r\n                                                                            :\r\n                                                                        \"\"}\r\n\r\n                                                                    </div>\r\n                                                                    {/* </Tooltip> */}\r\n                                                                </div>\r\n\r\n                                                            </Card.Subtitle>\r\n                                                        </Card.Header>\r\n                                                        <Card.Body>\r\n                                                            <Row className=\"no-gutters\">\r\n                                                               <Col md={12}>\r\n                                                                  <Card className=\"at-tabs\">\r\n                                                                    <CustomTab\r\n                                                                     activeKey={this.props.Login.activeKey ? this.props.Login.activeKey : \"IDS_SAMPLE\"}\r\n                                                                     tabDetail={this.tabDetail()} onTabChange={this.onTabChange} \r\n                                                                     />\r\n                                                                   </Card>\r\n                                                               </Col>\r\n                                                            </Row>\r\n                                                            {/* <CustomTab \r\n                                                            activeKey={this.props.Login.activeKey ? this.props.Login.activeKey : \"IDS_SAMPLE\"}\r\n                                                            tabDetail={this.tabDetail()} onTabChange={this.onTabChange} /> */}\r\n                                                        </Card.Body>\r\n                                                    </>\r\n                                                    : \"\"\r\n                                                }\r\n                                        </Card>\r\n                                        </ContentPanel>\r\n                                    {/* </Col> */}\r\n                                {/* </Row> */}\r\n                            </Col>\r\n                    \r\n                </Row>\r\n            </div>\r\n            {/* </ListWrapper> */}\r\n\r\n            {/* End of get display*/}\r\n\r\n            {/* Start of Modal Sideout for User Creation */}\r\n            {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n            {\r\n                this.props.Login.openModal ?\r\n                    <SlideOutModal \r\n                        show={this.props.Login.openModal}\r\n                        size={\"lg\"}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.operation===\"createSample\" ? this.props.intl.formatMessage({ id: \"IDS_SAMPLE\" }) \r\n                        : this.props.Login.operation===\"initiate\" ? this.props.intl.formatMessage({ id: \"IDS_BATCH\" })\r\n                        : this.props.Login.operation===\"createiqcsample\" ? this.props.intl.formatMessage({ id: \"IDS_BATCHIQCSAMPLE\" })\r\n                        : this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.operation === \"create\" ? \r\n                         this.batchMandatoryFields \r\n                         : this.props.Login.operation === \"initiate\"  ?\r\n                           this.initiateMandatoryFields \r\n                         : this.props.Login.operation === \"complete\" ?\r\n                           this.completeMandatoryFields\r\n                         : this.props.Login.operation === \"createiqcsample\" ? \r\n                           this.materialIqcMandatory \r\n                         :  []\r\n                        }\r\n                        showSaveContinue={this.state.showSaveContinue}\r\n                        noSave={this.props.Login.operation === \"view\" ? true : false}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                           : this.props.Login.operation === \"create\" || this.props.Login.operation === \"update\" ?\r\n                            <AddBatchCreation\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                Test={this.state.Testvalues || []}\r\n                                selectedInstrumentCategory={this.state.selectedInstCategory}\r\n                                InstrumentCategory={this.state.InstrumentCategory}\r\n                                Instrument={this.state.Instrument}\r\n                                selectedInstrument={this.state.selectedInstrument}\r\n                                productCategory={this.state.ProductCategory}\r\n                                selectedProductCategory={this.state.selectedProductCategory}\r\n                                TestValue={this.state.selectedTestSynonym || []}\r\n                                product={this.state.Product || []}\r\n                                selectedProduct={this.state.selectedProduct || []}\r\n                                studyPlanList={this.props.Login.studyPlanList || []}\r\n                                manufacturerList={this.props.Login.productManufacturerList || []}\r\n                                maHolderList={this.props.Login.maHolderList || []}\r\n                                timeZoneList={this.props.Login.timeZoneList || []}\r\n                                selectedBacthCreation={this.props.Login.masterData.SelectedBatchmaster || {}}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                onMultiColumnValue={this.onMultiColumnValue}\r\n                                onMultiColumnMAHChange={this.onMultiColumnMAHChange}\r\n                                batchCreationEditStatusList={this.props.Login.batchCreationEditStatusList}\r\n                                Section={this.state.Section}\r\n                                selectedSection={this.state.selectedSection}\r\n                            />\r\n                            :this.props.Login.operation === \"createSample\" ?\r\n                            <AddSample\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                getProductByCategory={this.getProductByCategory}\r\n                                onComboChange={this.onComboChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                userInfo={this.props.userInfo}\r\n                                productCategoryList={this.props.productCategoryList}\r\n                                productList={this.props.productList}\r\n                                componentList={this.props.componentList}\r\n                                getDataForAddComponent={this.getDataForAddComponent}\r\n                                clearComponentInput={this.props.clearComponentInput}\r\n                                samples={this.state.samples || []}\r\n                                headerSelectionChange={this.headerSelectionChange}\r\n                                selectionChange={this.selectionChange}\r\n                                addedComponentList={this.state.addedComponentList || []}\r\n                                addedHeaderSelectionChange={this.addedHeaderSelectionChange}\r\n                                addedSelectionChange={this.addedSelectionChange}\r\n                                //dataStateChange={this.dataStateChange} \r\n                                userRoleControlRights={this.props.userRoleControlRights}\r\n                                controlMap={this.props.controlMap}\r\n                                inputParam={this.props.inputParam}\r\n                                screenName={this.props.screenName}\r\n                                addSelectAll={this.state.addSelectAll}\r\n                                deleteSelectAll={this.state.deleteSelectAll}\r\n                                onDeleteSelectedComponent={this.onDeleteSelectedComponent}\r\n                                componentPopupSkip={this.props.componentPopupSkip}\r\n                                componentPopupTake={this.props.componentPopupTake}\r\n                                componentPageSizes={this.props.componentPageSizes}\r\n                                nneedsubsample = {this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample}\r\n                           />\r\n                           :this.props.Login.operation === \"initiate\" || this.props.Login.operation === \"complete\" ?\r\n                           <AddBatchinitiate\r\n                                userInfo={this.props.Login.userInfo}\r\n                                operation={this.props.Login.operation}\r\n                                handleDateChange={this.handleDateChange}\r\n                                selectedRecord={this.state.selectedRecord}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                           />\r\n                           :this.props.Login.operation === \"view\" ?\r\n                           <Card className='one' >\r\n                           <Card.Body>\r\n                           <ViewInfo\r\n                              userInfo={this.props.Login.userInfo}\r\n                              selectedRecordView={this.props.Login.masterData.selectedRecordView}\r\n                              viewInfoFields={viewInfoFields}\r\n                           />\r\n                           </Card.Body>\r\n                                </Card>\r\n                           : this.props.Login.operation === \"createiqcsample\" ?\r\n                           <AddMaterialIqc\r\n                           userInfo={this.props.Login.userInfo}\r\n                           operation={this.props.Login.operation}\r\n                           materialCategory={this.state.MaterialCategory}\r\n                           selectedMaterialType={this.state.selectedMaterialType}\r\n                           selectedMaterialCategory={this.state.selectedMaterialCategory}\r\n                           onComboChange={this.onComboChange}\r\n                           selectedMaterial={this.state.selectedMaterial}\r\n                           material={this.state.Material}\r\n                           materialInventory={this.state.MaterialInventory}\r\n                           onInputOnChange={this.onInputOnChange}\r\n                           selectedMaterialInventory={this.state.selectedMaterialInventory}\r\n                           selectedInventoryUnit={this.props.Login.masterData.selectedInventoryUnit}\r\n                         />\r\n\r\n                        : \"\"\r\n\r\n                        }\r\n                    /> \r\n                    : \"\"\r\n            }\r\n            {/* End of Modal Sideout for Creation */}\r\n            {this.state.showConfirmAlert ? this.confirmAlert() : \"\"}\r\n        </>\r\n        );\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n\r\n    ConfirmDelete = (selectedBatch, deleteId,operation) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteBatchCreation(selectedBatch,deleteId,operation));\r\n    };\r\n\r\n\r\n    completePopUpStartActions = (completeId) => {\r\n    // if(this.props.Login.masterData.nneedtestinitiate === true){\r\n      if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.COMPLETED || this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT ){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n            }\r\n    //    }else \r\n      else if (this.props.Login.masterData.Samples.length==0){\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n       }else{\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        openModal: true, \r\n                        completeId : completeId,\r\n                        masterData: this.props.Login.masterData,\r\n                       // screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: \"complete\"\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n       }\r\n    \r\n        \r\n    testPopUpStartActions = (testStartId) => {\r\n            if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.INITIATED || this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n            }else if (this.props.Login.masterData.Samples.length==0){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n            }else{\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    openModal: true, \r\n                    testStartId : testStartId,\r\n                    masterData: this.props.Login.masterData,\r\n                    operation: \"initiate\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n           \r\n     }\r\n\r\n    testStartActions = (selectedmaster,testStartId) =>{\r\n        if(selectedmaster.ntransactionstatus == transactionStatus.INITIATED || selectedmaster.ntransactionstatus === transactionStatus.COMPLETED){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n            }else if (this.props.Login.masterData.Samples.length==0){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLEFORINITIATE\" }));\r\n            }else if (this.props.Login.masterData.iqcsample.length==0){\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTIQCSAMPLEFORINITIATE\" }));\r\n            }else{\r\n                let inputData = {};\r\n                let jsonuidata=[];\r\n                const masterData = this.props.Login.masterData;\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/initiateBatchcreation\",\r\n                    isSingleGet: true,\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                    let jsondata = this.props.Login.masterData.Samples.map(item =>{\r\n                                                        return {jsonuidata:item}});\r\n                    inputData[\"fromDate\"]= obj.fromDate;\r\n                    inputData[\"toDate\"]= obj.toDate;\r\n                    inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                    inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                    inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                    inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n                    inputData[\"batchsample\"] = jsondata;\r\n                    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                    inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                    inputData[\"nneedmyjob\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedmyjob; \r\n                    inputData[\"nneedjoballocation\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedjoballocation; \r\n                    inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n                    inputData[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigversioncode : transactionStatus.NA;\r\n                    inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                    inputData[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;\r\n                    inputData[\"Batchhistory\"] ={\r\n                                            dtransactiondate : formatInputDate(this.state.selectedRecord[\"dtransactiondate\"],false),\r\n                                            scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n                                            };\r\n                    inputData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n                    inputData[\"testStartId\"] = testStartId;\r\n                    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n                    inputData[\"npreregno\"] = this.props.Login.masterData.iqcsample.map(sampleiqc =>sampleiqc.npreregno).join(\",\");\r\n                    const inputParam = {\r\n                        postParam,\r\n                        inputData: inputData,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHCREATION\",\r\n                        operation:\"initiate\"\r\n                    }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, testStartId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, masterData },\r\n                                openModal: true, screenName: \"IDS_BATCHCREATION\", \r\n                                operation:inputParam.operation\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }else{\r\n                        this.props.batchInitiateAction(inputData, this.props.Login.masterData,this.confirmMessage);\r\n                    }\r\n         }\r\n    }\r\n\r\n    batchSaveIQCActions =(selectedmaster)=>{\r\n    if(parseFloat(this.state.selectedRecord.susedquantity) <= parseFloat(this.props.Login.masterData.inventoryTransaction.savailablequatity)){\r\n        let userInfo = {};\r\n        let inputRegistrationData = {};\r\n        let inputMaterialInventoryData = {};\r\n        let inputBatchData ={};\r\n        const map = {}\r\n        let batchCreationSampleData = {}; \r\n        let batchCreationTestData = {}; \r\n        let batchCreationSampleArray = [];\r\n        let batchCreationTestArray = [];\r\n        let samplecombinationuniqueArray=[];\r\n        let inputMaterialInventoryArrData=[];\r\n\r\n        batchCreationSampleData[\"nspecsampletypecode\"] =this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.nallottedspeccode : transactionStatus.NA;\r\n        batchCreationSampleData[\"ncomponentcode\"] = this.props.Login.masterData.SelectedBatchmaster.nproductcode;\r\n        batchCreationSampleData[\"slno\"] = 1;\r\n        batchCreationSampleArray.push(batchCreationSampleData);\r\n\r\n        inputRegistrationData[\"nallottedspeccode\"]=this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.nallottedspeccode:transactionStatus.NA;\r\n        inputRegistrationData[\"ntemplatemanipulationcode\"]=transactionStatus.NA;\r\n        inputRegistrationData[\"nregsubtypeversioncode\"]=this.props.Login.masterData.nregsubtypeversioncode;\r\n        inputRegistrationData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode;\r\n        inputRegistrationData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n        inputRegistrationData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n        inputRegistrationData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n\r\n        inputRegistrationData[\"nproductcatcode\"]= this.props.Login.masterData.SelectedBatchmaster.nproductcatcode ? this.props.Login.masterData.SelectedBatchmaster.nproductcatcode : transactionStatus.NA;\r\n        inputRegistrationData[\"nproductcode\"]= transactionStatus.NA;\r\n        inputRegistrationData[\"ninstrumentcatcode\"]= this.props.Login.masterData.SelectedBatchmaster.ninstrumentcatcode;\r\n        inputRegistrationData[\"ninstrumentcode\"]= this.props.Login.masterData.SelectedBatchmaster.ninstrumentcode;\r\n        inputRegistrationData[\"nmaterialcatcode\"]=this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n        inputRegistrationData[\"nmaterialcode\"]=this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n\r\n        inputRegistrationData[\"jsondata\"] = {\r\n            nmaterialcode : this.state.selectedMaterial.value,\r\n            nmaterialcatcode:this.state.selectedMaterialCategory.value,\r\n            sinventoryid:this.state.selectedMaterialInventory.item.sinventoryid,\r\n            nmaterialinventorycode:this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n            smaterial:this.state.selectedMaterial.item.smaterialname,\r\n            smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n            nmaterialtypecode: this.state.selectedMaterialType.value,\r\n            susedquantity:this.state.selectedRecord.susedquantity,\r\n            sunitname:this.props.Login.masterData.inventoryTransaction.sunitname,\r\n            savailablequatity:this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n            //materialtype:this.state.selectedMaterialType.label,\r\n            sremarks:this.state.selectedRecord.sremarks,\r\n        };\r\n        inputRegistrationData[\"jsonuidata\"] = {\r\n            nmaterialcode : this.state.selectedMaterial.value,\r\n            nmaterialcatcode:this.state.selectedMaterialCategory.value,\r\n            sinventoryid:this.state.selectedMaterialInventory.item.sinventoryid,\r\n            nmaterialinventorycode:this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n            smaterial:this.state.selectedMaterial.item.smaterialname,\r\n            smaterialtype: this.state.selectedMaterialType.item.smaterialtypename,\r\n            nmaterialtypecode: this.state.selectedMaterialType.value,\r\n            susedquantity:this.state.selectedRecord.susedquantity,\r\n            sunitname:this.props.Login.masterData.inventoryTransaction.sunitname,\r\n            savailablequatity:this.props.Login.masterData.inventoryTransaction.savailablequatity,\r\n            //materialtype:this.state.selectedMaterialType.label,\r\n            sremarks:this.state.selectedRecord.sremarks,\r\n            \r\n        };\r\n\r\n        // inputMaterialInventoryData = {\r\n        //     jsondata : this.props.Login.masterData.selectedInventoryUnit['jsondata']\r\n        // }\r\n        //  inputMaterialInventoryData = {\r\n        //         nmaterialinventorycode : this.state.selectedMaterialInventory.item.nmaterialinventorycode,\r\n        //         jsondata : {\r\n        //             jsondata:this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n        //             nqtyused: this.state.selectedRecord.susedquantity\r\n        //         },\r\n        //         jsonuidata : {\r\n        //             jsonuidata : this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n        //             nqtyused: this.state.selectedRecord.susedquantity\r\n        //         },\r\n        //         nsectioncode:this.props.Login.masterData.selectedInventoryUnit['nsectioncode']\r\n        //  };\r\n\r\n         inputMaterialInventoryData[\"nmaterialinventorycode\"]= this.state.selectedMaterialInventory.item.nmaterialinventorycode;\r\n         inputMaterialInventoryData[\"jsondata\"] = {\r\n            ...this.props.Login.masterData.selectedInventoryUnit['jsondata'],\r\n            nqtyused : this.state.selectedRecord.susedquantity\r\n         }\r\n         //inputMaterialInventoryData[\"jsondata\"] = this.state.selectedRecord.susedquantity;\r\n         inputMaterialInventoryData[\"nsectioncode\"] = this.props.Login.masterData.selectedInventoryUnit['nsectioncode'];\r\n         inputMaterialInventoryData[\"jsonuidata\"]= {\r\n            ...this.props.Login.masterData.selectedInventoryUnit['jsonuidata'],\r\n            nqtyused : this.state.selectedRecord.susedquantity\r\n         }\r\n     \r\n\r\n        //inputMaterialInventoryArrData.push(inputMaterialInventoryData);\r\n\r\n        batchCreationTestData[\"ntestgrouptestcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.ntestgrouptestcode : transactionStatus.NA;\r\n //     batchCreationTestData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n        batchCreationTestData[\"ntestcode\"] = this.props.Login.masterData.SelectedBatchmaster.ntestcode;\r\n        batchCreationTestData[\"nsectioncode\"] = this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n        batchCreationTestData[\"nmethodcode\"] = this.props.Login.masterData.selectedTestDetails ? this.props.Login.masterData.selectedTestDetails.nmethodcode:transactionStatus.NA;\r\n   //   batchCreationTestData[\"nchecklistversioncode\"]=this.state.selectedTestSynonym ? this.state.selectedTestSynonym.item.nchecklistversioncode:transactionStatus.NA;\r\n        batchCreationTestData[\"nrepeatcountno\"]=1 ;//--\r\n  //    batchCreationTestData[\"ntestretestno\"]=0;\r\n        batchCreationTestData[\"nparametercount\"]=1; //--\r\n        batchCreationTestData[\"slno\"]=1; //--\r\n           \r\n        batchCreationTestArray.push(batchCreationTestData);\r\n      \r\n   \r\n        map[\"nfilterstatus\"]=transactionStatus.PREREGISTER;\r\n        map[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n        userInfo= this.props.Login.userInfo;\r\n        map[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n        map[\"napproveconfversioncode\"]=this.state.ApprovalVersionValue ? this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n        map[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n        map[\"nneedtestinitiate\"] =  this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedtestinitiate;       \r\n        map[\"nmaterialcatcode\"]=this.state.selectedMaterialCategory ? this.state.selectedMaterialCategory.value : transactionStatus.NA;\r\n        map[\"nmaterialcode\"]=this.state.selectedMaterial ? this.state.selectedMaterial.value : transactionStatus.NA;\r\n        map[\"nmaterialtypecode\"]=this.state.selectedMaterialType ? this.state.selectedMaterialType.value : transactionStatus.NA;\r\n\r\n        inputBatchData = this.props.Login.masterData.SelectedBatchmaster ;\r\n          \r\n        map['Registration'] = inputRegistrationData;\r\n        map['Batchsampleiqc'] = inputBatchData;\r\n        map['RegistrationSample'] = batchCreationSampleArray;\r\n        map['testgrouptest'] = batchCreationTestArray;\r\n        map['userInfo'] = userInfo; \r\n        map['samplecombinationunique'] =samplecombinationuniqueArray;\r\n        map['inputMaterialInventoryArrData']=inputMaterialInventoryData;\r\n        \r\n        const inputParam = {\r\n                        inputData: map,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHIQCSAVE\",\r\n                        operation:\"createiqc\"\r\n                    }\r\n\r\n        this.props.batchSaveIQCActions(inputParam.inputData, this.props.Login.masterData);\r\n\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_USEDQTYISGREATERTHANAVAILABLEQTY\" }));\r\n    }\r\n}\r\n    \r\n\r\n    batchCompleteActions = (selectedmaster,completeId) =>{\r\n        if(this.props.Login.masterData.nneedtestinitiate === true){\r\n            if(selectedmaster.ntransactionstatus == transactionStatus.COMPLETED || selectedmaster.ntransactionstatus == transactionStatus.DRAFT ){\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTINITIATEDBATCH\" }));\r\n                }\r\n        }else{\r\n                let inputData = {};\r\n                const masterData = this.props.Login.masterData;\r\n                const postParam = {\r\n                    inputListName: \"Batchmaster\", \r\n                    selectedObject: \"SelectedBatchmaster\",\r\n                    primaryKeyField: \"nbatchmastercode\",\r\n                    primaryKeyValue: selectedmaster.nbatchmastercode,\r\n                    fetchUrl: \"batchcreation/completeBatchcreation\",\r\n                    isSingleGet: true,\r\n                    //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                    fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n                }\r\n                let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                    this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n\r\n                    let jsondata = this.props.Login.masterData.Samples.map(item =>{\r\n                        return {jsonuidata:item}});\r\n\r\n                    inputData[\"fromDate\"]= obj.fromDate;\r\n                    inputData[\"toDate\"]= obj.toDate;\r\n                    inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                    inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                    inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                    inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                    inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                    inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                    inputData[\"nbatchmastercode\"] = selectedmaster.nbatchmastercode;\r\n                    inputData[\"ntransactiontestcode\"] = this.props.Login.masterData.Samples.map(sample =>sample.ntransactiontestcode).join(\",\") ;\r\n                    inputData[\"samples\"] = jsondata;\r\n                    inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                    inputData[\"sbatcharno\"] = selectedmaster.sbatcharno;\r\n                    inputData[\"nneedsubsample\"]= this.state.nregsubtypecode && this.state.nregsubtypecode.item.nneedsubsample; \r\n                    inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n                    this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n                    inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                    inputData[\"Batchhistory\"] ={\r\n                        dtransactiondate : formatInputDate(this.state.selectedRecord[\"dtransactiondate\"],false),\r\n                        scomments : this.state.selectedRecord && this.state.selectedRecord.scomments\r\n                        };\r\n                    inputData[\"completeId\"] = completeId;\r\n                    inputData[\"nneedtestinitiate\"]= this.props.Login.masterData &&  this.props.Login.masterData.nneedtestinitiate;\r\n                    inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || \r\n                                                                                    transactionStatus.NA;\r\n                    const inputParam = {\r\n                        postParam,\r\n                        inputData: inputData,\r\n                        classUrl: \"batchcreation\",\r\n                        methodUrl: \"Batchcreation\",\r\n                        displayName: \"IDS_BATCHCREATION\",\r\n                        operation:\"complete\"\r\n                    }\r\n\r\n                    if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, completeId)) {\r\n                        const updateInfo = {\r\n                            typeName: DEFAULT_RETURN,\r\n                            data: {\r\n                                loadEsign: true, screenData: { inputParam, masterData },\r\n                                openModal: true, screenName: \"IDS_BATCHCREATION\", \r\n                                operation:inputParam.operation\r\n                            }\r\n                        }\r\n                        this.props.updateStore(updateInfo);\r\n                    }else{\r\n                        this.props.batchCompleteAction(inputData, this.props.Login.masterData);\r\n                    }\r\n                  \r\n         }\r\n    }\r\n\r\n    // completeBatchCreation = () => {\r\n    //     const postParam = {\r\n    //         inputListName: \"Batchmaster\", selectedObject: \"SelectedBatchCreation\",\r\n    //         primaryKeyField: \"nreleasebatchcode\",\r\n    //         primaryKeyValue: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode,\r\n    //         fetchUrl: \"batchcreation/getBatchCreation\",\r\n    //         fecthInputObject: this.props.Login.userInfo,\r\n    //     }\r\n    //     const inputParam = {\r\n    //         classUrl: \"batchcreation\",\r\n    //         methodUrl: \"BatchCreation\", postParam,\r\n    //         inputData: {\r\n    //             ncontrolcode: this.props.Login.ncontrolCode,\r\n    //             \"userinfo\": this.props.Login.userInfo,\r\n    //             nreleasebatchcode: this.props.Login.masterData.SelectedBatchCreation.nreleasebatchcode\r\n    //         },\r\n    //         operation: \"complete\", showConfirmAlert: false\r\n    //     }\r\n    //     //this.props.updateStore({ typeName: DEFAULT_RETURN, data: { showConfirmAlert: false } });  \r\n\r\n    //     const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n\r\n    //     if (esignNeeded) {\r\n    //         const updateInfo = {\r\n    //             typeName: DEFAULT_RETURN,\r\n    //             data: {\r\n    //                 loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n    //                 openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n    //                 operation: this.props.Login.operation,\r\n    //             }\r\n    //         }\r\n    //         this.props.updateStore(updateInfo);\r\n    //     }\r\n    //     else {\r\n\r\n    //         this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", {});\r\n    //     }\r\n\r\n    // }\r\n\r\n    closeAlert = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showConfirmAlert: false, loading: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        let {userRoleControlRights, controlMap, selectedRecord = {},  filterData, addedComponentList,\r\n             filterStatusList, dataState, sahDataState, bahDataState,\r\n             chDataState,testCommentDataState, SampleType, RegistrationType, \r\n             RegistrationSubType,BCFilterStatus, REJobStatus, Testvalues, \r\n             ApprovalConfigVersion,skip, take,\r\n             testskip, testtake,selectedFilter,InstrumentCategory,selectedInstCategory,\r\n             ProductCategory,Instrument,selectedInstrument,selectedTestSynonym,nregsubtypecode,\r\n             selectedProductCategory,Product,selectedProduct,samples,addSelectAll,\r\n             deleteSelectAll,ApprovalVersionValue,FilterStatusValue,Section,\r\n             selectedSection,sampleGridItem,subsampleGridItem,testGridItem = [],\r\n             DynamicGridItem,samplegridmoreitem,DynamicGridMoreItem,MaterialCategory,\r\n             selectedMaterialType,Material,selectedMaterial,selectedMaterialCategory,\r\n             MaterialInventory,selectedMaterialInventory} = this.state;\r\n        let isStateChanged = false;\r\n        let bool = false;\r\n       \r\n        if (this.props.Login.masterData.RegistrationSubType &&\r\n            this.props.Login.masterData.RegistrationSubType !== previousProps.Login.masterData.RegistrationSubType) {\r\n            let dataState = {\r\n                skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\r\n                //, group: [{ field: `${this.props.Login.masterData.nneedsubsample ? 'ssamplearno' : 'sarno'}` }] \r\n            }\r\n            bool = true;\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            bool = true;\r\n            isStateChanged = true;\r\n            SampleType = constructOptionList(this.props.Login.masterData.SampleType || [], \"nsampletypecode\", \"ssampletypename\", 'nsampletypecode', 'ascending', 'nsampletypecode', false);\r\n            RegistrationType = constructOptionList(this.props.Login.masterData.RegistrationType || [], \"nregtypecode\", \"sregtypename\", \"nsorter\", 'ascending', 'nregtypecode', false);\r\n            RegistrationSubType = constructOptionList(this.props.Login.masterData.RegistrationSubType || [], \"nregsubtypecode\", \"sregsubtypename\", \"nsorter\", 'ascending', 'nregsubtypecode', false);\r\n            BCFilterStatus = constructOptionList(this.props.Login.masterData.BCFilterStatus || [], \"ntransactionstatus\", \"sfilterstatus\",\"nsorter\", 'ascending', \"ntransactionstatus\", false);\r\n            REJobStatus = constructOptionList(this.props.Login.masterData.REJobStatus || [], 'njobstatuscode', 'sidsjobstatusname', 'ascending', 'njobstatuscode', false);\r\n            Testvalues = constructOptionList(this.props.Login.masterData.Testvalues || [], 'ntestcode', 'stestname', 'ascending', 'ntestcode', false);\r\n            ApprovalConfigVersion = constructOptionList(this.props.Login.masterData.ApprovalConfigVersion || [], 'napprovalconfigversioncode', 'sversionname',\r\n                'ascending', 'napprovalconfigversioncode', false);\r\n            InstrumentCategory=constructOptionList(this.props.Login.masterData.instrumentCategory || [], 'ninstrumentcatcode', 'sinstrumentcatname',\r\n            'ascending', 'ninstrumentcatcode', false);\r\n            Instrument=constructOptionList(this.props.Login.masterData.instrument || [], 'ninstrumentcode', 'sinstrumentname',\r\n            'ascending', 'ninstrumentcode', false);\r\n            ProductCategory=constructOptionList(this.props.Login.masterData.productcategory || [], 'nproductcatcode', 'sproductcatname',\r\n            'ascending', 'nproductcatcode', false);\r\n            Product=constructOptionList(this.props.Login.masterData.product || [], 'nproductcode', 'sproductname',\r\n            'ascending', 'nproductcode', false);\r\n            Section=constructOptionList(this.props.Login.masterData.Section || [], 'nsectioncode', 'ssectionname',\r\n            'ascending', 'nsectioncode', false);\r\n            MaterialCategory=constructOptionList(this.props.Login.masterData.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n            'ascending', 'nmaterialcatcode', false);\r\n            Material=constructOptionList(this.props.Login.masterData.Material || [], 'nmaterialcode', 'smaterialname',\r\n            'ascending', 'nmaterialcode', false);\r\n            MaterialInventory=constructOptionList(this.props.Login.masterData.MaterialInventory || [], 'nmaterialinventtranscode', 'sinventoryid',\r\n            'ascending', 'nmaterialinventtranscode', false);\r\n\r\n\r\n           \r\n            skip = this.props.Login.skip === undefined ? skip : this.props.Login.skip\r\n            take = this.props.Login.take || take\r\n            testskip = this.props.Login.testskip === undefined ? testskip : this.props.Login.testskip\r\n            testtake = this.props.Login.testtake || testtake\r\n            let selectFilterStatus = { ntransactionstatus: transactionStatus.PARTIAL, \r\n                sfilterstatus: this.props.intl.formatMessage({ id: \"IDS_PARTIAL\" }), \r\n                scolorhexcode: \"#800000\" }\r\n            const selectedFilters = this.props.Login.masterData.BCFilterStatus || [];\r\n\r\n            const selectedFiltersNew = JSON.parse(JSON.stringify(selectedFilters));\r\n\r\n            const index = selectedFiltersNew.findIndex(item => item.ntransactionstatus === transactionStatus.PARTIAL)\r\n            if (selectedFiltersNew.length > 0 && index === -1) {\r\n                selectedFiltersNew.push(selectFilterStatus)\r\n            }\r\n\r\n            selectedFilter = selectedFiltersNew;\r\n            SampleType = SampleType.get(\"OptionList\")\r\n            RegistrationType = RegistrationType.get(\"OptionList\")\r\n            RegistrationSubType = RegistrationSubType.get(\"OptionList\")\r\n            BCFilterStatus = BCFilterStatus.get(\"OptionList\")\r\n            REJobStatus = REJobStatus.get(\"OptionList\")\r\n            Testvalues = Testvalues.get(\"OptionList\")\r\n            ApprovalConfigVersion = ApprovalConfigVersion.get(\"OptionList\")\r\n            InstrumentCategory = InstrumentCategory.get(\"OptionList\")\r\n            Instrument=Instrument.get(\"OptionList\")\r\n            ProductCategory=ProductCategory.get(\"OptionList\")\r\n            Product=Product.get(\"OptionList\")\r\n            Section=Section.get(\"OptionList\")\r\n            MaterialCategory=MaterialCategory.get(\"OptionList\")\r\n            Material=Material.get(\"OptionList\")\r\n            MaterialInventory=MaterialInventory.get(\"OptionList\")\r\n            selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory || [];\r\n            samples=this.props.Login.masterData.samples;\r\n            addSelectAll=false;\r\n            deleteSelectAll=true;\r\n            nregsubtypecode=this.props.Login.masterData.defaultRegistrationSubType ?\r\n                {\r\n                    label: this.props.Login.masterData.defaultRegistrationSubType.sregsubtypename,\r\n                    value: this.props.Login.masterData.defaultRegistrationSubType.nregsubtypecode,\r\n                    item: this.props.Login.masterData.defaultRegistrationSubType\r\n                } : \"\"\r\n\r\n            if (this.props.Login.masterData.selectedTestSynonym !== previousProps.Login.masterData.selectedTestSynonym) {\r\n                    selectedTestSynonym=this.props.Login.masterData.selectedTestSynonym ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedTestSynonym.stestname,\r\n                        value: this.props.Login.masterData.selectedTestSynonym.ntestcode,\r\n                        item: this.props.Login.masterData.selectedTestSynonym\r\n                    } : \"\"\r\n                 isStateChanged = true;\r\n            }\r\n        \r\n            if (this.props.Login.masterData.selectedProductcategory !== previousProps.Login.masterData.selectedProductcategory) {\r\n                        selectedProductCategory=this.props.Login.masterData.selectedProductcategory ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedProductcategory.sproductcatname,\r\n                            value: this.props.Login.masterData.selectedProductcategory.nproductcatcode,\r\n                            item: this.props.Login.masterData.selectedProductcategory\r\n                        } : \"\"\r\n                     isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.masterData.selectedProduct !== previousProps.Login.masterData.selectedProduct) {\r\n                    selectedProduct=this.props.Login.masterData.selectedProduct ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedProduct.sproductname,\r\n                        value: this.props.Login.masterData.selectedProduct.nproductcode,\r\n                        item: this.props.Login.masterData.selectedProduct\r\n                    } : \"\"\r\n                    let sproductname = selectedProduct.item;\r\n                    selectedRecord = {...this.state.selectedRecord,sproductname,...selectedRecord};\r\n                    isStateChanged = true;\r\n             }\r\n                \r\n              if (this.props.Login.masterData.selectedInstrumentCategory !== previousProps.Login.masterData.selectedInstrumentCategory) {\r\n                        selectedInstCategory=this.props.Login.masterData.selectedInstrumentCategory ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedInstrumentCategory.sinstrumentcatname,\r\n                            value: this.props.Login.masterData.selectedInstrumentCategory.ninstrumentcatcode,\r\n                            item: this.props.Login.masterData.selectedInstrumentCategory\r\n                        } : \"\"\r\n                     isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.masterData.selectedInstrument !== previousProps.Login.masterData.selectedInstrument) {\r\n                        selectedInstrument=this.props.Login.masterData.selectedInstrument ?\r\n                        {\r\n                            label: this.props.Login.masterData.selectedInstrument.sinstrumentname,\r\n                            value: this.props.Login.masterData.selectedInstrument.ninstrumentcode,\r\n                            item: this.props.Login.masterData.selectedInstrument\r\n                        } : \"\"\r\n                        let sinstrumentname = selectedInstrument.item;\r\n                        selectedRecord = {...this.state.selectedRecord,sinstrumentname,...selectedRecord};\r\n                        isStateChanged = true;\r\n        \r\n        \r\n                }\r\n        \r\n                if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                    userRoleControlRights = [];\r\n                    if (this.props.Login.userRoleControlRights) {\r\n                        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                            userRoleControlRights.push(item.ncontrolcode))\r\n                    }\r\n                    controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                    this.setState({ userRoleControlRights, controlMap });\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if (this.props.Login.selectedComponentList !== previousProps.Login.selectedComponentList) {\r\n                    addedComponentList = this.props.Login.selectedComponentList;\r\n                    isStateChanged = true;\r\n                   // this.setState({ addedComponentList });\r\n                }\r\n        \r\n        \r\n                if(this.props.Login.masterData.defaultApprovalConfigVersion !== previousProps.Login.masterData.defaultApprovalConfigVersion) {\r\n                    ApprovalVersionValue = this.props.Login.masterData.defaultApprovalConfigVersion?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultApprovalConfigVersion.sversionname,\r\n                        value: this.props.Login.masterData.defaultApprovalConfigVersion.napprovalconfigversioncode,\r\n                        item: this.props.Login.masterData.defaultApprovalConfigVersion\r\n                    } : \"\"\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if(this.props.Login.masterData.defaultFilterStatus !== previousProps.Login.masterData.defaultFilterStatus) {\r\n                    FilterStatusValue = this.props.Login.masterData.defaultFilterStatus ?\r\n                    {\r\n                        label: this.props.Login.masterData.defaultFilterStatus.sfilterstatus,\r\n                        value: this.props.Login.masterData.defaultFilterStatus.ntransactionstatus,\r\n                        item: this.props.Login.masterData.defaultFilterStatus\r\n                    } : \"\"\r\n                    isStateChanged = true;\r\n                }\r\n        \r\n                if(this.props.Login.masterData.selectedSection !== previousProps.Login.masterData.selectedSection) {\r\n                    selectedSection = this.props.Login.masterData.selectedSection ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedSection.ssectionname,\r\n                        value: this.props.Login.masterData.selectedSection.nsectioncode,\r\n                        item: this.props.Login.masterData.selectedSection\r\n                    } : \"\"\r\n                    let ssectionname = selectedSection.item;\r\n                    selectedRecord = {...this.state.selectedRecord,ssectionname,...selectedRecord};\r\n                    isStateChanged = true;\r\n\r\n                }\r\n            \r\n                if(this.props.Login.masterData.selectedMaterialType !== previousProps.Login.masterData.selectedMaterialType) {\r\n                    selectedMaterialType = this.props.Login.masterData.selectedMaterialType ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialType.smaterialtypename,\r\n                        value: this.props.Login.masterData.selectedMaterialType.nmaterialtypecode,\r\n                        item: this.props.Login.masterData.selectedMaterialType\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialtypename\"]=this.props.Login.masterData.selectedMaterialType.smaterialtypename;\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedMaterialCategory !== previousProps.Login.masterData.selectedMaterialCategory) {\r\n                    selectedMaterialCategory = this.props.Login.masterData.selectedMaterialCategory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialCategory.smaterialcatname,\r\n                        value: this.props.Login.masterData.selectedMaterialCategory.nmaterialcatcode,\r\n                        item: this.props.Login.masterData.selectedMaterialCategory\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialcatname\"]=this.props.Login.masterData.selectedMaterialCategory.smaterialcatname;\r\n                    isStateChanged = true;\r\n                    \r\n                }\r\n            \r\n                if (this.props.Login.masterData.selectedMaterial !== previousProps.Login.masterData.selectedMaterial) {\r\n                    selectedMaterial = this.props.Login.masterData.selectedMaterial ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterial.smaterialname,\r\n                        value: this.props.Login.masterData.selectedMaterial.nmaterialcode,\r\n                        item: this.props.Login.masterData.selectedMaterial\r\n                    }:\"\"\r\n                    selectedRecord[\"smaterialname\"]=this.props.Login.masterData.selectedMaterial.smaterialname;\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedMaterialInventory !== previousProps.Login.masterData.selectedMaterialInventory) {\r\n                    selectedMaterialInventory = this.props.Login.masterData.selectedMaterialInventory ?\r\n                    {\r\n                        label: this.props.Login.masterData.selectedMaterialInventory.sinventoryid,\r\n                        value: this.props.Login.masterData.selectedMaterialInventory.nmaterialinventorycode,\r\n                        item: this.props.Login.masterData.selectedMaterialInventory\r\n                    }:\"\"\r\n                    selectedRecord[\"sinventoryid\"]=this.props.Login.masterData.selectedMaterialInventory && this.props.Login.masterData.selectedMaterialInventory.sinventoryid != null ? \r\n                                 this.props.Login.masterData.selectedMaterialInventory.sinventoryid : \"\";\r\n                    isStateChanged = true;\r\n                }\r\n\r\n                if (this.props.Login.masterData.selectedInventoryUnit !== previousProps.Login.masterData.selectedInventoryUnit) {\r\n                            //selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n                            selectedRecord[\"savailablequatity\"] = this.props.Login.masterData.selectedInventoryUnit &&\r\n                                         this.props.Login.masterData.selectedInventoryUnit.savailablequatity  != null ? this.props.Login.masterData.selectedInventoryUnit.savailablequatity :\"\";\r\n                            isStateChanged = true;\r\n                }\r\n        \r\n              if (this.props.Login.isselectedrecordempty) {\r\n                    selectedRecord = {};\r\n                    isStateChanged = true;\r\n                }\r\n\r\n            \r\n            \r\n         \r\n        }\r\n\r\n        // if(this.props.Login.selectedRecord !== previousProps.Login.selectedRecord){\r\n        //     // let selectedRecord = {};\r\n        //     let MaterialCategory=constructOptionList(this.props.Login.selectedRecord.MaterialCategory || [], 'nmaterialcatcode', 'smaterialcatname',\r\n        //     'ascending', 'nmaterialcatcode', false);\r\n        //     let Material =constructOptionList(this.props.Login.selectedRecord.Material || [], 'nmaterialcode', 'smaterialname',\r\n        //     'ascending', 'nmaterialcode', false);\r\n        //     let MaterialInventory=constructOptionList(this.props.Login.selectedRecord.MaterialInventory || [], 'nmaterialinventorycode', 'sinventoryid',\r\n        //     'ascending', 'nmaterialinventorycode', false);\r\n        //      MaterialCategory = MaterialCategory.get(\"OptionList\")\r\n        //      Material = Material.get(\"OptionList\")\r\n        //      MaterialInventory = MaterialInventory.get(\"OptionList\")\r\n\r\n        //      selectedRecord[\"MaterialCategory\"]=MaterialCategory\r\n        //      selectedRecord[\"Material\"]=Material\r\n        //      selectedRecord[\"MaterialInventory\"]=MaterialInventory\r\n\r\n        //  if(this.props.Login.selectedRecord.selectedMaterialType !== previousProps.Login.selectedRecord.selectedMaterialType) {\r\n        //         let selectedMaterialType = this.props.Login.selectedRecord.selectedMaterialType ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialType.nmaterialtypecode || this.props.Login.selectedRecord.selectedMaterialType.item.value,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialType.item ? this.props.Login.selectedRecord.selectedMaterialType.item : this.props.Login.selectedRecord.selectedMaterialType\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialType\"]=selectedMaterialType;\r\n        //         selectedRecord[\"smaterialtypename\"]=this.props.Login.selectedRecord.selectedMaterialType.smaterialtypename || this.props.Login.selectedRecord.selectedMaterialType.item.smaterialtypename;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //  if (this.props.Login.selectedRecord.selectedMaterialCategory !== previousProps.Login.selectedRecord.selectedMaterialCategory) {\r\n        //         let selectedMaterialCategory = this.props.Login.selectedRecord.selectedMaterialCategory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname ,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialCategory.nmaterialcatcode || this.props.Login.selectedRecord.selectedMaterialCategory.item.value ,\r\n        //             item:  this.props.Login.selectedRecord.selectedMaterialCategory.item  ? this.props.Login.selectedRecord.selectedMaterialCategory.item  : this.props.Login.selectedRecord.selectedMaterialCategory \r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialCategory\"]=selectedMaterialCategory;\r\n        //         selectedRecord[\"smaterialcatname\"]=this.props.Login.selectedRecord.selectedMaterialCategory.smaterialcatname || this.props.Login.selectedRecord.selectedMaterialCategory.item.smaterialcatname \r\n        //         isStateChanged = true;\r\n        //     }\r\n        \r\n        //     if (this.props.Login.selectedRecord.selectedMaterial !== previousProps.Login.selectedRecord.selectedMaterial) {\r\n        //          let selectedMaterial = this.props.Login.selectedRecord.selectedMaterial ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterial.smaterialname,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterial.nmaterialcode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterial\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterial\"]= selectedMaterial;\r\n        //         selectedRecord[\"smaterialname\"]=this.props.Login.selectedRecord.selectedMaterial.smaterialname;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //     if (this.props.Login.selectedRecord.selectedMaterialInventory !== previousProps.Login.selectedRecord.selectedMaterialInventory) {\r\n        //         let selectedMaterialInventory = this.props.Login.selectedRecord.selectedMaterialInventory ?\r\n        //         {\r\n        //             label: this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid,\r\n        //             value: this.props.Login.selectedRecord.selectedMaterialInventory.nmaterialinventorycode,\r\n        //             item: this.props.Login.selectedRecord.selectedMaterialInventory\r\n        //         }:\"\"\r\n        //         selectedRecord[\"selectedMaterialInventory\"]= selectedMaterialInventory;\r\n        //         selectedRecord[\"sinventoryid\"]=this.props.Login.selectedRecord.selectedMaterialInventory.sinventoryid;\r\n        //         isStateChanged = true;\r\n        //     }\r\n\r\n        //     if (this.props.Login.selectedRecord.selectedInventoryUnit !== previousProps.Login.selectedRecord.selectedInventoryUnit) {\r\n        //         selectedRecord[\"selectedInventoryUnit\"] =this.props.Login.selectedRecord.selectedInventoryUnit;\r\n        //         selectedRecord[\"savailablequatity\"] = this.props.Login.selectedRecord.selectedInventoryUnit.savailablequatity;\r\n        //         isStateChanged = true;\r\n        //     }\r\n        // }\r\n            \r\n\r\n    if (this.props.Login.masterData.DynamicDesign && this.props.Login.masterData.DynamicDesign !== previousProps.Login.masterData.DynamicDesign) {\r\n                    const dynamicColumn = JSON.parse(this.props.Login.masterData.DynamicDesign.jsondata.value)\r\n                    testGridItem[0]= dynamicColumn.testListFields.releasetestfields[0] ? dynamicColumn.testListFields.releasetestfields[0] : [];\r\n                    sampleGridItem = dynamicColumn.samplegriditem ? dynamicColumn.samplegriditem : [];\r\n                    subsampleGridItem = dynamicColumn.subsamplelistitem ? dynamicColumn.subsamplelistitem : [];              \r\n                    samplegridmoreitem = dynamicColumn.samplegridmoreitem ? dynamicColumn.samplegridmoreitem : [];\r\n                    DynamicGridMoreItem=[...samplegridmoreitem]\r\n                    DynamicGridItem=[...testGridItem,...sampleGridItem,...subsampleGridItem]     \r\n                    isStateChanged = true;         \r\n        }\r\n\r\n        // if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n        //     isStateChanged = true;\r\n        //     selectedRecord = this.props.Login.selectedRecord;\r\n        //     //this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        // }\r\n\r\n\r\n\r\n        if (isStateChanged)\r\n        {\r\n            this.setState({userRoleControlRights, controlMap, selectedRecord,  \r\n                filterData, addedComponentList,\r\n                filterStatusList, dataState, sahDataState, bahDataState, chDataState,\r\n                testCommentDataState,SampleType, RegistrationType, RegistrationSubType,\r\n                BCFilterStatus, REJobStatus, Testvalues, ApprovalConfigVersion,skip, take,\r\n                testskip, testtake,selectedFilter,selectedInstCategory,InstrumentCategory,\r\n                Instrument,selectedInstrument,selectedTestSynonym,nregsubtypecode,\r\n                ProductCategory,selectedProductCategory,Product,selectedProduct,samples,\r\n                addSelectAll,deleteSelectAll,ApprovalVersionValue,FilterStatusValue,Section,\r\n                selectedSection,sampleGridItem,subsampleGridItem,testGridItem,DynamicGridItem,\r\n                samplegridmoreitem,DynamicGridMoreItem,MaterialCategory,selectedMaterialType,\r\n                Material,selectedMaterial,selectedMaterialCategory,MaterialInventory,selectedMaterialInventory});\r\n        }\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"complete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        let inputData = {};\r\n        selectedRecord[fieldName] = comboData.item;\r\n        if (fieldName === \"sproductname\") {\r\n            selectedRecord[\"nproductcode\"]=comboData.value;\r\n            this.setState({ selectedProduct:comboData });\r\n        }else if(fieldName === \"ssectionname\"){\r\n            inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData['naddcontrolCode']=this.props.Login.naddcontrolCode;\r\n            inputData['section']=selectedRecord.ssectionname;\r\n            inputData['userInfo']=this.props.Login.userInfo;\r\n            this.props.getTestInstrumentComboService(inputData,this.props.Login.masterData);\r\n            // this.setState({ selectedSection:comboData });\r\n\r\n        }else if (fieldName === \"stestname\") {\r\n            if(this.props.Login.operation === \"update\"){\r\n            selectedRecord[\"nprevioustestcode\"]=this.state.selectedTestSynonym.value \r\n            }\r\n            selectedRecord[\"ntestcode\"]=comboData.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            selectedRecord['naddcontrolCode']=this.props.Login.naddcontrolCode;\r\n            selectedRecord[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            selectedRecord[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            this.props.getTestInstrumentCategory(selectedRecord,this.props.Login.masterData);\r\n        }else if (fieldName === \"sinstrumentcatname\") {\r\n            selectedRecord[\"ninstrumentcatcode\"]=comboData.value;\r\n            selectedRecord[\"ntestcode\"]=this.state.selectedTestSynonym.value\r\n            this.props.getInstrumentForInstCategory(selectedRecord,this.props.Login.masterData);\r\n        }else if(fieldName === \"smaterialcatname\"){\r\n            selectedRecord[\"nmaterialcatcode\"]=comboData.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            this.setState({ selectedMaterialCategory:comboData });\r\n            this.props.getMaterialBasedOnMaterialCategory(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n        }else if(fieldName === \"smaterialname\"){\r\n            selectedRecord[\"nmaterialcode\"]=comboData.value;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            selectedRecord['nsectioncode']=this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n            this.setState({selectedMaterial:comboData });\r\n            this.props.getMaterialInventoryBasedOnMaterial(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n            \r\n        }else if(fieldName === \"sinventoryid\"){\r\n            selectedRecord[\"nmaterialcode\"]=comboData.value;\r\n            selectedRecord[\"materialInvCode\"]=comboData.item.nmaterialinventorycode;\r\n            selectedRecord['userInfo']=this.props.Login.userInfo;\r\n            \r\n            this.setState({selectedMaterialInventory:comboData });\r\n            // if(this.state.selectedMaterial.item.needsection == transactionStatus.NO){\r\n            //     selectedRecord['nsectioncode']=transactionStatus.NA;\r\n            // }else{\r\n            selectedRecord['nsectioncode']=this.props.Login.masterData.SelectedBatchmaster.nsectioncode;\r\n            //}\r\n            this.props.getMaterialAvailQtyBasedOnInv(selectedRecord,this.props.Login.masterData,this.state.selectedMaterialCategory);\r\n        }\r\n        else {\r\n            this.setState({ selectedInstrument:comboData });\r\n        }\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            if (event.target.name === \"ntransactionstatus\")\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n            else\r\n                selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onMultiColumnValue = (value, key, flag, label, keys) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n            if (flag) {\r\n                keys.map((objkey, index) => {\r\n                    return selectedRecord[objkey] = { \"label\": value[0][label[index]], \"value\": value[0][objkey] }\r\n                })\r\n            }\r\n        } else {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = \"\";\r\n            });\r\n            keys.map((objkey, index) => {\r\n                return selectedRecord[objkey] = \"\"\r\n            })\r\n        }\r\n        this.props.getBatchManufacturerComboChange(selectedRecord, this.props.Login.userInfo);\r\n    }\r\n\r\n    onMultiColumnMAHChange = (value, key) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (value.length > 0) {\r\n            key.forEach(objarray => {\r\n                selectedRecord[objarray] = value[0][objarray];\r\n            });\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    clearComponentInput = () => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[\"nproductcode\"] = undefined;\r\n        selectedRecord[\"ncomponentcode\"] = undefined;\r\n        selectedRecord[\"smanuflotno\"] = \"\";\r\n        selectedRecord[\"dateprompt\"] = transactionStatus.NO;\r\n        selectedRecord[\"transdatefrom\"] = this.props.Login.componentDefaultSearchDate;\r\n        selectedRecord[\"transdateto\"] = this.props.Login.componentDefaultSearchDate;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateChange = (dateName, dateValue) => {\r\n        let selectedRecord={};\r\n        if (dateValue === null) {\r\n            dateValue = new Date();\r\n        }\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDropImage = (attachedFiles, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = attachedFiles;\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    saveSample =(addedsamplelist) =>{\r\n    if(addedsamplelist === undefined ){\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n      }else if(addedsamplelist.length > 0){\r\n        let sampleArray = [];\r\n        addedsamplelist.map(item => \r\n            sampleArray.push({npreregno:item.npreregno, \r\n                ntransactionsamplecode:item.ntransactionsamplecode, \r\n                ntransactiontestcode : item.ntransactiontestcode,\r\n                nbatchmastercode : this.props.Login.masterData.SelectedBatchmaster ? \r\n                this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode : transactionStatus.NA,\r\n                jsonuidata : {\r\n                    samplelist : item.jsonuidata.samplelist,\r\n                },\r\n                jsondata : {\r\n                    samplelist : item.jsondata.samplelist,\r\n                }\r\n              }\r\n            )\r\n        )\r\n\r\n        let nbatchmastercode = this.props.Login.masterData.SelectedBatchmaster &&\r\n        this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n        // batchSample = {\r\n        //     npreregno: addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n        //     ntransactionsamplecode : addedsamplelist.map(sample=>sample.ntransactionsamplecode).join(\",\"),\r\n        //     ntransactiontestcode : addedsamplelist.map(sample=>sample.ntransactiontestcode).join(\",\"),\r\n        //     npreregno : addedsamplelist.map(sample=>sample.npreregno).join(\",\"),\r\n        //     nbatchmastercode: this.props.Login.masterData.SelectedBatchmaster &&\r\n        //     this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,\r\n        //     jsonuidata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}',\r\n        //     jsondata :'{ \"batchSample\" : this.props.Login.masterData.SelectedBatchmaster}'\r\n        // }\r\n        //jsondata : \r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                batchSample:nbatchmastercode,\r\n                sampleArray,\r\n                userInfo : this.props.Login.userInfo,\r\n                masterData:this.props.Login.masterData,\r\n                ndesigntemplatemappingcode:this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA\r\n            }\r\n        }\r\n         this.props.createSampleAction(inputParam.inputData);\r\n      }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTSAMPLESTOSUBMIT\" }));\r\n      }\r\n    \r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        if(this.props.Login.operation===\"createSample\"){\r\n            this.saveSample(this.state.addedSamplesList)\r\n        }else if(this.props.Login.operation===\"initiate\"){\r\n            this.testStartActions(this.props.Login.masterData.SelectedBatchmaster,this.props.Login.testStartId)\r\n        }else if(this.props.Login.operation===\"complete\"){\r\n            this.batchCompleteActions(this.props.Login.masterData.SelectedBatchmaster,this.props.Login.completeId)\r\n        }else if(this.props.Login.operation===\"createiqcsample\"){\r\n            this.batchSaveIQCActions(this.props.Login.masterData.SelectedBatchmaster)\r\n        }else{\r\n        let inputData = {};\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n        this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        if(this.props.Login.operation ===\"create\"){\r\n        inputData[\"fromDate\"]= obj.fromDate;\r\n        inputData[\"toDate\"]= obj.toDate;\r\n        }\r\n       \r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"nprevioustestcode\"] = this.state.selectedRecord.nprevioustestcode != undefined ? this.state.selectedRecord.nprevioustestcode : this.state.selectedTestSynonym.value;\r\n        inputData[\"ntestcode\"]= this.state.selectedTestSynonym ? this.state.selectedTestSynonym.value : transactionStatus.NA;\r\n        inputData[\"nsectioncode\"]=this.state.selectedSection ? this.state.selectedSection.item.nsectioncode:transactionStatus.NA;\r\n        inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType.nsampletypecode;\r\n        inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType.nregtypecode;\r\n        inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.value :transactionStatus.NA;\r\n        inputData[\"ninstrumentcatcode\"]=this.state.selectedInstCategory ? this.state.selectedInstCategory.value : transactionStatus.NA;\r\n        inputData[\"ninstrumentcode\"]=this.state.selectedInstrument ? this.state.selectedInstrument.value : transactionStatus.NA;\r\n        inputData[\"nproductcode\"]=this.state.selectedProduct ? this.state.selectedProduct.value : transactionStatus.NA;\r\n        inputData[\"ntransactionstatus\"]=transactionStatus.DRAFT;\r\n        inputData[\"sbatcharno\"]='-';\r\n        inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n        inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n        inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n        inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n        inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n        this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n        inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode ? this.props.Login.masterData.ndesigntemplatemappingcode:transactionStatus.NA;\r\n       let postParam = undefined;\r\n            postParam = {\r\n                inputListName: \"Batchmaster\", \r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\", \r\n                unchangeList: [\"FromDate\", \"ToDate\"], isSingleGet: true,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\"\r\n            };\r\n        const inputParam = {\r\n            classUrl: \"batchcreation\",\r\n            methodUrl: \"Batchcreation\",\r\n            displayName: \"IDS_BATCHCREATION\",\r\n            inputData: inputData, \r\n            postParam, \r\n            searchRef: this.searchRef,\r\n            operation: this.props.Login.operation, \r\n            saveType, \r\n            formRef,\r\n        }\r\n        if(this.props.Login.operation ===\"create\"){\r\n            this.props.createBatchmasterAction(inputParam[\"inputData\"], this.props.Login.masterData,inputParam[\"operation\"]);\r\n        }else{\r\n            inputData[\"nbatchmastercode\"]= this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode;\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.editId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, \r\n                            masterData : this.props.Login.masterData\r\n                        },\r\n                        openModal: true, \r\n                        screenName: \"IDS_BATCHCREATION\",\r\n                        operation : inputParam.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else{\r\n            this.props.updateBatchcreationAction(inputParam[\"inputData\"], this.props.Login.masterData,inputParam[\"operation\"]);\r\n            }\r\n        }\r\n    }\r\n        // const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        // if (esignNeeded) {\r\n        //     const updateInfo = {\r\n        //         typeName: DEFAULT_RETURN,\r\n        //         data: {\r\n        //             loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n        //             openModal: true, screenName: \"IDS_BATCHCREATION\",\r\n        //             operation: this.props.Login.operation\r\n        //         }\r\n        //     }\r\n        //     this.props.updateStore(updateInfo);\r\n        // }\r\n        // else {\r\n        //     const selectedRecord = { ...this.state.selectedRecord, sbatchfillinglotno: \"\" }\r\n        //     this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\", selectedRecord);\r\n        // }\r\n    }\r\n\r\n    deleteBatchCreation = (selectedBatch,deleteId,operation) => {\r\n        if (selectedBatch.stransdisplaystatus === transactionStatus.COMPLETED || \r\n            selectedBatch.stransdisplaystatus === transactionStatus.INITIATED) {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_BATCHALREADYINITIATEDCOMPLETED\" }));\r\n        }\r\n        else {\r\n            let inputData = {};\r\n            const masterData = this.props.Login.masterData;\r\n            const postParam = {\r\n                inputListName: \"Batchmaster\", \r\n                selectedObject: \"SelectedBatchmaster\",\r\n                primaryKeyField: \"nbatchmastercode\",\r\n                primaryKeyValue: selectedBatch.nbatchmastercode,\r\n                fetchUrl: \"batchcreation/getActiveSelectedBatchmaster\",\r\n                isSingleGet: true,\r\n                //task: selectedBatch.ntransactionstatus === transactionStatus.DRAFT ? \"delete\" : \"cancel\",\r\n                fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n            }\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n                this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n                inputData[\"fromDate\"]= obj.fromDate;\r\n                inputData[\"toDate\"]= obj.toDate;\r\n                inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n                inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n                inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n                inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n                inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n                inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n                inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n                inputData[\"nbatchmastercode\"] = selectedBatch.nbatchmastercode;\r\n                inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n                inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n                this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n                inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n            const inputParam = {\r\n                postParam,\r\n                inputData: inputData,\r\n                operation,\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchcreation\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n            }\r\n\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteId)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData },\r\n                        openModal: true, screenName: \"IDS_BATCHCREATION\", operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.deleteBatchCreation(inputParam[\"inputData\"], masterData);\r\n            }\r\n        }\r\n    }\r\n\r\n    fetchEditData = (editParam) =>{\r\n    if(this.props.Login.masterData.SelectedBatchmaster.ntransactionstatus == transactionStatus.DRAFT){\r\n        this.props.getActiveBatchCreationService(editParam,\r\n            this.props.Login.masterData.SelectedBatchmaster.nbatchmastercode,this.props.Login.masterData.SelectedBatchmaster.ntestcode)\r\n       }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTDRAFTBATCH\" }));\r\n       }\r\n    }\r\n\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"]\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n    onFilterSubmit = () => {\r\n    \r\n        if(this.props.Login.masterData.defaultRegistrationType != undefined && this.state.FilterStatusValue.item != undefined && this.state.nregsubtypecode.item != undefined &&\r\n            this.state.ApprovalVersionValue.item != undefined \r\n        ){\r\n            let inputData = {};\r\n            let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n            this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n            inputData[\"fromDate\"]= obj.fromDate;\r\n            inputData[\"toDate\"]= obj.toDate;\r\n            inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n            inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType\r\n            inputData[\"nsampletypecode\"]=this.props.Login.masterData.defaultSampleType ? this.props.Login.masterData.defaultSampleType.nsampletypecode : transactionStatus.NA;\r\n            inputData[\"nregtypecode\"]=this.props.Login.masterData.defaultRegistrationType ? this.props.Login.masterData.defaultRegistrationType.nregtypecode : transactionStatus.NA;\r\n            inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType\r\n            inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item : transactionStatus.NA;\r\n            inputData[\"nregsubtypecode\"]=this.state.nregsubtypecode ? this.state.nregsubtypecode.item.nregsubtypecode : transactionStatus.NA;\r\n            inputData[\"ntranscode\"] = this.state.FilterStatusValue ? this.state.FilterStatusValue.value : transactionStatus.DRAFT;\r\n            inputData[\"napprovalconfigcode\"]=this.state.ApprovalVersionValue ? \r\n            this.state.ApprovalVersionValue.item.napprovalconfigcode : transactionStatus.NA;\r\n            inputData[\"ndesigntemplatemappingcode\"] = this.props.Login.masterData.ndesigntemplatemappingcode || \r\n                                                                                        transactionStatus.NA;\r\n            inputData[\"realApproveConfigVersion\"]= this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n            inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n            \r\n            const inputParam = {\r\n                classUrl: \"batchcreation\",\r\n                methodUrl: \"Batchmaster\",\r\n                displayName: \"IDS_BATCHCREATION\",\r\n                inputData: inputData, \r\n                searchRef: this.searchRef,\r\n            }\r\n        this.props.onActionFilterSubmit(inputParam[\"inputData\"],this.props.Login.masterData);\r\n    }else{\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\"}));\r\n      }\r\n    }\r\n\r\n    reloadData = (isFilterSubmit) => {\r\n        this.searchRef.current.value = \"\";\r\n        // let obj = this.convertDatetoString((selectedRecord && selectedRecord[\"fromdate\"]) || this.props.Login.masterData.FromDate, (selectedRecord && selectedRecord[\"todate\"]) || this.props.Login.masterData.ToDate)\r\n    if(this.props.Login.masterData.realRegTypeValue !== transactionStatus.NA || \r\n        this.props.Login.masterData.realRegTypeValue !== null &&\r\n        this.props.Login.masterData.realRegSubTypeValue !== transactionStatus.NA || \r\n        this.props.Login.masterData.realRegSubTypeValue !== null && \r\n        this.props.Login.masterData.realApproveConfigVersion !== transactionStatus.NA ||\r\n        this.props.Login.masterData.realApproveConfigVersion !== null && \r\n        this.props.Login.masterData.defaultFilterStatus !== transactionStatus.NA ||\r\n        this.props.Login.masterData.defaultFilterStatus !== null) {\r\n\r\n        let inputData = {};\r\n        let obj = convertDateValuetoString(this.state.selectedFilter.fromDate || this.props.Login.masterData.realFromDate,\r\n        this.state.selectedFilter.toDate || this.props.Login.masterData.realToDate, this.props.Login.userInfo);\r\n        inputData[\"fromDate\"]= obj.fromDate;\r\n        inputData[\"toDate\"]= obj.toDate;\r\n        inputData[\"userInfo\"] = this.props.Login.userInfo;\r\n\r\n        inputData[\"nsampletypecode\"]=this.props.Login.masterData.realSampleTypeValue &&\r\n        this.props.Login.masterData.realSampleTypeValue.nsampletypecode ? this.props.Login.masterData.realSampleTypeValue.nsampletypecode : transactionStatus.NA;\r\n\r\n        inputData[\"nregtypecode\"]= this.props.Login.masterData.realRegTypeValue && this.props.Login.masterData.realRegTypeValue.nregtypecode ?\r\n        this.props.Login.masterData.realRegTypeValue.nregtypecode : transactionStatus.NA;\r\n\r\n        inputData[\"nregsubtypecode\"]=this.props.Login.masterData.realRegSubTypeValue && this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode ?\r\n        this.props.Login.masterData.realRegSubTypeValue.nregsubtypecode : transactionStatus.NA;\r\n\r\n        inputData[\"defaultSampleType\"]= this.props.Login.masterData.defaultSampleType;\r\n        \r\n        inputData[\"defaultRegistrationType\"]=this.props.Login.masterData.defaultRegistrationType;\r\n\r\n        inputData[\"defaultRegistrationSubType\"]=this.state.nregsubtypecode ? \r\n            this.state.nregsubtypecode.item : transactionStatus.NA;\r\n\r\n        inputData[\"ntranscode\"] = this.props.Login.masterData.defaultFilterStatus && this.props.Login.masterData.defaultFilterStatus.ntransactionstatus || transactionStatus.NA;\r\n\r\n        inputData[\"napprovalconfigcode\"]=this.props.Login.masterData.realApproveConfigVersion && this.props.Login.masterData.realApproveConfigVersion.napprovalconfigcode || transactionStatus.NA;\r\n       \r\n        inputData[\"realApproveConfigVersion\"]= this.state.ApprovalVersionValue && this.state.ApprovalVersionValue.item || transactionStatus.NA;\r\n\r\n        //inputData[\"defaultFilterStatus\"]=this.state.FilterStatusValue && this.state.FilterStatusValue.item || transactionStatus.NA;\r\n        inputData[\"defaultFilterStatus\"] = this.props.Login.masterData.defaultFilterStatus && this.props.Login.masterData.defaultFilterStatus || transactionStatus.NA;\r\n        inputData[\"ndesigntemplatemappingcode\"]=this.props.Login.masterData.ndesigntemplatemappingcode || transactionStatus.NA;\r\n        const inputParam = {\r\n            classUrl: \"batchcreation\",\r\n            methodUrl: \"Batchmaster\",\r\n            displayName: \"IDS_BATCHCREATION\",\r\n            inputData: inputData, \r\n            searchRef: this.searchRef,\r\n        }\r\n\r\n      this.props.onActionFilterSubmit(inputParam[\"inputData\"],this.props.Login.masterData);\r\n    }else{\r\n        \r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\"}));\r\n    }\r\n}\r\n  \r\n\r\n    // addtest=(addParam)=>{\r\n    //     if(this.props.Login.masterData.Batchmaster == undefined ){\r\n    //         toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTALLVALUESINFILTER\" })); \r\n    //     }else{\r\n    //         this.props.getTestInstrumentComboService(addParam)\r\n    //     }\r\n    // }\r\n\r\n    // convertDatetoString(startDateValue, endDateValue) {\r\n    //     const startDate = new Date(startDateValue);\r\n    //     const endDate = new Date(endDateValue);\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth() + 1));\r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth() + 1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate()));\r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDateOnly = startDate.getFullYear() + '-' + prevMonth + '-' + prevDay\r\n    //     const toDateOnly = endDate.getFullYear() + '-' + currentMonth + '-' + currentDay\r\n    //     const fromDate = fromDateOnly + \"T00:00:00\";\r\n    //     const toDate = toDateOnly + \"T23:59:59\";\r\n    //     return ({ fromDate, toDate, breadCrumbFrom: fromDateOnly, breadCrumbto: toDateOnly })\r\n    // }\r\n\r\n    onClickReport = (selectedRecord, flag, ncontrolcode) => {\r\n        const reportParam = {\r\n            classUrl: \"certificategeneration\",\r\n            methodUrl: \"reportGeneration\",\r\n            screenName: \"CertificateGeneration\",\r\n            operation: \"previewReport\",\r\n            primaryKeyField: \"nreleasebatchcode\",\r\n            inputParam: this.props.Login.inputParam,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: -1,\r\n            inputData: {\r\n                sprimarykeyname: 'nreleasebatchcode',\r\n                nprimarykey: selectedRecord.nreleasebatchcode,\r\n                nreleasebatchcode: selectedRecord.nreleasebatchcode,\r\n                ncertificatetypecode: selectedRecord.ndecision === transactionStatus.PASS && flag === 1 ? selectedRecord.ncertificatetypecode : -1,\r\n                ndecisionstatus: selectedRecord.ndecision,// === transactionStatus.DRAFT ? transactionStatus.PASS : selectedRecord.ndecision,\r\n                nreporttypecode: flag === 2 ? reportTypeEnum.SCREENWISE : reportTypeEnum.BATCH,\r\n                ncontrolcode,\r\n                ncoareporttypecode: flag === 2 ? -1 : reportCOAType.BATCHPREVIEW,\r\n                userinfo: this.props.Login.userInfo,\r\n                nflag: flag,\r\n                skipbatchvalidation: true,\r\n            }\r\n        };\r\n        this.props.onClickReport(reportParam)\r\n    }\r\n\r\n    reportMethod = (value) => {\r\n        if (value.method === 1) {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 2, value.controlId);\r\n        }\r\n        else {\r\n            this.onClickReport(this.props.Login.masterData.SelectedBatchCreation, 1, value.controlId);\r\n        }\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster,updateStore,\r\n    getTestInstrumentComboService,getTestInstrumentCategory,getInstrumentForInstCategory,\r\n    getBatchCreationDetails,onActionFilterSubmit,getProductcategoryAction,\r\n    createBatchmasterAction,getSamplesForGrid,getSelectedBatchCreationDetail,\r\n    createSampleAction,deleteSampleAction,getActiveBatchCreationService,\r\n    updateBatchcreationAction,deleteBatchCreation,batchInitiateAction,\r\n    getBCRegistrationSubType,batchCompleteAction,validateEsignCredential,\r\n    filterColumnData,getBatchhistoryAction,\r\n    getBatchSection,viewInfo,getIqcSamples,getMaterialBasedOnMaterialCategory,\r\n    getMaterialInventoryBasedOnMaterial,batchSaveIQCActions,getMaterialAvailQtyBasedOnInv,\r\n    getBatchIqcSampleAction,getBCApprovalConfigVersion,getBCRegistrationType\r\n})(injectIntl(BatchCreation));\r\n\r\n"]},"metadata":{},"sourceType":"module"}