{"ast":null,"code":"import React,{useRef}from'react';import'../pages/registration/registration.css';import{Pager}from'@progress/kendo-react-data-tools';import{injectIntl}from'react-intl';// import { withResizeDetector } from 'react-resize-detector';\nimport{LocalizationProvider}from'@progress/kendo-react-intl';var CustomPager=function CustomPager(props){var ref=useRef(null);var handlePageChange=function handlePageChange(e){props.handlePageChange(e);};var AdaptiveComponent=function AdaptiveComponent(){// let divWidth =  JSON.parse(JSON.stringify(width) )\nreturn/*#__PURE__*/React.createElement(\"div\",{className:\"pager_wrap \".concat(props.width&&props.width<(props.pagershowwidth?props.pagershowwidth:33)?'show-list':'wrap-class'),ref:ref},/*#__PURE__*/React.createElement(LocalizationProvider,{language:props.userInfo.slanguagetypecode},props.total>0&&/*#__PURE__*/React.createElement(Pager,{className:\"k-pagerheight\",skip:parseInt(props.skip),take:parseInt(props.take),onPageChange:function onPageChange(e){return handlePageChange(e);},total:props.total,buttonCount:props.buttonCount,info:props.info,pageSizes:props.pageSize,alwaysVisible:false// messagesMap={loadMessages(enMessages, \"en\")}\n})));};// const AdaptiveWithDetector = withResizeDetector(AdaptiveComponent);\nreturn/*#__PURE__*/ (// <AdaptiveWithDetector />\nReact.createElement(AdaptiveComponent,null));};export default injectIntl(CustomPager);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/CustomPager.jsx"],"names":["React","useRef","Pager","injectIntl","LocalizationProvider","CustomPager","props","ref","handlePageChange","e","AdaptiveComponent","width","pagershowwidth","userInfo","slanguagetypecode","total","parseInt","skip","take","buttonCount","info","pageSize"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CACA,MAAO,wCAAP,CACA,OAASC,KAAT,KAAsB,kCAAtB,CACA,OAASC,UAAT,KAA2B,YAA3B,CACA;AACA,OAAUC,oBAAV,KAAsC,4BAAtC,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,KAAD,CAAW,CAC7B,GAAMC,CAAAA,GAAG,CAAGN,MAAM,CAAC,IAAD,CAAlB,CACA,GAAMO,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,CAAD,CAAO,CAC9BH,KAAK,CAACE,gBAAN,CAAuBC,CAAvB,EACD,CAFD,CAIA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CAC9B;AACA,mBAAO,2BAAK,SAAS,sBAAgBJ,KAAK,CAACK,KAAN,EAAeL,KAAK,CAACK,KAAN,EAAeL,KAAK,CAACM,cAAN,CAAuBN,KAAK,CAACM,cAA7B,CAA4C,EAA3D,CAAf,CAAgF,WAAhF,CAA8F,YAA9G,CAAd,CAA4I,GAAG,CAAEL,GAAjJ,eACL,oBAAC,oBAAD,EAAsB,QAAQ,CAAED,KAAK,CAACO,QAAN,CAAeC,iBAA/C,EACGR,KAAK,CAACS,KAAN,CAAc,CAAd,eACE,oBAAC,KAAD,EACA,SAAS,CAAC,eADV,CAEA,IAAI,CAAEC,QAAQ,CAACV,KAAK,CAACW,IAAP,CAFd,CAGA,IAAI,CAAED,QAAQ,CAACV,KAAK,CAACY,IAAP,CAHd,CAIA,YAAY,CAAE,sBAACT,CAAD,QAAOD,CAAAA,gBAAgB,CAACC,CAAD,CAAvB,EAJd,CAKA,KAAK,CAAEH,KAAK,CAACS,KALb,CAMA,WAAW,CAAET,KAAK,CAACa,WANnB,CAOA,IAAI,CAAEb,KAAK,CAACc,IAPZ,CAQA,SAAS,CAAEd,KAAK,CAACe,QARjB,CASA,aAAa,CAAG,KAClB;AAVE,EAFL,CADK,CAAP,CAoBD,CAtBD,CAuBA;AACA,oBACE;AACA,oBAAC,iBAAD,MAFF,EAID,CAlCD,CAmCA,cAAelB,CAAAA,UAAU,CAACE,WAAD,CAAzB","sourcesContent":["import React, { useRef } from 'react';\r\nimport '../pages/registration/registration.css'\r\nimport { Pager } from '@progress/kendo-react-data-tools';\r\nimport { injectIntl } from 'react-intl';\r\n// import { withResizeDetector } from 'react-resize-detector';\r\nimport {  LocalizationProvider } from '@progress/kendo-react-intl';\r\n\r\n\r\n\r\nconst CustomPager = (props) => {\r\n  const ref = useRef(null);\r\n  const handlePageChange = (e) => {\r\n    props.handlePageChange(e)\r\n  }\r\n\r\n  const AdaptiveComponent = () => {\r\n    // let divWidth =  JSON.parse(JSON.stringify(width) )\r\n    return <div className={`pager_wrap ${props.width && props.width < (props.pagershowwidth ? props.pagershowwidth:33) ? 'show-list' : 'wrap-class'}`} ref={ref}>\r\n      <LocalizationProvider language={props.userInfo.slanguagetypecode}>\r\n        {props.total > 0 &&\r\n           <Pager\r\n           className=\"k-pagerheight\"\r\n           skip={parseInt(props.skip)}\r\n           take={parseInt(props.take)}\r\n           onPageChange={(e) => handlePageChange(e)}\r\n           total={props.total}\r\n           buttonCount={props.buttonCount}\r\n           info={props.info}\r\n           pageSizes={props.pageSize}\r\n           alwaysVisible={ false}\r\n         // messagesMap={loadMessages(enMessages, \"en\")}\r\n         />\r\n        }\r\n        \r\n        \r\n      </LocalizationProvider>\r\n    </div>;\r\n  };\r\n  // const AdaptiveWithDetector = withResizeDetector(AdaptiveComponent);\r\n  return (\r\n    // <AdaptiveWithDetector />\r\n    <AdaptiveComponent />\r\n  )\r\n}\r\nexport default injectIntl(CustomPager);\r\n"]},"metadata":{},"sourceType":"module"}