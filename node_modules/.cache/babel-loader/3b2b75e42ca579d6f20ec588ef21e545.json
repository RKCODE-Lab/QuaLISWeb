{"ast":null,"code":"import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import{faBarcode,faCheck,faCloudDownloadAlt,faCopy,faEye,faFileCsv,faFileExcel,faFileImport,faFilePdf,faLanguage,faPencilAlt,faPlus,faRedo,faSync,faThumbsUp,faTrashAlt}from'@fortawesome/free-solid-svg-icons';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{ExcelExport,ExcelExportColumn}from'@progress/kendo-react-excel-export';import{Grid,GridColumn,GridColumnMenuFilter,GridNoRecords,GridToolbar}from'@progress/kendo-react-grid';import{GridPDFExport}from'@progress/kendo-react-pdf';import React from'react';import{Button,Card,Col,FormGroup,FormLabel,Image,Nav,Row}from'react-bootstrap';import{FormattedMessage,injectIntl}from'react-intl';import{AtTableWrap,FontIconWrap,FormControlStatic}from'../data-grid/data-grid.styles';import ColumnMenu from'./ColumnMenu';import SimpleGrid from'./SimpleGrid';// import { Tooltip } from '@progress/kendo-react-tooltip';\nimport{process}from'@progress/kendo-data-query';import{LocalizationProvider}from'@progress/kendo-react-intl';import parse from'html-react-parser';import{CSVLink}from\"react-csv\";import{connect}from'react-redux';import{toast}from'react-toastify';import ReactTooltip from'react-tooltip';import reject from\"../../assets/image/reject.svg\";import{ttfFont}from'../../assets/styles/ttfFont';import ConfirmMessage from'../../components/confirm-alert/confirm-message.component';import{getActionIcon}from'../HoverIcons';import CustomSwitch from'../custom-switch/custom-switch.component';// import '../../assets/styles/unicode-font.css';\nimport FormCheckbox from'../form-checkbox/form-checkbox.component';import{dynamicFileDownload}from'../../actions/ServiceAction';import{rearrangeDateFormatDateOnly}from\"../../components/CommonScript\";import{ReactComponent as MailResend}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/Mail Resend.svg\";var DataGrid=/*#__PURE__*/function(_React$Component){_inherits(DataGrid,_React$Component);var _super=_createSuper(DataGrid);function DataGrid(_props){var _this;_classCallCheck(this,DataGrid);_this=_super.call(this,_props);_this.detailBand=function(props){return/*#__PURE__*/React.createElement(Row,{bsPrefix:\"margin_class\"},/*#__PURE__*/React.createElement(Col,{md:12},_this.props.hasDynamicColSize?/*#__PURE__*/React.createElement(\"div\",null,_this.props.detailedFieldList.length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MOREINFO\",message:\"More Info\"})),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Row,{style:{marginLeft:-18}},_this.props.detailedFieldList.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:item.columnSize},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:item.idsName,message:item.idsName})),/*#__PURE__*/React.createElement(FormControlStatic,null,props.dataItem[item.dataField]===undefined||props.dataItem[item.dataField]===null||props.dataItem[item.dataField].length===0?'-':item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:props.dataItem[item.dataField],message:props.dataItem[item.dataField]}):item.isHTML?parse(props.dataItem[item.dataField]):props.dataItem[item.dataField],item.dataType&&item.dataType[0]==='files'?/*#__PURE__*/React.createElement(FontIconWrap,{icon:faCloudDownloadAlt,className:\"ml-2 className action-icons-wrap\",size:\"lg\",\"data-tip\":_this.props.intl.formatMessage({id:\"IDS_DOWNLOAD\"}),\"data-place\":\"left\",onClick:function onClick(){return _this.props.dynamicFileDownload(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},props.dataItem),_this.props.inputParam),item),{},{userInfo:_this.props.Login.userInfo},_this.props.viewFileURL));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt})):\"\")));})))))):_this.props.hasChild?/*#__PURE__*/React.createElement(SimpleGrid,{childList:_this.props.childList.get(parseInt(props.dataItem[_this.props.childMappingField]))||[],extractedColumnList:_this.props.childColumnList}):/*#__PURE__*/React.createElement(\"div\",null,_this.props.detailedFieldList.length>0&&/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"row\",null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_MOREINFO\",message:\"More Info\"})),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},_this.props.detailedFieldList.map(function(item){return/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:item.idsName,message:item.idsName})),/*#__PURE__*/React.createElement(FormControlStatic,null,props.dataItem[item.dataField]===undefined||props.dataItem[item.dataField]===null||props.dataItem[item.dataField].length===0?'-':item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:props.dataItem[item.dataField],message:props.dataItem[item.dataField]}):item.isHTML?parse(props.dataItem[item.dataField]):props.dataItem[item.dataField],item.dataType&&item.dataType[0]==='files'?/*#__PURE__*/React.createElement(FontIconWrap,{icon:faCloudDownloadAlt,className:\"ml-2 className action-icons-wrap\",size:\"lg\",\"data-tip\":_this.props.intl.formatMessage({id:\"IDS_DOWNLOAD\"}),\"data-place\":\"left\",onClick:function onClick(){return _this.props.dynamicFileDownload(_objectSpread(_objectSpread(_objectSpread(_objectSpread({},props.dataItem),_this.props.inputParam),item),{},{userInfo:_this.props.Login.userInfo},_this.props.viewFileURL));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt})):\"\")));}))))))),\" \");};_this.expandChange=function(event){var isExpanded=event.dataItem.expanded===undefined?event.dataItem.aggregates:event.dataItem.expanded;if(_this.props.hasChild&&event.value===true){event.dataItem.expanded=!isExpanded;_this.props.handleExpandChange(event,_this.props.dataState);}else{event.dataItem.expanded=!isExpanded;_this.setState({isExpanded:isExpanded});}};_this.exportExcel=function(){if(_this.props.dataResult.data.length>0){_this._excelExport.save();}else toast.info(_this.props.intl.formatMessage({id:\"IDS_NODATATOEXPORT\"}));};_this.exportExcelHeader=function(){//  if (this.props.dataResult.data.length > 0) {\n_this._excelExportHeader.save();// }\n// else\n//     toast.info(this.props.intl.formatMessage({ id: \"IDS_NODATATOEXPORT\" }));\n};_this.exportPDF=function(){if(_this.props.dataResult.data.length>0)_this._pdfExport.save();else toast.info(_this.props.intl.formatMessage({id:\"IDS_NODATATOEXPORT\"}));};_this.handleClickDelete=function(deleteParam,row){//this.props.deleteRecord(deleteParam);\n_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.props.deleteRecord(deleteParam,row);});};_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(DataGrid,[{key:\"columnProps\",value:function columnProps(field){if(!this.props.hideColumnFilter){var returntype={field:field,columnMenu:ColumnMenu,headerClassName:this.isColumnActive(field,this.props.dataState)?'active':''};return returntype;}}},{key:\"isColumnActive\",value:function isColumnActive(field,dataState){return GridColumnMenuFilter.active(field,dataState.filter);}},{key:\"render\",value:function render(){var _this2=this;//console.log(\"controlMap:\", this.props);\n//  loadMessages(messages[this.props.Login.userInfo.slanguagetypecode], \"lang\");\nvar methodUrl=this.props.methodUrl?this.props.methodUrl:this.props.inputParam&&this.props.inputParam.methodUrl;var addId=this.props.controlMap&&this.props.controlMap.has(\"Add\".concat(methodUrl))&&this.props.controlMap.get(\"Add\".concat(methodUrl)).ncontrolcode;var editId=this.props.controlMap&&this.props.controlMap.has(\"Edit\".concat(methodUrl))&&this.props.controlMap.get(\"Edit\".concat(methodUrl)).ncontrolcode;var barcodeId=this.props.controlMap&&this.props.controlMap.has(\"Barcode\".concat(methodUrl))&&this.props.controlMap.get(\"Barcode\".concat(methodUrl)).ncontrolcode;{/* Add by Neeraj kumar for Language screen -RMTP-101*/}var languagesId=this.props.controlMap&&this.props.controlMap.has(\"Update\".concat(methodUrl))&&this.props.controlMap.get(\"Update\".concat(methodUrl)).ncontrolcode;// const viewId = this.props.controlMap.has(\"View\".concat(methodUrl))\n//     && this.props.controlMap.get(\"View\".concat(methodUrl)).ncontrolcode;\nvar deleteId=this.props.controlMap&&this.props.controlMap.has(\"Delete\".concat(methodUrl))&&this.props.controlMap.get(\"Delete\".concat(methodUrl)).ncontrolcode;// const defaultId = this.props.controlMap && this.props.controlMap.has(\"Default\".concat(methodUrl))\n//     && this.props.controlMap.get(\"Default\".concat(methodUrl)).ncontrolcode;\nvar approveId=this.props.controlMap&&this.props.controlMap.has(\"Approve\".concat(methodUrl))&&this.props.controlMap.get(\"Approve\".concat(methodUrl)).ncontrolcode;var copyId=this.props.controlMap&&this.props.inputParam&&this.props.controlMap.has(\"Copy\".concat(methodUrl))&&this.props.controlMap.get(\"Copy\".concat(methodUrl)).ncontrolcode;var completeId=this.props.controlMap&&this.props.controlMap.has(\"Complete\".concat(methodUrl))&&this.props.controlMap.get(\"Complete\".concat(methodUrl)).ncontrolcode;var switchId=this.props.controlMap&&this.props.switchParam&&this.props.controlMap.has(this.props.switchParam.operation.concat(methodUrl))&&this.props.controlMap.get(this.props.switchParam.operation.concat(methodUrl)).ncontrolcode;var cancelId=this.props.controlMap&&this.props.controlMap.has(\"Cancel\".concat(methodUrl))&&this.props.controlMap.get(\"Cancel\".concat(methodUrl)).ncontrolcode;// const receiveGoodsId = this.props.controlMap.has(\"Receive\".concat(methodUrl))\n//     && this.props.controlMap.get(\"Receive\".concat(methodUrl)).ncontrolcode;\nvar downloadId=this.props.controlMap&&this.props.controlMap.has(\"Download\".concat(methodUrl))&&this.props.controlMap.get(\"Download\".concat(methodUrl)).ncontrolcode;var resentId=this.props.controlMap&&this.props.controlMap.has(\"Resent\")&&this.props.controlMap.get(\"Resent\").ncontrolcode;var selectedId=this.props.selectedId;// const confirmMessage = new ConfirmMessage();\n//console.log(\"props:\",this.props);\nvar pageSizes=this.props.pageSizes?this.props.pageSizes:this.props.Login.settings&&this.props.Login.settings[15].split(\",\").map(function(setting){return parseInt(setting);});return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AtTableWrap,{className:\"at-list-table\",actionColWidth:this.props.actionColWidth?this.props.actionColWidth:\"150px\"},/*#__PURE__*/React.createElement(LocalizationProvider,{language:this.props.Login.userInfo.slanguagetypecode},this.props.iscsv?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end\"},/*#__PURE__*/React.createElement(CSVLink,{data:this.props.ELNTest?this.props.ELNTest:this.props.data,filename:this.props.selectedfilename+\".csv\",headers:this.props.batchCSViewList},this.props.ELNTest?this.props.intl.formatMessage({id:\"IDS_EXPORTTOELN\"}):this.props.intl.formatMessage({id:\"IDS_EXPORTCSV\"})))),/*#__PURE__*/React.createElement(\"style\",null,ttfFont)):\"\",/*#__PURE__*/React.createElement(ExcelExport,{data:process(this.props.data||[],{sort:this.props.dataState.sort,filter:this.props.dataState.filter,group:this.props.dataState.group}).data,filterable:true// fileName={this.props.inputParam && this.props.intl.formatMessage({ id: this.props.inputParam.displayName })}\n,group:this.props.dataState.group,ref:function ref(exporter){// console.log(exporter);\n_this2._excelExport=exporter;}},/*#__PURE__*/React.createElement(Grid,Object.assign({className:this.props.dataResult&&this.props.dataResult.length>0||this.props.extractedColumnList&&this.props.extractedColumnList.length>0?\"active-paging\":\"no-paging\",style:{height:this.props.gridHeight,width:this.props.gridWidth},sortable:true,resizable:true,reorderable:false,scrollable:this.props.scrollable,pageable:this.props.pageable&&this.props.data&&this.props.data.length>0?{buttonCount:5,pageSizes:pageSizes,previousNext:false}:false// pageable={this.props.pageable ? { buttonCount: 5, pageSizes: pageSizes, previousNext: false } : \"\"}\n,groupable:this.props.groupfooter?{enabled:false,footer:\"visible\"}:this.props.groupable?true:false,detail:this.props.hideDetailBand?false:this.detailBand,expandField:(this.props.detailedFieldList&&this.props.detailedFieldList.length>0||this.props.childColumnList&&this.props.childColumnList.length>0)&&this.props.expandField?this.props.expandField:false,onExpandChange:this.expandChange,data:this.props.dataResult,total:this.props.total},this.props.dataState,{selectedField:\"selected\",onRowClick:this.props.handleRowClick,onDataStateChange:this.props.dataStateChange}),/*#__PURE__*/React.createElement(GridNoRecords,null,this.props.intl.formatMessage({id:\"IDS_NORECORDSAVAILABLE\"})),this.props.isToolBarRequired?/*#__PURE__*/React.createElement(GridToolbar,null,this.props.isAddRequired===false?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-icon-rounded btn-circle solid-blue\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_ADD\"})// data-for=\"tooltip-grid-wrap\"\n,hidden:this.props.userRoleControlRights&&this.props.userRoleControlRights.indexOf(addId)===-1,onClick:function onClick(){return _this2.props.addRecord(addId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),this.props.isCustomButton?this.props.customButtonlist.map(function(button){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":_this2.props.intl.formatMessage({id:button.label})// data-for=\"tooltip-grid-wrap\"\n,hidden:button.hidden,onClick:button.onClick},getActionIcon(button.controlname)));}):/*#__PURE__*/React.createElement(React.Fragment,null),this.props.isRefreshRequired===false?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_REFRESH\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.props.reloadData();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faSync})),this.props.isImportRequired===true?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_EXPORTTEMPLATE\"})//data-for=\"tooltip-grid-wrap\"\n,onClick:this.exportExcelHeader},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileExcel})),/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_IMPORTDATA\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.props.import();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileImport}))):\"\",this.props.isDownloadPDFRequired===false?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DOWNLOADPDF\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:this.exportPDF},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFilePdf})),this.props.isDownloadExcelRequired===false?/*#__PURE__*/React.createElement(React.Fragment,null):/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DOWNLOADEXCEL\"})//data-for=\"tooltip-grid-wrap\"\n,onClick:this.exportExcel},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileExcel})),this.props.isExportExcelRequired===true?/*#__PURE__*/React.createElement(Button,{className:\"btn btn-circle outline-grey\",variant:\"link\",\"data-tip\":this.props.intl.formatMessage({id:\"IDS_DOWNLOADCSV\"})//data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.props.exportExcelNew();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faFileCsv})):/*#__PURE__*/React.createElement(React.Fragment,null)):/*#__PURE__*/React.createElement(React.Fragment,null),this.props.extractedColumnList.map(function(item,index){return item.idsName&&/*#__PURE__*/React.createElement(GridColumn,Object.assign({key:index// data-tip={this.props.intl.formatMessage({ id: item.idsName })}\n,title:_this2.props.intl.formatMessage({id:item.idsName})},_this2.columnProps(item.dataField),{width:item.width,cell:function cell(row){return row.rowType===\"groupFooter\"?item.dataField===_this2.props.aggregatedColumn?/*#__PURE__*/React.createElement(\"td\",{\"aria-colindex\":row.columnIndex,role:\"gridcell\"},_this2.props.intl.formatMessage({id:_this2.props.aggregateLabel}),\" :\",row.dataItem.aggregates[_this2.props.aggregatedColumn].sum):null:row.rowType===\"groupHeader\"?null:item.componentName===\"switch\"?/*#__PURE__*/React.createElement(\"td\",{style:{textAlign:\"center\"}},/*#__PURE__*/React.createElement(CustomSwitch,{type:\"switch\",id:row[\"dataItem\"][_this2.props.primaryKeyField]+\"_\"+row.dataIndex+\"_\"+row.columnIndex,disabled:item.needRights?_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(_this2.props.controlMap.has(item.controlName)&&_this2.props.controlMap.get(item.controlName).ncontrolcode)===-1:false,onChange:function onChange(event){return _this2.props.onSwitchChange(_objectSpread(_objectSpread({},_this2.props.switchParam),{},{selectedRecord:row[\"dataItem\"],ncontrolCode:switchId}),event);},checked:row[\"dataItem\"][item.switchFieldName]===item.switchStatus?true:false,name:row[\"dataItem\"][_this2.props.primaryKeyField]+\"_\"+row.dataIndex+\"_\"+row.columnIndex})):item.componentName===\"checkbox\"?/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(FormCheckbox,{name:row[\"dataItem\"][_this2.props.primaryKeyField]+\"_\"+row.dataIndex+\"_\"+row.columnIndex,type:\"checkbox\",value:row[\"dataItem\"][item.checkBoxField]!==0?true:false,isMandatory:false,required:false//checked={row[\"dataItem\"][item.checkBoxField] === item.switchStatus ? true : false}\n,checked:row[\"dataItem\"][item.checkBoxField]!==0?true:false,onChange:function onChange(event){return _this2.props.onInputOnChange(event);}})):item.fieldType===\"gradeColumn\"?row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]// data-for=\"tooltip_grid_wrap\"\n,className:\"\".concat(selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''),style:{color:[row[\"dataItem\"]['scolorhexcode']]}},row[\"dataItem\"][item.dataField]):/*#__PURE__*/React.createElement(\"td\",{\"data-tip\":row[\"dataItem\"][item.dataField]//data-for=\"tooltip-grid-wrap\"\n,className:selectedId===row[\"dataItem\"][_this2.props.primaryKeyField]?'active':''},item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):item.fieldType===\"dateOnlyFormat\"?rearrangeDateFormatDateOnly(_this2.props.Login.userInfo,row[\"dataItem\"][item.dataField]):row[\"dataItem\"][item.dataField]// : row[\"dataItem\"][item.dataField] ? row[\"dataItem\"][item.dataField] :\n//     this.props.jsonField ? row[\"dataItem\"][this.props.jsonField] &&\n//         row[\"dataItem\"][this.props.jsonField][item.dataField]&&\n//         row[\"dataItem\"][this.props.jsonField][item.dataField]['label'] ||\n//         row[\"dataItem\"][this.props.jsonField][item.dataField]\n,\"       \",item.dataType&&item.dataType[0]==='files'?/*#__PURE__*/React.createElement(FontIconWrap,{icon:faCloudDownloadAlt,className:\"ml-2 className action-icons-wrap\",size:\"lg\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_DOWNLOAD\"}),\"data-place\":\"left\",onClick:function onClick(){return _this2.props.dynamicFileDownload(_objectSpread(_objectSpread(_objectSpread({},item),row.dataItem),{},{userInfo:_this2.props.Login.userInfo},_this2.props.viewFileURL));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt})):\"\");}}));}),this.props.isActionRequired?/*#__PURE__*/React.createElement(GridColumn,{locked:true,headerClassName:\"text-center\",title:this.props.intl.formatMessage({id:'IDS_ACTION'}),sort:false,cell:function cell(row){return row.rowType===\"groupFooter\"?null:row.rowType===\"groupHeader\"?null:/*#__PURE__*/React.createElement(\"td\",{className:\"k-grid-content-sticky k-command-cell selectedId === row[\\\"dataItem\\\"][this.props.primaryKeyField] ? 'active' : ''\",style:{left:'0',right:'0',borderRightWidth:'1px',textAlign:'center'}},/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Nav.Link,null,/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_EDIT\"})// data-for=\"tooltip-grid-wrap\"\n,\"data-place\":\"left\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(editId)===-1,onClick:function onClick(){return _this2.props.fetchRecord(_objectSpread(_objectSpread({},_this2.props.editParam),{},{primaryKeyValue:row[\"dataItem\"][_this2.props.editParam.primaryKeyField],editRow:row[\"dataItem\"],ncontrolCode:editId}));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_PRINTBARCODE\"})// data-for=\"tooltip-grid-wrap\"\n,\"data-place\":\"left\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(barcodeId)===-1,onClick:function onClick(){return _this2.props.openBarcodeModal(row[\"dataItem\"],barcodeId,_this2.props.userInfo,false);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faBarcode})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_ADDSYNONYMN\"})//  data-for=\"tooltip-grid-wrap\"\n,\"data-place\":\"left\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(languagesId)===-1,onClick:function onClick(){return _this2.props.languagesRecord(_objectSpread(_objectSpread({},_this2.props.languagesParam),{},{primaryKeyValue:row[\"dataItem\"][_this2.props.languagesParam.primaryKeyField],languagesRow:row[\"dataItem\"],ncontrolCode:languagesId}));}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faLanguage})),\"        \",/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_DELETE\"}),\"data-place\":\"top\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(deleteId)===-1,onClick:function onClick(){return _this2.handleClickDelete(_objectSpread(_objectSpread({},_this2.props.deleteParam),{},{selectedRecord:row[\"dataItem\"],ncontrolCode:deleteId}),row);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(downloadId)===-1,onClick:function onClick(){return _this2.props.viewDownloadFile(_objectSpread(_objectSpread(_objectSpread({},_this2.props.masterdata),_this2.props.downloadParam),{},{inputData:_objectSpread(_objectSpread({},row[\"dataItem\"]),{},{userinfo:_this2.props.Login.userInfo}),userinfo:_this2.props.Login.userInfo,ncontrolCode:downloadId}),row);},\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_DOWNLOADFILE\"}),\"data-place\":\"left\"//  data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCloudDownloadAlt//title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })}\n})),_this2.props.isreportview?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\"//hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(viewreport) === -1}\n,onClick:function onClick(){return _this2.props.viewReportFile(_objectSpread(_objectSpread(_objectSpread({},_this2.props.masterdata),_this2.props.downloadParam),{},{inputData:_objectSpread(_objectSpread({},row[\"dataItem\"]),{},{userinfo:_this2.props.Login.userInfo}),userinfo:_this2.props.Login.userInfo,ncontrolCode:downloadId}),row);},\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_VIEWREPORT\"}),\"data-place\":\"left\"//  data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faEye//title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })} \n})):\"\",/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_APPROVE\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(approveId)===-1,onClick:function onClick(){return _this2.props.approveRecord(row,\"Approve\",approveId);},\"data-place\":\"left\"//data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_COPY\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(copyId)===-1,onClick:function onClick(){return _this2.props.copyRecord(row,\"Copy\",copyId);},\"data-place\":\"left\"// data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCopy})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_COMPLETE\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(completeId)===-1,onClick:function onClick(){return _this2.props.completeRecord(row[\"dataItem\"],\"Complete\",completeId);},\"data-place\":\"left\"// data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faCheck})),/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_RESENT\"}),hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(resentId)===-1,onClick:function onClick(){return _this2.props.reSent(row[\"dataItem\"],\"Resent\",resentId);},\"data-place\":\"left\"//data-for=\"tooltip-grid-wrap\"\n},/*#__PURE__*/React.createElement(MailResend,{width:\"24px\",className:\"svg-inline--fa\"})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_CANCEL\"}),\"data-place\":\"left\"//data-for=\"tooltip-grid-wrap\"\n,hidden:_this2.props.userRoleControlRights&&_this2.props.userRoleControlRights.indexOf(cancelId)===-1},/*#__PURE__*/React.createElement(Image,{src:reject,alt:\"filer-icon action-icons-wrap\",width:\"20\",height:\"20\",className:\"ActionIconColor img-normalize\",onClick:function onClick(){return _this2.props.cancelRecord(row[\"dataItem\"],\"Cancel\",cancelId);},\"data-place\":\"left\"})),_this2.props.actionIcons?_this2.props.actionIcons.length>0?_this2.props.actionIcons.map(function(action){return/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":action.title,hidden:action.hidden===undefined?true:action.hidden,onClick:function onClick(){return action.onClick(row[\"dataItem\"],action,row);}},getActionIcon(action.controlname));}):\"\":\"\",_this2.props.hasControlWithOutRights?/*#__PURE__*/React.createElement(React.Fragment,null,_this2.props.showeditRecordWORights?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_EDIT\"})//title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} \n,\"data-place\":\"left\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPencilAlt//title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\n,name:\"deleteworights\",onClick:function onClick(){return _this2.props.editRecordWORights(row[\"dataItem\"]);}})):\"\",_this2.props.showeditRecordWORights?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_LANGUAGESCONVERTER\"})//title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} \n,\"data-place\":\"left\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faLanguage//title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\n,name:\"deleteworights\",onClick:function onClick(){return _this2.props.editRecordWORights(row[\"dataItem\"]);}})):\"\",_this2.props.showdeleteRecordWORights?/*#__PURE__*/React.createElement(FontIconWrap,{className:\"d-font-icon action-icons-wrap\",\"data-tip\":_this2.props.intl.formatMessage({id:\"IDS_DELETE\"})// data-for=\"tooltip-grid-wrap\"\n,onClick:function onClick(){return _this2.props.deleteRecordWORights(row[\"dataItem\"]);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faTrashAlt//title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\n,name:\"deleteworights\"})):\"\"):\"\")));}}):\"\"),_toConsumableArray(this.props.extractedColumnList).map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.idsName})+(item.dateField?'(dd-mm-yyy)':\"\"),width:200});}),this.props.detailedFieldList&&this.props.detailedFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.idsName})+(item.dateField?'(dd-mm-yyy)':\"\"),width:200});})),/*#__PURE__*/React.createElement(ExcelExport,{data:[]//group={group}\n,collapsible:true,fileName:this.props.screenName&&this.props.screenName,ref:function ref(exporter){// console.log(exporter);\n_this2._excelExportHeader=exporter;}},this.props.isImportRequired===true?this.props.exportFieldList.length>0?this.props.exportFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dataType===\"date\"?'(yyyy-mm-dd)':\"\"),width:200});}):/*#__PURE__*/React.createElement(React.Fragment,null,this.props.extractedColumnList&&this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dataType===\"date\"?'(yyyy-mm-dd)':\"\"),width:200});}),this.props.detailedFieldList&&this.props.detailedFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dataType===\"date\"?'(yyyy-mm-dd)':\"\"),width:200});})):/*#__PURE__*/React.createElement(React.Fragment,null,this.props.extractedColumnList&&this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dataType===\"date\"?'(yyyy-mm-dd)':\"\"),width:200});}),this.props.detailedFieldList&&this.props.detailedFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(ExcelExportColumn,{field:item.dataField,title:_this2.props.intl.formatMessage({id:item.dataField})+'('+_this2.props.intl.formatMessage({id:item.idsName})+')'+(item.dataType===\"date\"?'(yyyy-mm-dd)':\"\"),width:200});})))),this.props.isToolBarRequired?/*#__PURE__*/React.createElement(\"ttfStyle\",null,/*#__PURE__*/React.createElement(GridPDFExport,{ref:function ref(element){_this2._pdfExport=element;},margin:\"1cm\"// paperSize= \"A4\"\n,scale:0.75,fileName:\"Export.pdf\"},/*#__PURE__*/React.createElement(Grid,{data:process(this.props.data||[],{sort:this.props.dataState.sort,filter:this.props.dataState.filter,group:this.props.dataState.group}),group:this.props.dataState.group,groupable:true},this.props.extractedColumnList.map(function(item,index){return/*#__PURE__*/React.createElement(GridColumn,{key:index,title:_this2.props.intl.formatMessage({id:item.idsName}),field:item.dataField,width:item.width,cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}});}),this.props.detailedFieldList&&this.props.detailedFieldList.map(function(item,index){return/*#__PURE__*/React.createElement(GridColumn,{key:index,title:_this2.props.intl.formatMessage({id:item.idsName}),field:item.dataField,width:item.width,cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,item.isIdsField?/*#__PURE__*/React.createElement(FormattedMessage,{id:row[\"dataItem\"][item.dataField],defaultMessage:row[\"dataItem\"][item.dataField]}):row[\"dataItem\"][item.dataField]);}});}))),/*#__PURE__*/React.createElement(\"style\",null,ttfFont)):\"\"));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(){ReactTooltip.rebuild();}}]);return DataGrid;}(React.Component);var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};export default connect(mapStateToProps,{dynamicFileDownload:dynamicFileDownload,undefined:undefined})(injectIntl(DataGrid));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/components/data-grid/data-grid.component.jsx"],"names":["faBarcode","faCheck","faCloudDownloadAlt","faCopy","faEye","faFileCsv","faFileExcel","faFileImport","faFilePdf","faLanguage","faPencilAlt","faPlus","faRedo","faSync","faThumbsUp","faTrashAlt","FontAwesomeIcon","ExcelExport","ExcelExportColumn","Grid","GridColumn","GridColumnMenuFilter","GridNoRecords","GridToolbar","GridPDFExport","React","Button","Card","Col","FormGroup","FormLabel","Image","Nav","Row","FormattedMessage","injectIntl","AtTableWrap","FontIconWrap","FormControlStatic","ColumnMenu","SimpleGrid","process","LocalizationProvider","parse","CSVLink","connect","toast","ReactTooltip","ttfFont","ConfirmMessage","getActionIcon","CustomSwitch","FormCheckbox","dynamicFileDownload","rearrangeDateFormatDateOnly","DataGrid","props","detailBand","hasDynamicColSize","detailedFieldList","length","marginLeft","map","item","columnSize","idsName","dataItem","dataField","undefined","isIdsField","isHTML","dataType","intl","formatMessage","id","inputParam","userInfo","Login","viewFileURL","hasChild","childList","get","parseInt","childMappingField","childColumnList","expandChange","event","isExpanded","expanded","aggregates","value","handleExpandChange","dataState","setState","exportExcel","dataResult","data","_excelExport","save","info","exportExcelHeader","_excelExportHeader","exportPDF","_pdfExport","handleClickDelete","deleteParam","row","confirmMessage","confirm","deleteRecord","field","hideColumnFilter","returntype","columnMenu","headerClassName","isColumnActive","active","filter","methodUrl","addId","controlMap","has","concat","ncontrolcode","editId","barcodeId","languagesId","deleteId","approveId","copyId","completeId","switchId","switchParam","operation","cancelId","downloadId","resentId","selectedId","pageSizes","settings","split","setting","actionColWidth","slanguagetypecode","iscsv","ELNTest","selectedfilename","batchCSViewList","sort","group","exporter","extractedColumnList","height","gridHeight","width","gridWidth","scrollable","pageable","buttonCount","previousNext","groupfooter","enabled","footer","groupable","hideDetailBand","expandField","total","handleRowClick","dataStateChange","isToolBarRequired","isAddRequired","userRoleControlRights","indexOf","addRecord","isCustomButton","customButtonlist","button","label","hidden","onClick","controlname","isRefreshRequired","reloadData","isImportRequired","import","isDownloadPDFRequired","isDownloadExcelRequired","isExportExcelRequired","exportExcelNew","index","columnProps","rowType","aggregatedColumn","columnIndex","aggregateLabel","sum","componentName","textAlign","primaryKeyField","dataIndex","needRights","controlName","onSwitchChange","selectedRecord","ncontrolCode","switchFieldName","switchStatus","checkBoxField","onInputOnChange","fieldType","color","isActionRequired","left","right","borderRightWidth","fetchRecord","editParam","primaryKeyValue","editRow","openBarcodeModal","languagesRecord","languagesParam","languagesRow","viewDownloadFile","masterdata","downloadParam","inputData","userinfo","isreportview","viewReportFile","approveRecord","copyRecord","completeRecord","reSent","reject","cancelRecord","actionIcons","action","title","hasControlWithOutRights","showeditRecordWORights","editRecordWORights","showdeleteRecordWORights","deleteRecordWORights","dateField","screenName","exportFieldList","element","rebuild","Component","mapStateToProps","state"],"mappings":"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","sourcesContent":["import {\r\n    faBarcode,\r\n    faCheck,\r\n    faCloudDownloadAlt,\r\n    faCopy,\r\n    faEye,\r\n    faFileCsv,\r\n    faFileExcel,\r\n    faFileImport,\r\n    faFilePdf,\r\n    faLanguage,\r\n    faPencilAlt,\r\n    faPlus,\r\n    faRedo,\r\n    faSync,\r\n    faThumbsUp,\r\n    faTrashAlt\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { ExcelExport, ExcelExportColumn } from '@progress/kendo-react-excel-export';\r\nimport { Grid, GridColumn, GridColumnMenuFilter, GridNoRecords, GridToolbar } from '@progress/kendo-react-grid';\r\nimport { GridPDFExport } from '@progress/kendo-react-pdf';\r\nimport React from 'react';\r\nimport { Button, Card, Col, FormGroup, FormLabel, Image, Nav, Row } from 'react-bootstrap';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { AtTableWrap, FontIconWrap, FormControlStatic } from '../data-grid/data-grid.styles';\r\nimport ColumnMenu from './ColumnMenu';\r\nimport SimpleGrid from './SimpleGrid';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { LocalizationProvider } from '@progress/kendo-react-intl';\r\nimport parse from 'html-react-parser';\r\nimport { CSVLink } from \"react-csv\";\r\nimport { connect } from 'react-redux';\r\nimport { toast } from 'react-toastify';\r\nimport ReactTooltip from 'react-tooltip';\r\nimport reject from '../../assets/image/reject.svg';\r\nimport { ttfFont } from '../../assets/styles/ttfFont';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { getActionIcon } from '../HoverIcons';\r\nimport CustomSwitch from '../custom-switch/custom-switch.component'; // import '../../assets/styles/unicode-font.css';\r\nimport FormCheckbox from '../form-checkbox/form-checkbox.component';\r\nimport { dynamicFileDownload } from '../../actions/ServiceAction';\r\nimport {rearrangeDateFormatDateOnly} from \"../../components/CommonScript\";\r\nimport { ReactComponent as MailResend} from '../../assets/image/Mail Resend.svg';\r\n\r\nclass DataGrid extends React.Component {\r\n\r\n    _pdfExport;\r\n    _excelExport;\r\n    constructor(props) {\r\n        super(props);\r\n        this.confirmMessage = new ConfirmMessage();\r\n\r\n    }\r\n\r\n\r\n    detailBand = (props) => {\r\n\r\n        return (\r\n            <Row bsPrefix=\"margin_class\">\r\n                <Col md={12}>\r\n                    {this.props.hasDynamicColSize ?\r\n                        <div>\r\n                            {this.props.detailedFieldList.length > 0 &&\r\n                                <div>\r\n                                    <Card>\r\n                                        <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                                        <Card.Body className=\"form-static-wrap\">\r\n                                            <Row style={{ marginLeft: -18 }}>\r\n                                                {this.props.detailedFieldList.map((item) => {\r\n                                                    return (\r\n\r\n                                                        <Col md={item.columnSize}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel><FormattedMessage id={item.idsName} message={item.idsName} /></FormLabel>\r\n                                                                <FormControlStatic>\r\n                                                                    {\r\n                                                                        props.dataItem[item.dataField] === undefined ||\r\n                                                                            props.dataItem[item.dataField] === null ||\r\n                                                                            props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                                            item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> :\r\n                                                                                item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField]}\r\n                                                                              {item.dataType && item.dataType[0] === 'files' ?\r\n                                                                                <FontIconWrap icon={faCloudDownloadAlt} className=\"ml-2 className action-icons-wrap\" size=\"lg\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                                                    data-place=\"left\"\r\n                                                                                    onClick={() => this.props.dynamicFileDownload({ ...props.dataItem, ...this.props.inputParam, ...item,userInfo:this.props.Login.userInfo,...this.props.viewFileURL })}>\r\n                                                                                    <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                                                                </FontIconWrap> : \"\"\r\n                                                                            }\r\n                                                                </FormControlStatic>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                    )\r\n                                                })}\r\n                                            </Row>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n\r\n                        : this.props.hasChild ?\r\n                            <SimpleGrid childList={this.props.childList.get(parseInt(props.dataItem[this.props.childMappingField])) || []}\r\n                                extractedColumnList={this.props.childColumnList} />\r\n                            :\r\n                            <div>\r\n\r\n                                {this.props.detailedFieldList.length > 0 &&\r\n                                    <div>\r\n                                        <row>\r\n                                            <Card>\r\n                                                <Card.Header><FormattedMessage id=\"IDS_MOREINFO\" message=\"More Info\" /></Card.Header>\r\n                                                <Card.Body className=\"form-static-wrap\">\r\n                                                    {\r\n                                                        this.props.detailedFieldList.map((item) => {\r\n                                                            return (\r\n\r\n                                                                <Col md={6}>\r\n                                                                    <FormGroup>\r\n                                                                        <FormLabel><FormattedMessage id={item.idsName} message={item.idsName} /></FormLabel>\r\n                                                                        <FormControlStatic>\r\n                                                                            {props.dataItem[item.dataField] === undefined || props.dataItem[item.dataField] === null || props.dataItem[item.dataField].length === 0 ? '-' :\r\n                                                                                item.isIdsField ? <FormattedMessage id={props.dataItem[item.dataField]} message={props.dataItem[item.dataField]} /> : item.isHTML ? parse(props.dataItem[item.dataField]) : props.dataItem[item.dataField]}\r\n\r\n                                                                            {item.dataType && item.dataType[0] === 'files' ?\r\n                                                                                <FontIconWrap icon={faCloudDownloadAlt} className=\"ml-2 className action-icons-wrap\" size=\"lg\"\r\n                                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                                                    data-place=\"left\"\r\n                                                                                    onClick={() => this.props.dynamicFileDownload({ ...props.dataItem, ...this.props.inputParam, ...item ,userInfo:this.props.Login.userInfo,...this.props.viewFileURL})}>\r\n                                                                                    <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                                                                </FontIconWrap> : \"\"\r\n                                                                            }\r\n                                                                        </FormControlStatic>\r\n                                                                    </FormGroup>\r\n\r\n                                                                </Col>\r\n                                                            )\r\n                                                        })}\r\n\r\n                                                </Card.Body>\r\n                                            </Card>\r\n                                        </row>\r\n                                    </div>\r\n                                }\r\n\r\n                            </div>}\r\n                </Col> </Row>\r\n        )\r\n    }\r\n\r\n    expandChange = (event) => {\r\n        const isExpanded =\r\n            event.dataItem.expanded === undefined ?\r\n                event.dataItem.aggregates : event.dataItem.expanded;\r\n\r\n        if (this.props.hasChild && event.value === true) {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.props.handleExpandChange(event, this.props.dataState)\r\n        }\r\n        else {\r\n            event.dataItem.expanded = !isExpanded;\r\n            this.setState({ isExpanded });\r\n        }\r\n    }\r\n\r\n\r\n    exportExcel = () => {\r\n        if (this.props.dataResult.data.length > 0) {\r\n            this._excelExport.save();\r\n        }\r\n        else\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_NODATATOEXPORT\" }));\r\n    }\r\n\r\n    exportExcelHeader = () => {\r\n        //  if (this.props.dataResult.data.length > 0) {\r\n        this._excelExportHeader.save();\r\n        // }\r\n        // else\r\n        //     toast.info(this.props.intl.formatMessage({ id: \"IDS_NODATATOEXPORT\" }));\r\n    }\r\n\r\n    exportPDF = () => {\r\n        if (this.props.dataResult.data.length > 0)\r\n            this._pdfExport.save();\r\n        else\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_NODATATOEXPORT\" }));\r\n    }\r\n\r\n    columnProps(field) {\r\n        if (!this.props.hideColumnFilter) {\r\n\r\n            const returntype = {\r\n                field: field,\r\n                columnMenu: ColumnMenu,\r\n                headerClassName: this.isColumnActive(field, this.props.dataState) ? 'active' : ''\r\n            }\r\n            return returntype;\r\n        }\r\n    }\r\n\r\n    isColumnActive(field, dataState) {\r\n        return GridColumnMenuFilter.active(field, dataState.filter)\r\n    }\r\n\r\n    handleClickDelete = (deleteParam, row) => {\r\n        //this.props.deleteRecord(deleteParam);\r\n\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.props.deleteRecord(deleteParam, row));\r\n    }\r\n\r\n    render() {\r\n\r\n        //console.log(\"controlMap:\", this.props);\r\n        //  loadMessages(messages[this.props.Login.userInfo.slanguagetypecode], \"lang\");\r\n        const methodUrl = this.props.methodUrl ? this.props.methodUrl : (this.props.inputParam && this.props.inputParam.methodUrl);\r\n\r\n        const addId = this.props.controlMap && this.props.controlMap.has(\"Add\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Add\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const editId = this.props.controlMap && this.props.controlMap.has(\"Edit\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Edit\".concat(methodUrl)).ncontrolcode;\r\n\r\n            const barcodeId = this.props.controlMap && this.props.controlMap.has(\"Barcode\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Barcode\".concat(methodUrl)).ncontrolcode;\r\n\r\n\r\n        {/* Add by Neeraj kumar for Language screen -RMTP-101*/ }\r\n        const languagesId = this.props.controlMap && this.props.controlMap.has(\"Update\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Update\".concat(methodUrl)).ncontrolcode;\r\n\r\n        // const viewId = this.props.controlMap.has(\"View\".concat(methodUrl))\r\n        //     && this.props.controlMap.get(\"View\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const deleteId = this.props.controlMap && this.props.controlMap.has(\"Delete\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Delete\".concat(methodUrl)).ncontrolcode;\r\n\r\n        // const defaultId = this.props.controlMap && this.props.controlMap.has(\"Default\".concat(methodUrl))\r\n        //     && this.props.controlMap.get(\"Default\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const approveId = this.props.controlMap && this.props.controlMap.has(\"Approve\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Approve\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const copyId = this.props.controlMap && this.props.inputParam && this.props.controlMap.has(\"Copy\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Copy\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const completeId = this.props.controlMap && this.props.controlMap.has(\"Complete\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Complete\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const switchId = this.props.controlMap && this.props.switchParam && this.props.controlMap.has(this.props.switchParam.operation.concat(methodUrl))\r\n            && this.props.controlMap.get(this.props.switchParam.operation.concat(methodUrl)).ncontrolcode;\r\n\r\n        const cancelId = this.props.controlMap && this.props.controlMap.has(\"Cancel\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Cancel\".concat(methodUrl)).ncontrolcode;\r\n\r\n        // const receiveGoodsId = this.props.controlMap.has(\"Receive\".concat(methodUrl))\r\n        //     && this.props.controlMap.get(\"Receive\".concat(methodUrl)).ncontrolcode;\r\n        const downloadId = this.props.controlMap && this.props.controlMap.has(\"Download\".concat(methodUrl))\r\n            && this.props.controlMap.get(\"Download\".concat(methodUrl)).ncontrolcode;\r\n\r\n        const resentId = this.props.controlMap && this.props.controlMap.has(\"Resent\")\r\n            && this.props.controlMap.get(\"Resent\").ncontrolcode;\r\n\r\n        const selectedId = this.props.selectedId;\r\n        // const confirmMessage = new ConfirmMessage();\r\n        //console.log(\"props:\",this.props);\r\n        const pageSizes = this.props.pageSizes ? this.props.pageSizes : this.props.Login.settings && this.props.Login.settings[15].split(\",\").map(setting => parseInt(setting))\r\n        return (\r\n            <>\r\n                {/* <ReactTooltip place=\"bottom\" id=\"tooltip-grid-wrap\" globalEventOff='click' /> */}\r\n                <AtTableWrap className=\"at-list-table\" actionColWidth={this.props.actionColWidth ? this.props.actionColWidth : \"150px\"} >\r\n                    {/* <Tooltip openDelay={100} position=\"bottom\" tooltipClassName=\"ad-tooltip\" anchorElement=\"element\" parentTitle={true}> */}\r\n                    <LocalizationProvider language={this.props.Login.userInfo.slanguagetypecode}>\r\n                        {this.props.iscsv ?\r\n                            <>\r\n                                {\r\n                                    <>\r\n                                        <div className=\"d-flex justify-content-end\">\r\n                                            <CSVLink data={this.props.ELNTest ? this.props.ELNTest : this.props.data} filename={this.props.selectedfilename + \".csv\"}\r\n                                                headers={this.props.batchCSViewList}\r\n                                            >{this.props.ELNTest ? this.props.intl.formatMessage({ id: \"IDS_EXPORTTOELN\" }) : this.props.intl.formatMessage({ id: \"IDS_EXPORTCSV\" })}</CSVLink>\r\n                                        </div>\r\n\r\n                                    </>\r\n                                }\r\n                                <style>{ttfFont}</style>\r\n\r\n                            </> : \"\"}\r\n                        <ExcelExport\r\n                            data={process(this.props.data || [], { sort: this.props.dataState.sort, filter: this.props.dataState.filter, group: this.props.dataState.group }).data}\r\n                            filterable={true}\r\n                            // fileName={this.props.inputParam && this.props.intl.formatMessage({ id: this.props.inputParam.displayName })}\r\n                            group={this.props.dataState.group}\r\n                            ref={(exporter) => {\r\n                                // console.log(exporter);\r\n                                this._excelExport = exporter;\r\n                            }}>\r\n                            <Grid\r\n                                className={((this.props.dataResult && this.props.dataResult.length > 0) || (this.props.extractedColumnList && this.props.extractedColumnList.length > 0)) ? \"active-paging\" : \"no-paging\"}\r\n                                style={{ height: this.props.gridHeight, width: this.props.gridWidth }}\r\n                                sortable\r\n                                resizable\r\n                                reorderable={false}\r\n                                scrollable={this.props.scrollable}\r\n                                pageable={this.props.pageable && this.props.data && this.props.data.length > 0 ? { buttonCount: 5, pageSizes: pageSizes, previousNext: false } : false}\r\n                                // pageable={this.props.pageable ? { buttonCount: 5, pageSizes: pageSizes, previousNext: false } : \"\"}\r\n                                groupable={this.props.groupfooter?\r\n                                    {\r\n                                        enabled: false,\r\n                                        footer: \"visible\",\r\n                                    } :  \r\n                                    this.props.groupable ? true : false}\r\n                                detail={this.props.hideDetailBand ? false : this.detailBand}\r\n                                expandField={(this.props.detailedFieldList && this.props.detailedFieldList.length > 0 || this.props.childColumnList && this.props.childColumnList.length > 0) && this.props.expandField ? this.props.expandField : false}\r\n                                onExpandChange={this.expandChange}\r\n                                data={this.props.dataResult}\r\n                                total={this.props.total}\r\n                                {...this.props.dataState}\r\n                                selectedField=\"selected\"\r\n                                onRowClick={this.props.handleRowClick}\r\n                                onDataStateChange={this.props.dataStateChange}>\r\n                                <GridNoRecords>\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_NORECORDSAVAILABLE\" })}\r\n                                </GridNoRecords>\r\n                                {this.props.isToolBarRequired ?\r\n                                    <GridToolbar>\r\n                                        {this.props.isAddRequired === false ? <></> :\r\n                                            <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(addId) === -1}\r\n                                                onClick={() => this.props.addRecord(addId)}>\r\n                                                <FontAwesomeIcon icon={faPlus} />\r\n                                            </Button>\r\n                                        }\r\n                                      {this.props.isCustomButton?\r\n                                         this.props.customButtonlist.map(button=>{\r\n                                            return <>\r\n                                             <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: button.label })}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                               hidden={button.hidden}\r\n                                                onClick={button.onClick}>\r\n                                               {getActionIcon(button.controlname)}\r\n                                            </Button>\r\n                                            </>\r\n                                         }) :<></>\r\n                                        }\r\n                                        {this.props.isRefreshRequired === false ? <></> :\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={() => this.props.reloadData()}>\r\n                                                <FontAwesomeIcon icon={faSync} />\r\n                                            </Button>\r\n                                        }\r\n                                        {this.props.isImportRequired === true ?\r\n                                            <>\r\n                                                <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EXPORTTEMPLATE\" })}\r\n                                                    //data-for=\"tooltip-grid-wrap\"\r\n                                                    onClick={this.exportExcelHeader}>\r\n                                                    <FontAwesomeIcon icon={faFileExcel} />\r\n                                                </Button>\r\n                                                <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_IMPORTDATA\" })}\r\n                                                    // data-for=\"tooltip-grid-wrap\"\r\n                                                    onClick={() => this.props.import()}>\r\n                                                    <FontAwesomeIcon icon={faFileImport} />\r\n                                                </Button>\r\n                                            </> : \"\"\r\n                                        }\r\n\r\n                                        {this.props.isDownloadPDFRequired === false ? <></> :\r\n\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADPDF\" })}\r\n                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={this.exportPDF}>\r\n                                                <FontAwesomeIcon icon={faFilePdf} />\r\n                                            </Button>\r\n                                        }\r\n                                        {/* : \"\"\r\n                                        } */}\r\n                                        {this.props.isDownloadExcelRequired === false ? <></> :\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADEXCEL\" })}\r\n                                                //data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={this.exportExcel}>\r\n                                                <FontAwesomeIcon icon={faFileExcel} />\r\n                                            </Button>\r\n                                        }\r\n\r\n\r\n\r\n                                        {this.props.isExportExcelRequired === true ?\r\n                                            <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADCSV\" })}\r\n                                                //data-for=\"tooltip-grid-wrap\"\r\n                                                onClick={() => this.props.exportExcelNew()}>\r\n                                                <FontAwesomeIcon icon={faFileCsv} />\r\n                                            </Button>\r\n                                            : <></>\r\n                                        }\r\n                                        {/* <Button className=\"btn btn-circle outline-grey\" variant=\"link\"\r\n                                            title=\"Download Excel\"\r\n                                            onClick={this.exportExcel}>\r\n                                            <FontAwesomeIcon icon={faFileExcel} />\r\n                                        </Button> */}\r\n\r\n                                    </GridToolbar>\r\n                                    : <></>}\r\n                                {\r\n                                    this.props.extractedColumnList.map((item, index) =>\r\n                                        item.idsName &&\r\n                                        <GridColumn key={index}\r\n                                            // data-tip={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                            title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                            {...this.columnProps(item.dataField)}\r\n                                            width={item.width}\r\n                                            cell={(row) => (\r\n                                                row.rowType === \"groupFooter\" ?\r\n                                                item.dataField\r\n                                                === this.props.aggregatedColumn ?\r\n                                                <td aria-colindex={row.columnIndex} role={\"gridcell\"}>\r\n                                                    {this.props.intl.formatMessage({ id: this.props.aggregateLabel })} :\r\n                                                    {row.dataItem.aggregates[this.props.aggregatedColumn].sum}\r\n                                                </td> : null :\r\n                                                row.rowType === \"groupHeader\" ? null :\r\n                                                    item.componentName === \"switch\" ?\r\n                                                        <td style={{ textAlign: \"center\" }}>\r\n                                                            <CustomSwitch type=\"switch\" id={row[\"dataItem\"][this.props.primaryKeyField] + \"_\" + row.dataIndex + \"_\" + row.columnIndex}\r\n                                                                disabled={item.needRights ? this.props.userRoleControlRights\r\n                                                                    && this.props.userRoleControlRights.indexOf(\r\n                                                                        this.props.controlMap.has(item.controlName) && this.props.controlMap.get(item.controlName).ncontrolcode\r\n                                                                    ) === -1 : false}\r\n                                                                onChange={(event) => this.props.onSwitchChange({ ...this.props.switchParam, selectedRecord: row[\"dataItem\"], ncontrolCode: switchId }, event)}\r\n                                                                checked={row[\"dataItem\"][item.switchFieldName] === item.switchStatus ? true : false}\r\n                                                                name={row[\"dataItem\"][this.props.primaryKeyField] + \"_\" + row.dataIndex + \"_\" + row.columnIndex} />\r\n                                                        </td> :\r\n                                                        item.componentName === \"checkbox\" ?\r\n                                                            <td>\r\n                                                                <FormCheckbox\r\n                                                                    name={row[\"dataItem\"][this.props.primaryKeyField] + \"_\" + row.dataIndex + \"_\" + row.columnIndex}\r\n                                                                    type=\"checkbox\"\r\n                                                                    value={row[\"dataItem\"][item.checkBoxField] !== 0 ? true : false}\r\n                                                                    isMandatory={false}\r\n                                                                    required={false}\r\n                                                                    //checked={row[\"dataItem\"][item.checkBoxField] === item.switchStatus ? true : false}\r\n                                                                    checked={row[\"dataItem\"][item.checkBoxField] !== 0 ? true : false}\r\n                                                                    onChange={(event) => this.props.onInputOnChange(event)}\r\n                                                                />\r\n                                                            </td> :\r\n                                                        item.fieldType === \"gradeColumn\" ?\r\n                                                        row.rowType === \"groupHeader\" ? null :\r\n                                                        <td\r\n                                                         data-tip={row[\"dataItem\"][item.dataField]}\r\n                                                        // data-for=\"tooltip_grid_wrap\"\r\n                                                        className={`${selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}`}\r\n                                                        style={{ color: [row[\"dataItem\"]['scolorhexcode']] }}\r\n                                                        >\r\n                                                        {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_grid_wrap\" /> */}\r\n                                                        {row[\"dataItem\"][item.dataField]}\r\n                                                        </td>:\r\n                                                            <td data-tip={row[\"dataItem\"][item.dataField]}\r\n                                                                //data-for=\"tooltip-grid-wrap\"\r\n                                                                className={selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''}>\r\n\r\n                                                                {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]}\r\n                                                                    defaultMessage={row[\"dataItem\"][item.dataField]} /> :item.fieldType===\"dateOnlyFormat\" ? rearrangeDateFormatDateOnly(this.props.Login.userInfo, row[\"dataItem\"][item.dataField])\r\n                                                                    : row[\"dataItem\"][item.dataField]\r\n\r\n                                                                    // : row[\"dataItem\"][item.dataField] ? row[\"dataItem\"][item.dataField] :\r\n                                                                    //     this.props.jsonField ? row[\"dataItem\"][this.props.jsonField] &&\r\n                                                                    //         row[\"dataItem\"][this.props.jsonField][item.dataField]&&\r\n                                                                    //         row[\"dataItem\"][this.props.jsonField][item.dataField]['label'] ||\r\n                                                                    //         row[\"dataItem\"][this.props.jsonField][item.dataField]\r\n\r\n                                                                }       {\r\n                                                                    item.dataType && item.dataType[0] === 'files' ?\r\n                                                                        <FontIconWrap icon={faCloudDownloadAlt} className=\"ml-2 className action-icons-wrap\" size=\"lg\"\r\n                                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOAD\" })}\r\n                                                                            data-place=\"left\"\r\n                                                                            onClick={() => this.props.dynamicFileDownload({ ...item, ...row.dataItem,userInfo:this.props.Login.userInfo,...this.props.viewFileURL })}>\r\n                                                                            <FontAwesomeIcon icon={faCloudDownloadAlt} />\r\n                                                                        </FontIconWrap> : \"\"\r\n                                                                }\r\n                                                            </td>\r\n                                            )}\r\n                                        />\r\n                                    )}\r\n\r\n                                {this.props.isActionRequired ?\r\n\r\n                                    <GridColumn\r\n                                        locked\r\n                                        headerClassName=\"text-center\"\r\n                                        title={this.props.intl.formatMessage({ id: 'IDS_ACTION' })}\r\n                                        sort={false}\r\n                                        cell={(row) => (\r\n                                            row.rowType === \"groupFooter\" ? null :\r\n                                            row.rowType === \"groupHeader\" ? null :\r\n                                                <td className={`k-grid-content-sticky k-command-cell selectedId === row[\"dataItem\"][this.props.primaryKeyField] ? 'active' : ''`} style={{ left: '0', right: '0', borderRightWidth: '1px', textAlign: 'center' }}>\r\n                                                    <>\r\n                                                        <Nav.Link>\r\n                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                                data-place=\"left\"\r\n                                                                hidden={this.props.\r\n                                                                    userRoleControlRights && this.props.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                onClick={() => this.props.fetchRecord({ ...this.props.editParam, primaryKeyValue: row[\"dataItem\"][this.props.editParam.primaryKeyField], editRow: row[\"dataItem\"], ncontrolCode: editId })}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                            </FontIconWrap>\r\n                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_PRINTBARCODE\" })}\r\n                                                                // data-for=\"tooltip-grid-wrap\"\r\n                                                                data-place=\"left\"\r\n                                                                hidden={this.props.\r\n                                                                    userRoleControlRights && this.props.userRoleControlRights.indexOf(barcodeId) === -1}\r\n                                                                onClick={() => this.props.openBarcodeModal(row[\"dataItem\"], barcodeId,this.props.userInfo ,false)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faBarcode} />\r\n                                                            </FontIconWrap>\r\n                                                            {/* Add by Neeraj kumar for Language screen -RMTP-101*/}\r\n                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_ADDSYNONYMN\" })}\r\n                                                                //  data-for=\"tooltip-grid-wrap\"\r\n                                                                data-place=\"left\"\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(languagesId) === -1}\r\n                                                                onClick={() => this.props.languagesRecord({ ...this.props.languagesParam, primaryKeyValue: row[\"dataItem\"][this.props.languagesParam.primaryKeyField], languagesRow: row[\"dataItem\"], ncontrolCode: languagesId })}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faLanguage} />\r\n                                                            </FontIconWrap>\r\n\r\n                                                            {/* <FontAwesomeIcon icon={faEye}\r\n                                                    title={this.props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(viewId) === -1}\r\n                                                    onClick={() => this.props.viewRecord({...this.props.viewParam, primaryKeyValue:row[\"dataItem\"][this.props.viewParam.primaryKeyField], viewRow:row[\"dataItem\"]})}/>\r\n                                                 */}        <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })} data-place=\"top\"\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                                onClick={() => this.handleClickDelete({ ...this.props.deleteParam, selectedRecord: row[\"dataItem\"], ncontrolCode: deleteId }, row)}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                                {/* <ConfirmDialog\r\n                                                                    name=\"deleteMessage\"\r\n                                                                    cardTitle={this.props.intl.formatMessage({ id: \"IDS_CONFIRMATION\" })}\r\n                                                                    title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                    message={this.props.intl.formatMessage({ id: \"IDS_DELETECONFIRMMSG\" })}\r\n                                                                    doLabel={this.props.intl.formatMessage({ id: \"IDS_OK\" })}\r\n                                                                    doNotLabel={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })}\r\n                                                                    icon={faTrashAlt}\r\n                                                                    handleClickDelete={() => this.handleClickDelete({ ...this.props.deleteParam, selectedRecord: row[\"dataItem\"], ncontrolCode: deleteId }, row)}\r\n                                                                /> */}\r\n                                                            </FontIconWrap>\r\n\r\n                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(downloadId) === -1}\r\n                                                                onClick={() => this.props.viewDownloadFile({ ...this.props.masterdata, ...this.props.downloadParam, inputData: { ...row[\"dataItem\"], userinfo: this.props.Login.userInfo }, userinfo: this.props.Login.userInfo, ncontrolCode: downloadId }, row)}\r\n                                                                data-tip={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })} data-place=\"left\"\r\n                                                            //  data-for=\"tooltip-grid-wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCloudDownloadAlt} //title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })}\r\n                                                                />\r\n                                                            </FontIconWrap>\r\n                                                            {this.props.isreportview ?\r\n                                                                <FontIconWrap className=\"d-font-icon action-icons-wrap\"\r\n                                                                    //hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(viewreport) === -1}\r\n                                                                    onClick={() => this.props.viewReportFile({ ...this.props.masterdata, ...this.props.downloadParam, inputData: { ...row[\"dataItem\"], userinfo: this.props.Login.userInfo }, userinfo: this.props.Login.userInfo, ncontrolCode: downloadId }, row)}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_VIEWREPORT\" })} data-place=\"left\"\r\n                                                                //  data-for=\"tooltip-grid-wrap\"\r\n                                                                >\r\n\r\n                                                                    <FontAwesomeIcon icon={faEye} //title={this.props.intl.formatMessage({ id: \"IDS_DOWNLOADFILE\" })} \r\n                                                                    />\r\n                                                                </FontIconWrap>\r\n                                                                : \"\"}\r\n                                                            {/* <FontAwesomeIcon icon={faTrashAlt}\r\n                                                    title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                    onClick = {() => confirmMessage.confirm(\r\n                                                        \"deleteMessage\",\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n                                                        this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                                                        () => this.handleClickDelete({ ...this.props.deleteParam, selectedRecord: row[\"dataItem\"], ncontrolCode: deleteId }, row)\r\n                                                    )}\r\n                                                /> */}\r\n\r\n                                                            {/* <FontAwesomeIcon icon={faThumbtack}\r\n                                                            title={this.props.intl.formatMessage({ id: \"IDS_SETDEFAULT\" })}\r\n                                                            hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(defaultId) === -1}\r\n                                                            onClick={() => this.props.defaultRecord({ ...this.props.defaultParam, selectedRecord: row[\"dataItem\"], ncontrolCode: defaultId }, row)} /> */}\r\n                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(approveId) === -1}\r\n                                                                onClick={() => this.props.approveRecord(row, \"Approve\", approveId)} data-place=\"left\"\r\n                                                            //data-for=\"tooltip-grid-wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faThumbsUp} />\r\n                                                            </FontIconWrap>\r\n                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(copyId) === -1}\r\n                                                                onClick={() => this.props.copyRecord(row, \"Copy\", copyId)} data-place=\"left\"\r\n                                                            // data-for=\"tooltip-grid-wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCopy} />\r\n                                                            </FontIconWrap>\r\n\r\n                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_COMPLETE\" })}\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(completeId) === -1}\r\n                                                                onClick={() => this.props.completeRecord(row[\"dataItem\"], \"Complete\", completeId)} data-place=\"left\"\r\n                                                            // data-for=\"tooltip-grid-wrap\"\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faCheck} />\r\n                                                            </FontIconWrap>\r\n\r\n                                                            <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_RESENT\" })}\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(resentId) === -1}\r\n                                                                onClick={() => this.props.reSent(row[\"dataItem\"], \"Resent\", resentId)}\r\n                                                                data-place=\"left\" //data-for=\"tooltip-grid-wrap\"\r\n                                                            >\r\n                                                                <MailResend width=\"24px\" className='svg-inline--fa'/>\r\n                                                                {/* <FontAwesomeIcon icon={faRedo} /> */}\r\n                                                            </FontIconWrap>\r\n\r\n\r\n                                                            <Nav.Link className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_CANCEL\" })} data-place=\"left\" //data-for=\"tooltip-grid-wrap\"\r\n                                                                hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(cancelId) === -1} >\r\n                                                                <Image src={reject} alt=\"filer-icon action-icons-wrap\" width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"\r\n                                                                    onClick={() => this.props.cancelRecord(row[\"dataItem\"], \"Cancel\", cancelId)} data-place=\"left\"\r\n                                                                />\r\n                                                            </Nav.Link>\r\n                                                            {/* <Button variant=\"link\" title={this.props.intl.formatMessage({ id: \"IDS_RECEIVE\" })}\r\n                                                    className=\"mr-2 action-icons-wrap\"\r\n                                                    hidden={this.props.userRoleControlRights && this.props.userRoleControlRights.indexOf(receiveGoodsId) === -1}\r\n                                                    onClick={() => this.props.receiveRecord({ ...this.props.receiveParam, selectedRecord: row[\"dataItem\"], ncontrolCode: receiveGoodsId })}>\r\n                                                    <Image src={checkedIcon} alt=\"filer-icon\" width=\"20\" height=\"20\" />\r\n                                                </Button> */}\r\n                                                            {this.props.actionIcons? this.props.actionIcons.length > 0 ? this.props.actionIcons.map(action =>\r\n                                                                <FontIconWrap\r\n                                                                    className=\"d-font-icon action-icons-wrap\"\r\n                                                                    data-tip={action.title}\r\n                                                                    hidden={action.hidden === undefined ? true : action.hidden}\r\n                                                                    onClick={() => action.onClick(row[\"dataItem\"], action, row)}>\r\n                                                                    {getActionIcon(action.controlname)}\r\n                                                                </FontIconWrap>\r\n                                                            ):\"\":\"\"}\r\n                                                            {this.props.hasControlWithOutRights ?\r\n                                                                <>\r\n                                                                    {this.props.showeditRecordWORights ?\r\n                                                                        <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                            //title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} \r\n                                                                            data-place=\"left\">\r\n                                                                            <FontAwesomeIcon icon={faPencilAlt}\r\n                                                                                //title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                name={\"deleteworights\"}\r\n                                                                                onClick={() => this.props.editRecordWORights(row[\"dataItem\"])}\r\n                                                                            />\r\n                                                                        </FontIconWrap>:\"\"\r\n                                                                    }\r\n                                                                    {/* Add by Neeraj kumar for Language screen -RMTP-101*/}\r\n                                                                    {this.props.showeditRecordWORights ?\r\n                                                                        <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_LANGUAGESCONVERTER\" })}\r\n                                                                            //title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} \r\n                                                                            data-place=\"left\">\r\n                                                                            <FontAwesomeIcon icon={faLanguage}\r\n                                                                                //title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                                name={\"deleteworights\"}\r\n                                                                                onClick={() => this.props.editRecordWORights(row[\"dataItem\"])}\r\n                                                                            />\r\n                                                                        </FontIconWrap>:\"\"\r\n                                                                    }\r\n                                                                    {\r\n                                                                        this.props.showdeleteRecordWORights ?\r\n                                                                        <FontIconWrap className=\"d-font-icon action-icons-wrap\" data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                            // data-for=\"tooltip-grid-wrap\"\r\n                                                                            onClick={() => this.props.deleteRecordWORights(row[\"dataItem\"])}>\r\n                                                                            <FontAwesomeIcon icon={faTrashAlt}\r\n                                                                                //title={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                                                name={\"deleteworights\"}\r\n\r\n                                                                            />\r\n                                                                        </FontIconWrap>:\"\"\r\n                                                                    }\r\n\r\n                                                                </>:\"\"\r\n                                                            }\r\n                                                        </Nav.Link>\r\n                                                    </>\r\n\r\n                                                </td>\r\n                                        )}\r\n                                    /> : \"\"}\r\n                            </Grid>\r\n                            {[...this.props.extractedColumnList].map((item, index) =>\r\n                                <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.idsName }) + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                            )}\r\n                            {this.props.detailedFieldList &&\r\n                                this.props.detailedFieldList.map((item, index) =>\r\n                                    <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.idsName }) + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                                )}\r\n                        </ExcelExport>\r\n                        <ExcelExport\r\n                            data={[]}\r\n                            //group={group}\r\n                            collapsible={true}\r\n                            fileName={this.props.screenName && this.props.screenName}\r\n                            ref={(exporter) => {\r\n                                // console.log(exporter);\r\n                                this._excelExportHeader = exporter;\r\n                            }}>\r\n                            {//console.log(this.props.extractedColumnList)\r\n                            }\r\n                                             \r\n                            {\r\n                                this.props.isImportRequired === true ?\r\n                                    this.props.exportFieldList.length > 0 ? \r\n                                        this.props.exportFieldList.map((item, index) =>\r\n                                            <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dataType === \"date\" ? '(yyyy-mm-dd)' : \"\")} width={200} />\r\n                                        )\r\n\t\t                            :  \r\n                                        <>\r\n                                            {this.props.extractedColumnList && this.props.extractedColumnList.map((item, index) =>\r\n                                                <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dataType === \"date\" ? '(yyyy-mm-dd)' : \"\")} width={200} />\r\n                                            )}\r\n                                            {this.props.detailedFieldList &&  this.props.detailedFieldList.map((item, index) =>\r\n                                                <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dataType === \"date\" ? '(yyyy-mm-dd)' : \"\")} width={200} />\r\n                                            )}\r\n\r\n                                        </>\r\n                                    \r\n                                : \r\n                                    <>\r\n                                        {this.props.extractedColumnList && this.props.extractedColumnList.map((item, index) =>\r\n                                            <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dataType === \"date\" ? '(yyyy-mm-dd)' : \"\")} width={200} />\r\n                                        )}\r\n\r\n                                        {this.props.detailedFieldList &&  this.props.detailedFieldList.map((item, index) =>\r\n                                            <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dataType === \"date\" ? '(yyyy-mm-dd)' : \"\")} width={200} />\r\n                                        )}\r\n                                    </>\r\n                                 \r\n                            }\r\n\r\n                             {/* {[...this.props.extractedColumnList].map((item, index) =>\r\n                                <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                            )}  \r\n\r\n                            {this.props.detailedFieldList &&\r\n                                this.props.detailedFieldList.map((item, index) =>\r\n                                    <ExcelExportColumn field={item.dataField} title={this.props.intl.formatMessage({ id: item.dataField }) + '(' + this.props.intl.formatMessage({ id: item.idsName }) + ')' + (item.dateField ? '(dd-mm-yyy)' : \"\")} width={200} />\r\n                            )}  */}\r\n                        </ExcelExport>\r\n                    </LocalizationProvider >\r\n                    {/* </Tooltip> */}\r\n                    {\r\n                        this.props.isToolBarRequired ?\r\n                            <ttfStyle>\r\n                                <GridPDFExport\r\n                                    ref={(element) => { this._pdfExport = element; }}\r\n                                    margin=\"1cm\"\r\n                                    // paperSize= \"A4\"\r\n                                    scale={0.75}\r\n                                    fileName=\"Export.pdf\"\r\n\r\n                                >\r\n\r\n                                    {\r\n                                        <Grid data={process(this.props.data || [], { sort: this.props.dataState.sort, filter: this.props.dataState.filter, group: this.props.dataState.group })} group={this.props.dataState.group} groupable={true}>\r\n                                            {this.props.extractedColumnList.map((item, index) =>\r\n                                                <GridColumn key={index} title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                                    field={item.dataField}\r\n                                                    width={item.width}\r\n\r\n                                                    cell={(row) => (\r\n                                                        <td>\r\n                                                            {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                                                : row[\"dataItem\"][item.dataField]}\r\n                                                        </td>)}\r\n                                                />\r\n                                            )}\r\n                                            {this.props.detailedFieldList &&\r\n                                                this.props.detailedFieldList.map((item, index) =>\r\n                                                    <GridColumn key={index} title={this.props.intl.formatMessage({ id: item.idsName })}\r\n                                                        field={item.dataField}\r\n                                                        width={item.width}\r\n\r\n                                                        cell={(row) => (\r\n                                                            <td>\r\n                                                                {item.isIdsField ? <FormattedMessage id={row[\"dataItem\"][item.dataField]} defaultMessage={row[\"dataItem\"][item.dataField]} />\r\n                                                                    : row[\"dataItem\"][item.dataField]}\r\n                                                            </td>)}\r\n                                                    />\r\n                                                )}\r\n\r\n\r\n                                        </Grid>}\r\n                                </GridPDFExport>\r\n\r\n                                <style>{ttfFont}</style>\r\n                            </ttfStyle>\r\n                            : \"\"\r\n                    }\r\n\r\n\r\n                </AtTableWrap >\r\n            </>\r\n        );\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        ReactTooltip.rebuild();\r\n    }\r\n}\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, {dynamicFileDownload,undefined})(injectIntl(DataGrid));"]},"metadata":{},"sourceType":"module"}