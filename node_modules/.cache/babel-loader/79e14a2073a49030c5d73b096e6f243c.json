{"ast":null,"code":"import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{injectIntl,FormattedMessage}from'react-intl';import{Nav,Row,Col}from'react-bootstrap';import DataGrid from'../../components/data-grid/data-grid.component';import{process}from'@progress/kendo-data-query';var PortalOrderDetailsTestTab=/*#__PURE__*/function(_React$Component){_inherits(PortalOrderDetailsTestTab,_React$Component);var _super=_createSuper(PortalOrderDetailsTestTab);function PortalOrderDetailsTestTab(props){var _this;_classCallCheck(this,PortalOrderDetailsTestTab);_this=_super.call(this,props);_this.state={testDataState:{skip:0,take:_this.props.settings?parseInt(_this.props.settings[14]):5}};return _this;}_createClass(PortalOrderDetailsTestTab,[{key:\"render\",value:function render(){var _this2=this;var portalTestColumnList=[{\"idsName\":\"IDS_TESTCATEGORY\",\"dataField\":\"stestcategoryname\",\"width\":\"150px\"},{\"idsName\":\"IDS_TEST\",\"dataField\":\"stestname\",\"width\":\"150px\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:\"nportalordertestcode\",data:this.props.PortalOrderTest,dataResult:process(this.props.PortalOrderTest||[],this.state.testDataState),dataState:this.state.testDataState,dataStateChange:function dataStateChange(event){return _this2.setState({testDataState:event.dataState});},extractedColumnList:portalTestColumnList,inputParam:this.props.inputParam,userInfo:this.props.userInfo,pageable:true,scrollable:'scrollable'}))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.PortalOrderTest!==previousProps.PortalOrderTest){var testDataState=this.state.testDataState;if(this.props.dataState===undefined){testDataState={skip:0,take:this.props.settings?parseInt(this.props.settings[14]):5};}this.setState({testDataState:testDataState});}}}]);return PortalOrderDetailsTestTab;}(React.Component);;export default injectIntl(PortalOrderDetailsTestTab);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/registration/PortalOrderDetailsTestTab.jsx"],"names":["React","injectIntl","FormattedMessage","Nav","Row","Col","DataGrid","process","PortalOrderDetailsTestTab","props","state","testDataState","skip","take","settings","parseInt","portalTestColumnList","PortalOrderTest","event","setState","dataState","inputParam","userInfo","previousProps","undefined","Component"],"mappings":"wtBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,UAAT,CAAqBC,gBAArB,KAA6C,YAA7C,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,GAAnB,KAA8B,iBAA9B,CACA,MAAOC,CAAAA,QAAP,KAAqB,gDAArB,CACA,OAASC,OAAT,KAAwB,4BAAxB,C,GACOC,CAAAA,yB,kJACH,mCAAYC,KAAZ,CAAmB,2DACnB,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAc,CACVC,aAAa,CAAE,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,MAAKJ,KAAL,CAAWK,QAAX,CAAsBC,QAAQ,CAAC,MAAKN,KAAL,CAAWK,QAAX,CAAoB,EAApB,CAAD,CAA9B,CAA0D,CAA3E,CADL,CAAd,CAFmB,aAKtB,C,4DACG,iBAAQ,iBACJ,GAAME,CAAAA,oBAAoB,CAAG,CACzB,CAAC,UAAU,kBAAX,CAA8B,YAAY,mBAA1C,CAA8D,QAAQ,OAAtE,CADyB,CAEzB,CAAC,UAAU,UAAX,CAAsB,YAAY,WAAlC,CAA8C,QAAQ,OAAtD,CAFyB,CAA7B,CAIJ,mBACI,qDAEI,oBAAC,GAAD,EAAK,SAAS,CAAE,IAAhB,eACI,oBAAC,GAAD,EAAK,EAAE,CAAC,IAAR,eACI,oBAAC,QAAD,EACG,eAAe,CAAG,sBADrB,CAEG,IAAI,CAAI,KAAKP,KAAL,CAAWQ,eAFtB,CAGG,UAAU,CAAIV,OAAO,CAAC,KAAKE,KAAL,CAAWQ,eAAX,EAA4B,EAA7B,CAAgC,KAAKP,KAAL,CAAWC,aAA3C,CAHxB,CAIG,SAAS,CAAI,KAAKD,KAAL,CAAWC,aAJ3B,CAKG,eAAe,CAAI,yBAACO,KAAD,QAAW,CAAA,MAAI,CAACC,QAAL,CAAc,CAACR,aAAa,CAAEO,KAAK,CAACE,SAAtB,CAAd,CAAX,EALtB,CAMG,mBAAmB,CAAIJ,oBAN1B,CAOG,UAAU,CAAI,KAAKP,KAAL,CAAWY,UAP5B,CAQG,QAAQ,CAAI,KAAKZ,KAAL,CAAWa,QAR1B,CASG,QAAQ,CAAE,IATb,CAUG,UAAU,CAAE,YAVf,EADJ,CADJ,CAFJ,CADJ,CAuBH,C,kCACD,4BAAmBC,aAAnB,CAAkC,CAC9B,GAAI,KAAKd,KAAL,CAAWQ,eAAX,GAA+BM,aAAa,CAACN,eAAjD,CAAkE,CAC9D,GAAMN,CAAAA,aAAN,CAAuB,KAAKD,KAA5B,CAAMC,aAAN,CACA,GAAI,KAAKF,KAAL,CAAWW,SAAX,GAAwBI,SAA5B,CAAuC,CACnCb,aAAa,CAAG,CAAEC,IAAI,CAAE,CAAR,CAAWC,IAAI,CAAE,KAAKJ,KAAL,CAAWK,QAAX,CAAsBC,QAAQ,CAAC,KAAKN,KAAL,CAAWK,QAAX,CAAoB,EAApB,CAAD,CAA9B,CAA0D,CAA3E,CAAhB,CACH,CACD,KAAKK,QAAL,CAAc,CAAER,aAAa,CAAbA,aAAF,CAAd,EACH,CAEJ,C,uCA7CwCX,KAAK,CAACyB,S,EA8C9C,CAED,cAAexB,CAAAA,UAAU,CAACO,yBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { Nav, Row, Col } from 'react-bootstrap';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { process } from '@progress/kendo-data-query';\r\nclass  PortalOrderDetailsTestTab extends React.Component{\r\n    constructor(props) {\r\n    super(props);\r\n    this.state = ({\r\n        testDataState: { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 },\r\n    });\r\n}\r\n    render(){\r\n        const portalTestColumnList = [\r\n            {\"idsName\":\"IDS_TESTCATEGORY\",\"dataField\":\"stestcategoryname\",\"width\":\"150px\"},\r\n            {\"idsName\":\"IDS_TEST\",\"dataField\":\"stestname\",\"width\":\"150px\"}\r\n        ];\r\n    return (\r\n        <>\r\n        \r\n            <Row noGutters={true}>\r\n                <Col md=\"12\">\r\n                    <DataGrid\r\n                       primaryKeyField = \"nportalordertestcode\"\r\n                       data = {this.props.PortalOrderTest}\r\n                       dataResult = {process(this.props.PortalOrderTest||[],this.state.testDataState)}\r\n                       dataState = {this.state.testDataState}\r\n                       dataStateChange = {(event) => this.setState({testDataState: event.dataState })}\r\n                       extractedColumnList = {portalTestColumnList}\r\n                       inputParam = {this.props.inputParam}\r\n                       userInfo = {this.props.userInfo}\r\n                       pageable={true}\r\n                       scrollable={'scrollable'}\r\n                       \r\n                    >\r\n                    </DataGrid>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\ncomponentDidUpdate(previousProps) {\r\n    if (this.props.PortalOrderTest !== previousProps.PortalOrderTest) {\r\n        let { testDataState} = this.state;\r\n        if (this.props.dataState=== undefined) {\r\n            testDataState = { skip: 0, take: this.props.settings ? parseInt(this.props.settings[14]) : 5 };\r\n        }\r\n        this.setState({ testDataState });\r\n    }\r\n\r\n}\r\n};\r\n\r\nexport default injectIntl(PortalOrderDetailsTestTab);"]},"metadata":{},"sourceType":"module"}