{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\testgroup\\\\TestGroupRulesEngineTab.jsx\";\nimport { faEye, faPencilAlt, faPlus, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { ReactComponent as Reject } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/image/reject.svg\";\nimport { Button, Card, Nav } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\nimport { ProductList } from '../product/product.styled';\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\nimport { rulesEngineMoreFields, rulesEngineSubFields } from './TestGroupFields';\nimport { sortData } from '../../components/CommonScript';\n\nconst TestGroupRulesEngineTab = props => {\n  console.log('props--->>>', props);\n  const addId = props.controlMap.has(\"Add Rules Engine\") && props.controlMap.get(\"Add Rules Engine\").ncontrolcode;\n  const editId = props.controlMap.has(\"Edit Rules Engine\") && props.controlMap.get(\"Edit Rules Engine\").ncontrolcode;\n  const deleteId = props.controlMap.has(\"Delete Rules Engine\") && props.controlMap.get(\"Delete Rules Engine\").ncontrolcode;\n  const ApproveId = props.controlMap.has(\"Approve Rules Engine\") && props.controlMap.get(\"Approve Rules Engine\").ncontrolcode;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card.Header, {\n    className: \"sm-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Card.Body, {\n    className: 'no-pad-t',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TransactionListMasterJsonView, {\n    cardHead: 167 // componentBreadcrumbs={this.breadCrumbData ? this.breadCrumbData.length > 0 ? true : false : false}\n    // notSearchable={false}\n    ,\n    masterList: props.masterData.searchedDataRulesEngine || sortData(props.masterData.RulesEngine, 'descending', 'ntestgrouprulesenginecode') || [],\n    selectedMaster: [props.masterData.SelectedRulesEngine],\n    clickIconGroup: true // selectedMaster={SelectedTest !== undefined ? [SelectedTest] : undefined}\n    ,\n    primaryKeyField: \"ntestgrouprulesenginecode\",\n    getMasterDetail: param => props.getSelectedTestGroupRulesEngine(param, props.userInfo, props.masterData) //  inputParam={getTest}\n    // additionalParam={[]}\n    ,\n    mainField: \"srulename\",\n    selectedListName: \"SelectedRulesEngine\",\n    objectName: \"RulesEngine\",\n    listName: \"IDS_RULESENGINE\",\n    showStatusLink: true,\n    statusFieldName: \"stransdisplaystatus\",\n    statusField: \"ntransactionstatus\",\n    subFields: rulesEngineSubFields,\n    moreField: rulesEngineMoreFields,\n    needValidation: false,\n    needFilter: false,\n    filterColumnData: props.filterTransactionList,\n    searchListName: \"searchedDataRulesEngine\" //searchRef={this.searchRef}\n    ,\n    hidePaging: false,\n    filterParam: props.filterParamRulesEngine,\n    handlePageChange: props.handlePageChangeRuleEngine,\n    skip: props.skipRulesEngine,\n    take: props.takeRulesEngine,\n    pageSize: props.settings && props.settings[13].split(\",\").map(setting => parseInt(setting)),\n    actionIcons: [// {\n    //     title: props.intl.formatMessage({ id: \"IDS_EDIT\" }),\n    //     controlname: \"faPencilAlt\",\n    //     objectName: \"SelectedRulesEngine\",\n    //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n    //     hidden: false,\n    //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\n    //     onClick:   props.getEditTestGroupRulesEngine(\n    //         \"update\",  props.Login.masterData,    props.Login.userInfo\n    //     ),\n    //   //s  needConditionalIcon: true,\n    //   //  conditionalIconFunction: this.fileViewIcon\n    // }, \n    // {\n    //     title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\n    //     controlname: \"faTrashAlt\",\n    //     objectName: \"SelectedRulesEngine\",\n    //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n    //     hidden: false,\n    //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\n    //     //  onClick: (props) => this.getEditRulesEngine(props), \n    // }, {\n    //     title: props.intl.formatMessage({ id: \"IDS_APPROVE\" }),\n    //     controlname: \"faThumbsUp\",\n    //     objectName: \"SelectedRulesEngine\",\n    //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n    //     hidden: false,\n    //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\n    //     //  onClick: (props) => this.getEditRulesEngine(props), \n    // },  \n    {\n      title: props.intl.formatMessage({\n        id: \"IDS_VIEWRULE\"\n      }),\n      controlname: \"faEye\",\n      objectName: \"SelectedRulesEngine\",\n      // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n      hidden: false,\n      inputData: {\n        masterData: props.masterData,\n        userInfo: props.userInfo\n      },\n      onClick: props.openflowview\n    }, {\n      title: props.intl.formatMessage({\n        id: \"IDS_VIEWOUTCOME\"\n      }),\n      controlname: \"faGift\",\n      objectName: \"SelectedRulesEngine\",\n      // hidden: props.userRoleControlRights.indexOf(editId) === -1,\n      hidden: false,\n      inputData: {\n        masterData: props.masterData,\n        userInfo: props.userInfo\n      },\n      onClick: props.viewOutcome\n    }],\n    commonActions: /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ProductList, {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-icon-rounded btn-circle solid-blue mr-1\",\n      role: \"button\",\n      hidden: props.userRoleControlRights.indexOf(addId) === -1,\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_ADD\"\n      }) // data-for=\"tooltip-list-wrap\"\n      ,\n      onClick: () => props.getTestGroupRulesEngineAdd(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      title: props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr0 mr-1\",\n      href: \"#\",\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      hidden: props.userRoleControlRights.indexOf(editId) === -1,\n      onClick: e => props.getEditTestGroupRulesEngine(\"update\", props.masterData, props.userInfo),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey \",\n      href: \"\",\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      hidden: props.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: props.ConfirmDeleteRule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey ml-1\",\n      \"data-tip\": props.intl.formatMessage({\n        id: \"IDS_APPROVE\"\n      }),\n      hidden: props.userRoleControlRights.indexOf(ApproveId) === -1,\n      onClick: e => props.approveVersion(props.masterData, 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 41\n      }\n    })))),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }))));\n};\n\nexport default injectIntl(TestGroupRulesEngineTab);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/TestGroupRulesEngineTab.jsx"],"names":["faEye","faPencilAlt","faPlus","faThumbsUp","faTrashAlt","FontAwesomeIcon","React","Button","Card","Nav","injectIntl","TransactionListMasterJsonView","ProductList","ConfirmMessage","rulesEngineMoreFields","rulesEngineSubFields","sortData","TestGroupRulesEngineTab","props","console","log","addId","controlMap","has","get","ncontrolcode","editId","deleteId","ApproveId","masterData","searchedDataRulesEngine","RulesEngine","SelectedRulesEngine","param","getSelectedTestGroupRulesEngine","userInfo","filterTransactionList","filterParamRulesEngine","handlePageChangeRuleEngine","skipRulesEngine","takeRulesEngine","settings","split","map","setting","parseInt","title","intl","formatMessage","id","controlname","objectName","hidden","inputData","onClick","openflowview","viewOutcome","userRoleControlRights","indexOf","getTestGroupRulesEngineAdd","e","getEditTestGroupRulesEngine","ConfirmDeleteRule","approveVersion"],"mappings":"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","sourcesContent":["import { faEye, faPencilAlt, faPlus, faThumbsUp, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { ReactComponent as Reject } from '../../assets/image/reject.svg'\r\nimport { Button, Card, Nav } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport TransactionListMasterJsonView from '../../components/TransactionListMasterJsonView';\r\nimport { ProductList } from '../product/product.styled';\r\nimport ConfirmMessage from '../../components/confirm-alert/confirm-message.component';\r\nimport { rulesEngineMoreFields, rulesEngineSubFields } from './TestGroupFields';\r\nimport { sortData } from '../../components/CommonScript';\r\n\r\nconst TestGroupRulesEngineTab = (props) => {\r\n    console.log('props--->>>', props)\r\n    const addId = props.controlMap.has(\"Add Rules Engine\") && props.controlMap.get(\"Add Rules Engine\").ncontrolcode;\r\n    const editId = props.controlMap.has(\"Edit Rules Engine\") && props.controlMap.get(\"Edit Rules Engine\").ncontrolcode;\r\n    const deleteId = props.controlMap.has(\"Delete Rules Engine\") && props.controlMap.get(\"Delete Rules Engine\").ncontrolcode;\r\n    const ApproveId = props.controlMap.has(\"Approve Rules Engine\") && props.controlMap.get(\"Approve Rules Engine\").ncontrolcode;\r\n\r\n\r\n    return (\r\n        <>\r\n            <Card>\r\n                <Card.Header className='sm-header'>\r\n                    {/* <span style={{ display: \"inline-block\" }} >\r\n                        <h4>{props.intl.formatMessage({ id: \"IDS_TEST\" })}</h4>\r\n                    </span> */}\r\n                    {/* <button className=\"btn btn-primary\" style={{ float: \"right\" }}\r\n                        onClick={() => this.showSpecAndTestInfo()}>\r\n                        <FontAwesomeIcon icon={faEye}></FontAwesomeIcon>{\"  \"}\r\n                        {props.intl.formatMessage({ id: \"IDS_SPECINFO\" })}\r\n                    </button> */}\r\n                </Card.Header>\r\n                <Card.Body className={'no-pad-t'}>\r\n                    <TransactionListMasterJsonView\r\n                        cardHead={167}\r\n                        // componentBreadcrumbs={this.breadCrumbData ? this.breadCrumbData.length > 0 ? true : false : false}\r\n                        // notSearchable={false}\r\n                        masterList={props.masterData.searchedDataRulesEngine||sortData(props.masterData.RulesEngine, 'descending', 'ntestgrouprulesenginecode') || []}\r\n                        selectedMaster={[props.masterData.SelectedRulesEngine]}\r\n                        clickIconGroup={true}\r\n                        // selectedMaster={SelectedTest !== undefined ? [SelectedTest] : undefined}\r\n                        primaryKeyField=\"ntestgrouprulesenginecode\"\r\n                        getMasterDetail={(param) => props.getSelectedTestGroupRulesEngine(param, props.userInfo, props.masterData)}\r\n                        //  inputParam={getTest}\r\n                        // additionalParam={[]}\r\n                        mainField=\"srulename\"\r\n                        selectedListName=\"SelectedRulesEngine\"\r\n                        objectName=\"RulesEngine\"\r\n                        listName=\"IDS_RULESENGINE\"\r\n                        showStatusLink={true}\r\n                        statusFieldName=\"stransdisplaystatus\"\r\n                        statusField=\"ntransactionstatus\"\r\n                        subFields={rulesEngineSubFields}\r\n                        moreField={rulesEngineMoreFields}\r\n                        needValidation={false}\r\n                        needFilter={false}\r\n                        filterColumnData={props.filterTransactionList}\r\n                        searchListName=\"searchedDataRulesEngine\"\r\n                        //searchRef={this.searchRef}\r\n                        hidePaging={false}\r\n                         filterParam={props.filterParamRulesEngine}\r\n                        handlePageChange={props.handlePageChangeRuleEngine}\r\n                        skip={props.skipRulesEngine}\r\n                        take={props.takeRulesEngine}\r\n                        pageSize={props.settings && props.settings[13].split(\",\").map(setting => parseInt(setting))}\r\n                        actionIcons={\r\n                            [\r\n                                // {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_EDIT\" }),\r\n                                //     controlname: \"faPencilAlt\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     onClick:   props.getEditTestGroupRulesEngine(\r\n                                //         \"update\",  props.Login.masterData,    props.Login.userInfo\r\n                                //     ),\r\n                                //   //s  needConditionalIcon: true,\r\n                                //   //  conditionalIconFunction: this.fileViewIcon\r\n                                // }, \r\n                                // {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n                                //     controlname: \"faTrashAlt\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     //  onClick: (props) => this.getEditRulesEngine(props), \r\n                                // }, {\r\n                                //     title: props.intl.formatMessage({ id: \"IDS_APPROVE\" }),\r\n                                //     controlname: \"faThumbsUp\",\r\n                                //     objectName: \"SelectedRulesEngine\",\r\n                                //     // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                //     hidden: false,\r\n                                //     inputData: { masterData: props.Login.masterData, userInfo: props.Login.userInfo },\r\n                                //     //  onClick: (props) => this.getEditRulesEngine(props), \r\n                                // },  \r\n                                {\r\n                                      title: props.intl.formatMessage({ id: \"IDS_VIEWRULE\" }),\r\n                                      controlname: \"faEye\",\r\n                                      objectName: \"SelectedRulesEngine\",\r\n                                      // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                      hidden: false,\r\n                                      inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                     onClick:   props.openflowview \r\n                                  }, {\r\n                                      title: props.intl.formatMessage({ id: \"IDS_VIEWOUTCOME\" }),\r\n                                      controlname: \"faGift\",\r\n                                      objectName: \"SelectedRulesEngine\",\r\n                                      // hidden: props.userRoleControlRights.indexOf(editId) === -1,\r\n                                      hidden: false,\r\n                                      inputData: { masterData: props.masterData, userInfo: props.userInfo },\r\n                                        onClick:  props.viewOutcome  \r\n                                  }\r\n                            ]\r\n                        }\r\n                        commonActions={\r\n                            <>\r\n                                <ProductList className=\"d-flex product-category float-right icon-group-wrap\">\r\n                                    <Nav.Link  className=\"btn btn-icon-rounded btn-circle solid-blue mr-1\"  role=\"button\"\r\n                                         hidden={props.userRoleControlRights.indexOf(addId) === -1}\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        // data-for=\"tooltip-list-wrap\"\r\n                                        onClick={() => props.getTestGroupRulesEngineAdd()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPlus} title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link  className=\"btn btn-circle outline-grey mr0 mr-1\"  href=\"#\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(editId) === -1}\r\n\r\n                                        onClick={(e) =>\r\n                                            props.getEditTestGroupRulesEngine(\r\n                                                \"update\", props.masterData, props.userInfo\r\n                                            )\r\n                                        }\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faPencilAlt}\r\n                                            title={props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey \" href=\"\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(deleteId) === -1}\r\n\r\n                                        onClick={props.ConfirmDeleteRule}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey ml-1\" \r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_APPROVE\" })}\r\n                                        hidden={props.userRoleControlRights.indexOf(ApproveId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 1)}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faThumbsUp} />\r\n                                    </Nav.Link>\r\n                                    {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_RETIRE\" })}\r\n                                        // hidden={props.userRoleControlRights.indexOf(approveVersionId) === -1}\r\n                                        onClick={(e) => props.approveVersion(props.masterData, 2)}\r\n                                    >\r\n                                        <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                    </Nav.Link> */}\r\n\r\n                                    {/* <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_VIEWRULE\" })}\r\n                                        // hidden={props.userRoleControlRights.indexOf(approveVersionId) === -1}\r\n                                        onClick={() => props.openflowview()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faEye} />\r\n                                    </Nav.Link>\r\n                                    <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                        data-tip={props.intl.formatMessage({ id: \"IDS_VIEWOUTCOME\" })}\r\n                                        // hidden={props.userRoleControlRights.indexOf(approveVersionId) === -1}\r\n                                        onClick={() => props.viewOutcome()}\r\n                                    >\r\n                                        <FontAwesomeIcon icon={faEye} />\r\n                                    </Nav.Link> */}\r\n                                </ProductList>\r\n\r\n                            </>\r\n                        }\r\n                    />\r\n                </Card.Body>\r\n            </Card>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(TestGroupRulesEngineTab);"]},"metadata":{},"sourceType":"module"}