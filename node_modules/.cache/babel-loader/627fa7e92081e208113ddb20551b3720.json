{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import{Row,Col,Card}from\"react-bootstrap\";import{connect}from\"react-redux\";import{toast}from\"react-toastify\";import{injectIntl}from\"react-intl\";import{callService,crudMaster,validateEsignCredential,updateStore,changeSampleTypeFilter,filterColumnData,viewAttachment,addProjectMaster,getProjectView,getProjectmasterAddMemberService,addProjectMasterFile,getuserComboServices}from\"../../actions\";import ListMaster from\"../../components/list-master/list-master.component\";import{transactionStatus}from\"../../components/Enumeration\";import{DEFAULT_RETURN}from\"../../actions/LoginTypes\";import{getControlMap,constructOptionList}from\"../../components/CommonScript\";import{ContentPanel}from\"../../components/App.styles\";import{process}from\"@progress/kendo-data-query\";import ConfirmMessage from\"../../components/confirm-alert/confirm-message.component\";import BreadcrumbComponent from\"../../components/Breadcrumb.Component\";import{Affix}from\"rsuite\";import{intl}from\"../../components/App\";import ProjectViewFilter from\"../../pages/project/ProjectViewFilter\";import DataGrid from'../../components/data-grid/data-grid.component';import{convertDateValuetoString,formatInputDate}from'../../components/CommonScript';import ViewInfoDetails from\"../../components/ViewInfoDetails\";import SlideOutModal from\"../../components/slide-out-modal/SlideOutModal\";var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var ProjectView=/*#__PURE__*/function(_Component){_inherits(ProjectView,_Component);var _super=_createSuper(ProjectView);function ProjectView(props){var _this;_classCallCheck(this,ProjectView);_this=_super.call(this,props);_this.sidebarExpandCollapse=function(){_this.setState({sidebarview:true});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.handleExpandChange=function(){var childListMap=new Map();var keylst=_this.props.Login.masterData.ChildProjectView.map(function(key){return key.npreregno;});keylst.map(function(key,i){var ChildProjectView=_this.props.Login.masterData.ChildProjectView;ChildProjectView=ChildProjectView.filter(function(x){return x['npreregno']===key;});childListMap.set(parseInt(key),ChildProjectView);});_this.setState({childListMap:childListMap});};_this.onComboChange=function(comboData,fieldName,caseNo){var selectedRecord=_this.state.selectedRecord||{};switch(caseNo){case 2:var selectedRecordfilter=_this.state.selectedRecordfilter||{};selectedRecordfilter[fieldName]=comboData;_this.setState({selectedRecordfilter:selectedRecordfilter});break;case 3:selectedRecord[fieldName]=comboData;_this.setState({selectedRecord:selectedRecord});break;default:break;}};_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.ConfirmDelete=function(selectedProjectView,operation,deleteId,screenName){_this.confirmMessage.confirm(\"deleteMessage\",_this.props.intl.formatMessage({id:\"IDS_DELETE\"}),_this.props.intl.formatMessage({id:\"IDS_DEFAULTCONFIRMMSG\"}),_this.props.intl.formatMessage({id:\"IDS_OK\"}),_this.props.intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return _this.DeleteProjectMaster(screenName,selectedProjectView,operation,deleteId);});};_this.reloadData=function(onFilterSubmit){_this.searchRef.current.value=\"\";// if (Object.values(this.state.selectedRecordfilter.nsampletypecodevalue).length && this.state.selectedRecordfilter.nsampletypecodevalue !== undefined) {\n// if ( this.props.Login.masterData.SelectedSampleType !== undefined) {\nvar fromDate=_this.props.Login.masterData.FromDate;var toDate=_this.props.Login.masterData.ToDate;if(onFilterSubmit){var selectedRecord=_this.state.selectedRecord||{};if(selectedRecord&&selectedRecord[\"fromdate\"]!==undefined){fromDate=selectedRecord[\"fromdate\"];}if(selectedRecord&&selectedRecord[\"todate\"]!==undefined){toDate=selectedRecord[\"todate\"];}}var obj=convertDateValuetoString(fromDate,toDate,_this.props.Login.userInfo);if(_this.state.selectedRecordfilter!==undefined){if(_this.state.selectedRecordfilter.nsampletypecodevalue!==undefined&&_this.state.selectedRecordfilter.nprojecttypecodevalue!==\"\"){if(Object.values(_this.props.Login.masterData.SelectedSampleType).length&&_this.props.Login.masterData.SelectedSampleType!==undefined){var inputParam={inputData:{nsampletypecode:_this.state.selectedRecordfilter.nsampletypecodevalue.value,nprojecttypecode:_this.state.selectedRecordfilter.nprojecttypecodevalue.value,userinfo:_this.props.Login.userInfo,// nfilterSampleType: this.state.nfilterSampleType,\nnfilterSampleType:_this.state.selectedRecordfilter.nsampletypecodevalue,fromDate:obj.fromDate,toDate:obj.toDate,currentdate:null},// classUrl: \"projectview\",\nmethodUrl:\"ProjectViewBySampleType\"};_this.props.changeSampleTypeFilter(inputParam,_this.props.Login.masterData.filterSampleType,_this.state.selectedRecordfilter.nsampletypecodevalue);}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PROJECTTYPENOTAVAILABLE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SAMPLETYPENOTAVAILABLE\"}));}};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){_this.reloadData(true);//   this.searchRef.current.value = \"\";\n//   // if (this.state.nfilterSampleType.value) {\n//   // if (this.state.selectedRecord.nsampletypecodevalue.value) {\n//   //if ((this.state.selectedRecord).length>0) {\n//   // if (Object.values(this.state.selectedRecordfilter.nsampletypecodevalue).length && this.state.selectedRecordfilter.nsampletypecodevalue !== undefined) {\n//   let fromDate = this.props.Login.masterData.FromDate;\n//   let toDate = this.props.Login.masterData.ToDate;\n//   let selectedRecord = this.state.selectedRecord || {};\n//   if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\n//     fromDate = selectedRecord[\"fromdate\"];\n//   }\n//   if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\n//     toDate = selectedRecord[\"todate\"];\n//   }\n//   let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\n//   if (this.state.selectedRecordfilter !== undefined) {\n//     if (this.state.selectedRecordfilter.nsampletypecodevalue !== undefined && this.state.selectedRecordfilter.nprojecttypecodevalue !== \"\") {\n//       let inputParam = {\n//         inputData: {\n//           nsampletypecode: this.state.selectedRecordfilter.nsampletypecodevalue.value,\n//           nprojecttypecode: this.state.selectedRecordfilter.nprojecttypecodevalue.value,\n//           userinfo: this.props.Login.userInfo,\n//           // nfilterSampleType: this.state.nfilterSampleType,\n//           nfilterSampleType: this.state.selectedRecordfilter.nsampletypecodevalue,\n//           fromDate: obj.fromDate,\n//           toDate: obj.toDate,\n//           currentDate: null\n//         },\n//         // classUrl: \"projectview\",\n//         methodUrl: \"ProjectViewBySampleType\",\n//       };\n//       this.props.changeSampleTypeFilter(\n//         inputParam,\n//         this.props.Login.masterData.filterSampleType,this.state.selectedRecordfilter.nsampletypecodevalue\n//       );\n//     } else {\n//       toast.warn(this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPENOTAVAILABLE\", }));\n//     }\n//   } else {\n//     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVAILABLE\", }));\n//   }\n};var dataState={skip:0,take:10};_this.state={selectedRecord:{},error:\"\",userRoleControlRights:[],selectedProjectView:undefined,controlMap:new Map(),Instrument:[],dataState:dataState,dataResult:[],data:[],childListMap:[],sidebarview:false};_this.searchRef=React.createRef();_this.searchFieldList=[\"sprojectcode\",\"sprojecttitle\",\"ncost\",\"sprojecttypename\",\"stransdisplaystatus\",\"sprojectname\",\"sclientname\"];_this.confirmMessage=new ConfirmMessage();return _this;}_createClass(ProjectView,[{key:\"render\",value:function render(){var _this2=this;var versionStatusCSS=\"outline-secondary\";var activeIconCSS=\"fa fa-check\";if(this.props.Login.masterData.SelectedProjectView&&this.props.Login.masterData.SelectedProjectView.ntransactionstatus===transactionStatus.APPROVED){versionStatusCSS=\"outline-success\";}else if(this.props.Login.masterData.SelectedProjectView&&(this.props.Login.masterData.SelectedProjectView.ntransactionstatus===transactionStatus.RETIRED||this.props.Login.masterData.SelectedProjectView.ntransactionstatus===transactionStatus.CLOSED)){versionStatusCSS=\"outline-danger\";activeIconCSS=\"\";}// if (this.props.Login.openModal) {\n//   this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation)\n// }\n//console.log(\"master main\", this.props.Login.masterData);\n// let mandatoryFields = [];\n//const { userInfo } = this.props.Login;\n// const { SelectedProjectView } = this.props.Login.masterData;\n// const selectedMaster = this.props.Login.masterData.SelectedProjectView;\nvar selectedProjectView=this.props.Login.masterData.SelectedProjectView;var viewProjectId=this.state.controlMap.has(\"View\")&&this.state.controlMap.get(\"View\").ncontrolcode;this.extractedColumnList=[{\"idsName\":\"IDS_ARNO\",\"dataField\":\"sarno\",\"width\":\"150px\"},{\"idsName\":\"IDS_SAMPLETYPE\",\"dataField\":\"sproductname\",\"width\":\"150px\"},{\"idsName\":\"IDS_REGISTRATIONTYPE\",\"dataField\":\"sregtypename\",\"width\":\"200px\"},{\"idsName\":\"IDS_REGISTRATIONSUBTYPE\",\"dataField\":\"sregsubtypename\",\"width\":\"200px\"},{\"idsName\":\"IDS_TRANSACTIONSTATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"200px\"}];var obj=convertDateValuetoString(this.state.selectedRecord[\"fromdate\"]||this.props.Login.masterData&&this.props.Login.masterData.FromDate,this.state.selectedRecord[\"todate\"]||this.props.Login.masterData&&this.props.Login.masterData.ToDate,this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var filterParam={inputListName:\"ProjectView\",selectedObject:\"SelectedProjectView\",primaryKeyField:\"nprojectmastercode\",fetchUrl:\"projectview/getActiveProjectViewById\",fecthInputObject:{userinfo:this.props.Login.userInfo,nsampletypecode:this.props.Login.masterData.SelectedSampleType&&this.props.Login.masterData.SelectedSampleType.nsampletypecode},masterData:this.props.Login.masterData,searchFieldList:this.searchFieldList};var breadCrumbData=this.state.filterData||[];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'4':\"2\")},/*#__PURE__*/React.createElement(\"span\",{onClick:function onClick(){return _this2.setState({sidebarview:!_this2.state.sidebarview});},className:\"sidebar-view-btn\"},!this.state.sidebarview?/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-less-than\"}):/*#__PURE__*/React.createElement(\"i\",{class:\"fa fa-greater-than\"})),/*#__PURE__*/React.createElement(ListMaster,{screenName:this.props.intl.formatMessage({id:\"IDS_PROJECTVIEW\"}),masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.ProjectView,getMasterDetail:function getMasterDetail(ProjectViewdata){return _this2.props.getProjectView(ProjectViewdata,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:selectedProjectView,primaryKeyField:\"nprojectmastercode\",mainField:\"sprojecttitle\",firstField:\"sprojectcode\",secondField:\"sprojecttypename\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,searchRef:this.searchRef,reloadData:this.reloadData,isMultiSelecct:false,hidePaging:false,isClearSearch:this.props.Login.isClearSearch,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,showFilterIcon:true,showFilter:this.props.Login.showFilter,filterComponent:[{\"IDS_PROJECTVIEWFILTER\":/*#__PURE__*/React.createElement(ProjectViewFilter,{filterSampleType:this.state.ProjectViewFilterList||[],nfilterSampleType:this.props.Login.masterData.SelectedSampleType||{},handleDateChange:this.handleDateChange,fromDate:fromDate,toDate:toDate,userInfo:this.props.Login.userInfo,filterProjectType:this.state.ProjectTypeFilterList||[],nfilterProjectType:this.props.Login.masterData.SelectedProjectType||{},onComboChange:this.onComboChange,selectedRecord:this.state.selectedRecordfilter||{}// selectedRecord1={this.state.selectedRecordfilter1 || {}}\n// onFilterChange={this.onFilterChange}\n,handleFilterDateChange:this.handleFilterDateChange})}]})),/*#__PURE__*/React.createElement(Col,{md:\"\".concat(!this.state.sidebarview?'8':\"10\")},selectedProjectView?/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,{className:\"product-title-main\"},this.props.intl.formatMessage({id:\"IDS_TOTALCOST\"})+\" : \"+selectedProjectView.ncost),/*#__PURE__*/React.createElement(Card.Subtitle,null,/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(versionStatusCSS,\" btn-sm ml-3\")},selectedProjectView.stransdisplaystatus)),/*#__PURE__*/React.createElement(\"div\",{className:\"d-inline\"},/*#__PURE__*/React.createElement(ViewInfoDetails,{selectedObject:this.props.Login.masterData.SelectedProjectView,screenHiddenDetails:this.state.userRoleControlRights.indexOf(viewProjectId)===-1,screenName:this.props.Login.screenName,dataTip:this.props.intl.formatMessage({id:\"IDS_VIEW\"}),rowList:[[{dataField:\"sprojecttitle\",idsName:\"IDS_PROJECTTITLE\"},{dataField:\"sprojectdescription\",idsName:\"IDS_PROJECTDESCRIPTION\"}],[{dataField:\"sprojectname\",idsName:\"IDS_PROJECTNAME\"},{dataField:\"sclientname\",idsName:\"IDS_CLIENT\"}],[{dataField:\"sprojectcode\",idsName:\"IDS_PROJECTCODE\"},{dataField:\"stransdisplaystatus\",idsName:\"IDS_PROJECTSTATUS\"}],[{dataField:\"sprojectstartdate\",idsName:\"IDS_PROJECTSTARTDATE\"},{dataField:\"sexpectcompletiondate\",idsName:\"IDS_PROJECTCOMPLETIONDATE\"}]]}))))),/*#__PURE__*/React.createElement(Card.Body,{className:\"form-static-wrap\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(DataGrid,{expandField:\"expanded\",handleExpandChange:this.handleExpandChange,dataResult:this.props.Login.masterData.ParentProjectView&&process(this.props.Login.masterData.ParentProjectView||[],this.state.dataState?this.state.dataState:{skip:0,take:10})// dataResult={this.state.dataResult}\n,dataState:this.state.dataState?this.state.dataState:{skip:0,take:10}// dataState={this.state.dataState}\n,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,pageable:true,scrollable:'scrollable',hideColumnFilter:false,selectedId:0,hasChild:true,childMappingField:'npreregno',childColumnList:[{\"idsName\":\"IDS_SAMPLEARNO\",\"dataField\":\"ssamplearno\",\"width\":\"250px\"},{\"idsName\":\"IDS_TESTNAME\",\"dataField\":\"stestsynonym\",\"width\":\"250px\"},{\"idsName\":\"IDS_COST\",\"dataField\":\"ncost\",\"width\":\"100px\"},{\"idsName\":\"IDS_TRANSACTIONSTATUS\",\"dataField\":\"stransdisplaystatus\",\"width\":\"200px\"}],childList:this.state.childListMap,gridHeight:'355px',isActionRequired:false//  actionColWidth={'250px'}   \n//  gridWidth={'800px'}\n})))))):\"\"))));}},{key:\"componentDidUpdate\",value:// closeModal = () => {\n//   let loadEsign = this.props.Login.loadEsign;\n//   let openModal = this.props.Login.openModal;\n//   let selectedRecord = this.state.selectedRecord;\n//   //    let selectedRecord = this.state.selectedRecord;\n//   if (this.props.Login.loadEsign) {\n//     if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\" || this.props.Login.operation === \"retire\") {\n//       loadEsign = false;\n//       openModal = false;\n//       selectedRecord = {};\n//     }\n//     else {\n//       loadEsign = false;\n//       selectedRecord['esignpassword'] = '';\n//       selectedRecord['esigncomments'] = '';\n//       selectedRecord['esignreason'] = '';\n//     }\n//   }\n//   else {\n//     openModal = false;\n//     selectedRecord = {};\n//   }\n//   const updateInfo = {\n//     typeName: DEFAULT_RETURN,\n//     data: { openModal, loadEsign, selectedRecord }\n//   }\n//   this.props.updateStore(updateInfo);\n// }\nfunction componentDidUpdate(previousProps){var updateState=false;var _this$state=this.state,selectedRecord=_this$state.selectedRecord,selectedRecordfilter=_this$state.selectedRecordfilter,userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,filterData=_this$state.filterData,nfilterSampleType=_this$state.nfilterSampleType,filterSampleType=_this$state.filterSampleType,nfilterProjectType=_this$state.nfilterProjectType,selectedRecordfilter1=_this$state.selectedRecordfilter1;if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=this.props.Login.selectedRecord;updateState=true;this.setState({selectedRecord:selectedRecord,selectedRecordfilter:selectedRecordfilter});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({controlMap:controlMap,userRoleControlRights:userRoleControlRights});//   updateState = true;\n}var nsampletypecode=this.state.nfilterSampleType||{};var nprojecttypecode=this.state.nfilterProjectType||{};if(this.props.Login.masterData!==previousProps.Login.masterData){nfilterSampleType=this.state.nfilterSampleType||{};var _filterSampleType=constructOptionList(this.props.Login.masterData.filterSampleType||[],\"nsampletypecode\",\"ssampletypename\",undefined,undefined,undefined);var ProjectViewFilterList=_filterSampleType.get(\"OptionList\");nsampletypecode=ProjectViewFilterList[0];selectedRecordfilter={nsampletypecodevalue:nsampletypecode};selectedRecord={nsampletypecodevalue:nsampletypecode};////\nnfilterProjectType=this.state.nfilterProjectType||{};var filterProjectType=constructOptionList(this.props.Login.masterData.filterProjectType||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,undefined);var ProjectTypeFilterList=filterProjectType.get(\"OptionList\");nprojecttypecode=ProjectTypeFilterList[0];selectedRecordfilter=_objectSpread(_objectSpread({},selectedRecordfilter),{},{nprojecttypecodevalue:nprojecttypecode});selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nprojecttypecodevalue:nprojecttypecode});this.setState({ProjectViewFilterList:ProjectViewFilterList,ProjectTypeFilterList:ProjectTypeFilterList,selectedRecordfilter:selectedRecordfilter,selectedRecord:selectedRecord,data:this.props.Login.masterData.ParentProjectView,dataResult:process(this.props.Login.masterData.ParentProjectView||[],this.state.dataState)});////\nif(this.props.Login.masterData.SelectedSampleType&&this.props.Login.masterData.SelectedSampleType!==previousProps.Login.masterData.SelectedSampleType){nfilterSampleType={label:this.props.Login.masterData.SelectedSampleType.ssampletypename,value:this.props.Login.masterData.SelectedSampleType.nsampletypecode,item:this.props.Login.masterData.SelectedSampleType};}if(this.props.Login.masterData.SelectedProjectType&&this.props.Login.masterData.SelectedProjectType!==previousProps.Login.masterData.SelectedProjectType){nfilterProjectType={label:this.props.Login.masterData.SelectedProjectType.sprojecttypename,value:this.props.Login.masterData.SelectedProjectType.nprojecttypecode,item:this.props.Login.masterData.SelectedProjectType};}//  selectedRecordfilter = {nsampletypecodevalue:nfilterSampleType}\nfilterData=this.generateBreadCrumData();updateState=true;this.setState({filterData:filterData,selectedRecordfilter:selectedRecordfilter});}if(this.props.Login.masterData.SelectedSampleType!==previousProps.Login.masterData.SelectedSampleType){var nsampletypecodevalue=this.props.Login.masterData.SelectedSampleType?{label:this.props.Login.masterData.SelectedSampleType.ssampletypename,value:this.props.Login.masterData.SelectedSampleType.nsampletypecode,item:this.props.Login.masterData.SelectedSampleType}:\"\";//  nsampletypecode=ProjectViewFilterList[ProjectViewFilterList.length-1];\nselectedRecordfilter=_objectSpread(_objectSpread({},selectedRecordfilter),{},{nsampletypecodevalue:nsampletypecodevalue});selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nsampletypecodevalue:nsampletypecode});// nfilterSampleType = this.props.Login.masterData.nfilterSampleType;\nthis.setState({selectedRecordfilter:selectedRecordfilter,selectedRecord:selectedRecord});}////\nif(this.props.Login.masterData.SelectedProjectType!==previousProps.Login.masterData.SelectedProjectType){var nprojecttypecodevalue=this.props.Login.masterData.SelectedProjectType?{label:this.props.Login.masterData.SelectedProjectType.sprojecttypename,value:this.props.Login.masterData.SelectedProjectType.nprojecttypecode,item:this.props.Login.masterData.SelectedProjectType}:\"\";//  nsampletypecode=ProjectViewFilterList[ProjectViewFilterList.length-1];\nselectedRecordfilter=_objectSpread(_objectSpread({},selectedRecordfilter),{},{nprojecttypecodevalue:nprojecttypecodevalue});selectedRecord=_objectSpread(_objectSpread({},selectedRecord),{},{nprojecttypecodevalue:nprojecttypecode});// nfilterSampleType = this.props.Login.masterData.nfilterSampleType;\nthis.setState({selectedRecordfilter:selectedRecordfilter,selectedRecord:selectedRecord});}// if (this.props.Login.masterData.nfilterSampleType !== previousProps.Login.masterData.nfilterSampleType) {\n// }\n}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.FromDate){var obj=convertDateValuetoString(this.props.Login.masterData.FromDate,this.props.Login.masterData.ToDate,this.props.Login.userInfo);breadCrumbData.push({\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto});}if(this.props.Login.masterData&&this.props.Login.masterData.SelectedSampleType){breadCrumbData.push({label:\"IDS_SAMPLETYPE\",value:this.props.Login.masterData.SelectedSampleType?this.props.Login.masterData.SelectedSampleType.ssampletypename:\"NA\"});}if(this.props.Login.masterData&&this.props.Login.masterData.SelectedProjectType){breadCrumbData.push({label:\"IDS_PROJECTTYPE\",value:this.props.Login.masterData.SelectedProjectType?this.props.Login.masterData.SelectedProjectType.sprojecttypename:\"NA\"});}return breadCrumbData;}}],[{key:\"getDerivedStateFromProps\",value:// onInputOnChange = (event, optional) => {\n//   const selectedRecord = this.state.selectedRecord || {};\n//   if (event.target.type === \"checkbox\") {\n//     selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n//   } else if (event.target.type === 'radio') {\n//     selectedRecord[event.target.name] = optional;\n//   } else {\n//     selectedRecord[event.target.name] = event.target.value;\n//   }\n//   this.setState({ selectedRecord });\n// };\nfunction getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"){if(props.Login.errorCode===417||props.Login.errorCode===409){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return ProjectView;}(Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,filterColumnData:filterColumnData,updateStore:updateStore,validateEsignCredential:validateEsignCredential,changeSampleTypeFilter:changeSampleTypeFilter,viewAttachment:viewAttachment,addProjectMaster:addProjectMaster,getProjectView:getProjectView,getProjectmasterAddMemberService:getProjectmasterAddMemberService,addProjectMasterFile:addProjectMasterFile,getuserComboServices:getuserComboServices})(injectIntl(ProjectView));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/project/ProjectView.jsx"],"names":["React","Component","Row","Col","Card","connect","toast","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","changeSampleTypeFilter","filterColumnData","viewAttachment","addProjectMaster","getProjectView","getProjectmasterAddMemberService","addProjectMasterFile","getuserComboServices","ListMaster","transactionStatus","DEFAULT_RETURN","getControlMap","constructOptionList","ContentPanel","process","ConfirmMessage","BreadcrumbComponent","Affix","intl","ProjectViewFilter","DataGrid","convertDateValuetoString","formatInputDate","ViewInfoDetails","SlideOutModal","mapStateToProps","state","Login","ProjectView","props","sidebarExpandCollapse","setState","sidebarview","handleDateChange","dateName","dateValue","selectedRecord","handleExpandChange","childListMap","Map","keylst","masterData","ChildProjectView","map","key","npreregno","i","filter","x","set","parseInt","onComboChange","comboData","fieldName","caseNo","selectedRecordfilter","dataStateChange","event","dataResult","data","dataState","ConfirmDelete","selectedProjectView","operation","deleteId","screenName","confirmMessage","confirm","formatMessage","id","DeleteProjectMaster","reloadData","onFilterSubmit","searchRef","current","value","fromDate","FromDate","toDate","ToDate","undefined","obj","userInfo","nsampletypecodevalue","nprojecttypecodevalue","Object","values","SelectedSampleType","length","inputParam","inputData","nsampletypecode","nprojecttypecode","userinfo","nfilterSampleType","currentdate","methodUrl","filterSampleType","warn","openFilter","showFilter","updateInfo","typeName","closeFilter","skip","take","error","userRoleControlRights","controlMap","Instrument","createRef","searchFieldList","versionStatusCSS","activeIconCSS","SelectedProjectView","ntransactionstatus","APPROVED","RETIRED","CLOSED","viewProjectId","has","get","ncontrolcode","extractedColumnList","filterParam","inputListName","selectedObject","primaryKeyField","fetchUrl","fecthInputObject","breadCrumbData","filterData","searchedData","ProjectViewdata","isClearSearch","ProjectViewFilterList","ProjectTypeFilterList","SelectedProjectType","handleFilterDateChange","ncost","stransdisplaystatus","indexOf","dataField","idsName","ParentProjectView","previousProps","updateState","nfilterProjectType","selectedRecordfilter1","nformcode","item","push","filterProjectType","label","ssampletypename","sprojecttypename","generateBreadCrumData","breadCrumbFrom","breadCrumbto","masterStatus","errorCode"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Row, Col, Card } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { injectIntl } from \"react-intl\";\r\nimport {\r\n  callService, crudMaster, validateEsignCredential, updateStore, changeSampleTypeFilter, filterColumnData,\r\n  viewAttachment, addProjectMaster, getProjectView, getProjectmasterAddMemberService, addProjectMasterFile, getuserComboServices\r\n} from \"../../actions\";\r\n\r\nimport ListMaster from \"../../components/list-master/list-master.component\";\r\nimport { transactionStatus } from \"../../components/Enumeration\";\r\nimport { DEFAULT_RETURN } from \"../../actions/LoginTypes\";\r\n\r\nimport { getControlMap, constructOptionList }\r\n  from \"../../components/CommonScript\"\r\nimport { ContentPanel } from \"../../components/App.styles\";\r\nimport { process } from \"@progress/kendo-data-query\";\r\nimport ConfirmMessage from \"../../components/confirm-alert/confirm-message.component\";\r\nimport BreadcrumbComponent from \"../../components/Breadcrumb.Component\";\r\nimport { Affix } from \"rsuite\";\r\nimport { intl } from \"../../components/App\";\r\nimport ProjectViewFilter from \"../../pages/project/ProjectViewFilter\";\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport { convertDateValuetoString,formatInputDate } from '../../components/CommonScript';\r\nimport ViewInfoDetails from \"../../components/ViewInfoDetails\";\r\nimport SlideOutModal from \"../../components/slide-out-modal/SlideOutModal\";\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { Login: state.Login };\r\n};\r\n\r\nclass ProjectView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const dataState = { skip: 0, take: 10 };\r\n    this.state = {\r\n      selectedRecord: {},\r\n      error: \"\",\r\n      userRoleControlRights: [],\r\n      selectedProjectView: undefined,\r\n      controlMap: new Map(),\r\n      Instrument: [],\r\n      dataState: dataState,\r\n      dataResult: [], data: [],\r\n      childListMap: [],\r\n      sidebarview: false\r\n    };\r\n    this.searchRef = React.createRef();\r\n    this.searchFieldList = [\"sprojectcode\", \"sprojecttitle\", \"ncost\", \"sprojecttypename\", \"stransdisplaystatus\",\"sprojectname\",\"sclientname\"]\r\n    this.confirmMessage = new ConfirmMessage();\r\n  }\r\n  sidebarExpandCollapse = () => {\r\n      this.setState({\r\n          sidebarview: true\r\n      })          \r\n  }\r\n\r\n  handleDateChange = (dateName, dateValue) => {\r\n    const { selectedRecord } = this.state;\r\n    selectedRecord[dateName] = dateValue;\r\n    this.setState({ selectedRecord });\r\n  };\r\n\r\n\r\n\r\n  // onInputOnChange = (event, optional) => {\r\n  //   const selectedRecord = this.state.selectedRecord || {};\r\n  //   if (event.target.type === \"checkbox\") {\r\n  //     selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n  //   } else if (event.target.type === 'radio') {\r\n  //     selectedRecord[event.target.name] = optional;\r\n  //   } else {\r\n  //     selectedRecord[event.target.name] = event.target.value;\r\n  //   }\r\n  //   this.setState({ selectedRecord });\r\n  // };\r\n\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    if (props.Login.masterStatus !== \"\") {\r\n      if (props.Login.errorCode === 417 || props.Login.errorCode === 409) {\r\n        toast.warn(props.Login.masterStatus);\r\n        props.Login.masterStatus = \"\";\r\n      }\r\n    }\r\n    if (props.Login.error !== state.error) {\r\n      toast.error(props.Login.error);\r\n      props.Login.error = \"\";\r\n    }\r\n    if (props.Login.selectedRecord === undefined) {\r\n      return { selectedRecord: {} };\r\n    }\r\n    return null;\r\n  }\r\n\r\n\r\n  render() {\r\n\r\n\r\n    let versionStatusCSS = \"outline-secondary\";\r\n    let activeIconCSS = \"fa fa-check\"\r\n\r\n\r\n    if (this.props.Login.masterData.SelectedProjectView && this.props.Login.masterData.SelectedProjectView.ntransactionstatus === transactionStatus.APPROVED) {\r\n      versionStatusCSS = \"outline-success\";\r\n    }\r\n    else if (this.props.Login.masterData.SelectedProjectView && ((this.props.Login.masterData.SelectedProjectView.ntransactionstatus === transactionStatus.RETIRED) || (this.props.Login.masterData.SelectedProjectView.ntransactionstatus === transactionStatus.CLOSED))) {\r\n      versionStatusCSS = \"outline-danger\";\r\n      activeIconCSS = \"\";\r\n    }\r\n\r\n\r\n    // if (this.props.Login.openModal) {\r\n    //   this.mandatoryFields = this.findMandatoryFields(this.props.Login.screenName, this.state.selectedRecord, this.props.Login.operation)\r\n    // }\r\n\r\n    //console.log(\"master main\", this.props.Login.masterData);\r\n    // let mandatoryFields = [];\r\n    //const { userInfo } = this.props.Login;\r\n\r\n\r\n\r\n    // const { SelectedProjectView } = this.props.Login.masterData;\r\n    // const selectedMaster = this.props.Login.masterData.SelectedProjectView;\r\n    const selectedProjectView = this.props.Login.masterData.SelectedProjectView;\r\n    const viewProjectId = this.state.controlMap.has(\"View\") && this.state.controlMap.get(\"View\").ncontrolcode;\r\n\r\n    this.extractedColumnList = [\r\n      { \"idsName\": \"IDS_ARNO\", \"dataField\": \"sarno\", \"width\": \"150px\" },\r\n      { \"idsName\": \"IDS_SAMPLETYPE\", \"dataField\": \"sproductname\", \"width\": \"150px\" },\r\n      { \"idsName\": \"IDS_REGISTRATIONTYPE\", \"dataField\": \"sregtypename\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_REGISTRATIONSUBTYPE\", \"dataField\": \"sregsubtypename\", \"width\": \"200px\" },\r\n      { \"idsName\": \"IDS_TRANSACTIONSTATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" },\r\n\r\n    ]\r\n\r\n    let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n            this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate),\r\n            this.props.Login.userInfo)\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n\r\n    const filterParam = {\r\n      inputListName: \"ProjectView\",\r\n      selectedObject: \"SelectedProjectView\",\r\n      primaryKeyField: \"nprojectmastercode\",\r\n      fetchUrl: \"projectview/getActiveProjectViewById\",\r\n      fecthInputObject: { userinfo: this.props.Login.userInfo, nsampletypecode: this.props.Login.masterData.SelectedSampleType && this.props.Login.masterData.SelectedSampleType.nsampletypecode },\r\n      masterData: this.props.Login.masterData,\r\n      searchFieldList: this.searchFieldList,\r\n\r\n\r\n    };\r\n    const breadCrumbData = this.state.filterData || [];\r\n    return (\r\n      <>\r\n        <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n          {breadCrumbData.length > 0 ? (\r\n            <Affix top={53}>\r\n              <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n            </Affix>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Row noGutters={true}>\r\n            <Col md={`${!this.state.sidebarview ? '4' : \"2\"}`}>\r\n                <span onClick= {()=>this.setState({sidebarview:!this.state.sidebarview})} className='sidebar-view-btn'>\r\n                    {!this.state.sidebarview ?\r\n                        <i class=\"fa fa-less-than\"></i> :\r\n                        <i class=\"fa fa-greater-than\"></i> \r\n                    }\r\n                </span>\r\n              <ListMaster\r\n                screenName={this.props.intl.formatMessage({ id: \"IDS_PROJECTVIEW\" })}\r\n                masterData={this.props.Login.masterData}\r\n                userInfo={this.props.Login.userInfo}\r\n                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.ProjectView}\r\n                getMasterDetail={(ProjectViewdata) => this.props.getProjectView(ProjectViewdata, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                selectedMaster={selectedProjectView}\r\n                primaryKeyField=\"nprojectmastercode\"\r\n                mainField=\"sprojecttitle\"\r\n                firstField=\"sprojectcode\"\r\n                secondField=\"sprojecttypename\"\r\n                filterColumnData={this.props.filterColumnData}\r\n                filterParam={filterParam}\r\n                userRoleControlRights={this.state.userRoleControlRights}\r\n                searchRef={this.searchRef}\r\n                reloadData={this.reloadData}\r\n                isMultiSelecct={false}\r\n                hidePaging={false}\r\n                isClearSearch={this.props.Login.isClearSearch}\r\n\r\n                openFilter={this.openFilter}\r\n                closeFilter={this.closeFilter}\r\n                onFilterSubmit={this.onFilterSubmit}\r\n                showFilterIcon={true}\r\n                showFilter={this.props.Login.showFilter}\r\n                filterComponent={[\r\n                  {\r\n                    \"IDS_PROJECTVIEWFILTER\":\r\n                      <ProjectViewFilter\r\n                        filterSampleType={this.state.ProjectViewFilterList || []}\r\n                        nfilterSampleType={this.props.Login.masterData.SelectedSampleType || {}}\r\n                        handleDateChange={this.handleDateChange}\r\n                        fromDate={fromDate}\r\n                        toDate={toDate}\r\n                        userInfo={this.props.Login.userInfo}\r\n                        filterProjectType={this.state.ProjectTypeFilterList || []}\r\n                        nfilterProjectType={this.props.Login.masterData.SelectedProjectType || {}}\r\n                        onComboChange={this.onComboChange}\r\n                        selectedRecord={this.state.selectedRecordfilter || {}}\r\n                      // selectedRecord1={this.state.selectedRecordfilter1 || {}}\r\n                        // onFilterChange={this.onFilterChange}\r\n                        handleFilterDateChange={this.handleFilterDateChange}\r\n\r\n                      />\r\n                  }\r\n                ]}\r\n\r\n              />\r\n            </Col>\r\n            <Col md={`${!this.state.sidebarview ? '8' : \"10\"}`}>\r\n              {selectedProjectView ?\r\n                <ContentPanel className=\"panel-main-content\">\r\n                  <Card className=\"border-0\">\r\n                    <Card.Header>\r\n                      <Card.Title className=\"product-title-main\">\r\n                        {this.props.intl.formatMessage({ id: \"IDS_TOTALCOST\" }) + \" : \" + selectedProjectView.ncost}\r\n                      </Card.Title>\r\n                      <Card.Subtitle>\r\n                        <div className=\"d-flex product-category\">\r\n                          <h2 className=\"product-title-sub flex-grow-1\">\r\n                            <span className={`btn btn-outlined ${versionStatusCSS} btn-sm ml-3`}>\r\n                              {/* <i class={activeIconCSS}></i> */}\r\n                              {selectedProjectView.stransdisplaystatus}\r\n                            </span>\r\n                          </h2>\r\n                          <div className=\"d-inline\">\r\n\r\n                          <ViewInfoDetails \r\n                                selectedObject ={this.props.Login.masterData.SelectedProjectView}\r\n                                screenHiddenDetails={this.state.userRoleControlRights.indexOf(viewProjectId) === -1}\r\n                                screenName={this.props.Login.screenName}\r\n                                dataTip={this.props.intl.formatMessage({ id: \"IDS_VIEW\" })}\r\n                                rowList={[\r\n                                  [\r\n                                    {dataField:\"sprojecttitle\", idsName:\"IDS_PROJECTTITLE\"},                                    \r\n                                    {dataField:\"sprojectdescription\", idsName:\"IDS_PROJECTDESCRIPTION\"}                     \r\n                                  ],\r\n                                  [\r\n                                    {dataField:\"sprojectname\", idsName:\"IDS_PROJECTNAME\"},\r\n                                    {dataField: \"sclientname\", idsName: \"IDS_CLIENT\"}                \r\n                                  ],\r\n                                  [\r\n                                    {dataField:\"sprojectcode\", idsName:\"IDS_PROJECTCODE\"},\r\n                                    {dataField: \"stransdisplaystatus\", idsName: \"IDS_PROJECTSTATUS\"}            \r\n                                  ],\r\n                                  [                        \r\n                                    {dataField:\"sprojectstartdate\", idsName:\"IDS_PROJECTSTARTDATE\"},\r\n                                    {dataField:\"sexpectcompletiondate\", idsName:\"IDS_PROJECTCOMPLETIONDATE\"}                \r\n                                  ]\r\n                                                   \r\n                                ]}\r\n                            />\r\n                          </div>\r\n                        </div>\r\n                      </Card.Subtitle>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"form-static-wrap\">\r\n\r\n                      {/* <Col md={12}>\r\n                        <div className=\"horizontal-line\"></div>\r\n                      </Col> */}\r\n                      <Row noGutters>\r\n                        <Col md={12}>\r\n                          <DataGrid\r\n                            expandField=\"expanded\"\r\n                            handleExpandChange={this.handleExpandChange}\r\n                            dataResult={this.props.Login.masterData.ParentProjectView && process(\r\n                              this.props.Login.masterData.ParentProjectView || [],\r\n                              this.state.dataState ? this.state.dataState : { skip: 0, take: 10 }\r\n                            )}\r\n                            // dataResult={this.state.dataResult}\r\n                            dataState={this.state.dataState\r\n                              ? this.state.dataState : { skip: 0, take: 10 }}\r\n                            // dataState={this.state.dataState}\r\n                            dataStateChange={this.dataStateChange}\r\n                            extractedColumnList={this.extractedColumnList}\r\n                            controlMap={this.state.controlMap}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            pageable={true}\r\n                            scrollable={'scrollable'}\r\n                            hideColumnFilter={false}\r\n                            selectedId={0}\r\n                            hasChild={true}\r\n                            childMappingField={'npreregno'}\r\n                            childColumnList={[\r\n                              { \"idsName\": \"IDS_SAMPLEARNO\", \"dataField\": \"ssamplearno\", \"width\": \"250px\" },\r\n                              { \"idsName\": \"IDS_TESTNAME\", \"dataField\": \"stestsynonym\", \"width\": \"250px\" },\r\n                              { \"idsName\": \"IDS_COST\", \"dataField\": \"ncost\", \"width\": \"100px\" },\r\n                              { \"idsName\": \"IDS_TRANSACTIONSTATUS\", \"dataField\": \"stransdisplaystatus\", \"width\": \"200px\" },\r\n\r\n\r\n                            ]}\r\n                            childList={this.state.childListMap}\r\n                            gridHeight={'355px'}\r\n                            isActionRequired={false}\r\n                          //  actionColWidth={'250px'}   \r\n                          //  gridWidth={'800px'}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </ContentPanel>\r\n                : \"\"\r\n              }\r\n            </Col>\r\n          </Row>\r\n\r\n\r\n        </div>\r\n\r\n      {/* {this.props.Login.openModal &&\r\n        <SlideOutModal\r\n        show={this.props.Login.openModal}\r\n        size={this.props.Login.modalScreenSize===true ? \"xl\" : \"lg\" }\r\n        closeModal={this.closeModal}\r\n        hideSave={this.props.Login.screenName ===  \"IDS_VIEW\" ? true :  false}\r\n        operation={( this.props.Login.screenName === \"IDS_VIEW\") ? \"\" :  this.props.Login.operation}\r\n        inputParam={this.props.Login.inputParam}\r\n        screenName={this.props.Login.screenName}\r\n        onSaveClick={this.onSaveClick}\r\n        esign={this.props.Login.loadEsign}\r\n        validateEsign={this.validateEsign}\r\n        selectedRecord={this.state.selectedRecord || {}} \r\n        addcomponent = {this.props.Login.screenName === \"IDS_VIEW\" ?\r\n        <AddQuotationPreview\r\n\r\n                selectedQuotation ={this.props.Login.masterData.SelectedQuotation}\r\n                userInfo={this.props.Login.userInfo}\r\n                genericlabel={this.props.Login.genericLabel}\r\n              ></AddQuotationPreview> : \"\"\r\n      }\r\n        />\r\n      } */}\r\n      </>\r\n    );\r\n  }\r\n\r\n  handleExpandChange = () => {\r\n\r\n    let childListMap = new Map();\r\n    let keylst = this.props.Login.masterData.ChildProjectView.map(key => key.npreregno);\r\n\r\n    keylst.map((key, i) => {\r\n      let ChildProjectView = this.props.Login.masterData.ChildProjectView;\r\n\r\n      ChildProjectView = ChildProjectView.filter(x => x['npreregno'] === key);\r\n      childListMap.set(parseInt(key), ChildProjectView);\r\n    })\r\n    this.setState({ childListMap })\r\n\r\n  };\r\n\r\n  onComboChange = (comboData, fieldName, caseNo) => {\r\n\r\n    const selectedRecord = this.state.selectedRecord || {};\r\n    switch (caseNo) {\r\n\r\n      case 2:\r\n        const selectedRecordfilter = this.state.selectedRecordfilter || {};\r\n        selectedRecordfilter[fieldName] = comboData;\r\n        this.setState({ selectedRecordfilter });\r\n        break;\r\n\r\n      case 3:\r\n\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        break;\r\n\r\n      default:\r\n        break;\r\n    }\r\n  }\r\n\r\n\r\n\r\n  // onInputOnChange = (event, optional) => {\r\n  //   const selectedRecord = this.state.selectedRecord || {};\r\n  //   if (event.target.type === 'checkbox') {\r\n  //     if (event.target.name === \"ntransactionstatus\")\r\n  //       selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.ACTIVE : transactionStatus.DEACTIVE;\r\n  //     // else if (event.target.name === \"nlockmode\")\r\n  //     //     selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.UNLOCK : transactionStatus.LOCK;\r\n  //     else\r\n  //       selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n  //   }\r\n  //   else if (event.target.type === 'radio') {\r\n  //     selectedRecord[event.target.name] = optional;\r\n  //   }\r\n  //   else {\r\n  //     selectedRecord[event.target.name] = event.target.value;\r\n  //   }\r\n  //   this.setState({ selectedRecord });\r\n  // }\r\n\r\n\r\n\r\n\r\n  // onTabChange = (tabProps) => {\r\n  //   const screenName = tabProps.screenName;\r\n  //   const updateInfo = {\r\n  //     typeName: DEFAULT_RETURN,\r\n  //     data: { screenName },\r\n  //   };\r\n  //   this.props.updateStore(updateInfo);\r\n  // };\r\n\r\n\r\n\r\n  dataStateChange = (event) => {\r\n    this.setState({\r\n      dataResult: process(this.state.data, event.dataState),\r\n      dataState: event.dataState\r\n    });\r\n  }\r\n\r\n\r\n  ConfirmDelete = (selectedProjectView, operation, deleteId, screenName) => {\r\n    this.confirmMessage.confirm(\r\n      \"deleteMessage\",\r\n      this.props.intl.formatMessage({ id: \"IDS_DELETE\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_OK\" }),\r\n      this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n      () =>\r\n        this.DeleteProjectMaster(\r\n          screenName,\r\n          selectedProjectView,\r\n          operation,\r\n          deleteId\r\n\r\n        )\r\n    );\r\n  };\r\n\r\n\r\n\r\n  reloadData = (onFilterSubmit) => {\r\n    this.searchRef.current.value = \"\";\r\n\r\n    // if (Object.values(this.state.selectedRecordfilter.nsampletypecodevalue).length && this.state.selectedRecordfilter.nsampletypecodevalue !== undefined) {\r\n    // if ( this.props.Login.masterData.SelectedSampleType !== undefined) {\r\n    let fromDate = this.props.Login.masterData.FromDate;\r\n    let toDate = this.props.Login.masterData.ToDate;\r\n    if(onFilterSubmit){\r\n      let selectedRecord = this.state.selectedRecord || {};\r\n      if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\r\n        fromDate = selectedRecord[\"fromdate\"];\r\n      }\r\n      if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\r\n        toDate = selectedRecord[\"todate\"];\r\n      }\r\n    }\r\n\r\n    let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\r\n    if (this.state.selectedRecordfilter !== undefined) {\r\n      if (this.state.selectedRecordfilter.nsampletypecodevalue !== undefined && this.state.selectedRecordfilter.nprojecttypecodevalue !== \"\") {\r\n        if (Object.values(this.props.Login.masterData.SelectedSampleType).length && this.props.Login.masterData.SelectedSampleType !== undefined) {\r\n          let inputParam = {\r\n            inputData: {\r\n              nsampletypecode: this.state.selectedRecordfilter.nsampletypecodevalue.value,\r\n              nprojecttypecode: this.state.selectedRecordfilter.nprojecttypecodevalue.value,\r\n              userinfo: this.props.Login.userInfo,\r\n              // nfilterSampleType: this.state.nfilterSampleType,\r\n              nfilterSampleType: this.state.selectedRecordfilter.nsampletypecodevalue,\r\n              fromDate: obj.fromDate,\r\n              toDate: obj.toDate,\r\n              currentdate: null,\r\n            },\r\n            // classUrl: \"projectview\",\r\n            methodUrl: \"ProjectViewBySampleType\",\r\n          };\r\n          this.props.changeSampleTypeFilter(\r\n            inputParam,\r\n            this.props.Login.masterData.filterSampleType,this.state.selectedRecordfilter.nsampletypecodevalue\r\n          );\r\n        }\r\n      } else {\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPENOTAVAILABLE\", }));\r\n      }\r\n    } else {\r\n      toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVAILABLE\", }));\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // closeModal = () => {\r\n  //   let loadEsign = this.props.Login.loadEsign;\r\n  //   let openModal = this.props.Login.openModal;\r\n  //   let selectedRecord = this.state.selectedRecord;\r\n  //   //    let selectedRecord = this.state.selectedRecord;\r\n  //   if (this.props.Login.loadEsign) {\r\n  //     if (this.props.Login.operation === \"delete\" || this.props.Login.operation === \"approve\" || this.props.Login.operation === \"retire\") {\r\n  //       loadEsign = false;\r\n  //       openModal = false;\r\n  //       selectedRecord = {};\r\n  //     }\r\n  //     else {\r\n  //       loadEsign = false;\r\n  //       selectedRecord['esignpassword'] = '';\r\n  //       selectedRecord['esigncomments'] = '';\r\n  //       selectedRecord['esignreason'] = '';\r\n  //     }\r\n  //   }\r\n  //   else {\r\n  //     openModal = false;\r\n  //     selectedRecord = {};\r\n  //   }\r\n\r\n  //   const updateInfo = {\r\n  //     typeName: DEFAULT_RETURN,\r\n  //     data: { openModal, loadEsign, selectedRecord }\r\n  //   }\r\n  //   this.props.updateStore(updateInfo);\r\n\r\n  // }\r\n\r\n  componentDidUpdate(previousProps) {\r\n    let updateState = false;\r\n    let {\r\n      selectedRecord,\r\n      selectedRecordfilter,\r\n      userRoleControlRights,\r\n      controlMap,\r\n      filterData,\r\n      nfilterSampleType,\r\n      filterSampleType,\r\n      nfilterProjectType,\r\n      selectedRecordfilter1,\r\n\r\n\r\n    } = this.state;\r\n\r\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n      selectedRecord = this.props.Login.selectedRecord;\r\n      updateState = true;\r\n      this.setState({ selectedRecord, selectedRecordfilter });\r\n    }\r\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n      userRoleControlRights = [];\r\n      if (this.props.Login.userRoleControlRights) {\r\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode\r\n        ] &&\r\n          Object.values(\r\n            this.props.Login.userRoleControlRights[\r\n            this.props.Login.userInfo.nformcode\r\n            ]\r\n          ).map((item) => userRoleControlRights.push(item.ncontrolcode));\r\n      }\r\n      controlMap = getControlMap(\r\n        this.props.Login.userRoleControlRights,\r\n        this.props.Login.userInfo.nformcode\r\n      );\r\n      this.setState({ controlMap, userRoleControlRights });\r\n      //   updateState = true;\r\n    }\r\n\r\n    let nsampletypecode = this.state.nfilterSampleType || {};\r\n    let nprojecttypecode = this.state.nfilterProjectType || {};\r\n\r\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n\r\n      nfilterSampleType = this.state.nfilterSampleType || {};\r\n\r\n      const filterSampleType = constructOptionList(this.props.Login.masterData.filterSampleType || [], \"nsampletypecode\",\r\n        \"ssampletypename\", undefined, undefined, undefined);\r\n\r\n      let ProjectViewFilterList = filterSampleType.get(\"OptionList\");\r\n      nsampletypecode = ProjectViewFilterList[0];\r\n      selectedRecordfilter = { nsampletypecodevalue: nsampletypecode }\r\n      selectedRecord = { nsampletypecodevalue: nsampletypecode }\r\n\r\n      ////\r\n\r\n      nfilterProjectType = this.state.nfilterProjectType || {};\r\n\r\n      const filterProjectType = constructOptionList(this.props.Login.masterData.filterProjectType || [], \"nprojecttypecode\",\r\n        \"sprojecttypename\", undefined, undefined, undefined);\r\n\r\n      let ProjectTypeFilterList = filterProjectType.get(\"OptionList\");\r\n      nprojecttypecode = ProjectTypeFilterList[0];\r\n      selectedRecordfilter = { ...selectedRecordfilter, nprojecttypecodevalue: nprojecttypecode }\r\n      selectedRecord = { ...selectedRecord, nprojecttypecodevalue: nprojecttypecode }\r\n\r\n      this.setState({\r\n        ProjectViewFilterList, ProjectTypeFilterList,\r\n        selectedRecordfilter, selectedRecord, data: this.props.Login.masterData.ParentProjectView,\r\n        dataResult: process(this.props.Login.masterData.ParentProjectView || [], this.state.dataState)\r\n      });\r\n\r\n      ////\r\n\r\n      if (this.props.Login.masterData.SelectedSampleType && this.props.Login.masterData.SelectedSampleType !== previousProps.Login.masterData.SelectedSampleType) {\r\n        nfilterSampleType = {\r\n          label: this.props.Login.masterData.SelectedSampleType.ssampletypename,\r\n          value: this.props.Login.masterData.SelectedSampleType.nsampletypecode,\r\n          item: this.props.Login.masterData.SelectedSampleType,\r\n        };\r\n      }\r\n\r\n      if (this.props.Login.masterData.SelectedProjectType && this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\r\n        nfilterProjectType = {\r\n          label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\r\n          value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n          item: this.props.Login.masterData.SelectedProjectType,\r\n        };\r\n      }\r\n      //  selectedRecordfilter = {nsampletypecodevalue:nfilterSampleType}\r\n      filterData = this.generateBreadCrumData();\r\n      updateState = true;\r\n      this.setState({ filterData, selectedRecordfilter });\r\n    }\r\n\r\n\r\n    if (this.props.Login.masterData.SelectedSampleType !== previousProps.Login.masterData.SelectedSampleType) {\r\n\r\n      let nsampletypecodevalue = this.props.Login.masterData.SelectedSampleType ?\r\n        {\r\n          label: this.props.Login.masterData.SelectedSampleType.ssampletypename,\r\n          value: this.props.Login.masterData.SelectedSampleType.nsampletypecode,\r\n          item: this.props.Login.masterData.SelectedSampleType\r\n        } : \"\"\r\n      //  nsampletypecode=ProjectViewFilterList[ProjectViewFilterList.length-1];\r\n      selectedRecordfilter = { ...selectedRecordfilter, nsampletypecodevalue }\r\n      selectedRecord = { ...selectedRecord, nsampletypecodevalue: nsampletypecode }\r\n      // nfilterSampleType = this.props.Login.masterData.nfilterSampleType;\r\n      this.setState({\r\n        selectedRecordfilter, selectedRecord\r\n\r\n      });\r\n\r\n    }\r\n    ////\r\n    if (this.props.Login.masterData.SelectedProjectType !== previousProps.Login.masterData.SelectedProjectType) {\r\n\r\n      let nprojecttypecodevalue = this.props.Login.masterData.SelectedProjectType ?\r\n        {\r\n          label: this.props.Login.masterData.SelectedProjectType.sprojecttypename,\r\n          value: this.props.Login.masterData.SelectedProjectType.nprojecttypecode,\r\n          item: this.props.Login.masterData.SelectedProjectType\r\n        } : \"\"\r\n      //  nsampletypecode=ProjectViewFilterList[ProjectViewFilterList.length-1];\r\n      selectedRecordfilter = { ...selectedRecordfilter, nprojecttypecodevalue }\r\n      selectedRecord = { ...selectedRecord, nprojecttypecodevalue: nprojecttypecode }\r\n      // nfilterSampleType = this.props.Login.masterData.nfilterSampleType;\r\n      this.setState({\r\n        selectedRecordfilter, selectedRecord\r\n\r\n      });\r\n\r\n    }\r\n    // if (this.props.Login.masterData.nfilterSampleType !== previousProps.Login.masterData.nfilterSampleType) {\r\n\r\n    // }\r\n\r\n  }\r\n  generateBreadCrumData() {\r\n    const breadCrumbData = [];\r\n    if (this.props.Login.masterData && this.props.Login.masterData.FromDate ) {\r\n      let obj = convertDateValuetoString(this.props.Login.masterData.FromDate,this.props.Login.masterData.ToDate,this.props.Login.userInfo);\r\n      breadCrumbData.push(\r\n        {\r\n          \"label\": \"IDS_FROM\",\r\n          \"value\": obj.breadCrumbFrom\r\n        },\r\n        {\r\n          \"label\": \"IDS_TO\",\r\n          \"value\": obj.breadCrumbto\r\n        })\r\n      }\r\n      if(this.props.Login.masterData&&this.props.Login.masterData.SelectedSampleType){\r\n        breadCrumbData.push(\r\n      {\r\n        label: \"IDS_SAMPLETYPE\",\r\n        value: this.props.Login.masterData.SelectedSampleType\r\n          ? this.props.Login.masterData.SelectedSampleType.ssampletypename\r\n          : \"NA\",\r\n      })\r\n    }\r\n    if(this.props.Login.masterData&&this.props.Login.masterData.SelectedProjectType){\r\n      breadCrumbData.push(\r\n        {\r\n          label: \"IDS_PROJECTTYPE\",\r\n          value: this.props.Login.masterData.SelectedProjectType\r\n            ? this.props.Login.masterData.SelectedProjectType.sprojecttypename\r\n            : \"NA\",\r\n        });\r\n\r\n    } \r\n    return breadCrumbData;\r\n  }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  closeFilter = () => {\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { showFilter: false },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onFilterSubmit = () => {\r\n    this.reloadData(true);\r\n  //   this.searchRef.current.value = \"\";\r\n\r\n  //   // if (this.state.nfilterSampleType.value) {\r\n  //   // if (this.state.selectedRecord.nsampletypecodevalue.value) {\r\n  //   //if ((this.state.selectedRecord).length>0) {\r\n\r\n  //   // if (Object.values(this.state.selectedRecordfilter.nsampletypecodevalue).length && this.state.selectedRecordfilter.nsampletypecodevalue !== undefined) {\r\n  //   let fromDate = this.props.Login.masterData.FromDate;\r\n  //   let toDate = this.props.Login.masterData.ToDate;\r\n  //   let selectedRecord = this.state.selectedRecord || {};\r\n  //   if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\r\n  //     fromDate = selectedRecord[\"fromdate\"];\r\n  //   }\r\n  //   if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\r\n  //     toDate = selectedRecord[\"todate\"];\r\n  //   }\r\n  //   let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\r\n\r\n  //   if (this.state.selectedRecordfilter !== undefined) {\r\n  //     if (this.state.selectedRecordfilter.nsampletypecodevalue !== undefined && this.state.selectedRecordfilter.nprojecttypecodevalue !== \"\") {\r\n  //       let inputParam = {\r\n  //         inputData: {\r\n  //           nsampletypecode: this.state.selectedRecordfilter.nsampletypecodevalue.value,\r\n  //           nprojecttypecode: this.state.selectedRecordfilter.nprojecttypecodevalue.value,\r\n  //           userinfo: this.props.Login.userInfo,\r\n  //           // nfilterSampleType: this.state.nfilterSampleType,\r\n  //           nfilterSampleType: this.state.selectedRecordfilter.nsampletypecodevalue,\r\n  //           fromDate: obj.fromDate,\r\n  //           toDate: obj.toDate,\r\n  //           currentDate: null\r\n  //         },\r\n  //         // classUrl: \"projectview\",\r\n  //         methodUrl: \"ProjectViewBySampleType\",\r\n  //       };\r\n  //       this.props.changeSampleTypeFilter(\r\n  //         inputParam,\r\n  //         this.props.Login.masterData.filterSampleType,this.state.selectedRecordfilter.nsampletypecodevalue\r\n  //       );\r\n  //     } else {\r\n\r\n  //       toast.warn(this.props.intl.formatMessage({ id: \"IDS_PROJECTTYPENOTAVAILABLE\", }));\r\n\r\n  //     }\r\n  //   } else {\r\n\r\n  //     toast.warn(this.props.intl.formatMessage({ id: \"IDS_SAMPLETYPENOTAVAILABLE\", }));\r\n\r\n  //   }\r\n   }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  callService,\r\n  crudMaster,\r\n  filterColumnData,\r\n  updateStore,\r\n  validateEsignCredential,\r\n  changeSampleTypeFilter,\r\n  viewAttachment, addProjectMaster, getProjectView, getProjectmasterAddMemberService, addProjectMasterFile, getuserComboServices\r\n})(injectIntl(ProjectView));\r\n"]},"metadata":{},"sourceType":"module"}