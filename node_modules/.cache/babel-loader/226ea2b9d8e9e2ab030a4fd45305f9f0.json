{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\basemaster\\\\AddTreeview.jsx\";\nimport * as React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col, Form } from 'react-bootstrap';\nimport '@progress/kendo-react-animation';\nimport FormInput from '../../components/form-input/form-input.component';\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst AddTreeview = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nstoragecategorycode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_STORAGECATEGORY\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.storageCategoryList,\n    value: props.selectedRecord[\"nstoragecategorycode\"],\n    isMandatory: true,\n    isClearable: false,\n    isMulti: false,\n    isSearchable: true,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    onChange: event => props.onComboChange(event, 'nstoragecategorycode', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_SAMPLESTORAGELOCATIONNAME\"\n    }),\n    name: \"ssamplestoragelocationname\",\n    type: \"text\",\n    onChange: event => props.onInputChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SAMPLESTORAGELOCATIONNAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"ssamplestoragelocationname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"30\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TreeViewEditable, {\n    id: \"samplestoragelocation\",\n    name: \"samplestoragelocation\" // label=\"Sample Storage Location\"\n    ,\n    placeholder: \"Enter samplestoragelocation\",\n    data: props.treeData,\n    expandIcons: true,\n    item: props.itemRender,\n    onExpandChange: props.onExpandChange,\n    onItemClick: props.onItemClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default injectIntl(AddTreeview);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/basemaster/AddTreeview.jsx"],"names":["React","injectIntl","Row","Col","Form","FormInput","TreeViewEditable","FormSelectSearch","AddTreeview","props","intl","formatMessage","id","storageCategoryList","selectedRecord","event","onComboChange","onInputChange","treeData","itemRender","onExpandChange","onItemClick"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { injectIntl } from 'react-intl'\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport '@progress/kendo-react-animation'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport TreeViewEditable from '../../components/form-tree-editable/form-tree-editable.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst AddTreeview = (props) => {\r\n  return (\r\n    <Row>\r\n\r\n      <Col md={12}>\r\n        <FormSelectSearch\r\n          name={\"nstoragecategorycode\"}\r\n          formLabel={props.intl.formatMessage({ id: \"IDS_STORAGECATEGORY\" })}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n          options={props.storageCategoryList}\r\n          value={props.selectedRecord[\"nstoragecategorycode\"]}\r\n          isMandatory={true}\r\n          isClearable={false}\r\n          isMulti={false}\r\n          isSearchable={true}\r\n          isDisabled={false}\r\n          closeMenuOnSelect={true}\r\n          onChange={(event) => props.onComboChange(event, 'nstoragecategorycode',1)}\r\n        />\r\n      </Col>\r\n      <Col md={12}>\r\n        {/* <Form.Control\r\n          id='ssamplestoragelocationname'\r\n          name={\"ssamplestoragelocationname\"}\r\n          type='text'\r\n          label={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          autoFocus\r\n          autoComplete=\"off\"\r\n          onChange={props.onInputChange}\r\n          value={props.selectedRecord ? props.selectedRecord[\"ssamplestoragelocationname\"] : \"\"}\r\n\r\n        /> */}\r\n        <FormInput\r\n          label={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          name={\"ssamplestoragelocationname\"}\r\n          type=\"text\"\r\n          onChange={(event) => props.onInputChange(event)}\r\n          placeholder={props.intl.formatMessage({ id: \"IDS_SAMPLESTORAGELOCATIONNAME\" })}\r\n          value={props.selectedRecord ? props.selectedRecord[\"ssamplestoragelocationname\"] : \"\"}\r\n          isMandatory={true}\r\n          required={true}\r\n          maxLength={\"30\"}\r\n        />\r\n      </Col>\r\n      <Col md={12}>\r\n        <TreeViewEditable\r\n          id=\"samplestoragelocation\"\r\n          name=\"samplestoragelocation\"\r\n          // label=\"Sample Storage Location\"\r\n          placeholder=\"Enter samplestoragelocation\"\r\n          data={props.treeData}\r\n          expandIcons={true}\r\n          item={props.itemRender}\r\n          onExpandChange={props.onExpandChange}\r\n          onItemClick={props.onItemClick}\r\n        />\r\n      </Col>\r\n    </Row>)\r\n}\r\nexport default injectIntl(AddTreeview);\r\n"]},"metadata":{},"sourceType":"module"}