{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\approval\\\\AddOOSWorkFlowTransaction.jsx\";\nimport React from 'react';\nimport { Col, Row } from 'react-bootstrap';\nimport { injectIntl } from 'react-intl';\nimport DropZone from '../../components/dropzone/dropzone.component';\nimport { deleteAttachmentDropZone, onDropAttachFileList } from '../../components/CommonScript';\nimport { connect } from 'react-redux';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass AddOOSWorkFlowTransaction extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onComboChange = (comboData, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    this.onInputOnChange = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[event.target.name] = event.target.value;\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    this.onDrop = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord\n      });\n      this.props.childDataChange(selectedRecord);\n    };\n\n    const dataState = {\n      skip: 0,\n      take: this.props.settings ? parseInt(this.props.settings[14]) : 5\n    };\n    this.state = {\n      loading: false,\n      dataState: dataState,\n      openModal: false,\n      inputParam: this.props.inputParam,\n      loadEsign: false,\n      operation: this.props.operation ? this.props.operation : \"\",\n      selectedRecord: { ...this.props.selectedRecord,\n        noosworkflowtypecode: this.props.noosworkflowtypecode,\n        ntranscode: this.props.ntranscode,\n        scomments: this.props.scomments,\n        sadditionalcomments: this.props.sadditionalcomments,\n        sfilename: undefined\n      },\n      OosStepStatus: this.props.OosStepStatus,\n      OosWorkFlowType: this.props.OosWorkFlowType,\n      OosMaster: this.props.OosMaster\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_STEPNAME\"\n      }),\n      isSearchable: true,\n      name: \"noosworkflowtypecode\",\n      isDisabled: this.props.operation === \"update\" ? true : false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: this.state.OosWorkFlowType ? this.state.OosWorkFlowType : [],\n      optionId: \"noosworkflowtypecode\",\n      optionValue: \"soosworkflowtypename\",\n      value: this.state.selectedRecord ? this.state.selectedRecord.noosworkflowtypecode ? this.state.selectedRecord.noosworkflowtypecode : \"\" : \"\",\n      onChange: event => this.onComboChange(event, 'noosworkflowtypecode'),\n      closeMenuOnSelect: true,\n      alphabeticalSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      name: \"scomments\",\n      onChange: event => this.onInputOnChange(event, \"\"),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_COMMENTS\"\n      }),\n      value: this.state.selectedRecord[\"scomments\"] || \"\",\n      rows: \"2\",\n      isMandatory: true,\n      required: true,\n      maxLength: 4000,\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormTextarea, {\n      label: this.props.intl.formatMessage({\n        id: \"IDS_ADDITIONALCOMMENTS\"\n      }),\n      name: \"sadditionalcomments\",\n      onChange: event => this.onInputOnChange(event),\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_ADDITIONALCOMMENTS\"\n      }),\n      value: this.state.selectedRecord[\"sadditionalcomments\"] || \"\",\n      rows: \"2\",\n      isMandatory: false,\n      required: false,\n      maxLength: 4000,\n      isDisabled: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n      formLabel: this.props.intl.formatMessage({\n        id: \"IDS_STATUS\"\n      }),\n      isSearchable: true,\n      name: \"ntranscode\",\n      isDisabled: false,\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SELECTRECORD\"\n      }),\n      isMandatory: true,\n      options: this.state.OosStepStatus ? this.state.OosStepStatus : [],\n      optionId: \"ntranscode\",\n      optionValue: \"stransdisplaystatus\",\n      value: this.state.selectedRecord ? this.state.selectedRecord.ntranscode ? this.state.selectedRecord.ntranscode : \"\" : \"\",\n      onChange: event => this.onComboChange(event, 'ntranscode'),\n      closeMenuOnSelect: true,\n      alphabeticalSort: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    })), this.props.operation === \"create\" ? /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(DropZone, {\n      name: \"AttachmentFile\",\n      label: this.props.intl.formatMessage({\n        id: \"IDS_FILE\"\n      }),\n      isMandatory: false,\n      maxFiles: 1,\n      minSize: 0,\n      maxSize: this.props.maxSize,\n      onDrop: event => this.onDrop(event, 'sfilename', 1),\n      deleteAttachment: this.deleteAttachment,\n      actionType: this.actionType,\n      fileNameLength: this.fileNameLength,\n      editFiles: this.state.selectedRecord ? this.state.selectedRecord : {},\n      attachmentTypeCode: this.state.selectedRecord && this.state.selectedRecord.selectedAttachmentFile && this.state.selectedRecord.selectedAttachmentFile.nattachmenttypecode,\n      fileSizeName: \"nfilesize\",\n      fileName: \"sfilename\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 29\n      }\n    })) : \"\"));\n  }\n\n}\n\nexport default connect(mapStateToProps, {})(injectIntl(AddOOSWorkFlowTransaction));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/approval/AddOOSWorkFlowTransaction.jsx"],"names":["React","Col","Row","injectIntl","DropZone","deleteAttachmentDropZone","onDropAttachFileList","connect","FormTextarea","FormSelectSearch","mapStateToProps","state","Login","AddOOSWorkFlowTransaction","Component","constructor","props","onComboChange","comboData","fieldName","selectedRecord","setState","childDataChange","onInputOnChange","event","target","name","value","onDrop","attachedFiles","maxSize","deleteAttachment","file","dataState","skip","take","settings","parseInt","loading","openModal","inputParam","loadEsign","operation","noosworkflowtypecode","ntranscode","scomments","sadditionalcomments","sfilename","undefined","OosStepStatus","OosWorkFlowType","OosMaster","render","intl","formatMessage","id","actionType","fileNameLength","selectedAttachmentFile","nattachmenttypecode"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport { deleteAttachmentDropZone, onDropAttachFileList } from '../../components/CommonScript';\r\nimport { connect } from 'react-redux';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass AddOOSWorkFlowTransaction extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.settings ? parseInt(this.props.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            loading: false,\r\n            dataState: dataState,\r\n            openModal: false,\r\n            inputParam: this.props.inputParam,\r\n            loadEsign: false,\r\n            operation: this.props.operation ? this.props.operation : \"\",\r\n            selectedRecord: {\r\n                ...this.props.selectedRecord,\r\n                noosworkflowtypecode: this.props.noosworkflowtypecode,\r\n                ntranscode: this.props.ntranscode,\r\n                scomments: this.props.scomments,\r\n                sadditionalcomments: this.props.sadditionalcomments,\r\n                sfilename: undefined\r\n            },\r\n            OosStepStatus: this.props.OosStepStatus,\r\n            OosWorkFlowType: this.props.OosWorkFlowType,\r\n            OosMaster: this.props.OosMaster\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_STEPNAME\" })}\r\n                            isSearchable={true}\r\n                            name={\"noosworkflowtypecode\"}\r\n                            isDisabled={this.props.operation === \"update\" ? true : false}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            options={this.state.OosWorkFlowType ? this.state.OosWorkFlowType : []}\r\n                            optionId='noosworkflowtypecode'\r\n                            optionValue='soosworkflowtypename'\r\n                            value={this.state.selectedRecord ? this.state.selectedRecord.noosworkflowtypecode ? this.state.selectedRecord.noosworkflowtypecode : \"\" : \"\"}\r\n                            onChange={(event) => this.onComboChange(event, 'noosworkflowtypecode')}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            name={\"scomments\"}\r\n                            onChange={(event) => this.onInputOnChange(event, \"\")}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_COMMENTS\" })}\r\n                            value={this.state.selectedRecord[\"scomments\"] || \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={4000}\r\n                            isDisabled={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_ADDITIONALCOMMENTS\" })}\r\n                            name={\"sadditionalcomments\"}\r\n                            onChange={(event) => this.onInputOnChange(event)}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_ADDITIONALCOMMENTS\" })}\r\n                            value={this.state.selectedRecord[\"sadditionalcomments\"] || \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={4000}\r\n                            isDisabled={false}\r\n                        />\r\n                    </Col>\r\n                    <Col md={12}>\r\n                        <FormSelectSearch\r\n                            formLabel={this.props.intl.formatMessage({ id: \"IDS_STATUS\" })}\r\n                            isSearchable={true}\r\n                            name={\"ntranscode\"}\r\n                            isDisabled={false}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={true}\r\n                            options={this.state.OosStepStatus ? this.state.OosStepStatus : []}\r\n                            optionId='ntranscode'\r\n                            optionValue='stransdisplaystatus'\r\n                            value={this.state.selectedRecord ? this.state.selectedRecord.ntranscode ? this.state.selectedRecord.ntranscode : \"\" : \"\"}\r\n                            onChange={(event) => this.onComboChange(event, 'ntranscode')}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                        />\r\n                    </Col>\r\n                    {this.props.operation === \"create\" ?\r\n                        <Col md={12}>\r\n                            <DropZone\r\n                                name='AttachmentFile'\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_FILE\" })}\r\n                                isMandatory={false}\r\n                                maxFiles={1}\r\n                                minSize={0}\r\n                                maxSize={this.props.maxSize}\r\n                                onDrop={(event) => this.onDrop(event, 'sfilename', 1)}\r\n                                deleteAttachment={this.deleteAttachment}\r\n                                actionType={this.actionType}\r\n                                fileNameLength={this.fileNameLength}\r\n                                editFiles={this.state.selectedRecord ? this.state.selectedRecord : {}}\r\n                                attachmentTypeCode={this.state.selectedRecord && this.state.selectedRecord.selectedAttachmentFile && this.state.selectedRecord.selectedAttachmentFile.nattachmenttypecode}\r\n                                fileSizeName=\"nfilesize\"\r\n                                fileName=\"sfilename\"\r\n                            />\r\n                        </Col>\r\n                        : \"\"}\r\n                </Row>\r\n            </>\r\n        );\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[event.target.name] = event.target.value;\r\n        this.setState({ selectedRecord })\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    onDrop = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n        this.setState({\r\n            selectedRecord\r\n        });\r\n        this.props.childDataChange(selectedRecord);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {})(injectIntl(AddOOSWorkFlowTransaction));"]},"metadata":{},"sourceType":"module"}