{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\designtemplatemapping\\\\ConfigureUniqueFields.jsx\";\nimport React from 'react';\nimport { FormattedMessage, injectIntl } from 'react-intl';\nimport 'rc-tabs/assets/index.css';\nimport { Col, Form, InputGroup, Nav, Row } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\nimport { ContentPanel } from '../product/product.styled';\nimport { SampleType } from '../../components/Enumeration';\nimport { AtTabs } from '../../components/custom-tabs/custom-tabs.styles';\nimport Tabs, { TabPane } from 'rc-tabs';\n\nclass ConfigureUniqueFields extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTabChange = tab => {\n      this.setState({\n        selectedScreen: this.state.screens.find(screen => screen.eventKey === tab)\n      });\n    };\n\n    const screens = [{\n      eventKey: 'sample',\n      name: \"IDS_SAMPLE\"\n    }];\n\n    if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === true) {\n      screens.push({\n        eventKey: 'subsample',\n        name: \"IDS_SUBSAMPLE\"\n      });\n    }\n\n    this.state = {\n      screens,\n      selectedScreen: {\n        eventKey: 'sample',\n        name: \"IDS_SAMPLE\"\n      }\n    };\n  }\n\n  render() {\n    const dataList = this.props.selectedTemplateType === SampleType.Masters || this.state.selectedScreen.eventKey === 'sample' ? this.props.dataList : this.props.dataListsubsample;\n    const dataListCount = this.props.selectedTemplateType === SampleType.Masters || this.state.selectedScreen.eventKey === 'sample' ? this.props.dataListCount : this.props.dataListCountsubsample;\n    const designData = this.props.selectedTemplateType === SampleType.Masters ? this.props.designData.mastertemplatefields : this.state.selectedScreen.eventKey === 'sample' ? this.props.designData.sampletemplatefields : this.props.designData.subsampletemplatefields;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, this.props.selectedTemplateType === SampleType.Masters || this.props.approvedRegSubTypeVersion && (this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === undefined || this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === false) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      onClick: () => this.props.addCombinatonUnique(designData),\n      className: \"add-txt-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADD\",\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 33\n      }\n    }))), dataListCount.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      size: 'lg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 49\n      }\n    }, designData.map(checkbox => /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      type: \"checkbox\",\n      name: checkbox[\"2\"],\n      label: checkbox[\"1\"][this.props.slanguagetypecode] || checkbox[\"2\"],\n      onChange: event => this.props.onInputOnChange(event, checkbox[\"2\"], index, checkbox[\"1\"]),\n      id: checkbox[\"2\"],\n      checked: checkbox[\"2\"] === (dataList && dataList[index] && dataList[index][checkbox[\"2\"]] && dataList[index][checkbox[\"2\"]][\"2\"]) ? true : false,\n      defaultChecked: checkbox[\"2\"] === (dataList && dataList[index] && dataList[index][checkbox[\"2\"]] && dataList[index][checkbox[\"2\"]][\"2\"]) ? true : false,\n      size: 'lg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 61\n      }\n    }))))))), /*#__PURE__*/React.createElement(Col, {\n      md: 1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-group-wrap enable-view click-view \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      onClick: () => this.props.deleteCombinationUnique(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 49\n      }\n    }))))), dataListCount.length - 1 !== index ? /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 37\n      }\n    }) : \"\"))) : /*#__PURE__*/React.createElement(AtTabs, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Tabs, {\n      activeKey: this.state.selectedScreen.eventKey,\n      moreIcon: \"...\",\n      onChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, this.state.screens.map(screen => /*#__PURE__*/React.createElement(TabPane, {\n      name: screen.eventKey,\n      tab: this.props.intl.formatMessage({\n        id: screen.name\n      }),\n      key: screen.eventKey,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex justify-content-end\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      onClick: () => this.props.addCombinatonUnique(designData, screen.eventKey),\n      className: \"add-txt-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 45\n      }\n    }), /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_ADD\",\n      defaultMessage: \"Add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 45\n      }\n    }))), dataListCount.map((item, index) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 11,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(InputGroup, {\n      size: 'lg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      style: {\n        \"margin\": \"0.5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 61\n      }\n    }, designData.map(checkbox => /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(Form.Check, {\n      inline: true,\n      type: \"checkbox\",\n      name: checkbox[\"2\"],\n      label: checkbox[\"1\"][this.props.slanguagetypecode] || checkbox[\"2\"],\n      onChange: event => this.props.onInputOnChange(event, checkbox[\"2\"], index, checkbox[\"1\"], screen.eventKey),\n      id: checkbox[\"2\"],\n      checked: checkbox[\"2\"] === (dataList && dataList[index] && dataList[index][checkbox[\"2\"]] && dataList[index][checkbox[\"2\"]][\"2\"]) ? true : false,\n      defaultChecked: checkbox[\"2\"] === (dataList && dataList[index] && dataList[index][checkbox[\"2\"]] && dataList[index][checkbox[\"2\"]][\"2\"]) ? true : false,\n      size: 'lg',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 73\n      }\n    }))))))), /*#__PURE__*/React.createElement(Col, {\n      md: 1,\n      style: {\n        \"padding\": \"0.5px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"icon-group-wrap enable-view click-view \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      onClick: () => this.props.deleteCombinationUnique(index, screen.eventKey),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 61\n      }\n    }))))), dataListCount.length - 1 !== index ? /*#__PURE__*/React.createElement(\"hr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 49\n      }\n    }) : \"\")))))));\n  }\n\n}\n\nexport default injectIntl(ConfigureUniqueFields);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/designtemplatemapping/ConfigureUniqueFields.jsx"],"names":["React","FormattedMessage","injectIntl","Col","Form","InputGroup","Nav","Row","FontAwesomeIcon","faPlus","faTrashAlt","ContentPanel","SampleType","AtTabs","Tabs","TabPane","ConfigureUniqueFields","Component","constructor","props","onTabChange","tab","setState","selectedScreen","state","screens","find","screen","eventKey","name","approvedRegSubTypeVersion","jsondata","nneedsubsample","push","render","dataList","selectedTemplateType","Masters","dataListsubsample","dataListCount","dataListCountsubsample","designData","mastertemplatefields","sampletemplatefields","subsampletemplatefields","undefined","addCombinatonUnique","map","item","index","checkbox","slanguagetypecode","event","onInputOnChange","deleteCombinationUnique","length","intl","formatMessage","id"],"mappings":"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","sourcesContent":["\r\nimport React from 'react'\r\nimport { FormattedMessage, injectIntl } from 'react-intl'\r\nimport 'rc-tabs/assets/index.css';\r\nimport { Col, Form, InputGroup, Nav, Row } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ContentPanel } from '../product/product.styled';\r\nimport { SampleType } from '../../components/Enumeration';\r\nimport { AtTabs } from '../../components/custom-tabs/custom-tabs.styles';\r\nimport Tabs, { TabPane } from 'rc-tabs';\r\nclass ConfigureUniqueFields extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        const screens = [{ eventKey: 'sample', name: \"IDS_SAMPLE\" }];\r\n        if (this.props.approvedRegSubTypeVersion && this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === true) {\r\n            screens.push({ eventKey: 'subsample', name: \"IDS_SUBSAMPLE\" });\r\n        }\r\n\r\n        this.state = {\r\n            screens,\r\n            selectedScreen: { eventKey: 'sample', name: \"IDS_SAMPLE\" }\r\n        }\r\n    }\r\n\r\n    onTabChange = (tab) => {\r\n        this.setState({\r\n            selectedScreen: this.state.screens.find(screen => screen.eventKey === tab)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const dataList = this.props.selectedTemplateType === SampleType.Masters || this.state.selectedScreen.eventKey === 'sample' ? this.props.dataList : this.props.dataListsubsample\r\n        const dataListCount = this.props.selectedTemplateType === SampleType.Masters || this.state.selectedScreen.eventKey === 'sample' ? this.props.dataListCount : this.props.dataListCountsubsample\r\n        const designData = this.props.selectedTemplateType === SampleType.Masters ? this.props.designData.mastertemplatefields : this.state.selectedScreen.eventKey === 'sample' ? this.props.designData.sampletemplatefields : this.props.designData.subsampletemplatefields\r\n        return (\r\n            <>\r\n                {this.props.selectedTemplateType === SampleType.Masters || (this.props.approvedRegSubTypeVersion\r\n                    && (this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === undefined || this.props.approvedRegSubTypeVersion.jsondata.nneedsubsample === false)) ?\r\n                    <>\r\n                        <div className='d-flex justify-content-end'>\r\n                            <Nav.Link onClick={() => this.props.addCombinatonUnique(designData\r\n                            )} className=\"add-txt-btn\">\r\n                                <FontAwesomeIcon icon={faPlus} />{ }\r\n                                <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                            </Nav.Link>\r\n                        </div>\r\n                        {dataListCount.map((item, index) =>\r\n                            <>\r\n                                <Row>\r\n                                    <Col md={11}>\r\n                                        <InputGroup size={'lg'}>\r\n                                            <Form.Group>\r\n                                                <Row>\r\n                                                    {designData.map(checkbox =>\r\n\r\n                                                        <Col md={4}>\r\n                                                            <Form.Check\r\n                                                                inline={true}\r\n                                                                type=\"checkbox\"\r\n                                                                name={checkbox[\"2\"]}\r\n                                                                label={checkbox[\"1\"][this.props.slanguagetypecode] || checkbox[\"2\"]}\r\n                                                                onChange={(event) => this.props.onInputOnChange(event, checkbox[\"2\"], index, checkbox[\"1\"])}\r\n                                                                id={checkbox[\"2\"]}\r\n                                                                checked={checkbox[\"2\"] === (dataList && dataList[index] && dataList[index][checkbox[\"2\"]] && dataList[index][checkbox[\"2\"]][\"2\"]) ? true : false}\r\n                                                                defaultChecked={checkbox[\"2\"] === (dataList && dataList[index] && dataList[index][checkbox[\"2\"]] && dataList[index][checkbox[\"2\"]][\"2\"]) ? true : false}\r\n                                                                size={'lg'}\r\n                                                            />\r\n                                                        </Col>\r\n\r\n\r\n                                                    )}\r\n                                                </Row>\r\n                                            </Form.Group>\r\n                                        </InputGroup >\r\n                                    </Col>\r\n                                    <Col md={1}>\r\n                                        <div className='icon-group-wrap enable-view click-view '>\r\n                                            {/* style={{ \"display\": \"inline-flex\", \"align-items\": \"center\", \"padding-left\": \"0\", \"margin-right\": \"0.75rem\" }} */}\r\n                                            <Nav.Link onClick={() => this.props.deleteCombinationUnique(index)} >\r\n                                                <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\r\n                                            </Nav.Link>\r\n                                        </div>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                                {dataListCount.length-1 !== index ?\r\n                                    <hr /> : \"\"}\r\n                            </>\r\n                        )}\r\n                    </> :\r\n                    <AtTabs>\r\n                        <Tabs activeKey={this.state.selectedScreen.eventKey} moreIcon=\"...\" onChange={this.onTabChange}>\r\n                            {this.state.screens.map(screen =>\r\n                                <TabPane name={screen.eventKey} tab={this.props.intl.formatMessage({ id: screen.name })} key={screen.eventKey}>\r\n                                    <div className='d-flex justify-content-end'>\r\n                                        <Nav.Link onClick={() => this.props.addCombinatonUnique(designData, screen.eventKey\r\n                                        )} className=\"add-txt-btn\">\r\n                                            <FontAwesomeIcon icon={faPlus} />{ }\r\n                                            <FormattedMessage id='IDS_ADD' defaultMessage='Add' />\r\n                                        </Nav.Link>\r\n                                    </div>\r\n                                    {dataListCount.map((item, index) =>\r\n                                        <>\r\n                                            <Row>\r\n                                                <Col md={11}>\r\n                                                    <InputGroup size={'lg'}>\r\n                                                        <Form.Group>\r\n                                                            <Row style={{ \"margin\":\"0.5px\"}}>\r\n                                                                {designData.map(checkbox =>\r\n                                                                    <Col md={4}>\r\n                                                                        <Form.Check\r\n                                                                            inline={true}\r\n                                                                            type=\"checkbox\"\r\n                                                                            name={checkbox[\"2\"]}\r\n                                                                            label={checkbox[\"1\"][this.props.slanguagetypecode] || checkbox[\"2\"]}\r\n                                                                            onChange={(event) => this.props.onInputOnChange(event, checkbox[\"2\"], index, checkbox[\"1\"], screen.eventKey)}\r\n                                                                            id={checkbox[\"2\"]}\r\n                                                                            checked={checkbox[\"2\"] === (dataList && dataList[index] && dataList[index][checkbox[\"2\"]] && dataList[index][checkbox[\"2\"]][\"2\"]) ? true : false}\r\n                                                                            defaultChecked={checkbox[\"2\"] === (dataList && dataList[index] && dataList[index][checkbox[\"2\"]] && dataList[index][checkbox[\"2\"]][\"2\"]) ? true : false}\r\n                                                                            size={'lg'}\r\n                                                                        />\r\n                                                                    </Col>\r\n\r\n                                                                )}\r\n                                                            </Row>\r\n                                                        </Form.Group>\r\n                                                    </InputGroup >\r\n                                                </Col>\r\n                                                <Col md={1} style={{ \"padding\":\"0.5px\"}}>\r\n                                                    <div className='icon-group-wrap enable-view click-view '>\r\n                                                        {/* <div style={{ \"display\": \"inline-flex\", \"align-items\": \"center\", \"padding-left\": \"0\", \"margin-right\": \"0.75rem\" }}> */}\r\n                                                        <Nav.Link onClick={() => this.props.deleteCombinationUnique(index, screen.eventKey)} >\r\n                                                            <FontAwesomeIcon icon={faTrashAlt}></FontAwesomeIcon>\r\n                                                        </Nav.Link>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                            {dataListCount.length-1  !== index ?\r\n                                                <hr /> : \"\"}\r\n                                        </>\r\n                                    )}\r\n                                </TabPane>\r\n                            )}\r\n                        </Tabs>\r\n                    </AtTabs>\r\n                }\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default injectIntl(ConfigureUniqueFields)"]},"metadata":{},"sourceType":"module"}