{"ast":null,"code":"import React from'react';import{Row,Col,Form}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import{injectIntl}from'react-intl';import{SampleType,transactionStatus,MaterialType}from'../../components/Enumeration';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{CONTAINERTYPE}from'../../components/Enumeration';import{faClosedCaptioning}from'@fortawesome/free-solid-svg-icons';var AddTestGroupSpecification=function AddTestGroupSpecification(props){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},props.tempFilterData.nsampletypecode&&props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired===transactionStatus.NO&&props.selectedRecord.ncategorybasedflow===transactionStatus.NO?/*#__PURE__*/React.createElement(FormInput,{name:\"sproductname\",label:props.genericLabel&&props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.genericLabel&&props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],value:props.selectedRecord?props.selectedRecord[\"sproductname\"]:\"\",readOnly:true}):/*#__PURE__*/React.createElement(FormInput,{name:\"sproductcatname\",label:props.genericLabel&&props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.genericLabel&&props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],value:props.selectedRecord?props.selectedRecord[\"sproductcatname\"]:\"\",readOnly:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"sspecname\",label:props.intl.formatMessage({id:\"IDS_SPECNAME\"}),type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_SPECNAME\"}),value:props.selectedRecord?props.selectedRecord[\"sspecname\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}))),/*#__PURE__*/React.createElement(Row,null,props.userInfo.istimezoneshow===transactionStatus.YES&&/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"ntzexpirydate\",formLabel:props.intl.formatMessage({id:\"IDS_TIMEZONE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.timeZoneList,optionId:\"ntimezonecode\",optionValue:\"stimezoneid\",value:props.selectedRecord[\"ntzexpirydate\"],defaultValue:props.selectedRecord[\"ntzexpirydate\"],isMandatory:true,isSearchable:true,isClearable:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(value){return props.onComboChange(value,'ntzexpirydate',1);}}))),props.operation===\"copy\"?\"\":/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ntransactionstatus\",label:props.intl.formatMessage({id:\"IDS_ACTIVE\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[transactionStatus.ACTIVE,transactionStatus.DEACTIVE]);},placeholder:props.intl.formatMessage({id:\"IDS_ACTIVE\"}),defaultValue:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false,checked:props.selectedRecord[\"ntransactionstatus\"]===transactionStatus.ACTIVE?true:false})),props.filterData&&props.filterData.nproductcatcode.item.nmaterialtypecode==MaterialType.IQCSTANDARDMATERIALTYPE?\"\":/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ncomponentrequired\",label:props.genericLabel&&props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]+\" \"+props.intl.formatMessage({id:\"IDS_REQUIRED\"}),type:\"switch\",onChange:function onChange(event){return props.onInputOnChange(event,1,[transactionStatus.YES,transactionStatus.NO]);},placeholder:props.genericLabel&&props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]+\" \"+props.intl.formatMessage({id:\"IDS_REQUIRED\"})// defaultValue={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\n//  checked={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\n,checked:props.selectedRecord?props.selectedRecord[\"ncomponentrequired\"]===transactionStatus.YES?true:false:false//disabled={ props.nsampletypecode  === SampleType.CLINICALTYPE && props.settings && parseInt(props.settings[22]) === transactionStatus.YES ? true : false }\n//    disabled={props.tempFilterData && props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.YES ? true : false }\n,disabled:props.tempFilterData&&props.tempFilterData.nsampletypecode.item.ncomponentrequired===transactionStatus.YES?true:false// disabled={true}//{props.operation===\"copy\"?true:false}\n//   disabled={props.nsampletypecode === SampleType.CLINICALTYPE ? true : false}\n}))));};export default injectIntl(AddTestGroupSpecification);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/AddTestGroupSpecification.jsx"],"names":["React","Row","Col","Form","FormInput","DateTimePicker","CustomSwitch","injectIntl","SampleType","transactionStatus","MaterialType","FormSelectSearch","CONTAINERTYPE","faClosedCaptioning","AddTestGroupSpecification","props","tempFilterData","nsampletypecode","item","ncategorybasedflowrequired","NO","selectedRecord","ncategorybasedflow","genericLabel","userInfo","slanguagetypecode","event","onInputOnChange","intl","formatMessage","id","istimezoneshow","YES","timeZoneList","value","onComboChange","operation","ACTIVE","DEACTIVE","filterData","nproductcatcode","nmaterialtypecode","IQCSTANDARDMATERIALTYPE","ncomponentrequired"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, Form } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport { SampleType, transactionStatus,MaterialType } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { CONTAINERTYPE } from '../../components/Enumeration';\r\nimport { faClosedCaptioning } from '@fortawesome/free-solid-svg-icons';\r\nconst AddTestGroupSpecification = props => {\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col md={12}>\r\n                    {(props.tempFilterData.nsampletypecode && props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.NO) &&\r\n                    (props.selectedRecord.ncategorybasedflow === transactionStatus.NO)  ?\r\n                        <FormInput\r\n                            name={\"sproductname\"}\r\n                            label={props.genericLabel &&  props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] }\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.genericLabel &&  props.genericLabel[\"Product\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sproductname\"] : \"\"}\r\n                            readOnly={true}\r\n                        />\r\n\r\n                        : <FormInput\r\n                            name={\"sproductcatname\"}\r\n                            label={props.genericLabel && props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] }\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.genericLabel && props.genericLabel[\"ProductCategory\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] }\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sproductcatname\"] : \"\"}\r\n                            readOnly={true}\r\n                        />\r\n                    }\r\n                    <FormInput\r\n                        name={\"sspecname\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_SPECNAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1)}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SPECNAME\" })}\r\n                        value={props.selectedRecord ? props.selectedRecord[\"sspecname\"] : \"\"}\r\n                        isMandatory=\"*\"\r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n            <Row>\r\n                {/* <Col md={props.userInfo.istimezoneshow ? 6 : 12}> */}\r\n                    {/* <Row>\r\n                        <Col md={6}> */}\r\n\r\n\r\n                    {/* <DateTimePicker\r\n                        name={\"dexpirydate\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_EXPIRYDATEWOTIME\" })}\r\n                        className='form-control'\r\n                        placeholderText=\"Select date..\"\r\n                        selected={props.selectedRecord[\"dexpirydate\"]}\r\n                        //dateFormat={\"dd/MM/yyyy\"}\r\n                        dateFormat={props.userInfo.ssitedate}\r\n                        timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                        showTimeInput={false}\r\n                        isClearable={false}\r\n                        onChange={date => props.handleDateChange(\"dexpirydate\", date)}\r\n                        value={props.selectedRecord[\"dexpirydate\"]}\r\n                        isMandatory={true}\r\n                        required={true}\r\n                    />\r\n                </Col> */}\r\n                {props.userInfo.istimezoneshow === transactionStatus.YES  &&\r\n                    <Col md={6}>\r\n                        <FormSelectSearch\r\n                            name={\"ntzexpirydate\"}\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={props.timeZoneList}\r\n                            optionId=\"ntimezonecode\"\r\n                            optionValue=\"stimezoneid\"\r\n                            value={props.selectedRecord[\"ntzexpirydate\"]}\r\n                            defaultValue={props.selectedRecord[\"ntzexpirydate\"]}\r\n                            isMandatory={true}\r\n                            isSearchable={true}\r\n                            isClearable={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            onChange={(value) => props.onComboChange(value, 'ntzexpirydate', 1)}\r\n                        />\r\n                        {/* </Col>\r\n                    </Row> */}\r\n                    </Col>\r\n                }\r\n                {/* <Col md={6}>\r\n                    <FormSelectSearch\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTTYPE\" })}\r\n                            isSearchable={true}\r\n                            name={\"nprojecttypecode\"}\r\n                            isDisabled={false}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            isMandatory={false}\r\n                            isClearable={true}\r\n                            options={props.projectTypeList}\r\n                            value={props.selectedRecord[\"nprojecttypecode\"] || \"\"}\r\n                            defaultValue={props.selectedRecord[\"nprojecttypecode\"]}\r\n                            onChange={(event) => props.onComboChange(event, \"nprojecttypecode\", 3)}\r\n                            closeMenuOnSelect={true}\r\n                        >\r\n                        </FormSelectSearch>\r\n                </Col>\r\n                 <Col md={6}>\r\n                        <FormSelectSearch\r\n                            name={\"nprojectcode\"}\r\n                            formLabel={props.intl.formatMessage({ id: \"IDS_PROJECTCODE\" })}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                            options={props.projectList}\r\n                            value={props.selectedRecord[\"nprojectcode\"]}\r\n                            defaultValue={props.selectedRecord[\"nprojectcode\"]}\r\n                            isMandatory={true}\r\n                            isSearchable={true}\r\n                            isClearable={false}\r\n                            closeMenuOnSelect={true}\r\n                            alphabeticalSort={true}\r\n                            onChange={(value) => props.onComboChange(value, 'nprojectcode', 1)}\r\n                        />\r\n                        \r\n                    </Col> */}\r\n            </Row>\r\n            {props.operation === \"copy\" ? \"\" :\r\n            <Row>\r\n                <Col md={4}>\r\n                    <CustomSwitch\r\n                        name={\"ntransactionstatus\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_ACTIVE\" })}\r\n                        type=\"switch\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1, [transactionStatus.ACTIVE, transactionStatus.DEACTIVE])}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_ACTIVE\" })}\r\n                        defaultValue={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                        checked={props.selectedRecord[\"ntransactionstatus\"] === transactionStatus.ACTIVE ? true : false}\r\n                    >\r\n                    </CustomSwitch>\r\n                </Col>\r\n\r\n          \r\n               \r\n                { \r\n                props.filterData && props.filterData.nproductcatcode.item.nmaterialtypecode == MaterialType.IQCSTANDARDMATERIALTYPE ? \"\" :\r\n                 <Col md={4}>\r\n                    <CustomSwitch\r\n                        name={\"ncomponentrequired\"}\r\n                        label={props.genericLabel && props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] +\" \"+ props.intl.formatMessage({ id: \"IDS_REQUIRED\" })}\r\n                        type=\"switch\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO])}\r\n                        placeholder={ props.genericLabel && props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode] +\" \"+ props.intl.formatMessage({ id: \"IDS_REQUIRED\" })}\r\n                       // defaultValue={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\r\n                      //  checked={props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false}\r\n                        checked={props.selectedRecord ? props.selectedRecord[\"ncomponentrequired\"] === transactionStatus.YES ? true : false : false}\r\n                        //disabled={ props.nsampletypecode  === SampleType.CLINICALTYPE && props.settings && parseInt(props.settings[22]) === transactionStatus.YES ? true : false }\r\n                  //    disabled={props.tempFilterData && props.tempFilterData.nsampletypecode.item.ncategorybasedflowrequired === transactionStatus.YES ? true : false }\r\n                        disabled={props.tempFilterData && props.tempFilterData.nsampletypecode.item.ncomponentrequired === transactionStatus.YES ? true : false }\r\n\r\n                        // disabled={true}//{props.operation===\"copy\"?true:false}\r\n                    //   disabled={props.nsampletypecode === SampleType.CLINICALTYPE ? true : false}\r\n\r\n                    >\r\n                    </CustomSwitch>\r\n                </Col> \r\n            }\r\n           \r\n\r\n                {/* <Col md={4} >\r\n                    <CustomSwitch\r\n                        name={\"nclinicalspec\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_CLINICALSPEC\" })}\r\n                        type=\"switch\"\r\n                        onChange={(event) => props.onInputOnChange(event, 1, [transactionStatus.YES, transactionStatus.NO])}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_CLINICALSPEC\" })}\r\n                        defaultValue={props.selectedRecord[\"nclinicalspec\"] === transactionStatus.YES ? true : false}\r\n                        checked={props.selectedRecord[\"nclinicalspec\"] === transactionStatus.YES ? true : false}\r\n                    // disabled={true}//{props.operation===\"copy\"?true:false}\r\n                    >\r\n                    </CustomSwitch>\r\n                </Col> */}\r\n\r\n  \r\n            </Row>\r\n             }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default injectIntl(AddTestGroupSpecification);"]},"metadata":{},"sourceType":"module"}