{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboard\\\\SqlBuilderNewDesign.jsx\";\nimport { faAd, faCopy, faDownload, faEdit, faMinus, faPen, faPenAlt, faPencilAlt, faPlus, faTable, faTimes, faTrash, faWindowClose } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { Button, Card, Col, Form, InputGroup, Nav, Row } from 'react-bootstrap';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport FilterCondition from './FilterCondition';\nimport ListComponent from './ListComponent';\nimport './SqlBuilderDesign.css';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport { constructOptionList, convertDateTimetoStringDBFormat } from '../../components/CommonScript';\nimport { stringOperatorData, numericOperatorData, joinCondition, joinConditionData, orderByList, aggregateFunction, summarizeOperatorData, dateConditionData } from './SqlBuilderFilterType';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\nimport { toast } from 'react-toastify';\nimport ButtonMultiSelectDropDown from './ButtonDropdown';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\n\nclass SqlBuilderNewDesign extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tableDataStateChange = event => {\n      this.setState({\n        dataStateTable: event.dataState\n      });\n    };\n\n    this.onClickTable = item => {\n      // let selectedRecord = this.state.selectedRecord;\n      //let avaliableColumns = [];\n      const {\n        selectedRecord,\n        avaliableColumns,\n        avaliableColumnsForMultiSelect\n      } = this.queryFormation({\n        selectedRecord: {},\n        item\n      }, 1);\n      selectedRecord['selectedTable'] = item;\n      selectedRecord['stablename'] = [{\n        label: item.stabledisplayname,\n        value: 0,\n        item: item\n      }]; // selectedRecord['stablename'+0]= \n\n      this.setState({\n        selectedRecord,\n        avaliableColumns,\n        avaliableColumnsForMultiSelect\n      });\n    };\n\n    this.queryFormation = (Param, type) => {\n      const selectedRecord = Param.selectedRecord || {};\n      let avaliableColumns = [];\n      let avaliableColumnsForMultiSelect = [];\n\n      if (type === 1) {\n        const tableName = Param.item.tableName;\n        const tabledisplayName = Param.item.stabledisplayname;\n\n        if (selectedRecord.sql === undefined || selectedRecord.sql === '') {\n          selectedRecord['sql'] = \"SELECT * FROM \" + tableName + \" \\\"\" + tabledisplayName + \"\\\"\";\n          avaliableColumns = this.props.tableList.filter(p => p.stable === tableName);\n          let constructData1 = this.state.listColumnForMultiSelect && this.state.listColumnForMultiSelect.filter(item => item.value === tableName);\n          let constructData2 = constructData1 && constructData1.map((item, index) => {\n            return {\n              label: item.label,\n              value: 0,\n              item: { ...item.item,\n                parentTableIndex: 0\n              },\n              options: item.options.map((i, index1) => {\n                return {\n                  label: i.label,\n                  value: index1,\n                  item: { ...i.item,\n                    parentTableIndex: 0\n                  }\n                };\n              })\n            };\n          });\n          let constructData = avaliableColumns.map((item, index) => {\n            return {\n              label: item.scolumndisplayname,\n              value: index,\n              item: { ...item,\n                parentTableIndex: 0\n              }\n            };\n          });\n          selectedRecord['scolumnname'] = constructData;\n          avaliableColumns = constructData;\n          avaliableColumnsForMultiSelect = constructData2;\n        }\n      } else if (type === 2) {\n        let str = \"\";\n        str = \"SELECT \";\n\n        if (selectedRecord.scolumnname.length !== this.state.avaliableColumns.length) {\n          selectedRecord.scolumnname.map((item, index) => {\n            if (selectedRecord.scolumnname.length - 1 !== index) {\n              str = str + \"\\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.value + \"\\\" \\\"\" + item.label + \"\\\", \";\n            } else {\n              str = str + \"\\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.value + \"\\\" \\\"\" + item.label + \"\\\" \";\n            }\n          });\n        } else {\n          str = str + \" * \";\n        }\n\n        str = str + \" FROM \";\n        selectedRecord['stablename'].map(item => {\n          str = str + item.value + \" \\\"\" + item.label + \"\\\"\";\n        });\n        selectedRecord['sql'] = str;\n      }\n\n      return {\n        selectedRecord,\n        avaliableColumns,\n        avaliableColumnsForMultiSelect\n      };\n    };\n\n    this.onClose = event => {\n      this.setState({\n        selectedRecord: {}\n      });\n    };\n\n    this.onfilterChange = (comboValue, columnLabel, conditionType, index) => {\n      const selectedRecord = this.state.selectedRecord;\n      let summarizeCombo = [];\n\n      if (conditionType === 'table') {\n        if (comboValue.item.summarize) {\n          selectedRecord['summarize'].map((item, index) => {\n            if (item.summarizeCondition.value === \"COUNT\") {\n              summarizeCombo.push({\n                label: item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\",\n                value: index,\n                item: { ...item,\n                  summarize: true\n                }\n              });\n            } else if (item.summarizeCondition.value === \"DISTINCT\") {\n              summarizeCombo.push({\n                label: item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\",\n                value: index,\n                item: { ...item,\n                  summarize: true\n                }\n              });\n            }\n          });\n        }\n\n        const filterTableNewAddedList = [...selectedRecord['filterNew']];\n        const change = { ...filterTableNewAddedList[index],\n          [columnLabel]: comboValue,\n          filterColumn: undefined,\n          filterCondition: undefined,\n          filterValueType: undefined,\n          filterValue: undefined\n        };\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n        }, ...filterTableNewAddedList.splice(index + 1)];\n        this.setState({\n          selectedRecord: { ...selectedRecord,\n            filterNew: changeData\n          },\n          summarizeCombo\n        });\n      } else if (conditionType === 'column') {\n        const filterTableNewAddedList = [...selectedRecord['filterNew']];\n        const change = { ...filterTableNewAddedList[index],\n          [columnLabel]: comboValue,\n          filterCondition: undefined,\n          filterValueType: undefined,\n          filterValue: undefined\n        };\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n        }, ...filterTableNewAddedList.splice(index + 1)];\n        this.setState({\n          selectedRecord: { ...selectedRecord,\n            filterNew: changeData\n          },\n          summarizeCombo\n        });\n      } else if (conditionType === 'condition') {\n        const filterTableNewAddedList = [...selectedRecord['filterNew']];\n        const change = { ...filterTableNewAddedList[index],\n          [columnLabel]: comboValue\n        };\n        let filterValueType = undefined;\n\n        if (comboValue.value !== 'IN' && comboValue.value !== '=' && comboValue.value !== '!=' && comboValue.value !== '<' && comboValue.value !== '>' && comboValue.value !== '>=' && comboValue.value !== '<=' && (change.filterColumn.item.columndatatype === 'string' && comboValue.value !== 'NOT' || change.filterColumn.item.columndatatype === 'date' && (comboValue.value !== 'NOT' || comboValue.value !== 'ON'))) {\n          filterValueType = {\n            label: \"Pre-Defined Values\",\n            value: 2\n          };\n          change['filterValueType'] = filterValueType;\n        } else {\n          change['filterValueType'] = undefined;\n        }\n\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change,\n          filterValue: undefined\n        }, ...filterTableNewAddedList.splice(index + 1)];\n        this.setState({\n          selectedRecord: { ...selectedRecord,\n            filterNew: changeData\n          },\n          summarizeCombo\n        });\n      } else if (conditionType === 'valueType') {\n        const filterTableNewAddedList = [...selectedRecord['filterNew']];\n        const change = { ...filterTableNewAddedList[index],\n          [columnLabel]: comboValue,\n          filterValue: undefined\n        };\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n        }, ...filterTableNewAddedList.splice(index + 1)];\n        this.setState({\n          selectedRecord: { ...selectedRecord,\n            filterNew: changeData\n          },\n          summarizeCombo\n        });\n      } else if (conditionType === 'joinCondition') {\n        //const filterTableNewAddedList = { ...selectedRecord[columnLabel] }\n        this.setState({\n          selectedRecord: { ...selectedRecord,\n            [columnLabel]: comboValue\n          },\n          summarizeCombo\n        });\n      }\n    };\n\n    this.onSortChange = (comboValue, columnLabel, conditionType, index) => {\n      const selectedRecord = this.state.selectedRecord;\n      const filterTableNewAddedList = [...selectedRecord['sortNew']];\n      const change = { ...filterTableNewAddedList[index],\n        [columnLabel]: comboValue\n      };\n\n      switch (conditionType) {\n        case 'table':\n          change['sortColumn'] = undefined; // selectedRecord['sortNew'][index][columnLabel] = comboValue;\n\n          break;\n      }\n\n      const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n      }, ...filterTableNewAddedList.splice(index + 1)];\n      this.setState({\n        selectedRecord: { ...selectedRecord,\n          sortNew: changeData\n        }\n      });\n    };\n\n    this.onSummarizeChange = (comboValue, columnLabel, conditionType, index) => {\n      const selectedRecord = this.state.selectedRecord;\n      const filterTableNewAddedList = [...selectedRecord['summarizeNew']];\n      const change = { ...filterTableNewAddedList[index],\n        [columnLabel]: comboValue\n      };\n\n      switch (conditionType) {\n        case 'table':\n          change['summarizeColumn'] = undefined;\n          change['summarizeCondition'] = undefined; // selectedRecord['summarizeNew'][index][columnLabel] = comboValue;\n\n          break;\n\n        case 'column':\n          change['summarizeCondition'] = undefined; // selectedRecord['summarizeNew'][index][columnLabel] = comboValue;\n\n          break;\n        // case 'condition':\n        //     selectedRecord['summarizeNew'][index][columnLabel] = comboValue;\n        //     break;\n      }\n\n      const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n      }, ...filterTableNewAddedList.splice(index + 1)];\n      this.setState({\n        selectedRecord: { ...selectedRecord,\n          summarizeNew: changeData\n        }\n      });\n    };\n\n    this.onGroupChange = (comboValue, columnLabel, conditionType, index) => {\n      const selectedRecord = this.state.selectedRecord;\n      const filterTableNewAddedList = [...selectedRecord['groupNew']];\n      const change = { ...filterTableNewAddedList[index],\n        [columnLabel]: comboValue\n      };\n\n      switch (conditionType) {\n        case 'table':\n          change['groupColumn'] = undefined; // selectedRecord['groupNew'][index][columnLabel] = comboValue;\n\n          break;\n        // case 'column':\n        //     selectedRecord['groupNew'][index][columnLabel] = comboValue;\n        //     break;\n      }\n\n      const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n      }, ...filterTableNewAddedList.splice(index + 1)];\n      this.setState({\n        selectedRecord: { ...selectedRecord,\n          groupNew: changeData\n        }\n      });\n    };\n\n    this.closeAlertModal = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (this.state.filterType === 1) {\n        this.setState({\n          showFilter: false,\n          selectedRecord: { ...selectedRecord,\n            filterNew: [],\n            filterNewCondition: []\n          },\n          listOldTableColumn: [],\n          listNewTableColumn: []\n        });\n      } else if (this.state.filterType === 2) {\n        this.setState({\n          showFilter: false,\n          selectedRecord: { ...selectedRecord,\n            filterTableJoin: {},\n            filterTableNewAdded: [],\n            filterTableNewAddButton: false,\n            filterTableOld: {},\n            filterTableOldColumn: {},\n            filterTableNew: {},\n            filterTableNewColumn: {}\n          },\n          listOldTableColumn: [],\n          listNewTableColumn: []\n        });\n      } else if (this.state.filterType === 3) {\n        this.setState({\n          showFilter: false,\n          selectedRecord: { ...selectedRecord,\n            sortNew: []\n          },\n          listOldTableColumn: [],\n          listNewTableColumn: []\n        });\n      } else if (this.state.filterType === 4) {\n        this.setState({\n          showFilter: false,\n          selectedRecord: { ...selectedRecord,\n            summarizeNew: []\n          },\n          listOldTableColumn: [],\n          listNewTableColumn: []\n        });\n      } else if (this.state.filterType === 5) {\n        this.setState({\n          showFilter: false,\n          selectedRecord: { ...selectedRecord,\n            groupNew: []\n          },\n          listOldTableColumn: [],\n          listNewTableColumn: []\n        });\n      } else if (this.state.filterType === 6) {\n        this.setState({\n          showFilter: false,\n          selectedRecord: { ...selectedRecord,\n            LimitNew: 0\n          },\n          listOldTableColumn: [],\n          listNewTableColumn: []\n        });\n      } else if (this.state.filterType === 8) {\n        this.setState({\n          showFilter: true,\n          selectedRecord: { ...selectedRecord,\n            joinAliasName: \"\"\n          },\n          filterTitle: this.props.intl.formatMessage({\n            id: \"IDS_ADDJOIN\"\n          }),\n          filterType: 2 // listOldTableColumn: [], listNewTableColumn: []\n\n        });\n      } // this.setState({ showFilter: false,selectedRecord,\n      //      listOldTableColumn: [], listNewTableColumn: [] })\n\n    };\n\n    this.onFilterInputOnChange = (event, index) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      const filterTableNewAddedList = [...selectedRecord['filterNew']];\n      const change = { ...filterTableNewAddedList[index],\n        [event.target.name]: event.target.value\n      };\n      const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n      }, ...filterTableNewAddedList.splice(index + 1)];\n      this.setState({\n        selectedRecord: { ...selectedRecord,\n          filterNew: changeData\n        }\n      });\n    };\n\n    this.onjoinAliasName = event => {\n      const selectedRecord = this.state.selectedRecord || {};\n      this.setState({\n        selectedRecord: { ...selectedRecord,\n          [event.target.name]: event.target.value\n        }\n      });\n    };\n\n    this.onFilterNumericInputChange = (value, name, index) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      const filterTableNewAddedList = [...selectedRecord['filterNew']];\n      const change = { ...filterTableNewAddedList[index],\n        [name]: value\n      };\n      const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n      }, ...filterTableNewAddedList.splice(index + 1)];\n      this.setState({\n        selectedRecord: { ...selectedRecord,\n          filterNew: changeData\n        }\n      });\n    };\n\n    this.handleDateChange = (columnLabel, value, index) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      const filterTableNewAddedList = [...selectedRecord['filterNew']];\n      const change = { ...filterTableNewAddedList[index],\n        [columnLabel]: value\n      };\n      const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n      }, ...filterTableNewAddedList.splice(index + 1)];\n      this.setState({\n        selectedRecord: { ...selectedRecord,\n          filterNew: changeData\n        }\n      });\n    };\n\n    this.onNumericLimitChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onCondition = (e, conditionType) => {\n      const selectedRecord = this.state.selectedRecord;\n\n      switch (conditionType) {\n        case 1:\n          let summarizeLoad = true;\n          let summarizeLoadOnly = false;\n          selectedRecord['filterNew'] = [{}];\n          selectedRecord['filterNewCondition'] = {\n            label: \"And\",\n            value: 'And',\n            items: {\n              label: \"And\",\n              value: 1\n            }\n          };\n\n          if (selectedRecord['summarize'] && selectedRecord['summarize'].length > 0) {\n            if (selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].length > 0) {\n              summarizeLoad = false; // selectedRecord['filter'].map((item, index) => {\n              //     if (item.filterTable.item.summarize) {\n              //         summarizeLoad = false\n              //     }\n              // })\n            } else {\n              summarizeLoad = true;\n            }\n          } else {\n            summarizeLoad = false;\n          }\n\n          this.setState({\n            summarizeLoadOnly,\n            summarizeLoad,\n            showFilter: true,\n            filterTitle: this.props.intl.formatMessage({\n              id: \"IDS_ADDFILTER\"\n            }),\n            filterType: conditionType,\n            selectedRecord\n          });\n          break;\n\n        case 2:\n          selectedRecord['filterTableNewAdded'] = [{}];\n          selectedRecord['filterTableNewAddButton'] = true;\n          selectedRecord['filterNewTableCondition'] = {\n            label: \"Inner Join\",\n            value: \"INNER JOIN\",\n            items: {\n              label: \"Inner join\",\n              value: \"INNER JOIN\",\n              symbol: \"inner\"\n            }\n          };\n          this.setState({\n            showFilter: true,\n            filterTitle: this.props.intl.formatMessage({\n              id: \"IDS_ADDJOIN\"\n            }),\n            filterType: conditionType,\n            selectedRecord\n          });\n          break;\n\n        case 3:\n          //selectedRecord['sortNew'] = [{ 'sortCondition': { label: \"Ascending\", value: \"asc\", items: { label: \"Ascending\", value: \"asc\" } } }]\n          this.setState({\n            showFilter: true,\n            filterTitle: this.props.intl.formatMessage({\n              id: \"IDS_SORT\"\n            }),\n            filterType: conditionType,\n            selectedRecord: { ...selectedRecord,\n              sortNew: [{\n                'sortCondition': {\n                  label: \"Ascending\",\n                  value: \"asc\",\n                  items: {\n                    label: \"Ascending\",\n                    value: \"asc\"\n                  }\n                }\n              }]\n            }\n          });\n          break;\n\n        case 4:\n          // selectedRecord['summarizeNew'] = [{}]\n          this.setState({\n            showFilter: true,\n            filterTitle: this.props.intl.formatMessage({\n              id: \"IDS_SUMMARIZE\"\n            }),\n            filterType: conditionType,\n            selectedRecord: { ...selectedRecord,\n              summarizeNew: [{}]\n            }\n          });\n          break;\n\n        case 5:\n          //selectedRecord['groupNew'] = [{}]\n          this.setState({\n            showFilter: true,\n            filterTitle: this.props.intl.formatMessage({\n              id: \"IDS_ADDGROUP\"\n            }),\n            filterType: conditionType,\n            selectedRecord: { ...selectedRecord,\n              groupNew: [{}]\n            }\n          });\n          break;\n\n        case 6:\n          this.setState({\n            showFilter: true,\n            filterTitle: this.props.intl.formatMessage({\n              id: \"IDS_ADDLIMIT\"\n            }),\n            filterType: conditionType,\n            selectedRecord\n          });\n          break;\n      }\n    };\n\n    this.onComboFieldChange = (event, filed) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[filed] = event;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onJoinChange = (value, columnName, type, index) => {\n      const selectedRecord = this.state.selectedRecord;\n\n      if (type !== 'joinTableCondition') {\n        const filterTableNewAddedList = [...selectedRecord['filterTableNewAdded']];\n        const change = { ...filterTableNewAddedList[index],\n          [columnName]: value\n        };\n        let listNewTableColumn = this.state.listNewTableColumn || [];\n        let listOldTableColumn = this.state.listOldTableColumn || [];\n\n        if (type === 'oldtable') {\n          change['filterTableOldColumn'] = undefined;\n          listOldTableColumn = constructOptionList(this.props.tableList.filter(p => p.stable === value.item.tableName), 'scolumn', 'scolumndisplayname').get(\"OptionList\");\n        } else if (type === 'newtable') {\n          change['filterTableNewColumn'] = undefined;\n          listNewTableColumn = constructOptionList(this.props.tableList.filter(p => p.stable === value.item.tableName), 'scolumn', 'scolumndisplayname').get(\"OptionList\");\n        }\n\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change\n        }, ...filterTableNewAddedList.splice(index + 1)];\n        this.setState({\n          selectedRecord: { ...selectedRecord,\n            'filterTableNewAdded': changeData\n          },\n          listNewTableColumn,\n          listOldTableColumn\n        });\n      } else {\n        this.setState({\n          selectedRecord: { ...selectedRecord,\n            [columnName]: value\n          }\n        });\n      }\n    };\n\n    this.checkFilter = filterList => {\n      let check = [];\n      filterList.map((item, index) => {\n        if (item.filterTable && item.filterTable.item.summarize) {\n          if (item.filterColumn) {\n            if (item.filterCondition) {\n              if (item.filterValueType && item.filterValueType.value === 1) {\n                check.push(true);\n              } else {\n                if (item.filterValueType && item.filterValueType.value === 2) {\n                  if (item.filterValue && item.filterValue !== undefined && item.filterValue !== \"\") {\n                    check.push(true);\n                  }\n                }\n              }\n            }\n          }\n        } else if (item.filterTable) {\n          if (item.filterColumn) {\n            if (item.filterCondition) {\n              if (item.filterColumn.item.columndatatype === 'string') {\n                if (item.filterCondition.value === '=' || item.filterCondition.value === 'IN' || item.filterCondition.value === 'NOT') {\n                  if (item.filterValueType && item.filterValueType.value === 2) {\n                    if (item.filterValue && item.filterValue !== \"\") {\n                      check.push(true);\n                    }\n                  } else {\n                    if (item.filterValueType && item.filterValueType.value === 1) {\n                      check.push(true);\n                    }\n                  }\n                } else {\n                  if (item.filterCondition) {\n                    check.push(true);\n                  }\n                }\n              } else if (item.filterColumn.item.columndatatype === 'numeric') {\n                if (item.filterCondition.value === '=' || item.filterCondition.value === '!=' || item.filterCondition.value === '>' || item.filterCondition.value === '<' || item.filterCondition.value === '>=' || item.filterCondition.value === '<=') {\n                  if (item.filterValueType && item.filterValueType.value === 2) {\n                    if (item.filterValue && item.filterValue !== \"\") {\n                      check.push(true);\n                    }\n                  } else {\n                    if (item.filterValueType && item.filterValueType.value === 1) {\n                      check.push(true);\n                    }\n                  }\n                } else {\n                  if (item.filterCondition) {\n                    check.push(true);\n                  }\n                }\n              } else if (item.filterColumn.item.columndatatype === 'date') {\n                if (item.filterCondition.value === '=' || item.filterCondition.value === 'NOT') {\n                  if (item.filterValueType && item.filterValueType.value === 2) {\n                    if (item.filterValue && item.filterValue !== \"\") {\n                      check.push(true);\n                    }\n                  } else {\n                    if (item.filterValueType && item.filterValueType.value === 1) {\n                      check.push(true);\n                    }\n                  }\n                } else {\n                  if (item.filterCondition) {\n                    check.push(true);\n                  }\n                }\n              }\n            }\n          }\n        }\n      });\n      return check.length === filterList.length ? true : false;\n    };\n\n    this.checkJoin = joinList => {\n      let check = [];\n      joinList.map((item, index) => {\n        if (item.filterTableOld) {\n          if (item.filterTableOldColumn) {\n            if (item.filterTableNew) {\n              if (item.filterTableNewColumn) {\n                check.push(true);\n              }\n            }\n          }\n        }\n      });\n      return check.length === joinList.length ? true : false;\n    };\n\n    this.checkssg = (List, type) => {\n      let check = [];\n      List.map((item, index) => {\n        if (type === 1) {\n          if (item.sortTable) {\n            if (item.sortColumn) {\n              if (item.sortCondition) {\n                check.push(true);\n              }\n            }\n          }\n        } else if (type === 2) {\n          if (item.summarizeTable) {\n            if (item.summarizeColumn) {\n              if (item.summarizeCondition) {\n                check.push(true);\n              }\n            }\n          }\n        } else {\n          if (item.groupTable) {\n            if (item.groupColumn) {\n              check.push(true);\n            }\n          }\n        }\n      });\n      return check.length === List.length ? true : false;\n    };\n\n    this.onMoreClick = (e, filterType) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      switch (filterType) {\n        case 1:\n          let summarizeLoadOnly = this.state.summarizeLoadOnly;\n          let summarizeLoad = this.state.summarizeLoad;\n\n          if (this.checkFilter(selectedRecord['filterNew'])) {\n            selectedRecord['filterNew'][selectedRecord['filterNew'].length] = {};\n\n            if (selectedRecord['filterNew'][0]['filterTable'].item.summarize) {\n              summarizeLoadOnly = true;\n            } else {\n              summarizeLoad = false;\n              summarizeLoadOnly = false;\n            }\n\n            this.setState({\n              selectedRecord,\n              summarizeLoadOnly,\n              summarizeLoad\n            });\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_PLEASEFILLTHEVALUE\"\n            }));\n          }\n\n          break;\n\n        case 2:\n          if (this.checkJoin(selectedRecord['filterTableNewAdded'])) {\n            // selectedRecord['filterTableNewAddButton'] = true\n            selectedRecord['filterTableNewAdded'] = [...selectedRecord['filterTableNewAdded'], {}];\n            this.setState({\n              selectedRecord\n            });\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_PLEASEFILLTHEVALUE\"\n            }));\n          }\n\n          break;\n\n        case 3:\n          if (this.checkssg(selectedRecord['sortNew'], 1)) {\n            selectedRecord['sortNew'][selectedRecord['sortNew'].length] = {\n              'sortCondition': {\n                label: \"Ascending\",\n                value: \"asc\",\n                items: {\n                  label: \"Ascending\",\n                  value: \"asc\"\n                }\n              }\n            };\n            this.setState({\n              selectedRecord\n            });\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_PLEASEFILLTHEVALUE\"\n            }));\n          }\n\n          break;\n\n        case 4:\n          if (this.checkssg(selectedRecord['summarizeNew'], 2)) {\n            selectedRecord['summarizeNew'][selectedRecord['summarizeNew'].length] = {};\n            this.setState({\n              selectedRecord\n            });\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_PLEASEFILLTHEVALUE\"\n            }));\n          }\n\n          break;\n\n        case 5:\n          if (this.checkssg(selectedRecord['groupNew'], 3)) {\n            selectedRecord['groupNew'][selectedRecord['groupNew'].length] = {};\n            this.setState({\n              selectedRecord\n            });\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_PLEASEFILLTHEVALUE\"\n            }));\n          }\n\n          break;\n      }\n    };\n\n    this.onJoinAddClick = (e, columnName, type, value) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (type === 'add') {\n        selectedRecord['filterTableNewAdded'] = selectedRecord['filterTableNewAdded'] || [];\n        selectedRecord['filterTableNewAdded'][selectedRecord['filterTableNewAdded'].length] = {\n          'oldTable': selectedRecord['filterTableOld'],\n          'oldTableColumn': selectedRecord['filterTableOldColumn'],\n          'newTable': selectedRecord['filterTableNew'],\n          'newTableColumn': selectedRecord['filterTableNewColumn'],\n          'index': selectedRecord['filterTableNewAdded'][selectedRecord['filterTableNewAdded'].length]\n        };\n        selectedRecord['filterTableJoin'] = selectedRecord['filterTableNewAdded'][selectedRecord['filterTableNewAdded'].length - 1];\n      }\n\n      selectedRecord[columnName] = value;\n      selectedRecord['filterTableOld'] = {};\n      selectedRecord['filterTableOldColumn'] = {};\n      selectedRecord['filterTableNew'] = {};\n      selectedRecord['filterTableNewColumn'] = {};\n      this.setState({\n        selectedRecord,\n        listOldTableColumn: [],\n        listNewTableColumn: []\n      });\n    };\n\n    this.executeClick = e => {\n      const selectedRecord = this.state.selectedRecord;\n\n      if (this.state.filterType === 1) {\n        if (this.checkFilter(selectedRecord['filterNew'])) {\n          if (this.state.filterEdit) {\n            selectedRecord['filter'] = selectedRecord['filter'] || [];\n\n            if (selectedRecord['filterNew'][0].filterTable.item.summarize) {\n              selectedRecord['filterSummarize'] = selectedRecord['filterNew'];\n              selectedRecord['filterSummarizeJoinCondition'] = selectedRecord['filterSummarizeJoinCondition'] || {};\n              selectedRecord['filterSummarizeJoinCondition'] = selectedRecord['filterNewCondition'] || {};\n            } else {\n              selectedRecord['filter'][this.state.parentIndex] = selectedRecord['filterNew'];\n              selectedRecord['filterJoinCondition'] = selectedRecord['filterJoinCondition'] || [];\n              selectedRecord['filterJoinCondition'][this.state.parentIndex] = selectedRecord['filterNewCondition'] || {};\n            }\n\n            selectedRecord['filterNew'] = [];\n            selectedRecord['filterNewCondition'] = {};\n          } else {\n            selectedRecord['filter'] = selectedRecord['filter'] || [];\n            selectedRecord['filterSummarize'] = selectedRecord['filterSummarize'] || [];\n\n            if (selectedRecord['filterNew'][0].filterTable.item.summarize) {\n              selectedRecord['filterSummarize'] = selectedRecord['filterNew'];\n              selectedRecord['filterSummarizeJoinCondition'] = selectedRecord['filterSummarizeJoinCondition'] || {};\n              selectedRecord['filterSummarizeJoinCondition'] = selectedRecord['filterNewCondition'] || {};\n            } else {\n              selectedRecord['filter'][selectedRecord['filter'].length] = selectedRecord['filterNew'];\n              selectedRecord['filterJoinCondition'] = selectedRecord['filterJoinCondition'] || [];\n              selectedRecord['filterJoinCondition'][selectedRecord['filterJoinCondition'].length] = selectedRecord['filterNewCondition'] || {};\n            }\n\n            selectedRecord['filterNew'] = [];\n            selectedRecord['filterNewCondition'] = {};\n          }\n\n          this.setState({\n            selectedRecord,\n            showFilter: false,\n            filterEdit: false\n          });\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_PLEASEFILLTHEVALUE\"\n          }));\n        }\n      } else if (this.state.filterType === 2) {\n        if (this.checkJoin(selectedRecord['filterTableNewAdded'])) {\n          if (this.joinTableCheck(selectedRecord)) {\n            // let avaliableColumns = this.state.avaliableColumns || []\n            // let avaliableColumnsForMultiSelect = this.state.avaliableColumnsForMultiSelect || []\n            // let constructData1 = this.state.listColumnForMultiSelect.filter(item => item.value === selectedRecord['filterTableNewAdded'][0].filterTableNew.value);\n            // constructData1.map((item, index) => {\n            //     avaliableColumnsForMultiSelect.push({\n            //         label: item.label, value: avaliableColumnsForMultiSelect.length, item: { ...item.item, parentTableIndex: 0 }\n            //         , options: item.options.map((i, index1) => {\n            //             return { label: i.label, value: index1, item: { ...i.item, parentTableIndex: selectedRecord['stablename'].length } }\n            //         })\n            //     })\n            // })\n            // if (selectedRecord['stablename'].findIndex(x => x.value === selectedRecord['filterTableJoin'].newTable.value) === -1) {\n            // this.props.tableList.filter(p => p.stable === selectedRecord['filterTableNewAdded'][0].filterTableNew.value).map((item, index) => {\n            //     avaliableColumns.push({ label: item.scolumndisplayname, value: avaliableColumns.length, item: { ...item, parentTableIndex: selectedRecord['stablename'].length } });\n            // })\n            // const newTable = selectedRecord['filterTableJoin'].newTable;\n            // newTable.value = selectedRecord['stablename'].length\n            //selectedRecord['stablename'][selectedRecord['stablename'].length] = { ...selectedRecord['filterTableNewAdded'][0].filterTableNew, value: selectedRecord['stablename'].length }\n            //selectedRecord['stablename'].push(newTable) \n            //}\n            // let newList = selectedRecord['filterTableNewAdded'].map((item, index) => {\n            //     return {\n            //         newTable: item.filterTableNew,\n            //         oldTable: item.filterTableOld,\n            //         newTableColumn: item.filterTableNewColumn,\n            //         oldTableColumn: item.filterTableOldColumn,\n            //     }\n            // })\n            // const newTable =\n            //     selectedRecord['TableJoin'] = selectedRecord['TableJoin'] || [];\n            // selectedRecord['TableJoin'][selectedRecord['TableJoin'].length] = {\n            //     'Table': newList,\n            //     'TableJoining': selectedRecord[\"filterNewTableCondition\"]\n            // };\n            // selectedRecord['filterTableJoin'] = {}\n            // selectedRecord['filterTableNewAdded'] = []\n            // selectedRecord['filterTableNewAddButton'] = false\n            // this.filterQueryFormation(selectedRecord, avaliableColumns);\n            // this.setState({ selectedRecord, showFilter: false,\n            //      avaliableColumns, avaliableColumnsForMultiSelect ,filterType:8});\n            this.setState({\n              selectedRecord,\n              filterType: 8\n            });\n          } else {\n            toast.warn('Joining Table In All Condition Must Be Same Table');\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_PLEASEFILLTHEVALUE\"\n          }));\n        }\n      } else if (this.state.filterType === 3) {\n        if (this.checkssg(selectedRecord['sortNew'], 1)) {\n          selectedRecord['sort'] = selectedRecord['sort'] || [];\n          selectedRecord['sort'] = selectedRecord['sortNew'];\n          selectedRecord['sortNew'] = []; //  this.filterQueryFormation(selectedRecord, this.state.avaliableColumns);\n\n          this.setState({\n            selectedRecord,\n            showFilter: false\n          });\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_PLEASEFILLTHEVALUE\"\n          }));\n        }\n      } else if (this.state.filterType === 4) {\n        if (this.checkssg(selectedRecord['summarizeNew'], 2)) {\n          selectedRecord['summarize'] = selectedRecord['summarize'] || [];\n          selectedRecord['summarize'] = selectedRecord['summarizeNew'];\n          selectedRecord['summarizeNew'] = []; //  this.filterQueryFormation(selectedRecord, this.state.avaliableColumns);\n\n          this.setState({\n            selectedRecord,\n            showFilter: false\n          });\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_PLEASEFILLTHEVALUE\"\n          }));\n        }\n      } else if (this.state.filterType === 5) {\n        if (this.checkssg(selectedRecord['groupNew'], 3)) {\n          selectedRecord['group'] = selectedRecord['group'] || [];\n          selectedRecord['group'] = selectedRecord['groupNew'];\n          selectedRecord['groupNew'] = []; // this.filterQueryFormation(selectedRecord, this.state.avaliableColumns);\n\n          this.setState({\n            selectedRecord,\n            showFilter: false,\n            filterTitle: \"Add AliasName\"\n          });\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_PLEASEFILLTHEVALUE\"\n          }));\n        }\n      } else if (this.state.filterType === 6) {\n        if (selectedRecord['LimitNew']) {\n          selectedRecord['Limit'] = selectedRecord['LimitNew']; //  this.filterQueryFormation(selectedRecord, this.state.avaliableColumns);\n\n          this.setState({\n            selectedRecord,\n            showFilter: false\n          });\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_ENTERTHELIMIT\"\n          }));\n        }\n      } else if (this.state.filterType === 8) {\n        if (selectedRecord['joinTableAlias'] && selectedRecord['joinTableAlias'] !== '') {\n          if (this.checkTableName(selectedRecord)) {\n            const aliasTableName = selectedRecord['joinTableAlias']; // this.updateOldAliasToNewAlis(selectedRecord, selectedRecord['joinTableAlias'])\n\n            const val = [];\n            const filterTableNewAdded = [...selectedRecord['filterTableNewAdded']];\n            filterTableNewAdded.map(item4 => {\n              const data = { ...item4,\n                filterTableNew: { ...item4.filterTableNew,\n                  label: aliasTableName,\n                  item: { ...item4.filterTableNew.item,\n                    stabledisplayname: aliasTableName\n                  }\n                },\n                filterTableNewColumn: { ...item4.filterTableNewColumn,\n                  item: { ...item4.filterTableNewColumn.item,\n                    stabledisplayname: aliasTableName\n                  }\n                }\n              }; // data.filterTableNew['label'] = selectedRecord['joinTableAlias']\n              // data.filterTableNew['item']['stabledisplayname'] = selectedRecord['joinTableAlias']\n              // data.filterTableNewColumn['item']['stabledisplayname'] = selectedRecord['joinTableAlias']\n\n              val.push({ ...data\n              });\n            });\n            const avaliableColumns = this.state.avaliableColumns || [];\n            const data1 = this.props.tableList.filter(p => p.stable === val[0].filterTableNew.value);\n            const selectedColumn = [...selectedRecord['scolumnname']];\n            data1 && data1.map((item, index) => {\n              const data = {\n                label: item.scolumndisplayname,\n                value: avaliableColumns.length,\n                item: { ...item,\n                  stabledisplayname: aliasTableName,\n                  parentTableIndex: selectedRecord['stablename'].length\n                }\n              };\n              avaliableColumns.push(data);\n              selectedColumn.push(data);\n            });\n            selectedRecord['scolumnname'] = [...selectedColumn];\n            const stablenameList = [...selectedRecord['stablename']];\n            stablenameList.push({ ...val[0].filterTableNew,\n              value: stablenameList.length\n            });\n            selectedRecord['stablename'] = stablenameList;\n            const newList = val.map((item, index) => {\n              return {\n                newTable: { ...item.filterTableNew\n                },\n                oldTable: { ...item.filterTableOld\n                },\n                newTableColumn: { ...item.filterTableNewColumn\n                },\n                oldTableColumn: { ...item.filterTableOldColumn\n                }\n              };\n            });\n            const TableJoin = selectedRecord['TableJoin'] || [];\n            TableJoin.push({\n              'Table': newList,\n              'TableJoining': { ...selectedRecord[\"filterNewTableCondition\"]\n              }\n            });\n            selectedRecord['TableJoin'] = TableJoin;\n            selectedRecord['filterTableJoin'] = {};\n            selectedRecord['filterTableNewAdded'] = [];\n            selectedRecord['filterTableNewAddButton'] = false;\n            selectedRecord['joinTableAlias'] = undefined; // this.filterQueryFormation(selectedRecord, avaliableColumns);\n\n            this.setState({\n              selectedRecord,\n              showFilter: false,\n              avaliableColumns\n            });\n          } else {\n            toast.warn(this.props.intl.formatMessage({\n              id: \"IDS_ALIASNAMEALREADYEXISTS\"\n            }));\n          }\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_ENTERTHEALIASNAME\"\n          }));\n        }\n      }\n    };\n\n    this.onInputJoinSelect = (e, index) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord['filterTableJoin'] = selectedRecord['filterTableNewAdded'][index];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.modalDesign = () => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      switch (this.state.filterType) {\n        case 1:\n          return /*#__PURE__*/React.createElement(\"form\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1020,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"section\", {\n            className: 'modal-card-body',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1021,\n              columnNumber: 25\n            }\n          }, selectedRecord['filterNew'] && selectedRecord['filterNew'].map((item, index) => {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: 'field has-addons filterheight',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1023,\n                columnNumber: 40\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded \",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1024,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1025,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              isSearchable: true,\n              name: \"tableName\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              showOption: true,\n              options: this.state.summarizeLoadOnly ? [{\n                label: \"summarization\",\n                value: selectedRecord['stablename'].length,\n                item: {\n                  summarize: \"true\"\n                }\n              }] : this.state.summarizeLoad ? [...selectedRecord['stablename'], {\n                label: \"summarization\",\n                value: selectedRecord['stablename'].length,\n                item: {\n                  summarize: \"true\"\n                }\n              }] : selectedRecord['stablename'],\n              value: item[\"filterTable\"] && item[\"filterTable\"] || \"\",\n              onChange: value => this.onfilterChange(value, \"filterTable\", 'table', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1026,\n                columnNumber: 45\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1051,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1052,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              isSearchable: true,\n              name: \"filterColumn\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              showOption: true,\n              options: item[\"filterTable\"] && item[\"filterTable\"].item ? item[\"filterTable\"].item.summarize ? this.state.summarizeCombo : this.state.avaliableColumns.filter(x => x.item.parentTableIndex === item[\"filterTable\"].value) : [],\n              value: item[\"filterColumn\"] && item[\"filterColumn\"] || \"\",\n              onChange: value => this.onfilterChange(value, \"filterColumn\", 'column', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1053,\n                columnNumber: 45\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1068,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1069,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_CONDITION\"\n              }),\n              isSearchable: true,\n              name: \"sviewname\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_CONDITION\"\n              }),\n              showOption: true,\n              options: item[\"filterColumn\"] && item[\"filterColumn\"].item ? item[\"filterColumn\"].item.summarize ? summarizeOperatorData : item[\"filterColumn\"].item.columndatatype === 'string' ? stringOperatorData : item[\"filterColumn\"].item.columndatatype === 'numeric' ? numericOperatorData : item[\"filterColumn\"].item.columndatatype === 'date' ? dateConditionData : stringOperatorData : \"\",\n              value: item[\"filterCondition\"] !== undefined ? item[\"filterCondition\"] : \"\",\n              onChange: value => this.onfilterChange(value, \"filterCondition\", 'condition', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1070,\n                columnNumber: 45\n              }\n            }))), item[\"filterCondition\"] && item[\"filterCondition\"].value ? item[\"filterCondition\"].value === 'IN' || item[\"filterCondition\"].value === '=' || item[\"filterCondition\"].value === '!=' || item[\"filterCondition\"].value === '<' || item[\"filterCondition\"].value === '>' || item[\"filterCondition\"].value === '>=' || item[\"filterCondition\"].value === '<=' || item.filterColumn.item.columndatatype === 'date' && item[\"filterCondition\"].value === 'NOT' ? /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1104,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1105,\n                columnNumber: 49\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_PARAMETERTYPE\"\n              }),\n              isSearchable: true,\n              name: \"sviewname\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_PARAMETERTYPE\"\n              }),\n              showOption: true,\n              options: [{\n                label: 'Pre-Defined Values',\n                value: 2\n              }, {\n                label: 'Runtime Parameter',\n                value: 1\n              }],\n              value: item[\"filterValueType\"] !== undefined ? item[\"filterValueType\"] : \"\",\n              onChange: value => this.onfilterChange(value, \"filterValueType\", 'valueType', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1106,\n                columnNumber: 53\n              }\n            }))) : \"\" : \"\", /*#__PURE__*/React.createElement(\"div\", {\n              className: \"control \",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1124,\n                columnNumber: 37\n              }\n            }, item[\"filterCondition\"] && item[\"filterCondition\"].value && item[\"filterColumn\"] ? item[\"filterValueType\"] && item[\"filterValueType\"].value && item[\"filterValueType\"].value === 2 ? item[\"filterColumn\"].item.summarize ? /*#__PURE__*/React.createElement(FormNumericInput, {\n              name: \"filterValue\",\n              label: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              type: \"number\",\n              value: item[\"filterValue\"],\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              strict: true // min={0}\n              //max={99999999.99}\n              ,\n              maxLength: 10,\n              onChange: value => this.onFilterNumericInputChange(value, \"filterValue\", index),\n              noStyle: true //precision={2}\n              //isMandatory={true}\n              ,\n              className: \"form-control\",\n              errors: \"Please provide a valid number.\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1130,\n                columnNumber: 53\n              }\n            }) : item[\"filterColumn\"].item.columndatatype === 'string' ? item[\"filterCondition\"].value !== 'IS NULL' && item[\"filterCondition\"].value !== 'IS NOT NULL' && item[\"filterCondition\"].value !== 'PRESENT' && item[\"filterCondition\"].value !== 'BLANK' ? /*#__PURE__*/React.createElement(FormInput, {\n              label: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              name: \"filterValue\",\n              type: \"text\",\n              onChange: event => this.onFilterInputOnChange(event, index),\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              value: item[\"filterValue\"] ? item[\"filterValue\"] : \"\",\n              isMandatory: true,\n              required: true,\n              maxLength: 100,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1153,\n                columnNumber: 61\n              }\n            }) : \"\" : item[\"filterColumn\"].item.columndatatype === 'numeric' ? item[\"filterCondition\"].value !== 'NULL' && item[\"filterCondition\"].value !== 'NOT NULL' ? item[\"filterCondition\"].value === 'IN' ? /*#__PURE__*/React.createElement(FormInput, {\n              label: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              name: \"filterValue\",\n              type: \"text\",\n              onChange: event => this.onFilterInputOnChange(event, index),\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              value: item[\"filterValue\"] ? item[\"filterValue\"] : \"\",\n              isMandatory: true,\n              required: true,\n              maxLength: 100,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1169,\n                columnNumber: 69\n              }\n            }) : /*#__PURE__*/React.createElement(FormNumericInput, {\n              name: \"filterValue\",\n              label: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              type: \"number\",\n              value: item[\"filterValue\"],\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              strict: true //min={0}\n              //max={99999999.99}\n              ,\n              maxLength: 10,\n              onChange: value => this.onFilterNumericInputChange(value, \"filterValue\", index),\n              noStyle: true //precision={2}\n              //isMandatory={true}\n              ,\n              className: \"form-control\",\n              errors: \"Please provide a valid number.\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1181,\n                columnNumber: 69\n              }\n            }) : \"\" : item[\"filterColumn\"].item.columndatatype === 'date' ? item[\"filterCondition\"].value === '=' || item[\"filterCondition\"].value === '<' || item[\"filterCondition\"].value === '>' || item[\"filterCondition\"].value === 'NOT' ? /*#__PURE__*/React.createElement(DateTimePicker, {\n              name: \"filterValue\",\n              label: this.props.intl.formatMessage({\n                id: \"IDS_VALUE\"\n              }),\n              className: \"form-control\",\n              placeholderText: this.props.intl.formatMessage({\n                id: \"IDS_SELECTDATE\"\n              }),\n              selected: item[\"filterValue\"] ? item[\"filterValue\"] : new Date(),\n              dateFormat: this.props.Login.userInfo[\"ssitedatetime\"],\n              timeInputLabel: this.props.intl.formatMessage({\n                id: \"IDS_TIME\"\n              }),\n              showTimeInput: true,\n              onChange: date => this.handleDateChange(\"filterValue\", date, index),\n              value: item[\"filterValue\"] ? item[\"filterValue\"] : \"\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1206,\n                columnNumber: 69\n              }\n            }) : \"\" : \"\" : \"\" : \"\"), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"control\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 37\n              }\n            }, selectedRecord['filterNew'].length > 1 && /*#__PURE__*/React.createElement(Button, {\n              className: \"button is-light is-danger\",\n              onClick: () => this.onFilterModalDelete(index),\n              type: \"button\",\n              tabindex: \"0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1227,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"icon\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1230,\n                columnNumber: 49\n              }\n            }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n              icon: faMinus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1231,\n                columnNumber: 53\n              }\n            })))));\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: 'buttons is-right',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1238,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: 'button is-light is-info is-small',\n            onClick: e => this.onMoreClick(e, this.state.filterType),\n            type: \"button\",\n            tabindex: \"0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1239,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1242,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faPlus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1243,\n              columnNumber: 41\n            }\n          })), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1245,\n              columnNumber: 37\n            }\n          }, this.props.intl.formatMessage({\n            id: \"IDS_ADDMORE\"\n          })))), selectedRecord['filterNew'].length > 1 || selectedRecord['filter'] && selectedRecord['filter'].length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n            className: 'field has-text-centered',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1249,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Row, {\n            style: {\n              \"justify-content\": \"space-around\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1251,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 4,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1252,\n              columnNumber: 41\n            }\n          }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n            formGroupClassName: \"remove-floating-label-margin\",\n            formLabel: this.props.intl.formatMessage({\n              id: \"IDS_JOINCONDITION\"\n            }),\n            isSearchable: true,\n            name: \"tableName\",\n            placeholder: this.props.intl.formatMessage({\n              id: \"IDS_JOINCONDITION\"\n            }),\n            showOption: true,\n            options: joinCondition,\n            value: selectedRecord[\"filterNewCondition\"] && selectedRecord[\"filterNewCondition\"] || \"\",\n            onChange: value => this.onfilterChange(value, \"filterNewCondition\", 'joinCondition'),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1253,\n              columnNumber: 45\n            }\n          })))) : \"\"));\n          break;\n\n        case 2:\n          return /*#__PURE__*/React.createElement(\"form\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1277,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"section\", {\n            className: 'modal-card-body',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1278,\n              columnNumber: 25\n            }\n          }, selectedRecord['filterTableNewAdded'] && selectedRecord['filterTableNewAdded'].map((item, index) => {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: 'field has-addons my-6',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1281,\n                columnNumber: 44\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1282,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1283,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              isSearchable: true,\n              name: \"tableName\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              showOption: true,\n              options: index === 0 ? selectedRecord['stablename'] && selectedRecord['stablename'] : [{ ...selectedRecord['filterTableNewAdded'][0][\"filterTableOld\"]\n              }],\n              value: item[\"filterTableOld\"] && item[\"filterTableOld\"] || \"\",\n              onChange: value => this.onJoinChange(value, \"filterTableOld\", 'oldtable', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1284,\n                columnNumber: 49\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1298,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1299,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              isSearchable: true,\n              name: \"filterColumn\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              showOption: true,\n              options: this.state.listOldTableColumn || [],\n              value: item[\"filterTableOldColumn\"] && item[\"filterTableOldColumn\"] || \"\",\n              onChange: value => this.onJoinChange(value, \"filterTableOldColumn\", 'oldcolumn', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1300,\n                columnNumber: 49\n              }\n            }))), /*#__PURE__*/React.createElement(\"strong\", {\n              className: 'mx-3 is-flex is-align-items-center',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1313,\n                columnNumber: 41\n              }\n            }, \"&\"), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1316,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1317,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_JOINSTABLE\"\n              }),\n              isSearchable: true,\n              name: \"filterColumn\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_JOINSTABLE\"\n              }),\n              showOption: true,\n              options: index === 0 ? this.state.listTables || [] : [{ ...selectedRecord['filterTableNewAdded'][0][\"filterTableNew\"]\n              }],\n              value: item[\"filterTableNew\"] && item[\"filterTableNew\"] || \"\",\n              onChange: value => this.onJoinChange(value, \"filterTableNew\", 'newtable', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1318,\n                columnNumber: 49\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1331,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1332,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_JOINTABLEFIELDS\"\n              }),\n              isSearchable: true,\n              name: \"filterColumn\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_JOINTABLEFIELDS\"\n              }),\n              showOption: true,\n              options: this.state.listNewTableColumn || [],\n              value: item[\"filterTableNewColumn\"] && item[\"filterTableNewColumn\"] || \"\",\n              onChange: value => this.onJoinChange(value, \"filterTableNewColumn\", 'newcolumn', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1333,\n                columnNumber: 49\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              className: \"control\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1346,\n                columnNumber: 41\n              }\n            }, selectedRecord['filterTableNewAdded'].length > 1 && /*#__PURE__*/React.createElement(Button, {\n              className: \"button is-light is-danger\",\n              onClick: e => this.onJoinChildDelete(e, index),\n              type: \"button\",\n              tabindex: \"0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1348,\n                columnNumber: 49\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"icon\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1351,\n                columnNumber: 53\n              }\n            }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n              icon: faMinus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1352,\n                columnNumber: 57\n              }\n            })))));\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: 'buttons is-right',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1360,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: 'button is-light is-info is-small',\n            onClick: e => this.onMoreClick(e, this.state.filterType),\n            type: \"button\",\n            tabindex: \"0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1361,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1364,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faPlus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1365,\n              columnNumber: 41\n            }\n          })), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1367,\n              columnNumber: 37\n            }\n          }, this.props.intl.formatMessage({\n            id: \"IDS_ADDMORE\"\n          })))), /*#__PURE__*/React.createElement(\"div\", {\n            className: 'field has-text-centered',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1370,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(Row, {\n            style: {\n              \"justify-content\": \"space-around\"\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1371,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 4,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1372,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n            formGroupClassName: \"remove-floating-label-margin\" // formLabel={this.props.intl.formatMessage({ id: \"IDS_JOINCONDITION\" })}\n            ,\n            isSearchable: true,\n            name: \"tableName\",\n            placeholder: this.props.intl.formatMessage({\n              id: \"IDS_JOINCONDITION\"\n            }),\n            showOption: true,\n            options: joinConditionData,\n            value: selectedRecord[\"filterNewTableCondition\"] && selectedRecord[\"filterNewTableCondition\"] || \"\",\n            onChange: value => this.onJoinChange(value, \"filterNewTableCondition\", 'joinTableCondition'),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1373,\n              columnNumber: 41\n            }\n          }))))));\n          break;\n\n        case 3:\n          return /*#__PURE__*/React.createElement(\"form\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1395,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(\"section\", {\n            className: 'modal-card-body',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1396,\n              columnNumber: 25\n            }\n          }, selectedRecord['sortNew'] && selectedRecord['sortNew'].map((item, index) => {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: 'field has-addons',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1399,\n                columnNumber: 40\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1400,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1401,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              isSearchable: true,\n              name: \"tableName\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              showOption: true,\n              options: selectedRecord['stablename'] && selectedRecord['stablename'] // options={constructOptionList(this.state.selectedRecord['stablename']\n              //     && this.state.selectedRecord['stablename'], 'tableName', 'stabledisplayname').get(\"OptionList\") || []}\n              ,\n              value: item[\"sortTable\"] && item[\"sortTable\"] || \"\",\n              onChange: value => this.onSortChange(value, \"sortTable\", 'table', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1402,\n                columnNumber: 45\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1417,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1418,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              isSearchable: true,\n              name: \"sortColumn\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              showOption: true,\n              options: item[\"sortTable\"] && this.state.avaliableColumns.filter(x => x.item.parentTableIndex === item[\"sortTable\"].value) || [],\n              value: item[\"sortColumn\"] !== undefined ? item[\"sortColumn\"] : \"\",\n              onChange: value => this.onSortChange(value, \"sortColumn\", 'column', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1419,\n                columnNumber: 45\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1434,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1435,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_CONDITION\"\n              }),\n              isSearchable: true,\n              name: \"sortCondition\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_CONDITION\"\n              }),\n              showOption: true,\n              options: orderByList,\n              value: item[\"sortCondition\"] !== undefined ? item[\"sortCondition\"] : \"\",\n              onChange: value => this.onSortChange(value, \"sortCondition\", 'condition', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1436,\n                columnNumber: 45\n              }\n            }))), selectedRecord['sortNew'].length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n              className: \"control\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1450,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: \"button is-light is-danger\",\n              onClick: e => this.onSortModalDelete(e, index),\n              type: \"button\",\n              tabindex: \"0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1451,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"icon\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1452,\n                columnNumber: 49\n              }\n            }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n              icon: faMinus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1455,\n                columnNumber: 53\n              }\n            })))));\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: 'buttons is-right',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1463,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            className: 'button is-light is-info is-small',\n            onClick: e => this.onMoreClick(e, this.state.filterType),\n            type: \"button\",\n            tabindex: \"0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1464,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1466,\n              columnNumber: 37\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faPlus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1467,\n              columnNumber: 41\n            }\n          })), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1469,\n              columnNumber: 37\n            }\n          }, this.props.intl.formatMessage({\n            id: \"IDS_ADDMORE\"\n          }))))));\n          break;\n\n        case 4:\n          return /*#__PURE__*/React.createElement(\"form\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1477,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"section\", {\n            className: 'modal-card-body',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1478,\n              columnNumber: 21\n            }\n          }, selectedRecord['summarizeNew'] && selectedRecord['summarizeNew'].map((item, index) => {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: 'field has-addons',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1481,\n                columnNumber: 36\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1482,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1483,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              isSearchable: true,\n              name: \"tableName\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              showOption: true,\n              options: selectedRecord['stablename'] && selectedRecord['stablename'] // options={constructOptionList(this.state.selectedRecord['stablename']\n              //     && this.state.selectedRecord['stablename'], 'tableName', 'stabledisplayname').get(\"OptionList\") || []}\n              ,\n              value: item[\"summarizeTable\"] && item[\"summarizeTable\"] || \"\",\n              onChange: value => this.onSummarizeChange(value, \"summarizeTable\", 'table', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1484,\n                columnNumber: 41\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1499,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1500,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              isSearchable: true,\n              name: \"summarizeColumn\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              showOption: true,\n              options: item[\"summarizeTable\"] && this.state.avaliableColumns.filter(x => x.item.parentTableIndex === item[\"summarizeTable\"].value) || [],\n              value: item[\"summarizeColumn\"] !== undefined ? item[\"summarizeColumn\"] : \"\",\n              onChange: value => this.onSummarizeChange(value, \"summarizeColumn\", 'column', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1501,\n                columnNumber: 41\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1516,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1517,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_CONDITION\"\n              }),\n              isSearchable: true,\n              name: \"summarizeCondition\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_CONDITION\"\n              }),\n              showOption: true,\n              options: aggregateFunction,\n              value: item[\"summarizeCondition\"] !== undefined ? item[\"summarizeCondition\"] : \"\",\n              onChange: value => this.onSummarizeChange(value, \"summarizeCondition\", 'condition', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1518,\n                columnNumber: 41\n              }\n            }))), selectedRecord['summarizeNew'].length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n              className: \"control\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1532,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: \"button is-light is-danger\",\n              onClick: e => this.onSummarizeModalDelete(e, index),\n              type: \"button\",\n              tabindex: \"0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1533,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"icon\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1534,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n              icon: faMinus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1537,\n                columnNumber: 49\n              }\n            })))));\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: 'buttons is-right',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1547,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(Button, {\n            className: 'button is-light is-info is-small',\n            onClick: e => this.onMoreClick(e, this.state.filterType),\n            type: \"button\",\n            tabindex: \"0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1548,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1550,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faPlus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1551,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1553,\n              columnNumber: 33\n            }\n          }, this.props.intl.formatMessage({\n            id: \"IDS_ADDMORE\"\n          }))))));\n          break;\n\n        case 5:\n          return /*#__PURE__*/React.createElement(\"form\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1561,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"section\", {\n            className: 'modal-card-body',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1562,\n              columnNumber: 21\n            }\n          }, selectedRecord['groupNew'] && selectedRecord['groupNew'].map((item, index) => {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: 'field has-addons',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1565,\n                columnNumber: 36\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1566,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1567,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              isSearchable: true,\n              name: \"tableName\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_TABLES\"\n              }),\n              showOption: true,\n              options: selectedRecord['stablename'] && selectedRecord['stablename'] // options={constructOptionList(this.state.selectedRecord['stablename']\n              //     && this.state.selectedRecord['stablename'], 'tableName', 'stabledisplayname').get(\"OptionList\") || []}\n              ,\n              value: item[\"groupTable\"] && item[\"groupTable\"] || \"\",\n              onChange: value => this.onGroupChange(value, \"groupTable\", 'table', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1568,\n                columnNumber: 41\n              }\n            }))), /*#__PURE__*/React.createElement(\"div\", {\n              class: \"control is-expanded\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1583,\n                columnNumber: 33\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              class: \"select is-fullwidth\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1584,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n              formGroupClassName: \"remove-floating-label-margin\",\n              formLabel: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              isSearchable: true,\n              name: \"groupColumn\",\n              placeholder: this.props.intl.formatMessage({\n                id: \"IDS_FIELDS\"\n              }),\n              showOption: true,\n              options: item[\"groupTable\"] && this.state.avaliableColumns.filter(x => x.item.parentTableIndex === item[\"groupTable\"].value) || [],\n              value: item[\"groupColumn\"] !== undefined ? item[\"groupColumn\"] : \"\",\n              onChange: value => this.onGroupChange(value, \"groupColumn\", 'column', index),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1585,\n                columnNumber: 41\n              }\n            }))), selectedRecord['groupNew'].length > 1 && /*#__PURE__*/React.createElement(\"div\", {\n              className: \"control\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1601,\n                columnNumber: 37\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: \"button is-light is-danger\",\n              onClick: e => this.onGroupModalDelete(e, index),\n              type: \"button\",\n              tabindex: \"0\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1602,\n                columnNumber: 41\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: \"icon\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1603,\n                columnNumber: 45\n              }\n            }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n              icon: faMinus,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 1604,\n                columnNumber: 49\n              }\n            })))));\n          }), /*#__PURE__*/React.createElement(\"div\", {\n            className: 'buttons is-right',\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1614,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(\"button\", {\n            className: 'button is-light is-info is-small',\n            onClick: e => this.onMoreClick(e, this.state.filterType),\n            type: \"button\",\n            tabindex: \"0\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1615,\n              columnNumber: 29\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            className: \"icon\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1617,\n              columnNumber: 33\n            }\n          }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n            icon: faPlus,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1618,\n              columnNumber: 37\n            }\n          })), /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1620,\n              columnNumber: 33\n            }\n          }, this.props.intl.formatMessage({\n            id: \"IDS_ADDMORE\"\n          }))))));\n          break;\n\n        case 6:\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1628,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 3,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1629,\n              columnNumber: 21\n            }\n          }, \"Enter the Limit\"), /*#__PURE__*/React.createElement(Col, {\n            md: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1632,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(FormNumericInput, {\n            name: \"LimitNew\",\n            label: this.props.intl.formatMessage({\n              id: \"IDS_LIMIT\"\n            }),\n            type: \"number\",\n            value: selectedRecord[\"LimitNew\"] && selectedRecord[\"LimitNew\"],\n            placeholder: this.props.intl.formatMessage({\n              id: \"IDS_LIMIT\"\n            }),\n            strict: true,\n            min: 0,\n            maxLength: 10,\n            onChange: value => this.onNumericLimitChange(value, \"LimitNew\"),\n            noStyle: true //precision={2}\n            ,\n            isMandatory: true,\n            className: \"form-control\",\n            errors: \"Please provide a valid number.\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1633,\n              columnNumber: 25\n            }\n          })));\n          break;\n\n        case 8:\n          return /*#__PURE__*/React.createElement(Row, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1653,\n              columnNumber: 24\n            }\n          }, /*#__PURE__*/React.createElement(Col, {\n            md: 3,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1654,\n              columnNumber: 21\n            }\n          }, \"Alias Name For \\\"\" + selectedRecord['filterTableNewAdded'][0].filterTableNew.label + \"\\\"\"), /*#__PURE__*/React.createElement(Col, {\n            md: 6,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1669,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(FormInput, {\n            label: this.props.intl.formatMessage({\n              id: \"IDS_VALUE\"\n            }),\n            name: \"joinTableAlias\",\n            type: \"text\",\n            onChange: event => this.onjoinAliasName(event),\n            placeholder: this.props.intl.formatMessage({\n              id: \"IDS_VALUE\"\n            }),\n            value: selectedRecord[\"joinTableAlias\"] ? selectedRecord[\"joinTableAlias\"] : \"\",\n            isMandatory: true,\n            required: true,\n            maxLength: 100,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 1670,\n              columnNumber: 25\n            }\n          })));\n      }\n    };\n\n    this.filterQueryFormation = (selectedRecord, avaliableColumns) => {\n      let str = \"\";\n      str = \"SELECT \\n\";\n\n      if (selectedRecord.summarize && selectedRecord.summarize.length > 0 || selectedRecord.group && selectedRecord.group.length > 0) {\n        if (selectedRecord.group && selectedRecord.group.length > 0) {\n          selectedRecord.group.map((item, index) => {\n            if (selectedRecord.group.length - 1 !== index) {\n              str = str + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" + \"\\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\",\" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\",\" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\",\\n\");\n            } else {\n              str = str + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" + \"\\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\"); //  str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\"\n            }\n          });\n        }\n\n        if (selectedRecord.summarize && selectedRecord.summarize.length > 0) {\n          if (selectedRecord.group && selectedRecord.group.length > 0) str = str + ',\\n';\n          selectedRecord.summarize.map((item, index) => {\n            if (selectedRecord.summarize.length - 1 !== index) {\n              if (item.summarizeCondition.value === \"COUNT\") {\n                str = str + item.summarizeCondition.value + \"( \" + (item.summarizeColumn.item.isjsoncolumn ? item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\",\\n\";\n              } else if (item.summarizeCondition.value === \"DISTINCT\") {\n                str = str + \" COUNT( \" + item.summarizeCondition.value + \" \" + (item.summarizeColumn.item.isjsoncolumn ? item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\",\\n\";\n              }\n            } else {\n              if (item.summarizeCondition.value === \"COUNT\") {\n                str = str + item.summarizeCondition.value + \"( \" + (item.summarizeColumn.item.isjsoncolumn ? item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\"\";\n              } else if (item.summarizeCondition.value === \"DISTINCT\") {\n                str = str + \" COUNT( \" + item.summarizeCondition.value + \" \" + (item.summarizeColumn.item.isjsoncolumn ? item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\"\";\n              }\n            }\n          });\n        }\n      } else {\n        // if (selectedRecord.scolumnname.length !== avaliableColumns.length) {\n        selectedRecord.scolumnname.map((item, index) => {\n          if (selectedRecord.scolumnname.length - 1 !== index) {\n            str = str + (item.item.isjsoncolumn ? item.item.ismultilingual ? \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->'\" + item.item.scolumn + \"'->><@\" + item.item.parametername + \"@> \" + \"\\\"\" + item.label + \"\\\",\" : \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->>'\" + item.item.scolumn + \"' \\\"\" + item.label + \"\\\",\" : \" \\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\",\\n\");\n          } else {\n            str = str + (item.item.isjsoncolumn ? item.item.ismultilingual ? \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->'\" + item.item.scolumn + \"'->><@\" + item.item.parametername + \"@> \" + \"\\\"\" + item.label + \"\\\"\" : \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->>'\" + item.item.scolumn + \"' \\\"\" + item.label + \"\\\"\" : \" \\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\"\");\n          }\n        }); // } else {\n        //     str = str + \" * \";\n        // }\n      }\n\n      str = str + \"\\nFROM\\n\";\n\n      if (selectedRecord['stablename'].length === 1) {\n        selectedRecord['stablename'].map(item => {\n          str = str + \" \" + item.item.tableName + \" \\\"\" + item.label + \"\\\"\\n\";\n        });\n      } else {\n        selectedRecord['TableJoin'].map((item, index) => {\n          if (index === 0) {\n            str = str + selectedRecord['stablename'][index].item.tableName + \" \\\"\" + selectedRecord['stablename'][index].label + \"\\\"\\n \" + item.TableJoining.value + \" \";\n            item.Table.map((item1, index1) => {\n              if (index1 === 0) {\n                str = str + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\" ON \" + \"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ? item1.oldTableColumn.item.ismultilingual ? item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \" : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ? item1.newTableColumn.item.ismultilingual ? item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \" : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \\n\";\n              } else {\n                str = str + \" AND \\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ? item1.oldTableColumn.item.ismultilingual ? item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \" : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ? item1.newTableColumn.item.ismultilingual ? item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \" : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \\n\";\n              }\n            });\n          } else {\n            str = str + item.TableJoining.value + \" \";\n            item.Table.map((item1, index1) => {\n              if (index1 === 0) {\n                str = str + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\" ON \" + \"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ? item1.oldTableColumn.item.ismultilingual ? item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \" : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ? item1.newTableColumn.item.ismultilingual ? item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \" : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \\n\";\n              } else {\n                str = str + \" AND \\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ? item1.oldTableColumn.item.ismultilingual ? item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \" : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ? item1.newTableColumn.item.ismultilingual ? item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \" : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \\n\";\n              }\n            });\n          }\n        });\n      }\n\n      if (selectedRecord['filter'] && selectedRecord['filter'].length > 0) str = str + \"\\nWHERE\\n\";\n      selectedRecord['filter'] && selectedRecord['filter'].map((item1, index1) => {\n        str = str + \" (\\n \";\n        item1.map((item, index) => {\n          if (item.filterCondition.value === 'IN') {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \" ('\" + item.filterValue + \"') \";\n          } else if (item.filterCondition.value === 'PRESENT') {\n            str = str + \" NOT \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" ='' \";\n          } else if (item.filterCondition.value === 'BLANK') {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" ='' \";\n          } else if (item.filterCondition.value === 'NULL' || item.filterCondition.value === 'NOT NULL') {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" IS '\" + item.filterCondition.value + \"' \";\n          } else if (item.filterCondition.value === 'IS NULL') {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \"' \";\n          } else if (item.filterCondition.value === 'STARTS WITH') {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '\" + item.filterValue + \"%' collate \\\"default\\\"\";\n          } else if (item.filterCondition.value === 'ENDS WITH') {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '%\" + item.filterValue + \"' collate \\\"default\\\"\";\n          } else if (item.filterCondition.value === 'CONTAINS') {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '\" + item.filterValue + \"%' collate \\\"default\\\"\";\n          } else if (item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === '=' || item.filterCondition.value === '<' || item.filterCondition.value === '>')) {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + (item.filterValueType.value === 1 ? \"<#\" + item.filterColumn.item.scolumn + \"#>\" : \"'\" + convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) + \"' \");\n          } else if (item.filterColumn.item.columndatatype === 'date' && item.filterCondition.value === 'NOT') {\n            str = str + \"(NOT \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \" + (item.filterValueType.value === 1 ? \"<#\" + item.filterColumn.item.scolumn + \"#>)\" : \"'\" + convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) + \"')\");\n          } else if (item.filterColumn.item.columndatatype === 'string' && item.filterCondition.value === 'NOT') {\n            str = str + \"(NOT \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \" + (item.filterValueType.value === 1 ? \"<@\" + item.filterColumn.item.scolumn + \"@>)\" : \"'\" + item.filterValue + \"')\");\n          } else {\n            str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + (item.filterValueType.value === 1 ? (item.filterColumn.item.columndatatype === 'date' ? \"<#\" : \"<@\") + item.filterColumn.item.scolumn + (item.filterColumn.item.columndatatype === 'date' ? \"#>\" : \"@>\") : \"'\" + item.filterValue + \"' \");\n          }\n\n          if (index !== selectedRecord['filter'][index1].length - 1) {\n            str = str + \"\\n   \" + selectedRecord['filterJoinCondition'][index1].value + \" \";\n          }\n        });\n        str = str + \"\\n ) \";\n\n        if (index1 !== selectedRecord['filter'].length - 1) {\n          str = selectedRecord['filterJoinCondition'][index1 + 1] && str + \"\\n\" + selectedRecord['filterJoinCondition'][index1 + 1].value + \"\\n \";\n        }\n      });\n\n      if (selectedRecord.group && selectedRecord.group.length > 0) {\n        str = str + \"\\nGROUP BY\\n\";\n      } else if (selectedRecord.summarize && selectedRecord.summarize.length > 0 && selectedRecord['sort'] && selectedRecord['sort'].length > 0) {\n        str = str + \"\\nGROUP BY\\n\";\n      }\n\n      if ((selectedRecord.summarize && selectedRecord.summarize.length > 0 || selectedRecord.group && selectedRecord.group.length > 0) && selectedRecord['sort'] && selectedRecord['sort'].length > 0) {\n        let sortIndex = [];\n\n        if (selectedRecord.group && selectedRecord.group.length > 0) {\n          selectedRecord['group'] && selectedRecord['group'].map((item, index1) => {\n            if (selectedRecord['sort'].findIndex(x => x.sortTable.label + x.sortColumn.item.scolumn === item.groupTable.label + item.groupColumn.item.scolumn) !== -1) {\n              sortIndex[index1] = selectedRecord['sort'].findIndex(x => x.sortTable.label + x.sortColumn.item.scolumn === item.groupTable.label + item.groupColumn.item.scolumn);\n            }\n\n            if (selectedRecord['group'].length - 1 !== index1) {\n              str = str + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> ,\" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' ,\" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" ,\\n\");\n            } else {\n              str = str + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \");\n            } // if (selectedRecord['group'].length - 1 !== index1) {\n            //     str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn + \",\"\n            // } else {\n            //     str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn\n            // }\n            // }\n\n          });\n          if (selectedRecord['sort'].length !== sortIndex.length) str = str + \" , \\n\";\n          selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\n            if (sortIndex.findIndex(x => x === index1) === -1) {\n              if (selectedRecord['sort'].length - 1 !== index1) {\n                str = str + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> ,\" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' ,\" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" ,\\n\");\n              } else {\n                str = str + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" \"); //  str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\"\n              } // if (selectedRecord['sort'].length - 1 !== index1) {\n              //     str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn + \",\"\n              // } else {\n              //     str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn\n              // }\n\n            }\n          });\n        } else if (selectedRecord.summarize && selectedRecord.summarize.length > 0) {\n          //summariesort\n          // selectedRecord['summarize'] && selectedRecord['summarize'].map((item, index1) => {\n          //     if (selectedRecord['sort'].findIndex(x =>\n          //         (x.sortTable.label + x.sortColumn.item.scolumn)\n          //         === (item.summarizeTable.label + item.summarizeColumn.item.scolumn)) !== -1) {\n          //         sortIndex[index1] = selectedRecord['sort'].findIndex(x =>\n          //             (x.sortTable.label + x.sortColumn.item.scolumn)\n          //             === (item.summarizeTable.label + item.summarizeColumn.item.scolumn))\n          //     }\n          //     if (selectedRecord['summarize'].length - 1 !== index1) {\n          //         str =  str + (item.summarizeColumn.item.isjsoncolumn?\n          //         item.summarizeColumn.item.ismultilingual?\n          //        \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname+\"->'\"+item.summarizeColumn.item.scolumn+\"'->><@\"+item.summarizeColumn.item.parametername+\"@> ,\"\n          //         :  \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname+\"->>'\"+item.summarizeColumn.item.scolumn+\"' ,\"\n          //         : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ,\")\n          //     } else {\n          //         str =  str + (item.summarizeColumn.item.isjsoncolumn?\n          //         item.summarizeColumn.item.ismultilingual?\n          //        \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname+\"->'\"+item.summarizeColumn.item.scolumn+\"'->><@\"+item.summarizeColumn.item.parametername+\"@> \"\n          //         :  \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname+\"->>'\"+item.summarizeColumn.item.scolumn+\"' \"\n          //         : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" \")\n          //     }\n          // })\n          // if (selectedRecord['summarize'].length - 1 !== index1) {\n          //     str = str + \"  \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn + \",\"\n          // } else {\n          //     str = str + \"  \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn\n          // }\n          // }\n          if (selectedRecord['sort'].length !== sortIndex.length) str = str + \" , \\n\";\n          selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\n            if (sortIndex.findIndex(x => x === index1) === -1) {\n              if (selectedRecord['sort'].length - 1 !== index1) {\n                str = str + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> ,\" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' ,\" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" ,\\n\");\n              } else {\n                str = str + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" \");\n              }\n            }\n          });\n        }\n      } else if (selectedRecord.group && selectedRecord.group.length > 0) {\n        selectedRecord['group'] && selectedRecord['group'].map((item, index1) => {\n          if (selectedRecord['group'].length - 1 !== index1) {\n            str = str + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> ,\" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' ,\" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" ,\\n\");\n          } else {\n            str = str + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \");\n          }\n        });\n      }\n\n      if (selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].length > 0) {\n        str = str + \"\\nHAVING\\n\";\n      }\n\n      selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].map((item, index) => {\n        if (item.filterColumn.item.summarizeCondition.value === \"COUNT\") {\n          str = str + item.filterColumn.item.summarizeCondition.value + \"( \" + (item.filterColumn.item.summarizeColumn.item.isjsoncolumn ? item.filterColumn.item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) \" + item.filterCondition.value + \" \" + (item.filterValueType.value === 1 ? \"<@\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"@>\" : \"'\" + item.filterValue + \"' \");\n        } else if (item.filterColumn.item.summarizeCondition.value === \"DISTINCT\") {\n          str = str + \" COUNT( \" + item.filterColumn.item.summarizeCondition.value + \" \" + (item.filterColumn.item.summarizeColumn.item.isjsoncolumn ? item.filterColumn.item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) \" + item.filterCondition.value + \" \" + (item.filterValueType.value === 1 ? \"<@\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"@>\" : \"'\" + item.filterValue + \"' \");\n        } // if (item.filterColumn.item.summarizeCondition.value === \"COUNT\") {\n        //     str = str + item.filterColumn.item.summarizeCondition.value + \"( \" + \"\\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\" ) \" + item.filterCondition.value + \" \" + item.filterValue;\n        // } else {\n        //     str = str + \"COUNT( \" + item.filterColumn.item.summarizeCondition.value + \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\" ) \" + item.filterCondition.value + \" \" + item.filterValue;\n        // }\n\n\n        if (index !== selectedRecord['filterSummarize'].length - 1) {\n          str = str + \"\\n \" + selectedRecord['filterSummarizeJoinCondition'].value + \"\\n \";\n        }\n      });\n      if (selectedRecord['sort'] && selectedRecord['sort'].length > 0) str = str + \"\\nORDER BY\\n\";\n      selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\n        if (selectedRecord['sort'].length - 1 !== index1) {\n          str = str + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \" + item.sortCondition.value + \",\" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \" + item.sortCondition.value + \",\" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" \" + item.sortCondition.value + \",\\n\");\n        } else {\n          str = str + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \" + item.sortCondition.value : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \" + item.sortCondition.value : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" \" + item.sortCondition.value); //  str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\"\n        } // if (selectedRecord['sort'].length - 1 !== index1) {\n        //     str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn + ' ' + item.sortCondition.value + \",\"\n        // } else {\n        //     str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn + ' ' + item.sortCondition.value\n        // }\n\n      });\n\n      if ((selectedRecord.summarize === undefined || selectedRecord.summarize && selectedRecord.summarize.length === 0) && (selectedRecord.group === undefined || selectedRecord.group && selectedRecord.group.length === 0)) {\n        if (selectedRecord['Limit'] && selectedRecord['Limit'] !== 0) {\n          str = str + \"\\nLIMIT \" + selectedRecord['Limit'];\n        }\n      }\n\n      return str;\n    };\n\n    this.onFilterSummarizeEdit = e => {\n      let summarizeCombo = this.state.summarizeCombo || [];\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['filterNew'] = [...selectedRecord['filterSummarize']];\n      selectedRecord['filterNewCondition'] = selectedRecord['filterSummarizeJoinCondition'];\n      selectedRecord['summarize'] && selectedRecord['summarize'].map((item, index) => {\n        if (item.summarizeCondition.value === \"COUNT\") {\n          summarizeCombo.push({\n            label: item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\",\n            value: index,\n            item: { ...item,\n              summarize: true\n            }\n          });\n        } else if (item.summarizeCondition.value === \"DISTINCT\") {\n          summarizeCombo.push({\n            label: item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\",\n            value: index,\n            item: { ...item,\n              summarize: true\n            }\n          });\n        }\n      });\n      this.setState({\n        selectedRecord,\n        filterType: 1,\n        filterEdit: true,\n        showFilter: true,\n        filterTitle: \"Edit Summarization Filter\",\n        summarizeLoadOnly: true,\n        summarize: true\n      });\n    };\n\n    this.onFilterSummarizeDelete = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['filterSummarize'] = [];\n      selectedRecord['filterSummarizeJoinCondition'] = {};\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onFilterSummarizeChildDelete = (e, childIndex) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['filterSummarize'] = [...selectedRecord['filterSummarize'].slice(0, childIndex), ...selectedRecord['filterSummarize'].slice(childIndex + 1)];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onFilterEdit = (e, parentIndex) => {\n      const selectedRecord = this.state.selectedRecord; // selectedRecord['filterNew'] = [...selectedRecord['filter'][parentIndex]]\n      //  selectedRecord['filterNewCondition'] = { ...selectedRecord['filterJoinCondition'][parentIndex] }\n\n      const filterNew = [...selectedRecord['filter'][parentIndex]];\n      const filterNewCondition = { ...selectedRecord['filterJoinCondition'][parentIndex]\n      };\n      this.setState({\n        selectedRecord: { ...selectedRecord,\n          filterNew: filterNew,\n          filterNewCondition: filterNewCondition\n        },\n        filterType: 1,\n        filterEdit: true,\n        showFilter: true,\n        parentIndex: parentIndex,\n        filterTitle: this.props.intl.formatMessage({\n          id: \"IDS_EDITFILTER\"\n        })\n      });\n    };\n\n    this.onFilterDelete = (e, parentIndex) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['filter'] = [...selectedRecord['filter'].slice(0, parentIndex), ...selectedRecord['filter'].slice(parentIndex + 1)];\n      selectedRecord['filterJoinCondition'] = [...selectedRecord['filterJoinCondition'].slice(0, parentIndex), ...selectedRecord['filterJoinCondition'].slice(parentIndex + 1)];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onFilterChildDelete = (e, parentIndex, childIndex) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['filter'][parentIndex] = [...selectedRecord['filter'][parentIndex].slice(0, childIndex), ...selectedRecord['filter'][parentIndex].slice(childIndex + 1)];\n      const index = selectedRecord['filter'].findIndex(x => x.length === 0);\n\n      if (index !== -1) {\n        selectedRecord['filter'] = [...selectedRecord['filter'].slice(0, index), ...selectedRecord['filter'].slice(index + 1)];\n        selectedRecord['filterJoinCondition'] = [...selectedRecord['filterJoinCondition'].slice(0, parentIndex), ...selectedRecord['filterJoinCondition'].slice(parentIndex + 1)];\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onFilterModalDelete = childIndex => {\n      let summarizeLoad = this.state.summarizeLoad;\n      let summarizeLoadOnly = this.state.summarizeLoadOnly;\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['filterNew'] = [...selectedRecord['filterNew'].slice(0, childIndex), ...selectedRecord['filterNew'].slice(childIndex + 1)];\n\n      if (selectedRecord['filterNew'].length > 0 && selectedRecord['filterNew'].length === 1) {\n        summarizeLoadOnly = false;\n\n        if (selectedRecord['summarize'] && selectedRecord['summarize'].length > 0) {\n          summarizeLoad = true;\n        }\n      }\n\n      this.setState({\n        selectedRecord,\n        summarizeLoadOnly,\n        summarizeLoad\n      });\n    };\n\n    this.onSortModalDelete = (e, childIndex) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['sortNew'] = [...selectedRecord['sortNew'].slice(0, childIndex), ...selectedRecord['sortNew'].slice(childIndex + 1)];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSummarizeModalDelete = (e, childIndex) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['summarizeNew'] = [...selectedRecord['summarizeNew'].slice(0, childIndex), ...selectedRecord['summarizeNew'].slice(childIndex + 1)];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onJoinChildDelete = (e, childIndex) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['filterTableNewAdded'] = [...selectedRecord['filterTableNewAdded'].slice(0, childIndex), ...selectedRecord['filterTableNewAdded'].slice(childIndex + 1)];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onGroupModalDelete = (e, childIndex) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['groupNew'] = [...selectedRecord['groupNew'].slice(0, childIndex), ...selectedRecord['groupNew'].slice(childIndex + 1)];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onLimitDelete = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['Limit'] = undefined;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onLimitEdit = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['LimitNew'] = selectedRecord['Limit'];\n      this.setState({\n        selectedRecord,\n        filterType: 6,\n        showFilter: true\n      });\n    };\n\n    this.onJoinTableDelete = (e, index) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['TableJoin'] = [...selectedRecord['TableJoin'].splice(0, index), ...selectedRecord['TableJoin'].splice(index + 1)];\n      selectedRecord['stablename'] = [...selectedRecord['stablename'].splice(0, index + 1), ...selectedRecord['stablename'].splice(index + 2)];\n      const avaliableColumns = this.state.avaliableColumns.filter(x => x.item.parentTableIndex !== index + 1);\n      selectedRecord['scolumnname'] = selectedRecord['scolumnname'].filter(x => x.item.parentTableIndex !== index + 1);\n      this.setState({\n        selectedRecord,\n        avaliableColumns\n      });\n    };\n\n    this.onSortDelete = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['sort'] = [];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSortChildDelete = (e, index) => {\n      e.preventDefault();\n      e.stopPropagation();\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['sort'] = [...selectedRecord['sort'].splice(0, index), ...selectedRecord['sort'].splice(index + 1)];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSortEdit = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['sortNew'] = [...selectedRecord['sort']];\n      this.setState({\n        selectedRecord,\n        filterType: 3,\n        showFilter: true\n      });\n    };\n\n    this.onSummarizeDelete = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['summarize'] = [];\n      selectedRecord['filterSummarize'] = [];\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSummarizeChildDelete = (e, index) => {\n      const selectedRecord = this.state.selectedRecord;\n      const filterSummarize = selectedRecord['filterSummarize'] ? [...selectedRecord['filterSummarize']] : [];\n      const data = selectedRecord['summarize'][index];\n      const newfilterSummarize = [];\n      filterSummarize.map((item, index) => {\n        if (item.filterColumn.item.summarizeCondition.value === \"COUNT\") {\n          if (item.filterColumn.label !== data.summarizeTable.label + data.summarizeColumn.item.scolumndisplayname + \"Count\") {\n            newfilterSummarize.push(item);\n          }\n        } else {\n          if (item.filterColumn.label !== data.summarizeTable.label + data.summarizeColumn.item.scolumndisplayname + \"CountDistinct\") {\n            newfilterSummarize.push(item);\n          }\n        }\n      });\n      selectedRecord['filterSummarize'] = newfilterSummarize;\n      selectedRecord['summarize'] = [...selectedRecord['summarize'].splice(0, index), ...selectedRecord['summarize'].splice(index + 1)]; //this.filterQueryFormation(selectedRecord, this.state.avaliableColumns)\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSummarizeEdit = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['summarizeNew'] = [...selectedRecord['summarize']];\n      this.setState({\n        selectedRecord,\n        filterType: 4,\n        showFilter: true\n      });\n    };\n\n    this.onGroupDelete = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['group'] = []; //  this.filterQueryFormation(selectedRecord, this.state.avaliableColumns)\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onGroupChildDelete = (e, index) => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['group'] = [...selectedRecord['group'].splice(0, index), ...selectedRecord['group'].splice(index + 1)]; // this.filterQueryFormation(selectedRecord, this.state.avaliableColumns)\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onDownloadClick = (selectedRecord, avaliableColumns) => {\n      const query = this.filterQueryFormation(selectedRecord, avaliableColumns); //const fileData = JSON.stringify(query);\n\n      const blob = new Blob([query], {\n        type: \"text/plain\"\n      });\n      const url = URL.createObjectURL(blob);\n      const link = document.createElement(\"a\");\n      link.download = \"query.txt\";\n      link.href = url;\n      link.click();\n    };\n\n    this.onGroupEdit = e => {\n      const selectedRecord = this.state.selectedRecord;\n      selectedRecord['groupNew'] = [...selectedRecord['group']];\n      this.setState({\n        selectedRecord,\n        filterType: 5,\n        showFilter: true\n      });\n    };\n\n    this.queryDesignFormation = (selectedRecord, avaliableColumns) => {\n      let str = \"\";\n      str = '<span class=\\\"token keyword\\\">SELECT</span>\\n';\n\n      if (selectedRecord.summarize && selectedRecord.summarize.length > 0 || selectedRecord.group && selectedRecord.group.length > 0) {\n        if (selectedRecord.group && selectedRecord.group.length > 0) {\n          selectedRecord.group.map((item, index) => {\n            if (selectedRecord.group.length - 1 !== index) {\n              str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" + \"\\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\") + \",\"}</span>\\n`; //str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\",\"\n            } else {\n              str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" + \"\\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\")}</span>`; //str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\"\n            }\n          });\n        }\n\n        if (selectedRecord.summarize && selectedRecord.summarize.length > 0) {\n          if (selectedRecord.group && selectedRecord.group.length > 0) str = str + '<span>,</span>\\n';\n          selectedRecord.summarize.map((item, index) => {\n            if (selectedRecord.summarize.length - 1 !== index) {\n              if (item.summarizeCondition.value === \"COUNT\") {\n                str = str + `<span class=\\\"token keyword\\\">${\" \" + item.summarizeCondition.value}</span>` + `<span>${\"( \" + (item.summarizeColumn.item.isjsoncolumn ? item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\",\"}</span>\\n`; //str = str + item.summarizeCondition.value + \"( \" + \"\\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\",\";\n              } else if (item.summarizeCondition.value === \"DISTINCT\") {\n                str = str + `<span class=\\\"token keyword\\\"> COUNT</span>` + `<span>${\"( \" + item.summarizeCondition.value + \" \" + (item.summarizeColumn.item.isjsoncolumn ? item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\",\"}</span>\\n`; //str = str + \" COUNT( \" + item.summarizeCondition.value + \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\",\";\n              }\n            } else {\n              if (item.summarizeCondition.value === \"COUNT\") {\n                str = str + `<span class=\\\"token keyword\\\">${\" \" + item.summarizeCondition.value}</span>` + `<span>${\"( \" + (item.summarizeColumn.item.isjsoncolumn ? item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\"\"}</span>`; //  str = str + item.summarizeCondition.value + \"( \" + \"\\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\"\";\n              } else if (item.summarizeCondition.value === \"DISTINCT\") {\n                str = str + `<span class=\\\"token keyword\\\"> COUNT</span>` + `<span>( </span>` + `<span class=\\\"token keyword\\\">${item.summarizeCondition.value}</span>` + `<span>${\" \" + (item.summarizeColumn.item.isjsoncolumn ? item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\"\"}</span>`; // str = str + \" COUNT( \" + item.summarizeCondition.value + \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\"\";\n              }\n            }\n          });\n        }\n      } else {\n        // if (selectedRecord.scolumnname.length !== avaliableColumns.length) {\n        selectedRecord.scolumnname.map((item, index) => {\n          if (selectedRecord.scolumnname.length - 1 !== index) {\n            str = str + `<span>${\"  \" + (item.item.isjsoncolumn ? item.item.ismultilingual ? \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->'\" + item.item.scolumn + \"'->><@\" + item.item.parametername + \"@> \" + \"\\\"\" + item.label + \"\\\"\" : \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->>'\" + item.item.scolumn + \"' \\\"\" + item.label + \"\\\"\" : \" \\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\"\") + \",\"}</span>\\n`; //  str = str + \"\\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\", \"\n          } else {\n            str = str + `<span>${\"  \" + (item.item.isjsoncolumn ? item.item.ismultilingual ? \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->'\" + item.item.scolumn + \"'->><@\" + item.item.parametername + \"@> \" + \"\\\"\" + item.label + \"\\\"\" : \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->>'\" + item.item.scolumn + \"' \\\"\" + item.label + \"\\\"\" : \" \\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\" \")}</span>`; // str = str + \"\\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\" \"\n          }\n        }); // } else {\n        //     str = str + '<span class=\\\"token keyword\\\"> * </span>';\n        // }\n      }\n\n      str = str + '\\n<span class=\\\"token keyword\\\">FROM</span>\\n';\n\n      if (selectedRecord['stablename'].length === 1) {\n        selectedRecord['stablename'].map(item => {\n          str = str + `<span class=\\\"token identifier\\\" >${\"  \" + item.item.tableName + \" \\\"\" + item.label + \"\\\"\"}</span>\\n`;\n        });\n      } else {\n        selectedRecord['TableJoin'].map((item, index) => {\n          if (index === 0) {\n            //  str = str + selectedRecord['stablename'][index].item.tableName + \" \\\"\" + selectedRecord['stablename'][index].label + \"\\\" \" + item.TableJoining.value + \" \"\n            str = str + `<span>${\"  \" + selectedRecord['stablename'][index].item.tableName + \" \\\"\" + selectedRecord['stablename'][index].label + \"\\\" \"}</span>\\n` + `<span class=\\\"token keyword\\\">${\"  \" + item.TableJoining.value + \" \"}</span>`;\n            item.Table.map((item1, index1) => {\n              if (index1 === 0) {\n                str = str + `<span>${item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\"\"}</span>` + '<span class=\\\"token keyword\\\"> ON </span>' + `<span>${\"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ? item1.oldTableColumn.item.ismultilingual ? item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \" : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ? item1.newTableColumn.item.ismultilingual ? item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \" : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \"}</span>\\n`; // str = str + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\" ON \" +\n                //     \"\\\"\" + item1.oldTable.label + \"\\\".\" + item1.oldTableColumn.item.scolumn + \"=\\\"\" + item1.newTable.label + \"\\\".\" + item1.newTableColumn.item.scolumn + \" \"\n              } else {\n                str = str + ` <span class=\\\"token keyword\\\"> AND </span>` + `<span>${\"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ? item1.oldTableColumn.item.ismultilingual ? item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \" : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ? item1.newTableColumn.item.ismultilingual ? item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \" : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \"}</span>\\n`; // str = str + \" AND \\\"\" + item1.oldTable.label + \"\\\".\" + item1.oldTableColumn.item.scolumn + \"=\\\"\" + item1.newTable.label + \"\\\".\" + item1.newTableColumn.item.scolumn + \" \"\n              }\n            });\n          } else {\n            str = str + `<span class=\\\"token keyword\\\">${item.TableJoining.value}</span>`;\n            item.Table.map((item1, index1) => {\n              if (index1 === 0) {\n                str = str + `<span>${\" \" + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\ \"}</span>` + `<span class=\\\"token keyword\\\"> ON </span>` + `<span>${\"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ? item1.oldTableColumn.item.ismultilingual ? item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \" : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ? item1.newTableColumn.item.ismultilingual ? item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \" : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \"}</span>\\n`; // str = str + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\" ON \" +\n                //     \"\\\"\" + item1.oldTable.label + \"\\\".\" + item1.oldTableColumn.item.scolumn + \"=\\\"\" + item1.newTable.label + \"\\\".\" + item1.newTableColumn.item.scolumn + \" \"\n              } else {\n                str = str + `<span class=\\\"token keyword\\\"> AND </span>` + `<span>${\"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ? item1.oldTableColumn.item.ismultilingual ? item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \" : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ? item1.newTableColumn.item.ismultilingual ? item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \" : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\" : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \"}</span>\\n`; // str = str + \" AND \\\"\" + item1.oldTable.label + \"\\\".\" + item1.oldTableColumn.item.scolumn + \"=\\\"\" + item1.newTable.label + \"\\\".\" + item1.newTableColumn.item.scolumn + \" \"\n              }\n            });\n          }\n        });\n      }\n\n      if (selectedRecord['filter'] && selectedRecord['filter'].length > 0) str = str + `<span class=\\\"token keyword\\\">WHERE</span>\\n`;\n      selectedRecord['filter'] && selectedRecord['filter'].map((item1, index1) => {\n        // str = str + \" ( \";\n        str = str + `<span class=\\\"token punctuation\\\">  (</span>\\n`;\n        item1.map((item, index) => {\n          // if (item.filterCondition.value !== 'NULL'\n          //     && item.filterCondition.value !== 'NOT NULL' &&\n          //     item.filterCondition.value !== 'IN' &&\n          //     item.filterCondition.value !== 'PRESENT' &&\n          //     item.filterCondition.value !== 'BLANK') {\n          // str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" \" + item.filterCondition.value + \"'\" + item.filterValue + \"' \"\n          // }\n          if (item.filterCondition.value === 'IN') {\n            str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \"}</span>` + `<span class=\\\"token operator\\\">${item.filterCondition.value}</span>` + `<span class=\\\"token punctuation\\\"> ('</span>` + `<span class=\\\"token string\\\">${item.filterValue + \"') \"}</span>`; //str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" \" + item.filterCondition.value + \" ('\" + item.filterValue + \"') \"\n          } else if (item.filterCondition.value === 'PRESENT') {\n            str = str + `<span class=\\\"token operator\\\"> NOT</span>` + `<span>${\" \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" =\"}</span>` + `<span class=\\\"token string\\\">''</span>`; //str = str + \" NOT \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" ='' \"\n          } else if (item.filterCondition.value === 'BLANK') {\n            str = str + `<span>${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \"}</span>` + `<span class=\\\"token string\\\">''</span>`; // str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" ='' \"\n          } else if (item.filterCondition.value === 'NULL' || item.filterCondition.value === 'NOT NULL') {\n            str = str + `<span>${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\")}</span>` + `<span class=\\\"token operator\\\"> IS </span>` + `<span class=\\\"token boolean\\\">${item.filterCondition.value + \" \"}</span>`; // str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" IS \" + item.filterCondition.value + \" \"\n          } else if (item.filterCondition.value === 'IS NULL') {\n            str = str + `<span>${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\")}</span>` + // `<span class=\\\"token operator\\\"> IS </span>` +\n            `<span class=\\\"token boolean\\\">${item.filterCondition.value + \" \"}</span>`; // str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" IS \" + item.filterCondition.value + \" \"\n          } else if (item.filterCondition.value === 'STARTS WITH') {\n            str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \"}</span>` + `<span class=\\\"token operator\\\"> ILIKE </span>` + `<span class=\\\"token string\\\">${\"'\" + item.filterValue + \"%' collate \\\"default\\\" \"}</span>`;\n          } else if (item.filterCondition.value === 'ENDS WITH') {\n            str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \"}</span>` + `<span class=\\\"token operator\\\"> ILIKE </span>` + `<span class=\\\"token string\\\">${\"'%\" + item.filterValue + \"' collate \\\"default\\\" \"}</span>`;\n          } else if (item.filterCondition.value === 'CONTAINS') {\n            str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \"}</span>` + `<span class=\\\"token operator\\\"> ILIKE </span>` + `<span class=\\\"token string\\\">${\"'\" + item.filterValue + \"%' collate \\\"default\\\"\"}</span>`;\n          } else if (item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === '=' || item.filterCondition.value === '<' || item.filterCondition.value === '>')) {\n            str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value}</span>` + `<span class=\\\"token string\\\">${item.filterValueType.value === 1 ? \"<#\" + item.filterColumn.item.scolumn + \"#>\" : \"'\" + convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) + \"' \"}</span>`;\n          } else if (item.filterColumn.item.columndatatype === 'date' && item.filterCondition.value === 'NOT') {\n            str = str + `<span>(</span><span class=\\\"token string\\\">NOT</span><span> ${\" \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \"}</span>` + `<span class=\\\"token string\\\">${item.filterValueType.value === 1 ? \"<#\" + item.filterColumn.item.scolumn + \"#>)\" : \"'\" + convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) + \"' )\"}</span>`;\n          } else if (item.filterColumn.item.columndatatype === 'string' && item.filterCondition.value === 'NOT') {\n            str = str + `<span>(</span><span class=\\\"token string\\\">NOT</span><span> ${\" \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \"}</span>` + `<span class=\\\"token string\\\">${item.filterValueType.value === 1 ? \"<@\" + item.filterColumn.item.scolumn + \"@>)\" : \"'\" + item.filterValue + \"' )\"}</span>`;\n          } else {\n            str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ? item.filterColumn.item.ismultilingual ? item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \" : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\" : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value}</span>` + `<span class=\\\"token string\\\">${item.filterValueType.value === 1 ? (item.filterColumn.item.columndatatype === 'date' ? \"<#\" : \"<@\") + item.filterColumn.item.scolumn + (item.filterColumn.item.columndatatype === 'date' ? \"#>\" : \"@>\") : \"'\" + item.filterValue + \"' \"}</span>`;\n          }\n\n          if (index !== selectedRecord['filter'][index1].length - 1) {\n            str = str + `\\n<span class=\\\"token operator\\\">${\"    \" + selectedRecord['filterJoinCondition'][index1].value}</span>\\n`; // str = str + selectedRecord['filterJoinCondition'][index1].value + \" \";\n          }\n        });\n        str = str + `\\n<span class=\\\"token punctuation\\\">  )</span>\\n`;\n\n        if (index1 !== selectedRecord['filter'].length - 1) {\n          str = str + `<span class=\\\"token operator\\\">${\"  \" + selectedRecord['filterJoinCondition'][index1 + 1] && selectedRecord['filterJoinCondition'][index1 + 1].value}</span>\\n`;\n        }\n      });\n\n      if (selectedRecord.group && selectedRecord.group.length > 0) {\n        //str = str + \" GROUP BY \"\n        str = str + `<span class=\\\"token keyword\\\">GROUP BY</span>\\n`;\n      } else if (selectedRecord.summarize && selectedRecord.summarize.length > 0 && selectedRecord['sort'] && selectedRecord['sort'].length > 0) {\n        str = str + `<span class=\\\"token keyword\\\">GROUP BY</span>\\n`;\n      }\n\n      if ((selectedRecord.summarize && selectedRecord.summarize.length > 0 || selectedRecord.group && selectedRecord.group.length > 0) && selectedRecord['sort'] && selectedRecord['sort'].length > 0) {\n        let sortIndex = [];\n\n        if (selectedRecord.group && selectedRecord.group.length > 0) {\n          selectedRecord['group'] && selectedRecord['group'].map((item, index1) => {\n            if (selectedRecord['sort'].findIndex(x => x.sortTable.label + x.sortColumn.item.scolumn === item.groupTable.label + item.groupColumn.item.scolumn) !== -1) {\n              sortIndex[index1] = selectedRecord['sort'].findIndex(x => x.sortTable.label + x.sortColumn.item.scolumn === item.groupTable.label + item.groupColumn.item.scolumn);\n            }\n\n            if (selectedRecord['group'].length - 1 !== index1) {\n              str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \") + \",\"}</span>\\n`; //   str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn + \",\"\n            } else {\n              str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \")}</span>`; //  str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn\n            } // }\n\n          });\n          if (selectedRecord['sort'].length !== sortIndex.length) str = str + `<span>,</span>\\n`; //str = str + \" , \"\n\n          selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\n            if (sortIndex.findIndex(x => x === index1) === -1) {\n              if (selectedRecord['sort'].length - 1 !== index1) {\n                str = str + `<span>${\" \" + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@>,\" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"',\" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\") + \",\"}</span>\\n`;\n              } else {\n                str = str + `<span>${\" \" + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@>,\" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"',\" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\")}</span>\\n`;\n              }\n            }\n          });\n        } else if (selectedRecord.summarize && selectedRecord.summarize.length > 0) {\n          //selectedRecord['summarize'] && selectedRecord['summarize'].map((item, index1) => {\n          // if (selectedRecord['sort'].findIndex(x =>\n          //     (x.sortTable.label + x.sortColumn.item.scolumn)\n          //     === (item.summarizeTable.label + item.summarizeColumn.item.scolumn)) !== -1) {\n          //     sortIndex[index1] = selectedRecord['sort'].findIndex(x =>\n          //         (x.sortTable.label + x.sortColumn.item.scolumn)\n          //         === (item.summarizeTable.label + item.summarizeColumn.item.scolumn))\n          // }\n          //     if (selectedRecord['summarize'].length - 1 !== index1) {\n          //         str = str + `<span>${\" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn + \",\"}</span>\\n`\n          //         //str = str + \"  \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn + \",\"\n          //     } else {\n          //         str = str + `<span>${\" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn}</span>`\n          //         // str = str + \"  \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn\n          //     }\n          //     // }\n          // })\n          // if (selectedRecord['sort'].length !== sortIndex.length)\n          //     str = str + `<span>,</span>\\n`\n          selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\n            if (sortIndex.findIndex(x => x === index1) === -1) {\n              if (selectedRecord['sort'].length - 1 !== index1) {\n                str = str + `<span>${\" \" + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@>,\" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"',\" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\") + \",\"}</span>\\n`; //str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn + \",\"\n              } else {\n                str = str + `<span>${\" \" + (item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@>,\" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"',\" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\")}</span>\\n`; // str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn\n              }\n            }\n          });\n        }\n      } else if (selectedRecord.group && selectedRecord.group.length > 0) {\n        selectedRecord['group'] && selectedRecord['group'].map((item, index1) => {\n          if (selectedRecord['group'].length - 1 !== index1) {\n            str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@>,\" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"',\" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\") + \",\"}</span>\\n`; //str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn + \",\"\n          } else {\n            str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ? item.groupColumn.item.ismultilingual ? \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@>,\" : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"',\" : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\")}</span>\\n`; //str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn\n          }\n        });\n      }\n\n      if (selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].length > 0) {\n        str = str + `\\n<span class=\\\"token keyword\\\">HAVING</span>\\n`; // str = str + \" HAVING \"\n      }\n\n      selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].map((item, index) => {\n        if (item.filterColumn.item.summarizeCondition.value === \"COUNT\") {\n          str = str + `<span class=\\\"token keyword\\\">${item.filterColumn.item.summarizeCondition.value}</span>` + `<span>${\"( \" + (item.filterColumn.item.summarizeColumn.item.isjsoncolumn ? item.filterColumn.item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\"\") + \"\\\" ) \" + item.filterCondition.value + \"</span><span class=\\\"token string\\\">\" + (item.filterValueType.value === 1 ? \"<@\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"@>\" : \"'\" + item.filterValue + \"' \")}</span>\\n`; //str = str + item.filterColumn.item.summarizeCondition.value + \"( \" + \"\\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\" ) \" + item.filterCondition.value + \" \" + item.filterValue;\n        } else {\n          str = str + `<span class=\\\"token keyword\\\">COUNT</span>` + `<span>( </span>` + `<span class=\\\"token keyword\\\">${item.filterColumn.item.summarizeCondition.value}</span>` + `<span>${(item.filterColumn.item.summarizeColumn.item.isjsoncolumn ? item.filterColumn.item.summarizeColumn.item.ismultilingual ? \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.summarizeColumn.item.parametername + \"@> \" : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"' \\\"\" : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) \" + item.filterCondition.value + \"</span><span class=\\\"token string\\\"> \" + (item.filterValueType.value === 1 ? \"<@\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"@>\" : \"'\" + item.filterValue + \"' \")}</span>\\n`; // str = str + \"COUNT( \" + item.filterColumn.item.summarizeCondition.value + \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\" ) \" + item.filterCondition.value + \" \" + item.filterValue;\n        }\n\n        if (index !== selectedRecord['filterSummarize'].length - 1) {\n          str = str + `<span class=\\\"token keyword\\\">${\" \" + selectedRecord['filterSummarizeJoinCondition'].value + \" \"}</span>`; // str = str + \" \" + selectedRecord['filterSummarizeJoinCondition'].value + \" \";\n        }\n      });\n      if (selectedRecord['sort'] && selectedRecord['sort'].length > 0) str = str + `\\n<span class=\\\"token keyword\\\">ORDER BY</span>\\n`;\n      selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\n        if (selectedRecord['sort'].length - 1 !== index1) {\n          str = str + `<span>${(item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\") + ' '}</span>` + `<span class=\\\"token keyword\\\">${item.sortCondition.value}</span>` + `<span>,</span>\\n`;\n        } else {\n          str = str + `<span>${(item.sortColumn.item.isjsoncolumn ? item.sortColumn.item.ismultilingual ? \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \" : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \" : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\") + ' '}</span>` + `<span class=\\\"token keyword\\\">${item.sortCondition.value}</span>\\n`;\n        }\n      });\n\n      if ((selectedRecord.summarize === undefined || selectedRecord.summarize && selectedRecord.summarize.length === 0) && (selectedRecord.group === undefined || selectedRecord.group && selectedRecord.group.length === 0)) {\n        if (selectedRecord['Limit'] && selectedRecord['Limit'] !== 0) {\n          str = str + `<span class=\\\"token keyword\\\">LIMIT ` + `</span><span class=\\\"token number\\\">${selectedRecord['Limit']}</span>`;\n        }\n      }\n\n      return str;\n    };\n\n    this.state = {\n      listTables: [],\n      listColumnForMultiSelect: [],\n      dataStateTable: {\n        skip: 0\n      }\n    };\n    this.searchRef = React.createRef();\n  }\n\n  joinTableCheck(selectedRecord) {\n    let newTable1 = '';\n    let oldTable = '';\n    let check = true;\n    selectedRecord['filterTableNewAdded'].map((item, index) => {\n      if (index === 0) {\n        newTable1 = item.filterTableNew.label;\n        oldTable = item.filterTableOld.label;\n      }\n\n      if (index !== 0 && (newTable1 !== item.filterTableNew.label || oldTable !== item.filterTableOld.label)) {\n        check = false;\n      }\n    });\n    return check;\n  }\n\n  checkTableName(selectedRecord) {\n    let check = true;\n    const tableAlias = selectedRecord['joinTableAlias'];\n    const index = selectedRecord['stablename'].findIndex(x => x.label === tableAlias);\n\n    if (index !== -1) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  updateOldAliasToNewAlis(selectedRecord, value) {\n    selectedRecord['filterTableNewAdded'].map(item => {\n      item.filterTableNew.label = value;\n      item.filterTableNew['item'].stabledisplayname = value;\n      item.filterTableNewColumn['item'].stabledisplayname = value;\n    }); // selectedRecord['filterTableNewAdded'].map((item) => {\n    //     item.filterTableNewColumn['item'].stabledisplayname = value\n    // })\n\n    return selectedRecord;\n  }\n\n  componentDidMount() {\n    let listTables = this.state.listTables || [];\n    const TableList = this.props.tableName;\n    console.log(\"component\", listTables);\n    listTables = constructOptionList(TableList, 'tableName', 'stabledisplayname').get(\"OptionList\"); // listTables = this.props.tableName.map(item => {\n    //     return { label: item.stabledisplayname, value: item.tableName, item: { ...item } };\n    // })\n    // const list1 = []\n    // let tableName = ''\n    // let index1 = -1\n    // this.props.tableList.map((item, index) => {\n    //     if (item.stable !== tableName) {\n    //         tableName = item.stable\n    //         index1 = index1 + 1\n    //         list1.push({\n    //             label: item.stabledisplayname, value: item.stable,\n    //             item: { ...item }, options: [{\n    //                 label: item.scolumndisplayname, value: item.scolumn,\n    //                 item: { ...item }\n    //             }]\n    //         });\n    //     } else {\n    //         const l = list1[index1].options\n    //         l.push({\n    //             label: item.scolumndisplayname, value: item.scolumn,\n    //             item: { ...item }\n    //         })\n    //         list1[index1] = { ...list1[index1], options: l }\n    //     }\n    // })\n\n    this.setState({\n      listTables,\n      listColumnForMultiSelect: []\n    });\n  }\n\n  render() {\n    //{console.log('sql',this.props.filtersearchRef)}\n    const selectedRecord1 = this.state.selectedRecord || {};\n    let sortIndex = [];\n    const filterParam = {};\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3062,\n        columnNumber: 13\n      }\n    }, selectedRecord1 && selectedRecord1.selectedTable ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 is-marginless is-gapless',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3065,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"aside\", {\n      className: 'column1 is-3 is-hidden-touch',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3066,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: 'hero has-background-white is-fullheight-with-navbar',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3067,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'hero-head sql1',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3068,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'container',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3069,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"py-1 has-background-grey-dark has-text-light has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3070,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"has-text-weight-bold\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3071,\n        columnNumber: 49\n      }\n    }, \"Table : \"), selectedRecord1.selectedTable.stabledisplayname, /*#__PURE__*/React.createElement(\"span\", {\n      className: 'icon delete closetable is-marginless',\n      onClick: e => this.onClose(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3075,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fas fa-times\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3076,\n        columnNumber: 53\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3079,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `card-content pt-3 pb-0 ${selectedRecord1['group'] && selectedRecord1['group'].length > 0 || selectedRecord1['summarize'] && selectedRecord1['summarize'].length > 0 ? 'is-disabled' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3080,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3083,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 has-text-weight-bold pt-3',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3084,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3085,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3086,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3087,\n        columnNumber: 69\n      }\n    }, 'Show')), /*#__PURE__*/React.createElement(Col, {\n      md: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3091,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(ButtonMultiSelectDropDown, {\n      options: this.state.avaliableColumns || [],\n      groupingKey: \"parentTableIndex\",\n      groupingDisplayname: \"stabledisplayname\",\n      value: selectedRecord1[\"scolumnname\"] ? selectedRecord1[\"scolumnname\"] : [],\n      label: \"Column Selected\",\n      onClick: event => this.onComboFieldChange(event, \"scolumnname\"),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3114,\n        columnNumber: 69\n      }\n    })))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content pt-3 pb-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3151,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3152,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 is-6 has-text-weight-bold pt-3',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3153,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3155,\n        columnNumber: 61\n      }\n    }, \" \", this.props.intl.formatMessage({\n      id: \"IDS_FILTER\"\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: 'button is-light is-small ml-3',\n      onClick: e => this.onCondition(e, 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3157,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      className: 'icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3158,\n        columnNumber: 65\n      }\n    }))))), selectedRecord1['filterSummarize'] && selectedRecord1['filterSummarize'].length > 0 &&\n    /*#__PURE__*/\n    // this.state.selectedRecord['filterSummarize'].map((item, index) => {\n    React.createElement(\"div\", {\n      className: \"card-content pt-3 pb-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3165,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'has-text-right-tablet has-text-centered',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3166,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'buttons is-right',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3167,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"button is-small is-light is-success has-text-weight-bold is-uppercase mr-auto mb-2 ml-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3169,\n        columnNumber: 65\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SUMMARIZATION\"\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-info\",\n      onClick: e => this.onFilterSummarizeEdit(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3173,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3174,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3176,\n        columnNumber: 73\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-danger\",\n      onClick: e => this.onFilterSummarizeDelete(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3179,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3180,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3182,\n        columnNumber: 73\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3193,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 is-10',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3194,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'field is-grouped is-grouped-multiline is-scrollable',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3195,\n        columnNumber: 65\n      }\n    }, selectedRecord1['filterSummarize'] && selectedRecord1['filterSummarize'].map((item1, index1) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: 'control',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3197,\n          columnNumber: 80\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'tags has-addons',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3198,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: 'tag is-light is-success',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3199,\n          columnNumber: 81\n        }\n      }, item1.filterColumn.item.summarizeCondition.value), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'tag is-light is-info',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3202,\n          columnNumber: 81\n        }\n      }, item1.filterColumn.label), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'tag is-light has-text-weight-bold',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3205,\n          columnNumber: 81\n        }\n      }, item1.filterCondition.value), /*#__PURE__*/React.createElement(\"span\", {\n        className: 'tag is-light is-info',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3208,\n          columnNumber: 81\n        }\n      }, item1.filterValue), /*#__PURE__*/React.createElement(\"span\", {\n        onClick: e => this.onFilterSummarizeChildDelete(e, index1),\n        className: 'tag is-light is-danger is-clickable',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3211,\n          columnNumber: 81\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: 'delete is-small is-marginless',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3212,\n          columnNumber: 85\n        }\n      }, /*#__PURE__*/React.createElement(\"i\", {\n        className: \"fas fa-times\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3214,\n          columnNumber: 89\n        }\n      })))));\n    }))))) // })\n    , selectedRecord1['filter'] && selectedRecord1['filter'].length > 0 && selectedRecord1['filter'].map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-content pt-3 pb-0 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3231,\n          columnNumber: 64\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'has-text-right-tablet has-text-centered',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3232,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'buttons is-right',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3233,\n          columnNumber: 65\n        }\n      }, index > 0 && index !== selectedRecord1['filter'].length && selectedRecord1['filterJoinCondition'][index] && /*#__PURE__*/React.createElement(\"span\", {\n        className: \"button is-small is-light is-success has-text-weight-bold is-uppercase mr-auto mb-2 ml-0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3238,\n          columnNumber: 73\n        }\n      }, selectedRecord1['filterJoinCondition'][index].value), /*#__PURE__*/React.createElement(Button, {\n        className: \"button is-small is-light is-info\",\n        onClick: e => this.onFilterEdit(e, index),\n        type: \"button\",\n        tabindex: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3241,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3242,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faPen,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3244,\n          columnNumber: 77\n        }\n      }))), /*#__PURE__*/React.createElement(Button, {\n        className: \"button is-small is-light is-danger\",\n        onClick: e => this.onFilterDelete(e, index),\n        type: \"button\",\n        tabindex: \"0\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3247,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3248,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3250,\n          columnNumber: 77\n        }\n      }))))), /*#__PURE__*/React.createElement(\"div\", {\n        className: 'columns1 mb-0',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3261,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'column1 is-10',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3262,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'field is-grouped is-grouped-multiline is-scrollable',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3263,\n          columnNumber: 69\n        }\n      }, item.map((item1, index1) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: 'control',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3265,\n            columnNumber: 84\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: 'tags has-addons',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3266,\n            columnNumber: 81\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: 'tag is-light is-success',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3267,\n            columnNumber: 85\n          }\n        }, item1.filterTable.label), /*#__PURE__*/React.createElement(\"span\", {\n          className: 'tag is-light is-info',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3270,\n            columnNumber: 85\n          }\n        }, item1.filterColumn.label), /*#__PURE__*/React.createElement(\"span\", {\n          className: 'tag is-light has-text-weight-bold',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3273,\n            columnNumber: 85\n          }\n        }, item1.filterCondition.value), /*#__PURE__*/React.createElement(\"span\", {\n          className: 'tag is-light is-info',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3276,\n            columnNumber: 85\n          }\n        }, item1.filterValueType.value === 2 ? item1.filterColumn.item.columndatatype === 'date' ? item1.filterCondition.value === '=' || item1.filterCondition.value === '<' || item1.filterCondition.value === '>' || item1.filterCondition.value === 'NOT' ? convertDateTimetoStringDBFormat(item1.filterValue, this.props.Login.userInfo) : item1.filterValue : item1.filterValue : item1.filterColumn.item.columndatatype === 'date' ? \"<#\" + item1.filterColumn.item.scolumn + \"#>\" : \"<@\" + item1.filterColumn.item.scolumn + \"@>\"), /*#__PURE__*/React.createElement(\"span\", {\n          onClick: e => this.onFilterChildDelete(e, index, index1),\n          className: 'tag is-light is-danger is-clickable',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3290,\n            columnNumber: 85\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          className: 'delete is-small is-marginless',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3291,\n            columnNumber: 89\n          }\n        }, /*#__PURE__*/React.createElement(\"i\", {\n          className: \"fas fa-times\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 3293,\n            columnNumber: 93\n          }\n        })))));\n      })))));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content pt-3 pb-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3307,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3308,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 is-6 has-text-weight-bold pt-3',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3309,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3311,\n        columnNumber: 61\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_JOIN\"\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: 'button is-light is-small ml-3',\n      onClick: e => this.onCondition(e, 2),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3313,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      className: 'icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3314,\n        columnNumber: 65\n      }\n    }))))), selectedRecord1['TableJoin'] && selectedRecord1['TableJoin'].length > 0 && selectedRecord1['TableJoin'].map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"card-content pt-3 pb-0 \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3323,\n          columnNumber: 64\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'columns1 mb-0',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3339,\n          columnNumber: 61\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'column1 is-10 has-text-right-tablet has-text-centered',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3340,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'field is-grouped is-grouped-multiline is-scrollable',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3341,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'control',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3342,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'tags has-addons mb-0',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3343,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: 'tag is-light has-text-weight-bold',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3344,\n          columnNumber: 81\n        }\n      }, item['TableJoining'].label)), item.Table.map((item2, index1) => {\n        return Object.keys(item2).map((item1, index2) => {\n          if (item1 === 'oldTable') {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: 'tags has-addons mb-0',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 3351,\n                columnNumber: 96\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: 'tag is-light is-success',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 3352,\n                columnNumber: 93\n              }\n            }, item2[item1].label), /*#__PURE__*/React.createElement(\"span\", {\n              className: 'tag is-light is-info',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 3355,\n                columnNumber: 93\n              }\n            }, item2['oldTableColumn'].value));\n          } else if (item1 === 'newTable') {\n            return /*#__PURE__*/React.createElement(\"div\", {\n              className: 'tags has-addons mb-0',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 3360,\n                columnNumber: 96\n              }\n            }, /*#__PURE__*/React.createElement(\"span\", {\n              className: 'tag is-light is-success',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 3361,\n                columnNumber: 93\n              }\n            }, item2[item1].label), /*#__PURE__*/React.createElement(\"span\", {\n              className: 'tag is-light is-info',\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 3364,\n                columnNumber: 93\n              }\n            }, item2['newTableColumn'].value));\n          }\n        });\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: 'column1 is-2 has-text-weight-bold pt-3',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3401,\n          columnNumber: 65\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: 'buttons is-right',\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3402,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(Button, {\n        className: 'button is-small is-light is-danger',\n        onClick: e => this.onJoinTableDelete(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3403,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"icon\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3404,\n          columnNumber: 77\n        }\n      }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n        icon: faTimes,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3406,\n          columnNumber: 81\n        }\n      })))))));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content pt-3 pb-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3417,\n        columnNumber: 49\n      }\n    }, selectedRecord1['sort'] && selectedRecord1['sort'].length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3420,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column1 is-6 has-text-weight-bold pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3421,\n        columnNumber: 61\n      }\n    }, \"Sort\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column1 is-6 has-text-right-tablet has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3422,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons is-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3423,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-info\",\n      onClick: e => {\n        this.onSortEdit(e);\n      },\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3424,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3425,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3427,\n        columnNumber: 77\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-danger\",\n      onClick: e => this.onSortDelete(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3430,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3431,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3433,\n        columnNumber: 77\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3441,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 is-6 has-text-weight-bold pt-3',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3442,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3444,\n        columnNumber: 65\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SORT\"\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: 'button is-light is-small ml-3',\n      onClick: e => this.onCondition(e, 3),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3446,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      className: 'icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3447,\n        columnNumber: 69\n      }\n    })))), selectedRecord1['sort'] && selectedRecord1['sort'].length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field is-grouped is-grouped-multiline is-scrollable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3455,\n        columnNumber: 57\n      }\n    }, selectedRecord1['sort'] && selectedRecord1['sort'].map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3457,\n          columnNumber: 72\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tags has-addons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3458,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3459,\n          columnNumber: 73\n        }\n      }, item.sortTable && item.sortTable.label), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3460,\n          columnNumber: 73\n        }\n      }, item.sortColumn && item.sortColumn.label), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light has-text-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3461,\n          columnNumber: 73\n        }\n      }, item.sortCondition && item.sortCondition.value), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-danger is-clickable\",\n        tabindex: \"0\",\n        onClick: e => {\n          this.onSortChildDelete(e, index);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3462,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"delete is-small is-marginless\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3463,\n          columnNumber: 77\n        }\n      }))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content pt-3 pb-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3474,\n        columnNumber: 49\n      }\n    }, selectedRecord1['summarize'] && selectedRecord1['summarize'].length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3477,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column1 is-6 has-text-weight-bold pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3478,\n        columnNumber: 61\n      }\n    }, \"Summarize\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column1 is-6 has-text-right-tablet has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3479,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons is-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3480,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-info\",\n      onClick: e => this.onSummarizeEdit(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3481,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3482,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3484,\n        columnNumber: 77\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-danger\",\n      onClick: e => this.onSummarizeDelete(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3487,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3488,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3489,\n        columnNumber: 77\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3498,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 is-6 has-text-weight-bold pt-3',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3499,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3501,\n        columnNumber: 65\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_SUMMARIZE\"\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: 'button is-light is-small ml-3',\n      onClick: e => this.onCondition(e, 4),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3503,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      className: 'icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3504,\n        columnNumber: 69\n      }\n    })))), selectedRecord1['summarize'] && selectedRecord1['summarize'].length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field is-grouped is-grouped-multiline is-scrollable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3512,\n        columnNumber: 57\n      }\n    }, selectedRecord1['summarize'] && selectedRecord1['summarize'].map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3514,\n          columnNumber: 72\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tags has-addons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3515,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3516,\n          columnNumber: 73\n        }\n      }, item.summarizeTable && item.summarizeTable.label), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3517,\n          columnNumber: 73\n        }\n      }, item.summarizeColumn && item.summarizeColumn.label), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light has-text-weight-bold\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3518,\n          columnNumber: 73\n        }\n      }, item.summarizeCondition && item.summarizeCondition.value), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-danger is-clickable\",\n        tabindex: \"0\",\n        onClick: e => this.onSummarizeChildDelete(e, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3519,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"delete is-small is-marginless\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3520,\n          columnNumber: 77\n        }\n      }))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"card-content pt-3 pb-0 \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3531,\n        columnNumber: 49\n      }\n    }, selectedRecord1['group'] && selectedRecord1['group'].length > 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3534,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column1 is-6 has-text-weight-bold pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3535,\n        columnNumber: 61\n      }\n    }, \"Group By\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column1 is-6 has-text-right-tablet has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3536,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons is-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3537,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-info\",\n      onClick: e => this.onGroupEdit(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3538,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3539,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3541,\n        columnNumber: 77\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-danger\",\n      onClick: e => this.onGroupDelete(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3544,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3545,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3546,\n        columnNumber: 77\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3555,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 is-6 has-text-weight-bold pt-3',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3556,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3558,\n        columnNumber: 65\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_GROUPBY\"\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: 'button is-light is-small ml-3',\n      onClick: e => this.onCondition(e, 5),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3560,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      className: 'icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3561,\n        columnNumber: 69\n      }\n    })))), selectedRecord1['group'] && selectedRecord1['group'].length > 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field is-grouped is-grouped-multiline is-scrollable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3569,\n        columnNumber: 57\n      }\n    }, selectedRecord1['group'] && selectedRecord1['group'].map((item, index) => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"control\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3571,\n          columnNumber: 72\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"tags has-addons\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3572,\n          columnNumber: 69\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-info\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3573,\n          columnNumber: 73\n        }\n      }, item.groupTable && item.groupTable.label), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-success\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3574,\n          columnNumber: 73\n        }\n      }, item.groupColumn && item.groupColumn.label), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"tag is-light is-danger is-clickable\",\n        tabindex: \"0\",\n        onClick: e => {\n          this.onGroupChildDelete(e, index);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3576,\n          columnNumber: 73\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"delete is-small is-marginless\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 3577,\n          columnNumber: 77\n        }\n      }))));\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: `card-content pt-3 pb-0 ${selectedRecord1['group'] && selectedRecord1['group'].length > 0 || selectedRecord1['summarize'] && selectedRecord1['summarize'].length > 0 ? 'is-disabled' : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3587,\n        columnNumber: 49\n      }\n    }, selectedRecord1['Limit'] && selectedRecord1['Limit'] !== 0 ? /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3591,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column1 is-6 has-text-weight-bold pt-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3592,\n        columnNumber: 61\n      }\n    }, \"Limit\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"column1 is-6 has-text-right-tablet has-text-centered\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3593,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons is-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3594,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-info\",\n      onClick: e => this.onLimitEdit(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3595,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3596,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPen,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3598,\n        columnNumber: 77\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"button is-small is-light is-danger\",\n      onClick: e => this.onLimitDelete(e),\n      type: \"button\",\n      tabindex: \"0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3601,\n        columnNumber: 69\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3602,\n        columnNumber: 73\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTimes,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3603,\n        columnNumber: 77\n      }\n    })))))) : /*#__PURE__*/React.createElement(\"div\", {\n      className: 'columns1 mb-0',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3612,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 is-6 has-text-weight-bold pt-3',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3613,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3615,\n        columnNumber: 65\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_LIMIT\"\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: 'button is-light is-small ml-3',\n      onClick: e => this.onCondition(e, 6),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3617,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      className: 'icon',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3618,\n        columnNumber: 69\n      }\n    })))), selectedRecord1['Limit'] && selectedRecord1['Limit'] !== 0 && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"field is-grouped is-grouped-multiline is-scrollable\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3626,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3627,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"tags has-addons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3628,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tag is-light is-info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3629,\n        columnNumber: 69\n      }\n    }, \"Limit\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"tag is-light is-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3630,\n        columnNumber: 69\n      }\n    }, selectedRecord1['Limit'])))))))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1  is-fullheight-with-navbar-custom is-hidden-touch',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3647,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'column1 is-narrow',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3648,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'hero-body',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3649,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'box has-background-dark p-2 mb-3',\n      id: \"code-display\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3651,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"pre\", {\n      className: \"language-sql overflow-vertical\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3652,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"code\", {\n      className: \"language-sql\",\n      dangerouslySetInnerHTML: {\n        __html: this.queryDesignFormation(selectedRecord1, this.state.avaliableColumns)\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3653,\n        columnNumber: 49\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons is-right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3656,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: () => this.onDownloadClick(selectedRecord1, this.state.avaliableColumns),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3657,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faDownload,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3658,\n        columnNumber: 49\n      }\n    }), '  ', this.props.intl.formatMessage({\n      id: \"IDS_DOWNLOADSQL\"\n    })), /*#__PURE__*/React.createElement(Button, {\n      className: \"btn-user btn-primary-blue\",\n      onClick: e => navigator.clipboard.writeText(this.filterQueryFormation(selectedRecord1, this.state.avaliableColumns)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3662,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      className: \"\",\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3663,\n        columnNumber: 49\n      }\n    }), '  ', this.props.intl.formatMessage({\n      id: \"IDS_COPYSQL\"\n    }))))))), this.state.showFilter ? /*#__PURE__*/React.createElement(FilterCondition, {\n      modalBody: this.modalDesign(),\n      openAlertModal: this.state.showFilter,\n      modalTitle: this.state.filterTitle,\n      closeModal: this.closeAlertModal,\n      onSaveClick: e => this.executeClick(e),\n      executeCenter: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3674,\n        columnNumber: 33\n      }\n    }) : \"\") : /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3687,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3688,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3689,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(ListComponent, {\n      onClick: this.onClickTable,\n      data: this.props.tableName || [],\n      searchRef: this.props.filtersearchRef // titleHead={true}\n      ,\n      titleHead: this.props.intl.formatMessage({\n        id: \"IDS_TABLES\"\n      }),\n      headerName: this.props.intl.formatMessage({\n        id: \"IDS_TABLES\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3691,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 9,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3701,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: 'tableright',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3702,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3703,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTable,\n      size: \"lg\",\n      className: 'fa-7x tableColor',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3704,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"font-weight-bold \",\n      style: {\n        'padding': '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 3706,\n        columnNumber: 37\n      }\n    }, this.props.intl.formatMessage({\n      id: \"IDS_PLEASESELECTATABLE\"\n    })))))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nexport default connect(mapStateToProps, {})(injectIntl(SqlBuilderNewDesign));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dashboard/SqlBuilderNewDesign.jsx"],"names":["faAd","faCopy","faDownload","faEdit","faMinus","faPen","faPenAlt","faPencilAlt","faPlus","faTable","faTimes","faTrash","faWindowClose","FontAwesomeIcon","React","Button","Card","Col","Form","InputGroup","Nav","Row","injectIntl","FormattedMessage","connect","FilterCondition","ListComponent","FormSelectSearch","ListWrapper","constructOptionList","convertDateTimetoStringDBFormat","stringOperatorData","numericOperatorData","joinCondition","joinConditionData","orderByList","aggregateFunction","summarizeOperatorData","dateConditionData","FormInput","FormNumericInput","toast","ButtonMultiSelectDropDown","DateTimePicker","SqlBuilderNewDesign","Component","constructor","props","tableDataStateChange","event","setState","dataStateTable","dataState","onClickTable","item","selectedRecord","avaliableColumns","avaliableColumnsForMultiSelect","queryFormation","label","stabledisplayname","value","Param","type","tableName","tabledisplayName","sql","undefined","tableList","filter","p","stable","constructData1","state","listColumnForMultiSelect","constructData2","map","index","parentTableIndex","options","i","index1","constructData","scolumndisplayname","str","scolumnname","length","onClose","onfilterChange","comboValue","columnLabel","conditionType","summarizeCombo","summarize","summarizeCondition","push","summarizeTable","summarizeColumn","filterTableNewAddedList","change","filterColumn","filterCondition","filterValueType","filterValue","changeData","splice","filterNew","columndatatype","onSortChange","sortNew","onSummarizeChange","summarizeNew","onGroupChange","groupNew","closeAlertModal","filterType","showFilter","filterNewCondition","listOldTableColumn","listNewTableColumn","filterTableJoin","filterTableNewAdded","filterTableNewAddButton","filterTableOld","filterTableOldColumn","filterTableNew","filterTableNewColumn","LimitNew","joinAliasName","filterTitle","intl","formatMessage","id","onFilterInputOnChange","target","name","onjoinAliasName","onFilterNumericInputChange","handleDateChange","onNumericLimitChange","onCondition","e","summarizeLoad","summarizeLoadOnly","items","symbol","onComboFieldChange","filed","onJoinChange","columnName","get","checkFilter","filterList","check","filterTable","checkJoin","joinList","checkssg","List","sortTable","sortColumn","sortCondition","groupTable","groupColumn","onMoreClick","warn","onJoinAddClick","executeClick","filterEdit","parentIndex","joinTableCheck","checkTableName","aliasTableName","val","item4","data","data1","selectedColumn","stablenameList","newList","newTable","oldTable","newTableColumn","oldTableColumn","TableJoin","onInputJoinSelect","modalDesign","x","Date","Login","userInfo","date","onFilterModalDelete","listTables","onJoinChildDelete","onSortModalDelete","onSummarizeModalDelete","onGroupModalDelete","filterQueryFormation","group","isjsoncolumn","ismultilingual","jsoncolumnname","scolumn","parametername","TableJoining","Table","item1","sortIndex","findIndex","onFilterSummarizeEdit","onFilterSummarizeDelete","onFilterSummarizeChildDelete","childIndex","slice","onFilterEdit","onFilterDelete","onFilterChildDelete","onLimitDelete","onLimitEdit","onJoinTableDelete","onSortDelete","onSortChildDelete","preventDefault","stopPropagation","onSortEdit","onSummarizeDelete","onSummarizeChildDelete","filterSummarize","newfilterSummarize","onSummarizeEdit","onGroupDelete","onGroupChildDelete","onDownloadClick","query","blob","Blob","url","URL","createObjectURL","link","document","createElement","download","href","click","onGroupEdit","queryDesignFormation","skip","searchRef","createRef","newTable1","tableAlias","updateOldAliasToNewAlis","componentDidMount","TableList","console","log","render","selectedRecord1","filterParam","selectedTable","item2","Object","keys","index2","__html","navigator","clipboard","writeText","filtersearchRef","mapStateToProps"],"mappings":"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","sourcesContent":["import { faAd, faCopy, faDownload, faEdit, faMinus, faPen, faPenAlt, faPencilAlt, faPlus, faTable, faTimes, faTrash, faWindowClose } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\nimport { Button, Card, Col, Form, InputGroup, Nav, Row } from 'react-bootstrap';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { connect } from 'react-redux';\r\nimport FilterCondition from './FilterCondition';\r\nimport ListComponent from './ListComponent';\r\nimport './SqlBuilderDesign.css'\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport { constructOptionList, convertDateTimetoStringDBFormat } from '../../components/CommonScript';\r\nimport {\r\n    stringOperatorData, numericOperatorData, joinCondition,\r\n    joinConditionData, orderByList, aggregateFunction, summarizeOperatorData, dateConditionData\r\n} from './SqlBuilderFilterType'\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport { toast } from 'react-toastify';\r\nimport ButtonMultiSelectDropDown from './ButtonDropdown';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\n\r\nclass SqlBuilderNewDesign extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = ({\r\n            listTables: [],\r\n            listColumnForMultiSelect: [],\r\n            dataStateTable: { skip: 0 },\r\n\r\n        });\r\n        this.searchRef=React.createRef();\r\n    }\r\n    tableDataStateChange = (event) => {\r\n        this.setState({\r\n            dataStateTable: event.dataState\r\n        });\r\n    }\r\n    onClickTable = (item) => {\r\n\r\n        // let selectedRecord = this.state.selectedRecord;\r\n        //let avaliableColumns = [];\r\n\r\n        const { selectedRecord, avaliableColumns, avaliableColumnsForMultiSelect } = this.queryFormation({ selectedRecord: {}, item }, 1);\r\n        selectedRecord['selectedTable'] = item;\r\n\r\n        selectedRecord['stablename'] = [{ label: item.stabledisplayname, value: 0, item: item }];\r\n        // selectedRecord['stablename'+0]= \r\n        this.setState({ selectedRecord, avaliableColumns, avaliableColumnsForMultiSelect })\r\n    }\r\n\r\n    queryFormation = (Param, type) => {\r\n        const selectedRecord = Param.selectedRecord || {};\r\n        let avaliableColumns = []\r\n        let avaliableColumnsForMultiSelect = []\r\n        if (type === 1) {\r\n            const tableName = Param.item.tableName\r\n            const tabledisplayName = Param.item.stabledisplayname\r\n            if (selectedRecord.sql === undefined || selectedRecord.sql === '') {\r\n\r\n                selectedRecord['sql'] = \"SELECT * FROM \" + tableName + \" \\\"\" + tabledisplayName + \"\\\"\";\r\n                avaliableColumns = this.props.tableList.filter(p => p.stable === tableName);\r\n\r\n                let constructData1 = this.state.listColumnForMultiSelect && this.state.listColumnForMultiSelect.filter(item => item.value === tableName);\r\n                let constructData2 = constructData1 && constructData1.map((item, index) => {\r\n                    return {\r\n                        label: item.label, value: 0, item: { ...item.item, parentTableIndex: 0 }\r\n                        , options: item.options.map((i, index1) => {\r\n                            return { label: i.label, value: index1, item: { ...i.item, parentTableIndex: 0 } }\r\n                        })\r\n                    }\r\n\r\n                })\r\n\r\n                let constructData = avaliableColumns.map((item, index) => {\r\n                    return { label: item.scolumndisplayname, value: index, item: { ...item, parentTableIndex: 0 } }\r\n\r\n                })\r\n                selectedRecord['scolumnname'] = constructData;\r\n                avaliableColumns = constructData;\r\n                avaliableColumnsForMultiSelect = constructData2\r\n            }\r\n        }\r\n        else if (type === 2) {\r\n            let str = \"\";\r\n            str = \"SELECT \";\r\n            if (selectedRecord.scolumnname.length !== this.state.avaliableColumns.length) {\r\n                selectedRecord.scolumnname.map((item, index) => {\r\n                    if (selectedRecord.scolumnname.length - 1 !== index) {\r\n                        str = str + \"\\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.value + \"\\\" \\\"\" + item.label + \"\\\", \"\r\n                    } else {\r\n                        str = str + \"\\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.value + \"\\\" \\\"\" + item.label + \"\\\" \"\r\n                    }\r\n\r\n\r\n                })\r\n            } else {\r\n                str = str + \" * \";\r\n            }\r\n\r\n            str = str + \" FROM \"\r\n            selectedRecord['stablename'].map(item => {\r\n                str = str + item.value + \" \\\"\" + item.label + \"\\\"\"\r\n            })\r\n            selectedRecord['sql'] = str;\r\n        }\r\n\r\n        return { selectedRecord, avaliableColumns, avaliableColumnsForMultiSelect };\r\n\r\n    }\r\n\r\n    onClose = event => {\r\n        this.setState({ selectedRecord: {} })\r\n    }\r\n\r\n    onfilterChange = (comboValue, columnLabel, conditionType, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        let summarizeCombo = []\r\n        if (conditionType === 'table') {\r\n            if (comboValue.item.summarize) {\r\n                selectedRecord['summarize'].map((item, index) => {\r\n                    if (item.summarizeCondition.value === \"COUNT\") {\r\n                        summarizeCombo.push({ label: (item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\"), value: index, item: { ...item, summarize: true } })\r\n                    } else if (item.summarizeCondition.value === \"DISTINCT\") {\r\n                        summarizeCombo.push({ label: (item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\"), value: index, item: { ...item, summarize: true } })\r\n                    }\r\n                })\r\n            }\r\n\r\n            const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n            const change = { ...filterTableNewAddedList[index], [columnLabel]: comboValue, filterColumn: undefined, filterCondition: undefined, filterValueType: undefined, filterValue: undefined }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n            this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData }, summarizeCombo })\r\n        }\r\n        else if (conditionType === 'column') {\r\n            const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n            const change = {\r\n                ...filterTableNewAddedList[index], [columnLabel]: comboValue,\r\n                filterCondition: undefined, filterValueType: undefined, filterValue: undefined\r\n            }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n            this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData }, summarizeCombo })\r\n        }\r\n        else if (conditionType === 'condition') {\r\n            const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n            const change = { ...filterTableNewAddedList[index], [columnLabel]: comboValue }\r\n\r\n            let filterValueType = undefined\r\n            if (comboValue.value !== 'IN' &&\r\n                comboValue.value !== '=' &&\r\n                comboValue.value !== '!=' &&\r\n                comboValue.value !== '<' &&\r\n                comboValue.value !== '>' &&\r\n                comboValue.value !== '>=' &&\r\n                comboValue.value !== '<=' &&\r\n                ((change.filterColumn.item.columndatatype === 'string'\r\n                    && comboValue.value !== 'NOT') ||\r\n                    (change.filterColumn.item.columndatatype === 'date'\r\n                        && (comboValue.value !== 'NOT' || comboValue.value !== 'ON')))\r\n\r\n            ) {\r\n                filterValueType = { label: \"Pre-Defined Values\", value: 2 }\r\n                change['filterValueType'] = filterValueType\r\n            } else {\r\n                change['filterValueType'] = undefined\r\n            }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change, filterValue: undefined }, ...filterTableNewAddedList.splice(index + 1)]\r\n            this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData }, summarizeCombo })\r\n        }\r\n        else if (conditionType === 'valueType') {\r\n            const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n            const change = { ...filterTableNewAddedList[index], [columnLabel]: comboValue, filterValue: undefined }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n            this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData }, summarizeCombo })\r\n        }\r\n        else if (conditionType === 'joinCondition') {\r\n            //const filterTableNewAddedList = { ...selectedRecord[columnLabel] }\r\n            this.setState({ selectedRecord: { ...selectedRecord, [columnLabel]: comboValue }, summarizeCombo })\r\n\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    onSortChange = (comboValue, columnLabel, conditionType, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n\r\n        const filterTableNewAddedList = [...selectedRecord['sortNew']]\r\n        const change = { ...filterTableNewAddedList[index], [columnLabel]: comboValue }\r\n\r\n        switch (conditionType) {\r\n            case 'table':\r\n                change['sortColumn'] = undefined\r\n                // selectedRecord['sortNew'][index][columnLabel] = comboValue;\r\n                break;\r\n        }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, sortNew: changeData } })\r\n\r\n    }\r\n\r\n    onSummarizeChange = (comboValue, columnLabel, conditionType, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n\r\n\r\n        const filterTableNewAddedList = [...selectedRecord['summarizeNew']]\r\n        const change = { ...filterTableNewAddedList[index], [columnLabel]: comboValue }\r\n        switch (conditionType) {\r\n            case 'table':\r\n                change['summarizeColumn'] = undefined\r\n                change['summarizeCondition'] = undefined\r\n                // selectedRecord['summarizeNew'][index][columnLabel] = comboValue;\r\n                break;\r\n            case 'column':\r\n                change['summarizeCondition'] = undefined\r\n                // selectedRecord['summarizeNew'][index][columnLabel] = comboValue;\r\n                break;\r\n            // case 'condition':\r\n            //     selectedRecord['summarizeNew'][index][columnLabel] = comboValue;\r\n            //     break;\r\n\r\n        }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, summarizeNew: changeData } })\r\n\r\n    }\r\n\r\n    onGroupChange = (comboValue, columnLabel, conditionType, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n\r\n        const filterTableNewAddedList = [...selectedRecord['groupNew']]\r\n        const change = { ...filterTableNewAddedList[index], [columnLabel]: comboValue }\r\n        switch (conditionType) {\r\n            case 'table':\r\n                change['groupColumn'] = undefined\r\n                // selectedRecord['groupNew'][index][columnLabel] = comboValue;\r\n                break;\r\n            // case 'column':\r\n            //     selectedRecord['groupNew'][index][columnLabel] = comboValue;\r\n            //     break;\r\n        }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, groupNew: changeData } })\r\n\r\n    }\r\n\r\n\r\n    closeAlertModal = event => {\r\n        const selectedRecord = this.state.selectedRecord || {}\r\n        if (this.state.filterType === 1) {\r\n\r\n            this.setState({\r\n                showFilter: false,\r\n                selectedRecord: {\r\n                    ...selectedRecord, filterNew: [],\r\n                    filterNewCondition: []\r\n                },\r\n                listOldTableColumn: [], listNewTableColumn: []\r\n            })\r\n\r\n        }\r\n        else if (this.state.filterType === 2) {\r\n            this.setState({\r\n                showFilter: false,\r\n                selectedRecord: {\r\n                    ...selectedRecord, filterTableJoin: {},\r\n                    filterTableNewAdded: [], filterTableNewAddButton: false\r\n                    , filterTableOld: {}, filterTableOldColumn: {},\r\n                    filterTableNew: {}, filterTableNewColumn: {}\r\n                },\r\n                listOldTableColumn: [], listNewTableColumn: []\r\n            })\r\n\r\n        }\r\n        else if (this.state.filterType === 3) {\r\n\r\n            this.setState({\r\n                showFilter: false, selectedRecord: { ...selectedRecord, sortNew: [] },\r\n                listOldTableColumn: [], listNewTableColumn: []\r\n            })\r\n\r\n        }\r\n        else if (this.state.filterType === 4) {\r\n\r\n            this.setState({\r\n                showFilter: false, selectedRecord: { ...selectedRecord, summarizeNew: [] },\r\n                listOldTableColumn: [], listNewTableColumn: []\r\n            })\r\n\r\n        }\r\n\r\n        else if (this.state.filterType === 5) {\r\n\r\n            this.setState({\r\n                showFilter: false, selectedRecord: { ...selectedRecord, groupNew: [] },\r\n                listOldTableColumn: [], listNewTableColumn: []\r\n            })\r\n\r\n        }\r\n\r\n        else if (this.state.filterType === 6) {\r\n            this.setState({\r\n                showFilter: false, selectedRecord: { ...selectedRecord, LimitNew: 0 },\r\n                listOldTableColumn: [], listNewTableColumn: []\r\n            })\r\n\r\n        }\r\n\r\n        else if (this.state.filterType === 8) {\r\n            this.setState({\r\n                showFilter: true,\r\n                selectedRecord: { ...selectedRecord, joinAliasName: \"\" },\r\n                filterTitle: this.props.intl.formatMessage({ id: \"IDS_ADDJOIN\" }),\r\n                filterType: 2\r\n                // listOldTableColumn: [], listNewTableColumn: []\r\n            })\r\n\r\n        }\r\n\r\n        // this.setState({ showFilter: false,selectedRecord,\r\n        //      listOldTableColumn: [], listNewTableColumn: [] })\r\n    }\r\n\r\n    onFilterInputOnChange = (event, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n        const change = { ...filterTableNewAddedList[index], [event.target.name]: event.target.value }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n\r\n\r\n    }\r\n\r\n    onjoinAliasName = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        this.setState({ selectedRecord: { ...selectedRecord, [event.target.name]: event.target.value } });\r\n\r\n    }\r\n\r\n    onFilterNumericInputChange = (value, name, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n        const change = { ...filterTableNewAddedList[index], [name]: value }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n\r\n    }\r\n\r\n    handleDateChange = (columnLabel, value, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n        const change = { ...filterTableNewAddedList[index], [columnLabel]: value }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n    }\r\n\r\n\r\n    onNumericLimitChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n\r\n    onCondition = (e, conditionType) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        switch (conditionType) {\r\n            case 1:\r\n                let summarizeLoad = true;\r\n                let summarizeLoadOnly = false;\r\n                selectedRecord['filterNew'] = [{}]\r\n                selectedRecord['filterNewCondition'] = { label: \"And\", value: 'And', items: { label: \"And\", value: 1 } };\r\n\r\n                if (selectedRecord['summarize'] && selectedRecord['summarize'].length > 0) {\r\n                    if (selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].length > 0) {\r\n                        summarizeLoad = false\r\n                        // selectedRecord['filter'].map((item, index) => {\r\n                        //     if (item.filterTable.item.summarize) {\r\n                        //         summarizeLoad = false\r\n                        //     }\r\n                        // })\r\n                    } else {\r\n                        summarizeLoad = true\r\n                    }\r\n\r\n                } else {\r\n                    summarizeLoad = false\r\n                }\r\n\r\n\r\n                this.setState({\r\n                    summarizeLoadOnly,\r\n                    summarizeLoad,\r\n                    showFilter: true,\r\n                    filterTitle: this.props.intl.formatMessage({ id: \"IDS_ADDFILTER\" }),\r\n                    filterType: conditionType,\r\n                    selectedRecord\r\n                });\r\n                break;\r\n            case 2:\r\n                selectedRecord['filterTableNewAdded'] = [{}]\r\n                selectedRecord['filterTableNewAddButton'] = true\r\n                selectedRecord['filterNewTableCondition'] = { label: \"Inner Join\", value: \"INNER JOIN\", items: { label: \"Inner join\", value: \"INNER JOIN\", symbol: \"inner\" } };\r\n                this.setState({\r\n                    showFilter: true,\r\n                    filterTitle: this.props.intl.formatMessage({ id: \"IDS_ADDJOIN\" }),\r\n                    filterType: conditionType,\r\n                    selectedRecord\r\n                });\r\n                break;\r\n            case 3:\r\n                //selectedRecord['sortNew'] = [{ 'sortCondition': { label: \"Ascending\", value: \"asc\", items: { label: \"Ascending\", value: \"asc\" } } }]\r\n                this.setState({\r\n                    showFilter: true,\r\n                    filterTitle: this.props.intl.formatMessage({ id: \"IDS_SORT\" }),\r\n                    filterType: conditionType,\r\n                    selectedRecord: { ...selectedRecord, sortNew: [{ 'sortCondition': { label: \"Ascending\", value: \"asc\", items: { label: \"Ascending\", value: \"asc\" } } }] }\r\n                });\r\n                break;\r\n            case 4:\r\n                // selectedRecord['summarizeNew'] = [{}]\r\n                this.setState({\r\n                    showFilter: true,\r\n                    filterTitle: this.props.intl.formatMessage({ id: \"IDS_SUMMARIZE\" }),\r\n                    filterType: conditionType,\r\n                    selectedRecord: { ...selectedRecord, summarizeNew: [{}] }\r\n                });\r\n                break;\r\n            case 5:\r\n                //selectedRecord['groupNew'] = [{}]\r\n                this.setState({\r\n                    showFilter: true,\r\n                    filterTitle: this.props.intl.formatMessage({ id: \"IDS_ADDGROUP\" }),\r\n                    filterType: conditionType,\r\n                    selectedRecord: { ...selectedRecord, groupNew: [{}] }\r\n                });\r\n                break;\r\n            case 6:\r\n                this.setState({\r\n                    showFilter: true,\r\n                    filterTitle: this.props.intl.formatMessage({ id: \"IDS_ADDLIMIT\" }),\r\n                    filterType: conditionType,\r\n                    selectedRecord\r\n                });\r\n                break;\r\n\r\n        }\r\n\r\n    }\r\n\r\n    onComboFieldChange = (event, filed) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[filed] = event;\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n\r\n    onJoinChange = (value, columnName, type, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        if (type !== 'joinTableCondition') {\r\n            const filterTableNewAddedList = [...selectedRecord['filterTableNewAdded']]\r\n            const change = { ...filterTableNewAddedList[index], [columnName]: value }\r\n\r\n            let listNewTableColumn = this.state.listNewTableColumn || [];\r\n            let listOldTableColumn = this.state.listOldTableColumn || []\r\n            if (type === 'oldtable') {\r\n                change['filterTableOldColumn'] = undefined\r\n                listOldTableColumn = constructOptionList(this.props.tableList.filter(p => p.stable === value.item.tableName), 'scolumn', 'scolumndisplayname').get(\"OptionList\")\r\n            }\r\n            else if (type === 'newtable') {\r\n                change['filterTableNewColumn'] = undefined\r\n                listNewTableColumn = constructOptionList(this.props.tableList.filter(p => p.stable === value.item.tableName), 'scolumn', 'scolumndisplayname').get(\"OptionList\")\r\n            }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n            this.setState({ selectedRecord: { ...selectedRecord, 'filterTableNewAdded': changeData }, listNewTableColumn, listOldTableColumn })\r\n\r\n        } else {\r\n            this.setState({ selectedRecord: { ...selectedRecord, [columnName]: value } })\r\n        }\r\n    }\r\n\r\n    checkFilter = (filterList) => {\r\n        let check = [];\r\n        filterList.map((item, index) => {\r\n            if (item.filterTable && item.filterTable.item.summarize) {\r\n                if (item.filterColumn) {\r\n                    if (item.filterCondition) {\r\n                        if (item.filterValueType &&\r\n                            item.filterValueType.value === 1) {\r\n                            check.push(true)\r\n                        } else {\r\n                            if (item.filterValueType &&\r\n                                item.filterValueType.value === 2) {\r\n                                if (item.filterValue\r\n                                    && item.filterValue !== undefined && item.filterValue !== \"\") {\r\n                                    check.push(true)\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                }\r\n\r\n            } else if (item.filterTable) {\r\n                if (item.filterColumn) {\r\n                    if (item.filterCondition) {\r\n                        if (item.filterColumn.item.columndatatype === 'string') {\r\n                            if (item.filterCondition.value === '='\r\n                                || item.filterCondition.value === 'IN'\r\n                                || item.filterCondition.value === 'NOT') {\r\n                                if (item.filterValueType &&\r\n                                    item.filterValueType.value === 2) {\r\n                                    if (item.filterValue && item.filterValue !== \"\") {\r\n                                        check.push(true)\r\n                                    }\r\n                                } else {\r\n                                    if (item.filterValueType &&\r\n                                        item.filterValueType.value === 1) {\r\n                                        check.push(true)\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (item.filterCondition) {\r\n                                    check.push(true)\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (item.filterColumn.item.columndatatype === 'numeric') {\r\n                            if (item.filterCondition.value === '='\r\n                                || item.filterCondition.value === '!=' ||\r\n                                item.filterCondition.value === '>' ||\r\n                                item.filterCondition.value === '<' ||\r\n                                item.filterCondition.value === '>=' ||\r\n                                item.filterCondition.value === '<='\r\n                            ) {\r\n                                if (item.filterValueType &&\r\n                                    item.filterValueType.value === 2) {\r\n                                    if (item.filterValue && item.filterValue !== \"\") {\r\n                                        check.push(true)\r\n                                    }\r\n                                } else {\r\n                                    if (item.filterValueType\r\n                                        && item.filterValueType.value === 1) {\r\n                                        check.push(true)\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (item.filterCondition) {\r\n                                    check.push(true)\r\n                                }\r\n                            }\r\n                        }\r\n                        else if (item.filterColumn.item.columndatatype === 'date') {\r\n                            if (item.filterCondition.value === '='\r\n                                || item.filterCondition.value === 'NOT'\r\n                            ) {\r\n                                if (item.filterValueType &&\r\n                                    item.filterValueType.value === 2) {\r\n                                    if (item.filterValue && item.filterValue !== \"\") {\r\n                                        check.push(true)\r\n                                    }\r\n                                } else {\r\n                                    if (item.filterValueType &&\r\n                                        item.filterValueType.value === 1) {\r\n                                        check.push(true)\r\n                                    }\r\n                                }\r\n                            }\r\n                            else {\r\n                                if (item.filterCondition) {\r\n                                    check.push(true)\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return check.length === filterList.length ? true : false;\r\n    }\r\n\r\n\r\n    checkJoin = (joinList) => {\r\n        let check = [];\r\n        joinList.map((item, index) => {\r\n            if (item.filterTableOld) {\r\n                if (item.filterTableOldColumn) {\r\n                    if (item.filterTableNew) {\r\n                        if (item.filterTableNewColumn) {\r\n                            check.push(true)\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return check.length === joinList.length ? true : false;\r\n    }\r\n\r\n    checkssg = (List, type) => {\r\n        let check = [];\r\n        List.map((item, index) => {\r\n            if (type === 1) {\r\n                if (item.sortTable) {\r\n                    if (item.sortColumn) {\r\n                        if (item.sortCondition) {\r\n                            check.push(true)\r\n\r\n                        }\r\n                    }\r\n                }\r\n            } else if (type === 2) {\r\n                if (item.summarizeTable) {\r\n                    if (item.summarizeColumn) {\r\n                        if (item.summarizeCondition) {\r\n                            check.push(true)\r\n                        }\r\n                    }\r\n                }\r\n            } else {\r\n                if (item.groupTable) {\r\n                    if (item.groupColumn) {\r\n                        check.push(true)\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        return check.length === List.length ? true : false;\r\n    }\r\n\r\n    onMoreClick = (e, filterType) => {\r\n        const selectedRecord = this.state.selectedRecord || {}\r\n        switch (filterType) {\r\n\r\n            case 1:\r\n                let summarizeLoadOnly = this.state.summarizeLoadOnly\r\n                let summarizeLoad = this.state.summarizeLoad\r\n\r\n                if (this.checkFilter(selectedRecord['filterNew'])) {\r\n                    selectedRecord['filterNew'][selectedRecord['filterNew'].length] = {}\r\n                    if (selectedRecord['filterNew'][0]['filterTable'].item.summarize) {\r\n                        summarizeLoadOnly = true\r\n                    } else {\r\n                        summarizeLoad = false\r\n                        summarizeLoadOnly = false\r\n                    }\r\n\r\n                    this.setState({\r\n                        selectedRecord, summarizeLoadOnly, summarizeLoad\r\n                    })\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n                }\r\n                break;\r\n            case 2:\r\n                if (this.checkJoin(selectedRecord['filterTableNewAdded'])) {\r\n                    // selectedRecord['filterTableNewAddButton'] = true\r\n                    selectedRecord['filterTableNewAdded'] = [...selectedRecord['filterTableNewAdded'], {}]\r\n                    this.setState({\r\n                        selectedRecord\r\n                    })\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n                }\r\n\r\n                break;\r\n            case 3:\r\n                if (this.checkssg(selectedRecord['sortNew'], 1)) {\r\n                    selectedRecord['sortNew'][selectedRecord['sortNew'].length] = { 'sortCondition': { label: \"Ascending\", value: \"asc\", items: { label: \"Ascending\", value: \"asc\" } } }\r\n                    this.setState({\r\n                        selectedRecord\r\n                    })\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n                }\r\n\r\n                break;\r\n            case 4:\r\n                if (this.checkssg(selectedRecord['summarizeNew'], 2)) {\r\n                    selectedRecord['summarizeNew'][selectedRecord['summarizeNew'].length] = {}\r\n                    this.setState({\r\n                        selectedRecord\r\n                    })\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n                }\r\n                break;\r\n            case 5:\r\n                if (this.checkssg(selectedRecord['groupNew'], 3)) {\r\n                    selectedRecord['groupNew'][selectedRecord['groupNew'].length] = {}\r\n                    this.setState({\r\n                        selectedRecord\r\n                    })\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n                }\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    joinTableCheck(selectedRecord) {\r\n        let newTable1 = ''\r\n        let oldTable = ''\r\n        let check = true;\r\n        selectedRecord['filterTableNewAdded'].map((item, index) => {\r\n            if (index === 0) {\r\n                newTable1 = item.filterTableNew.label\r\n                oldTable = item.filterTableOld.label\r\n            }\r\n\r\n            if (index !== 0 && (newTable1 !== item.filterTableNew.label\r\n                || oldTable !== item.filterTableOld.label)) {\r\n                check = false\r\n            }\r\n\r\n        })\r\n\r\n        return check;\r\n\r\n    }\r\n\r\n\r\n    onJoinAddClick = (e, columnName, type, value) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (type === 'add') {\r\n            selectedRecord['filterTableNewAdded'] = selectedRecord['filterTableNewAdded'] || []\r\n\r\n            selectedRecord['filterTableNewAdded'][selectedRecord['filterTableNewAdded'].length] = {\r\n                'oldTable': selectedRecord['filterTableOld'],\r\n                'oldTableColumn': selectedRecord['filterTableOldColumn'],\r\n                'newTable': selectedRecord['filterTableNew'],\r\n                'newTableColumn': selectedRecord['filterTableNewColumn'],\r\n                'index': selectedRecord['filterTableNewAdded'][selectedRecord['filterTableNewAdded'].length]\r\n            }\r\n            selectedRecord['filterTableJoin'] = selectedRecord['filterTableNewAdded'][selectedRecord['filterTableNewAdded'].length - 1]\r\n\r\n        }\r\n        selectedRecord[columnName] = value;\r\n        selectedRecord['filterTableOld'] = {};\r\n        selectedRecord['filterTableOldColumn'] = {};\r\n        selectedRecord['filterTableNew'] = {};\r\n        selectedRecord['filterTableNewColumn'] = {};\r\n\r\n\r\n        this.setState({ selectedRecord, listOldTableColumn: [], listNewTableColumn: [] })\r\n    }\r\n\r\n\r\n\r\n    checkTableName(selectedRecord) {\r\n        let check = true;\r\n\r\n        const tableAlias = selectedRecord['joinTableAlias']\r\n        const index = selectedRecord['stablename'].findIndex(x => x.label === tableAlias)\r\n        if (index !== -1) {\r\n            check = false\r\n        }\r\n        return check;\r\n    }\r\n\r\n    updateOldAliasToNewAlis(selectedRecord, value) {\r\n        selectedRecord['filterTableNewAdded'].map((item) => {\r\n            item.filterTableNew.label = value\r\n            item.filterTableNew['item'].stabledisplayname = value\r\n            item.filterTableNewColumn['item'].stabledisplayname = value\r\n        })\r\n\r\n        // selectedRecord['filterTableNewAdded'].map((item) => {\r\n        //     item.filterTableNewColumn['item'].stabledisplayname = value\r\n        // })\r\n\r\n        return selectedRecord;\r\n    }\r\n\r\n    executeClick = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        if (this.state.filterType === 1) {\r\n            if (this.checkFilter(selectedRecord['filterNew'])) {\r\n                if (this.state.filterEdit) {\r\n                    selectedRecord['filter'] = selectedRecord['filter'] || []\r\n                    if (selectedRecord['filterNew'][0].filterTable.item.summarize) {\r\n                        selectedRecord['filterSummarize'] = selectedRecord['filterNew']\r\n                        selectedRecord['filterSummarizeJoinCondition'] = selectedRecord['filterSummarizeJoinCondition'] || {}\r\n                        selectedRecord['filterSummarizeJoinCondition'] = selectedRecord['filterNewCondition'] || {}\r\n                    } else {\r\n                        selectedRecord['filter'][this.state.parentIndex] = selectedRecord['filterNew']\r\n                        selectedRecord['filterJoinCondition'] = selectedRecord['filterJoinCondition'] || []\r\n                        selectedRecord['filterJoinCondition'][this.state.parentIndex] = selectedRecord['filterNewCondition'] || {}\r\n                    }\r\n\r\n                    selectedRecord['filterNew'] = [];\r\n                    selectedRecord['filterNewCondition'] = {};\r\n                } else {\r\n                    selectedRecord['filter'] = selectedRecord['filter'] || []\r\n                    selectedRecord['filterSummarize'] = selectedRecord['filterSummarize'] || []\r\n                    if (selectedRecord['filterNew'][0].filterTable.item.summarize) {\r\n                        selectedRecord['filterSummarize'] = selectedRecord['filterNew']\r\n                        selectedRecord['filterSummarizeJoinCondition'] = selectedRecord['filterSummarizeJoinCondition'] || {}\r\n                        selectedRecord['filterSummarizeJoinCondition'] = selectedRecord['filterNewCondition'] || {}\r\n\r\n                    } else {\r\n                        selectedRecord['filter'][selectedRecord['filter'].length] = selectedRecord['filterNew']\r\n                        selectedRecord['filterJoinCondition'] = selectedRecord['filterJoinCondition'] || []\r\n                        selectedRecord['filterJoinCondition'][selectedRecord['filterJoinCondition'].length] = selectedRecord['filterNewCondition'] || {}\r\n                    }\r\n\r\n\r\n                    selectedRecord['filterNew'] = [];\r\n                    selectedRecord['filterNewCondition'] = {};\r\n                }\r\n                this.setState({ selectedRecord, showFilter: false, filterEdit: false });\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n            }\r\n        }\r\n        else if (this.state.filterType === 2) {\r\n\r\n            if (this.checkJoin(selectedRecord['filterTableNewAdded'])) {\r\n                if (this.joinTableCheck(selectedRecord)) {\r\n\r\n                    // let avaliableColumns = this.state.avaliableColumns || []\r\n                    // let avaliableColumnsForMultiSelect = this.state.avaliableColumnsForMultiSelect || []\r\n\r\n                    // let constructData1 = this.state.listColumnForMultiSelect.filter(item => item.value === selectedRecord['filterTableNewAdded'][0].filterTableNew.value);\r\n                    // constructData1.map((item, index) => {\r\n                    //     avaliableColumnsForMultiSelect.push({\r\n                    //         label: item.label, value: avaliableColumnsForMultiSelect.length, item: { ...item.item, parentTableIndex: 0 }\r\n                    //         , options: item.options.map((i, index1) => {\r\n                    //             return { label: i.label, value: index1, item: { ...i.item, parentTableIndex: selectedRecord['stablename'].length } }\r\n                    //         })\r\n                    //     })\r\n\r\n                    // })\r\n\r\n\r\n                    // if (selectedRecord['stablename'].findIndex(x => x.value === selectedRecord['filterTableJoin'].newTable.value) === -1) {\r\n\r\n                    // this.props.tableList.filter(p => p.stable === selectedRecord['filterTableNewAdded'][0].filterTableNew.value).map((item, index) => {\r\n                    //     avaliableColumns.push({ label: item.scolumndisplayname, value: avaliableColumns.length, item: { ...item, parentTableIndex: selectedRecord['stablename'].length } });\r\n\r\n                    // })\r\n\r\n                    // const newTable = selectedRecord['filterTableJoin'].newTable;\r\n                    // newTable.value = selectedRecord['stablename'].length\r\n                    //selectedRecord['stablename'][selectedRecord['stablename'].length] = { ...selectedRecord['filterTableNewAdded'][0].filterTableNew, value: selectedRecord['stablename'].length }\r\n                    //selectedRecord['stablename'].push(newTable) \r\n                    //}\r\n\r\n                    // let newList = selectedRecord['filterTableNewAdded'].map((item, index) => {\r\n                    //     return {\r\n                    //         newTable: item.filterTableNew,\r\n                    //         oldTable: item.filterTableOld,\r\n                    //         newTableColumn: item.filterTableNewColumn,\r\n                    //         oldTableColumn: item.filterTableOldColumn,\r\n                    //     }\r\n                    // })\r\n                    // const newTable =\r\n                    //     selectedRecord['TableJoin'] = selectedRecord['TableJoin'] || [];\r\n                    // selectedRecord['TableJoin'][selectedRecord['TableJoin'].length] = {\r\n                    //     'Table': newList,\r\n                    //     'TableJoining': selectedRecord[\"filterNewTableCondition\"]\r\n                    // };\r\n\r\n                    // selectedRecord['filterTableJoin'] = {}\r\n                    // selectedRecord['filterTableNewAdded'] = []\r\n                    // selectedRecord['filterTableNewAddButton'] = false\r\n\r\n\r\n                    // this.filterQueryFormation(selectedRecord, avaliableColumns);\r\n                    // this.setState({ selectedRecord, showFilter: false,\r\n                    //      avaliableColumns, avaliableColumnsForMultiSelect ,filterType:8});\r\n\r\n                    this.setState({\r\n                        selectedRecord,\r\n                        filterType: 8\r\n                    });\r\n\r\n                } else {\r\n                    toast.warn('Joining Table In All Condition Must Be Same Table')\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n            }\r\n        }\r\n        else if (this.state.filterType === 3) {\r\n            if (this.checkssg(selectedRecord['sortNew'], 1)) {\r\n                selectedRecord['sort'] = selectedRecord['sort'] || []\r\n                selectedRecord['sort'] = selectedRecord['sortNew']\r\n                selectedRecord['sortNew'] = [];\r\n                //  this.filterQueryFormation(selectedRecord, this.state.avaliableColumns);\r\n                this.setState({ selectedRecord, showFilter: false });\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n            }\r\n        }\r\n        else if (this.state.filterType === 4) {\r\n            if (this.checkssg(selectedRecord['summarizeNew'], 2)) {\r\n                selectedRecord['summarize'] = selectedRecord['summarize'] || []\r\n                selectedRecord['summarize'] = selectedRecord['summarizeNew']\r\n                selectedRecord['summarizeNew'] = [];\r\n                //  this.filterQueryFormation(selectedRecord, this.state.avaliableColumns);\r\n                this.setState({ selectedRecord, showFilter: false });\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n            }\r\n        }\r\n        else if (this.state.filterType === 5) {\r\n            if (this.checkssg(selectedRecord['groupNew'], 3)) {\r\n                selectedRecord['group'] = selectedRecord['group'] || []\r\n                selectedRecord['group'] = selectedRecord['groupNew']\r\n                selectedRecord['groupNew'] = [];\r\n                // this.filterQueryFormation(selectedRecord, this.state.avaliableColumns);\r\n                this.setState({ selectedRecord, showFilter: false, filterTitle: \"Add AliasName\", });\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n            }\r\n        } else if (this.state.filterType === 6) {\r\n            if (selectedRecord['LimitNew']) {\r\n                selectedRecord['Limit'] = selectedRecord['LimitNew']\r\n                //  this.filterQueryFormation(selectedRecord, this.state.avaliableColumns);\r\n                this.setState({\r\n                    selectedRecord, showFilter: false\r\n                });\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERTHELIMIT\" }))\r\n            }\r\n        }\r\n        else if (this.state.filterType === 8) {\r\n\r\n            if (selectedRecord['joinTableAlias'] && selectedRecord['joinTableAlias'] !== '') {\r\n\r\n                if (this.checkTableName(selectedRecord)) {\r\n\r\n                    const aliasTableName = selectedRecord['joinTableAlias']\r\n                    // this.updateOldAliasToNewAlis(selectedRecord, selectedRecord['joinTableAlias'])\r\n                    const val = []\r\n                    const filterTableNewAdded = [...selectedRecord['filterTableNewAdded']];\r\n\r\n                    filterTableNewAdded.map((item4) => {\r\n                        const data = {\r\n                            ...item4, filterTableNew: { ...item4.filterTableNew, label: aliasTableName, item: { ...item4.filterTableNew.item, stabledisplayname: aliasTableName } },\r\n                            filterTableNewColumn: { ...item4.filterTableNewColumn, item: { ...item4.filterTableNewColumn.item, stabledisplayname: aliasTableName } }\r\n                        }\r\n                        // data.filterTableNew['label'] = selectedRecord['joinTableAlias']\r\n                        // data.filterTableNew['item']['stabledisplayname'] = selectedRecord['joinTableAlias']\r\n                        // data.filterTableNewColumn['item']['stabledisplayname'] = selectedRecord['joinTableAlias']\r\n\r\n                        val.push({ ...data })\r\n                    })\r\n\r\n                    const avaliableColumns = this.state.avaliableColumns || []\r\n\r\n                    const data1 = this.props.tableList.filter(p => p.stable === val[0].filterTableNew.value);\r\n                    const selectedColumn = [...selectedRecord['scolumnname']]\r\n                    data1 && data1.map((item, index) => {\r\n                        const data = { label: item.scolumndisplayname, value: avaliableColumns.length, item: { ...item, stabledisplayname: aliasTableName, parentTableIndex: selectedRecord['stablename'].length } }\r\n                        avaliableColumns.push(data);\r\n                        selectedColumn.push(data)\r\n                    })\r\n                    selectedRecord['scolumnname'] = [...selectedColumn]\r\n                    const stablenameList = [...selectedRecord['stablename']]\r\n\r\n                    stablenameList.push({ ...val[0].filterTableNew, value: stablenameList.length })\r\n                    selectedRecord['stablename'] = stablenameList\r\n\r\n                    const newList = val.map((item, index) => {\r\n                        return {\r\n                            newTable: { ...item.filterTableNew },\r\n                            oldTable: { ...item.filterTableOld },\r\n                            newTableColumn: { ...item.filterTableNewColumn },\r\n                            oldTableColumn: { ...item.filterTableOldColumn },\r\n                        }\r\n                    })\r\n                    const TableJoin = selectedRecord['TableJoin'] || [];\r\n                    TableJoin.push({\r\n                        'Table': newList,\r\n                        'TableJoining': { ...selectedRecord[\"filterNewTableCondition\"] }\r\n                    })\r\n\r\n                    selectedRecord['TableJoin'] = TableJoin\r\n\r\n                    selectedRecord['filterTableJoin'] = {}\r\n                    selectedRecord['filterTableNewAdded'] = []\r\n                    selectedRecord['filterTableNewAddButton'] = false\r\n                    selectedRecord['joinTableAlias'] = undefined\r\n                    // this.filterQueryFormation(selectedRecord, avaliableColumns);\r\n                    this.setState({\r\n                        selectedRecord, showFilter: false,\r\n                        avaliableColumns\r\n                    });\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_ALIASNAMEALREADYEXISTS\" }));\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_ENTERTHEALIASNAME\" }));\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    onInputJoinSelect = (e, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {}\r\n        selectedRecord['filterTableJoin'] = selectedRecord['filterTableNewAdded'][index]\r\n        this.setState({ selectedRecord })\r\n    }\r\n\r\n    modalDesign = () => {\r\n        const selectedRecord = this.state.selectedRecord || {}\r\n        switch (this.state.filterType) {\r\n            case 1:\r\n                return (\r\n                    <form>\r\n                        <section className={'modal-card-body'}>\r\n                            {selectedRecord['filterNew'] && selectedRecord['filterNew'].map((item, index) => {\r\n                                return <div className={'field has-addons filterheight'}>\r\n                                    <div class=\"control is-expanded \">\r\n                                        <div class=\"select is-fullwidth\">\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"tableName\"}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                                showOption={true}\r\n                                                options={\r\n                                                    this.state.summarizeLoadOnly ?\r\n                                                        [{\r\n                                                            label: \"summarization\",\r\n                                                            value: selectedRecord['stablename'].length, item: { summarize: \"true\" }\r\n                                                        }] : this.state.summarizeLoad ?\r\n                                                            [...selectedRecord['stablename'], {\r\n                                                                label: \"summarization\",\r\n                                                                value: selectedRecord['stablename'].length, item: { summarize: \"true\" }\r\n                                                            }]\r\n                                                            :\r\n                                                            selectedRecord['stablename']\r\n                                                }\r\n                                                value={item[\"filterTable\"] && item[\"filterTable\"] || \"\"}\r\n                                                onChange={value => this.onfilterChange(value, \"filterTable\", 'table', index)}\r\n                                            ></FormSelectSearch>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"control is-expanded\">\r\n                                        <div class=\"select is-fullwidth\">\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"filterColumn\"}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                showOption={true}\r\n                                                options={item[\"filterTable\"] && item[\"filterTable\"].item ? item[\"filterTable\"].item.summarize ? this.state.summarizeCombo :\r\n                                                    this.state.avaliableColumns.filter(x => x.item.parentTableIndex === item[\"filterTable\"].value)\r\n                                                    : []}\r\n                                                value={item[\"filterColumn\"] && item[\"filterColumn\"] || \"\"}\r\n                                                onChange={value => this.onfilterChange(value, \"filterColumn\", 'column', index)}\r\n                                            ></FormSelectSearch>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"control is-expanded\">\r\n                                        <div class=\"select is-fullwidth\">\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"sviewname\"}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                                showOption={true}\r\n                                                options={item[\"filterColumn\"] && item[\"filterColumn\"].item ?\r\n                                                    item[\"filterColumn\"].item.summarize ? summarizeOperatorData :\r\n                                                        item[\"filterColumn\"].item.columndatatype === 'string' ?\r\n                                                            stringOperatorData :\r\n                                                            item[\"filterColumn\"].item.columndatatype === 'numeric' ?\r\n                                                                numericOperatorData\r\n                                                                : item[\"filterColumn\"].item.columndatatype === 'date' ?\r\n                                                                    dateConditionData\r\n                                                                    : stringOperatorData : \"\"}\r\n\r\n                                                value={item[\"filterCondition\"] !== undefined ? item[\"filterCondition\"] : \"\"}\r\n                                                onChange={value => this.onfilterChange(value, \"filterCondition\", 'condition', index)}\r\n                                            ></FormSelectSearch>\r\n                                        </div>\r\n                                    </div>\r\n                                    {(item[\"filterCondition\"] && item[\"filterCondition\"].value) ?\r\n                                        (item[\"filterCondition\"].value === 'IN' ||\r\n                                            item[\"filterCondition\"].value === '=' ||\r\n                                            item[\"filterCondition\"].value === '!=' ||\r\n                                            item[\"filterCondition\"].value === '<' ||\r\n                                            item[\"filterCondition\"].value === '>' ||\r\n                                            item[\"filterCondition\"].value === '>=' ||\r\n                                            item[\"filterCondition\"].value === '<=' ||\r\n                                            (item.filterColumn.item.columndatatype === 'date'\r\n                                                && item[\"filterCondition\"].value === 'NOT')\r\n\r\n                                        ) ?\r\n                                            <div class=\"control is-expanded\">\r\n                                                <div class=\"select is-fullwidth\">\r\n                                                    <FormSelectSearch\r\n                                                        formGroupClassName=\"remove-floating-label-margin\"\r\n                                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_PARAMETERTYPE\" })}\r\n                                                        isSearchable={true}\r\n                                                        name={\"sviewname\"}\r\n                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PARAMETERTYPE\" })}\r\n                                                        showOption={true}\r\n                                                        options={[{ label: 'Pre-Defined Values', value: 2 },\r\n                                                        { label: 'Runtime Parameter', value: 1 }\r\n                                                        ]}\r\n                                                        value={item[\"filterValueType\"] !== undefined ? item[\"filterValueType\"] : \"\"}\r\n                                                        onChange={value => this.onfilterChange(value, \"filterValueType\", 'valueType', index)}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            : \"\"\r\n                                        : \"\"}\r\n\r\n                                    <div className={\"control \"}>\r\n                                        {(item[\"filterCondition\"] && item[\"filterCondition\"].value\r\n                                            && item[\"filterColumn\"]) ?\r\n                                            (item[\"filterValueType\"] && item[\"filterValueType\"].value\r\n                                                && item[\"filterValueType\"].value === 2) ?\r\n                                                item[\"filterColumn\"].item.summarize ?\r\n                                                    <FormNumericInput\r\n                                                        name={\"filterValue\"}\r\n                                                        label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                        type=\"number\"\r\n                                                        value={item[\"filterValue\"]}\r\n                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                        strict={true}\r\n                                                        // min={0}\r\n                                                        //max={99999999.99}\r\n                                                        maxLength={10}\r\n                                                        onChange={(value) => this.onFilterNumericInputChange(value, \"filterValue\", index)}\r\n                                                        noStyle={true}\r\n                                                        //precision={2}\r\n                                                        //isMandatory={true}\r\n                                                        className=\"form-control\"\r\n                                                        errors=\"Please provide a valid number.\"\r\n                                                    />\r\n                                                    :\r\n                                                    item[\"filterColumn\"].item.columndatatype === 'string' ?\r\n                                                        (item[\"filterCondition\"].value !== 'IS NULL' &&\r\n                                                            item[\"filterCondition\"].value !== 'IS NOT NULL' &&\r\n                                                            item[\"filterCondition\"].value !== 'PRESENT' &&\r\n                                                            item[\"filterCondition\"].value !== 'BLANK') ?\r\n                                                            <FormInput\r\n                                                                label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                name=\"filterValue\"\r\n                                                                type=\"text\"\r\n                                                                onChange={(event) => this.onFilterInputOnChange(event, index)}\r\n                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                isMandatory={true}\r\n                                                                required={true}\r\n                                                                maxLength={100}\r\n                                                            /> : \"\"\r\n                                                        :\r\n                                                        item[\"filterColumn\"].item.columndatatype === 'numeric' ?\r\n                                                            (item[\"filterCondition\"].value !== 'NULL' &&\r\n                                                                item[\"filterCondition\"].value !== 'NOT NULL') ?\r\n                                                                item[\"filterCondition\"].value === 'IN' ?\r\n                                                                    <FormInput\r\n                                                                        label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        name=\"filterValue\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={(event) => this.onFilterInputOnChange(event, index)}\r\n                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                        isMandatory={true}\r\n                                                                        required={true}\r\n                                                                        maxLength={100}\r\n                                                                    />\r\n                                                                    :\r\n                                                                    <FormNumericInput\r\n                                                                        name={\"filterValue\"}\r\n                                                                        label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        type=\"number\"\r\n                                                                        value={item[\"filterValue\"]}\r\n                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        strict={true}\r\n                                                                        //min={0}\r\n                                                                        //max={99999999.99}\r\n                                                                        maxLength={10}\r\n                                                                        onChange={(value) => this.onFilterNumericInputChange(value, \"filterValue\", index)}\r\n                                                                        noStyle={true}\r\n                                                                        //precision={2}\r\n                                                                        //isMandatory={true}\r\n                                                                        className=\"form-control\"\r\n                                                                        errors=\"Please provide a valid number.\"\r\n                                                                    />\r\n\r\n                                                                : \"\"\r\n                                                            : item[\"filterColumn\"].item.columndatatype === 'date' ?\r\n                                                                (item[\"filterCondition\"].value === '=' ||\r\n                                                                    item[\"filterCondition\"].value === '<'\r\n                                                                    || item[\"filterCondition\"].value === '>'\r\n                                                                    || item[\"filterCondition\"].value === 'NOT'\r\n                                                                ) ?\r\n                                                                    <DateTimePicker\r\n                                                                        name={\"filterValue\"}\r\n                                                                        label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        className='form-control'\r\n                                                                        placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                                                        selected={item[\"filterValue\"] ? item[\"filterValue\"] : new Date()}\r\n                                                                        dateFormat={this.props.Login.userInfo[\"ssitedatetime\"]}\r\n                                                                        timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                                                                        showTimeInput={true}\r\n                                                                        onChange={date => this.handleDateChange(\"filterValue\", date, index)}\r\n                                                                        value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                    />\r\n                                                                    : \"\"\r\n                                                                : \"\"\r\n                                                : \"\"\r\n                                            : \"\"\r\n\r\n                                        }\r\n                                    </div>\r\n                                    <div className={\"control\"}>\r\n                                        {selectedRecord['filterNew'].length > 1 &&\r\n                                            <Button className={\"button is-light is-danger\"}\r\n                                                onClick={() => this.onFilterModalDelete(index)}\r\n                                                type=\"button\" tabindex=\"0\">\r\n                                                <span className={\"icon\"}>\r\n                                                    <FontAwesomeIcon icon={faMinus} />\r\n                                                </span>\r\n                                            </Button>\r\n                                        }\r\n                                    </div>\r\n                                </div>\r\n                            })}\r\n                            <div className={'buttons is-right'}>\r\n                                <Button className={'button is-light is-info is-small'}\r\n                                    onClick={(e) => this.onMoreClick(e, this.state.filterType)} type=\"button\" tabindex=\"0\">\r\n\r\n                                    <span className={\"icon\"}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </span>\r\n                                    <span>{this.props.intl.formatMessage({ id: \"IDS_ADDMORE\" })}</span>\r\n                                </Button>\r\n                            </div>\r\n                            {selectedRecord['filterNew'].length > 1 || (selectedRecord['filter'] && selectedRecord['filter'].length > 0) ?\r\n                                <div className={'field has-text-centered'}>\r\n                                    {/* <div className={'select is-fullwidth'}> */}\r\n                                    <Row style={{ \"justify-content\": \"space-around\" }}>\r\n                                        <Col md={4}>\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_JOINCONDITION\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"tableName\"}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_JOINCONDITION\" })}\r\n                                                showOption={true}\r\n                                                options={joinCondition}\r\n                                                value={selectedRecord[\"filterNewCondition\"] && selectedRecord[\"filterNewCondition\"] || \"\"}\r\n                                                onChange={value => this.onfilterChange(value, \"filterNewCondition\", 'joinCondition')}\r\n                                            ></FormSelectSearch>\r\n                                        </Col>\r\n\r\n                                    </Row>\r\n                                    {/* </div> */}\r\n                                </div>\r\n                                : \"\"}\r\n                        </section>\r\n                    </form >\r\n\r\n                )\r\n                break;\r\n            case 2:\r\n                return (\r\n                    <form>\r\n                        <section className={'modal-card-body'}>\r\n                            {selectedRecord['filterTableNewAdded']\r\n                                && selectedRecord['filterTableNewAdded'].map((item, index) => {\r\n                                    return <div className={'field has-addons my-6'}>\r\n                                        <div class=\"control is-expanded\">\r\n                                            <div class=\"select is-fullwidth\">\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                                    isSearchable={true}\r\n                                                    name={\"tableName\"}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                                    showOption={true}\r\n                                                    options={index === 0 ? selectedRecord['stablename']\r\n                                                        && selectedRecord['stablename'] : [{ ...selectedRecord['filterTableNewAdded'][0][\"filterTableOld\"] }]}\r\n                                                    value={item[\"filterTableOld\"] && item[\"filterTableOld\"] || \"\"}\r\n                                                    onChange={value => this.onJoinChange(value, \"filterTableOld\", 'oldtable', index)}\r\n                                                ></FormSelectSearch>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"control is-expanded\">\r\n                                            <div class=\"select is-fullwidth\">\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                    isSearchable={true}\r\n                                                    name={\"filterColumn\"}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                    showOption={true}\r\n                                                    options={this.state.listOldTableColumn || []}\r\n                                                    value={item[\"filterTableOldColumn\"] && item[\"filterTableOldColumn\"] || \"\"}\r\n                                                    onChange={value => this.onJoinChange(value, \"filterTableOldColumn\", 'oldcolumn', index)}\r\n                                                ></FormSelectSearch>\r\n                                            </div>\r\n                                        </div>\r\n                                        <strong className={'mx-3 is-flex is-align-items-center'}>\r\n                                            {\"&\"}\r\n                                        </strong>\r\n                                        <div class=\"control is-expanded\">\r\n                                            <div class=\"select is-fullwidth\">\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_JOINSTABLE\" })}\r\n                                                    isSearchable={true}\r\n                                                    name={\"filterColumn\"}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_JOINSTABLE\" })}\r\n                                                    showOption={true}\r\n                                                    options={index === 0 ? this.state.listTables || [] : [{ ...selectedRecord['filterTableNewAdded'][0][\"filterTableNew\"] }]}\r\n                                                    value={item[\"filterTableNew\"] && item[\"filterTableNew\"] || \"\"}\r\n                                                    onChange={value => this.onJoinChange(value, \"filterTableNew\", 'newtable', index)}\r\n                                                ></FormSelectSearch>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"control is-expanded\">\r\n                                            <div class=\"select is-fullwidth\">\r\n                                                <FormSelectSearch\r\n                                                    formGroupClassName=\"remove-floating-label-margin\"\r\n                                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_JOINTABLEFIELDS\" })}\r\n                                                    isSearchable={true}\r\n                                                    name={\"filterColumn\"}\r\n                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_JOINTABLEFIELDS\" })}\r\n                                                    showOption={true}\r\n                                                    options={this.state.listNewTableColumn || []}\r\n                                                    value={item[\"filterTableNewColumn\"] && item[\"filterTableNewColumn\"] || \"\"}\r\n                                                    onChange={value => this.onJoinChange(value, \"filterTableNewColumn\", 'newcolumn', index)}\r\n                                                ></FormSelectSearch>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className={\"control\"}>\r\n                                            {selectedRecord['filterTableNewAdded'].length > 1 &&\r\n                                                <Button className={\"button is-light is-danger\"}\r\n                                                    onClick={(e) => this.onJoinChildDelete(e, index)}\r\n                                                    type=\"button\" tabindex=\"0\">\r\n                                                    <span className={\"icon\"}>\r\n                                                        <FontAwesomeIcon icon={faMinus} />\r\n                                                    </span>\r\n                                                </Button>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                })\r\n                            }\r\n                            <div className={'buttons is-right'}>\r\n                                <Button className={'button is-light is-info is-small'}\r\n                                    onClick={(e) => this.onMoreClick(e, this.state.filterType)} type=\"button\" tabindex=\"0\">\r\n\r\n                                    <span className={\"icon\"}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </span>\r\n                                    <span>{this.props.intl.formatMessage({ id: \"IDS_ADDMORE\" })}</span>\r\n                                </Button>\r\n                            </div>\r\n                            < div className={'field has-text-centered'} >\r\n                                <Row style={{ \"justify-content\": \"space-around\" }}>\r\n                                    <Col md={4}>\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            // formLabel={this.props.intl.formatMessage({ id: \"IDS_JOINCONDITION\" })}\r\n                                            isSearchable={true}\r\n                                            name={\"tableName\"}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_JOINCONDITION\" })}\r\n                                            showOption={true}\r\n                                            options={joinConditionData}\r\n                                            value={selectedRecord[\"filterNewTableCondition\"] && selectedRecord[\"filterNewTableCondition\"] || \"\"}\r\n                                            onChange={value => this.onJoinChange(value, \"filterNewTableCondition\", 'joinTableCondition')}\r\n                                        ></FormSelectSearch>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n                            </div>\r\n                        </section>\r\n                    </form >\r\n\r\n                )\r\n                break;\r\n            case 3:\r\n                return (\r\n                    <form>\r\n                        <section className={'modal-card-body'}>\r\n\r\n                            {selectedRecord['sortNew'] && selectedRecord['sortNew'].map((item, index) => {\r\n                                return <div className={'field has-addons'}>\r\n                                    <div class=\"control is-expanded\">\r\n                                        <div class=\"select is-fullwidth\">\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"tableName\"}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                                showOption={true}\r\n                                                options={selectedRecord['stablename'] && selectedRecord['stablename']}\r\n                                                // options={constructOptionList(this.state.selectedRecord['stablename']\r\n                                                //     && this.state.selectedRecord['stablename'], 'tableName', 'stabledisplayname').get(\"OptionList\") || []}\r\n                                                value={item[\"sortTable\"] && item[\"sortTable\"] || \"\"}\r\n                                                onChange={value => this.onSortChange(value, \"sortTable\", 'table', index)}\r\n                                            ></FormSelectSearch>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"control is-expanded\">\r\n                                        <div class=\"select is-fullwidth\">\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"sortColumn\"}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                showOption={true}\r\n                                                options={item[\"sortTable\"] &&\r\n                                                    this.state.avaliableColumns.filter(x => x.item.parentTableIndex === item[\"sortTable\"].value)\r\n                                                    || []}\r\n                                                value={item[\"sortColumn\"] !== undefined ? item[\"sortColumn\"] : \"\"}\r\n                                                onChange={value => this.onSortChange(value, \"sortColumn\", 'column', index)}\r\n                                            ></FormSelectSearch>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class=\"control is-expanded\">\r\n                                        <div class=\"select is-fullwidth\">\r\n                                            <FormSelectSearch\r\n                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                                isSearchable={true}\r\n                                                name={\"sortCondition\"}\r\n                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                                showOption={true}\r\n                                                options={orderByList}\r\n                                                value={item[\"sortCondition\"] !== undefined ? item[\"sortCondition\"] : \"\"}\r\n                                                onChange={value => this.onSortChange(value, \"sortCondition\", 'condition', index)}\r\n                                            ></FormSelectSearch>\r\n                                        </div>\r\n                                    </div>\r\n                                    {selectedRecord['sortNew'].length > 1 &&\r\n                                        <div className={\"control\"}>\r\n                                            <button className={\"button is-light is-danger\"} onClick={(e) => this.onSortModalDelete(e, index)} type=\"button\" tabindex=\"0\">\r\n                                                <span className={\"icon\"}>\r\n                                                    {/* <i className={\"fas fa-minus\"} aria-hidden=\"true\">\r\n                                                    </i> */}\r\n                                                    <FontAwesomeIcon icon={faMinus} />\r\n                                                </span>\r\n                                            </button>\r\n                                        </div>\r\n\r\n                                    }\r\n                                </div>\r\n                            })}\r\n                            <div className={'buttons is-right'}>\r\n                                <button className={'button is-light is-info is-small'} onClick={(e) => this.onMoreClick(e, this.state.filterType)} type=\"button\" tabindex=\"0\">\r\n\r\n                                    <span className={\"icon\"}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </span>\r\n                                    <span>{this.props.intl.formatMessage({ id: \"IDS_ADDMORE\" })}</span>\r\n                                </button>\r\n                            </div>\r\n                        </section>\r\n                    </form>\r\n                )\r\n                break;\r\n            case 4:\r\n                return (<form>\r\n                    <section className={'modal-card-body'}>\r\n\r\n                        {selectedRecord['summarizeNew'] && selectedRecord['summarizeNew'].map((item, index) => {\r\n                            return <div className={'field has-addons'}>\r\n                                <div class=\"control is-expanded\">\r\n                                    <div class=\"select is-fullwidth\">\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                            isSearchable={true}\r\n                                            name={\"tableName\"}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                            showOption={true}\r\n                                            options={selectedRecord['stablename'] && selectedRecord['stablename']}\r\n                                            // options={constructOptionList(this.state.selectedRecord['stablename']\r\n                                            //     && this.state.selectedRecord['stablename'], 'tableName', 'stabledisplayname').get(\"OptionList\") || []}\r\n                                            value={item[\"summarizeTable\"] && item[\"summarizeTable\"] || \"\"}\r\n                                            onChange={value => this.onSummarizeChange(value, \"summarizeTable\", 'table', index)}\r\n                                        ></FormSelectSearch>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"control is-expanded\">\r\n                                    <div class=\"select is-fullwidth\">\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                            isSearchable={true}\r\n                                            name={\"summarizeColumn\"}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                            showOption={true}\r\n                                            options={item[\"summarizeTable\"] &&\r\n                                                this.state.avaliableColumns.filter(x => x.item.parentTableIndex === item[\"summarizeTable\"].value)\r\n                                                || []}\r\n                                            value={item[\"summarizeColumn\"] !== undefined ? item[\"summarizeColumn\"] : \"\"}\r\n                                            onChange={value => this.onSummarizeChange(value, \"summarizeColumn\", 'column', index)}\r\n                                        ></FormSelectSearch>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"control is-expanded\">\r\n                                    <div class=\"select is-fullwidth\">\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                            isSearchable={true}\r\n                                            name={\"summarizeCondition\"}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                            showOption={true}\r\n                                            options={aggregateFunction}\r\n                                            value={item[\"summarizeCondition\"] !== undefined ? item[\"summarizeCondition\"] : \"\"}\r\n                                            onChange={value => this.onSummarizeChange(value, \"summarizeCondition\", 'condition', index)}\r\n                                        ></FormSelectSearch>\r\n                                    </div>\r\n                                </div>\r\n                                {selectedRecord['summarizeNew'].length > 1 &&\r\n                                    <div className={\"control\"}>\r\n                                        <button className={\"button is-light is-danger\"} onClick={(e) => this.onSummarizeModalDelete(e, index)} type=\"button\" tabindex=\"0\">\r\n                                            <span className={\"icon\"}>\r\n                                                {/* <i className={\"fas fa-minus\"} aria-hidden=\"true\">\r\n                                                </i> */}\r\n                                                <FontAwesomeIcon icon={faMinus} />\r\n                                            </span>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                }\r\n                            </div>\r\n                        })}\r\n\r\n\r\n                        <div className={'buttons is-right'}>\r\n                            <Button className={'button is-light is-info is-small'} onClick={(e) => this.onMoreClick(e, this.state.filterType)} type=\"button\" tabindex=\"0\">\r\n\r\n                                <span className={\"icon\"}>\r\n                                    <FontAwesomeIcon icon={faPlus} />\r\n                                </span>\r\n                                <span>{this.props.intl.formatMessage({ id: \"IDS_ADDMORE\" })}</span>\r\n                            </Button>\r\n                        </div>\r\n                    </section>\r\n                </form>\r\n                )\r\n                break;\r\n            case 5:\r\n                return (<form>\r\n                    <section className={'modal-card-body'}>\r\n\r\n                        {selectedRecord['groupNew'] && selectedRecord['groupNew'].map((item, index) => {\r\n                            return <div className={'field has-addons'}>\r\n                                <div class=\"control is-expanded\">\r\n                                    <div class=\"select is-fullwidth\">\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                            isSearchable={true}\r\n                                            name={\"tableName\"}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                            showOption={true}\r\n                                            options={selectedRecord['stablename'] && selectedRecord['stablename']}\r\n                                            // options={constructOptionList(this.state.selectedRecord['stablename']\r\n                                            //     && this.state.selectedRecord['stablename'], 'tableName', 'stabledisplayname').get(\"OptionList\") || []}\r\n                                            value={item[\"groupTable\"] && item[\"groupTable\"] || \"\"}\r\n                                            onChange={value => this.onGroupChange(value, \"groupTable\", 'table', index)}\r\n                                        ></FormSelectSearch>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"control is-expanded\">\r\n                                    <div class=\"select is-fullwidth\">\r\n                                        <FormSelectSearch\r\n                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                            isSearchable={true}\r\n                                            name={\"groupColumn\"}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                            showOption={true}\r\n                                            options={item[\"groupTable\"] &&\r\n                                                this.state.avaliableColumns.filter(x => x.item.parentTableIndex === item[\"groupTable\"].value)\r\n                                                || []}\r\n                                            value={item[\"groupColumn\"] !== undefined ? item[\"groupColumn\"] : \"\"}\r\n                                            onChange={value => this.onGroupChange(value, \"groupColumn\", 'column', index)}\r\n                                        ></FormSelectSearch>\r\n                                    </div>\r\n                                </div>\r\n                                {selectedRecord['groupNew'].length > 1 &&\r\n                                    <div className={\"control\"}>\r\n                                        <button className={\"button is-light is-danger\"} onClick={(e) => this.onGroupModalDelete(e, index)} type=\"button\" tabindex=\"0\">\r\n                                            <span className={\"icon\"}>\r\n                                                <FontAwesomeIcon icon={faMinus} />\r\n                                            </span>\r\n                                        </button>\r\n                                    </div>\r\n\r\n                                }\r\n                            </div>\r\n                        })}\r\n\r\n\r\n                        <div className={'buttons is-right'}>\r\n                            <button className={'button is-light is-info is-small'} onClick={(e) => this.onMoreClick(e, this.state.filterType)} type=\"button\" tabindex=\"0\">\r\n\r\n                                <span className={\"icon\"}>\r\n                                    <FontAwesomeIcon icon={faPlus} />\r\n                                </span>\r\n                                <span>{this.props.intl.formatMessage({ id: \"IDS_ADDMORE\" })}</span>\r\n                            </button>\r\n                        </div>\r\n                    </section>\r\n                </form>\r\n                )\r\n                break;\r\n            case 6:\r\n                return <Row>\r\n                    <Col md={3}>\r\n                        {\"Enter the Limit\"}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormNumericInput\r\n                            name={\"LimitNew\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_LIMIT\" })}\r\n                            type=\"number\"\r\n                            value={selectedRecord[\"LimitNew\"] && selectedRecord[\"LimitNew\"]}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_LIMIT\" })}\r\n                            strict={true}\r\n                            min={0}\r\n                            maxLength={10}\r\n                            onChange={(value) => this.onNumericLimitChange(value, \"LimitNew\")}\r\n                            noStyle={true}\r\n                            //precision={2}\r\n                            isMandatory={true}\r\n                            className=\"form-control\"\r\n                            errors=\"Please provide a valid number.\"\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n                break;\r\n            case 8:\r\n                return <Row>\r\n                    <Col md={3}>\r\n                        {/* <FormInput\r\n                            //label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                            name=\"filterValue\"\r\n                            type=\"text\"\r\n                          //  onChange={(event) => this.onFilterInputOnChange(event, index)}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                            value={\"Alias Name For \" + this.state.selectedRecord['filterTableNewAdded'][0].filterTableNew.label}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={100}\r\n                            disabled={true}\r\n                        /> */}\r\n                        {\"Alias Name For \\\"\" + selectedRecord['filterTableNewAdded'][0].filterTableNew.label + \"\\\"\"}\r\n                    </Col>\r\n                    <Col md={6}>\r\n                        <FormInput\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                            name=\"joinTableAlias\"\r\n                            type=\"text\"\r\n                            onChange={(event) => this.onjoinAliasName(event)}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                            value={selectedRecord[\"joinTableAlias\"] ? selectedRecord[\"joinTableAlias\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={100}\r\n                        />\r\n                    </Col>\r\n                </Row>\r\n        }\r\n\r\n    }\r\n\r\n    filterQueryFormation = (selectedRecord, avaliableColumns) => {\r\n        let str = \"\";\r\n        str = \"SELECT \\n\";\r\n        if ((selectedRecord.summarize &&\r\n            selectedRecord.summarize.length > 0)\r\n            || (selectedRecord.group && selectedRecord.group.length > 0)) {\r\n            if (selectedRecord.group && selectedRecord.group.length > 0) {\r\n                selectedRecord.group.map((item, index) => {\r\n                    if (selectedRecord.group.length - 1 !== index) {\r\n                        str = str + (item.groupColumn.item.isjsoncolumn ?\r\n                            item.groupColumn.item.ismultilingual ?\r\n                                \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" + \"\\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\",\"\r\n                                : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\",\"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\",\\n\")\r\n\r\n                    } else {\r\n                        str = str + (item.groupColumn.item.isjsoncolumn ?\r\n                            item.groupColumn.item.ismultilingual ?\r\n                                \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" + \"\\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\"\r\n                                : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\")\r\n\r\n                        //  str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\"\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (selectedRecord.summarize && selectedRecord.summarize.length > 0) {\r\n                if (selectedRecord.group && selectedRecord.group.length > 0)\r\n                    str = str + ',\\n';\r\n\r\n                selectedRecord.summarize.map((item, index) => {\r\n                    if (selectedRecord.summarize.length - 1 !== index) {\r\n                        if (item.summarizeCondition.value === \"COUNT\") {\r\n\r\n                            str = str + item.summarizeCondition.value + \"( \" + (item.summarizeColumn.item.isjsoncolumn ?\r\n                                item.summarizeColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \"\r\n                                    : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                                : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\",\\n\";\r\n\r\n                        } else if (item.summarizeCondition.value === \"DISTINCT\") {\r\n                            str = str + \" COUNT( \" + item.summarizeCondition.value + \" \" + (item.summarizeColumn.item.isjsoncolumn ?\r\n                                item.summarizeColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \"\r\n                                    : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                                : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\",\\n\";\r\n                        }\r\n                    } else {\r\n                        if (item.summarizeCondition.value === \"COUNT\") {\r\n                            str = str + item.summarizeCondition.value + \"( \" + (item.summarizeColumn.item.isjsoncolumn ?\r\n                                item.summarizeColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \"\r\n                                    : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                                : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\"\";\r\n                        } else if (item.summarizeCondition.value === \"DISTINCT\") {\r\n                            str = str + \" COUNT( \" + item.summarizeCondition.value + \" \" + (item.summarizeColumn.item.isjsoncolumn ?\r\n                                item.summarizeColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \"\r\n                                    : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                                : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\"\";\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            // if (selectedRecord.scolumnname.length !== avaliableColumns.length) {\r\n            selectedRecord.scolumnname.map((item, index) => {\r\n                if (selectedRecord.scolumnname.length - 1 !== index) {\r\n                    str = str + (item.item.isjsoncolumn ?\r\n                        item.item.ismultilingual ?\r\n                            \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->'\" + item.item.scolumn + \"'->><@\" + item.item.parametername + \"@> \" + \"\\\"\" + item.label + \"\\\",\"\r\n                            : \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->>'\" + item.item.scolumn + \"' \\\"\" + item.label + \"\\\",\"\r\n                        : \" \\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\",\\n\")\r\n                } else {\r\n                    str = str + (item.item.isjsoncolumn ?\r\n                        item.item.ismultilingual ?\r\n                            \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->'\" + item.item.scolumn + \"'->><@\" + item.item.parametername + \"@> \" + \"\\\"\" + item.label + \"\\\"\"\r\n                            : \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->>'\" + item.item.scolumn + \"' \\\"\" + item.label + \"\\\"\"\r\n                        : \" \\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\"\")\r\n                }\r\n            })\r\n            // } else {\r\n            //     str = str + \" * \";\r\n            // }\r\n        }\r\n        str = str + \"\\nFROM\\n\"\r\n\r\n        if (selectedRecord['stablename'].length === 1) {\r\n            selectedRecord['stablename'].map(item => {\r\n                str = str + \" \" + item.item.tableName + \" \\\"\" + item.label + \"\\\"\\n\"\r\n            })\r\n        } else {\r\n\r\n            selectedRecord['TableJoin'].map((item, index) => {\r\n                if (index === 0) {\r\n                    str = str + selectedRecord['stablename'][index].item.tableName + \" \\\"\" + selectedRecord['stablename'][index].label + \"\\\"\\n \" + item.TableJoining.value + \" \"\r\n                    item.Table.map((item1, index1) => {\r\n\r\n                        if (index1 === 0) {\r\n                            str = str + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\" ON \" +\r\n                                \"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ?\r\n                                    item1.oldTableColumn.item.ismultilingual ?\r\n                                        item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \"\r\n                                        : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\"\r\n                                    : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ?\r\n                                        item1.newTableColumn.item.ismultilingual ?\r\n                                            item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \"\r\n                                            : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\"\r\n                                        : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \\n\"\r\n                        } else {\r\n                            str = str + \" AND \\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ?\r\n                                item1.oldTableColumn.item.ismultilingual ?\r\n                                    item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \"\r\n                                    : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\"\r\n                                : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ?\r\n                                    item1.newTableColumn.item.ismultilingual ?\r\n                                        item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \"\r\n                                        : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\"\r\n                                    : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \\n\"\r\n                        }\r\n                    })\r\n                } else {\r\n\r\n                    str = str + item.TableJoining.value + \" \"\r\n\r\n                    item.Table.map((item1, index1) => {\r\n                        if (index1 === 0) {\r\n                            str = str + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\" ON \" +\r\n                                \"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ?\r\n                                    item1.oldTableColumn.item.ismultilingual ?\r\n                                        item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \"\r\n                                        : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\"\r\n                                    : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ?\r\n                                        item1.newTableColumn.item.ismultilingual ?\r\n                                            item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \"\r\n                                            : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\"\r\n                                        : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \\n\"\r\n                        } else {\r\n                            str = str + \" AND \\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ?\r\n                                item1.oldTableColumn.item.ismultilingual ?\r\n                                    item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \"\r\n                                    : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\"\r\n                                : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ?\r\n                                    item1.newTableColumn.item.ismultilingual ?\r\n                                        item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \"\r\n                                        : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\"\r\n                                    : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \\n\"\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        if (selectedRecord['filter'] && selectedRecord['filter'].length > 0)\r\n            str = str + \"\\nWHERE\\n\"\r\n\r\n        selectedRecord['filter'] && selectedRecord['filter'].map((item1, index1) => {\r\n            str = str + \" (\\n \";\r\n\r\n            item1.map((item, index) => {\r\n\r\n                if (item.filterCondition.value === 'IN') {\r\n\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \" ('\" + item.filterValue + \"') \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'PRESENT') {\r\n\r\n                    str = str + \" NOT \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" ='' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'BLANK') {\r\n\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" ='' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'NULL'\r\n                    || item.filterCondition.value === 'NOT NULL') {\r\n\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" IS '\" + item.filterCondition.value + \"' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'IS NULL') {\r\n\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \"' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'STARTS WITH') {\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '\" + item.filterValue + \"%' collate \\\"default\\\"\"\r\n                }\r\n                else if (item.filterCondition.value === 'ENDS WITH') {\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '%\" + item.filterValue + \"' collate \\\"default\\\"\"\r\n                }\r\n                else if (item.filterCondition.value === 'CONTAINS') {\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '\" + item.filterValue + \"%' collate \\\"default\\\"\"\r\n                }\r\n                else if (item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === '=' || item.filterCondition.value === '<' || item.filterCondition.value === '>')) {\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + (item.filterValueType.value === 1 ? (\"<#\" + item.filterColumn.item.scolumn + \"#>\") : (\"'\" + convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) + \"' \"))\r\n                }\r\n\r\n                else if (item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === 'NOT')) {\r\n                    str = str + \"(NOT \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \" + (item.filterValueType.value === 1 ? (\"<#\" + item.filterColumn.item.scolumn + \"#>)\") : (\"'\" + convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) + \"')\"))\r\n                }\r\n                else if (item.filterColumn.item.columndatatype === 'string' && (item.filterCondition.value === 'NOT')) {\r\n                    str = str + \"(NOT \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \" + (item.filterValueType.value === 1 ? (\"<@\" + item.filterColumn.item.scolumn + \"@>)\") : (\"'\" + item.filterValue + \"')\"))\r\n                }\r\n                else {\r\n                    str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + (item.filterValueType.value === 1 ? ((item.filterColumn.item.columndatatype === 'date' ? \"<#\" : \"<@\") + item.filterColumn.item.scolumn + (item.filterColumn.item.columndatatype === 'date' ? \"#>\" : \"@>\")) : (\"'\" + item.filterValue + \"' \"))\r\n                }\r\n\r\n                if (index !== selectedRecord['filter'][index1].length - 1) {\r\n                    str = str + \"\\n   \" + selectedRecord['filterJoinCondition'][index1].value + \" \";\r\n                }\r\n            })\r\n\r\n            str = str + \"\\n ) \";\r\n\r\n            if (index1 !== selectedRecord['filter'].length - 1) {\r\n                str = selectedRecord['filterJoinCondition'][index1 + 1] &&\r\n                    str + \"\\n\" + selectedRecord['filterJoinCondition'][index1 + 1].value + \"\\n \";\r\n            }\r\n        })\r\n\r\n        if (selectedRecord.group && selectedRecord.group.length > 0) {\r\n            str = str + \"\\nGROUP BY\\n\"\r\n        }\r\n        else if (selectedRecord.summarize && selectedRecord.summarize.length > 0 &&\r\n            selectedRecord['sort'] && selectedRecord['sort'].length > 0) {\r\n            str = str + \"\\nGROUP BY\\n\"\r\n        }\r\n\r\n        if ((selectedRecord.summarize && selectedRecord.summarize.length > 0\r\n            || selectedRecord.group && selectedRecord.group.length > 0)\r\n            && selectedRecord['sort'] && selectedRecord['sort'].length > 0) {\r\n\r\n\r\n            let sortIndex = [];\r\n            if (selectedRecord.group && selectedRecord.group.length > 0) {\r\n                selectedRecord['group'] && selectedRecord['group'].map((item, index1) => {\r\n\r\n                    if (selectedRecord['sort'].findIndex(x =>\r\n                        (x.sortTable.label + x.sortColumn.item.scolumn)\r\n                        === (item.groupTable.label + item.groupColumn.item.scolumn)) !== -1) {\r\n\r\n                        sortIndex[index1] = selectedRecord['sort'].findIndex(x =>\r\n                            (x.sortTable.label + x.sortColumn.item.scolumn)\r\n                            === (item.groupTable.label + item.groupColumn.item.scolumn))\r\n                    }\r\n\r\n                    if (selectedRecord['group'].length - 1 !== index1) {\r\n                        str = str + (item.groupColumn.item.isjsoncolumn ?\r\n                            item.groupColumn.item.ismultilingual ?\r\n                                \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> ,\"\r\n                                : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' ,\"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" ,\\n\")\r\n\r\n                    } else {\r\n\r\n                        str = str + (item.groupColumn.item.isjsoncolumn ?\r\n                            item.groupColumn.item.ismultilingual ?\r\n                                \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \"\r\n                                : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \")\r\n\r\n                    }\r\n\r\n                    // if (selectedRecord['group'].length - 1 !== index1) {\r\n                    //     str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn + \",\"\r\n                    // } else {\r\n                    //     str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn\r\n                    // }\r\n                    // }\r\n                })\r\n\r\n                if (selectedRecord['sort'].length !== sortIndex.length)\r\n                    str = str + \" , \\n\"\r\n\r\n                selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\r\n                    if (sortIndex.findIndex(x => x === index1) === -1) {\r\n\r\n                        if (selectedRecord['sort'].length - 1 !== index1) {\r\n\r\n                            str = str + (item.sortColumn.item.isjsoncolumn ?\r\n                                item.sortColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> ,\"\r\n                                    : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' ,\"\r\n                                : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" ,\\n\")\r\n\r\n                        } else {\r\n\r\n                            str = str + (item.sortColumn.item.isjsoncolumn ?\r\n                                item.sortColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \"\r\n                                    : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \"\r\n                                : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" \")\r\n\r\n                            //  str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\"\r\n                        }\r\n\r\n                        // if (selectedRecord['sort'].length - 1 !== index1) {\r\n                        //     str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn + \",\"\r\n                        // } else {\r\n                        //     str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn\r\n                        // }\r\n                    }\r\n                })\r\n\r\n            } else if (selectedRecord.summarize && selectedRecord.summarize.length > 0) {\r\n\r\n                //summariesort\r\n                // selectedRecord['summarize'] && selectedRecord['summarize'].map((item, index1) => {\r\n\r\n                //     if (selectedRecord['sort'].findIndex(x =>\r\n                //         (x.sortTable.label + x.sortColumn.item.scolumn)\r\n                //         === (item.summarizeTable.label + item.summarizeColumn.item.scolumn)) !== -1) {\r\n\r\n                //         sortIndex[index1] = selectedRecord['sort'].findIndex(x =>\r\n                //             (x.sortTable.label + x.sortColumn.item.scolumn)\r\n                //             === (item.summarizeTable.label + item.summarizeColumn.item.scolumn))\r\n                //     }\r\n\r\n                //     if (selectedRecord['summarize'].length - 1 !== index1) {\r\n                //         str =  str + (item.summarizeColumn.item.isjsoncolumn?\r\n                //         item.summarizeColumn.item.ismultilingual?\r\n                //        \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname+\"->'\"+item.summarizeColumn.item.scolumn+\"'->><@\"+item.summarizeColumn.item.parametername+\"@> ,\"\r\n                //         :  \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname+\"->>'\"+item.summarizeColumn.item.scolumn+\"' ,\"\r\n                //         : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ,\")\r\n\r\n                //     } else {\r\n\r\n                //         str =  str + (item.summarizeColumn.item.isjsoncolumn?\r\n                //         item.summarizeColumn.item.ismultilingual?\r\n                //        \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname+\"->'\"+item.summarizeColumn.item.scolumn+\"'->><@\"+item.summarizeColumn.item.parametername+\"@> \"\r\n                //         :  \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname+\"->>'\"+item.summarizeColumn.item.scolumn+\"' \"\r\n                //         : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" \")\r\n\r\n                //     }\r\n                // })\r\n\r\n                // if (selectedRecord['summarize'].length - 1 !== index1) {\r\n                //     str = str + \"  \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn + \",\"\r\n                // } else {\r\n                //     str = str + \"  \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn\r\n                // }\r\n                // }\r\n\r\n\r\n                if (selectedRecord['sort'].length !== sortIndex.length)\r\n                    str = str + \" , \\n\"\r\n\r\n                selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\r\n                    if (sortIndex.findIndex(x => x === index1) === -1) {\r\n\r\n                        if (selectedRecord['sort'].length - 1 !== index1) {\r\n                            str = str + (item.sortColumn.item.isjsoncolumn ?\r\n                                item.sortColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> ,\"\r\n                                    : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' ,\"\r\n                                : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" ,\\n\")\r\n\r\n                        } else {\r\n\r\n                            str = str + (item.sortColumn.item.isjsoncolumn ?\r\n                                item.sortColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \"\r\n                                    : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \"\r\n                                : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" \")\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n        else if (selectedRecord.group && selectedRecord.group.length > 0) {\r\n\r\n            selectedRecord['group'] && selectedRecord['group'].map((item, index1) => {\r\n                if (selectedRecord['group'].length - 1 !== index1) {\r\n                    str = str + (item.groupColumn.item.isjsoncolumn ?\r\n                        item.groupColumn.item.ismultilingual ?\r\n                            \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> ,\"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' ,\"\r\n                        : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" ,\\n\")\r\n\r\n                } else {\r\n\r\n                    str = str + (item.groupColumn.item.isjsoncolumn ?\r\n                        item.groupColumn.item.ismultilingual ?\r\n                            \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \"\r\n                        : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \")\r\n\r\n                }\r\n            })\r\n        }\r\n\r\n        if (selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].length > 0) {\r\n            str = str + \"\\nHAVING\\n\"\r\n        }\r\n\r\n        selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].map((item, index) => {\r\n\r\n            if (item.filterColumn.item.summarizeCondition.value === \"COUNT\") {\r\n\r\n                str = str + item.filterColumn.item.summarizeCondition.value + \"( \" + (item.filterColumn.item.summarizeColumn.item.isjsoncolumn ?\r\n                    item.filterColumn.item.summarizeColumn.item.ismultilingual ?\r\n                        \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.summarizeColumn.item.parametername + \"@> \"\r\n                        : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                    : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) \" + item.filterCondition.value + \" \" + (item.filterValueType.value === 1 ? (\"<@\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"@>\") : (\"'\" + item.filterValue + \"' \"));\r\n\r\n            } else if (item.filterColumn.item.summarizeCondition.value === \"DISTINCT\") {\r\n                str = str + \" COUNT( \" + item.filterColumn.item.summarizeCondition.value + \" \" + (item.filterColumn.item.summarizeColumn.item.isjsoncolumn ?\r\n                    item.filterColumn.item.summarizeColumn.item.ismultilingual ?\r\n                        \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.summarizeColumn.item.parametername + \"@> \"\r\n                        : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                    : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) \" + item.filterCondition.value + \" \" + (item.filterValueType.value === 1 ? (\"<@\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"@>\") : (\"'\" + item.filterValue + \"' \"));\r\n            }\r\n\r\n\r\n\r\n            // if (item.filterColumn.item.summarizeCondition.value === \"COUNT\") {\r\n            //     str = str + item.filterColumn.item.summarizeCondition.value + \"( \" + \"\\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\" ) \" + item.filterCondition.value + \" \" + item.filterValue;\r\n            // } else {\r\n            //     str = str + \"COUNT( \" + item.filterColumn.item.summarizeCondition.value + \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\" ) \" + item.filterCondition.value + \" \" + item.filterValue;\r\n            // }\r\n\r\n\r\n            if (index !== selectedRecord['filterSummarize'].length - 1) {\r\n                str = str + \"\\n \" + selectedRecord['filterSummarizeJoinCondition'].value + \"\\n \";\r\n            }\r\n        })\r\n\r\n        if (selectedRecord['sort'] && selectedRecord['sort'].length > 0)\r\n            str = str + \"\\nORDER BY\\n\"\r\n\r\n        selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\r\n\r\n            if (selectedRecord['sort'].length - 1 !== index1) {\r\n\r\n                str = str + (item.sortColumn.item.isjsoncolumn ?\r\n                    item.sortColumn.item.ismultilingual ?\r\n                        \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \" + item.sortCondition.value + \",\"\r\n                        : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \" + item.sortCondition.value + \",\"\r\n                    : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" \" + item.sortCondition.value + \",\\n\")\r\n\r\n            } else {\r\n\r\n                str = str + (item.sortColumn.item.isjsoncolumn ?\r\n                    item.sortColumn.item.ismultilingual ?\r\n                        \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \" + item.sortCondition.value\r\n                        : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \" + item.sortCondition.value\r\n                    : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\" \" + item.sortCondition.value)\r\n\r\n                //  str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\"\r\n            }\r\n\r\n            // if (selectedRecord['sort'].length - 1 !== index1) {\r\n            //     str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn + ' ' + item.sortCondition.value + \",\"\r\n            // } else {\r\n            //     str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn + ' ' + item.sortCondition.value\r\n            // }\r\n        })\r\n\r\n        if (((selectedRecord.summarize === undefined)\r\n            || (selectedRecord.summarize && selectedRecord.summarize.length === 0))\r\n            && ((selectedRecord.group === undefined) || (selectedRecord.group\r\n                && selectedRecord.group.length === 0))) {\r\n            if (selectedRecord['Limit'] && selectedRecord['Limit'] !== 0) {\r\n                str = str + \"\\nLIMIT \" + selectedRecord['Limit']\r\n            }\r\n\r\n        }\r\n        return str;\r\n    }\r\n\r\n    componentDidMount() {\r\n        let listTables = this.state.listTables || []\r\n        const TableList = this.props.tableName\r\n        console.log(\"component\", listTables)\r\n        listTables = constructOptionList(TableList, 'tableName', 'stabledisplayname').get(\"OptionList\")\r\n        // listTables = this.props.tableName.map(item => {\r\n        //     return { label: item.stabledisplayname, value: item.tableName, item: { ...item } };\r\n        // })\r\n        // const list1 = []\r\n\r\n        // let tableName = ''\r\n        // let index1 = -1\r\n        // this.props.tableList.map((item, index) => {\r\n\r\n        //     if (item.stable !== tableName) {\r\n        //         tableName = item.stable\r\n        //         index1 = index1 + 1\r\n        //         list1.push({\r\n        //             label: item.stabledisplayname, value: item.stable,\r\n        //             item: { ...item }, options: [{\r\n        //                 label: item.scolumndisplayname, value: item.scolumn,\r\n        //                 item: { ...item }\r\n        //             }]\r\n        //         });\r\n        //     } else {\r\n        //         const l = list1[index1].options\r\n        //         l.push({\r\n        //             label: item.scolumndisplayname, value: item.scolumn,\r\n        //             item: { ...item }\r\n        //         })\r\n        //         list1[index1] = { ...list1[index1], options: l }\r\n        //     }\r\n\r\n        // })\r\n\r\n        this.setState({ listTables, listColumnForMultiSelect: [] })\r\n    }\r\n\r\n    onFilterSummarizeEdit = (e) => {\r\n        let summarizeCombo = this.state.summarizeCombo || []\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filterNew'] = [...selectedRecord['filterSummarize']]\r\n        selectedRecord['filterNewCondition'] = selectedRecord['filterSummarizeJoinCondition']\r\n\r\n        selectedRecord['summarize'] && selectedRecord['summarize'].map((item, index) => {\r\n            if (item.summarizeCondition.value === \"COUNT\") {\r\n                summarizeCombo.push({ label: (item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\"), value: index, item: { ...item, summarize: true } })\r\n            } else if (item.summarizeCondition.value === \"DISTINCT\") {\r\n                summarizeCombo.push({ label: (item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\"), value: index, item: { ...item, summarize: true } })\r\n            }\r\n        })\r\n        this.setState({\r\n            selectedRecord, filterType: 1,\r\n            filterEdit: true, showFilter: true,\r\n            filterTitle: \"Edit Summarization Filter\",\r\n            summarizeLoadOnly: true, summarize: true\r\n        });\r\n    }\r\n\r\n    onFilterSummarizeDelete = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filterSummarize'] = []\r\n        selectedRecord['filterSummarizeJoinCondition'] = {}\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onFilterSummarizeChildDelete = (e, childIndex) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filterSummarize'] = [...selectedRecord['filterSummarize'].slice(0, childIndex), ...selectedRecord['filterSummarize'].slice(childIndex + 1)]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onFilterEdit = (e, parentIndex) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        // selectedRecord['filterNew'] = [...selectedRecord['filter'][parentIndex]]\r\n        //  selectedRecord['filterNewCondition'] = { ...selectedRecord['filterJoinCondition'][parentIndex] }\r\n\r\n        const filterNew = [...selectedRecord['filter'][parentIndex]]\r\n        const filterNewCondition = { ...selectedRecord['filterJoinCondition'][parentIndex] }\r\n        this.setState({\r\n            selectedRecord: { ...selectedRecord, filterNew: filterNew, filterNewCondition: filterNewCondition }, filterType: 1,\r\n            filterEdit: true,\r\n            showFilter: true,\r\n            parentIndex: parentIndex,\r\n            filterTitle: this.props.intl.formatMessage({ id: \"IDS_EDITFILTER\" })\r\n        });\r\n    }\r\n\r\n    onFilterDelete = (e, parentIndex) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filter'] = [...selectedRecord['filter'].slice(0, parentIndex), ...selectedRecord['filter'].slice(parentIndex + 1)]\r\n        selectedRecord['filterJoinCondition'] = [...selectedRecord['filterJoinCondition'].slice(0, parentIndex), ...selectedRecord['filterJoinCondition'].slice(parentIndex + 1)]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onFilterChildDelete = (e, parentIndex, childIndex) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filter'][parentIndex] = [...selectedRecord['filter'][parentIndex].slice(0, childIndex), ...selectedRecord['filter'][parentIndex].slice(childIndex + 1)]\r\n\r\n        const index = selectedRecord['filter'].findIndex(x => x.length === 0);\r\n        if (index !== -1) {\r\n            selectedRecord['filter'] = [...selectedRecord['filter'].slice(0, index), ...selectedRecord['filter'].slice(index + 1)]\r\n            selectedRecord['filterJoinCondition'] = [...selectedRecord['filterJoinCondition'].slice(0, parentIndex), ...selectedRecord['filterJoinCondition'].slice(parentIndex + 1)]\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onFilterModalDelete = (childIndex) => {\r\n        let summarizeLoad = this.state.summarizeLoad\r\n        let summarizeLoadOnly = this.state.summarizeLoadOnly\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filterNew'] = [...selectedRecord['filterNew'].slice(0, childIndex), ...selectedRecord['filterNew'].slice(childIndex + 1)]\r\n\r\n        if (selectedRecord['filterNew'].length > 0 && selectedRecord['filterNew'].length === 1) {\r\n            summarizeLoadOnly = false\r\n            if (selectedRecord['summarize'] && selectedRecord['summarize'].length > 0) {\r\n                summarizeLoad = true\r\n            }\r\n        }\r\n\r\n        this.setState({ selectedRecord, summarizeLoadOnly, summarizeLoad });\r\n    }\r\n\r\n    onSortModalDelete = (e, childIndex) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['sortNew'] = [...selectedRecord['sortNew'].slice(0, childIndex), ...selectedRecord['sortNew'].slice(childIndex + 1)]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSummarizeModalDelete = (e, childIndex) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['summarizeNew'] = [...selectedRecord['summarizeNew'].slice(0, childIndex), ...selectedRecord['summarizeNew'].slice(childIndex + 1)]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onJoinChildDelete = (e, childIndex) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filterTableNewAdded'] = [...selectedRecord['filterTableNewAdded'].slice(0, childIndex), ...selectedRecord['filterTableNewAdded'].slice(childIndex + 1)]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onGroupModalDelete = (e, childIndex) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['groupNew'] = [...selectedRecord['groupNew'].slice(0, childIndex), ...selectedRecord['groupNew'].slice(childIndex + 1)]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n\r\n    onLimitDelete = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['Limit'] = undefined\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onLimitEdit = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['LimitNew'] = selectedRecord['Limit']\r\n        this.setState({ selectedRecord, filterType: 6, showFilter: true });\r\n    }\r\n\r\n\r\n    onJoinTableDelete = (e, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['TableJoin'] = [...selectedRecord['TableJoin'].splice(0, index), ...selectedRecord['TableJoin'].splice(index + 1)]\r\n        selectedRecord['stablename'] = [...selectedRecord['stablename'].splice(0, index + 1), ...selectedRecord['stablename'].splice(index + 2)]\r\n        const avaliableColumns = this.state.avaliableColumns.filter(x => x.item.parentTableIndex !== index + 1)\r\n        selectedRecord['scolumnname'] = selectedRecord['scolumnname'].filter(x => x.item.parentTableIndex !== index + 1)\r\n        this.setState({ selectedRecord, avaliableColumns });\r\n    }\r\n\r\n\r\n    onSortDelete = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['sort'] = []\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSortChildDelete = (e, index) => {\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['sort'] = [...selectedRecord['sort'].splice(0, index), ...selectedRecord['sort'].splice(index + 1)]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSortEdit = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['sortNew'] = [...selectedRecord['sort']]\r\n        this.setState({ selectedRecord, filterType: 3, showFilter: true });\r\n    }\r\n\r\n\r\n    onSummarizeDelete = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['summarize'] = []\r\n        selectedRecord['filterSummarize'] = []\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSummarizeChildDelete = (e, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const filterSummarize = selectedRecord['filterSummarize'] ? [...selectedRecord['filterSummarize']] : []\r\n        const data = selectedRecord['summarize'][index]\r\n        const newfilterSummarize = []\r\n        filterSummarize.map((item, index) => {\r\n            if (item.filterColumn.item.summarizeCondition.value === \"COUNT\") {\r\n                if (item.filterColumn.label !== (data.summarizeTable.label + data.summarizeColumn.item.scolumndisplayname + \"Count\")) {\r\n\r\n                    newfilterSummarize.push(item);\r\n                }\r\n            } else {\r\n                if (item.filterColumn.label !== (data.summarizeTable.label + data.summarizeColumn.item.scolumndisplayname + \"CountDistinct\")) {\r\n\r\n                    newfilterSummarize.push(item);\r\n                }\r\n            }\r\n\r\n        })\r\n        selectedRecord['filterSummarize'] = newfilterSummarize;\r\n        selectedRecord['summarize'] = [...selectedRecord['summarize'].splice(0, index), ...selectedRecord['summarize'].splice(index + 1)]\r\n        //this.filterQueryFormation(selectedRecord, this.state.avaliableColumns)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSummarizeEdit = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['summarizeNew'] = [...selectedRecord['summarize']]\r\n        this.setState({ selectedRecord, filterType: 4, showFilter: true });\r\n    }\r\n\r\n\r\n    onGroupDelete = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['group'] = []\r\n        //  this.filterQueryFormation(selectedRecord, this.state.avaliableColumns)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onGroupChildDelete = (e, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['group'] = [...selectedRecord['group'].splice(0, index), ...selectedRecord['group'].splice(index + 1)]\r\n        // this.filterQueryFormation(selectedRecord, this.state.avaliableColumns)\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDownloadClick = (selectedRecord, avaliableColumns) => {\r\n        const query = this.filterQueryFormation(selectedRecord, avaliableColumns)\r\n        //const fileData = JSON.stringify(query);\r\n        const blob = new Blob([query], { type: \"text/plain\" });\r\n        const url = URL.createObjectURL(blob);\r\n        const link = document.createElement(\"a\");\r\n        link.download = \"query.txt\";\r\n        link.href = url;\r\n        link.click();\r\n    }\r\n\r\n    onGroupEdit = (e) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['groupNew'] = [...selectedRecord['group']]\r\n        this.setState({ selectedRecord, filterType: 5, showFilter: true });\r\n    }\r\n\r\n\r\n\r\n    queryDesignFormation = (selectedRecord, avaliableColumns) => {\r\n        let str = \"\";\r\n        str = '<span class=\\\"token keyword\\\">SELECT</span>\\n';\r\n        if ((selectedRecord.summarize &&\r\n            selectedRecord.summarize.length > 0)\r\n            || (selectedRecord.group && selectedRecord.group.length > 0)) {\r\n            if (selectedRecord.group && selectedRecord.group.length > 0) {\r\n                selectedRecord.group.map((item, index) => {\r\n                    if (selectedRecord.group.length - 1 !== index) {\r\n                        str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ?\r\n                            item.groupColumn.item.ismultilingual ?\r\n                                \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" + \"\\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\"\r\n                                : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\") + \",\"}</span>\\n`\r\n                        //str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\",\"\r\n                    } else {\r\n                        str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ?\r\n                            item.groupColumn.item.ismultilingual ?\r\n                                \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \" + \"\\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\"\r\n                                : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \\\"\" + item.groupColumn.item.scolumndisplayname + \"\\\"\")}</span>`\r\n                        //str = str + \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\"\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n            if (selectedRecord.summarize && selectedRecord.summarize.length > 0) {\r\n                if (selectedRecord.group && selectedRecord.group.length > 0)\r\n                    str = str + '<span>,</span>\\n';\r\n\r\n                selectedRecord.summarize.map((item, index) => {\r\n                    if (selectedRecord.summarize.length - 1 !== index) {\r\n                        if (item.summarizeCondition.value === \"COUNT\") {\r\n\r\n                            str = str + `<span class=\\\"token keyword\\\">${\" \" + item.summarizeCondition.value}</span>` +\r\n                                `<span>${\"( \" + (item.summarizeColumn.item.isjsoncolumn ?\r\n                                    item.summarizeColumn.item.ismultilingual ?\r\n                                        \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \"\r\n                                        : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                                    : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\",\"}</span>\\n`\r\n\r\n                            //str = str + item.summarizeCondition.value + \"( \" + \"\\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\",\";\r\n                        } else if (item.summarizeCondition.value === \"DISTINCT\") {\r\n\r\n                            str = str + `<span class=\\\"token keyword\\\"> COUNT</span>` +\r\n                                `<span>${\"( \" + item.summarizeCondition.value + \" \" + (item.summarizeColumn.item.isjsoncolumn ?\r\n                                    item.summarizeColumn.item.ismultilingual ?\r\n                                        \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \"\r\n                                        : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                                    : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\",\"}</span>\\n`\r\n\r\n                            //str = str + \" COUNT( \" + item.summarizeCondition.value + \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\",\";\r\n                        }\r\n                    } else {\r\n                        if (item.summarizeCondition.value === \"COUNT\") {\r\n\r\n                            str = str + `<span class=\\\"token keyword\\\">${\" \" + item.summarizeCondition.value}</span>` +\r\n                                `<span>${\"( \" + (item.summarizeColumn.item.isjsoncolumn ?\r\n                                    item.summarizeColumn.item.ismultilingual ?\r\n                                        \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \"\r\n                                        : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                                    : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\"\"}</span>`\r\n\r\n                            //  str = str + item.summarizeCondition.value + \"( \" + \"\\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"Count\\\"\";\r\n                        } else if (item.summarizeCondition.value === \"DISTINCT\") {\r\n\r\n                            str = str + `<span class=\\\"token keyword\\\"> COUNT</span>` +\r\n                                `<span>( </span>` +\r\n                                `<span class=\\\"token keyword\\\">${item.summarizeCondition.value}</span>` +\r\n                                `<span>${\" \" + (item.summarizeColumn.item.isjsoncolumn ?\r\n                                    item.summarizeColumn.item.ismultilingual ?\r\n                                        \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.summarizeColumn.item.scolumn + \"'->><@\" + item.summarizeColumn.item.parametername + \"@> \"\r\n                                        : \" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                                    : \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\"\"}</span>`\r\n\r\n                            // str = str + \" COUNT( \" + item.summarizeCondition.value + \" \\\"\" + item.summarizeTable.label + \"\\\".\\\"\" + item.summarizeColumn.item.scolumn + \"\\\" ) AS \\\"\" + item.summarizeTable.label + item.summarizeColumn.item.scolumndisplayname + \"CountDistinct\\\"\";\r\n                        }\r\n                    }\r\n\r\n                })\r\n            }\r\n        }\r\n        else {\r\n            // if (selectedRecord.scolumnname.length !== avaliableColumns.length) {\r\n            selectedRecord.scolumnname.map((item, index) => {\r\n                if (selectedRecord.scolumnname.length - 1 !== index) {\r\n\r\n                    str = str + `<span>${\"  \" + (item.item.isjsoncolumn ?\r\n                        item.item.ismultilingual ?\r\n                            \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->'\" + item.item.scolumn + \"'->><@\" + item.item.parametername + \"@> \" + \"\\\"\" + item.label + \"\\\"\"\r\n                            : \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->>'\" + item.item.scolumn + \"' \\\"\" + item.label + \"\\\"\"\r\n                        : \" \\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\"\") + \",\"}</span>\\n`\r\n                    //  str = str + \"\\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\", \"\r\n                } else {\r\n                    str = str + `<span>${\"  \" + (item.item.isjsoncolumn ?\r\n                        item.item.ismultilingual ?\r\n                            \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->'\" + item.item.scolumn + \"'->><@\" + item.item.parametername + \"@> \" + \"\\\"\" + item.label + \"\\\"\"\r\n                            : \" \\\"\" + item.item.stabledisplayname + \"\\\".\" + item.item.jsoncolumnname + \"->>'\" + item.item.scolumn + \"' \\\"\" + item.label + \"\\\"\"\r\n                        : \" \\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\" \")}</span>`\r\n                    // str = str + \"\\\"\" + item.item.stabledisplayname + \"\\\".\\\"\" + item.item.scolumn + \"\\\" \\\"\" + item.label + \"\\\" \"\r\n                }\r\n            })\r\n            // } else {\r\n            //     str = str + '<span class=\\\"token keyword\\\"> * </span>';\r\n            // }\r\n        }\r\n        str = str + '\\n<span class=\\\"token keyword\\\">FROM</span>\\n'\r\n\r\n        if (selectedRecord['stablename'].length === 1) {\r\n            selectedRecord['stablename'].map(item => {\r\n                str = str + `<span class=\\\"token identifier\\\" >${\"  \" + item.item.tableName + \" \\\"\" + item.label + \"\\\"\"}</span>\\n`\r\n            })\r\n        } else {\r\n\r\n            selectedRecord['TableJoin'].map((item, index) => {\r\n                if (index === 0) {\r\n\r\n                    //  str = str + selectedRecord['stablename'][index].item.tableName + \" \\\"\" + selectedRecord['stablename'][index].label + \"\\\" \" + item.TableJoining.value + \" \"\r\n\r\n                    str = str + `<span>${\"  \" + selectedRecord['stablename'][index].item.tableName + \" \\\"\" + selectedRecord['stablename'][index].label + \"\\\" \"}</span>\\n` +\r\n                        `<span class=\\\"token keyword\\\">${\"  \" + item.TableJoining.value + \" \"}</span>`\r\n\r\n                    item.Table.map((item1, index1) => {\r\n                        if (index1 === 0) {\r\n\r\n                            str = str + `<span>${item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\"\"}</span>` +\r\n                                '<span class=\\\"token keyword\\\"> ON </span>' +\r\n                                `<span>${\"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ?\r\n                                    item1.oldTableColumn.item.ismultilingual ?\r\n                                        item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \"\r\n                                        : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\"\r\n                                    : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ?\r\n                                        item1.newTableColumn.item.ismultilingual ?\r\n                                            item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \"\r\n                                            : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\"\r\n                                        : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \"}</span>\\n`\r\n\r\n                            // str = str + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\" ON \" +\r\n                            //     \"\\\"\" + item1.oldTable.label + \"\\\".\" + item1.oldTableColumn.item.scolumn + \"=\\\"\" + item1.newTable.label + \"\\\".\" + item1.newTableColumn.item.scolumn + \" \"\r\n                        } else {\r\n\r\n                            str = str + ` <span class=\\\"token keyword\\\"> AND </span>` +\r\n                                `<span>${\"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ?\r\n                                    item1.oldTableColumn.item.ismultilingual ?\r\n                                        item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \"\r\n                                        : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\"\r\n                                    : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ?\r\n                                        item1.newTableColumn.item.ismultilingual ?\r\n                                            item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \"\r\n                                            : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\"\r\n                                        : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \"}</span>\\n`\r\n                            // str = str + \" AND \\\"\" + item1.oldTable.label + \"\\\".\" + item1.oldTableColumn.item.scolumn + \"=\\\"\" + item1.newTable.label + \"\\\".\" + item1.newTableColumn.item.scolumn + \" \"\r\n                        }\r\n                    })\r\n                } else {\r\n\r\n                    str = str + `<span class=\\\"token keyword\\\">${item.TableJoining.value}</span>`\r\n\r\n                    item.Table.map((item1, index1) => {\r\n                        if (index1 === 0) {\r\n\r\n                            str = str + `<span>${\" \" + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\ \"}</span>` +\r\n                                `<span class=\\\"token keyword\\\"> ON </span>` +\r\n                                `<span>${\"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ?\r\n                                    item1.oldTableColumn.item.ismultilingual ?\r\n                                        item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \"\r\n                                        : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\"\r\n                                    : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ?\r\n                                        item1.newTableColumn.item.ismultilingual ?\r\n                                            item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \"\r\n                                            : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\"\r\n                                        : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \"}</span>\\n`\r\n\r\n                            // str = str + item1.newTable.item.tableName + \" \\\"\" + item1.newTable.label + \"\\\" ON \" +\r\n                            //     \"\\\"\" + item1.oldTable.label + \"\\\".\" + item1.oldTableColumn.item.scolumn + \"=\\\"\" + item1.newTable.label + \"\\\".\" + item1.newTableColumn.item.scolumn + \" \"\r\n                        } else {\r\n\r\n                            str = str + `<span class=\\\"token keyword\\\"> AND </span>` +\r\n                                `<span>${\"\\\"\" + item1.oldTable.label + \"\\\".\" + (item1.oldTableColumn.item.isjsoncolumn ?\r\n                                    item1.oldTableColumn.item.ismultilingual ?\r\n                                        item1.oldTableColumn.item.jsoncolumnname + \"->'\" + item1.oldTableColumn.item.scolumn + \"'->><@\" + item1.oldTableColumn.item.parametername + \"@> \"\r\n                                        : item1.oldTableColumn.item.jsoncolumnname + \"->>'\" + item1.oldTableColumn.item.scolumn + \"'\"\r\n                                    : \"\\\"\" + item1.oldTableColumn.item.scolumn + \"\\\"\") + \"=\\\"\" + item1.newTable.label + \"\\\".\" + (item1.newTableColumn.item.isjsoncolumn ?\r\n                                        item1.newTableColumn.item.ismultilingual ?\r\n                                            item1.newTableColumn.item.jsoncolumnname + \"->'\" + item1.newTableColumn.item.scolumn + \"'->><@\" + item1.newTableColumn.item.parametername + \"@> \"\r\n                                            : item1.newTableColumn.item.jsoncolumnname + \"->>'\" + item1.newTableColumn.item.scolumn + \"'\"\r\n                                        : \"\\\"\" + item1.newTableColumn.item.scolumn + \"\\\"\") + \" \"}</span>\\n`\r\n\r\n                            // str = str + \" AND \\\"\" + item1.oldTable.label + \"\\\".\" + item1.oldTableColumn.item.scolumn + \"=\\\"\" + item1.newTable.label + \"\\\".\" + item1.newTableColumn.item.scolumn + \" \"\r\n                        }\r\n                    })\r\n                }\r\n\r\n            })\r\n        }\r\n\r\n        if (selectedRecord['filter'] && selectedRecord['filter'].length > 0)\r\n            str = str + `<span class=\\\"token keyword\\\">WHERE</span>\\n`\r\n\r\n\r\n\r\n        selectedRecord['filter'] && selectedRecord['filter'].map((item1, index1) => {\r\n            // str = str + \" ( \";\r\n\r\n            str = str + `<span class=\\\"token punctuation\\\">  (</span>\\n`\r\n\r\n            item1.map((item, index) => {\r\n\r\n                // if (item.filterCondition.value !== 'NULL'\r\n                //     && item.filterCondition.value !== 'NOT NULL' &&\r\n                //     item.filterCondition.value !== 'IN' &&\r\n                //     item.filterCondition.value !== 'PRESENT' &&\r\n                //     item.filterCondition.value !== 'BLANK') {\r\n\r\n\r\n\r\n                // str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" \" + item.filterCondition.value + \"'\" + item.filterValue + \"' \"\r\n                // }\r\n                if (item.filterCondition.value === 'IN') {\r\n\r\n                    str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \"}</span>` +\r\n                        `<span class=\\\"token operator\\\">${item.filterCondition.value}</span>` +\r\n                        `<span class=\\\"token punctuation\\\"> ('</span>` +\r\n                        `<span class=\\\"token string\\\">${item.filterValue + \"') \"}</span>`\r\n\r\n                    //str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" \" + item.filterCondition.value + \" ('\" + item.filterValue + \"') \"\r\n                }\r\n                else if (item.filterCondition.value === 'PRESENT') {\r\n\r\n                    str = str + `<span class=\\\"token operator\\\"> NOT</span>` +\r\n                        `<span>${\" \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" =\"}</span>` +\r\n                        `<span class=\\\"token string\\\">''</span>`\r\n\r\n                    //str = str + \" NOT \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" ='' \"\r\n                }\r\n                else if (item.filterCondition.value === 'BLANK') {\r\n\r\n                    str = str + `<span>${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \"}</span>` +\r\n                        `<span class=\\\"token string\\\">''</span>`\r\n\r\n                    // str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" ='' \"\r\n                }\r\n                else if (item.filterCondition.value === 'NULL'\r\n                    || item.filterCondition.value === 'NOT NULL') {\r\n\r\n                    str = str + `<span>${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\")}</span>` +\r\n                        `<span class=\\\"token operator\\\"> IS </span>` +\r\n                        `<span class=\\\"token boolean\\\">${item.filterCondition.value + \" \"}</span>`\r\n\r\n                    // str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" IS \" + item.filterCondition.value + \" \"\r\n                }\r\n                else if (item.filterCondition.value === 'IS NULL') {\r\n\r\n                    str = str + `<span>${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\")}</span>` +\r\n                        // `<span class=\\\"token operator\\\"> IS </span>` +\r\n                        `<span class=\\\"token boolean\\\">${item.filterCondition.value + \" \"}</span>`\r\n\r\n                    // str = str + \"  \\\"\" + item.filterTable.label + \"\\\".\" + item.filterColumn.item.scolumn + \" IS \" + item.filterCondition.value + \" \"\r\n                }\r\n                else if (item.filterCondition.value === 'STARTS WITH') {\r\n                    str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \"}</span>` +\r\n                        `<span class=\\\"token operator\\\"> ILIKE </span>` +\r\n                        `<span class=\\\"token string\\\">${\"'\" + item.filterValue + \"%' collate \\\"default\\\" \"}</span>`\r\n                }\r\n                else if (item.filterCondition.value === 'ENDS WITH') {\r\n                    str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \"}</span>` +\r\n                        `<span class=\\\"token operator\\\"> ILIKE </span>` +\r\n                        `<span class=\\\"token string\\\">${\"'%\" + item.filterValue + \"' collate \\\"default\\\" \"}</span>`\r\n                }\r\n                else if (item.filterCondition.value === 'CONTAINS') {\r\n                    str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \"}</span>` +\r\n                        `<span class=\\\"token operator\\\"> ILIKE </span>` +\r\n                        `<span class=\\\"token string\\\">${\"'\" + item.filterValue + \"%' collate \\\"default\\\"\"}</span>`\r\n                }\r\n                else if (item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === '=' || item.filterCondition.value === '<' || item.filterCondition.value === '>')) {\r\n                    str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value}</span>` +\r\n                        `<span class=\\\"token string\\\">${(item.filterValueType.value === 1 ? (\"<#\" + item.filterColumn.item.scolumn + \"#>\") : (\"'\" + convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) + \"' \"))}</span>`\r\n                }\r\n                else if (item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === 'NOT')) {\r\n                    str = str + `<span>(</span><span class=\\\"token string\\\">NOT</span><span> ${\" \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \"}</span>` +\r\n                        `<span class=\\\"token string\\\">${(item.filterValueType.value === 1 ? (\"<#\" + item.filterColumn.item.scolumn + \"#>)\") : (\"'\" + convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) + \"' )\"))}</span>`\r\n                }\r\n\r\n                else if (item.filterColumn.item.columndatatype === 'string' && (item.filterCondition.value === 'NOT')) {\r\n                    str = str + `<span>(</span><span class=\\\"token string\\\">NOT</span><span> ${\" \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \"}</span>` +\r\n                        `<span class=\\\"token string\\\">${(item.filterValueType.value === 1 ? (\"<@\" + item.filterColumn.item.scolumn + \"@>)\") : (\"'\" + item.filterValue + \"' )\"))}</span>`\r\n                }\r\n                else {\r\n                    str = str + `<span> ${\"  \\\"\" + item.filterTable.label + \"\\\".\" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.parametername + \"@> \"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value}</span>` +\r\n                        `<span class=\\\"token string\\\">${(item.filterValueType.value === 1 ? ((item.filterColumn.item.columndatatype === 'date' ? \"<#\" : \"<@\") + item.filterColumn.item.scolumn + (item.filterColumn.item.columndatatype === 'date' ? \"#>\" : \"@>\")) : (\"'\" + item.filterValue + \"' \"))}</span>`\r\n                }\r\n\r\n                if (index !== selectedRecord['filter'][index1].length - 1) {\r\n\r\n                    str = str + `\\n<span class=\\\"token operator\\\">${\"    \" + selectedRecord['filterJoinCondition'][index1].value}</span>\\n`\r\n\r\n                    // str = str + selectedRecord['filterJoinCondition'][index1].value + \" \";\r\n                }\r\n            })\r\n\r\n            str = str + `\\n<span class=\\\"token punctuation\\\">  )</span>\\n`\r\n\r\n            if (index1 !== selectedRecord['filter'].length - 1) {\r\n\r\n                str = str + `<span class=\\\"token operator\\\">${\"  \" + selectedRecord['filterJoinCondition'][index1 + 1] &&\r\n                    selectedRecord['filterJoinCondition'][index1 + 1].value}</span>\\n`\r\n\r\n\r\n            }\r\n        })\r\n\r\n        if (selectedRecord.group && selectedRecord.group.length > 0) {\r\n            //str = str + \" GROUP BY \"\r\n\r\n            str = str + `<span class=\\\"token keyword\\\">GROUP BY</span>\\n`\r\n        }\r\n        else if (selectedRecord.summarize && selectedRecord.summarize.length > 0 &&\r\n            selectedRecord['sort'] && selectedRecord['sort'].length > 0) {\r\n            str = str + `<span class=\\\"token keyword\\\">GROUP BY</span>\\n`\r\n        }\r\n\r\n        if ((selectedRecord.summarize && selectedRecord.summarize.length > 0\r\n            || selectedRecord.group && selectedRecord.group.length > 0)\r\n            && selectedRecord['sort'] && selectedRecord['sort'].length > 0) {\r\n            let sortIndex = [];\r\n\r\n            if (selectedRecord.group && selectedRecord.group.length > 0) {\r\n                selectedRecord['group'] && selectedRecord['group'].map((item, index1) => {\r\n\r\n                    if (selectedRecord['sort'].findIndex(x =>\r\n                        (x.sortTable.label + x.sortColumn.item.scolumn)\r\n                        === (item.groupTable.label + item.groupColumn.item.scolumn)) !== -1) {\r\n\r\n                        sortIndex[index1] = selectedRecord['sort'].findIndex(x =>\r\n                            (x.sortTable.label + x.sortColumn.item.scolumn)\r\n                            === (item.groupTable.label + item.groupColumn.item.scolumn))\r\n                    }\r\n\r\n                    if (selectedRecord['group'].length - 1 !== index1) {\r\n\r\n                        str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ?\r\n                            item.groupColumn.item.ismultilingual ?\r\n                                \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \"\r\n                                : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \") + \",\"}</span>\\n`\r\n                        //   str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn + \",\"\r\n                    } else {\r\n\r\n                        str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ?\r\n                            item.groupColumn.item.ismultilingual ?\r\n                                \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@> \"\r\n                                : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"' \"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\" \")}</span>`\r\n                        //  str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn\r\n                    }\r\n                    // }\r\n                })\r\n\r\n                if (selectedRecord['sort'].length !== sortIndex.length)\r\n                    str = str + `<span>,</span>\\n`\r\n                //str = str + \" , \"\r\n\r\n                selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\r\n                    if (sortIndex.findIndex(x => x === index1) === -1) {\r\n                        if (selectedRecord['sort'].length - 1 !== index1) {\r\n                            str = str + `<span>${\" \" + (item.sortColumn.item.isjsoncolumn ?\r\n                                item.sortColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@>,\"\r\n                                    : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"',\"\r\n                                : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\") + \",\"}</span>\\n`\r\n                        } else {\r\n                            str = str + `<span>${\" \" + (item.sortColumn.item.isjsoncolumn ?\r\n                                item.sortColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@>,\"\r\n                                    : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"',\"\r\n                                : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\")}</span>\\n`\r\n                        }\r\n                    }\r\n                })\r\n\r\n            } else if (selectedRecord.summarize && selectedRecord.summarize.length > 0) {\r\n\r\n                //selectedRecord['summarize'] && selectedRecord['summarize'].map((item, index1) => {\r\n\r\n                // if (selectedRecord['sort'].findIndex(x =>\r\n                //     (x.sortTable.label + x.sortColumn.item.scolumn)\r\n                //     === (item.summarizeTable.label + item.summarizeColumn.item.scolumn)) !== -1) {\r\n\r\n                //     sortIndex[index1] = selectedRecord['sort'].findIndex(x =>\r\n                //         (x.sortTable.label + x.sortColumn.item.scolumn)\r\n                //         === (item.summarizeTable.label + item.summarizeColumn.item.scolumn))\r\n                // }\r\n\r\n                //     if (selectedRecord['summarize'].length - 1 !== index1) {\r\n                //         str = str + `<span>${\" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn + \",\"}</span>\\n`\r\n                //         //str = str + \"  \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn + \",\"\r\n                //     } else {\r\n                //         str = str + `<span>${\" \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn}</span>`\r\n                //         // str = str + \"  \\\"\" + item.summarizeTable.label + \"\\\".\" + item.summarizeColumn.item.scolumn\r\n                //     }\r\n                //     // }\r\n                // })\r\n\r\n                // if (selectedRecord['sort'].length !== sortIndex.length)\r\n                //     str = str + `<span>,</span>\\n`\r\n\r\n                selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\r\n                    if (sortIndex.findIndex(x => x === index1) === -1) {\r\n                        if (selectedRecord['sort'].length - 1 !== index1) {\r\n                            str = str + `<span>${\" \" + (item.sortColumn.item.isjsoncolumn ?\r\n                                item.sortColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@>,\"\r\n                                    : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"',\"\r\n                                : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\") + \",\"}</span>\\n`\r\n                            //str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn + \",\"\r\n                        } else {\r\n                            str = str + `<span>${\" \" + (item.sortColumn.item.isjsoncolumn ?\r\n                                item.sortColumn.item.ismultilingual ?\r\n                                    \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@>,\"\r\n                                    : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"',\"\r\n                                : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\")}</span>\\n`\r\n                            // str = str + \"  \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.scolumn\r\n                        }\r\n                    }\r\n                })\r\n\r\n            }\r\n\r\n        }\r\n        else if (selectedRecord.group && selectedRecord.group.length > 0) {\r\n\r\n            selectedRecord['group'] && selectedRecord['group'].map((item, index1) => {\r\n                if (selectedRecord['group'].length - 1 !== index1) {\r\n                    str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ?\r\n                        item.groupColumn.item.ismultilingual ?\r\n                            \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@>,\"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"',\"\r\n                        : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\") + \",\"}</span>\\n`\r\n                    //str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn + \",\"\r\n                } else {\r\n                    str = str + `<span>${\" \" + (item.groupColumn.item.isjsoncolumn ?\r\n                        item.groupColumn.item.ismultilingual ?\r\n                            \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->'\" + item.groupColumn.item.scolumn + \"'->><@\" + item.groupColumn.item.parametername + \"@>,\"\r\n                            : \" \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.jsoncolumnname + \"->>'\" + item.groupColumn.item.scolumn + \"',\"\r\n                        : \" \\\"\" + item.groupTable.label + \"\\\".\\\"\" + item.groupColumn.item.scolumn + \"\\\"\")}</span>\\n`\r\n                    //str = str + \"  \\\"\" + item.groupTable.label + \"\\\".\" + item.groupColumn.item.scolumn\r\n                }\r\n            })\r\n        }\r\n\r\n        if (selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].length > 0) {\r\n            str = str + `\\n<span class=\\\"token keyword\\\">HAVING</span>\\n`\r\n            // str = str + \" HAVING \"\r\n        }\r\n\r\n        selectedRecord['filterSummarize'] && selectedRecord['filterSummarize'].map((item, index) => {\r\n\r\n            if (item.filterColumn.item.summarizeCondition.value === \"COUNT\") {\r\n\r\n                str = str + `<span class=\\\"token keyword\\\">${item.filterColumn.item.summarizeCondition.value}</span>` +\r\n                    `<span>${\"( \" + (item.filterColumn.item.summarizeColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.summarizeColumn.item.ismultilingual ?\r\n                            \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.summarizeColumn.item.parametername + \"@> \"\r\n                            : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                        : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\"\") + \"\\\" ) \" + item.filterCondition.value + \"</span><span class=\\\"token string\\\">\" + (item.filterValueType.value === 1 ? (\"<@\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"@>\") : (\"'\" + item.filterValue + \"' \"))}</span>\\n`\r\n\r\n                //str = str + item.filterColumn.item.summarizeCondition.value + \"( \" + \"\\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\" ) \" + item.filterCondition.value + \" \" + item.filterValue;\r\n            } else {\r\n\r\n                str = str + `<span class=\\\"token keyword\\\">COUNT</span>` +\r\n                    `<span>( </span>` +\r\n                    `<span class=\\\"token keyword\\\">${item.filterColumn.item.summarizeCondition.value}</span>` +\r\n                    `<span>${(item.filterColumn.item.summarizeColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.summarizeColumn.item.ismultilingual ?\r\n                            \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"'->><@\" + item.filterColumn.item.summarizeColumn.item.parametername + \"@> \"\r\n                            : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\" + item.filterColumn.item.summarizeColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"' \\\"\"\r\n                        : \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\"\") + \" ) \" + item.filterCondition.value + \"</span><span class=\\\"token string\\\"> \" + (item.filterValueType.value === 1 ? (\"<@\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"@>\") : (\"'\" + item.filterValue + \"' \"))}</span>\\n`\r\n\r\n                // str = str + \"COUNT( \" + item.filterColumn.item.summarizeCondition.value + \" \\\"\" + item.filterColumn.item.summarizeTable.label + \"\\\".\\\"\" + item.filterColumn.item.summarizeColumn.item.scolumn + \"\\\" ) \" + item.filterCondition.value + \" \" + item.filterValue;\r\n            }\r\n            if (index !== selectedRecord['filterSummarize'].length - 1) {\r\n                str = str + `<span class=\\\"token keyword\\\">${\" \" + selectedRecord['filterSummarizeJoinCondition'].value + \" \"}</span>`\r\n                // str = str + \" \" + selectedRecord['filterSummarizeJoinCondition'].value + \" \";\r\n            }\r\n        })\r\n\r\n        if (selectedRecord['sort'] && selectedRecord['sort'].length > 0)\r\n            str = str + `\\n<span class=\\\"token keyword\\\">ORDER BY</span>\\n`\r\n\r\n        selectedRecord['sort'] && selectedRecord['sort'].map((item, index1) => {\r\n            if (selectedRecord['sort'].length - 1 !== index1) {\r\n\r\n                str = str + `<span>${(item.sortColumn.item.isjsoncolumn ?\r\n                    item.sortColumn.item.ismultilingual ?\r\n                        \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \"\r\n                        : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \"\r\n                    : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\") + ' '}</span>` +\r\n                    `<span class=\\\"token keyword\\\">${item.sortCondition.value}</span>` +\r\n                    `<span>,</span>\\n`\r\n            } else {\r\n\r\n                str = str + `<span>${(item.sortColumn.item.isjsoncolumn ?\r\n                    item.sortColumn.item.ismultilingual ?\r\n                        \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->'\" + item.sortColumn.item.scolumn + \"'->><@\" + item.sortColumn.item.parametername + \"@> \"\r\n                        : \" \\\"\" + item.sortTable.label + \"\\\".\" + item.sortColumn.item.jsoncolumnname + \"->>'\" + item.sortColumn.item.scolumn + \"' \"\r\n                    : \" \\\"\" + item.sortTable.label + \"\\\".\\\"\" + item.sortColumn.item.scolumn + \"\\\"\") + ' '}</span>` +\r\n                    `<span class=\\\"token keyword\\\">${item.sortCondition.value}</span>\\n`\r\n\r\n            }\r\n        })\r\n\r\n        if (((selectedRecord.summarize === undefined)\r\n            || (selectedRecord.summarize && selectedRecord.summarize.length === 0))\r\n            && ((selectedRecord.group === undefined) || (selectedRecord.group\r\n                && selectedRecord.group.length === 0))) {\r\n            if (selectedRecord['Limit'] && selectedRecord['Limit'] !== 0) {\r\n\r\n                str = str + `<span class=\\\"token keyword\\\">LIMIT ` +\r\n                    `</span><span class=\\\"token number\\\">${selectedRecord['Limit']}</span>`\r\n\r\n            }\r\n\r\n        }\r\n        return str;\r\n\r\n    }\r\n\r\n    render() {\r\n        //{console.log('sql',this.props.filtersearchRef)}\r\n        const selectedRecord1 = this.state.selectedRecord || {}\r\n        let sortIndex = [];\r\n        const filterParam = {}\r\n        return (\r\n            <div className=\"client-listing-wrap \">\r\n                {selectedRecord1 && selectedRecord1.selectedTable ?\r\n                    <>\r\n                        <div className={'columns1 is-marginless is-gapless'}>\r\n                            <aside className={'column1 is-3 is-hidden-touch'}>\r\n                                <section className={'hero has-background-white is-fullheight-with-navbar'}>\r\n                                    <div className={'hero-head sql1'} >\r\n                                        <div className={'container'}>\r\n                                            <div className='py-1 has-background-grey-dark has-text-light has-text-centered'>\r\n                                                <span className='has-text-weight-bold'>\r\n                                                    {\"Table : \"}\r\n                                                </span>\r\n                                                {selectedRecord1.selectedTable.stabledisplayname}\r\n                                                <span className={'icon delete closetable is-marginless'} onClick={(e) => this.onClose(e)}>\r\n                                                    <i className=\"fas fa-times\" />\r\n                                                </span>\r\n                                            </div>\r\n                                            <div className='card1'>\r\n                                                <div className={`card-content pt-3 pb-0 ${(selectedRecord1['group'] &&\r\n                                                    selectedRecord1['group'].length > 0) || (selectedRecord1['summarize'] &&\r\n                                                        selectedRecord1['summarize'].length > 0) ? 'is-disabled' : ''}`}>\r\n                                                    <div className={'columns1 mb-0'}>\r\n                                                        <div className={'column1 has-text-weight-bold pt-3'}>\r\n                                                            <Row>\r\n                                                                <Col md={3}>\r\n                                                                    <span>\r\n                                                                        {'Show'}\r\n                                                                    </span>\r\n                                                                </Col>\r\n                                                                <Col md={6}>\r\n                                                                    {/* <div className={'dropdown1 is-left has-text-weight-light'}> */}\r\n                                                                    {/* <FormGroupingComponent\r\n                                                                        name={\"scolumnname\"}\r\n                                                                        // label={ this.props.intl.formatMessage({ id:\"IDS_SCREENRIGHTS\" })}                              \r\n                                                                        options={this.state.avaliableColumns || []}\r\n                                                                        optionId=\"scolumn\"\r\n                                                                        optionValue=\"scolumndisplayname\"\r\n                                                                        value={selectedRecord1[\"scolumnname\"] ? selectedRecord1[\"scolumnname\"] || [] : []}\r\n                                                                        isMandatory={false}\r\n                                                                        isClearable={false}\r\n                                                                        disableSearch={false}\r\n                                                                        disabled={false}\r\n                                                                        closeMenuOnSelect={false}\r\n                                                                        alphabeticalSort={true}\r\n                                                                        allItemSelectedLabel={this.props.intl.formatMessage({ id: \"IDS_ALLCOLUMNSELECTED\" })}\r\n                                                                        noOptionsLabel={this.props.intl.formatMessage({ id: \"IDS_NOOPTION\" })}\r\n                                                                        searchLabel={this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })}\r\n                                                                        selectAllLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTALL\" })}\r\n                                                                        onChange={(event) => this.onComboFieldChange(event, \"scolumnname\")}\r\n\r\n                                                                    /> */}\r\n\r\n                                                                    <ButtonMultiSelectDropDown\r\n                                                                        options={this.state.avaliableColumns || []}\r\n                                                                        groupingKey=\"parentTableIndex\"\r\n                                                                        groupingDisplayname=\"stabledisplayname\"\r\n                                                                        value={selectedRecord1[\"scolumnname\"] ? selectedRecord1[\"scolumnname\"] : []}\r\n                                                                        label={\"Column Selected\"}\r\n                                                                        onClick={(event) => this.onComboFieldChange(event, \"scolumnname\")}\r\n                                                                    />\r\n\r\n\r\n                                                                    {/* <FormMultiLevelSelection\r\n                                                                    name={\"scolumnname\"}\r\n                                                                    // label={ this.props.intl.formatMessage({ id:\"IDS_SCREENRIGHTS\" })}                              \r\n                                                                    options={this.state.avaliableColumnsForMultiSelect || []}\r\n                                                                    optionId=\"scolumn\"\r\n                                                                    optionValue=\"scolumndisplayname\"\r\n                                                                    value={this.state.selectedRecord[\"scolumnname0\"] ?\r\n                                                                        this.state.selectedRecord[\"scolumnname0\"] || [] : []}\r\n                                                                    isMandatory={true}\r\n                                                                    isClearable={true}\r\n                                                                    disableSearch={false}\r\n                                                                    disabled={false}\r\n                                                                    closeMenuOnSelect={false}\r\n                                                                    alphabeticalSort={true}\r\n                                                                    allItemSelectedLabel={this.props.intl.formatMessage({ id: \"IDS_ALLCOLUMNSELECTED\" })}\r\n                                                                    noOptionsLabel={this.props.intl.formatMessage({ id: \"IDS_NOOPTION\" })}\r\n                                                                    searchLabel={this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })}\r\n                                                                    selectAllLabel={this.props.intl.formatMessage({ id: \"IDS_SELECTALL\" })}\r\n                                                                    onChange={(event) => this.onComboFieldChange(event, \"scolumnname\")}\r\n\r\n                                                                /> */}\r\n                                                                    {/* </div> */}\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='card-content pt-3 pb-0 '>\r\n                                                    <div className={'columns1 mb-0'}>\r\n                                                        <div className={'column1 is-6 has-text-weight-bold pt-3'}>\r\n\r\n                                                            <span> {this.props.intl.formatMessage({ id: \"IDS_FILTER\" })}</span>\r\n\r\n                                                            <Button className={'button is-light is-small ml-3'} onClick={(e) => this.onCondition(e, 1)}>\r\n                                                                <FontAwesomeIcon icon={faPlus} className={'icon'} />\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {selectedRecord1['filterSummarize'] && selectedRecord1['filterSummarize'].length > 0 &&\r\n                                                    // this.state.selectedRecord['filterSummarize'].map((item, index) => {\r\n                                                    <div className='card-content pt-3 pb-0 '>\r\n                                                        <div className={'has-text-right-tablet has-text-centered'}>\r\n                                                            <div className={'buttons is-right'}>\r\n\r\n                                                                <span className={\"button is-small is-light is-success has-text-weight-bold is-uppercase mr-auto mb-2 ml-0\"}>\r\n                                                                    {this.props.intl.formatMessage({ id: \"IDS_SUMMARIZATION\" })}\r\n                                                                </span>\r\n                                                                {/* } */}\r\n                                                                <Button className=\"button is-small is-light is-info\" onClick={(e) => this.onFilterSummarizeEdit(e)} type=\"button\" tabindex=\"0\">\r\n                                                                    <span className=\"icon\" >\r\n                                                                        {/* <i className=\"fas fa-pen\" aria-hidden=\"true\"></i> */}\r\n                                                                        <FontAwesomeIcon icon={faPen} />\r\n                                                                    </span>\r\n                                                                </Button>\r\n                                                                <Button className=\"button is-small is-light is-danger\" onClick={(e) => this.onFilterSummarizeDelete(e)} type=\"button\" tabindex=\"0\">\r\n                                                                    <span className=\"icon\" >\r\n                                                                        {/* <i className=\"fas fa-times\" aria-hidden=\"true\"></i> */}\r\n                                                                        <FontAwesomeIcon icon={faTimes} />\r\n                                                                    </span>\r\n                                                                </Button>\r\n                                                                {/* <button className={'button is-light is-small ml-3'} onClick={(e) => this.onFilterEdit(e, index)}>\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} className={'icon'} />\r\n                                                                    </button> */}\r\n                                                                {/* <button className={'button is-light is-small ml-3'} onClick={(e) => this.onFilterDelete(e, index)}>\r\n                                                                        <FontAwesomeIcon icon={faTrash} className={'icon'} />\r\n                                                                    </button> */}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className={'column1 is-10'}>\r\n                                                                <div className={'field is-grouped is-grouped-multiline is-scrollable'}>\r\n                                                                    {selectedRecord1['filterSummarize'] && selectedRecord1['filterSummarize'].map((item1, index1) => {\r\n                                                                        return <div className={'control'}>\r\n                                                                            <div className={'tags has-addons'}>\r\n                                                                                <span className={'tag is-light is-success'}>\r\n                                                                                    {item1.filterColumn.item.summarizeCondition.value}\r\n                                                                                </span>\r\n                                                                                <span className={'tag is-light is-info'}>\r\n                                                                                    {item1.filterColumn.label}\r\n                                                                                </span>\r\n                                                                                <span className={'tag is-light has-text-weight-bold'}>\r\n                                                                                    {item1.filterCondition.value}\r\n                                                                                </span>\r\n                                                                                <span className={'tag is-light is-info'}>\r\n                                                                                    {item1.filterValue}\r\n                                                                                </span>\r\n                                                                                <span onClick={e => this.onFilterSummarizeChildDelete(e, index1)} className={'tag is-light is-danger is-clickable'}>\r\n                                                                                    <span className={'delete is-small is-marginless'}>\r\n                                                                                        {/* <FontAwesomeIcon icon={faWindowClose} /> */}\r\n                                                                                        <i className=\"fas fa-times\" />\r\n                                                                                    </span>\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    })}\r\n\r\n                                                                </div>\r\n                                                            </div>\r\n\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    // })\r\n                                                }\r\n                                                {/* filter */}\r\n                                                {selectedRecord1['filter'] && selectedRecord1['filter'].length > 0 &&\r\n                                                    selectedRecord1['filter'].map((item, index) => {\r\n                                                        return <div className='card-content pt-3 pb-0 '>\r\n                                                            <div className={'has-text-right-tablet has-text-centered'}>\r\n                                                                <div className={'buttons is-right'}>\r\n\r\n                                                                    {index > 0 && index !== selectedRecord1['filter'].length &&\r\n                                                                        selectedRecord1['filterJoinCondition'][index] &&\r\n\r\n                                                                        <span className={\"button is-small is-light is-success has-text-weight-bold is-uppercase mr-auto mb-2 ml-0\"}>\r\n                                                                            {selectedRecord1['filterJoinCondition'][index].value}\r\n                                                                        </span>}\r\n                                                                    <Button className=\"button is-small is-light is-info\" onClick={(e) => this.onFilterEdit(e, index)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            {/* <i className=\"fas fa-pen\" aria-hidden=\"true\"></i> */}\r\n                                                                            <FontAwesomeIcon icon={faPen} />\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                    <Button className=\"button is-small is-light is-danger\" onClick={(e) => this.onFilterDelete(e, index)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            {/* <i className=\"fas fa-times\" aria-hidden=\"true\"></i> */}\r\n                                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                    {/* <button className={'button is-light is-small ml-3'} onClick={(e) => this.onFilterEdit(e, index)}>\r\n                                                                        <FontAwesomeIcon icon={faPencilAlt} className={'icon'} />\r\n                                                                    </button> */}\r\n                                                                    {/* <button className={'button is-light is-small ml-3'} onClick={(e) => this.onFilterDelete(e, index)}>\r\n                                                                        <FontAwesomeIcon icon={faTrash} className={'icon'} />\r\n                                                                    </button> */}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            <div className={'columns1 mb-0'}>\r\n                                                                <div className={'column1 is-10'}>\r\n                                                                    <div className={'field is-grouped is-grouped-multiline is-scrollable'}>\r\n                                                                        {item.map((item1, index1) => {\r\n                                                                            return <div className={'control'}>\r\n                                                                                <div className={'tags has-addons'}>\r\n                                                                                    <span className={'tag is-light is-success'}>\r\n                                                                                        {item1.filterTable.label}\r\n                                                                                    </span>\r\n                                                                                    <span className={'tag is-light is-info'}>\r\n                                                                                        {item1.filterColumn.label}\r\n                                                                                    </span>\r\n                                                                                    <span className={'tag is-light has-text-weight-bold'}>\r\n                                                                                        {item1.filterCondition.value}\r\n                                                                                    </span>\r\n                                                                                    <span className={'tag is-light is-info'}>\r\n                                                                                        {item1.filterValueType.value === 2 ?\r\n                                                                                            item1.filterColumn.item.columndatatype === 'date' ?\r\n                                                                                                (item1.filterCondition.value === '=' ||\r\n                                                                                                    item1.filterCondition.value === '<' ||\r\n                                                                                                    item1.filterCondition.value === '>'\r\n                                                                                                    || item1.filterCondition.value === 'NOT') ?\r\n                                                                                                    convertDateTimetoStringDBFormat(item1.filterValue, this.props.Login.userInfo)\r\n                                                                                                    : item1.filterValue\r\n                                                                                                : item1.filterValue :\r\n                                                                                            item1.filterColumn.item.columndatatype === 'date' ?\r\n                                                                                                \"<#\" + item1.filterColumn.item.scolumn + \"#>\" :\r\n                                                                                                \"<@\" + item1.filterColumn.item.scolumn + \"@>\"}\r\n                                                                                    </span>\r\n                                                                                    <span onClick={e => this.onFilterChildDelete(e, index, index1)} className={'tag is-light is-danger is-clickable'}>\r\n                                                                                        <span className={'delete is-small is-marginless'}>\r\n                                                                                            {/* <FontAwesomeIcon icon={faWindowClose} /> */}\r\n                                                                                            <i className=\"fas fa-times\" />\r\n                                                                                        </span>\r\n                                                                                    </span>\r\n                                                                                </div>\r\n                                                                            </div>\r\n                                                                        })}\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    })\r\n                                                }\r\n                                                <div className='card-content pt-3 pb-0 '>\r\n                                                    <div className={'columns1 mb-0'}>\r\n                                                        <div className={'column1 is-6 has-text-weight-bold pt-3'}>\r\n\r\n                                                            <span>{this.props.intl.formatMessage({ id: \"IDS_JOIN\" })}</span>\r\n\r\n                                                            <Button className={'button is-light is-small ml-3'} onClick={(e) => this.onCondition(e, 2)}>\r\n                                                                <FontAwesomeIcon icon={faPlus} className={'icon'} />\r\n\r\n                                                            </Button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                {/* join */}\r\n                                                {selectedRecord1['TableJoin'] && selectedRecord1['TableJoin'].length > 0 &&\r\n                                                    selectedRecord1['TableJoin'].map((item, index) => {\r\n                                                        return <div className='card-content pt-3 pb-0 '>\r\n                                                            {/* <div className={'has-text-right-tablet has-text-centered'}>\r\n                                                                        <div className={'buttons is-right'}> */}\r\n\r\n                                                            {/* {index > 0 && index !== this.state.selectedRecord['filter'].length &&\r\n                                                                                this.state.selectedRecord['filterJoinCondition'][index] && */}\r\n\r\n                                                            {/* <span className={\"button is-small is-light is-success has-text-weight-bold is-uppercase mr-auto mb-2 ml-0\"}>\r\n                                                                                {item['TableJoining'].label}\r\n                                                                            </span> */}\r\n                                                            {/* }*/}\r\n                                                            {/* <button className={'button is-light is-small ml-3'} onClick={(e) => this.onJoinDelete(e, index)}>\r\n                                                                                <FontAwesomeIcon icon={faTrash} className={'icon'} />\r\n                                                                            </button>\r\n                                                                        </div>\r\n                                                                    </div> */}\r\n                                                            <div className={'columns1 mb-0'}>\r\n                                                                <div className={'column1 is-10 has-text-right-tablet has-text-centered'}>\r\n                                                                    <div className={'field is-grouped is-grouped-multiline is-scrollable'}>\r\n                                                                        <div className={'control'}>\r\n                                                                            <div className={'tags has-addons mb-0'}>\r\n                                                                                <span className={'tag is-light has-text-weight-bold'}>\r\n                                                                                    {item['TableJoining'].label}\r\n                                                                                </span>\r\n                                                                            </div>\r\n                                                                            {item.Table.map((item2, index1) => {\r\n                                                                                return Object.keys(item2).map((item1, index2) => {\r\n                                                                                    if (item1 === 'oldTable') {\r\n                                                                                        return <div className={'tags has-addons mb-0'}>\r\n                                                                                            <span className={'tag is-light is-success'}>\r\n                                                                                                {item2[item1].label}\r\n                                                                                            </span>\r\n                                                                                            <span className={'tag is-light is-info'}>\r\n                                                                                                {item2['oldTableColumn'].value}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    } else if (item1 === 'newTable') {\r\n                                                                                        return <div className={'tags has-addons mb-0'}>\r\n                                                                                            <span className={'tag is-light is-success'}>\r\n                                                                                                {item2[item1].label}\r\n                                                                                            </span>\r\n                                                                                            <span className={'tag is-light is-info'}>\r\n                                                                                                {item2['newTableColumn'].value}\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    }\r\n                                                                                })\r\n                                                                            })\r\n                                                                            }\r\n                                                                        </div>\r\n                                                                        {/* {item.map((item1, index1) => {\r\n                                                                                    return <div className={'control'}>\r\n                                                                                        <div className={'tags has-addons'}>\r\n                                                                                        </div>\r\n                                                                                        <div className={'tags has-addons'}>\r\n                                                                                            <span className={'tag is-light is-success'}>\r\n                                                                                                {item1.filterTable.label}\r\n                                                                                            </span>\r\n                                                                                            <span className={'tag is-light is-info'}>\r\n                                                                                                {item1.filterColumn.value}\r\n                                                                                            </span>\r\n                                                                                            <span className={'tag is-light has-text-weight-bold'}>\r\n                                                                                                {item1.filterCondition.value}\r\n                                                                                            </span>\r\n                                                                                            <span className={'tag is-light is-info'}>\r\n                                                                                                {item1.filterValue}\r\n                                                                                            </span>\r\n                                                                                            <span onClick={e => this.onFilterChildDelete(e, index, index1)} className={'tag is-light is-danger is-clickable'}>\r\n                                                                                                <span className={'delete is-small is-marginless'}>\r\n                                                                                                    <FontAwesomeIcon icon={faWindowClose} />\r\n                                                                                                </span>\r\n                                                                                            </span>\r\n                                                                                        </div>\r\n                                                                                    </div>\r\n                                                                                })} */}\r\n\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                <div className={'column1 is-2 has-text-weight-bold pt-3'}>\r\n                                                                    <div className={'buttons is-right'}>\r\n                                                                        <Button className={'button is-small is-light is-danger'} onClick={(e) => this.onJoinTableDelete(e, index)}>\r\n                                                                            <span className='icon'>\r\n                                                                                {/* <i className=\"fas fa-times\" /> */}\r\n                                                                                <FontAwesomeIcon icon={faTimes} />\r\n                                                                            </span>\r\n                                                                        </Button>\r\n                                                                    </div>\r\n                                                                </div>\r\n\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    })\r\n                                                }\r\n                                                {/* Sort */}\r\n                                                <div className='card-content pt-3 pb-0 '>\r\n\r\n                                                    {selectedRecord1['sort'] && selectedRecord1['sort'].length > 0 ?\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className=\"column1 is-6 has-text-weight-bold pt-3\">{\"Sort\"}</div>\r\n                                                            <div className=\"column1 is-6 has-text-right-tablet has-text-centered\">\r\n                                                                <div className=\"buttons is-right\">\r\n                                                                    <Button className=\"button is-small is-light is-info\" onClick={(e) => { this.onSortEdit(e) }} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            {/* <i className=\"fas fa-pen\" aria-hidden=\"true\"></i> */}\r\n                                                                            <FontAwesomeIcon icon={faPen} />\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                    <Button className=\"button is-small is-light is-danger\" onClick={(e) => this.onSortDelete(e)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            {/* <i className=\"fas fa-times\" aria-hidden=\"true\"></i> */}\r\n                                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        :\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className={'column1 is-6 has-text-weight-bold pt-3'}>\r\n\r\n                                                                <span>{this.props.intl.formatMessage({ id: \"IDS_SORT\" })}</span>\r\n\r\n                                                                <Button className={'button is-light is-small ml-3'} onClick={(e) => this.onCondition(e, 3)}>\r\n                                                                    <FontAwesomeIcon icon={faPlus} className={'icon'} />\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n                                                    }\r\n                                                    {selectedRecord1['sort'] && selectedRecord1['sort'].length > 0 &&\r\n                                                        <div className=\"field is-grouped is-grouped-multiline is-scrollable\">\r\n                                                            {selectedRecord1['sort'] && selectedRecord1['sort'].map((item, index) => {\r\n                                                                return <div className=\"control\">\r\n                                                                    <div className=\"tags has-addons\">\r\n                                                                        <span className=\"tag is-light is-info\">{item.sortTable && item.sortTable.label}</span>\r\n                                                                        <span className=\"tag is-light is-success\">{item.sortColumn && item.sortColumn.label}</span>\r\n                                                                        <span className=\"tag is-light has-text-weight-bold\">{item.sortCondition && item.sortCondition.value}</span>\r\n                                                                        <span className=\"tag is-light is-danger is-clickable\" tabindex=\"0\" onClick={(e) => { this.onSortChildDelete(e, index) }}>\r\n                                                                            <span className=\"delete is-small is-marginless\"></span>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            })\r\n                                                            }\r\n                                                        </div>\r\n                                                    }\r\n\r\n                                                </div>\r\n                                                {/* Summarize */}\r\n                                                <div className='card-content pt-3 pb-0 '>\r\n\r\n                                                    {selectedRecord1['summarize'] && selectedRecord1['summarize'].length > 0 ?\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className=\"column1 is-6 has-text-weight-bold pt-3\">{\"Summarize\"}</div>\r\n                                                            <div className=\"column1 is-6 has-text-right-tablet has-text-centered\">\r\n                                                                <div className=\"buttons is-right\">\r\n                                                                    <Button className=\"button is-small is-light is-info\" onClick={(e) => this.onSummarizeEdit(e)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            {/* <i className=\"fas fa-pen\" aria-hidden=\"true\"></i> */}\r\n                                                                            <FontAwesomeIcon icon={faPen} />\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                    <Button className=\"button is-small is-light is-danger\" onClick={(e) => this.onSummarizeDelete(e)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                                            {/* <i className=\"fas fa-times\" aria-hidden=\"true\"></i> */}\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        :\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className={'column1 is-6 has-text-weight-bold pt-3'}>\r\n\r\n                                                                <span>{this.props.intl.formatMessage({ id: \"IDS_SUMMARIZE\" })}</span>\r\n\r\n                                                                <Button className={'button is-light is-small ml-3'} onClick={(e) => this.onCondition(e, 4)}>\r\n                                                                    <FontAwesomeIcon icon={faPlus} className={'icon'} />\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n                                                    }\r\n                                                    {selectedRecord1['summarize'] && selectedRecord1['summarize'].length > 0 &&\r\n                                                        <div className=\"field is-grouped is-grouped-multiline is-scrollable\">\r\n                                                            {selectedRecord1['summarize'] && selectedRecord1['summarize'].map((item, index) => {\r\n                                                                return <div className=\"control\">\r\n                                                                    <div className=\"tags has-addons\">\r\n                                                                        <span className=\"tag is-light is-info\">{item.summarizeTable && item.summarizeTable.label}</span>\r\n                                                                        <span className=\"tag is-light is-success\">{item.summarizeColumn && item.summarizeColumn.label}</span>\r\n                                                                        <span className=\"tag is-light has-text-weight-bold\">{item.summarizeCondition && item.summarizeCondition.value}</span>\r\n                                                                        <span className=\"tag is-light is-danger is-clickable\" tabindex=\"0\" onClick={(e) => this.onSummarizeChildDelete(e, index)}>\r\n                                                                            <span className=\"delete is-small is-marginless\"></span>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            })\r\n                                                            }\r\n                                                        </div>\r\n                                                    }\r\n\r\n                                                </div>\r\n                                                {/* Groupby */}\r\n                                                <div className='card-content pt-3 pb-0 '>\r\n\r\n                                                    {selectedRecord1['group'] && selectedRecord1['group'].length > 0 ?\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className=\"column1 is-6 has-text-weight-bold pt-3\">{\"Group By\"}</div>\r\n                                                            <div className=\"column1 is-6 has-text-right-tablet has-text-centered\">\r\n                                                                <div className=\"buttons is-right\">\r\n                                                                    <Button className=\"button is-small is-light is-info\" onClick={(e) => this.onGroupEdit(e)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            {/* <i className=\"fas fa-pen\" aria-hidden=\"true\"></i> */}\r\n                                                                            <FontAwesomeIcon icon={faPen} />\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                    <Button className=\"button is-small is-light is-danger\" onClick={(e) => this.onGroupDelete(e)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                                            {/* <i className=\"fas fa-times\" aria-hidden=\"true\"></i> */}\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        :\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className={'column1 is-6 has-text-weight-bold pt-3'}>\r\n\r\n                                                                <span>{this.props.intl.formatMessage({ id: \"IDS_GROUPBY\" })}</span>\r\n\r\n                                                                <Button className={'button is-light is-small ml-3'} onClick={(e) => this.onCondition(e, 5)}>\r\n                                                                    <FontAwesomeIcon icon={faPlus} className={'icon'} />\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n                                                    }\r\n                                                    {selectedRecord1['group'] && selectedRecord1['group'].length > 0 &&\r\n                                                        <div className=\"field is-grouped is-grouped-multiline is-scrollable\">\r\n                                                            {selectedRecord1['group'] && selectedRecord1['group'].map((item, index) => {\r\n                                                                return <div className=\"control\">\r\n                                                                    <div className=\"tags has-addons\">\r\n                                                                        <span className=\"tag is-light is-info\">{item.groupTable && item.groupTable.label}</span>\r\n                                                                        <span className=\"tag is-light is-success\">{item.groupColumn && item.groupColumn.label}</span>\r\n                                                                        {/* <span className=\"tag is-light has-text-weight-bold\">{item.sortCondition && item.sortCondition.value}</span> */}\r\n                                                                        <span className=\"tag is-light is-danger is-clickable\" tabindex=\"0\" onClick={(e) => { this.onGroupChildDelete(e, index) }}>\r\n                                                                            <span className=\"delete is-small is-marginless\"></span>\r\n                                                                        </span>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            })\r\n                                                            }\r\n                                                        </div>\r\n                                                    }\r\n\r\n                                                </div>\r\n                                                <div className={`card-content pt-3 pb-0 ${(selectedRecord1['group'] &&\r\n                                                    selectedRecord1['group'].length > 0) || (selectedRecord1['summarize'] &&\r\n                                                        selectedRecord1['summarize'].length > 0) ? 'is-disabled' : ''}`}>\r\n                                                    {selectedRecord1['Limit'] && selectedRecord1['Limit'] !== 0 ?\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className=\"column1 is-6 has-text-weight-bold pt-3\">{\"Limit\"}</div>\r\n                                                            <div className=\"column1 is-6 has-text-right-tablet has-text-centered\">\r\n                                                                <div className=\"buttons is-right\">\r\n                                                                    <Button className=\"button is-small is-light is-info\" onClick={(e) => this.onLimitEdit(e)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            {/* <i className=\"fas fa-pen\" aria-hidden=\"true\"></i> */}\r\n                                                                            <FontAwesomeIcon icon={faPen} />\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                    <Button className=\"button is-small is-light is-danger\" onClick={(e) => this.onLimitDelete(e)} type=\"button\" tabindex=\"0\">\r\n                                                                        <span className=\"icon\" >\r\n                                                                            <FontAwesomeIcon icon={faTimes} />\r\n                                                                            {/* <i className=\"fas fa-times\" aria-hidden=\"true\"></i> */}\r\n                                                                        </span>\r\n                                                                    </Button>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n                                                        :\r\n                                                        <div className={'columns1 mb-0'}>\r\n                                                            <div className={'column1 is-6 has-text-weight-bold pt-3'}>\r\n\r\n                                                                <span>{this.props.intl.formatMessage({ id: \"IDS_LIMIT\" })}</span>\r\n\r\n                                                                <Button className={'button is-light is-small ml-3'} onClick={(e) => this.onCondition(e, 6)}>\r\n                                                                    <FontAwesomeIcon icon={faPlus} className={'icon'} />\r\n                                                                </Button>\r\n                                                            </div>\r\n                                                        </div>\r\n\r\n\r\n                                                    }\r\n                                                    {selectedRecord1['Limit'] && selectedRecord1['Limit'] !== 0 &&\r\n                                                        <div className=\"field is-grouped is-grouped-multiline is-scrollable\">\r\n                                                            <div className=\"control\">\r\n                                                                <div className=\"tags has-addons\">\r\n                                                                    <span className=\"tag is-light is-info\">{\"Limit\"}</span>\r\n                                                                    <span className=\"tag is-light is-success\">{selectedRecord1['Limit']}</span>\r\n                                                                    {/* <span className=\"tag is-light has-text-weight-bold\">{item.sortCondition && item.sortCondition.value}</span> */}\r\n                                                                    {/* <span className=\"tag is-light is-danger is-clickable\" tabindex=\"0\" onClick={(e) => { this.onSortChildDelete(e, index) }}>\r\n                                                                            <span className=\"delete is-small is-marginless\"></span>\r\n                                                                        </span> */}\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    }\r\n                                                </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </section>\r\n                            </aside>\r\n                            {/* has-overflow-vertical-auto */}\r\n                            <div className={'column1  is-fullheight-with-navbar-custom is-hidden-touch'}>\r\n                                <div className={'column1 is-narrow'}>\r\n                                    <div className={'hero-body'}>\r\n                                        {/* <Card className={'h-100'} style={{ 'height': '100px' }}> */}\r\n                                        <div className={'box has-background-dark p-2 mb-3'} id=\"code-display\">\r\n                                            <pre className=\"language-sql overflow-vertical\">\r\n                                                <code className=\"language-sql\" dangerouslySetInnerHTML={{ __html: this.queryDesignFormation(selectedRecord1, this.state.avaliableColumns) }} />\r\n                                            </pre>\r\n                                        </div>\r\n                                        <div className='buttons is-right'>\r\n                                            <Button className='btn-user btn-primary-blue' onClick={() => this.onDownloadClick(selectedRecord1, this.state.avaliableColumns)}>\r\n                                                <FontAwesomeIcon icon={faDownload}></FontAwesomeIcon>\r\n                                                {'  '}\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_DOWNLOADSQL\" })}\r\n                                            </Button>\r\n                                            <Button className='btn-user btn-primary-blue' onClick={(e) => navigator.clipboard.writeText(this.filterQueryFormation(selectedRecord1, this.state.avaliableColumns))}>\r\n                                                <FontAwesomeIcon className='' icon={faCopy}></FontAwesomeIcon>{'  '}\r\n                                                {this.props.intl.formatMessage({ id: \"IDS_COPYSQL\" })}\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div >\r\n                        {\r\n                            this.state.showFilter ?\r\n                                <FilterCondition\r\n                                    modalBody={this.modalDesign()}\r\n                                    openAlertModal={this.state.showFilter}\r\n                                    modalTitle={this.state.filterTitle}\r\n                                    closeModal={this.closeAlertModal}\r\n                                    onSaveClick={(e) => this.executeClick(e)}\r\n                                    executeCenter={true}\r\n                                />\r\n                                : \"\"\r\n                        }\r\n                    </>\r\n                    :\r\n                    \r\n                    <ListWrapper className=\"client-listing-wrap \">\r\n                        <Row noGutters={true}>\r\n                            <Col md={3}>\r\n                              \r\n                                <ListComponent\r\n                                    onClick={this.onClickTable}\r\n                                    data={this.props.tableName || []}\r\n                                    searchRef={this.props.filtersearchRef}  \r\n                                   // titleHead={true}\r\n                                    titleHead={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                    headerName={this.props.intl.formatMessage({ id: \"IDS_TABLES\" })}\r\n                                />\r\n                              \r\n                            </Col>\r\n                            <Col md={9}>\r\n                                <div className={'tableright'}>\r\n                                    <span>\r\n                                        <FontAwesomeIcon icon={faTable} size='lg' className={'fa-7x tableColor'} />\r\n                                    </span>\r\n                                    <h3 className='font-weight-bold ' style={{ 'padding': '20px' }}>\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTATABLE\" })}\r\n                                    </h3>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListWrapper>\r\n                }\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n   \r\n\r\n   \r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        Login: state.Login\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {})(injectIntl(SqlBuilderNewDesign));"]},"metadata":{},"sourceType":"module"}