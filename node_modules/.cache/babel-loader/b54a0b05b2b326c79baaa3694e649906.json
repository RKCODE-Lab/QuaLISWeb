{"ast":null,"code":"import rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify'; //import Axios from 'axios';\n\nimport { initRequest } from './LoginAction';\nimport { sortData } from '../components/CommonScript'; //, constructOptionList\n\nimport { intl } from '../components/App';\nexport function getAuditTrailDetail(inputData) {\n  return function (dispatch) {\n    let inputParamData = {\n      userinfo: inputData.userinfo,\n      fromDate: inputData.fromDate,\n      toDate: inputData.toDate,\n      modulecode: inputData.moduleCode,\n      formcode: inputData.formCode,\n      usercode: inputData.userCode,\n      userrole: inputData.userRole,\n      viewtypecode: inputData.viewTypeCode,\n      saudittraildate: inputData.saudittraildate\n    };\n    dispatch(initRequest(true));\n    return rsapi.post(\"audittrail/getAuditTrailDetail\", inputParamData).then(response => {\n      console.log(new Date());\n      let masterData = { ...inputData.masterData,\n        ...response.data\n      }; //  sortData(masterData);     \n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          skip: inputData.skip,\n          take: inputData.take\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(intl.formatMessage({\n          id: error.message\n        }));\n      } else {\n        toast.warn(intl.formatMessage({\n          id: error.response.data\n        }));\n      }\n    });\n  };\n}\nexport function getFilterAuditTrailRecords(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"audittrail/getFilterAuditTrailRecords\", { ...inputData.inputData\n    }).then(response => {\n      let masterData = { ...inputData.masterData,\n        ...response.data,\n        ViewType: inputData.masterData.breadCrumbViewType.item\n      }; // sortData(masterData);\n      // dispatch({\n      //     type: DEFAULT_RETURN, payload: {\n      //         masterData,\n      //         loading: false,\n      //         showFilter: false\n      //     }\n      // })\n\n      if (inputData.searchRef !== undefined && inputData.searchRef.current !== null) {\n        inputData.searchRef.current.value = \"\";\n        masterData['searchedAudit'] = undefined;\n      }\n\n      let resetDataGridPage = false;\n\n      if (masterData.AuditDetails && masterData.AuditDetails.length < inputData.detailSkip) {\n        resetDataGridPage = true;\n      } else {\n        resetDataGridPage = false;\n      }\n\n      let respObject = {\n        masterData,\n        loading: false,\n        showFilter: false,\n        resetDataGridPage\n      }; // dispatch(postCRUDOrganiseTransSearch(inputData.inputData.postParamList, respObject))\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: { ...respObject,\n          skip: 0,\n          take: 20\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getFormNameByModule(inputData, selectedRecord) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"audittrail/getFormNameByModule\", { ...inputData.inputData\n    }).then(response => {\n      let masterData = { ...inputData.masterData,\n        ...response.data\n      };\n      sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          selectedRecord,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getExportExcel(inputData) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"audittrail/getexportdata\", { ...inputData.inputData\n    }).then(response => {\n      //sortData(masterData);\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          resultStatus: response.data[\"ExportExcel\"] || '',\n          loading: false\n        }\n      });\n\n      if (response.data[\"ExportExcel\"] === \"Success\") {\n        document.getElementById(\"download_data\").setAttribute(\"href\", response.data[\"ExportExcelPath\"]);\n        document.getElementById(\"download_data\").click();\n      } else {\n        toast.warn(response.data[\"ExportExcel\"]);\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function ViewAuditDetails(masterData, userInfo, viewdetails, screenName) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"audittrail/getAuditTrailDetails\", {\n      nauditcode: viewdetails.nauditcode,\n      userinfo: userInfo\n    }).then(response => {\n      //  masterData = {\n      //     ...masterData,\n      //     ...response.data\n      // }\n      masterData['AuditModifiedComments'] = [];\n      masterData['AuditModifiedComments'] = response.data['AuditModifiedComments']; //sortData(masterData);\n\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          auditAction: viewdetails['sauditaction'],\n          auditformName: viewdetails['sformname'],\n          auditsauditdate: viewdetails['sauditdate'],\n          viewdetails: viewdetails,\n          masterData,\n          selectedId: viewdetails.nauditcode,\n          screenName,\n          loading: false,\n          openModal: true,\n          needOldValueColumn: response.data['needOldValueColumn']\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/actions/AuditTrailAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","initRequest","sortData","intl","getAuditTrailDetail","inputData","dispatch","inputParamData","userinfo","fromDate","toDate","modulecode","moduleCode","formcode","formCode","usercode","userCode","userrole","userRole","viewtypecode","viewTypeCode","saudittraildate","post","then","response","console","log","Date","masterData","data","type","payload","loading","skip","take","catch","error","status","formatMessage","id","message","warn","getFilterAuditTrailRecords","ViewType","breadCrumbViewType","item","searchRef","undefined","current","value","resetDataGridPage","AuditDetails","length","detailSkip","respObject","showFilter","getFormNameByModule","selectedRecord","getExportExcel","resultStatus","document","getElementById","setAttribute","click","ViewAuditDetails","userInfo","viewdetails","screenName","nauditcode","auditAction","auditformName","auditsauditdate","selectedId","openModal","needOldValueColumn"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport {DEFAULT_RETURN} from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\n//import Axios from 'axios';\r\nimport { initRequest } from './LoginAction';\r\nimport {sortData} from '../components/CommonScript';//, constructOptionList\r\nimport { intl } from '../components/App';\r\n\r\n\r\n\r\nexport function getAuditTrailDetail(inputData) {\r\n    return function (dispatch) {  \r\n        let inputParamData = {\r\n            userinfo:inputData.userinfo,\r\n            fromDate: inputData.fromDate,\r\n            toDate: inputData.toDate,\r\n            modulecode: inputData.moduleCode,\r\n            formcode: inputData.formCode,\r\n            usercode: inputData.userCode,\r\n            userrole: inputData.userRole,\r\n            viewtypecode: inputData.viewTypeCode,\r\n            saudittraildate: inputData.saudittraildate\r\n        } \r\n    dispatch(initRequest(true)); \r\n    return rsapi.post(\"audittrail/getAuditTrailDetail\", inputParamData)\r\n   .then(response=>{ \r\n      console.log(new Date());\r\n        let masterData = {...inputData.masterData, ...response.data};        \r\n      //  sortData(masterData);     \r\n        dispatch({type: DEFAULT_RETURN, payload:{masterData,  \r\n             loading:false,skip:inputData.skip,take:inputData.take}});   \r\n   })\r\n   .catch(error=>{\r\n        dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n       if (error.response.status === 500){\r\n           toast.error(intl.formatMessage({id: error.message}));\r\n       } \r\n       else{               \r\n           toast.warn(intl.formatMessage({id: error.response.data}));\r\n       }  \r\n  \r\n   })\r\n}}\r\n\r\nexport function getFilterAuditTrailRecords(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"audittrail/getFilterAuditTrailRecords\", { ...inputData.inputData })\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data,\r\n                    ViewType:inputData.masterData.breadCrumbViewType.item\r\n                }\r\n                // sortData(masterData);\r\n                // dispatch({\r\n                //     type: DEFAULT_RETURN, payload: {\r\n                //         masterData,\r\n                //         loading: false,\r\n                //         showFilter: false\r\n                //     }\r\n                // })\r\n                if(inputData.searchRef!==undefined && inputData.searchRef.current!==null){\r\n                    inputData.searchRef.current.value = \"\";\r\n                    masterData['searchedAudit']=undefined;\r\n                }\r\n                let resetDataGridPage = false;\r\n                if(masterData.AuditDetails&&masterData.AuditDetails.length<inputData.detailSkip){\r\n                    resetDataGridPage=true\r\n                }else{\r\n                    resetDataGridPage = false\r\n                }\r\n                let respObject = {\r\n                    \r\n                    masterData,\r\n                    loading: false,\r\n                    showFilter: false,\r\n                    resetDataGridPage\r\n                }\r\n                // dispatch(postCRUDOrganiseTransSearch(inputData.inputData.postParamList, respObject))\r\n                dispatch({ type: DEFAULT_RETURN, payload: { ...respObject ,skip:0,take:20} })\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getFormNameByModule(inputData,selectedRecord) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"audittrail/getFormNameByModule\", { ...inputData.inputData})\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    ...response.data\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        selectedRecord,\r\n                        loading: false,\r\n                        \r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getExportExcel(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"audittrail/getexportdata\", { ...inputData.inputData})\r\n            .then(response => {\r\n                \r\n                //sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        resultStatus: response.data[\"ExportExcel\"] || '',\r\n                        loading: false,\r\n                        \r\n                    }\r\n                })\r\n                if(response.data[\"ExportExcel\"] === \"Success\")\r\n                {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data[\"ExportExcelPath\"]);\r\n                    document.getElementById(\"download_data\").click();\r\n                }\r\n                else\r\n                {\r\n                    toast.warn(response.data[\"ExportExcel\"]);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function ViewAuditDetails(masterData, userInfo,viewdetails,screenName) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"audittrail/getAuditTrailDetails\", { nauditcode:viewdetails.nauditcode,userinfo:userInfo})\r\n            .then(response => {\r\n                //  masterData = {\r\n                //     ...masterData,\r\n                //     ...response.data\r\n                // }\r\n                masterData['AuditModifiedComments']=[];\r\n                masterData['AuditModifiedComments']=response.data['AuditModifiedComments']\r\n                //sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        auditAction:viewdetails['sauditaction'],\r\n                        auditformName:viewdetails['sformname'],\r\n                        auditsauditdate: viewdetails['sauditdate'],\r\n                        viewdetails:viewdetails,\r\n                        masterData,\r\n                        selectedId:viewdetails.nauditcode,\r\n                        screenName,\r\n                        loading: false,\r\n                        openModal:true,\r\n                        needOldValueColumn:response.data['needOldValueColumn'] \r\n                        \r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}