{"ast":null,"code":"var _jsxFileName = \"D:\\\\Postgres_workingFolder\\\\QuaLISWeb\\\\src\\\\components\\\\list-master\\\\list-master.component.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Button, InputGroup, FormControl, Media, ListGroup, Form } from 'react-bootstrap';\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, SearchIcon } from '../App.styles';\nimport { ListMasterWrapper } from '../list-master/list-master.styles';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCopy, faPlus, faSearch, faSitemap, faSync } from '@fortawesome/free-solid-svg-icons'; // import FilterWithAccordian from './FilterWithAccordian';\n\nimport FilterAccordion from '../custom-accordion/filter-accordion.component';\nimport 'react-perfect-scrollbar/dist/css/styles.css';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Affix } from 'rsuite';\nimport AdvFilter from '../AdvFilter';\nimport CustomPager from '../CustomPager';\nimport { ListView } from '@progress/kendo-react-listview';\nimport { connect } from 'react-redux'; // import { Tooltip } from '@progress/kendo-react-tooltip';\n\nimport { ListWrapper } from '../client-group.styles';\nimport ReactTooltip from 'react-tooltip';\n\nclass ListMaster extends React.Component {\n  constructor(_props) {\n    super(_props);\n\n    this.handlePageChange = e => {\n      this.setState({\n        skip: e.skip,\n        take: e.take\n      });\n    };\n\n    this.filterColumn = event => {\n      let filterValue = event.target.value;\n\n      if (event.keyCode === 13) {\n        this.props.filterColumnData(filterValue, this.props.filterParam);\n      } // clearInterval(this.interval);\n      // if (filterValue === \"\") {\n      //     this.props.filterColumnData(filterValue, this.props.filterParam);\n      // } else {\n      //     // (filterValue.length > 2) {\n      //     this.interval = setInterval(() => {\n      //         this.props.filterColumnData(filterValue, this.props.filterParam);\n      //         clearInterval(this.interval);\n      //     }, 3000);\n      //     // }\n      // }\n\n    };\n\n    this.getSelectedDetail = master => {\n      if (this.props.allowDuplicateHits || this.props.selectedMaster[this.props.primaryKeyField] !== master[this.props.primaryKeyField]) this.props.getMasterDetail(master);\n    };\n\n    this.ListDesign = props => {\n      let item = props.dataItem;\n      const labelColor = ['label-orange', 'label-green', 'label-yellow', 'label-purple'];\n      return (\n        /*#__PURE__*/\n        // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\n        React.createElement(ListGroup.Item, {\n          key: `listKey_${props.index}`,\n          as: \"li\",\n          onClick: () => this.getSelectedDetail(item),\n          className: `list-bgcolor ${this.props.selectedMaster ? this.props.selectedMaster[this.props.primaryKeyField] === item[this.props.primaryKeyField] ? \"active\" : \"\" : \"\"}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Media, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 17\n          }\n        }, this.props.isMultiSelecct ? /*#__PURE__*/React.createElement(Form.Check, {\n          custom: true,\n          type: \"checkbox\",\n          id: \"customControl\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Form.Check.Input, {\n          type: \"checkbox\",\n          id: `tm_customCheck_${props.index}`,\n          checked: this.props.selectedMaster ? this.props.selectedMaster[this.props.primaryKeyField] === item[this.props.primaryKeyField] ? true : false : false,\n          readOnly: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        }), /*#__PURE__*/React.createElement(Form.Check.Label, {\n          className: `mr-3 label-circle ${labelColor[props.index % 4]}`,\n          htmlFor: `tm_customCheck_${props.index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }\n        }, item[this.props.mainField] && item[this.props.mainField].substring(0, 1).toUpperCase())) : this.props.hideCheckLabel ? \"\" : /*#__PURE__*/React.createElement(Form.Check.Label, {\n          className: `mr-3 label-circle ${labelColor[props.index % 4]}`,\n          htmlFor: `tm_customCheck_${props.index}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }\n        }, item[this.props.mainField] && item[this.props.mainField].substring(0, 1).toUpperCase()), /*#__PURE__*/React.createElement(Media.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(MediaHeader, {\n          \"data-tip\": item[this.props.mainField],\n          \"data-for\": \"tooltip_list_wrap\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }\n        }, item[this.props.mainField]), /*#__PURE__*/React.createElement(MediaSubHeader, {\n          className: \"title-grid-width-sm\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(MediaLabel, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }\n        }, item[this.props.firstField]), this.props.secondField ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(MediaLabel, {\n          className: \"text_seperator\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 33\n          }\n        }, item[this.props.secondField])) : \"\"))))\n      );\n    };\n\n    this.state = {\n      buttonCount: 4,\n      info: true,\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5,\n      testskip: 0,\n      testtake: this.props.Login.settings ? parseInt(this.props.Login.settings[12]) : 5\n    };\n  }\n\n  render() {\n    let headerClass = this.props.hideSearch ? \"justify-content-end\" : \"justify-content-between\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Affix, {\n      top: this.props.showFilterIcon ? 91 : 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(ListMasterWrapper, {\n      className: `${this.state.showModalBg ? 'show_modal_bg' : ''} `,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(SearchAdd, {\n      className: `bg-white d-flex ${headerClass}  pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 25\n      }\n    }, this.props.hideSearch ? \"\" : /*#__PURE__*/React.createElement(InputGroup, {\n      className: \"list-group-search\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SearchIcon, {\n      className: \"search-icon\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSearch,\n      style: {\n        color: \"#c1c7d0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(FormControl, {\n      ref: this.props.searchRef // onEnterKeyPress={this.filterColumn}\n      ,\n      autoComplete: \"off\",\n      placeholder: this.props.intl.formatMessage({\n        id: \"IDS_SEARCH\"\n      }) //.concat(this.props.screenName)\n      ,\n      name: \"search\".concat(this.props.screenName.toLowerCase()),\n      onKeyUp: e => this.filterColumn(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 37\n      }\n    }), this.props.showFilterIcon ? /*#__PURE__*/React.createElement(InputGroup.Append, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(AdvFilter, {\n      filterComponent: this.props.filterComponent,\n      dataFor: \"tooltip_list_wrap\",\n      onFilterSubmit: this.props.onFilterSubmit,\n      showFilter: this.props.showFilter,\n      openFilter: this.props.openFilter,\n      closeFilter: this.props.closeFilter,\n      showModalBg: e => this.setState({\n        showModalBg: e\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 45\n      }\n    })) : \"\"), /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"d-flex ml-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 29\n      }\n    }, this.props.titleHead ? /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 57\n      }\n    }, this.props.titleHead) : '', this.props.hideAddButton ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-icon-rounded btn-circle solid-blue\",\n      role: \"button\",\n      hidden: this.props.userRoleControlRights.indexOf(this.props.addId) === -1 //title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\n      ,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_ADD\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      onClick: () => this.props.openModal(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPlus,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 41\n      }\n    })), this.props.hideReload ? \"\" : /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      variant: \"link\",\n      onClick: () => this.props.reloadData() // {/* title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}  */}\n      ,\n      \"data-for\": \"tooltip_list_wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_REFRESH\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSync,\n      style: {\n        \"width\": \"0.6!important\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 41\n      }\n    })), this.props.showGraphView ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-circle outline-grey ml-2 fa-rotate-270\",\n      variant: \"link\",\n      onClick: () => this.props.getGraphView(),\n      \"data-for\": \"tooltip_list_wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_GRAPH\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faSitemap,\n      style: {\n        \"width\": \"0.6!important\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 41\n      }\n    })) // <Nav.Link className=\"btn btn-circle outline-grey ml-2 action-icons-wrap\" onClick={() => this.props.getGraphView()} title={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })} >\n    //     <Image src={Graph} alt=\"filer-icon\" width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"/>\n    // </Nav.Link>\n    : \"\", this.props.showCopy ? /*#__PURE__*/React.createElement(Button, {\n      className: \"btn btn-circle outline-grey ml-2\",\n      variant: \"link\",\n      hidden: this.props.userRoleControlRights.indexOf(this.props.copyId) === -1 // title={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\n      ,\n      \"data-for\": \"tooltip_list_wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_COPY\"\n      }),\n      onClick: () => this.props.copyData(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faCopy,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    })) : \"\")), this.props.needAccordianFilter ? /*#__PURE__*/React.createElement(FilterAccordion, {\n      key: \"filter\",\n      filterComponent: this.props.filterComponent,\n      className: this.props.accordianClassName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 29\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(ClientList, {\n      className: \"product-list list_rightborder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: `${this.props.needAccordianFilter ? 'height-md' : 'height-normal'} ${this.props.showFilterIcon ? 'height-xd' : 'height-xl'} ${this.props.hidePaging ? '' : 'height-xxd'}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ListGroup, {\n      as: \"ul\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 37\n      }\n    }, this.props.masterList ? /*#__PURE__*/React.createElement(ListView, {\n      data: this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? this.props.skip : this.state.skip, (this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)),\n      item: props => this.ListDesign(props),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 45\n      }\n    }) : \"\")))), this.props.hidePaging ? \"\" : /*#__PURE__*/React.createElement(CustomPager, {\n      skip: this.props.skip ? this.props.skip : this.state.skip,\n      take: this.props.take ? this.props.take : this.state.take,\n      width: 20,\n      pagershowwidth: 18,\n      handlePageChange: this.handlePageChange,\n      total: this.props.masterList ? this.props.masterList.length : 0,\n      buttonCount: this.state.buttonCount,\n      info: this.state.info,\n      userInfo: this.props.Login.userInfo,\n      pageSize: this.props.pageSize ? this.props.pageSize : this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting)),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }))));\n  }\n\n  componentDidUpdate(previousProps) {\n    ReactTooltip.rebuild();\n\n    if (this.props.masterList !== previousProps.masterList) {\n      if (this.props.skip === undefined && this.props.masterList && this.props.masterList.length <= this.state.skip) {\n        this.setState({\n          skip: 0\n        });\n      }\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nexport default connect(mapStateToProps, undefined)(injectIntl(ListMaster));","map":{"version":3,"sources":["D:/Postgres_workingFolder/QuaLISWeb/src/components/list-master/list-master.component.jsx"],"names":["React","injectIntl","Button","InputGroup","FormControl","Media","ListGroup","Form","ClientList","SearchAdd","MediaHeader","MediaSubHeader","MediaLabel","SearchIcon","ListMasterWrapper","FontAwesomeIcon","faCopy","faPlus","faSearch","faSitemap","faSync","FilterAccordion","PerfectScrollbar","Affix","AdvFilter","CustomPager","ListView","connect","ListWrapper","ReactTooltip","ListMaster","Component","constructor","props","handlePageChange","e","setState","skip","take","filterColumn","event","filterValue","target","value","keyCode","filterColumnData","filterParam","getSelectedDetail","master","allowDuplicateHits","selectedMaster","primaryKeyField","getMasterDetail","ListDesign","item","dataItem","labelColor","index","isMultiSelecct","mainField","substring","toUpperCase","hideCheckLabel","firstField","secondField","state","buttonCount","info","Login","settings","parseInt","testskip","testtake","render","headerClass","hideSearch","showFilterIcon","showModalBg","titleClasses","color","searchRef","intl","formatMessage","id","concat","screenName","toLowerCase","filterComponent","onFilterSubmit","showFilter","openFilter","closeFilter","titleHead","hideAddButton","userRoleControlRights","indexOf","addId","openModal","hideReload","reloadData","showGraphView","getGraphView","showCopy","copyId","copyData","needAccordianFilter","accordianClassName","hidePaging","masterList","slice","length","userInfo","pageSize","split","map","setting","componentDidUpdate","previousProps","rebuild","undefined","mapStateToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Button, InputGroup, FormControl, Media, ListGroup, Form } from 'react-bootstrap';\r\nimport { ClientList, SearchAdd, MediaHeader, MediaSubHeader, MediaLabel, SearchIcon } from '../App.styles';\r\nimport { ListMasterWrapper } from '../list-master/list-master.styles';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCopy, faPlus, faSearch, faSitemap, faSync } from '@fortawesome/free-solid-svg-icons';\r\n// import FilterWithAccordian from './FilterWithAccordian';\r\nimport FilterAccordion from '../custom-accordion/filter-accordion.component';\r\nimport 'react-perfect-scrollbar/dist/css/styles.css';\r\nimport PerfectScrollbar from 'react-perfect-scrollbar';\r\nimport { Affix } from 'rsuite';\r\nimport AdvFilter from '../AdvFilter';\r\nimport CustomPager from '../CustomPager';\r\nimport { ListView } from '@progress/kendo-react-listview';\r\nimport { connect } from 'react-redux';\r\n// import { Tooltip } from '@progress/kendo-react-tooltip';\r\nimport { ListWrapper } from '../client-group.styles';\r\nimport ReactTooltip from 'react-tooltip';\r\nclass ListMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            buttonCount: 4,\r\n            info: true,\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[3]) : 5,\r\n            testskip: 0,\r\n            testtake: this.props.Login.settings ? parseInt(this.props.Login.settings[12]) : 5\r\n        }\r\n    }\r\n\r\n    handlePageChange = e => {\r\n        this.setState({\r\n            skip: e.skip,\r\n            take: e.take\r\n        });\r\n    };\r\n\r\n    filterColumn = (event) => {\r\n        let filterValue = event.target.value;\r\n        if (event.keyCode === 13) {\r\n            this.props.filterColumnData(filterValue, this.props.filterParam);\r\n        }\r\n\r\n        // clearInterval(this.interval);\r\n\r\n        // if (filterValue === \"\") {\r\n        //     this.props.filterColumnData(filterValue, this.props.filterParam);\r\n\r\n        // } else {\r\n        //     // (filterValue.length > 2) {\r\n        //     this.interval = setInterval(() => {\r\n        //         this.props.filterColumnData(filterValue, this.props.filterParam);\r\n        //         clearInterval(this.interval);\r\n        //     }, 3000);\r\n        //     // }\r\n        // }\r\n    }\r\n\r\n    getSelectedDetail = (master) => {\r\n        if (this.props.allowDuplicateHits\r\n            || this.props.selectedMaster[this.props.primaryKeyField] !== master[this.props.primaryKeyField])\r\n            this.props.getMasterDetail(master);\r\n    }\r\n    ListDesign = props => {\r\n        let item = props.dataItem;\r\n        const labelColor = ['label-orange', 'label-green', 'label-yellow', 'label-purple'];\r\n        return (\r\n            // <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}>\r\n            <ListGroup.Item key={`listKey_${props.index}`} as=\"li\" onClick={() => this.getSelectedDetail(item)}\r\n                className={`list-bgcolor ${this.props.selectedMaster ? this.props.selectedMaster[this.props.primaryKeyField] === item[this.props.primaryKeyField] ? \"active\" : \"\" : \"\"}`}>\r\n                {/* <ReactTooltip place=\"bottom\" id=\"tooltip_list_wrap\" /> */}\r\n                <Media>\r\n                    {this.props.isMultiSelecct ?\r\n                        <Form.Check custom type=\"checkbox\" id=\"customControl\"  >\r\n                            <Form.Check.Input type=\"checkbox\" id={`tm_customCheck_${props.index}`}\r\n                                checked={this.props.selectedMaster ? this.props.selectedMaster[this.props.primaryKeyField] === item[this.props.primaryKeyField] ? true : false : false}\r\n                                readOnly\r\n                            />\r\n\r\n                            <Form.Check.Label className={`mr-3 label-circle ${labelColor[props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{item[this.props.mainField] && item[this.props.mainField].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n                        </Form.Check> :\r\n                        this.props.hideCheckLabel ? \"\" :\r\n                            <Form.Check.Label className={`mr-3 label-circle ${labelColor[props.index % 4]}`} htmlFor={`tm_customCheck_${props.index}`}>{item[this.props.mainField] && item[this.props.mainField].substring(0, 1).toUpperCase()}</Form.Check.Label>\r\n                    }\r\n                    <Media.Body>\r\n                        {/* <ReactTooltip place=\"bottom\" id=\"tooltip_list_wrap\" /> */}\r\n                        <MediaHeader data-tip={item[this.props.mainField]} data-for=\"tooltip_list_wrap\">{item[this.props.mainField]}</MediaHeader>\r\n                        <MediaSubHeader className=\"title-grid-width-sm\">\r\n                            <MediaLabel>{item[this.props.firstField]}</MediaLabel>\r\n                            {this.props.secondField ? <>\r\n                                <MediaLabel className=\"text_seperator\">\r\n                                    {item[this.props.secondField]}\r\n                                </MediaLabel>\r\n                            </> : \"\"}\r\n                        </MediaSubHeader>\r\n                    </Media.Body>\r\n                </Media>\r\n            </ListGroup.Item>\r\n        )\r\n    }\r\n    render() {\r\n        let headerClass = this.props.hideSearch ? \"justify-content-end\" : \"justify-content-between\";\r\n        return (\r\n            <>\r\n                <Affix top={this.props.showFilterIcon ? 91 : 53}>\r\n                    {/* ${this.props.needAccordianFilter ? 'hight-md' : 'height-normal'} */}\r\n                    <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" />\r\n                    <ListMasterWrapper className={`${this.state.showModalBg ? 'show_modal_bg' : ''} `}>\r\n                        {/* <Tooltip position=\"bottom\" anchorElement=\"target\" openDelay={100} parentTitle={true}> */}\r\n                        <SearchAdd className={`bg-white d-flex ${headerClass}  pad-15 ${this.props.titleClasses ? this.props.titleClasses : ''}`} >\r\n                            {this.props.hideSearch ? \"\" :\r\n                                <InputGroup className=\"list-group-search\">\r\n                                    <SearchIcon className=\"search-icon\">\r\n                                        <FontAwesomeIcon icon={faSearch} style={{ color: \"#c1c7d0\" }} />\r\n                                    </SearchIcon>\r\n\r\n                                    <FormControl\r\n                                        ref={this.props.searchRef}// onEnterKeyPress={this.filterColumn}\r\n                                        autoComplete=\"off\"\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SEARCH\" })} //.concat(this.props.screenName)\r\n                                        name={\"search\".concat(this.props.screenName.toLowerCase())}\r\n                                        onKeyUp={(e) => this.filterColumn(e)}\r\n                                    />\r\n\r\n                                    {this.props.showFilterIcon ?\r\n                                        <InputGroup.Append>\r\n                                            <AdvFilter\r\n                                                filterComponent={this.props.filterComponent}\r\n                                                dataFor=\"tooltip_list_wrap\"\r\n                                                onFilterSubmit={this.props.onFilterSubmit}\r\n                                                showFilter={this.props.showFilter}\r\n                                                openFilter={this.props.openFilter}\r\n                                                closeFilter={this.props.closeFilter}\r\n                                                showModalBg={(e) => this.setState({ showModalBg: e })}\r\n\r\n                                            />\r\n                                        </InputGroup.Append>\r\n\r\n                                        : \"\"\r\n                                    }\r\n                                </InputGroup>\r\n\r\n\r\n                            }\r\n\r\n\r\n                            <ListWrapper className=\"d-flex ml-2\">\r\n                                {this.props.titleHead ? <h4>{this.props.titleHead}</h4> : ''}\r\n                                {this.props.hideAddButton ? \"\" :\r\n                                    <Button className=\"btn btn-icon-rounded btn-circle solid-blue\" role=\"button\"\r\n                                        hidden={this.props.userRoleControlRights.indexOf(this.props.addId) === -1}\r\n                                        //title={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_ADD\" })}\r\n                                        data-for=\"tooltip_list_wrap\"\r\n                                        onClick={() => this.props.openModal()}>\r\n                                        <FontAwesomeIcon icon={faPlus} />\r\n                                    </Button>\r\n                                }\r\n                                {this.props.hideReload ? \"\" :\r\n                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                        onClick={() => this.props.reloadData()}\r\n                                        // {/* title={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}  */}\r\n                                        data-for=\"tooltip_list_wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_REFRESH\" })}>\r\n                                        <FontAwesomeIcon icon={faSync} style={{ \"width\": \"0.6!important\" }} />\r\n                                    </Button>\r\n                                }\r\n                                {this.props.showGraphView ?\r\n                                    <Button\r\n                                        className=\"btn btn-circle outline-grey ml-2 fa-rotate-270\" variant=\"link\"\r\n                                        onClick={() => this.props.getGraphView()}\r\n                                        data-for=\"tooltip_list_wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })}>\r\n                                        {/* title={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })}> */}\r\n                                        <FontAwesomeIcon icon={faSitemap} style={{ \"width\": \"0.6!important\" }} />\r\n                                    </Button>\r\n                                    // <Nav.Link className=\"btn btn-circle outline-grey ml-2 action-icons-wrap\" onClick={() => this.props.getGraphView()} title={this.props.intl.formatMessage({ id: \"IDS_GRAPH\" })} >\r\n                                    //     <Image src={Graph} alt=\"filer-icon\" width=\"20\" height=\"20\" className=\"ActionIconColor img-normalize\"/>\r\n                                    // </Nav.Link>\r\n                                    : \"\"\r\n                                }\r\n                                {this.props.showCopy ?\r\n                                    <Button className=\"btn btn-circle outline-grey ml-2\" variant=\"link\"\r\n                                        hidden={this.props.userRoleControlRights.indexOf(this.props.copyId) === -1}\r\n                                        // title={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                        data-for=\"tooltip_list_wrap\"\r\n                                        data-tip={this.props.intl.formatMessage({ id: \"IDS_COPY\" })}\r\n                                        onClick={() => this.props.copyData()}>\r\n                                        <FontAwesomeIcon icon={faCopy} />\r\n                                    </Button>\r\n                                    : \"\"\r\n                                }\r\n                            </ListWrapper>\r\n                        </SearchAdd>\r\n                        {/* </Tooltip> */}\r\n\r\n                        {this.props.needAccordianFilter ?\r\n                            <FilterAccordion\r\n                                key=\"filter\"\r\n                                filterComponent={this.props.filterComponent}\r\n                                className={this.props.accordianClassName}\r\n                            />\r\n                            : \"\"}\r\n\r\n                        <ClientList className=\"product-list list_rightborder\">\r\n                            <PerfectScrollbar>\r\n                                {/* style={{ height: this.props.paneHeight ? this.props.paneHeight : this.props.needAccordianFilter ? 'calc(100vh - 220px)' : 'calc(100vh - 180px)' }} */}\r\n                                {/* className=\"inner-hg-pane\" */}\r\n                                <div className={`${this.props.needAccordianFilter ? 'height-md' : 'height-normal'} ${this.props.showFilterIcon ? 'height-xd' : 'height-xl'} ${this.props.hidePaging ? '' : 'height-xxd'}`}>\r\n                                    <ListGroup as=\"ul\">\r\n                                        {this.props.masterList ?\r\n                                            <ListView\r\n                                                data={this.props.hidePaging ? this.props.masterList : this.props.masterList.slice(this.props.skip ? this.props.skip : this.state.skip, ((this.props.skip ? this.props.skip : this.state.skip) + (this.props.take ? this.props.take : this.state.take)))}\r\n                                                item={(props) => this.ListDesign(props)}\r\n                                            /> : \"\"}\r\n\r\n                                        {/* {this.props.masterList ?\r\n\r\n                                    this.props.masterList.map((master, index) =>\r\n                                      \r\n                                    )\r\n                                    : \"\"} */}\r\n                                    </ListGroup>\r\n                                </div>\r\n                            </PerfectScrollbar>\r\n\r\n                        </ClientList>\r\n                        {this.props.hidePaging ? \"\" :\r\n                            <CustomPager\r\n                                skip={this.props.skip ? this.props.skip : this.state.skip}\r\n                                take={this.props.take ? this.props.take : this.state.take}\r\n                                width={20}\r\n                                pagershowwidth={18}\r\n                                handlePageChange={this.handlePageChange}\r\n                                total={this.props.masterList ? this.props.masterList.length : 0}\r\n                                buttonCount={this.state.buttonCount}\r\n                                info={this.state.info}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                pageSize={this.props.pageSize? this.props.pageSize :this.props.Login.settings && this.props.Login.settings[4].split(\",\").map(setting => parseInt(setting))}\r\n                            >\r\n                            </CustomPager>\r\n                        }\r\n                    </ListMasterWrapper>\r\n                </Affix>\r\n            </>\r\n        )\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        ReactTooltip.rebuild();\r\n        if(this.props.masterList !== previousProps.masterList){\r\n            if(this.props.skip === undefined && this.props.masterList && this.props.masterList.length <= this.state.skip){\r\n                this.setState({skip:0});\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nexport default connect(mapStateToProps, undefined)(injectIntl(ListMaster));"]},"metadata":{},"sourceType":"module"}