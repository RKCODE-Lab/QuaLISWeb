{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import Axios from\"axios\";import{toast}from\"react-toastify\";import{intl}from\"../components/App\";import{constructOptionList,replaceUpdatedObject,sortData}from\"../components/CommonScript\";import{reportCOAType,REPORTTYPE,SampleType,transactionStatus}from\"../components/Enumeration\";import TrainingUpdateChildTab from\"../pages/competencemanagement/trainingupdate/TrainingUpdateChildTab\";import rsapi from\"../rsapi\";import{initRequest}from\"./LoginAction\";import{DEFAULT_RETURN}from\"./LoginTypes\";import{crudMaster}from\"./ServiceAction\";import{getFieldSpecification as getFieldSpecification3}from'../components/type3component/Type3FieldSpecificationList';import{filterObjectForReactAwesomeFilter}from\"./RegistrationAction\";// export function getReleasedSelectedSampleSubSampleTest(userInfo, Data1, inputData) {\nimport{Utils as QbUtils}from\"@react-awesome-query-builder/ui\";var checkTree=QbUtils.checkTree,loadTree=QbUtils.loadTree;//     return function (dispatch) {\n//       if (inputData !== undefined &&inputData.npreregno!==\"\") {\n//         dispatch(initRequest(true));\n//         return rsapi.post(\"release/updateRelease\",\n//             inputData\n//         )\n//             .then(response => {\n//                 if (response.data.statusCodeValue !== 200) {\n//                     toast.warn(intl.formatMessage({\n//                         id: response.data.body\n//                     }));\n//                     dispatch({\n//                         type: DEFAULT_RETURN,\n//                         payload: {\n//                             loading: false\n//                         }\n//                     });\n//                 }\n//                 else {\n//                     if (response.data.body[\"PortalStatus\"] && response.data.body[\"PortalStatus\"].length > 0) {\n//                         dispatch(UpdateExternalOrderStatus(response.data.body[\"PortalStatus\"],inputData));\n//                     }\n//                     let masterData = {\n//                         ...Data1, ...response.data.body,\n//                     };\n//                     console.log(\"ReleasedTest,\", masterData);\n//                      sortData(masterData.ReleaseHistory,\"\",'sreportno');\n//                   //  dispatch(generateReport(inputData,masterData))\n//                     dispatch({\n//                         type: DEFAULT_RETURN, payload: {\n//                             masterData,\n//                             change: inputData.change,\n//                             loading: false,\n//                             openModal:false\n//                         }\n//                     });\n//                 }\n//             })\n//             .catch(error => {\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//                 if (error.response.status === 500) {\n//                     toast.error(error.message);\n//                     console.log(\"ErrorRelease,\", error);\n//                 }\n//                 else {\n//                     toast.warn(error.response.data);\n//                 }\n//             })\n//         }\n//         else {\n//             toast.warn(intl.formatMessage({\n//                 id: \"IDS_SELECTANYONESAMPLE\"\n//             }));\n//         }\n//     }\n// }\nexport function getReleasedRegistrationType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getRegistrationType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{SampleTypeValue:inputData.SampleTypeValue,realSampleTypeList:inputData.realSampleTypeList||[],realReportTypeList:inputData.realReportTypeList||[],realRegTypeList:inputData.realRegTypeList||[],realRegSubTypeList:inputData.realRegSubTypeList||[],realFilterStatusList:inputData.realFilterStatusList||[],realApprovalVersionList:inputData.realApprovalVersionList||[],realDesignTemplateMappingList:inputData.realDesignTemplateMappingList||[]}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedRegistrationSubType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getRegistrationSubType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegTypeValue:inputData.RegTypeValue,realSampleTypeList:inputData.realSampleTypeList||[],realReportTypeList:inputData.realReportTypeList||[],realRegTypeList:inputData.realRegTypeList||[],realRegSubTypeList:inputData.realRegSubTypeList||[],realFilterStatusList:inputData.realFilterStatusList||[],realApprovalVersionList:inputData.realApprovalVersionList||[],realDesignTemplateMappingList:inputData.realDesignTemplateMappingList||[]}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedFilterBasedTest(inputData){return function(dispatch){if(inputData.napprovalversioncode){dispatch(initRequest(true));rsapi.post(\"release/getFilterBasedTest\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,DesignTemplateMappingValue:inputData.DesignTemplateMappingValue}),loading:false}});if(response.data.rtn){toast.warn(response.data.rtn);}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_PLSSELECTALLVALUESINFILTER\"}));}};}export function getReleasedApprovalVersion(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getApprovalVersion\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{realSampleTypeList:inputParam.inputData.realSampleTypeList||[],realReportTypeList:inputParam.inputData.realReportTypeList||[],realRegTypeList:inputParam.inputData.realRegTypeList||[],realRegSubTypeList:inputParam.inputData.realRegSubTypeList||[],realFilterStatusList:inputParam.inputData.realFilterStatusList||[],realApprovalVersionList:inputParam.inputData.realApprovalVersionList||[],realDesignTemplateMappingList:inputParam.inputData.realDesignTemplateMappingList||[]// fromDate: inputParam.inputData.dfrom,\n// toDate: inputParam.inputData.dto,\n}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getReleaseSample\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);// responseData = sortData(responseData)\nvar masterData={};var nsectioncode={};// if (response.data.ReleasedSampleDetails && response.data.ReleasedSampleDetails.length !== 0 ||\n//     response.data.ReleaseSample && response.data.ReleaseSample.length === 0) {\nmasterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(nsectioncode!==undefined){nsectioncode=inputParam.inputData.nsectioncode;}// }\n//     else {\n//         responseData.ReleaseHistory = []\n//         responseData.selectedReleaseHistory= []\n//         masterData = {\n//             ...inputParam.masterData,\n//             ...responseData,\n//         }\n//     }\nsortData(masterData,\"\",\"ncoaparentcode\");dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,nsectioncode:nsectioncode}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovedSample(inputParam,ncontrolCode){if(inputParam.masterData.realReportTypeValue.ncoareporttypecode===reportCOAType.PATIENTWISE){var fieldList=[];fieldList=getFieldSpecification3().get(\"ExternalOrder\")||[];var languageTypeCode=inputParam.inputData.userinfo.slanguagetypecode;var _filterObjectForReact=filterObjectForReactAwesomeFilter(fieldList[0].filterfields,languageTypeCode,undefined,undefined),fields=_filterObjectForReact.fields,gridColumns=_filterObjectForReact.gridColumns;var awesomeTree=fieldList[0].awesomeTree?checkTree(loadTree(fieldList[0].awesomeTree),fieldList[0].awesomeConfig):undefined;return function(dispatch){var urlArray=[];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){var ProjectTypeList=[];var sectionList=[];var masterData={};var openModal=true;masterData=_objectSpread({},inputParam.masterData);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{fields:fields,gridColumns:gridColumns,awesomeTree:awesomeTree,seletedFilterComponent:fieldList[0],// awesomeTree:fieldList[0].awesomeTree,\nawesomeConfig:undefined,lstPatient:[],kendoSkip:0,kendoTake:5,masterData:masterData,expandCheck:false,ProjectTypeList:ProjectTypeList,ncontrolCode:ncontrolCode,isDeletePopup:false,isComboCheck:false,isEditPopup:false,screenName:\"IDS_PATIENTSEARCH\",sectionList:sectionList,loading:false,showFilter:false,openModal:openModal,isAddPopup:true,operation:\"save\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}else{return function(dispatch){var screenName=\"\";var urlArray=[];inputParam.inputData['isAddPopup']=true;var releaseSample=rsapi.post(\"release/getReleaseSample\",inputParam.inputData);//  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\nvar projectType=rsapi.post(\"release/getApprovedProjectType\",inputParam.inputData);var sectionType=rsapi.post(\"release/getSection\",inputParam.inputData);if(inputParam.inputData.ncoareporttypecode===reportCOAType.PROJECTWISE||inputParam.inputData.nsampletypecode===SampleType.PROJECTSAMPLETYPE&&inputParam.inputData.ncoareporttypecode===reportCOAType.SECTIONWISEMULTIPLESAMPLE){urlArray=[projectType];}else if(inputParam.inputData.isneedsection===transactionStatus.YES||inputParam.inputData.ncoareporttypecode===reportCOAType.SECTIONWISE||inputParam.inputData.ncoareporttypecode===reportCOAType.SECTIONWISEMULTIPLESAMPLE){urlArray=[sectionType];}else{urlArray=[releaseSample//,reportType\n];}dispatch(initRequest(true));Axios.all(urlArray).then(function(response){// const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\n//     \"scoareporttypename\", undefined, undefined, false);\n// const ReportTypeList = reportTypeMap.get(\"OptionList\");\nvar ProjectTypeList=[];var sectionList=[];// let selectedRecord = {\"ncoareporttypecode\": {\n//     \"value\": response[1].data.ReportType[0].ncoareporttypecode,\n//      \"label\": response[1].data.ReportType[0].scoareporttypename\n// }\n// };\nvar masterData={};var openModal=true;var selectedRecord=inputParam.inputData.selectedRecord;if(inputParam.inputData.ncoareporttypecode===reportCOAType.PROJECTWISE||inputParam.inputData.nsampletypecode===SampleType.PROJECTSAMPLETYPE&&inputParam.inputData.ncoareporttypecode===reportCOAType.SECTIONWISEMULTIPLESAMPLE){var projectTypeMap=constructOptionList(response[0].data||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,false);ProjectTypeList=projectTypeMap.get(\"OptionList\");masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{ReleaseSubSample:[],ReleaseTest:[],ReleaseSample:[]});if(inputParam.inputData.selectedRecord.nprojecttypecode){delete inputParam.inputData.selectedRecord.nprojecttypecode;}if(inputParam.inputData.selectedRecord.nprojectmastercode){delete inputParam.inputData.selectedRecord.nprojectmastercode;}}else if(inputParam.inputData.isneedsection===transactionStatus.YES||inputParam.inputData.ncoareporttypecode===reportCOAType.SECTIONWISE||inputParam.inputData.ncoareporttypecode===reportCOAType.SECTIONWISEMULTIPLESAMPLE){var sectionTypeMap=constructOptionList(response[0].data.sectionList||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,false);sectionList=sectionTypeMap.get(\"OptionList\");masterData=_objectSpread(_objectSpread({},inputParam.masterData),{},{ReleaseSubSample:[],ReleaseTest:[],ReleaseSample:[]});if(inputParam.inputData.selectedRecord.nsectioncode){delete inputParam.inputData.selectedRecord.nsectioncode;}}else{if(response[0].data&&response[0].data.ReleaseSample.length!==0){var responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);}else{var _responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),_responseData);openModal=false;toast.warn(intl.formatMessage({id:\"IDS_NOSAMPLESAREAVAILABLE\"}));}}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,expandCheck:false,ProjectTypeList:ProjectTypeList,ncontrolCode:ncontrolCode,isDeletePopup:false,isComboCheck:false,isEditPopup:false,screenName:inputParam.inputData.screenName,sectionList:sectionList,loading:false,showFilter:false,openModal:openModal,isAddPopup:true,operation:\"save\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}}export function generateReleasedReport(inputData,Data,preventtb){return function(dispatch){dispatch(initRequest(true));var urlArray=[];//   const releaseSample = rsapi.post(\"release/updateRelease\", inputData)  ;\n//   const afterCorrection = rsapi.post(\"release/updateReleaseAfterCorrection\", inputData)  ;\ninputData['preventTbFlow']=preventtb===true?preventtb:false;if(inputData.listStatus===transactionStatus.CORRECTION){var afterCorrection=rsapi.post(\"release/updateReleaseAfterCorrection\",inputData);urlArray=[afterCorrection];}else{var releaseSample=rsapi.post(\"release/updateRelease\",inputData);urlArray=[releaseSample];}Axios.all(urlArray).then(function(response){if(response[0].data.rtn===\"MappingNeeded\"){dispatch({type:DEFAULT_RETURN,payload:{loading:false,modalShow:false,// selectedRecord: {}, \nloadEsign:false//openModal: false,\n// preventTbCheck:true\n}});inputData.confirmMessage.confirm(\"PortalMapping\",intl.formatMessage({id:\"IDS_SUBSAMPLEWASNOTMAPPED\"}),intl.formatMessage({id:\"IDS_DOYOUWANTTOCONTINUEWITHOUTSENDRESULTTOPREVENTTB\"}),intl.formatMessage({id:\"IDS_OK\"}),intl.formatMessage({id:\"IDS_CANCEL\"}),function(){return dispatch(generateReleasedReport(inputData,Data,true));},false,function(){return dispatch(cancelPopUp(inputData,Data));});}else{// if (response[0].data[\"isPortalData\"] && response[0].data[\"PortalStatus\"] && response[0].data[\"PortalStatus\"].length > 0) {\n//     dispatch(UpdateExternalOrderStatus(response[0].data[\"PortalStatus\"], inputData));\n// }\nif(response[0].data[\"PreventTb\"]){toast.warn(response[0].data[\"PreventTb\"]);}var masterData=_objectSpread(_objectSpread({},Data),response[0].data);if(response[0].data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response[0].data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response[0].data.rtn);}sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{loading:false,change:inputData.change,masterData:masterData,modalShow:false,selectedRecord:{},loadEsign:false,openModal:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{//toast.warn(error.response.data['rtn']);\ntoast.warn(error.response.data);}});};}export function cancelPopUp(inputData,Data){return function(dispatch){dispatch({type:DEFAULT_RETURN,payload:{loading:false,modalShow:false,selectedRecord:{},loadEsign:false,openModal:false}});};}export function getReleasedFilterStatus(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getReleaseConfigVersionRegTemplateDesign\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReleasedDataDetails(inputParam,coahistory){return function(dispatch){var inputParamData={dfrom:inputParam.inputData.dfrom,dto:inputParam.inputData.dto,nsampletypecode:inputParam.inputData.nsampletypecode,nregtypecode:inputParam.inputData.nregtypecode,nregsubtypecode:inputParam.inputData.nregsubtypecode,ntransactionstatus:inputParam.inputData.ntransactionstatus,nsectioncode:inputParam.inputData.nsectioncode,ntestcode:inputParam.inputData.ntestcode,napprovalversioncode:inputParam.inputData.napprovalversioncode,napprovalconfigcode:inputParam.inputData.napprovalconfigcode,userinfo:inputParam.inputData.userinfo,nneedsubsample:inputParam.inputData.nneedsubsample,ncoaparentcode:inputParam.ncoaparentcode,npreregno:inputParam.npreregno,ncoareporttypecode:inputParam.inputData.ncoareporttypecode,isneedsection:inputParam.inputData.isneedsection,ndesigntemplatemappingcode:inputParam.masterData.ndesigntemplatemappingcode,isAddPopup:false};dispatch(initRequest(true));rsapi.post(\"release/getReleaseSample\",inputParamData).then(function(response){var responseData=_objectSpread({},response.data);// responseData = sortData(responseData)\nvar masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,expandCheck:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovedProjectByProjectType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getApprovedProjectByProjectType\",inputData).then(function(response){var projectMasterMap=constructOptionList(response.data.projectMasterList||[],\"nprojectmastercode\",\"sprojectcode\",undefined,undefined,false);var projectMasterList=projectMasterMap.get(\"OptionList\");var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{projectMasterList:projectMasterList,masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{ReleaseSample:[]}),selectedRecord:{},loading:false,expandCheck:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovedProjectType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getApprovedProjectType\",inputData).then(function(response){var projectTypeMap=constructOptionList(response.data||[],\"nprojecttypecode\",\"sprojecttypename\",undefined,undefined,false);var ProjectTypeList=projectTypeMap.get(\"OptionList\");//     const projectMasterMap = constructOptionList(response.data || [], \"nprojecttypecode\",\n//     \"sprojecttypename\", undefined, undefined, false);\n// const projectMasterList = projectMasterMap.get(\"OptionList\");\nvar responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{ProjectTypeList:ProjectTypeList,masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{ProjectTypeValue:inputData.ProjectTypeValue}),loading:false,expandCheck:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSectionForSectionWise(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getSection\",inputData.inputData).then(function(response){var sectionMap=constructOptionList(response.data.sectionList||[],\"nsectioncode\",\"ssectionname\",undefined,undefined,false);var sectionList=sectionMap.get(\"OptionList\");var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{sectionList:sectionList,masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{ReleaseSample:[]}),loading:false,expandCheck:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getReportForPortal(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/SendToPortalReport\",inputData).then(function(response){if(response.data[\"rtn\"]){toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}function UpdateExternalOrderStatus(portallist,inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(String(inputParam[\"url\"])+\"/portal/UpdateMultiSampleStatus\",JSON.stringify(portallist),{headers:{'Content-Type':'application/json'}}).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response!==undefined&&error.response.status===500){toast.error(error.message);}else if(error.response===undefined){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovedRecordsAsDraft(inputData,Data1){return function(dispatch){if(inputData!==undefined&&inputData.npreregno!==\"\"){dispatch(initRequest(true));return rsapi.post(\"release/saveRelease\",inputData).then(function(response){if(response.data.rtn===\"Success\"){var masterData=_objectSpread(_objectSpread(_objectSpread({},Data1),response.data),{},{searchedData:undefined});sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,change:inputData.change,loading:false,loadEsign:false,openModal:false,expandCheck:false}});}else{toast.warn(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{//  masterData,\nchange:inputData.change,loading:false,loadEsign:false,openModal:false,expandCheck:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);//  console.log(\"ErrorRelease,\", error);\n}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTANYONESAMPLE\"}));}};}export function preliminaryReport(inputParam,Data,screenName){return function(dispatch){dispatch(initRequest(true));// const inputData = {\n//     npreregno: inputParam.npreregno,\n//  //   nsectioncode: inputParam.nsectioncode || -1,\n//     userinfo: inputParam.userinfo,\n//     nprimarykey: inputParam.npreregno,\n//     nreporttypecode: REPORTTYPE.COAREPORT,\n//     sprimarykeyname: \"npreregno\",\n//     ncontrolcode: inputParam.ncontrolCode,\n//     nregtypecode: inputParam.nregtypecode,\n//     nregsubtypecode: inputParam.nregsubtypecode,\n//     ntransactiontestcode:inputParam.ntransactiontestcode,\n//     napproveconfversioncode: inputParam.napprovalversioncode,\n//     ncoaparentcode: inputParam.ncoaparentcode,\n//     ntransactionstatus:inputParam.ntransactionstatus\n// }\nrsapi.post(\"release/generateReleasedReport\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},Data),response.data);if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,change:inputParam.change,masterData:masterData,screenName:screenName,modalShow:false,selectedRecord:{},loadEsign:false,openModal:inputParam.inputData.openModal}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data['rtn']);}});};}export function previewAndFinalReport(inputParam,Data,screenName){return function(dispatch){dispatch(initRequest(true));// const inputData = {\n//     npreregno: inputParam.npreregno,\n//  //   nsectioncode: inputParam.nsectioncode || -1,\n//     userinfo: inputParam.userinfo,\n//     nprimarykey: inputParam.npreregno,\n//     nreporttypecode: REPORTTYPE.COAREPORT,\n//     sprimarykeyname: \"npreregno\",\n//     ncontrolcode: inputParam.ncontrolCode,\n//     nregtypecode: inputParam.nregtypecode,\n//     nregsubtypecode: inputParam.nregsubtypecode,\n//     ntransactiontestcode:inputParam.ntransactiontestcode,\n//     napproveconfversioncode: inputParam.napprovalversioncode,\n//     ncoaparentcode: inputParam.ncoaparentcode,\n//     ntransactionstatus:inputParam.ntransactionstatus\n// }\nrsapi.post(\"release/generateReleasedReport\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},Data),response.data);if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,change:inputParam.change,masterData:masterData,screenName:screenName,modalShow:false,selectedRecord:{},loadEsign:false,openModal:inputParam.inputData.openModal}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data['rtn']);}});};}export function getRemoveApprovedSample(inputParam,ncontrolCode){return function(dispatch){var urlArray=[];inputParam.inputData['isPopup']=true;var releaseSample=rsapi.post(\"release/getReleaseSample\",inputParam.inputData);//  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\n// const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\nvar statusService=rsapi.post(\"release/getStatusAlert\",inputParam.inputData);urlArray=[releaseSample,statusService//,reportType\n];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){if(response[1].data.Status===\"Success\"){var _payload;var masterData={};var selectedRecord=inputParam.inputData.selectedRecord;var responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);// responseData = sortData(responseData)\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:(_payload={masterData:masterData,// selectedRecord,\nisDeletePopup:true,isComboCheck:true,isEditPopup:false,ncontrolCode:ncontrolCode,loading:false,showFilter:false,openModal:true,isAddPopup:false,operation:\"delete\"},_defineProperty(_payload,\"ncontrolCode\",inputParam.inputData.ncontrolCode),_defineProperty(_payload,\"expandCheck\",false),_defineProperty(_payload,\"screenName\",inputParam.inputData.screenName),_payload)});}else{toast.warn(intl.formatMessage({id:response[1].data.ValidationStatus}));dispatch({type:DEFAULT_RETURN,payload:{ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getDeleteApprovedSample(inputData,Data1){return function(dispatch){if(inputData!==undefined&&inputData.npreregno!==\"\"){dispatch(initRequest(true));return rsapi.post(\"release/deleteRelease\",inputData).then(function(response){if(response.data.rtn===\"Success\"){var masterData=_objectSpread(_objectSpread({},Data1),response.data);sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,change:inputData.change,loading:false,loadEsign:false,openModal:false,expandCheck:false}});}else{toast.warn(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{//    masterData,\nchange:inputData.change,loading:false,loadEsign:false,openModal:false,expandCheck:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);//  console.log(\"ErrorRelease,\", error);\n}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTANYONESAMPLE\"}));}};}export function getEditApprovedSample(inputParam,ncontrolCode){return function(dispatch){var urlArray=[];inputParam.inputData['isPopup']=true;var releaseSample=rsapi.post(\"release/getReleaseSample\",inputParam.inputData);//  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\n//  const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\nvar statusService=rsapi.post(\"release/getStatusAlert\",inputParam.inputData);// const sectionType = rsapi.post(\"release/getSection\", inputParam.inputData);\n// if (inputParam.inputData.ncoareporttypecode === 7) {\n//     urlArray = [ projectType,statusService];\n// }\n// else if (inputParam.inputData.ncoareporttypecode === 8) {\n//     urlArray = [ releaseSample,statusService];\n// }\n// else {\nurlArray=[releaseSample,statusService//,reportType\n];// }\ndispatch(initRequest(true));Axios.all(urlArray).then(function(response){// const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\n//     \"scoareporttypename\", undefined, undefined, false);\n// const ReportTypeList = reportTypeMap.get(\"OptionList\");\nif(response[1].data.Status===\"Success\"){var ProjectTypeList=[];var sectionList=[];// let selectedRecord = {\"ncoareporttypecode\": {\n//     \"value\": response[1].data.ReportType[0].ncoareporttypecode,\n//      \"label\": response[1].data.ReportType[0].scoareporttypename\n// }\n// };\nvar masterData={};var openModal=true;var selectedRecord=inputParam.inputData.selectedRecord;if(response[0].data&&response[0].data.ReleaseSample.length!==0){var responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);}else{var _responseData2=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),_responseData2);openModal=false;toast.warn(intl.formatMessage({id:\"IDS_NOSAMPLESAREAVAILABLE\"}));}// responseData = sortData(responseData)\nsortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,// selectedRecord,\nsectionList:sectionList,ncontrolCode:inputParam.inputData.ncontrolCode,isDeletePopup:false,isComboCheck:true,isEditPopup:true,ProjectTypeList:ProjectTypeList,loading:false,showFilter:false,openModal:openModal,isAddPopup:false,operation:\"append\",expandCheck:false,screenName:inputParam.inputData.screenName}});}else{toast.warn(intl.formatMessage({id:response[1].data.ValidationStatus}));dispatch({type:DEFAULT_RETURN,payload:{ncontrolCode:ncontrolCode,loading:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function UpdateApprovedSample(inputData,Data1){return function(dispatch){if(inputData!==undefined&&inputData.npreregno!==\"\"){dispatch(initRequest(true));return rsapi.post(\"release/appendRelease\",inputData).then(function(response){if(response.data.rtn===\"Success\"){var masterData=_objectSpread(_objectSpread({},Data1),response.data);sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,change:inputData.change,loading:false,loadEsign:false,openModal:false,expandCheck:false}});}else{toast.warn(response.data.rtn);dispatch({type:DEFAULT_RETURN,payload:{//  masterData,\nchange:inputData.change,loading:false,loadEsign:false,openModal:false,expandCheck:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);// console.log(\"ErrorRelease,\", error);\n}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTANYONESAMPLE\"}));}};}export function getreportcomments(inputData,Data){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getreportcomments\",inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},Data),response.data);dispatch({type:DEFAULT_RETURN,payload:{loading:false,change:inputData.change,masterData:masterData,screenName:\"IDS_REPORTINFOCOMMENT\",openModal:true,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function fetchReportInfoReleaseById(editParam){return function(dispatch){var additionalInfo=[];var inputParamData={nreportinforeleasecode:editParam.editRow.nreportinforeleasecode,userinfo:editParam.userInfo};dispatch(initRequest(true));rsapi.post(\"release/getActiveReportInfoReleaseById\",inputParamData).then(function(response){// const parameterResults = response.data.ReleaseParameter\nvar selectedId=editParam.editRow.nreportinforeleasecode;var selectedComment=_objectSpread({},response.data);var masterData=_objectSpread(_objectSpread({},editParam.masterData),{},{selectedComment:selectedComment});dispatch({type:DEFAULT_RETURN,payload:{screenName:\"IDS_REPORTINFOCOMMENTS\",selectedId:selectedId,masterData:masterData,//isParameterInitialRender: true,\nloading:false,openModal:true,// modalShow: true,\nReportmodalShow:true,operation:\"update\",modalTitle:intl.formatMessage({id:\"IDS_COMMENTS\"})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});//}\n};}export function UpdateReportComments(userInfo,Data1,inputData){var inputParamData={selectedComment:Data1.selectedComment,userinfo:userInfo};return function(dispatch){//if (inputData !== undefined &&inputData.npreregno!==\"\") {\ndispatch(initRequest(true));return rsapi.post(\"release/updateReportComment\",inputParamData).then(function(response){var masterData=_objectSpread(_objectSpread(_objectSpread({},Data1),response.data),{},{selectedComment:{}});dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,screenName:\"IDS_REPORTINFOCOMMENT\",loading:false,openModal:true,expandCheck:false,modalShow:false,ReportmodalShow:false,isComboCheck:true}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);// console.log(\"ErrorRelease,\", error);\n}else{toast.warn(error.response.data);}});// }\n// else {\n//     toast.warn(intl.formatMessage({\n//         id: \"IDS_SELECTANYONESAMPLE\"\n//     }));\n//}\n};}export function getResultCorrectionData(inputParam,ncontrolCode){return function(dispatch){var urlArray=[];inputParam.inputData['isPopup']=true;var resultCorrection=rsapi.post(\"release/getResultCorrection\",inputParam.inputData);//  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\n// const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\nvar statusService=rsapi.post(\"release/getStatusAlert\",inputParam.inputData);urlArray=[resultCorrection,statusService//,reportType\n];dispatch(initRequest(true));Axios.all(urlArray).then(function(response){if(response[1].data.Status===\"Success\"){var _payload2;var masterData={};var selectedRecord=inputParam.inputData.selectedRecord;var responseData=_objectSpread({},response[0].data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:(_payload2={masterData:masterData,// selectedRecord,\nisDeletePopup:true,isComboCheck:true,isEditPopup:false,loadEsign:false,ncontrolCode:ncontrolCode,loading:false,showFilter:false,openModal:true,isCorrectionNeed:true,isAddPopup:false,operation:\"delete\"},_defineProperty(_payload2,\"ncontrolCode\",inputParam.inputData.ncontrolCode),_defineProperty(_payload2,\"expandCheck\",false),_defineProperty(_payload2,\"hideSave\",true),_defineProperty(_payload2,\"screenName\",inputParam.inputData.screenName),_payload2)});}else{toast.warn(intl.formatMessage({id:response[1].data.ValidationStatus}));dispatch({type:DEFAULT_RETURN,payload:{ncontrolCode:ncontrolCode,loading:false,expandCheck:false,loadEsign:false,openModal:false}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function fetchParameterById(editParam){return function(dispatch){var additionalInfo=[];var inputParamData={ntransactionresultcode:editParam.primaryKeyValue,userinfo:editParam.userInfo};dispatch(initRequest(true));rsapi.post(\"release/getReleaseResults\",inputParamData).then(function(response){var selectedResultGrade=[];var paremterResultcode=[];var parameterResults=response.data.ReleaseParameter;var predefDefaultFlag=false;parameterResults.map(function(param,index){selectedResultGrade[index]={ngradecode:param.ngradecode};paremterResultcode[index]=param.ntransactionresultcode;var jsondata=JSON.parse(param.jsondata['value']);if(jsondata.hasOwnProperty('additionalInfo')){additionalInfo[param.ntransactionresultcode]=jsondata['additionalInfo'];}predefDefaultFlag=false;response.data.PredefinedValues&&response.data.PredefinedValues[parameterResults[index].ntransactionresultcode]&&response.data.PredefinedValues[parameterResults[index].ntransactionresultcode].map(function(predefinedvalue){// if (predefinedvalue.ndefaultstatus === transactionStatus.YES) {\n//     if (!predefDefaultFlag) {\n//         predefDefaultFlag = true;\n//         response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] = constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] || [], 'sresultpredefinedname', 'sresultpredefinedname', undefined,\n//             undefined, undefined).get(\"OptionList\");\n//     }\n// response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] =\n//     constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] || [], 'spredefinedname', 'spredefinedname', undefined,\n//         undefined, undefined).get(\"OptionList\");\n//     if (response.data.ResultParameter[index].sresult === null) {\n//         response.data.ResultParameter[index].sresult = predefinedvalue.spredefinedname;\n//         response.data.ResultParameter[index].sresultpredefinedname = predefinedvalue.sresultpredefinedname;\n//         response.data.ResultParameter[index].sfinal = predefinedvalue.spredefinedsynonym;\n//         response.data.ResultParameter[index].editable = true;\n//         response.data.ResultParameter[index].ngradecode = predefinedvalue.ngradecode;\n//         if(predefinedvalue.spredefinedcomments&&predefinedvalue.spredefinedcomments!==null){\n//             response.data.ResultParameter[index].sresultcomment = predefinedvalue.spredefinedcomments\n//             &&predefinedvalue.spredefinedcomments;\n//         }\n//     }\n// }\n//  else {\nif(!predefDefaultFlag){predefDefaultFlag=true;response.data.PredefinedValues[parameterResults[index].ntransactionresultcode]=constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode]||[],'sresultpredefinedname','sresultpredefinedname',undefined,undefined,undefined).get(\"OptionList\");}//   }\n//return null;\n});param['editable']=false;//return null;\n// response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] =  constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] || [], 'spredefinedname', 'spredefinedname', undefined,\n// undefined, undefined).get(\"OptionList\");\n});dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},editParam.masterData),response.data),{},{paremterResultcode:paremterResultcode,//,\nselectedResultGrade:selectedResultGrade}),selectedRecord:{additionalInfo:additionalInfo.length>0?additionalInfo:[],selectedResultGrade:selectedResultGrade,ReleaseParameter:response.data.ReleaseParameter},parameterResults:response.data.ReleaseParameter,isParameterInitialRender:true,loading:false,// screenName: \"IDS_RESULTENTRY\",\nopenModal:true,modalShow:true,operation:\"update\",modalTitle:intl.formatMessage({id:\"IDS_CHANGERESULT\"}),selectedId:editParam.primaryKeyValue,//activeTestKey: \"IDS_RESULTS\",\nncontrolcode:editParam.editResultId}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});//}\n};}export function updateCorrectionStatus(inputData,Data,screenname){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"release/updateCorrectionStatus\",inputData).then(function(response){if(response.data.rtn===\"Success\"){var masterData=_objectSpread(_objectSpread({},Data),response.data);sortData(masterData.ReleaseHistory,\"\",'ncoaparentcode');dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,change:inputData.change,openModal:false,loading:false,loadEsign:false,screenName:screenname}});}else{dispatch({type:DEFAULT_RETURN,payload:{// masterData,\n//  change: inputData.change,\nopenModal:false,loading:false,loadEsign:false//  screenName:screenname\n}});toast.warn(intl.formatMessage({id:response.data}));}// }\n}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);//  console.log(\"ErrorRelease,\", error);\n}else{toast.warn(error.response.data);}});};}export function validateEsignforRelease(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){var methodUrl=\"release\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}//dispatch(inputParam[\"screenData\"][\"inputParam\"].performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\ndispatch(dispatchMethods(inputParam[\"screenData\"]));}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}function dispatchMethods(screenData){return function(dispatch){var doAction=screenData.inputParam.inputData.doAction;switch(doAction){case\"appendsample\":dispatch(UpdateApprovedSample(screenData.inputParam.inputData,screenData.masterData));break;case\"removesample\":dispatch(getDeleteApprovedSample(screenData.inputParam.inputData,screenData.masterData,'openModal'));break;case\"generate\":dispatch(generateReleasedReport(screenData.inputParam.inputData,screenData.masterData));break;case\"download\":dispatch(previewAndFinalReport(screenData.inputParam,screenData.masterData));break;case\"correction\":dispatch(updateCorrectionStatus(screenData.inputParam.inputData,screenData.masterData,screenData.inputParam.inputData.screenName));break;case\"saveasdraft\":dispatch(getApprovedRecordsAsDraft(screenData.inputParam.inputData,screenData.masterData));break;case\"editresult\":dispatch(crudMaster(screenData.inputParam,screenData.masterData,\"modalShow\"));break;case\"preliminary\":dispatch(preliminaryReport(screenData.inputParam,screenData.masterData));break;case\"editReleaseTestAttachment\":dispatch(onSaveReleaseTestAttachment(screenData.inputParam));break;case\"deleteReleaseTestAttachment\":dispatch(onDeleteReleaseTestAttachment(screenData.inputParam));break;case\"editReleaseTestComment\":dispatch(onSaveReleaseTestComment(screenData.inputParam));break;case\"deleteReleaseTestComment\":dispatch(onDeleteReleaseTestComment(screenData.inputParam));break;default:break;}};}export function viewReportHistory(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/viewReportHistory\",inputParam.inputData).then(function(response){var masterData=inputParam.masterData;var PatientReports=response.data.PatientReports;masterData=_objectSpread(_objectSpread({},masterData),{},{PatientReports:PatientReports});dispatch({type:DEFAULT_RETURN,payload:{isPatientReports:true,openModal:true,hideSave:true,isAddPopup:false,isEditPopup:false,isDeletePopup:false,masterData:masterData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}export function viewReleaseTestAttachment(inputParam){return function(dispatch){dispatch(initRequest(true));var methodUrl=\"\";if(inputParam.inputData.actionName===\"IDS_RELEASETESTATTACHMENT\"){methodUrl=\"getReleaseTestAttachment\";}else{methodUrl=\"getReleaseTestComment\";}rsapi.post(\"release/\"+methodUrl,inputParam.inputData).then(function(response){var masterData=inputParam.masterData;var ReleaseTestAttachmentDetails=response.data.ReleaseTestAttachmentDetails;var ReleaseTestCommentDetails=response.data.ReleaseTestCommentDetails;var isReleaseTestAttachment=inputParam.inputData.actionName===\"IDS_RELEASETESTATTACHMENT\";var isReleaseTestComment=inputParam.inputData.actionName===\"IDS_RELEASETESTCOMMENT\";var lstRegistrationArno=constructOptionList(response.data.RegistrationArno||[],\"npreregno\",\"sarno\",false,false,true);var RegistrationArno=lstRegistrationArno.get(\"OptionList\");var lstRegistrationSampleArno=constructOptionList(response.data.RegistrationSampleArno||[],\"ntransactionsamplecode\",\"ssamplearno\",false,false,true);var RegistrationSampleArno=lstRegistrationSampleArno.get(\"OptionList\");var lstRegistrationTest=constructOptionList(response.data.RegistrationTest||[],\"ntransactiontestcode\",\"stestsynonym\",false,false,true);var RegistrationTest=lstRegistrationTest.get(\"OptionList\");var lstCommentSubType=constructOptionList(response.data.CommentSubType||[],\"ncommentsubtypecode\",\"scommentsubtype\",false,false,true);var CommentSubType=lstCommentSubType.get(\"OptionList\");masterData=_objectSpread(_objectSpread({},masterData),{},{ReleaseTestAttachmentDetails:ReleaseTestAttachmentDetails,ReleaseTestCommentDetails:ReleaseTestCommentDetails,RegistrationArno:RegistrationArno,RegistrationSampleArno:RegistrationSampleArno,RegistrationTest:RegistrationTest,CommentSubType:CommentSubType});dispatch({type:DEFAULT_RETURN,payload:{isReleaseTestAttachment:isReleaseTestAttachment,isReleaseTestComment:isReleaseTestComment,openModal:true,isAddPopup:false,isEditPopup:false,isDeletePopup:false,masterData:masterData,loading:false,isAddReleaseTestAttachment:false,isInitialRender:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data);}});};}// export function writeJSONTemplate(inputParam){ \n//     return function (dispatch) {    \n//         return rsapi.post(\"release/writeJSONTemplate\",\n//         { [inputParam.primaryKeyName] :inputParam.selectedReleaseHistory.ncoaparentcode , \n//             \"userinfo\": inputParam.userInfo}\n//     )\n//         .then(response => {\n//                 dispatch({\n//                     type: DEFAULT_RETURN, payload: {\n//                         loading: false,\n//                         openModal: false,\n//                         expandCheck: false,\n//                     }\n//                 });\n//         })\n//         .catch(error => {\n//             dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\n//             if (error.response.status === 500) {\n//                 toast.error(error.message);\n//             }\n//             else {\n//                 toast.warn(error.response.data);\n//             }\n//         })\n// }\n// }\nexport function releaseReportHistory(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"release/getPreliminaryReportHistory\",inputParam).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data),//hange: inputData.change,\nopenModal:true,loading:false,loadEsign:false,screenName:inputParam.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function versionHistory(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"release/getVersionHistory\",inputParam).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),response.data),//hange: inputData.change,\nopenModal:true,loading:false,loadEsign:false,openModalTitle:\"IDS_VERSIONHISTORY\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function downloadVersionReport(inputParam,Data,screenName){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/downloadVersionHistory\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},Data),response.data);if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.FilePath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,change:inputParam.change,masterData:masterData,screenName:screenName,modalShow:false,selectedRecord:{},loadEsign:false,openModal:inputParam.inputData.openModal}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function downloadHistory(inputParam,Data,screenName){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/downloadHistory\",inputParam.inputData).then(function(response){var masterData=_objectSpread(_objectSpread({},Data),response.data);if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.FilePath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,change:inputParam.change,masterData:masterData,screenName:screenName,modalShow:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data['rtn']);}});};}export function getPatientFilterExecuteData(inputParam){return function(dispatch){var obj=_objectSpread(_objectSpread({},inputParam.component),{},{filterquery:inputParam.filterquery,userinfo:inputParam.userinfo});dispatch(initRequest(true));rsapi.post(\"/dynamicpreregdesign/getdynamicfilterexecutedata\",obj).then(function(response){var source=inputParam.component.source;var languageTypeCode=inputParam.userinfo.slanguagetypecode;var lstData=response.data[inputParam.component.label];var multilingual=[];inputParam.component.filterfields.map(function(item){if(item.ismultilingual){multilingual.push(item.columnname);}});var optionList=lstData.map(function(item){var jsondata=item[source]?item[source].value?JSON.parse(item[source].value):item.jsondata:item.jsondata;multilingual.map(function(mul){jsondata[mul]=jsondata[mul][languageTypeCode]||jsondata[mul]['en-US'];});// let label = isMultiLingual ?\n//   jsondata[optionValue]\n//   [languageTypeCode] || jsondata[optionValue]['en-US']\n//   : jsondata[optionValue];\nreturn jsondata;});if(inputParam.userinfo.nformcode===161){dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,onExecute:false,loading:false,screenName:\"IDS_PATIENTSEARCH\"}});}else{dispatch({type:DEFAULT_RETURN,payload:{lstPatient:optionList,// onExecute: false,\nloading:false,screenName:\"IDS_PATIENTSEARCH\"}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.info(error.response.data.rtn);}});};}export function getPatientWiseSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"release/getPatientWiseSample\",inputParam).then(function(response){var openModal=true;var screenName=\"IDS_ADDSAMPLE\";var responseData=_objectSpread({},response.data);var masterData={};var lstPatient=[];masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(responseData&&responseData.ReleaseSample.length!==0){var _responseData3=_objectSpread({},response.data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),_responseData3);}else{var _responseData4=_objectSpread({},response.data);masterData=_objectSpread(_objectSpread({},inputParam.masterData),_responseData4);lstPatient=inputParam.Login.lstPatient;//openModal = false;\nscreenName=\"IDS_PATIENTSEARCH\";toast.warn(intl.formatMessage({id:\"IDS_NOSAMPLESAREAVAILABLE\"}));}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{// awesomeTree:fieldList[0].awesomeTree,\nawesomeConfig:undefined,lstPatient:lstPatient,//lstPatient:[],\nkendoSkip:0,kendoTake:5,masterData:masterData,expandCheck:false,isDeletePopup:false,isComboCheck:false,isEditPopup:false,screenName:screenName,//\"IDS_ADDSAMPLE\",\nloading:false,showFilter:false,openModal:openModal,isAddPopup:true,operation:\"save\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function onSaveReleaseTestAttachment(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.inputData.classUrl+\"/\"+inputParam.inputData.operation+inputParam.inputData.methodUrl,inputParam.inputData.formData).then(function(response){var ReleaseTestAttachmentDetails=response.data.ReleaseTestAttachmentDetails;var masterData=_objectSpread(_objectSpread({},inputParam.inputData.masterData),{},{ReleaseTestAttachmentDetails:ReleaseTestAttachmentDetails});var selectedRecord={};dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,isAddReleaseTestAttachment:false,isReleaseTestAttachment:true,loading:false,screenName:inputParam.inputData.screenName,masterData:masterData,isInitialRender:false,loadEsign:false,loadEsignStateHandle:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(error.message);}else if(error.response===undefined){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function onDeleteReleaseTestAttachment(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.inputData.url,{\"releasetestattachment\":inputParam.inputData.releasetestattachment,\"userinfo\":inputParam.inputData.userinfo}).then(function(response){var ReleaseTestAttachmentDetails=response.data.ReleaseTestAttachmentDetails;var selectedRecord=_objectSpread(_objectSpread({},inputParam.inputData.selectedRecord),response.data);var masterData=inputParam.inputData.masterData;masterData[\"ReleaseTestAttachmentDetails\"]=ReleaseTestAttachmentDetails;dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,isReleaseTestAttachment:true,loading:false,screenName:inputParam.inputData.screenName,masterData:masterData,loadEsignStateHandle:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(error.message);}else if(error.response===undefined){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function onSaveReleaseTestComment(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.inputData.classUrl+\"/\"+inputParam.inputData.operation+inputParam.inputData.methodUrl,inputParam.inputData.formData).then(function(response){var ReleaseTestCommentDetails=response.data.ReleaseTestCommentDetails;var masterData=_objectSpread(_objectSpread({},inputParam.inputData.masterData),{},{ReleaseTestCommentDetails:ReleaseTestCommentDetails});var selectedRecord={};dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,isAddReleaseTestComment:false,isReleaseTestComment:true,loading:false,screenName:inputParam.inputData.screenName,masterData:masterData,isInitialRender:false,loadEsignStateHandle:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(error.message);}else if(error.response===undefined){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function onDeleteReleaseTestComment(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(inputParam.inputData.url,{\"releasetestcomment\":inputParam.inputData.releasetestcomment,\"userinfo\":inputParam.inputData.userinfo}).then(function(response){var ReleaseTestCommentDetails=response.data.ReleaseTestCommentDetails;var selectedRecord=_objectSpread(_objectSpread({},inputParam.inputData.selectedRecord),response.data);var masterData=inputParam.inputData.masterData;masterData[\"ReleaseTestCommentDetails\"]=ReleaseTestCommentDetails;dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,isReleaseTestComment:true,loading:false,screenName:inputParam.inputData.screenName,masterData:masterData,loadEsignStateHandle:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response&&error.response.status===500){toast.error(error.message);}else if(error.response===undefined){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ReleaseAction.js"],"names":["Axios","toast","intl","constructOptionList","replaceUpdatedObject","sortData","reportCOAType","REPORTTYPE","SampleType","transactionStatus","TrainingUpdateChildTab","rsapi","initRequest","DEFAULT_RETURN","crudMaster","getFieldSpecification","getFieldSpecification3","filterObjectForReactAwesomeFilter","Utils","QbUtils","checkTree","loadTree","getReleasedRegistrationType","inputData","dispatch","post","then","response","responseData","data","type","payload","masterData","SampleTypeValue","realSampleTypeList","realReportTypeList","realRegTypeList","realRegSubTypeList","realFilterStatusList","realApprovalVersionList","realDesignTemplateMappingList","loading","catch","error","status","message","warn","getReleasedRegistrationSubType","RegTypeValue","getReleasedFilterBasedTest","napprovalversioncode","RegSubTypeValue","ndesigntemplatemappingcode","DesignTemplateMappingValue","rtn","formatMessage","id","getReleasedApprovalVersion","inputParam","getReleasedSample","nsectioncode","undefined","showFilter","getApprovedSample","ncontrolCode","realReportTypeValue","ncoareporttypecode","PATIENTWISE","fieldList","get","languageTypeCode","userinfo","slanguagetypecode","filterfields","fields","gridColumns","awesomeTree","awesomeConfig","urlArray","all","ProjectTypeList","sectionList","openModal","seletedFilterComponent","lstPatient","kendoSkip","kendoTake","expandCheck","isDeletePopup","isComboCheck","isEditPopup","screenName","isAddPopup","operation","releaseSample","projectType","sectionType","PROJECTWISE","nsampletypecode","PROJECTSAMPLETYPE","SECTIONWISEMULTIPLESAMPLE","isneedsection","YES","SECTIONWISE","selectedRecord","projectTypeMap","ReleaseSubSample","ReleaseTest","ReleaseSample","nprojecttypecode","nprojectmastercode","sectionTypeMap","length","generateReleasedReport","Data","preventtb","listStatus","CORRECTION","afterCorrection","modalShow","loadEsign","confirmMessage","confirm","cancelPopUp","document","getElementById","setAttribute","filepath","click","ReleaseHistory","change","getReleasedFilterStatus","getReleasedDataDetails","coahistory","inputParamData","dfrom","dto","nregtypecode","nregsubtypecode","ntransactionstatus","ntestcode","napprovalconfigcode","nneedsubsample","ncoaparentcode","npreregno","getApprovedProjectByProjectType","projectMasterMap","projectMasterList","getApprovedProjectType","ProjectTypeValue","getSectionForSectionWise","sectionMap","getReportForPortal","UpdateExternalOrderStatus","portallist","String","JSON","stringify","headers","getApprovedRecordsAsDraft","Data1","searchedData","preliminaryReport","previewAndFinalReport","getRemoveApprovedSample","statusService","Status","ValidationStatus","getDeleteApprovedSample","getEditApprovedSample","UpdateApprovedSample","getreportcomments","fetchReportInfoReleaseById","editParam","additionalInfo","nreportinforeleasecode","editRow","userInfo","selectedId","selectedComment","ReportmodalShow","modalTitle","UpdateReportComments","getResultCorrectionData","resultCorrection","isCorrectionNeed","fetchParameterById","ntransactionresultcode","primaryKeyValue","selectedResultGrade","paremterResultcode","parameterResults","ReleaseParameter","predefDefaultFlag","map","param","index","ngradecode","jsondata","parse","hasOwnProperty","PredefinedValues","predefinedvalue","isParameterInitialRender","ncontrolcode","editResultId","updateCorrectionStatus","screenname","validateEsignforRelease","methodUrl","toLowerCase","dispatchMethods","info","screenData","doAction","onSaveReleaseTestAttachment","onDeleteReleaseTestAttachment","onSaveReleaseTestComment","onDeleteReleaseTestComment","viewReportHistory","PatientReports","isPatientReports","hideSave","viewReleaseTestAttachment","actionName","ReleaseTestAttachmentDetails","ReleaseTestCommentDetails","isReleaseTestAttachment","isReleaseTestComment","lstRegistrationArno","RegistrationArno","lstRegistrationSampleArno","RegistrationSampleArno","lstRegistrationTest","RegistrationTest","lstCommentSubType","CommentSubType","isAddReleaseTestAttachment","isInitialRender","releaseReportHistory","versionHistory","openModalTitle","downloadVersionReport","FilePath","downloadHistory","getPatientFilterExecuteData","obj","component","filterquery","source","lstData","label","multilingual","item","ismultilingual","push","columnname","optionList","value","mul","nformcode","onExecute","getPatientWiseSample","Login","classUrl","formData","loadEsignStateHandle","url","releasetestattachment","isAddReleaseTestComment","releasetestcomment"],"mappings":"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","sourcesContent":["import Axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { intl } from \"../components/App\";\r\nimport { constructOptionList, replaceUpdatedObject, sortData } from \"../components/CommonScript\";\r\nimport { reportCOAType, REPORTTYPE, SampleType, transactionStatus } from \"../components/Enumeration\";\r\nimport TrainingUpdateChildTab from \"../pages/competencemanagement/trainingupdate/TrainingUpdateChildTab\";\r\nimport rsapi from \"../rsapi\";\r\nimport { initRequest } from \"./LoginAction\";\r\nimport { DEFAULT_RETURN } from \"./LoginTypes\";\r\nimport { crudMaster } from \"./ServiceAction\";\r\nimport { getFieldSpecification as getFieldSpecification3 } from '../components/type3component/Type3FieldSpecificationList';\r\nimport { filterObjectForReactAwesomeFilter } from \"./RegistrationAction\";\r\n// export function getReleasedSelectedSampleSubSampleTest(userInfo, Data1, inputData) {\r\n    import { Utils as QbUtils } from \"@react-awesome-query-builder/ui\";\r\n    const { checkTree, loadTree } = QbUtils;\r\n\r\n//     return function (dispatch) {\r\n//       if (inputData !== undefined &&inputData.npreregno!==\"\") {\r\n\r\n//         dispatch(initRequest(true));\r\n//         return rsapi.post(\"release/updateRelease\",\r\n\r\n//             inputData\r\n//         )\r\n//             .then(response => {\r\n//                 if (response.data.statusCodeValue !== 200) {\r\n//                     toast.warn(intl.formatMessage({\r\n//                         id: response.data.body\r\n//                     }));\r\n//                     dispatch({\r\n//                         type: DEFAULT_RETURN,\r\n//                         payload: {\r\n//                             loading: false\r\n//                         }\r\n//                     });\r\n\r\n\r\n//                 }\r\n//                 else {\r\n\r\n//                     if (response.data.body[\"PortalStatus\"] && response.data.body[\"PortalStatus\"].length > 0) {\r\n//                         dispatch(UpdateExternalOrderStatus(response.data.body[\"PortalStatus\"],inputData));\r\n//                     }\r\n//                     let masterData = {\r\n\r\n//                         ...Data1, ...response.data.body,\r\n\r\n\r\n//                     };\r\n\r\n//                     console.log(\"ReleasedTest,\", masterData);\r\n//                      sortData(masterData.ReleaseHistory,\"\",'sreportno');\r\n//                   //  dispatch(generateReport(inputData,masterData))\r\n\r\n//                     dispatch({\r\n//                         type: DEFAULT_RETURN, payload: {\r\n//                             masterData,\r\n//                             change: inputData.change,\r\n//                             loading: false,\r\n//                             openModal:false\r\n//                         }\r\n//                     });\r\n//                 }\r\n//             })\r\n\r\n//             .catch(error => {\r\n//                 dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//                 if (error.response.status === 500) {\r\n//                     toast.error(error.message);\r\n//                     console.log(\"ErrorRelease,\", error);\r\n\r\n//                 }\r\n//                 else {\r\n//                     toast.warn(error.response.data);\r\n//                 }\r\n//             })\r\n\r\n\r\n//         }\r\n//         else {\r\n//             toast.warn(intl.formatMessage({\r\n//                 id: \"IDS_SELECTANYONESAMPLE\"\r\n//             }));\r\n//         }\r\n//     }\r\n// }\r\nexport function getReleasedRegistrationType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getRegistrationType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            SampleTypeValue: inputData.SampleTypeValue,\r\n                            realSampleTypeList: inputData.realSampleTypeList || [],\r\n                            realReportTypeList: inputData.realReportTypeList || [],\r\n                            realRegTypeList: inputData.realRegTypeList || [],\r\n                            realRegSubTypeList: inputData.realRegSubTypeList || [],\r\n                            realFilterStatusList: inputData.realFilterStatusList || [],\r\n                            realApprovalVersionList: inputData.realApprovalVersionList || [],\r\n                            realDesignTemplateMappingList: inputData.realDesignTemplateMappingList || []\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedRegistrationSubType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getRegistrationSubType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegTypeValue: inputData.RegTypeValue,\r\n                            realSampleTypeList: inputData.realSampleTypeList || [],\r\n                            realReportTypeList: inputData.realReportTypeList || [],\r\n                            realRegTypeList: inputData.realRegTypeList || [],\r\n                            realRegSubTypeList: inputData.realRegSubTypeList || [],\r\n                            realFilterStatusList: inputData.realFilterStatusList || [],\r\n                            realApprovalVersionList: inputData.realApprovalVersionList || [],\r\n                            realDesignTemplateMappingList: inputData.realDesignTemplateMappingList || []\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getReleasedFilterBasedTest(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.napprovalversioncode) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"release/getFilterBasedTest\", inputData)\r\n                .then(response => {\r\n\r\n\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...inputData.masterData,\r\n                                ...responseData,\r\n                                RegSubTypeValue: inputData.RegSubTypeValue,\r\n                                ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n                                DesignTemplateMappingValue: inputData.DesignTemplateMappingValue\r\n                            },\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (response.data.rtn) {\r\n                        toast.warn(response.data.rtn);\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_PLSSELECTALLVALUESINFILTER\"\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getReleasedApprovalVersion(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getApprovalVersion\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            realSampleTypeList: inputParam.inputData.realSampleTypeList || [],\r\n                            realReportTypeList: inputParam.inputData.realReportTypeList || [],\r\n                            realRegTypeList: inputParam.inputData.realRegTypeList || [],\r\n                            realRegSubTypeList: inputParam.inputData.realRegSubTypeList || [],\r\n                            realFilterStatusList: inputParam.inputData.realFilterStatusList || [],\r\n                            realApprovalVersionList: inputParam.inputData.realApprovalVersionList || [],\r\n                            realDesignTemplateMappingList: inputParam.inputData.realDesignTemplateMappingList || []\r\n                            // fromDate: inputParam.inputData.dfrom,\r\n                            // toDate: inputParam.inputData.dto,\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseSample\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {}\r\n                let nsectioncode = {};\r\n\r\n                // if (response.data.ReleasedSampleDetails && response.data.ReleasedSampleDetails.length !== 0 ||\r\n                //     response.data.ReleaseSample && response.data.ReleaseSample.length === 0) {\r\n                masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (nsectioncode !== undefined) {\r\n                    nsectioncode = inputParam.inputData.nsectioncode;\r\n                }\r\n                // }\r\n                //     else {\r\n                //         responseData.ReleaseHistory = []\r\n                //         responseData.selectedReleaseHistory= []\r\n                //         masterData = {\r\n                //             ...inputParam.masterData,\r\n                //             ...responseData,\r\n                //         }\r\n                //     }\r\n\r\n                sortData(masterData, \"\", \"ncoaparentcode\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        nsectioncode: nsectioncode,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovedSample(inputParam, ncontrolCode) {\r\n        if(inputParam.masterData.realReportTypeValue.ncoareporttypecode===reportCOAType.PATIENTWISE)\r\n        {\r\n          \r\n            let fieldList = [];\r\n            fieldList = getFieldSpecification3().get(\"ExternalOrder\") || [];\r\n            \r\n            const languageTypeCode = inputParam.inputData.userinfo.slanguagetypecode;\r\n            const { fields, gridColumns } = filterObjectForReactAwesomeFilter(fieldList[0].filterfields, languageTypeCode, undefined, undefined)\r\n            let awesomeTree = fieldList[0].awesomeTree ? checkTree(loadTree(fieldList[0].awesomeTree), fieldList[0].awesomeConfig) : undefined\r\n           \r\n            return function (dispatch) {\r\n                let urlArray = []; \r\n\r\n              \r\n                dispatch(initRequest(true));\r\n                Axios.all(urlArray)\r\n        \r\n                    .then(response => {\r\n\r\n                        let ProjectTypeList = [];\r\n                        let sectionList = [];\r\n\r\n                        \r\n                        let masterData = {};\r\n                        let openModal = true;\r\n                      \r\n                masterData = {\r\n                    ...inputParam.masterData\r\n                }\r\n\r\n        \r\n                        \r\n                        sortData(masterData);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                fields,\r\n                                gridColumns,\r\n                                awesomeTree,\r\n                                seletedFilterComponent:fieldList[0],\r\n                                // awesomeTree:fieldList[0].awesomeTree,\r\n                                 awesomeConfig:undefined,\r\n                                lstPatient:[],\r\n                                kendoSkip: 0,\r\n                                kendoTake: 5,\r\n                                masterData,\r\n                                expandCheck: false,\r\n                                ProjectTypeList,\r\n                                ncontrolCode,\r\n                                isDeletePopup: false,\r\n                                isComboCheck: false,\r\n                                isEditPopup: false,\r\n                                screenName:\"IDS_PATIENTSEARCH\",\r\n                                sectionList,\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                openModal: openModal,\r\n                                isAddPopup: true,\r\n                                operation:\"save\"\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            }\r\n\r\n}\r\nelse{\r\n    return function (dispatch) {\r\n        \r\n        const screenName=\"\";\r\n        let urlArray = [];\r\n        inputParam.inputData['isAddPopup'] = true\r\n        const releaseSample = rsapi.post(\"release/getReleaseSample\", inputParam.inputData);\r\n        //  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\r\n        const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\r\n        const sectionType = rsapi.post(\"release/getSection\", inputParam.inputData);\r\n\r\n        if (inputParam.inputData.ncoareporttypecode === reportCOAType.PROJECTWISE ||\r\n            inputParam.inputData.nsampletypecode === SampleType.PROJECTSAMPLETYPE && inputParam.inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) {\r\n\r\n            urlArray = [projectType];\r\n        }\r\n        else if (inputParam.inputData.isneedsection === transactionStatus.YES || inputParam.inputData.ncoareporttypecode === reportCOAType.SECTIONWISE || inputParam.inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) {\r\n            urlArray = [sectionType];\r\n        }\r\n        else {\r\n            urlArray = [releaseSample\r\n                //,reportType\r\n            ];\r\n        }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                // const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\r\n                //     \"scoareporttypename\", undefined, undefined, false);\r\n\r\n                // const ReportTypeList = reportTypeMap.get(\"OptionList\");\r\n                let ProjectTypeList = [];\r\n                let sectionList = [];\r\n\r\n                // let selectedRecord = {\"ncoareporttypecode\": {\r\n                //     \"value\": response[1].data.ReportType[0].ncoareporttypecode,\r\n                //      \"label\": response[1].data.ReportType[0].scoareporttypename\r\n                // }\r\n                // };\r\n                let masterData = {};\r\n                let openModal = true;\r\n                let selectedRecord = inputParam.inputData.selectedRecord;\r\n                if (inputParam.inputData.ncoareporttypecode === reportCOAType.PROJECTWISE ||\r\n                    inputParam.inputData.nsampletypecode === SampleType.PROJECTSAMPLETYPE && inputParam.inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) {\r\n                    const projectTypeMap = constructOptionList(response[0].data || [], \"nprojecttypecode\",\r\n                        \"sprojecttypename\", undefined, undefined, false);\r\n\r\n                    ProjectTypeList = projectTypeMap.get(\"OptionList\");\r\n                    masterData = { ...inputParam.masterData, ReleaseSubSample: [], ReleaseTest: [], ReleaseSample: [] };\r\n                    if (inputParam.inputData.selectedRecord.nprojecttypecode) {\r\n                        delete inputParam.inputData.selectedRecord.nprojecttypecode\r\n                    }\r\n                    if (inputParam.inputData.selectedRecord.nprojectmastercode) {\r\n                        delete inputParam.inputData.selectedRecord.nprojectmastercode\r\n                    }\r\n                }\r\n                else if (inputParam.inputData.isneedsection === transactionStatus.YES || inputParam.inputData.ncoareporttypecode === reportCOAType.SECTIONWISE || inputParam.inputData.ncoareporttypecode === reportCOAType.SECTIONWISEMULTIPLESAMPLE) {\r\n                    const sectionTypeMap = constructOptionList(response[0].data.sectionList || [], \"nsectioncode\",\r\n                        \"ssectionname\", undefined, undefined, false);\r\n\r\n                    sectionList = sectionTypeMap.get(\"OptionList\");\r\n                    masterData = { ...inputParam.masterData, ReleaseSubSample: [], ReleaseTest: [], ReleaseSample: [] };\r\n                    if (inputParam.inputData.selectedRecord.nsectioncode) {\r\n                        delete inputParam.inputData.selectedRecord.nsectioncode\r\n                    }\r\n\r\n                }\r\n                else {\r\n                    if (response[0].data && response[0].data.ReleaseSample.length !== 0) {\r\n\r\n                        let responseData = { ...response[0].data }\r\n                        masterData = {\r\n                            ...inputParam.masterData, ...responseData\r\n                        }\r\n                    }\r\n                    else {\r\n                        let responseData = { ...response[0].data }\r\n                        masterData = {\r\n                            ...inputParam.masterData, ...responseData\r\n                        }\r\n                        openModal = false;\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_NOSAMPLESAREAVAILABLE\" }));\r\n                    }\r\n\r\n                }\r\n\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        expandCheck: false,\r\n                        ProjectTypeList,\r\n                        ncontrolCode,\r\n                        isDeletePopup: false,\r\n                        isComboCheck: false,\r\n                        isEditPopup: false,\r\n                        screenName:inputParam.inputData.screenName,\r\n                        sectionList,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        openModal: openModal,\r\n                        isAddPopup: true,\r\n                        operation: \"save\"\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n}\r\n\r\nexport function generateReleasedReport(inputData, Data,preventtb) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n\r\n        let urlArray = [];\r\n        //   const releaseSample = rsapi.post(\"release/updateRelease\", inputData)  ;\r\n        //   const afterCorrection = rsapi.post(\"release/updateReleaseAfterCorrection\", inputData)  ;\r\n        inputData['preventTbFlow']=preventtb===true?preventtb:false\r\n        if (inputData.listStatus === transactionStatus.CORRECTION) {\r\n\r\n            const afterCorrection = rsapi.post(\"release/updateReleaseAfterCorrection\", inputData);\r\n            urlArray = [afterCorrection];\r\n        }\r\n\r\n        else {\r\n            const releaseSample = rsapi.post(\"release/updateRelease\", inputData);\r\n\r\n            urlArray = [releaseSample];\r\n        }\r\n        Axios.all(urlArray)\r\n            .then(response => {\r\n                if (response[0].data.rtn === \"MappingNeeded\") {\r\n                    \r\n\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false,\r\n                            modalShow: false, \r\n                           // selectedRecord: {}, \r\n                            loadEsign: false,\r\n                            //openModal: false,\r\n                           // preventTbCheck:true\r\n                        }\r\n                    })\r\n\r\n                    inputData.confirmMessage.confirm(\"PortalMapping\", intl.formatMessage({ id: \"IDS_SUBSAMPLEWASNOTMAPPED\" }), intl.formatMessage({ id: \"IDS_DOYOUWANTTOCONTINUEWITHOUTSENDRESULTTOPREVENTTB\" }),\r\n                    intl.formatMessage({ id: \"IDS_OK\" }), intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n                     () => dispatch(generateReleasedReport(inputData, Data,true))  ,false,()=>dispatch(cancelPopUp(inputData, Data)) )\r\n\r\n                } else {\r\n                    // if (response[0].data[\"isPortalData\"] && response[0].data[\"PortalStatus\"] && response[0].data[\"PortalStatus\"].length > 0) {\r\n                    //     dispatch(UpdateExternalOrderStatus(response[0].data[\"PortalStatus\"], inputData));\r\n                    // }\r\n\r\n                    if (response[0].data[\"PreventTb\"]) {\r\n                        toast.warn(response[0].data[\"PreventTb\"])\r\n                    }\r\n\r\n                    let masterData = {\r\n                        ...Data,\r\n                        ...response[0].data,\r\n                    }\r\n\r\n                    if (response[0].data.rtn === \"Success\") {\r\n                        document.getElementById(\"download_data\").setAttribute(\"href\", response[0].data.filepath);\r\n                        document.getElementById(\"download_data\").click();\r\n                    }\r\n                    else {\r\n                        toast.warn(response[0].data.rtn);\r\n                    }\r\n                    sortData(masterData.ReleaseHistory, \"\", 'ncoaparentcode');\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            loading: false, change: inputData.change, masterData,\r\n                            modalShow: false, selectedRecord: {}, loadEsign: false, openModal: false\r\n                        }\r\n                    })\r\n                }\r\n\r\n\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    //toast.warn(error.response.data['rtn']);\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function cancelPopUp(inputData,Data) {\r\n    return function (dispatch) {\r\n        dispatch({\r\n            type: DEFAULT_RETURN, payload: {\r\n                loading: false,\r\n                modalShow: false, selectedRecord: {}, loadEsign: false, openModal: false\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function getReleasedFilterStatus(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseConfigVersionRegTemplateDesign\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputData.RegSubTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReleasedDataDetails(inputParam, coahistory) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            dfrom: inputParam.inputData.dfrom,\r\n            dto: inputParam.inputData.dto,\r\n\r\n            nsampletypecode: inputParam.inputData.nsampletypecode,\r\n            nregtypecode: inputParam.inputData.nregtypecode,\r\n            nregsubtypecode: inputParam.inputData.nregsubtypecode,\r\n            ntransactionstatus: inputParam.inputData.ntransactionstatus,\r\n            nsectioncode: inputParam.inputData.nsectioncode,\r\n            ntestcode: inputParam.inputData.ntestcode,\r\n            napprovalversioncode: inputParam.inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputParam.inputData.napprovalconfigcode,\r\n            userinfo: inputParam.inputData.userinfo,\r\n            nneedsubsample: inputParam.inputData.nneedsubsample,\r\n            ncoaparentcode: inputParam.ncoaparentcode,\r\n            npreregno: inputParam.npreregno,\r\n            ncoareporttypecode: inputParam.inputData.ncoareporttypecode,\r\n            isneedsection: inputParam.inputData.isneedsection,\r\n            ndesigntemplatemappingcode: inputParam.masterData.ndesigntemplatemappingcode,\r\n            isAddPopup: false\r\n\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseSample\", inputParamData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        expandCheck: false,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovedProjectByProjectType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getApprovedProjectByProjectType\", inputData)\r\n            .then(response => {\r\n                const projectMasterMap = constructOptionList(response.data.projectMasterList || [], \"nprojectmastercode\",\r\n                    \"sprojectcode\", undefined, undefined, false);\r\n\r\n                const projectMasterList = projectMasterMap.get(\"OptionList\");\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        projectMasterList,\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            ReleaseSample:[]\r\n                        },\r\n                        selectedRecord: {},\r\n                        loading: false,\r\n                        expandCheck: false,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovedProjectType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getApprovedProjectType\", inputData)\r\n            .then(response => {\r\n                const projectTypeMap = constructOptionList(response.data || [], \"nprojecttypecode\",\r\n                    \"sprojecttypename\", undefined, undefined, false);\r\n\r\n                const ProjectTypeList = projectTypeMap.get(\"OptionList\");\r\n\r\n                //     const projectMasterMap = constructOptionList(response.data || [], \"nprojecttypecode\",\r\n                //     \"sprojecttypename\", undefined, undefined, false);\r\n\r\n                // const projectMasterList = projectMasterMap.get(\"OptionList\");\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        ProjectTypeList,\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            ProjectTypeValue: inputData.ProjectTypeValue\r\n                        },\r\n                        loading: false,\r\n                        expandCheck: false,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getSectionForSectionWise(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getSection\", inputData.inputData)\r\n            .then(response => {\r\n                const sectionMap = constructOptionList(response.data.sectionList || [], \"nsectioncode\",\r\n                    \"ssectionname\", undefined, undefined, false);\r\n\r\n                const sectionList = sectionMap.get(\"OptionList\");\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        sectionList,\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            ReleaseSample:[]\r\n                            \r\n                        },\r\n                        loading: false,\r\n                        expandCheck: false,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getReportForPortal(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/SendToPortalReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data[\"rtn\"]) {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nfunction UpdateExternalOrderStatus(portallist, inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post((String)(inputParam[\"url\"]) + \"/portal/UpdateMultiSampleStatus\", JSON.stringify(portallist), {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            }\r\n        })\r\n            .then(response => {\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response !== undefined && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovedRecordsAsDraft(inputData, Data1) {\r\n\r\n\r\n    return function (dispatch) {\r\n        if (inputData !== undefined && inputData.npreregno !== \"\") {\r\n\r\n            dispatch(initRequest(true));\r\n            return rsapi.post(\"release/saveRelease\",\r\n\r\n                inputData\r\n            )\r\n                .then(response => {\r\n                    if (response.data.rtn === \"Success\") {\r\n                        let masterData = {\r\n\r\n                            ...Data1, ...response.data, searchedData: undefined\r\n\r\n\r\n                        };\r\n\r\n                        sortData(masterData.ReleaseHistory, \"\", 'ncoaparentcode');\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData,\r\n                                change: inputData.change,\r\n                                loading: false,\r\n                                loadEsign: false,\r\n                                openModal: false,\r\n                                expandCheck: false,\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        toast.warn(response.data.rtn);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                //  masterData,\r\n                                change: inputData.change,\r\n                                loading: false,\r\n                                loadEsign: false,\r\n                                openModal: false,\r\n                                expandCheck: false,\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                        //  console.log(\"ErrorRelease,\", error);\r\n\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n\r\n\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTANYONESAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n} \r\nexport function preliminaryReport(inputParam, Data, screenName) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        // const inputData = {\r\n        //     npreregno: inputParam.npreregno,\r\n        //  //   nsectioncode: inputParam.nsectioncode || -1,\r\n        //     userinfo: inputParam.userinfo,\r\n        //     nprimarykey: inputParam.npreregno,\r\n        //     nreporttypecode: REPORTTYPE.COAREPORT,\r\n        //     sprimarykeyname: \"npreregno\",\r\n        //     ncontrolcode: inputParam.ncontrolCode,\r\n        //     nregtypecode: inputParam.nregtypecode,\r\n        //     nregsubtypecode: inputParam.nregsubtypecode,\r\n        //     ntransactiontestcode:inputParam.ntransactiontestcode,\r\n        //     napproveconfversioncode: inputParam.napprovalversioncode,\r\n        //     ncoaparentcode: inputParam.ncoaparentcode,\r\n        //     ntransactionstatus:inputParam.ntransactionstatus\r\n        // }\r\n        rsapi.post(\"release/generateReleasedReport\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...Data,\r\n                    ...response.data,\r\n                }\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n                    {\r\n                        loading: false, change: inputParam.change, masterData, screenName: screenName,\r\n                        modalShow: false, selectedRecord: {}, loadEsign: false, openModal: inputParam.inputData.openModal\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data['rtn']);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function previewAndFinalReport(inputParam, Data, screenName) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        // const inputData = {\r\n        //     npreregno: inputParam.npreregno,\r\n        //  //   nsectioncode: inputParam.nsectioncode || -1,\r\n        //     userinfo: inputParam.userinfo,\r\n        //     nprimarykey: inputParam.npreregno,\r\n        //     nreporttypecode: REPORTTYPE.COAREPORT,\r\n        //     sprimarykeyname: \"npreregno\",\r\n        //     ncontrolcode: inputParam.ncontrolCode,\r\n        //     nregtypecode: inputParam.nregtypecode,\r\n        //     nregsubtypecode: inputParam.nregsubtypecode,\r\n        //     ntransactiontestcode:inputParam.ntransactiontestcode,\r\n        //     napproveconfversioncode: inputParam.napprovalversioncode,\r\n        //     ncoaparentcode: inputParam.ncoaparentcode,\r\n        //     ntransactionstatus:inputParam.ntransactionstatus\r\n        // }\r\n        rsapi.post(\"release/generateReleasedReport\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...Data,\r\n                    ...response.data,\r\n                }\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n                    {\r\n                        loading: false, change: inputParam.change, masterData, screenName: screenName,\r\n                        modalShow: false, selectedRecord: {}, loadEsign: false, openModal: inputParam.inputData.openModal\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data['rtn']);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRemoveApprovedSample(inputParam, ncontrolCode) {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        inputParam.inputData['isPopup'] = true\r\n        const releaseSample = rsapi.post(\"release/getReleaseSample\", inputParam.inputData);\r\n        //  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\r\n        // const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\r\n        const statusService = rsapi.post(\"release/getStatusAlert\", inputParam.inputData);\r\n\r\n        urlArray = [releaseSample, statusService\r\n            //,reportType\r\n        ];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                if (response[1].data.Status === \"Success\") {\r\n\r\n                    let masterData = {};\r\n                    let selectedRecord = inputParam.inputData.selectedRecord;\r\n\r\n                    let responseData = { ...response[0].data }\r\n                    masterData = {\r\n                        ...inputParam.masterData, ...responseData\r\n                    }\r\n\r\n\r\n                    // responseData = sortData(responseData)\r\n\r\n\r\n                    sortData(masterData);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            // selectedRecord,\r\n                            isDeletePopup: true,\r\n                            isComboCheck: true,\r\n                            isEditPopup: false,\r\n                            ncontrolCode,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            openModal: true,\r\n                            isAddPopup: false,\r\n                            operation: \"delete\",\r\n                            ncontrolCode: inputParam.inputData.ncontrolCode,\r\n                            expandCheck: false,\r\n                            screenName: inputParam.inputData.screenName,\r\n\r\n\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: response[1].data.ValidationStatus\r\n                    }));\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getDeleteApprovedSample(inputData, Data1) {\r\n\r\n\r\n    return function (dispatch) {\r\n        if (inputData !== undefined && inputData.npreregno !== \"\") {\r\n\r\n            dispatch(initRequest(true));\r\n            return rsapi.post(\"release/deleteRelease\",\r\n\r\n                inputData\r\n            )\r\n                .then(response => {\r\n                    if (response.data.rtn === \"Success\") {\r\n\r\n                        let masterData = {\r\n                            ...Data1, ...response.data,\r\n                        };\r\n                        sortData(masterData.ReleaseHistory, \"\", 'ncoaparentcode');\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData,\r\n                                change: inputData.change,\r\n                                loading: false,\r\n                                loadEsign: false,\r\n                                openModal: false,\r\n                                expandCheck: false,\r\n\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        toast.warn(response.data.rtn);\r\n\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                //    masterData,\r\n                                change: inputData.change,\r\n                                loading: false,\r\n                                loadEsign: false,\r\n                                openModal: false,\r\n                                expandCheck: false,\r\n\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                        //  console.log(\"ErrorRelease,\", error);\r\n\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTANYONESAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\nexport function getEditApprovedSample(inputParam, ncontrolCode) {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        inputParam.inputData['isPopup'] = true\r\n        const releaseSample = rsapi.post(\"release/getReleaseSample\", inputParam.inputData);\r\n        //  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\r\n        //  const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\r\n        const statusService = rsapi.post(\"release/getStatusAlert\", inputParam.inputData);\r\n        // const sectionType = rsapi.post(\"release/getSection\", inputParam.inputData);\r\n\r\n        // if (inputParam.inputData.ncoareporttypecode === 7) {\r\n\r\n        //     urlArray = [ projectType,statusService];\r\n        // }\r\n        // else if (inputParam.inputData.ncoareporttypecode === 8) {\r\n        //     urlArray = [ releaseSample,statusService];\r\n        // }\r\n        // else {\r\n        urlArray = [releaseSample, statusService\r\n            //,reportType\r\n        ];\r\n        // }\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                // const reportTypeMap = constructOptionList(response[1].data.ReportType || [], \"ncoareporttypecode\",\r\n                //     \"scoareporttypename\", undefined, undefined, false);\r\n\r\n                // const ReportTypeList = reportTypeMap.get(\"OptionList\");\r\n                if (response[1].data.Status === \"Success\") {\r\n\r\n                    let ProjectTypeList = [];\r\n                    let sectionList = [];\r\n\r\n                    // let selectedRecord = {\"ncoareporttypecode\": {\r\n                    //     \"value\": response[1].data.ReportType[0].ncoareporttypecode,\r\n                    //      \"label\": response[1].data.ReportType[0].scoareporttypename\r\n                    // }\r\n                    // };\r\n                    let masterData = {};\r\n                    let openModal = true;\r\n\r\n                    let selectedRecord = inputParam.inputData.selectedRecord;\r\n\r\n                    if (response[0].data && response[0].data.ReleaseSample.length !== 0) {\r\n\r\n                        let responseData = { ...response[0].data }\r\n                        masterData = {\r\n                            ...inputParam.masterData, ...responseData\r\n                        }\r\n                    }\r\n                    else {\r\n                        let responseData = { ...response[0].data }\r\n                        masterData = {\r\n                            ...inputParam.masterData, ...responseData\r\n                        }\r\n                        openModal = false;\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_NOSAMPLESAREAVAILABLE\" }));\r\n                    }\r\n                    // responseData = sortData(responseData)\r\n\r\n\r\n                    sortData(masterData);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            // selectedRecord,\r\n                            sectionList,\r\n                            ncontrolCode: inputParam.inputData.ncontrolCode,\r\n                            isDeletePopup: false,\r\n                            isComboCheck: true,\r\n                            isEditPopup: true,\r\n                            ProjectTypeList,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            openModal: openModal,\r\n                            isAddPopup: false,\r\n                            operation: \"append\",\r\n                            expandCheck: false,\r\n                            screenName: inputParam.inputData.screenName,\r\n\r\n\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: response[1].data.ValidationStatus\r\n                    }));\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function UpdateApprovedSample(inputData, Data1) {\r\n\r\n\r\n    return function (dispatch) {\r\n        if (inputData !== undefined && inputData.npreregno !== \"\") {\r\n\r\n            dispatch(initRequest(true));\r\n            return rsapi.post(\"release/appendRelease\",\r\n\r\n                inputData\r\n            )\r\n                .then(response => {\r\n                    if (response.data.rtn === \"Success\") {\r\n\r\n                        let masterData = {\r\n                            ...Data1, ...response.data,\r\n                        };\r\n                        sortData(masterData.ReleaseHistory, \"\", 'ncoaparentcode');\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData,\r\n                                change: inputData.change,\r\n                                loading: false,\r\n                                loadEsign: false,\r\n                                openModal: false,\r\n                                expandCheck: false\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                    else {\r\n                        toast.warn(response.data.rtn);\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                //  masterData,\r\n                                change: inputData.change,\r\n                                loading: false,\r\n                                loadEsign: false,\r\n                                openModal: false,\r\n                                expandCheck: false\r\n\r\n                            }\r\n                        });\r\n                    }\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                        // console.log(\"ErrorRelease,\", error);\r\n\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            toast.warn(intl.formatMessage({\r\n                id: \"IDS_SELECTANYONESAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getreportcomments(inputData, Data) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n\r\n        rsapi.post(\"release/getreportcomments\", inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...Data,\r\n                    ...response.data,\r\n                }\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        loading: false, change: inputData.change, masterData,\r\n                        screenName: \"IDS_REPORTINFOCOMMENT\",\r\n                        openModal: true, selectedRecord: {}, loadEsign: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function fetchReportInfoReleaseById(editParam) {\r\n    return function (dispatch) {\r\n        let additionalInfo = [];\r\n\r\n        let inputParamData = {\r\n            nreportinforeleasecode: editParam.editRow.nreportinforeleasecode,\r\n            userinfo: editParam.userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getActiveReportInfoReleaseById\", inputParamData)\r\n            .then(response => {\r\n\r\n                // const parameterResults = response.data.ReleaseParameter\r\n                let selectedId = editParam.editRow.nreportinforeleasecode;\r\n                const selectedComment = { ...response.data };\r\n                const masterData = {\r\n                    ...editParam.masterData,\r\n                    selectedComment\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n\r\n                    payload: {\r\n                        screenName: \"IDS_REPORTINFOCOMMENTS\",\r\n                        selectedId,\r\n                        masterData,\r\n                        //isParameterInitialRender: true,\r\n                        loading: false,\r\n                        openModal: true,\r\n                        // modalShow: true,\r\n                        ReportmodalShow: true,\r\n                        operation: \"update\",\r\n                        modalTitle: intl.formatMessage({ id: \"IDS_COMMENTS\" }),\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        //}\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nexport function UpdateReportComments(userInfo, Data1, inputData) {\r\n    let inputParamData = {\r\n        selectedComment: Data1.selectedComment,\r\n        userinfo: userInfo\r\n    }\r\n\r\n    return function (dispatch) {\r\n        //if (inputData !== undefined &&inputData.npreregno!==\"\") {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"release/updateReportComment\",\r\n\r\n            inputParamData\r\n        )\r\n            .then(response => {\r\n                let masterData = {\r\n\r\n                    ...Data1, ...response.data,\r\n                    selectedComment: {},\r\n                };\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        screenName: \"IDS_REPORTINFOCOMMENT\",\r\n                        loading: false,\r\n                        openModal: true,\r\n                        expandCheck: false,\r\n                        modalShow: false,\r\n                        ReportmodalShow: false,\r\n                        isComboCheck: true,\r\n\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    // console.log(\"ErrorRelease,\", error);\r\n\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        // }\r\n        // else {\r\n        //     toast.warn(intl.formatMessage({\r\n        //         id: \"IDS_SELECTANYONESAMPLE\"\r\n        //     }));\r\n        //}\r\n    }\r\n}\r\nexport function getResultCorrectionData(inputParam, ncontrolCode) {\r\n    return function (dispatch) {\r\n        let urlArray = [];\r\n        inputParam.inputData['isPopup'] = true\r\n        const resultCorrection = rsapi.post(\"release/getResultCorrection\", inputParam.inputData);\r\n        //  const reportType = rsapi.post(\"release/getCOAReportType\", { userinfo: inputParam.inputData.userinfo });\r\n        // const projectType = rsapi.post(\"release/getApprovedProjectType\", inputParam.inputData);\r\n        const statusService = rsapi.post(\"release/getStatusAlert\", inputParam.inputData);\r\n\r\n        urlArray = [resultCorrection, statusService\r\n            //,reportType\r\n        ];\r\n\r\n        dispatch(initRequest(true));\r\n        Axios.all(urlArray)\r\n\r\n            .then(response => {\r\n                if (response[1].data.Status === \"Success\") {\r\n\r\n                    let masterData = {};\r\n                    let selectedRecord = inputParam.inputData.selectedRecord;\r\n\r\n                    let responseData = { ...response[0].data }\r\n                    masterData = {\r\n                        ...inputParam.masterData, ...responseData\r\n                    }\r\n\r\n                    sortData(masterData);\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            // selectedRecord,\r\n                            isDeletePopup: true,\r\n                            isComboCheck: true,\r\n                            isEditPopup: false,\r\n                            loadEsign: false,\r\n                            ncontrolCode,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            openModal: true,\r\n                            isCorrectionNeed: true,\r\n                            isAddPopup: false,\r\n                            operation: \"delete\",\r\n                            ncontrolCode: inputParam.inputData.ncontrolCode,\r\n                            expandCheck: false,\r\n                            hideSave: true,\r\n                            screenName: inputParam.inputData.screenName,\r\n\r\n\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    toast.warn(intl.formatMessage({\r\n                        id: response[1].data.ValidationStatus\r\n                    }));\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            ncontrolCode: ncontrolCode,\r\n                            loading: false,\r\n                            expandCheck: false,\r\n                            loadEsign: false,\r\n                            openModal: false\r\n                        }\r\n                    });\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function fetchParameterById(editParam) {\r\n    return function (dispatch) {\r\n        let additionalInfo = [];\r\n\r\n        let inputParamData = {\r\n            ntransactionresultcode: editParam.primaryKeyValue,\r\n            userinfo: editParam.userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getReleaseResults\", inputParamData)\r\n            .then(response => {\r\n                let selectedResultGrade = [];\r\n                let paremterResultcode = [];\r\n                const parameterResults = response.data.ReleaseParameter\r\n                let predefDefaultFlag = false;\r\n                parameterResults.map((param, index) => {\r\n                    selectedResultGrade[index] = { ngradecode: param.ngradecode };\r\n                    paremterResultcode[index] = param.ntransactionresultcode;\r\n                    let jsondata = JSON.parse(param.jsondata['value'])\r\n                    if (jsondata.hasOwnProperty('additionalInfo')) {\r\n                        additionalInfo[param.ntransactionresultcode] = jsondata['additionalInfo']\r\n                    }\r\n                    predefDefaultFlag = false;\r\n                    (response.data.PredefinedValues && response.data.PredefinedValues[parameterResults[index].ntransactionresultcode]) &&\r\n                        response.data.PredefinedValues[parameterResults[index].ntransactionresultcode].map(predefinedvalue => {\r\n                            // if (predefinedvalue.ndefaultstatus === transactionStatus.YES) {\r\n                            //     if (!predefDefaultFlag) {\r\n                            //         predefDefaultFlag = true;\r\n                            //         response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] = constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] || [], 'sresultpredefinedname', 'sresultpredefinedname', undefined,\r\n                            //             undefined, undefined).get(\"OptionList\");\r\n                            //     }\r\n                            // response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] =\r\n                            //     constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] || [], 'spredefinedname', 'spredefinedname', undefined,\r\n                            //         undefined, undefined).get(\"OptionList\");\r\n                            //     if (response.data.ResultParameter[index].sresult === null) {\r\n                            //         response.data.ResultParameter[index].sresult = predefinedvalue.spredefinedname;\r\n                            //         response.data.ResultParameter[index].sresultpredefinedname = predefinedvalue.sresultpredefinedname;\r\n                            //         response.data.ResultParameter[index].sfinal = predefinedvalue.spredefinedsynonym;\r\n                            //         response.data.ResultParameter[index].editable = true;\r\n                            //         response.data.ResultParameter[index].ngradecode = predefinedvalue.ngradecode;\r\n                            //         if(predefinedvalue.spredefinedcomments&&predefinedvalue.spredefinedcomments!==null){\r\n                            //             response.data.ResultParameter[index].sresultcomment = predefinedvalue.spredefinedcomments\r\n                            //             &&predefinedvalue.spredefinedcomments;\r\n                            //         }\r\n                            //     }\r\n                            // }\r\n                            //  else {\r\n                            if (!predefDefaultFlag) {\r\n                                predefDefaultFlag = true;\r\n                                response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] = constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] || [], 'sresultpredefinedname', 'sresultpredefinedname', undefined,\r\n                                    undefined, undefined).get(\"OptionList\");\r\n                            }\r\n\r\n                            //   }\r\n                            //return null;\r\n\r\n                        });\r\n                    param['editable'] = false;\r\n                    //return null;\r\n                    // response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] =  constructOptionList(response.data.PredefinedValues[parameterResults[index].ntransactionresultcode] || [], 'spredefinedname', 'spredefinedname', undefined,\r\n                    // undefined, undefined).get(\"OptionList\");\r\n                });\r\n\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...editParam.masterData,\r\n                            //...sortData(response.data,\"desc\",\"ntransactiontestcode\"),\r\n                            ...response.data,\r\n                            paremterResultcode,//,\r\n                            selectedResultGrade,\r\n\r\n                        },\r\n                        selectedRecord: {\r\n                            additionalInfo: additionalInfo.length > 0 ? additionalInfo : [],\r\n                            selectedResultGrade: selectedResultGrade,\r\n                            ReleaseParameter: response.data.ReleaseParameter\r\n\r\n                        },\r\n                        parameterResults: response.data.ReleaseParameter,\r\n                        isParameterInitialRender: true,\r\n                        loading: false,\r\n                        // screenName: \"IDS_RESULTENTRY\",\r\n                        openModal: true,\r\n                        modalShow: true,\r\n                        operation: \"update\",\r\n                        modalTitle: intl.formatMessage({ id: \"IDS_CHANGERESULT\" }),\r\n                        selectedId: editParam.primaryKeyValue,\r\n                        //activeTestKey: \"IDS_RESULTS\",\r\n                        ncontrolcode: editParam.editResultId\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n        //}\r\n\r\n\r\n    }\r\n\r\n}\r\nexport function updateCorrectionStatus(inputData, Data, screenname) {\r\n\r\n\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"release/updateCorrectionStatus\",\r\n\r\n            inputData\r\n        )\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    let masterData = {\r\n\r\n                        ...Data, ...response.data,\r\n                    };\r\n                    sortData(masterData.ReleaseHistory, \"\", 'ncoaparentcode');\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            change: inputData.change,\r\n                            openModal: false,\r\n                            loading: false,\r\n                            loadEsign: false,\r\n                            screenName: screenname\r\n\r\n                        }\r\n                    });\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            // masterData,\r\n                            //  change: inputData.change,\r\n                            openModal: false,\r\n                            loading: false,\r\n                            loadEsign: false,\r\n\r\n                            //  screenName:screenname\r\n\r\n                        }\r\n                    });\r\n                    toast.warn(intl.formatMessage({ id: response.data }));\r\n\r\n                }\r\n\r\n                // }\r\n            })\r\n\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    //  console.log(\"ErrorRelease,\", error);\r\n\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n\r\n\r\n\r\n    }\r\n}\r\nexport function validateEsignforRelease(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    const methodUrl = \"release\";\r\n                    inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                    if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"]\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"]\r\n                    }\r\n                    //dispatch(inputParam[\"screenData\"][\"inputParam\"].performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                    dispatch(dispatchMethods(inputParam[\"screenData\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\nfunction dispatchMethods(screenData) {\r\n    return (dispatch) => {\r\n        let doAction = screenData.inputParam.inputData.doAction\r\n        switch (doAction) {\r\n            case \"appendsample\":\r\n                dispatch(UpdateApprovedSample(screenData.inputParam.inputData, screenData.masterData));\r\n                break;\r\n            case \"removesample\":\r\n                dispatch(getDeleteApprovedSample(screenData.inputParam.inputData, screenData.masterData, 'openModal'));\r\n                break;\r\n            case \"generate\":\r\n                dispatch(generateReleasedReport(screenData.inputParam.inputData, screenData.masterData));\r\n                break;\r\n            case \"download\":\r\n                dispatch(previewAndFinalReport(screenData.inputParam, screenData.masterData));\r\n                break;\r\n            case \"correction\":\r\n                dispatch(updateCorrectionStatus(screenData.inputParam.inputData, screenData.masterData, screenData.inputParam.inputData.screenName));\r\n                break;\r\n            case \"saveasdraft\":\r\n                dispatch(getApprovedRecordsAsDraft(screenData.inputParam.inputData, screenData.masterData));\r\n                break;\r\n            case \"editresult\":\r\n                dispatch(crudMaster(screenData.inputParam, screenData.masterData, \"modalShow\"))\r\n                break;\r\n            case \"preliminary\":\r\n                dispatch(preliminaryReport(screenData.inputParam, screenData.masterData))\r\n                break;\r\n            case \"editReleaseTestAttachment\":\r\n                dispatch(onSaveReleaseTestAttachment(screenData.inputParam))\r\n                break;\r\n            case \"deleteReleaseTestAttachment\":\r\n                dispatch(onDeleteReleaseTestAttachment(screenData.inputParam))\r\n                break;\r\n            case \"editReleaseTestComment\":\r\n                dispatch(onSaveReleaseTestComment(screenData.inputParam))\r\n                break;\r\n            case \"deleteReleaseTestComment\":\r\n                dispatch(onDeleteReleaseTestComment(screenData.inputParam))\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}\r\n\r\nexport function viewReportHistory(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/viewReportHistory\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = inputParam.masterData;\r\n                let PatientReports = response.data.PatientReports;\r\n                masterData = { ...masterData, PatientReports };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        isPatientReports: true,\r\n                        openModal: true,\r\n                        hideSave: true,\r\n                        isAddPopup: false,\r\n                        isEditPopup: false,\r\n                        isDeletePopup: false,\r\n                        masterData,\r\n                        loading: false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function viewReleaseTestAttachment(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        let methodUrl = \"\";\r\n        if(inputParam.inputData.actionName === \"IDS_RELEASETESTATTACHMENT\"){\r\n            methodUrl=\"getReleaseTestAttachment\";\r\n        } else {\r\n            methodUrl=\"getReleaseTestComment\";\r\n        }\r\n        rsapi.post(\"release/\"+methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = inputParam.masterData;\r\n                const ReleaseTestAttachmentDetails = response.data.ReleaseTestAttachmentDetails;\r\n                const ReleaseTestCommentDetails = response.data.ReleaseTestCommentDetails;\r\n                const isReleaseTestAttachment = inputParam.inputData.actionName === \"IDS_RELEASETESTATTACHMENT\";\r\n                const isReleaseTestComment = inputParam.inputData.actionName === \"IDS_RELEASETESTCOMMENT\";\r\n\r\n                const lstRegistrationArno = constructOptionList(response.data.RegistrationArno || [], \"npreregno\", \"sarno\", false, false, true);\r\n                const RegistrationArno = lstRegistrationArno.get(\"OptionList\");\r\n\r\n                const lstRegistrationSampleArno = constructOptionList(response.data.RegistrationSampleArno || [], \"ntransactionsamplecode\", \"ssamplearno\", false, false, true);\r\n                const RegistrationSampleArno = lstRegistrationSampleArno.get(\"OptionList\");\r\n\r\n                const lstRegistrationTest = constructOptionList(response.data.RegistrationTest || [], \"ntransactiontestcode\", \"stestsynonym\", false, false, true);\r\n                const RegistrationTest = lstRegistrationTest.get(\"OptionList\");\r\n\r\n                const lstCommentSubType = constructOptionList(response.data.CommentSubType || [], \"ncommentsubtypecode\", \"scommentsubtype\", false, false, true);\r\n                const CommentSubType = lstCommentSubType.get(\"OptionList\");\r\n\r\n                masterData = { ...masterData, ReleaseTestAttachmentDetails, ReleaseTestCommentDetails, RegistrationArno, RegistrationSampleArno, RegistrationTest, CommentSubType };\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        isReleaseTestAttachment,\r\n                        isReleaseTestComment,\r\n                        openModal: true,\r\n                        isAddPopup: false,\r\n                        isEditPopup: false,\r\n                        isDeletePopup: false,\r\n                        masterData,\r\n                        loading: false,\r\n                        isAddReleaseTestAttachment:false,\r\n                        isInitialRender : false\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n// export function writeJSONTemplate(inputParam){ \r\n//     return function (dispatch) {    \r\n\r\n//         return rsapi.post(\"release/writeJSONTemplate\",\r\n\r\n//         { [inputParam.primaryKeyName] :inputParam.selectedReleaseHistory.ncoaparentcode , \r\n//             \"userinfo\": inputParam.userInfo}\r\n//     )\r\n//         .then(response => {\r\n\r\n//                 dispatch({\r\n//                     type: DEFAULT_RETURN, payload: {\r\n//                         loading: false,\r\n//                         openModal: false,\r\n//                         expandCheck: false,\r\n\r\n\r\n//                     }\r\n//                 });\r\n//         })\r\n//         .catch(error => {\r\n//             dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n//             if (error.response.status === 500) {\r\n//                 toast.error(error.message);\r\n\r\n\r\n//             }\r\n//             else {\r\n//                 toast.warn(error.response.data);\r\n//             }\r\n//         })\r\n\r\n// }\r\n// }\r\n\r\nexport function releaseReportHistory(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"release/getPreliminaryReportHistory\", inputParam)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        },\r\n                        //hange: inputData.change,\r\n                        openModal: true,\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        screenName: inputParam.screenName\r\n                    }\r\n                });\r\n            }\r\n            )\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\nexport function versionHistory(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"release/getVersionHistory\", inputParam)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...response.data\r\n                        },\r\n                        //hange: inputData.change,\r\n                        openModal: true,\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModalTitle: \"IDS_VERSIONHISTORY\"\r\n                    }\r\n                });\r\n            }\r\n            )\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\n\r\nexport function downloadVersionReport(inputParam, Data, screenName) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/downloadVersionHistory\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...Data,\r\n                    ...response.data,\r\n                }\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.FilePath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n                    {\r\n                        loading: false, change: inputParam.change, masterData, screenName: screenName,\r\n                        modalShow: false, selectedRecord: {}, loadEsign: false, openModal: inputParam.inputData.openModal\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function downloadHistory(inputParam, Data, screenName) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/downloadHistory\", inputParam.inputData)\r\n            .then(response => {\r\n                let masterData = {\r\n                    ...Data,\r\n                    ...response.data,\r\n                }\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.FilePath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload:\r\n                    {\r\n                        loading: false, change: inputParam.change, masterData, screenName: screenName,\r\n                        modalShow: false, selectedRecord: {}, loadEsign: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data['rtn']);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getPatientFilterExecuteData(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        let obj = { ...inputParam.component, filterquery: inputParam.filterquery, userinfo: inputParam.userinfo }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/dynamicpreregdesign/getdynamicfilterexecutedata\", obj)\r\n            .then(response => {\r\n                const source = inputParam.component.source\r\n                const languageTypeCode = inputParam.userinfo.slanguagetypecode\r\n                const lstData = response.data[inputParam.component.label]\r\n                const multilingual = []\r\n                inputParam.component.filterfields.map(item => {\r\n                    if (item.ismultilingual) {\r\n                        multilingual.push(item.columnname)\r\n                    }\r\n                })\r\n                const optionList = lstData.map(item => {\r\n                    const jsondata = item[source] ? item[source].value ?\r\n                        JSON.parse(item[source].value) : item.jsondata : item.jsondata\r\n\r\n                    multilingual.map(mul => {\r\n                        jsondata[mul] =\r\n                            jsondata[mul][languageTypeCode] || jsondata[mul]['en-US'];\r\n                    })\r\n                    // let label = isMultiLingual ?\r\n                    //   jsondata[optionValue]\r\n                    //   [languageTypeCode] || jsondata[optionValue]['en-US']\r\n                    //   : jsondata[optionValue];\r\n\r\n                    return jsondata\r\n                });\r\n                if (inputParam.userinfo.nformcode === 161) {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: optionList,\r\n                            onExecute: false,\r\n                            loading: false,\r\n                            screenName:\"IDS_PATIENTSEARCH\"\r\n                        }\r\n                    })\r\n                }\r\n                else {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            lstPatient: optionList,\r\n                            // onExecute: false,\r\n                            loading: false,\r\n                            screenName:\"IDS_PATIENTSEARCH\"\r\n                        }\r\n                    })\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data.rtn);\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n\r\nexport function getPatientWiseSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"release/getPatientWiseSample\", inputParam)\r\n            .then(response => {\r\n                let openModal = true;\r\n                let screenName=\"IDS_ADDSAMPLE\";\r\n                let responseData = { ...response.data }\r\n            \r\n                let masterData = {} \r\n                let lstPatient=[]\r\n   masterData = {\r\n                        ...inputParam.masterData,\r\n                        ...responseData,\r\n                }\r\n               \r\n                    if (responseData && responseData.ReleaseSample.length !== 0) {\r\n                        \r\n                        let responseData = {  ...response.data }\r\n                        masterData = {\r\n                            ...inputParam.masterData, ...responseData\r\n                        }\r\n                    }\r\n                    else {\r\n                        let responseData = {  ...response.data }\r\n                        masterData = {\r\n                            ...inputParam.masterData, ...responseData\r\n                        }\r\n                        lstPatient=inputParam.Login.lstPatient\r\n                         //openModal = false;\r\n                          screenName=\"IDS_PATIENTSEARCH\";\r\n                        toast.warn(intl.formatMessage({ id: \"IDS_NOSAMPLESAREAVAILABLE\" }));\r\n                        }\r\n\r\n                \r\n\r\n            \r\n            sortData(masterData);\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    \r\n                  \r\n                    // awesomeTree:fieldList[0].awesomeTree,\r\n                     awesomeConfig:undefined,\r\n                     lstPatient:lstPatient,\r\n                    //lstPatient:[],\r\n                    kendoSkip: 0,\r\n                    kendoTake: 5,\r\n                    masterData,\r\n                    expandCheck: false,\r\n                    \r\n                    \r\n                    isDeletePopup: false,\r\n                    isComboCheck: false,\r\n                    isEditPopup: false,\r\n                    screenName:screenName,//\"IDS_ADDSAMPLE\",\r\n                    \r\n                    loading: false,\r\n                    showFilter: false,\r\n                    openModal: openModal,\r\n                    isAddPopup: true,\r\n                    operation:\"save\"\r\n                }\r\n            })\r\n        })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function onSaveReleaseTestAttachment(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n       rsapi.post(inputParam.inputData.classUrl +\"/\" + inputParam.inputData.operation + inputParam.inputData.methodUrl, inputParam.inputData.formData)\r\n            .then(response => {\r\n                let ReleaseTestAttachmentDetails = response.data.ReleaseTestAttachmentDetails;\r\n                let masterData = {...inputParam.inputData.masterData, ReleaseTestAttachmentDetails};\r\n                    let selectedRecord = {};\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            selectedRecord,\r\n                            isAddReleaseTestAttachment: false,\r\n                            isReleaseTestAttachment: true,\r\n                            loading: false,\r\n                            screenName: inputParam.inputData.screenName,\r\n                            masterData,\r\n                            isInitialRender: false,\r\n                            loadEsign: false,\r\n                            loadEsignStateHandle: false\r\n                        }\r\n                    })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if(error.response === undefined){\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function onDeleteReleaseTestAttachment(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.inputData.url, {\r\n            \"releasetestattachment\" : inputParam.inputData.releasetestattachment, \"userinfo\": inputParam.inputData.userinfo\r\n        })\r\n        .then(response => {\r\n            let ReleaseTestAttachmentDetails = response.data.ReleaseTestAttachmentDetails;\r\n            let selectedRecord = {\r\n                ...inputParam.inputData.selectedRecord, ...response.data\r\n            };\r\n            let masterData = inputParam.inputData.masterData;\r\n            masterData[\"ReleaseTestAttachmentDetails\"] = ReleaseTestAttachmentDetails;\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    selectedRecord,\r\n                    isReleaseTestAttachment: true,\r\n                    loading: false,\r\n                    screenName: inputParam.inputData.screenName,\r\n                    masterData,\r\n                    loadEsignStateHandle: false\r\n                }\r\n            })\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            if (error.response && error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else if(error.response === undefined){\r\n                toast.error(error.message);\r\n            } \r\n            else {\r\n                toast.warn(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function onSaveReleaseTestComment(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.inputData.classUrl +\"/\" + inputParam.inputData.operation + inputParam.inputData.methodUrl, inputParam.inputData.formData)\r\n        .then(response => {\r\n            let ReleaseTestCommentDetails = response.data.ReleaseTestCommentDetails;\r\n            let masterData = {...inputParam.inputData.masterData, ReleaseTestCommentDetails};\r\n            let selectedRecord = {};\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    selectedRecord,\r\n                    isAddReleaseTestComment: false,\r\n                    isReleaseTestComment: true,\r\n                    loading: false,\r\n                    screenName: inputParam.inputData.screenName,\r\n                    masterData,\r\n                    isInitialRender: false,\r\n                    loadEsignStateHandle: false\r\n                }\r\n            })\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            if (error.response && error.response.status === 500) {\r\n                toast.error(error.message);\r\n            } else if (error.response === undefined){\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.warn(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport function onDeleteReleaseTestComment(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.inputData.url, {\r\n            \"releasetestcomment\" : inputParam.inputData.releasetestcomment, \"userinfo\": inputParam.inputData.userinfo\r\n        })\r\n        .then(response => {\r\n            let ReleaseTestCommentDetails = response.data.ReleaseTestCommentDetails;\r\n            let selectedRecord = {\r\n                ...inputParam.inputData.selectedRecord, ...response.data\r\n            };\r\n            let masterData = inputParam.inputData.masterData;\r\n            masterData[\"ReleaseTestCommentDetails\"] = ReleaseTestCommentDetails;\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    selectedRecord,\r\n                    isReleaseTestComment: true,\r\n                    loading: false,\r\n                    screenName: inputParam.inputData.screenName,\r\n                    masterData,\r\n                    loadEsignStateHandle: false\r\n                }\r\n            })\r\n        })\r\n        .catch(error => {\r\n            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            if (error.response && error.response.status === 500) {\r\n                toast.error(error.message);\r\n            }\r\n            else if (error.response === undefined){\r\n                toast.error(error.message);\r\n            }\r\n            else {\r\n                toast.warn(error.response.data);\r\n            }\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}