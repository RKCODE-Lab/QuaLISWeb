{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\competencemanagement\\\\trainingcertificate\\\\TrainingandCertificate.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faUserLock, faClock } from '@fortawesome/free-solid-svg-icons'; //,faUserTimes, faTrash\n\nimport { connect } from 'react-redux';\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport { toast } from 'react-toastify';\nimport { callService, crudMaster, validateEsignCredential, updateStore, getTrainingCertificateDetail, getTrainingCertificateComboService, getTrainingParticipantsComboDataService, filterColumnData, reloadTrainingCertificate, rescheduleTrainingCertificate, getAddValidityExpiry } from '../../../actions';\nimport { ReactComponent as Reject } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/image/reject.svg\";\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\nimport { constructOptionList, getControlMap, showEsign, validateEmail, validatePhoneNumber, validateTwoDigitDate, convertDateValuetoString, formatInputDate } from '../../../components/CommonScript'; //searchData, sortData,\n\nimport ListMaster from '../../../components/list-master/list-master.component';\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\nimport AddTrainingCertificate from './AddTrainingCertificate';\nimport Esign from '../../../pages/audittrail/Esign';\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\nimport { ListWrapper } from '../../../components/client-group.styles';\nimport { transactionStatus } from '../../../components/Enumeration';\nimport DateFilter from '../../../components/DateFilter';\nimport { Affix } from 'rsuite';\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component'; // import ReactTooltip from 'react-tooltip';\n\nimport TrainingCertificateParticipantsTab from './TrainingCertificateParticipantsTab';\nimport AddValidityExpiry from './AddValidityExpiry';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass TrainingCertificate extends React.Component {\n  constructor(props) {\n    super(props); // const dataState = {\n    //     skip: 0,\n    //     take: 10,\n    // };\n\n    this.sidebarExpandCollapse = () => {\n      this.setState({\n        sidebarview: true\n      });\n    };\n\n    this.ConfirmDelete = (deleteParam, deleteID) => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.deleteRecord(deleteParam, deleteID));\n    };\n\n    this.deleteRecord = (deleteParam, nControlcode) => {\n      let objdate = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n      let fromDate = objdate.fromDate;\n      let toDate = objdate.toDate;\n      const postParam = {\n        inputListName: \"TrainingCertificate\",\n        selectedObject: \"SelectedTrainingCertificate\",\n        primaryKeyField: \"ntrainingcode\",\n        primaryKeyValue: this.props.Login.masterData.SelectedTrainingCertificate.ntrainingcode,\n        fetchUrl: \"trainingcertificate/getTrainingCertificate\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo,\n          \"fromDate\": fromDate,\n          \"toDate\": toDate\n        }\n      };\n      const inputParam = {\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"TrainingCertificate\",\n        displayName: this.props.Login.screenName,\n        inputData: {\n          [\"trainingcertificate\"]: this.props.Login.masterData.SelectedTrainingCertificate,\n          \"fromDate\": fromDate,\n          \"toDate\": toDate,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: deleteParam.operation,\n        dataState: this.state.dataState,\n        postParam\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, nControlcode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.Login.screenName && this.props.intl.formatMessage({\n              id: this.props.Login.screenName\n            }),\n            operation: deleteParam.operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.getTrainingCertificateComboService = controlId => {\n      if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CANCELLED && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.COMPLETED) {\n        let operation = controlId === this.state.controlMap.get(\"EditTrainingCertificate\").ncontrolcode ? \"update\" : \"reschedule\";\n\n        if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CONDUCTED) {\n          this.props.getTrainingCertificateComboService(\"IDS_TRAININGCERTIFICATE\", operation, \"ntrainingcode\", this.props.Login.masterData.SelectedTrainingCertificate.ntrainingcode, this.props.Login.masterData, this.props.Login.userInfo, controlId);\n        } else {\n          toast.warn(this.props.intl.formatMessage({\n            id: \"IDS_TESTTRAININGALREADYCONDUCTED\"\n          }));\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CANCELLED ? \"IDS_TESTTRAININGALREADYCANCELLED\" : \"IDS_TESTTRAININGALREADYCOMPLETED\"\n        }));\n      }\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      this.reloadData(true);\n    };\n\n    this.reloadData = isFilterSubmit => {\n      this.searchRef.current.value = \"\"; // let obj = this.convertDatetoString(selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\n      //     selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\n\n      let fromDate = this.props.Login.masterData.FromDate;\n      let toDate = this.props.Login.masterData.ToDate;\n\n      if (isFilterSubmit) {\n        let selectedRecord = this.state.selectedRecord || {};\n\n        if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\n          fromDate = selectedRecord[\"fromdate\"];\n        }\n\n        if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\n          toDate = selectedRecord[\"todate\"];\n        }\n      } //let obj = this.convertDatetoString(fromDate, toDate); \n\n\n      let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo,\n          fromDate: obj.fromDate,\n          toDate: obj.toDate,\n          currentDate: null //currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\n\n        },\n        classUrl: \"trainingcertificate\",\n        methodUrl: \"TrainingCertificate\",\n        displayName: \"IDS_TRAININGCERTIFICATE\",\n        userInfo: this.props.Login.userInfo\n      }; //this.props.callService(inputParam);\n\n      this.props.reloadTrainingCertificate(inputParam);\n    };\n\n    this.onConductlick = () => {\n      if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CANCELLED) {\n        const ncontrolCode = this.state.controlMap.has(\"ConductTrainingCertificate\") && this.state.controlMap.get(\"ConductTrainingCertificate\").ncontrolcode;\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\n\n        if (this.state.selectedRecord.nvalidityneed && this.state.selectedRecord.nvalidityneed === 3 && (this.state.selectedRecord.nvalidityexpiryvalue === undefined || this.state.selectedRecord.nvalidityexpiryvalue === 0)) {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTEXPIRYVALUE\"\n          }));\n          return;\n        }\n\n        if (this.state.selectedRecord.nvalidityneed && this.state.selectedRecord.nvalidityneed === 3 && (this.state.selectedRecord[\"nvalidityexpiryperiod\"] === undefined || this.state.selectedRecord[\"nvalidityexpiryperiod\"] === null || this.state.selectedRecord[\"nvalidityexpiryperiod\"].value === undefined)) {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_SELECTPERIOD\"\n          }));\n          return;\n        }\n\n        let postParam = undefined;\n        inputData[\"trainingcertificate\"] = {\n          \"ntrainingcode\": this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"] ? this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"].Value : \"\"\n        }; // inputData[\"trainingcertificate\"] = { \"ntrainingexpiryneed\": this.state.selectedRecord.nvalidityneed ? this.state.selectedRecord.nvalidityneed : \"4\",\n        // \"ntrainingexpiryvalue\": this.state.selectedRecord.nvalidityexpiryvalue ? this.state.selectedRecord.nvalidityexpiryvalue : \"0\",\n        // \"ntrainingexpiryperiod\": this.state.selectedRecord[\"nvalidityexpiryperiod\"] ? this.state.selectedRecord[\"nvalidityexpiryperiod\"].nperiodcode : \"4\" };\n\n        inputData[\"trainingcertificate\"] = this.props.Login.masterData.SelectedTrainingCertificate;\n        postParam = {\n          inputListName: \"TrainingCertificate\",\n          selectedObject: \"SelectedTrainingCertificate\",\n          primaryKeyField: \"ntrainingcode\"\n        };\n        inputData[\"trainingcertificate\"][\"ntrainingexpiryperiod\"] = this.state.selectedRecord[\"nvalidityexpiryperiod\"] ? this.state.selectedRecord[\"nvalidityexpiryperiod\"].value || transactionStatus.NA : transactionStatus.NA;\n        inputData[\"trainingcertificate\"][\"ntrainingexpiryneed\"] = this.state.selectedRecord.nvalidityneed ? this.state.selectedRecord.nvalidityneed : transactionStatus.NO;\n        inputData[\"trainingcertificate\"][\"ntrainingexpiryvalue\"] = this.state.selectedRecord.nvalidityexpiryvalue ? this.state.selectedRecord.nvalidityexpiryvalue : 0;\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n        let fromDate = obj.fromDate;\n        let toDate = obj.toDate;\n        inputData[\"fromDate\"] = fromDate;\n        inputData[\"toDate\"] = toDate;\n        const inputParam = {\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo,\n            fromDate,\n            toDate\n          },\n          classUrl: 'trainingcertificate',\n          methodUrl: \"TrainingCertificate\",\n          inputData: inputData,\n          operation: \"conduct\",\n          postParam\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: \"conduct\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_TRAININGCANCELED\"\n        }));\n      }\n    };\n\n    this.onCancelListClick = () => {\n      if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CONDUCTED && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.COMPLETED) {\n        //if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.DRAFT) {\n        const ncontrolCode = this.state.controlMap.has(\"CancelTrainingCertificate\") && this.state.controlMap.get(\"CancelTrainingCertificate\").ncontrolcode;\n        let inputData = [];\n        inputData[\"userinfo\"] = this.props.Login.userInfo; //add               \n\n        let postParam = undefined;\n        inputData[\"trainingcertificate\"] = {\n          \"ntrainingcode\": this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"] ? this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"].Value : \"\"\n        };\n        inputData[\"trainingcertificate\"] = this.props.Login.masterData.SelectedTrainingCertificate;\n        postParam = {\n          inputListName: \"TrainingCertificate\",\n          selectedObject: \"SelectedTrainingCertificate\",\n          primaryKeyField: \"ntrainingcode\"\n        };\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n        let fromDate = obj.fromDate;\n        let toDate = obj.toDate;\n        inputData[\"fromDate\"] = fromDate;\n        inputData[\"toDate\"] = toDate;\n        const inputParam = {\n          inputData: {\n            \"userinfo\": this.props.Login.userInfo,\n            fromDate,\n            toDate\n          },\n          classUrl: 'trainingcertificate',\n          methodUrl: \"TrainingCertificate\",\n          inputData: inputData,\n          operation: \"cancel\",\n          postParam\n        };\n        let saveType;\n        const masterData = this.props.Login.masterData;\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              saveType,\n              openModal: true,\n              operation: \"cancel\"\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CONDUCTED ? \"IDS_TESTTRAININGALREADYCONDUCTED\" : \"IDS_TESTTRAININGALREADYCOMPLETED\"\n        }));\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"conduct\" || this.props.Login.operation === \"blackList\" || this.props.Login.operation === \"cancel\" || this.props.Login.operation === \"invite\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = comboData;\n      ;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, optional, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (name === \"nvalidityexpiryvalue\") {\n        selectedRecord[name] = event;\n      } else {\n        if (event.target.type === 'checkbox') {\n          selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateName, dateValue) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let inputData = [];\n      inputData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n      let fromDate = obj.fromDate;\n      let toDate = obj.toDate;\n      inputData[\"fromDate\"] = fromDate;\n      inputData[\"toDate\"] = toDate;\n      let postParam = undefined;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        postParam = {\n          inputListName: \"TrainingCertificate\",\n          selectedObject: \"SelectedTrainingCertificate\",\n          primaryKeyField: \"ntrainingcode\"\n        };\n        inputData[\"trainingcertificate\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\n        this.trainingcertificateFieldList.map(item => {\n          return inputData[\"trainingcertificate\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n        });\n        inputData[\"trainingcertificate\"][\"ntransactionstatus\"] = this.state.selectedRecord.ntransactionstatus;\n      } else if (this.props.Login.operation === \"reschedule\") {\n        //reschedule\n        postParam = {\n          inputListName: \"TrainingCertificate\",\n          selectedObject: \"SelectedTrainingCertificate\",\n          primaryKeyField: \"ntrainingcode\"\n        };\n        inputData[\"trainingcertificate\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\n        this.trainingcertificateFieldList.map(item => {\n          return inputData[\"trainingcertificate\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\n        });\n        inputData[\"trainingcertificate\"][\"ntransactionstatus\"] = transactionStatus.RESCHEDULED;\n      } else {\n        //add               \n        inputData[\"trainingcertificate\"] = {\n          \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n        };\n        this.trainingcertificateFieldList.map(item => {\n          return inputData[\"trainingcertificate\"][item] = this.state.selectedRecord[item];\n        });\n        inputData[\"trainingcertificate\"][\"ntransactionstatus\"] = transactionStatus.SCHEDULED;\n      }\n\n      if (this.state.selectedRecord[\"dtrainingdatetime\"]) {\n        inputData[\"trainingcertificate\"][\"dtrainingdatetime\"] = formatInputDate(this.state.selectedRecord[\"dtrainingdatetime\"], false);\n      }\n\n      inputData[\"trainingcertificate\"][\"ntrainingcategorycode\"] = this.state.selectedRecord[\"ntrainingcategorycode\"] ? this.state.selectedRecord[\"ntrainingcategorycode\"].value : \"-1\";\n      inputData[\"trainingcertificate\"][\"ntechniquecode\"] = this.state.selectedRecord[\"ntechniquecode\"] ? this.state.selectedRecord[\"ntechniquecode\"].value : \"-1\";\n      inputData[\"trainingcertificate\"][\"ntztrainingdate\"] = this.state.selectedRecord[\"ntztrainingdate\"] ? this.state.selectedRecord[\"ntztrainingdate\"].value : \"-1\";\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo,\n          fromDate,\n          toDate\n        },\n        classUrl: \"trainingcertificate\",\n        //this.props.Login.inputParam.classUrl,\n        methodUrl: \"TrainingCertificate\",\n        inputData: inputData,\n        operation: this.props.Login.operation,\n        saveType,\n        formRef,\n        postParam,\n        searchRef: this.searchRef\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            saveType\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.state = {\n      isOpen: false,\n      trainingcertificateData: [],\n      TrainingParticipantsData: [],\n      trainingcategoryList: [],\n      techniqueList: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      operation: \"\",\n      sidebarview: false,\n      screenName: undefined,\n      userLogged: true,\n      selectedTrainingCertificate: undefined,\n      trainingparticipants: [],\n      selectedTrainingParticipants: [],\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      showAccordian: true,\n      TrainingParticipantscombo: [],\n      trainingparticipantsList: []\n    };\n    this.searchRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.trainingcertificateFieldList = ['strainername', 'strainingtopic', 'strainingvenue', 'dtrainingdatetime', 'ntransactionstatus', 'ntechniquecode', 'ntrainingcategorycode', 'stztrainingdate', 'scomments']; //'nmahcode',\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  render() {\n    //console.log('screen name:',this.props.Login.screenName,'operation ;',this.props.Login.operation)\n    //console.log('selected r :', this.props.Login.inputParam)\n    let userStatusCSS = \"outline-secondary\";\n\n    if (this.props.Login.masterData.SelectedTrainingCertificate ? this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.COMPLETED || this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CONDUCTED : false) {\n      userStatusCSS = \"outline-success\";\n    } else if (this.props.Login.masterData.SelectedTrainingCertificate && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CANCELLED) {\n      userStatusCSS = \"outline-danger\";\n    }\n\n    const addId = this.state.controlMap.has(\"AddTrainingCertificate\") && this.state.controlMap.get(\"AddTrainingCertificate\").ncontrolcode;\n    const resheduleId = this.state.controlMap.has(\"ResheduleTrainingCertificate\") && this.state.controlMap.get(\"ResheduleTrainingCertificate\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditTrainingCertificate\") && this.state.controlMap.get(\"EditTrainingCertificate\").ncontrolcode;\n    const conductId = this.state.controlMap.has(\"ConductTrainingCertificate\") && this.state.controlMap.get(\"ConductTrainingCertificate\").ncontrolcode;\n    const cancelId = this.state.controlMap.has(\"CancelTrainingCertificate\") && this.state.controlMap.get(\"CancelTrainingCertificate\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteTrainingCertificate\") && this.state.controlMap.get(\"DeleteTrainingCertificate\").ncontrolcode;\n    const deleteParam = {\n      operation: \"delete\"\n    };\n    let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || this.props.Login.masterData && this.props.Login.masterData.FromDate, this.state.selectedRecord[\"todate\"] || this.props.Login.masterData && this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n    let fromDate = obj.fromDate;\n    let toDate = obj.toDate;\n    const filterParam = {\n      inputListName: \"TrainingCertificate\",\n      selectedObject: \"SelectedTrainingCertificate\",\n      primaryKeyField: \"ntrainingcode\",\n      fetchUrl: \"trainingcertificate/getTrainingCertificate\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        fromDate,\n        toDate\n      },\n      masterData: this.props.Login.masterData,\n      unchangeList: [\"FromDate\", \"ToDate\"],\n      searchFieldList: this.trainingcertificateFieldList\n    };\n    this.validationColumnList = [{\n      \"idsName\": \"IDS_TRAININGCATERGORY\",\n      \"dataField\": \"ntrainingcategorycode\",\n      \"width\": \"200px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_TECHNIQUE\",\n      \"dataField\": \"ntechniquecode\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_TRAININGTPOIC\",\n      \"dataField\": \"strainingtopic\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_TRAININGDATETIME\",\n      \"dataField\": \"dtrainingdatetime\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_TIMEZONE\",\n      \"dataField\": \"ntztrainingdate\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_SELECT\",\n      \"controlType\": \"selectbox\"\n    }, {\n      \"idsName\": \"IDS_TRAINERNAME\",\n      \"dataField\": \"strainername\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_TRAININGVENUE\",\n      \"dataField\": \"strainingvenue\",\n      \"width\": \"150px\",\n      \"mandatory\": true,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }, {\n      \"idsName\": \"IDS_COMMENTS\",\n      \"dataField\": \"scomments\",\n      \"width\": \"150px\",\n      \"mandatory\": false,\n      \"mandatoryLabel\": \"IDS_ENTER\",\n      \"controlType\": \"textbox\"\n    }];\n    const mandatoryFields = [];\n    this.validationColumnList.forEach(item => item.mandatory === true ? mandatoryFields.push(item) : \"\");\n    let breadCrumbDataDate = convertDateValuetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate, this.props.Login.masterData && this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n    const breadCrumbData = [{\n      \"label\": \"IDS_FROM\",\n      \"value\": breadCrumbDataDate.breadCrumbFrom\n    }, {\n      \"label\": \"IDS_TO\",\n      \"value\": breadCrumbDataDate.breadCrumbto\n    }];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '4' : \"2\"}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: \"IDS_TRAININGCERTIFICATE\",\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.TrainingCertificate,\n      getMasterDetail: trainingcertificate => this.props.getTrainingCertificateDetail(trainingcertificate, fromDate, toDate, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.SelectedTrainingCertificate,\n      primaryKeyField: \"ntrainingcode\",\n      mainField: \"strainingtopic\",\n      firstField: \"strainingcategoryname\",\n      secondField: \"sdisplaystatus\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: false,\n      openModal: () => this.props.getTrainingCertificateComboService(\"IDS_TRAININGCERTIFICATE\", \"create\", \"ntrainingcode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId),\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      filterComponent: [{\n        \"IDS_FILTER\": /*#__PURE__*/React.createElement(DateFilter, {\n          selectedRecord: this.state.selectedRecord || {},\n          handleDateChange: this.handleDateChange,\n          fromDate: fromDate,\n          toDate: toDate,\n          userInfo: this.props.Login.userInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 45\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: `${!this.props.sidebarview ? '8' : \"10\"}`,\n      className: \"position-relative\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"sidebar-view-btn \",\n      onClick: this.props.parentFunction,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    }, !this.props.sidebarview ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-less-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 41\n      }\n    }) : /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fa fa-greater-than\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 33\n      }\n    }, this.props.Login.masterData.TrainingCertificate && this.props.Login.masterData.TrainingCertificate.length > 0 && this.props.Login.masterData.SelectedTrainingCertificate ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 53\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.strainingtopic)), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      className: \"text-muted font-weight-normal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 10,\n      className: \"d-flex no-padding\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: `btn btn-outlined ${userStatusCSS} btn-sm ml-3`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.ACTIVE ? /*#__PURE__*/React.createElement(\"i\", {\n      class: \"fas fa-check \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 235\n      }\n    }) : \"\", /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: this.props.Login.masterData.SelectedTrainingCertificate.sdisplaystatus || \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 69\n      }\n    })))), /*#__PURE__*/React.createElement(Col, {\n      md: 2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category float-right icon-group-wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.getTrainingCertificateComboService(editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      name: \"deletemethodname\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteParam, deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 61\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(resheduleId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_RESCHEDULE\"\n      }) // data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.getTrainingCertificateComboService(resheduleId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faClock,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_RESCHEDULE\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(conductId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_CONDUCT\"\n      }) // data-for=\"tooltip_list_wrap\"\n      //onClick={() => this.onConductlick()}\n      ,\n      onClick: () => this.props.getAddValidityExpiry(\"IDS_TRAININGEXPIRY\", \"create\", this.props.Login.masterData, this.props.Login.userInfo, conductId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faThumbsUp,\n      title: this.props.intl.formatMessage({\n        id: \"IDS_CONDUCT\"\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      className: \"btn btn-circle outline-grey mr-2\",\n      hidden: this.state.userRoleControlRights.indexOf(cancelId) === -1,\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_TRAININGSCHEDULECANCEL\"\n      }) //   data-for=\"tooltip_list_wrap\"\n      ,\n      onClick: () => this.onCancelListClick(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(Reject, {\n      className: \"custom_icons\",\n      width: \"20\",\n      height: \"20\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 69\n      }\n    }))))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGCATEGORY\",\n      message: \"Training Category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.strainingcategoryname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TECHNIQUE\",\n      message: \"Technique\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.stechniquename))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 343,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGTOPIC\",\n      message: \"Training Topic\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.strainingtopic))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGDATETIME\",\n      message: \"Training Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.strainingdatetime))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGNAME\",\n      message: \"Training Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360,\n        columnNumber: 61\n      }\n    }, \" \", this.props.Login.masterData.SelectedTrainingCertificate.strainername))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGVENUE\",\n      message: \"Venue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 61\n      }\n    }, \" \", this.props.Login.masterData.SelectedTrainingCertificate.strainingvenue))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGCOMMENTS\",\n      message: \"Comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.scomments))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGEXPIRYNEED\",\n      message: \"Training Expiry Need\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.strainingexpiryneed))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGEXPIRYVALUE\",\n      message: \"Training Expiry Value\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.ntrainingexpiryvalue))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 394,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGEXPIRYPERIOD\",\n      message: \"Training Expiry Period\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.speriodname))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 400,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_TRAININGEXPIRYDATE\",\n      message: \"Training Expiry Date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 72\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 61\n      }\n    }, this.props.Login.masterData.SelectedTrainingCertificate.strainingexpirydate && this.props.Login.masterData.SelectedTrainingCertificate.strainingexpirydate.length > 1 ? this.props.Login.masterData.SelectedTrainingCertificate.strainingexpirydate.substring(0, 10) : \"-\")))), /*#__PURE__*/React.createElement(TrainingCertificateParticipantsTab, {\n      formatMessage: this.props.intl.formatMessage,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam || [],\n      screenName: this.props.Login.screenName,\n      userInfo: this.props.Login.userInfo,\n      masterData: this.props.Login.masterData,\n      crudMaster: this.props.crudMaster,\n      errorCode: this.props.Login.errorCode,\n      masterStatus: this.props.Login.masterStatus,\n      openChildModal: this.props.Login.openChildModal,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.props.Login.selectedRecord,\n      getTrainingParticipantsComboDataService: this.props.getTrainingParticipantsComboDataService,\n      ncontrolCode: this.props.Login.ncontrolCode,\n      userRoleControlRights: this.state.userRoleControlRights,\n      esignRights: this.props.Login.userRoleControlRights,\n      screenData: this.props.Login.screenData,\n      validateEsignCredential: this.props.validateEsignCredential,\n      loadEsign: this.props.Login.loadEsign,\n      controlMap: this.state.controlMap,\n      showAccordian: this.state.showAccordian,\n      dataState: this.props.Login.dataState,\n      selectedId: this.props.Login.selectedId,\n      settings: this.props.Login.settings,\n      nFlag: this.props.Login.nFlag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 49\n      }\n    }))) : \"\"))))), this.props.Login.openModal && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal // operation={this.props.Login.operation === \"update\" ? this.props.intl.formatMessage({ id:\"IDS_RESCHEDULE\"}) : this.props.Login.operation}\n      ,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam || [],\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.screenName === \"IDS_TRAININGEXPIRY\" ? this.onConductlick : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.screenName === \"IDS_TRAININGEXPIRY\" ? [] : mandatoryFields,\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        formatMessage: this.props.intl.formatMessage,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"IDS_TRAININGEXPIRY\" ? /*#__PURE__*/React.createElement(AddValidityExpiry, {\n        selectedRecord: this.state.selectedRecord || {},\n        onComboChange: this.onComboChange,\n        onInputOnChange: this.onInputOnChange,\n        period: this.props.Login.period || [],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 29\n        }\n      }) : /*#__PURE__*/React.createElement(AddTrainingCertificate, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        handleDateChange: this.handleDateChange,\n        formatMessage: this.props.intl.formatMessage,\n        trainingcategoryList: this.props.Login.trainingcategoryList || [],\n        techniqueList: this.props.Login.techniqueList || [],\n        timeZoneList: this.props.Login.timeZoneList || [],\n        currentTime: this.props.Login.currentTime || [],\n        selectedTrainingCertificate: this.props.Login.masterData.SelectedTrainingCertificate || {},\n        operation: this.props.Login.operation,\n        userLogged: this.props.Login.userLogged,\n        inputParam: this.props.Login.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 479,\n          columnNumber: 29\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n\n    if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n      const userRoleControlRights = [];\n\n      if (this.props.Login.userRoleControlRights) {\n        this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n      }\n\n      const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n      this.setState({\n        userRoleControlRights,\n        controlMap\n      });\n    }\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\n      let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\n      breadCrumbData.push({\n        \"label\": \"IDS_FROM\",\n        \"value\": obj.breadCrumbFrom\n      }, {\n        \"label\": \"IDS_TO\",\n        \"value\": obj.breadCrumbto\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n  componentWillUnmount() {\n    const updateInfo = {\n      typeName: DEFAULT_RETURN,\n      data: {\n        masterData: [],\n        inputParam: undefined,\n        operation: null,\n        modalName: undefined\n      }\n    };\n    this.props.updateStore(updateInfo);\n  } // reloadData = () => {\n  //     const startDate = this.state.selectedRecord[\"fromdate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.fromDate));\n  //     const endDate = this.state.selectedRecord[\"todate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.toDate));\n  //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth()+1)); \n  //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth()+1));\n  //     const prevDay = validateTwoDigitDate(String(startDate.getDate())); \n  //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n  //     const fromDate = startDate.getFullYear()+'-'+prevMonth+'-'+prevDay +\" 00:00:00\";\n  //     const toDate = endDate.getFullYear()+'-'+currentMonth+'-'+currentDay + \" 23:59:00\" ;                    \n  //     const inputParam = {\n  //         inputData : {\"userinfo\":this.props.Login.userInfo,\n  //                         fromDate, toDate,\n  //                     },                        \n  //                     classUrl: this.props.Login.inputParam.classUrl,\n  //                     methodUrl: this.props.Login.inputParam.methodUrl,\n  //                     displayName:this.props.Login.inputParam.displayName,\n  //                     userInfo: this.props.Login.userInfo\n  //                 };     \n  //     this.props.callService(inputParam);\n  //     // this.searchRef.current.value = \"\";\n  //     // const inputParam = {\n  //     //     inputData: { \"userinfo\": this.props.Login.userInfo },\n  //     //     classUrl: \"trainingcertificate\",\n  //     //     methodUrl: \"TrainingCertificate\",\n  //     //     displayName: \"IDS_TRAININGcertificate\",\n  //     //     userInfo: this.props.Login.userInfo\n  //     // };\n  //     // this.props.callService(inputParam);\n  // }\n\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getTrainingCertificateDetail,\n  getTrainingCertificateComboService,\n  getTrainingParticipantsComboDataService,\n  filterColumnData,\n  reloadTrainingCertificate,\n  rescheduleTrainingCertificate,\n  getAddValidityExpiry\n})(injectIntl(TrainingCertificate));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/competencemanagement/trainingcertificate/TrainingandCertificate.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","faUserLock","faClock","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","validateEsignCredential","updateStore","getTrainingCertificateDetail","getTrainingCertificateComboService","getTrainingParticipantsComboDataService","filterColumnData","reloadTrainingCertificate","rescheduleTrainingCertificate","getAddValidityExpiry","ReadOnlyText","ContentPanel","constructOptionList","getControlMap","showEsign","validateEmail","validatePhoneNumber","validateTwoDigitDate","convertDateValuetoString","formatInputDate","ListMaster","SlideOutModal","AddTrainingCertificate","Esign","DEFAULT_RETURN","BreadcrumbComponent","ListWrapper","transactionStatus","DateFilter","Affix","ConfirmMessage","TrainingCertificateParticipantsTab","AddValidityExpiry","mapStateToProps","state","Login","TrainingCertificate","Component","constructor","props","sidebarExpandCollapse","setState","sidebarview","ConfirmDelete","deleteParam","deleteID","confirmMessage","confirm","intl","formatMessage","id","deleteRecord","nControlcode","objdate","masterData","FromDate","ToDate","userInfo","fromDate","toDate","postParam","inputListName","selectedObject","primaryKeyField","primaryKeyValue","SelectedTrainingCertificate","ntrainingcode","fetchUrl","fecthInputObject","userinfo","inputParam","classUrl","methodUrl","displayName","screenName","inputData","operation","dataState","userRoleControlRights","nformcode","updateInfo","typeName","data","loadEsign","screenData","openModal","controlId","ntransactionstatus","CANCELLED","COMPLETED","controlMap","get","ncontrolcode","CONDUCTED","warn","openFilter","showFilter","closeFilter","onFilterSubmit","reloadData","isFilterSubmit","searchRef","current","value","selectedRecord","undefined","obj","currentDate","onConductlick","ncontrolCode","has","nvalidityneed","nvalidityexpiryvalue","info","Value","NA","NO","saveType","esignNeeded","onCancelListClick","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","closeModal","selectedId","onComboChange","comboData","fieldName","onInputOnChange","event","optional","name","target","type","checked","YES","handleDateChange","dateName","dateValue","onSaveClick","formRef","JSON","parse","stringify","trainingcertificateFieldList","map","item","RESCHEDULED","nmastersitecode","SCHEDULED","onTabChange","tabProps","isOpen","trainingcertificateData","TrainingParticipantsData","trainingcategoryList","techniqueList","masterStatus","error","userLogged","selectedTrainingCertificate","trainingparticipants","selectedTrainingParticipants","Map","showAccordian","TrainingParticipantscombo","trainingparticipantsList","createRef","getDerivedStateFromProps","render","userStatusCSS","addId","resheduleId","editId","conductId","cancelId","deleteId","filterParam","unchangeList","searchFieldList","validationColumnList","mandatoryFields","forEach","mandatory","push","breadCrumbDataDate","breadCrumbData","breadCrumbFrom","breadCrumbto","length","searchedData","trainingcertificate","parentFunction","strainingtopic","ACTIVE","sdisplaystatus","indexOf","strainingcategoryname","stechniquename","strainingdatetime","strainername","strainingvenue","scomments","strainingexpiryneed","ntrainingexpiryvalue","speriodname","strainingexpirydate","substring","errorCode","openChildModal","settings","nFlag","period","timeZoneList","currentTime","componentDidUpdate","previousProps","Object","values","generateBreadCrumData","componentWillUnmount","modalName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faUserLock, faClock } from '@fortawesome/free-solid-svg-icons';//,faUserTimes, faTrash\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getTrainingCertificateDetail,\r\n    getTrainingCertificateComboService, getTrainingParticipantsComboDataService, filterColumnData, reloadTrainingCertificate,rescheduleTrainingCertificate,getAddValidityExpiry\r\n} from '../../../actions';\r\nimport { ReactComponent as Reject } from '../../../assets/image/reject.svg'\r\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\r\nimport { constructOptionList, getControlMap, showEsign, validateEmail, validatePhoneNumber, validateTwoDigitDate, convertDateValuetoString, formatInputDate } from '../../../components/CommonScript';//searchData, sortData,\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport AddTrainingCertificate from './AddTrainingCertificate';\r\n\r\nimport Esign from '../../../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\r\nimport { ListWrapper } from '../../../components/client-group.styles';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport DateFilter from '../../../components/DateFilter';\r\nimport { Affix } from 'rsuite';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport TrainingCertificateParticipantsTab from './TrainingCertificateParticipantsTab';\r\nimport AddValidityExpiry from './AddValidityExpiry';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass TrainingCertificate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // const dataState = {\r\n        //     skip: 0,\r\n        //     take: 10,\r\n        // };\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            trainingcertificateData: [], TrainingParticipantsData: [],\r\n            trainingcategoryList: [], techniqueList: [],\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n            sidebarview: false,\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            selectedTrainingCertificate: undefined,\r\n            trainingparticipants: [], selectedTrainingParticipants: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            TrainingParticipantscombo: [], trainingparticipantsList: []\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.trainingcertificateFieldList = ['strainername', 'strainingtopic', 'strainingvenue',\r\n            'dtrainingdatetime', 'ntransactionstatus', 'ntechniquecode', 'ntrainingcategorycode', 'stztrainingdate', 'scomments'];//'nmahcode',\r\n    }\r\n    sidebarExpandCollapse = () => {\r\n        this.setState({\r\n            sidebarview: true\r\n        })          \r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n                        //console.log('screen name:',this.props.Login.screenName,'operation ;',this.props.Login.operation)\r\n                        //console.log('selected r :', this.props.Login.inputParam)\r\n        let userStatusCSS = \"outline-secondary\";\r\n        if (this.props.Login.masterData.SelectedTrainingCertificate ? this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.COMPLETED\r\n            || this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CONDUCTED : false) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.SelectedTrainingCertificate && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CANCELLED) {\r\n            userStatusCSS = \"outline-danger\";\r\n        }\r\n\r\n        const addId = this.state.controlMap.has(\"AddTrainingCertificate\") && this.state.controlMap.get(\"AddTrainingCertificate\").ncontrolcode;\r\n        const resheduleId = this.state.controlMap.has(\"ResheduleTrainingCertificate\") && this.state.controlMap.get(\"ResheduleTrainingCertificate\").ncontrolcode;\r\n        const editId = this.state.controlMap.has(\"EditTrainingCertificate\") && this.state.controlMap.get(\"EditTrainingCertificate\").ncontrolcode;\r\n        const conductId = this.state.controlMap.has(\"ConductTrainingCertificate\") && this.state.controlMap.get(\"ConductTrainingCertificate\").ncontrolcode\r\n        const cancelId = this.state.controlMap.has(\"CancelTrainingCertificate\") && this.state.controlMap.get(\"CancelTrainingCertificate\").ncontrolcode\r\n\r\n        const deleteId = this.state.controlMap.has(\"DeleteTrainingCertificate\") && this.state.controlMap.get(\"DeleteTrainingCertificate\").ncontrolcode;\r\n        const deleteParam = { operation: \"delete\" };\r\n        let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n            this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate),\r\n            this.props.Login.userInfo)\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        const filterParam = {\r\n            inputListName: \"TrainingCertificate\",\r\n            selectedObject: \"SelectedTrainingCertificate\",\r\n            primaryKeyField: \"ntrainingcode\",\r\n            fetchUrl: \"trainingcertificate/getTrainingCertificate\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo, fromDate, toDate },\r\n            masterData: this.props.Login.masterData,\r\n            unchangeList: [\"FromDate\", \"ToDate\"],\r\n            searchFieldList: this.trainingcertificateFieldList\r\n\r\n\r\n        };\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_TRAININGCATERGORY\", \"dataField\": \"ntrainingcategorycode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_TRAININGTPOIC\", \"dataField\": \"strainingtopic\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_TRAININGDATETIME\", \"dataField\": \"dtrainingdatetime\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntztrainingdate\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_TRAINERNAME\", \"dataField\": \"strainername\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_TRAININGVENUE\", \"dataField\": \"strainingvenue\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"150px\",\"mandatory\": false, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n\r\n        ]\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        let breadCrumbDataDate = convertDateValuetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate,\r\n            this.props.Login.masterData && this.props.Login.masterData.ToDate,\r\n            this.props.Login.userInfo)\r\n\r\n        const breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": breadCrumbDataDate.breadCrumbFrom\r\n            },\r\n            {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": breadCrumbDataDate.breadCrumbto\r\n            }\r\n        ];\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    {/* Start of get display*/}\r\n                    {/* <div className=\"client-listing-wrap mtop-4\"> */}\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                    <Row noGutters={true}>\r\n                        <Col md={`${!this.props.sidebarview ? '4' : \"2\"}`}> \r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"IDS_TRAININGCERTIFICATE\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.TrainingCertificate}\r\n                                getMasterDetail={(trainingcertificate) => this.props.getTrainingCertificateDetail(trainingcertificate, fromDate, toDate, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedTrainingCertificate}\r\n                                primaryKeyField=\"ntrainingcode\"\r\n                                mainField=\"strainingtopic\"\r\n                                firstField=\"strainingcategoryname\"\r\n                                secondField=\"sdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={false}\r\n                                openModal={() => this.props.getTrainingCertificateComboService(\"IDS_TRAININGCERTIFICATE\", \"create\", \"ntrainingcode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":\r\n                                            <DateFilter\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                handleDateChange={this.handleDateChange}\r\n                                                fromDate={fromDate}\r\n                                                toDate={toDate}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n\r\n                        {/* <Row>\r\n                        <Col md={3}>\r\n                                <DateTimePicker\r\n                                        name={\"fromdate\"} \r\n                                        label={ this.props.intl.formatMessage({ id:\"IDS_FROM\"})}                     \r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"fromdate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.fromDate))}\r\n                                        dateFormat={\"dd/MM/yyyy\"}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"fromdate\", date)}\r\n                                        value={this.state.selectedRecord[\"fromdate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.fromDate))}\r\n                                                                        \r\n                                />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                                <DateTimePicker\r\n                                        name={\"todate\"} \r\n                                        label={ this.props.intl.formatMessage({ id:\"IDS_TO\"})}                     \r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"todate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.toDate))}\r\n                                        dateFormat={\"dd/MM/yyyy\"}\r\n                                        isClearable={false}                                        \r\n                                        onChange={date => this.handleDateChange(\"todate\", date)}\r\n                                        value={this.state.selectedRecord[\"todate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.toDate))}\r\n                                                                        \r\n                                />\r\n                        </Col>\r\n                        <Col></Col>\r\n                   </Row> */}\r\n                        <Col md={`${!this.props.sidebarview ? '8' : \"10\"}`} className=\"position-relative\">\r\n                            <div className=\"sidebar-view-btn-block\">\r\n                                <div className=\"sidebar-view-btn \" onClick={this.props.parentFunction}>\r\n                                    {!this.props.sidebarview ?                    \r\n                                        <i class=\"fa fa-less-than\"></i> :\r\n                                        <i class=\"fa fa-greater-than\"></i> \r\n                                    }\r\n                                </div>\r\n                            </div> \r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.TrainingCertificate && this.props.Login.masterData.TrainingCertificate.length > 0 && this.props.Login.masterData.SelectedTrainingCertificate ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.SelectedTrainingCertificate.strainingtopic}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal\">\r\n                                                    <Row>\r\n                                                        <Col md={10} className=\"d-flex no-padding\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                                <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                    {this.props.Login.masterData.SelectedTrainingCertificate && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.ACTIVE ? <i class=\"fas fa-check \"></i> : \"\"}\r\n                                                                    <FormattedMessage id={this.props.Login.masterData.SelectedTrainingCertificate.sdisplaystatus || \"\"} />\r\n                                                                </span>\r\n\r\n                                                            </h2>\r\n                                                        </Col>\r\n                                                        <Col md={2}>\r\n                                                            <div className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })}\r\n                                                                   // data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.getTrainingCertificateComboService(editId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faPencilAlt} title={this.props.intl.formatMessage({ id: \"IDS_EDIT\" })} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\" name=\"deletemethodname\"\r\n                                                            data-tip={this.props.intl.formatMessage({ id: \"IDS_DELETE\" })}\r\n                                                            \r\n                                                            hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            onClick={() => this.ConfirmDelete(deleteParam,deleteId)}\r\n                                                        >\r\n                                                            <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                            \r\n                                                        </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(resheduleId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_RESCHEDULE\" })}\r\n                                                                   // data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.getTrainingCertificateComboService(resheduleId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faClock} title={this.props.intl.formatMessage({ id: \"IDS_RESCHEDULE\" })} />\r\n                                                                </Nav.Link>\r\n\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(conductId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CONDUCT\" })}\r\n                                                                   // data-for=\"tooltip_list_wrap\"\r\n                                                                    //onClick={() => this.onConductlick()}\r\n                                                                    onClick={()=>this.props.getAddValidityExpiry(\"IDS_TRAININGEXPIRY\", \"create\", this.props.Login.masterData, this.props.Login.userInfo, conductId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faThumbsUp} title={this.props.intl.formatMessage({ id: \"IDS_CONDUCT\" })} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_TRAININGSCHEDULECANCEL\" })}\r\n                                                                 //   data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.onCancelListClick()}\r\n                                                                >\r\n                                                                    <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                                    {/* <FontAwesomeIcon icon={faUserLock} title={this.props.intl.formatMessage({ id: \"IDS_TRAININGSCHEDULECANCEL\" })} /> */}\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                {/* <Card.Text> */}\r\n                                                <Row>\r\n                                                <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGCATEGORY\" message=\"Training Category\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingcategoryname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TECHNIQUE\" message=\"Technique\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.stechniquename}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGTOPIC\" message=\"Training Topic\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingtopic}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGDATETIME\" message=\"Training Date\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingdatetime}</ReadOnlyText>\r\n                                                            {/* <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingdatetime.substring(0,10)}</ReadOnlyText> */}\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGNAME\" message=\"Training Name\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.SelectedTrainingCertificate.strainername}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGVENUE\" message=\"Venue\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.SelectedTrainingCertificate.strainingvenue}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    {/* <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININTIMEZONE\" message=\"Time Zone\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.SelectedTrainingCertificate.ntztrainingdate}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> */}\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGCOMMENTS\" message=\"Comments\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.scomments}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGEXPIRYNEED\" message=\"Training Expiry Need\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingexpiryneed}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGEXPIRYVALUE\" message=\"Training Expiry Value\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.ntrainingexpiryvalue}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGEXPIRYPERIOD\" message=\"Training Expiry Period\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.speriodname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGEXPIRYDATE\" message=\"Training Expiry Date\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingexpirydate && \r\n                                                            this.props.Login.masterData.SelectedTrainingCertificate.strainingexpirydate.length > 1 ? \r\n                                                            this.props.Login.masterData.SelectedTrainingCertificate.strainingexpirydate.substring(0,10)\r\n                                                        :\"-\"}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n\r\n                                                </Row>\r\n                                                <TrainingCertificateParticipantsTab formatMessage={this.props.intl.formatMessage}\r\n                                                    operation={this.props.Login.operation}\r\n                                                    inputParam={this.props.Login.inputParam|| []}\r\n                                                    screenName={this.props.Login.screenName}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    crudMaster={this.props.crudMaster}\r\n                                                    errorCode={this.props.Login.errorCode}\r\n                                                    masterStatus={this.props.Login.masterStatus}\r\n                                                    openChildModal={this.props.Login.openChildModal}\r\n                                                    updateStore={this.props.updateStore}\r\n                                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                                    getTrainingParticipantsComboDataService={this.props.getTrainingParticipantsComboDataService}\r\n                                                    ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    esignRights={this.props.Login.userRoleControlRights}\r\n                                                    screenData={this.props.Login.screenData}\r\n                                                    validateEsignCredential={this.props.validateEsignCredential}\r\n                                                    loadEsign={this.props.Login.loadEsign}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    showAccordian={this.state.showAccordian}\r\n                                                    dataState={this.props.Login.dataState}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    settings={this.props.Login.settings}\r\n                                                    nFlag={this.props.Login.nFlag}\r\n\r\n                                                />\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        // operation={this.props.Login.operation === \"update\" ? this.props.intl.formatMessage({ id:\"IDS_RESCHEDULE\"}) : this.props.Login.operation}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam || []}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.props.Login.screenName === \"IDS_TRAININGEXPIRY\"  ? this.onConductlick:this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={this.props.Login.screenName === \"IDS_TRAININGEXPIRY\" ? \r\n                         [] : mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            this.props.Login.screenName === \"IDS_TRAININGEXPIRY\"  ? \r\n                            <AddValidityExpiry\r\n                                     selectedRecord={this.state.selectedRecord || {}}\r\n                                     onComboChange={this.onComboChange}\r\n                                     onInputOnChange={this.onInputOnChange}\r\n                                     period={this.props.Login.period || []}/>\r\n                            \r\n                            :\r\n                            <AddTrainingCertificate\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                trainingcategoryList={this.props.Login.trainingcategoryList || []}\r\n                                techniqueList={this.props.Login.techniqueList || []}\r\n                                timeZoneList={this.props.Login.timeZoneList || []}\r\n                                currentTime={this.props.Login.currentTime || []}\r\n                                selectedTrainingCertificate={this.props.Login.masterData.SelectedTrainingCertificate || {}}\r\n                                operation={this.props.Login.operation}\r\n                                userLogged={this.props.Login.userLogged}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n                {/* End of Modal Sideout for User Creation */}\r\n            </>\r\n        );\r\n    }\r\n\r\n    ConfirmDelete = (deleteParam,deleteID) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.deleteRecord(deleteParam,deleteID));\r\n    }\r\n\r\n    deleteRecord = (deleteParam, nControlcode) => {\r\n\r\n        let objdate = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n\r\n        let fromDate = objdate.fromDate;\r\n        let toDate = objdate.toDate;\r\n\r\n        const postParam = {\r\n            inputListName: \"TrainingCertificate\", selectedObject: \"SelectedTrainingCertificate\",\r\n            primaryKeyField: \"ntrainingcode\",\r\n            primaryKeyValue: this.props.Login.masterData.SelectedTrainingCertificate.ntrainingcode,\r\n            fetchUrl: \"trainingcertificate/getTrainingCertificate\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo,\"fromDate\":fromDate,\"toDate\":toDate },\r\n        }\r\n        \r\n\r\n        const inputParam = {\r\n                                classUrl: this.props.Login.inputParam.classUrl,\r\n                                methodUrl: \"TrainingCertificate\",\r\n                                displayName:this.props.Login.screenName,\r\n                                inputData: {[\"trainingcertificate\"] :this.props.Login.masterData.SelectedTrainingCertificate,   \r\n                                \"fromDate\":fromDate,\"toDate\":toDate,\"userinfo\": this.props.Login.userInfo},\r\n                                operation:deleteParam.operation,\r\n            dataState: this.state.dataState ,\r\n            postParam\r\n                            }       \r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, nControlcode)){\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign:true, screenData:{inputParam, masterData:this.props.Login.masterData}, \r\n                    openModal:true, screenName: this.props.Login.screenName && this.props.intl.formatMessage({ id:this.props.Login.screenName}),\r\n                    operation:deleteParam.operation\r\n                    }\r\n                }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else{\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n\r\n    }\r\n\r\n    getTrainingCertificateComboService = (controlId) => {\r\n\r\n        if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CANCELLED && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.COMPLETED) {\r\n            let operation = controlId === this.state.controlMap.get(\"EditTrainingCertificate\").ncontrolcode ? \"update\" : \"reschedule\";\r\n            if(this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CONDUCTED){     \r\n                        this.props.getTrainingCertificateComboService(\"IDS_TRAININGCERTIFICATE\", operation, \"ntrainingcode\", this.props.Login.masterData.SelectedTrainingCertificate.ntrainingcode,\r\n                        this.props.Login.masterData, this.props.Login.userInfo, controlId)\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id:\"IDS_TESTTRAININGALREADYCONDUCTED\"}));\r\n            }\r\n        }\r\n        else {\r\n            toast.warn(this.props.intl.formatMessage({ id:this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CANCELLED ? \"IDS_TESTTRAININGALREADYCANCELLED\" : \"IDS_TESTTRAININGALREADYCOMPLETED\"}));\r\n        }\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate,\r\n                this.props.Login.masterData.ToDate,\r\n                this.props.Login.userInfo);\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": obj.breadCrumbFrom\r\n                },\r\n                {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": obj.breadCrumbto\r\n                },\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterSubmit = () => {\r\n        this.reloadData(true);\r\n    }\r\n\r\n    reloadData = (isFilterSubmit) => {\r\n\r\n        this.searchRef.current.value = \"\";\r\n        // let obj = this.convertDatetoString(selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n        //     selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\r\n\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n        if (isFilterSubmit) {\r\n            let selectedRecord = this.state.selectedRecord || {};\r\n            if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\r\n                fromDate = selectedRecord[\"fromdate\"];\r\n            }\r\n            if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\r\n                toDate = selectedRecord[\"todate\"];\r\n            }\r\n        }\r\n        //let obj = this.convertDatetoString(fromDate, toDate); \r\n        let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate,\r\n                currentDate: null\r\n                //currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\r\n            },\r\n            classUrl: \"trainingcertificate\",\r\n            methodUrl: \"TrainingCertificate\",\r\n            displayName: \"IDS_TRAININGCERTIFICATE\",\r\n\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        //this.props.callService(inputParam);\r\n        this.props.reloadTrainingCertificate(inputParam);\r\n    }\r\n\r\n    onConductlick = () => {\r\n        if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CANCELLED) {\r\n\r\n        const ncontrolCode = this.state.controlMap.has(\"ConductTrainingCertificate\") && this.state.controlMap.get(\"ConductTrainingCertificate\").ncontrolcode\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n\r\n        if (this.state.selectedRecord.nvalidityneed && this.state.selectedRecord.nvalidityneed===3\r\n             &&  (this.state.selectedRecord.nvalidityexpiryvalue === undefined ||\r\n                this.state.selectedRecord.nvalidityexpiryvalue === 0))\r\n            {\r\n        toast.info(this.props.intl.formatMessage({ id:\"IDS_SELECTEXPIRYVALUE\"}));\r\n        return;\r\n    }\r\n    if (this.state.selectedRecord.nvalidityneed && this.state.selectedRecord.nvalidityneed===3\r\n        && (this.state.selectedRecord[\"nvalidityexpiryperiod\"] === undefined ||\r\n        this.state.selectedRecord[\"nvalidityexpiryperiod\"] === null ||\r\n        this.state.selectedRecord[\"nvalidityexpiryperiod\"].value === undefined))\r\n       {\r\n        \r\n        toast.info(this.props.intl.formatMessage({ id:\"IDS_SELECTPERIOD\"}));\r\n   return;\r\n}\r\n\r\n        let postParam = undefined;\r\n        inputData[\"trainingcertificate\"] = { \"ntrainingcode\": this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"] ? this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"].Value : \"\" };\r\n        // inputData[\"trainingcertificate\"] = { \"ntrainingexpiryneed\": this.state.selectedRecord.nvalidityneed ? this.state.selectedRecord.nvalidityneed : \"4\",\r\n        // \"ntrainingexpiryvalue\": this.state.selectedRecord.nvalidityexpiryvalue ? this.state.selectedRecord.nvalidityexpiryvalue : \"0\",\r\n        // \"ntrainingexpiryperiod\": this.state.selectedRecord[\"nvalidityexpiryperiod\"] ? this.state.selectedRecord[\"nvalidityexpiryperiod\"].nperiodcode : \"4\" };\r\n        inputData[\"trainingcertificate\"] = this.props.Login.masterData.SelectedTrainingCertificate;\r\n        \r\n        postParam = { inputListName: \"TrainingCertificate\", selectedObject: \"SelectedTrainingCertificate\", primaryKeyField: \"ntrainingcode\" };\r\n\r\n        inputData[\"trainingcertificate\"][\"ntrainingexpiryperiod\"] = this.state\r\n        .selectedRecord[\"nvalidityexpiryperiod\"]\r\n        ? this.state.selectedRecord[\"nvalidityexpiryperiod\"].value ||\r\n        transactionStatus.NA\r\n        : transactionStatus.NA;\r\n\r\n        inputData[\"trainingcertificate\"][\"ntrainingexpiryneed\"] = this.state\r\n        .selectedRecord.nvalidityneed\r\n        ? this.state.selectedRecord.nvalidityneed : transactionStatus.NO;\r\n\r\n        inputData[\"trainingcertificate\"][\"ntrainingexpiryvalue\"] = this.state\r\n        .selectedRecord.nvalidityexpiryvalue\r\n        ? this.state.selectedRecord.nvalidityexpiryvalue : 0;\r\n\r\n       \r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate, toDate,\r\n            },\r\n            classUrl: 'trainingcertificate',\r\n            methodUrl: \"TrainingCertificate\",\r\n            inputData: inputData,\r\n            operation: \"conduct\", postParam\r\n        }\r\n        let saveType;\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"conduct\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n    else {\r\n\r\n        toast.warn(this.props.intl.formatMessage({ id:\"IDS_TRAININGCANCELED\"}));\r\n    }\r\n    }\r\n\r\n    onCancelListClick = () => {\r\n        if(this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CONDUCTED && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.COMPLETED){\r\n        //if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.DRAFT) {\r\n        const ncontrolCode = this.state.controlMap.has(\"CancelTrainingCertificate\") && this.state.controlMap.get(\"CancelTrainingCertificate\").ncontrolcode\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        //add               \r\n        let postParam = undefined;\r\n        inputData[\"trainingcertificate\"] = { \"ntrainingcode\": this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"] ? this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"].Value : \"\" };\r\n        inputData[\"trainingcertificate\"] = this.props.Login.masterData.SelectedTrainingCertificate;\r\n\r\n        postParam = { inputListName: \"TrainingCertificate\", selectedObject: \"SelectedTrainingCertificate\", primaryKeyField: \"ntrainingcode\" };\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate, toDate,\r\n            },\r\n            classUrl: 'trainingcertificate',\r\n            methodUrl: \"TrainingCertificate\",\r\n            inputData: inputData,\r\n            operation: \"cancel\", postParam\r\n        }\r\n        let saveType;\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"cancel\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    else{\r\n        toast.warn(this.props.intl.formatMessage({ id: this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CONDUCTED ? \"IDS_TESTTRAININGALREADYCONDUCTED\" : \"IDS_TESTTRAININGALREADYCOMPLETED\"}));\r\n    }\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"conduct\"\r\n                || this.props.Login.operation === \"blackList\" || this.props.Login.operation === \"cancel\"\r\n                  || this.props.Login.operation === \"invite\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason']=\"\";\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event, optional,name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if(name===\"nvalidityexpiryvalue\")\r\n        {\r\n            selectedRecord[name] = event;\r\n        }\r\n        else\r\n        {\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n    }\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n\r\n        let inputData = [];\r\n        inputData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n        let postParam = undefined;\r\n        \r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"TrainingCertificate\", selectedObject: \"SelectedTrainingCertificate\", primaryKeyField: \"ntrainingcode\" };\r\n            inputData[\"trainingcertificate\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\r\n\r\n            this.trainingcertificateFieldList.map(item => {\r\n                return inputData[\"trainingcertificate\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n            })\r\n            inputData[\"trainingcertificate\"][\"ntransactionstatus\"] = this.state.selectedRecord.ntransactionstatus;\r\n        }\r\n        else if(this.props.Login.operation === \"reschedule\"){\r\n            //reschedule\r\n            postParam = { inputListName: \"TrainingCertificate\", selectedObject: \"SelectedTrainingCertificate\", primaryKeyField: \"ntrainingcode\" };\r\n            inputData[\"trainingcertificate\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\r\n\r\n            this.trainingcertificateFieldList.map(item => {\r\n                return inputData[\"trainingcertificate\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n            })\r\n            inputData[\"trainingcertificate\"][\"ntransactionstatus\"] = transactionStatus.RESCHEDULED;\r\n            \r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"trainingcertificate\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n\r\n            this.trainingcertificateFieldList.map(item => {\r\n                return inputData[\"trainingcertificate\"][item] = this.state.selectedRecord[item]\r\n            });\r\n            inputData[\"trainingcertificate\"][\"ntransactionstatus\"] = transactionStatus.SCHEDULED;\r\n\r\n        }\r\n        if (this.state.selectedRecord[\"dtrainingdatetime\"]) {\r\n            inputData[\"trainingcertificate\"][\"dtrainingdatetime\"] = formatInputDate(\r\n              this.state.selectedRecord[\"dtrainingdatetime\"],\r\n              false\r\n            );\r\n          }\r\n\r\n        inputData[\"trainingcertificate\"][\"ntrainingcategorycode\"] = this.state.selectedRecord[\"ntrainingcategorycode\"] ? this.state.selectedRecord[\"ntrainingcategorycode\"].value : \"-1\";\r\n        inputData[\"trainingcertificate\"][\"ntechniquecode\"] = this.state.selectedRecord[\"ntechniquecode\"] ? this.state.selectedRecord[\"ntechniquecode\"].value : \"-1\";\r\n        inputData[\"trainingcertificate\"][\"ntztrainingdate\"] = this.state.selectedRecord[\"ntztrainingdate\"] ? this.state.selectedRecord[\"ntztrainingdate\"].value : \"-1\";\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate, toDate,\r\n            },\r\n            classUrl: \"trainingcertificate\", //this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"TrainingCertificate\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (\r\n            showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\") \r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    // reloadData = () => {\r\n    //     const startDate = this.state.selectedRecord[\"fromdate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.fromDate));\r\n    //     const endDate = this.state.selectedRecord[\"todate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.toDate));\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth()+1)); \r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth()+1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate())); \r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDate = startDate.getFullYear()+'-'+prevMonth+'-'+prevDay +\" 00:00:00\";\r\n    //     const toDate = endDate.getFullYear()+'-'+currentMonth+'-'+currentDay + \" 23:59:00\" ;                    \r\n\r\n    //     const inputParam = {\r\n    //         inputData : {\"userinfo\":this.props.Login.userInfo,\r\n    //                         fromDate, toDate,\r\n    //                     },                        \r\n    //                     classUrl: this.props.Login.inputParam.classUrl,\r\n    //                     methodUrl: this.props.Login.inputParam.methodUrl,\r\n    //                     displayName:this.props.Login.inputParam.displayName,\r\n    //                     userInfo: this.props.Login.userInfo\r\n    //                 };     \r\n    //     this.props.callService(inputParam);\r\n\r\n    //     // this.searchRef.current.value = \"\";\r\n    //     // const inputParam = {\r\n    //     //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n    //     //     classUrl: \"trainingcertificate\",\r\n    //     //     methodUrl: \"TrainingCertificate\",\r\n\r\n    //     //     displayName: \"IDS_TRAININGcertificate\",\r\n    //     //     userInfo: this.props.Login.userInfo\r\n    //     // };\r\n\r\n    //     // this.props.callService(inputParam);\r\n    // }\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getTrainingCertificateDetail,\r\n    getTrainingCertificateComboService, getTrainingParticipantsComboDataService, filterColumnData, reloadTrainingCertificate,rescheduleTrainingCertificate,getAddValidityExpiry\r\n})(injectIntl(TrainingCertificate));\r\n\r\n"]},"metadata":{},"sourceType":"module"}