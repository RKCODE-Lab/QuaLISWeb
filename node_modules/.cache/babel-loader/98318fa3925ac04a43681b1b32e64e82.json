{"ast":null,"code":"import { convertDateTimetoStringDBFormat, Lims_JSON_stringify, create_UUID } from '../../components/CommonScript';\nimport { orderType, SampleType } from '../../components/Enumeration';\nexport function getRegistrationSubSample(selectedRecord, templateList, userInfo, defaulttimezone, preRegPopUp, specBasedComponent, selectedSpec, operation) {\n  let sampleRegistration = {};\n  let dateList = [];\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          //  let componentrowlabel = ''\n          // let componentrowvalue = ''\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\") {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                value: selectedRecord[componentrow.label].value,\n                label: selectedRecord[componentrow.label].label,\n                pkey: componentrow.valuemember,\n                nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                source: componentrow.source,\n                [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].value\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"; // ALPD-3575\n\n              if (componentrow.name === \"sampleappearance\") {\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  'nsampleappearancecode': sampleRegistration[\"jsondata\"][componentrow.label].value,\n                  'ssampleappearance': sampleRegistration[\"jsondata\"][componentrow.label].label\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  'nsampleappearancecode': sampleRegistration[\"jsondata\"][componentrow.label].value,\n                  'ssampleappearance': sampleRegistration[\"jsondata\"][componentrow.label].label\n                };\n              }\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              } // ALPD-3575\n\n\n              if (componentrow.name === \"subsamplecollectiondatetime\") {\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  'subsamplecollectiondatetime': sampleRegistration[\"jsondata\"][componentrow.label]\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  'subsamplecollectiondatetime': sampleRegistration[\"jsonuidata\"][componentrow.label],\n                  userInfo\n                };\n              }\n\n              dateList.push(componentrow.label);\n            } else if (componentrow.inputtype === \"files\") {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              let tempData = {};\n\n              if (typeof selectedRecord[componentrow && componentrow.label] === \"object\") {\n                selectedRecord[componentrow && componentrow.label] && selectedRecord[componentrow && componentrow.label].forEach((item1, index) => {\n                  const fileName = create_UUID();\n                  const splittedFileName = item1.name.split('.');\n                  const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\n                  const uniquefilename = fileName + '.' + fileExtension;\n                  tempData[componentrow && componentrow.label + '_susername_subSample'] = userInfo.susername;\n                  tempData[componentrow && componentrow.label + '_suserrolename_subSample'] = userInfo.suserrolename;\n                  tempData[componentrow && componentrow.label + '_nfilesize_subSample'] = item1.size;\n                  tempData[componentrow && componentrow.label + '_ssystemfilename_subSample'] = uniquefilename;\n                  tempData[componentrow && componentrow.label] = Lims_JSON_stringify(item1.name.trim(), false);\n                  sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                    ...tempData\n                  };\n                  sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                    ...tempData\n                  };\n                  sampleRegistration['uniquefilename'] = uniquefilename;\n                  sampleRegistration[selectedRecord[componentrow.label]] = selectedRecord[componentrow.label];\n                });\n              }\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n\n              if (componentrow.name === 'externalsampleid') {\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  'sampleorderid': sampleRegistration[\"jsondata\"][componentrow.label],\n                  'nordertypecode': orderType.MANUAL,\n                  'sordertypename': \"Manual\"\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  'sampleorderid': sampleRegistration[\"jsondata\"][componentrow.label],\n                  'nordertypecode': orderType.MANUAL,\n                  'sordertypename': \"Manual\"\n                };\n              }\n            }\n\n            return sampleRegistration;\n          });\n        } else {\n          if (component.inputtype === \"combo\") {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n              value: selectedRecord[component.label].value,\n              label: selectedRecord[component.label].label,\n              //   pkey: operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.pkey:selectedRecord[component.label].pkey:selectedRecord[component.label].item.pkey,\n              //   nquerybuildertablecode:operation&&operation==='update'?selectedRecord[component.label].item ?selectedRecord[component.label].item.nquerybuildertablecode :selectedRecord[component.label].nquerybuildertablecode :selectedRecord[component.label].item.nquerybuildertablecode,\n              //   source:operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.source: selectedRecord[component.label].source:selectedRecord[component.label].item.source\n              pkey: component.valuemember,\n              nquerybuildertablecode: component.nquerybuildertablecode,\n              source: component.source,\n              [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].value\n            } : -1;\n            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"; // ALPD-3575\n\n            if (component.name === \"sampleappearance\") {\n              sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                'nsampleappearancecode': sampleRegistration[\"jsondata\"][component.label].value,\n                'ssampleappearance': sampleRegistration[\"jsondata\"][component.label].label\n              };\n              sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                'nsampleappearancecode': sampleRegistration[\"jsondata\"][component.label].value,\n                'ssampleappearance': sampleRegistration[\"jsondata\"][component.label].label\n              };\n            }\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            } // ALPD-3575\n\n\n            if (component.name === \"subsamplecollectiondatetime\") {\n              sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                'subsamplecollectiondatetime': sampleRegistration[\"jsondata\"][component.label]\n              };\n              sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                'subsamplecollectiondatetime': sampleRegistration[\"jsonuidata\"][component.label],\n                userInfo\n              };\n            }\n\n            dateList.push(component.label);\n          } else if (component.inputtype === \"files\") {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            let tempData = {};\n\n            if (typeof selectedRecord[component && component.label] === \"object\") {\n              selectedRecord[component && component.label] && selectedRecord[component && component.label].forEach((item1, index) => {\n                const fileName = create_UUID();\n                const splittedFileName = item1.name.split('.');\n                const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\n                const uniquefilename = fileName + '.' + fileExtension;\n                tempData[component && component.label + '_susername_subSample'] = userInfo.susername;\n                tempData[component && component.label + '_suserrolename_subSample'] = userInfo.suserrolename;\n                tempData[component && component.label + '_nfilesize_subSample'] = item1.size;\n                tempData[component && component.label + '_ssystemfilename_subSample'] = uniquefilename;\n                tempData[component && component.label] = Lims_JSON_stringify(item1.name.trim(), false);\n                sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                  ...tempData\n                };\n                sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                  ...tempData\n                };\n                sampleRegistration['uniquefilename'] = uniquefilename;\n                sampleRegistration[component.label] = selectedRecord[component.label];\n              });\n            }\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n\n            if (component.name === 'externalsampleid') {\n              //sampleRegistration[\"jsondata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label]\n              //sampleRegistration[\"jsonuidata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label]\n              sampleRegistration[\"jsondata\"] = { ...sampleRegistration[\"jsondata\"],\n                'sampleorderid': sampleRegistration[\"jsondata\"][component.label],\n                'nordertypecode': orderType.MANUAL,\n                'sordertypename': \"Manual\"\n              };\n              sampleRegistration[\"jsonuidata\"] = { ...sampleRegistration[\"jsonuidata\"],\n                'sampleorderid': sampleRegistration[\"jsondata\"][component.label],\n                'nordertypecode': orderType.MANUAL,\n                'sordertypename': \"Manual\"\n              };\n            }\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n\n  if (preRegPopUp) {\n    sampleRegistration[\"nallottedspeccode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"].value : -1;\n\n    if (specBasedComponent) {\n      sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\n      sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"];\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\n      sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\n    } else {\n      sampleRegistration[\"nspecsampletypecode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\n    }\n  } else {\n    if (specBasedComponent) {\n      sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\n      sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"];\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\n      sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\n    } else {\n      //  sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord.nspecsampletypecode : -1;\n      sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"] : -1;\n    }\n  }\n\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n}\nexport function getSchedulerConfig(masterData, selectedRecord, selectedSpec, templateList, userInfo, defaulttimezone, operation, comboComponents) {\n  let sampleRegistration = {};\n  let dateList = [];\n  sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\n  sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue.nregtypecode;\n  sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue.nregsubtypecode;\n  sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\n  sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue.nregsubtypeversioncode;\n  sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample[0].ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\n  sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample[0].nallottedspeccode : selectedSpec.nallottedspeccode.value;\n  sampleRegistration[\"nschedulecode\"] = masterData.SchedulerConfigTypeValue && masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode == 1 ? -1 : selectedRecord['SchedulerMaster'] ? selectedRecord['SchedulerMaster'].value : -1;\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT) {\n    sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.MATERIAL) {\n    sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\n    sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\n    sampleRegistration[\"nproductcatcode\"] = -1;\n    sampleRegistration[\"nproductcode\"] = -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"ngendercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\n    sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\n    sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\n    sampleRegistration[\"nprojectmastercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']] ? selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']].value : -1;\n    sampleRegistration[\"ninstrumentcatcode\"] = -1;\n    sampleRegistration[\"ninstrumentcode\"] = -1;\n    sampleRegistration[\"nmaterialcatcode\"] = -1;\n    sampleRegistration[\"nmaterialcode\"] = -1;\n  }\n\n  sampleRegistration[\"jsondata\"] = {};\n  sampleRegistration[\"jsonuidata\"] = {};\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\n    sampleRegistration[\"jsondata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : '';\n    sampleRegistration[\"jsonuidata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : '';\n    sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : -1;\n    sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : -1;\n    sampleRegistration[\"jsondata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value;\n    sampleRegistration[\"jsonuidata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value;\n  } //console.log(\"save registration:\", selectedRecord);\n\n\n  templateList && templateList.map(row => {\n    return row.children.map(column => {\n      return column.children.map(component => {\n        if (component.hasOwnProperty(\"children\")) {\n          return component.children.map(componentrow => {\n            if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\n              //  if(componentrow.recordbasedreadonly)\n              if (componentrow.inputtype === \"predefineddropdown\") {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label // pkey: componentrow.valuemember,\n                  // nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  // source: componentrow.source,\n                  // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\n                  // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\n                  // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :\n                  //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \n                  //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  //     :  selectedRecord[componentrow.label].vale\n\n                } : -1;\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                  value: selectedRecord[componentrow.label].value,\n                  label: selectedRecord[componentrow.label].label,\n                  pkey: componentrow.valuemember,\n                  nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                  source: componentrow.source,\n                  [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].value\n                } : -1;\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n              } //  sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n\n\n              if (componentrow.name === 'manualorderid') {\n                sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ? sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item['jsondata']['spatientid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\n\n                if (operation === 'update') {\n                  sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                  sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                  sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                  sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                  sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                  sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                  sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                  sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n                } else {\n                  sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['spermanentadd'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                  sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['scurrentadd'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                  sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sexternalid'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                  sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['spassportno'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                  sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sphoneno'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                  sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sinstitutioncode'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                  sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['sinsdistrictcity'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                  sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].item['jsondata']['submittertelephone'] : \"\";\n                  sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n                }\n              }\n            } else if (componentrow.inputtype === \"date\") {\n              if (componentrow.mandatory) {\n                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              } else {\n                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ? new Date(selectedRecord[componentrow.label]) : new Date(), userInfo) : selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\" : \"\";\n                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n              }\n\n              if (componentrow.timezone) {\n                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                  value: selectedRecord[`tz${componentrow.label}`].value,\n                  label: selectedRecord[`tz${componentrow.label}`].label\n                } : defaulttimezone ? defaulttimezone : -1;\n                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`];\n              }\n\n              dateList.push(componentrow.label);\n            } else {\n              sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label];\n            }\n          });\n          return sampleRegistration;\n        } else {\n          if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\n            if (component.inputtype === \"predefineddropdown\") {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label // pkey: component.valuemember,\n                // nquerybuildertablecode: component.nquerybuildertablecode,\n                // source: component.source,\n                // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\n                // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\n                //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :\n                //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \n                //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                //         :  selectedRecord[component.label].vale\n\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                value: selectedRecord[component.label].value,\n                label: selectedRecord[component.label].label,\n                pkey: component.valuemember,\n                nquerybuildertablecode: component.nquerybuildertablecode,\n                source: component.source,\n                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].value\n              } : -1;\n              sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\n            }\n\n            if (component.name === 'manualorderid') {\n              sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ? sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spatientid'] : \"\";\n              sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\n\n              if (operation === 'update') {\n                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n              } else {\n                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spermanentadd'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\n                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['scurrentadd'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\n                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sexternalid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\n                sampleRegistration[\"jsondata\"]['OrderIdData'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sexternalorderid'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['OrderIdData'] = sampleRegistration[\"jsondata\"]['OrderIdData'];\n                sampleRegistration[\"jsondata\"]['OrderCodeData'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['nexternalordercode'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['OrderCodeData'] = sampleRegistration[\"jsondata\"]['OrderCodeData'];\n                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['spassportno'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\n                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sphoneno'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\n                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sinstitutioncode'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\n                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['sinsdistrictcity'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\n                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[component.label] ? selectedRecord[component.label].item['jsondata']['submittertelephone'] : \"\";\n                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\n              }\n            }\n          } else if (component.inputtype === \"date\") {\n            if (component.mandatory) {\n              console.log(typeof selectedRecord[component.label] === \"object\");\n              sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            } else {\n              sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ? new Date(selectedRecord[component.label]) : new Date(), userInfo) : selectedRecord[component.label] ? selectedRecord[component.label] : \"\" : \"\";\n              sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n            }\n\n            if (component.timezone) {\n              sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                value: selectedRecord[`tz${component.label}`].value,\n                label: selectedRecord[`tz${component.label}`].label\n              } : defaulttimezone ? defaulttimezone : -1;\n              sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`];\n            }\n\n            dateList.push(component.label);\n          } else {\n            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label];\n          }\n\n          return sampleRegistration;\n        }\n      });\n    });\n  });\n\n  if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT && selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata) {\n    sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : '';\n    sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord && selectedRecord.nexternalordertypecode ? selectedRecord.nexternalordertypecode : '';\n    sampleRegistration[\"jsondata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord && selectedRecord.sexternalordertypename ? selectedRecord.sexternalordertypename : '';\n    sampleRegistration[\"jsonuidata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord && selectedRecord.sexternalordertypename ? selectedRecord.sexternalordertypename : '';\n    sampleRegistration[\"jsondata\"]['externalorderid'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label || '';\n    sampleRegistration[\"jsonuidata\"]['externalorderid'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label || '';\n    sampleRegistration[\"jsondata\"]['nexternalordercode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value || '';\n    sampleRegistration[\"jsonuidata\"]['nexternalordercode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value || '';\n  }\n\n  sampleRegistration[\"jsondata\"]['SchedulerSite'] = selectedRecord['SchedulerSite'] && {\n    'label': selectedRecord['SchedulerSite'].label,\n    'value': selectedRecord['SchedulerSite'].value,\n    'source': 'site',\n    'nsitecode': selectedRecord['SchedulerSite'].value,\n    'pkey': 'nsitecode'\n  } || '';\n  sampleRegistration[\"jsondata\"]['SchedulerMaster'] = selectedRecord['SchedulerMaster'] && {\n    'label': selectedRecord['SchedulerMaster'] && selectedRecord['SchedulerMaster'].label || 'NA',\n    'value': selectedRecord['SchedulerMaster'] && selectedRecord['SchedulerMaster'].value || -1,\n    'source': 'schedulemaster',\n    'nschedulecode': selectedRecord['SchedulerMaster'] && selectedRecord['SchedulerMaster'].value || -1,\n    'pkey': 'nschedulecode'\n  } || '';\n  sampleRegistration[\"jsonuidata\"]['SchedulerSite'] = selectedRecord['SchedulerSite'] && selectedRecord['SchedulerSite'].label || '';\n  sampleRegistration[\"jsonuidata\"]['SchedulerMaster'] = selectedRecord['SchedulerMaster'] && selectedRecord['SchedulerMaster'].label || 'NA';\n  const param = {\n    sampleRegistration,\n    dateList\n  };\n  return param;\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5294/QuaLISWeb/src/pages/Scheduler/SchedulerValidation.jsx"],"names":["convertDateTimetoStringDBFormat","Lims_JSON_stringify","create_UUID","orderType","SampleType","getRegistrationSubSample","selectedRecord","templateList","userInfo","defaulttimezone","preRegPopUp","specBasedComponent","selectedSpec","operation","sampleRegistration","dateList","map","row","children","column","component","hasOwnProperty","componentrow","inputtype","label","value","pkey","valuemember","nquerybuildertablecode","source","table","item","jsondata","name","mandatory","Date","loadcurrentdate","timezone","push","tempData","forEach","item1","index","fileName","splittedFileName","split","fileExtension","length","uniquefilename","susername","suserrolename","size","trim","MANUAL","nspecsampletypecode","param","getSchedulerConfig","masterData","comboComponents","RealSampleTypeValue","nsampletypecode","RealRegTypeValue","nregtypecode","RealRegSubTypeValue","nregsubtypecode","RealDesignTemplateMappingValue","ndesigntemplatemappingcode","nregsubtypeversioncode","selectedSample","ntemplatemanipulationcode","nallottedspeccode","SchedulerConfigTypeValue","nsampleschedulerconfigtypecode","PRODUCT","findIndex","x","INSTRUMENT","MATERIAL","CLINICALTYPE","undefined","PROJECTSAMPLETYPE","Order","nexternalordertypecode","console","log","sexternalordertypename"],"mappings":"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","sourcesContent":["\r\nimport { convertDateTimetoStringDBFormat,  Lims_JSON_stringify, create_UUID } from '../../components/CommonScript';\r\nimport {  orderType,SampleType  } from '../../components/Enumeration';\r\n\r\n\r\nexport function getRegistrationSubSample(selectedRecord,\r\n    templateList, userInfo, defaulttimezone, preRegPopUp, specBasedComponent, selectedSpec, operation) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    //  let componentrowlabel = ''\r\n                    // let componentrowvalue = ''\r\n                    return component.children.map(componentrow => {\r\n\r\n                        if (componentrow.inputtype === \"combo\") {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                {\r\n                                    value: selectedRecord[componentrow.label].value,\r\n                                    label: selectedRecord[componentrow.label].label,\r\n                                    \r\n                                    pkey: componentrow.valuemember,\r\n                                    nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                    source: componentrow.source,\r\n                                    [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ?\r\n                                        selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                            selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        :\r\n                                        selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                            selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                : selectedRecord[componentrow.label].value\r\n                                } : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"\r\n                     \r\n\t\t\t\t\t\t\t// ALPD-3575\r\n                            if(componentrow.name === \"sampleappearance\"){\r\n                                sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'nsampleappearancecode': sampleRegistration[\"jsondata\"][componentrow.label].value, \r\n                                'ssampleappearance': sampleRegistration[\"jsondata\"][componentrow.label].label}\r\n                                sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'nsampleappearancecode': sampleRegistration[\"jsondata\"][componentrow.label].value,\r\n                                'ssampleappearance': sampleRegistration[\"jsondata\"][componentrow.label].label}\r\n                            }\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                        : selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n\t\t\t\t\t\t\t// ALPD-3575\r\n                            if(componentrow.name === \"subsamplecollectiondatetime\"){\r\n                                sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'subsamplecollectiondatetime': sampleRegistration[\"jsondata\"][componentrow.label]}\r\n                                sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'subsamplecollectiondatetime': sampleRegistration[\"jsonuidata\"][componentrow.label], userInfo}\r\n                        }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n                        else if (componentrow.inputtype === \"files\") {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            let tempData = {}\r\n                            if (typeof selectedRecord[componentrow && componentrow.label] === \"object\") {\r\n                                selectedRecord[componentrow && componentrow.label] && selectedRecord[componentrow && componentrow.label].forEach((item1, index) => {\r\n                                    const fileName = create_UUID();\r\n                                    const splittedFileName = item1.name.split('.');\r\n                                    const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\r\n                                    const uniquefilename = fileName + '.' + fileExtension;\r\n                                    tempData[componentrow && componentrow.label + '_susername_subSample'] = userInfo.susername\r\n                                    tempData[componentrow && componentrow.label + '_suserrolename_subSample'] = userInfo.suserrolename\r\n                                    tempData[componentrow && componentrow.label + '_nfilesize_subSample'] = item1.size\r\n                                    tempData[componentrow && componentrow.label + '_ssystemfilename_subSample'] = uniquefilename\r\n                                    tempData[componentrow && componentrow.label] = Lims_JSON_stringify(item1.name.trim(), false)\r\n\r\n                                    sampleRegistration[\"jsondata\"] = {\r\n                                        ...sampleRegistration[\"jsondata\"],\r\n                                        ...tempData\r\n                                    };\r\n                                    sampleRegistration[\"jsonuidata\"] = {\r\n                                        ...sampleRegistration[\"jsonuidata\"],\r\n                                        ...tempData\r\n                                    };\r\n                                    sampleRegistration['uniquefilename'] = uniquefilename;\r\n                                    sampleRegistration[selectedRecord[componentrow.label]] = selectedRecord[componentrow.label]\r\n                                }\r\n\r\n                                )\r\n                            }\r\n                        }\r\n\r\n                        else {\r\n\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            if (componentrow.name === 'externalsampleid') {\r\n                                \r\n                                sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'sampleorderid': sampleRegistration[\"jsondata\"][componentrow.label],\r\n                                'nordertypecode': orderType.MANUAL,'sordertypename': \"Manual\"}\r\n                                sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'sampleorderid': sampleRegistration[\"jsondata\"][componentrow.label],\r\n                                'nordertypecode': orderType.MANUAL,'sordertypename': \"Manual\"}\r\n                            }\r\n                    \r\n                        }\r\n                        return sampleRegistration;\r\n                    })\r\n\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            {\r\n                                value: selectedRecord[component.label].value,\r\n                                label: selectedRecord[component.label].label,\r\n                                //   pkey: operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.pkey:selectedRecord[component.label].pkey:selectedRecord[component.label].item.pkey,\r\n                                //   nquerybuildertablecode:operation&&operation==='update'?selectedRecord[component.label].item ?selectedRecord[component.label].item.nquerybuildertablecode :selectedRecord[component.label].nquerybuildertablecode :selectedRecord[component.label].item.nquerybuildertablecode,\r\n                                //   source:operation&&operation==='update'?selectedRecord[component.label].item?selectedRecord[component.label].item.source: selectedRecord[component.label].source:selectedRecord[component.label].item.source\r\n                                pkey: component.valuemember,\r\n                                nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                source: component.source,\r\n                                [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ?\r\n                                    selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                        selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    :\r\n                                    selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                        selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                            : selectedRecord[component.label].value\r\n                            } : -1\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\r\n\t\t\t\t\t\t// ALPD-3575\r\n                        if(component.name === \"sampleappearance\"){\r\n                            sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'nsampleappearancecode': sampleRegistration[\"jsondata\"][component.label].value, \r\n                            'ssampleappearance': sampleRegistration[\"jsondata\"][component.label].label}\r\n                            sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'nsampleappearancecode': sampleRegistration[\"jsondata\"][component.label].value,\r\n                            'ssampleappearance': sampleRegistration[\"jsondata\"][component.label].label}\r\n                        }\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                (typeof selectedRecord[component.label] === \"number\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                    : selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[component.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[component.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n\t\t\t\t\t\t// ALPD-3575\r\n                        if(component.name === \"subsamplecollectiondatetime\"){\r\n                                sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'subsamplecollectiondatetime': sampleRegistration[\"jsondata\"][component.label]}\r\n                                sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'subsamplecollectiondatetime': sampleRegistration[\"jsonuidata\"][component.label], userInfo}\r\n                        }\r\n                        dateList.push(component.label)\r\n                    } else if (component.inputtype === \"files\") {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        let tempData = {}\r\n                        if (typeof selectedRecord[component && component.label] === \"object\") {\r\n                            selectedRecord[component && component.label] && selectedRecord[component && component.label].forEach((item1, index) => {\r\n                                const fileName = create_UUID();\r\n                                const splittedFileName = item1.name.split('.');\r\n                                const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\r\n                                const uniquefilename = fileName + '.' + fileExtension;\r\n                                tempData[component && component.label + '_susername_subSample'] = userInfo.susername\r\n                                tempData[component && component.label + '_suserrolename_subSample'] = userInfo.suserrolename\r\n                                tempData[component && component.label + '_nfilesize_subSample'] = item1.size\r\n                                tempData[component && component.label + '_ssystemfilename_subSample'] = uniquefilename\r\n                                tempData[component && component.label] = Lims_JSON_stringify(item1.name.trim(), false)\r\n                                sampleRegistration[\"jsondata\"] = {\r\n                                    ...sampleRegistration[\"jsondata\"],\r\n                                    ...tempData\r\n                                };\r\n                                sampleRegistration[\"jsonuidata\"] = {\r\n                                    ...sampleRegistration[\"jsonuidata\"],\r\n                                    ...tempData\r\n                                };\r\n                                sampleRegistration['uniquefilename'] = uniquefilename;\r\n                                sampleRegistration[component.label] = selectedRecord[component.label]\r\n                            }\r\n                            )\r\n                        }\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        if (component.name === 'externalsampleid') {\r\n                            //sampleRegistration[\"jsondata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label]\r\n                            //sampleRegistration[\"jsonuidata\"]['sampleorderid'] = sampleRegistration[\"jsondata\"][component.label]\r\n                            sampleRegistration[\"jsondata\"]= {...sampleRegistration[\"jsondata\"],'sampleorderid': sampleRegistration[\"jsondata\"][component.label],\r\n                            'nordertypecode': orderType.MANUAL,'sordertypename': \"Manual\"}\r\n                            sampleRegistration[\"jsonuidata\"]= {...sampleRegistration[\"jsonuidata\"],'sampleorderid': sampleRegistration[\"jsondata\"][component.label],\r\n                            'nordertypecode': orderType.MANUAL,'sordertypename': \"Manual\"}\r\n                        }\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n\r\n            }\r\n            )\r\n        })\r\n    })\r\n    if (preRegPopUp) {\r\n        sampleRegistration[\"nallottedspeccode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"].value : -1;\r\n        if (specBasedComponent) {\r\n            sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\r\n            sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"]\r\n\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\r\n        } else {\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedSpec[\"nallottedspeccode\"] ? selectedSpec[\"nallottedspeccode\"]['item'].nspecsampletypecode : -1;\r\n        }\r\n    } else {\r\n        if (specBasedComponent) {\r\n            sampleRegistration[\"scomponentname\"] = selectedRecord[\"ncomponentcode\"].label;\r\n            sampleRegistration[\"jsonuidata\"][\"scomponentname\"] = sampleRegistration[\"scomponentname\"]\r\n\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"].value : -1;\r\n            sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord[\"nspecsampletypecode\"] : -1;\r\n        } else {\r\n            //  sampleRegistration[\"nspecsampletypecode\"] = selectedRecord[\"nspecsampletypecode\"] ? selectedRecord.nspecsampletypecode : -1;\r\n            sampleRegistration[\"ncomponentcode\"] = selectedRecord[\"ncomponentcode\"] ? selectedRecord[\"ncomponentcode\"] : -1;\r\n        }\r\n    }\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}\r\n\r\n\r\n\r\n\r\nexport function getSchedulerConfig(masterData, selectedRecord, selectedSpec,\r\n    templateList, userInfo, defaulttimezone, operation, comboComponents) {\r\n    let sampleRegistration = {};\r\n    let dateList = []\r\n    sampleRegistration[\"nsampletypecode\"] = masterData.RealSampleTypeValue.nsampletypecode;\r\n    sampleRegistration[\"nregtypecode\"] = masterData.RealRegTypeValue.nregtypecode;\r\n    sampleRegistration[\"nregsubtypecode\"] = masterData.RealRegSubTypeValue.nregsubtypecode;\r\n    sampleRegistration[\"ndesigntemplatemappingcode\"] = masterData.RealDesignTemplateMappingValue.ndesigntemplatemappingcode;\r\n    sampleRegistration[\"nregsubtypeversioncode\"] = masterData.RealRegSubTypeValue.nregsubtypeversioncode;\r\n    sampleRegistration[\"ntemplatemanipulationcode\"] = operation === 'update' ? masterData.selectedSample[0].ntemplatemanipulationcode : selectedSpec.ntemplatemanipulationcode;\r\n    sampleRegistration[\"nallottedspeccode\"] = operation === 'update' ? masterData.selectedSample[0].nallottedspeccode : selectedSpec.nallottedspeccode.value;\r\n    sampleRegistration[\"nschedulecode\"] = masterData.SchedulerConfigTypeValue && masterData.SchedulerConfigTypeValue.nsampleschedulerconfigtypecode==1?-1: selectedRecord['SchedulerMaster'] ? selectedRecord['SchedulerMaster'].value:-1;\r\n\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT) {\r\n\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    } else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.INSTRUMENT) {\r\n        sampleRegistration[\"ninstrumentcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument Category')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Instrument')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.MATERIAL) {\r\n        sampleRegistration[\"nmaterialcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material Category')]['label']].value : -1;\r\n        sampleRegistration[\"nmaterialcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Material')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcatcode\"] = -1\r\n        sampleRegistration[\"nproductcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"ngendercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Gender')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n    else if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PROJECTSAMPLETYPE) {\r\n        sampleRegistration[\"nproductcatcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product Category')]['label']].value : -1;\r\n        sampleRegistration[\"nproductcode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')] && comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']] !== undefined ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Product')]['label']].value : -1;\r\n        sampleRegistration[\"nprojectmastercode\"] = selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']] ?\r\n            selectedRecord[comboComponents[comboComponents.findIndex(x => x.name === 'Project Code')]['label']].value : -1;\r\n        sampleRegistration[\"ninstrumentcatcode\"] = -1\r\n        sampleRegistration[\"ninstrumentcode\"] = -1\r\n        sampleRegistration[\"nmaterialcatcode\"] = -1\r\n        sampleRegistration[\"nmaterialcode\"] = -1\r\n    }\r\n\r\n    sampleRegistration[\"jsondata\"] = {}\r\n    sampleRegistration[\"jsonuidata\"] = {}\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.CLINICALTYPE) {\r\n        sampleRegistration[\"jsondata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : ''\r\n        sampleRegistration[\"jsonuidata\"]['spatientid'] = selectedRecord['spatientid'] ? selectedRecord['spatientid'] : ''\r\n        sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:-1\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord.Order && selectedRecord.Order.item && selectedRecord.Order.item.jsondata.nexternalordertypecode ? selectedRecord.Order.item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:-1\r\n        sampleRegistration[\"jsondata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value\r\n        sampleRegistration[\"jsonuidata\"][\"orderTypeValue\"] = selectedRecord['Order Type'] && selectedRecord['Order Type'].value\r\n    }\r\n    \r\n    //console.log(\"save registration:\", selectedRecord);\r\n    templateList && templateList.map(row => {\r\n        return row.children.map(column => {\r\n            return column.children.map(component => {\r\n                if (component.hasOwnProperty(\"children\")) {\r\n                    return component.children.map(componentrow => {\r\n                        if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"predefineddropdown\") {\r\n                            //  if(componentrow.recordbasedreadonly)\r\n                            if (componentrow.inputtype === \"predefineddropdown\") {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    {\r\n                                        value: selectedRecord[componentrow.label].value,\r\n                                        label: selectedRecord[componentrow.label].label\r\n                                        // pkey: componentrow.valuemember,\r\n                                        // nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                        // source: componentrow.source,\r\n                                        // [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]:  operation === \"update\"?\r\n                                        // selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                        // selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        //     :\r\n                                        //     selectedRecord[componentrow.label].item? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: \r\n                                        //     selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]?  selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        //     :  selectedRecord[componentrow.label].vale\r\n\r\n                                    } : -1\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                    {\r\n                                        value: selectedRecord[componentrow.label].value,\r\n                                        label: selectedRecord[componentrow.label].label,\r\n                                        pkey: componentrow.valuemember,\r\n                                        nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                        source: componentrow.source,\r\n                                        [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ?\r\n                                            selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                            :\r\n                                            selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] ? selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                    : selectedRecord[componentrow.label].value\r\n\r\n                                    } : -1\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n\r\n                            }\r\n                            //  sampleRegistration[\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\r\n                            if (componentrow.name === 'manualorderid') {\r\n                                sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ?\r\n                                    sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[componentrow.label].item ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spatientid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\r\n                                if (operation === 'update') {\r\n                                    sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\r\n                                    sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                }\r\n                                else {\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spermanentadd'] : \"\"\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['scurrentadd'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sexternalid'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['spassportno'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sphoneno'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sinstitutioncode'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['sinsdistrictcity'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                    sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label].item['jsondata']['submittertelephone'] : \"\";\r\n\r\n                                    sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                                }\r\n                            }\r\n\r\n\r\n                        }\r\n                        else if (componentrow.inputtype === \"date\") {\r\n                            if (componentrow.mandatory) {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = (typeof selectedRecord[componentrow.label] === \"object\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                    (typeof selectedRecord[componentrow.label] === \"number\") ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n                                        : selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            } else {\r\n                                sampleRegistration[\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                    typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) :\r\n                                        typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label] : \"\" :\r\n                                    selectedRecord[componentrow.label] ? typeof selectedRecord[componentrow.label] === \"object\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                            selectedRecord[componentrow.label] : new Date(), userInfo) : typeof selectedRecord[componentrow.label] === \"number\" ?\r\n                                            convertDateTimetoStringDBFormat(selectedRecord[componentrow.label] ?\r\n                                                new Date(selectedRecord[componentrow.label]) : new Date(), userInfo)\r\n\r\n                                            : selectedRecord[componentrow.label] ?\r\n                                                selectedRecord[componentrow.label]\r\n                                                : \"\" : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                            }\r\n                            if (componentrow.timezone) {\r\n                                sampleRegistration[\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                    { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                    defaulttimezone ? defaulttimezone : -1\r\n\r\n                                sampleRegistration[\"jsonuidata\"][`tz${componentrow.label}`] = sampleRegistration[\"jsondata\"][`tz${componentrow.label}`]\r\n                            }\r\n                            dateList.push(componentrow.label)\r\n                        }\r\n\r\n                        else {\r\n                            sampleRegistration[\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                selectedRecord[componentrow.label] : \"\"\r\n\r\n                            sampleRegistration[\"jsonuidata\"][componentrow.label] = sampleRegistration[\"jsondata\"][componentrow.label]\r\n                        }\r\n                    })\r\n                    return sampleRegistration;\r\n\r\n                }\r\n                else {\r\n                    if (component.inputtype === \"combo\" || component.inputtype === \"predefineddropdown\") {\r\n                        if (component.inputtype === \"predefineddropdown\") {\r\n                            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                {\r\n                                    value: selectedRecord[component.label].value,\r\n                                    label: selectedRecord[component.label].label,\r\n                                    // pkey: component.valuemember,\r\n                                    // nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                    // source: component.source,\r\n                                    // [component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]:  operation === \"update\"?\r\n                                    // selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                    //     selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    //         :\r\n                                    //         selectedRecord[component.label].item? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: \r\n                                    //         selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]?  selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    //         :  selectedRecord[component.label].vale\r\n\r\n                                } : -1\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                {\r\n                                    value: selectedRecord[component.label].value,\r\n                                    label: selectedRecord[component.label].label,\r\n                                    pkey: component.valuemember,\r\n                                    nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                    source: component.source,\r\n                                    [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ?\r\n                                        selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                            selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                        :\r\n                                        selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                            selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] ? selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                                : selectedRecord[component.label].value\r\n\r\n                                } : -1\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label].label : \"\";\r\n\r\n                        }\r\n                        if (component.name === 'manualorderid') {\r\n                            sampleRegistration[\"jsondata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'] ?\r\n                                sampleRegistration[\"jsondata\"]['spatientid'] : selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spatientid'] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"]['spatientid'] = sampleRegistration[\"jsondata\"]['spatientid'];\r\n\r\n                            if (operation === 'update') {\r\n                                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[\"Patient Permanent Address\"] ? selectedRecord[\"Patient Permanent Address\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[\"Patient Current Address\"] ? selectedRecord[\"Patient Current Address\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[\"External Id\"] ? selectedRecord[\"External Id\"] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[\"Patient Passport No\"] ? selectedRecord[\"Patient Passport No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[\"Patient Phone No\"] ? selectedRecord[\"Patient Phone No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[\"Institution Code'\"] ? selectedRecord[\"Institution Code'\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[\"District/City\"] ? selectedRecord[\"District/City\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[\"Submitter Phone No\"] ? selectedRecord[\"Submitter Phone No\"] : \"\";\r\n                                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No'];\r\n\r\n                            }\r\n                            else {\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Permanent Address'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spermanentadd'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Permanent Address'] = sampleRegistration[\"jsondata\"]['Patient Permanent Address']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Current Address'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['scurrentadd'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Current Address'] = sampleRegistration[\"jsondata\"]['Patient Current Address']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['External Id'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sexternalid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['External Id'] = sampleRegistration[\"jsondata\"]['External Id'];\r\n\r\n                                sampleRegistration[\"jsondata\"]['OrderIdData'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sexternalorderid'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['OrderIdData'] = sampleRegistration[\"jsondata\"]['OrderIdData'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['OrderCodeData'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['nexternalordercode'] : \"\";\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['OrderCodeData'] = sampleRegistration[\"jsondata\"]['OrderCodeData'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Passport No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['spassportno'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Passport No'] = sampleRegistration[\"jsondata\"]['Patient Passport No']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Patient Phone No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sphoneno'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Patient Phone No'] = sampleRegistration[\"jsondata\"]['Patient Phone No']\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Institution Code'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sinstitutioncode'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Institution Code'] = sampleRegistration[\"jsondata\"]['Institution Code']\r\n\r\n                                sampleRegistration[\"jsondata\"]['District/City'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['sinsdistrictcity'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['District/City'] = sampleRegistration[\"jsondata\"]['District/City'];\r\n\r\n\r\n                                sampleRegistration[\"jsondata\"]['Submitter Phone No'] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label].item['jsondata']['submittertelephone'] : \"\"\r\n\r\n                                sampleRegistration[\"jsonuidata\"]['Submitter Phone No'] = sampleRegistration[\"jsondata\"]['Submitter Phone No']\r\n\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (component.inputtype === \"date\") {\r\n                        if (component.mandatory) {\r\n                            console.log(typeof selectedRecord[component.label] === \"object\")\r\n                            sampleRegistration[\"jsondata\"][component.label] = typeof selectedRecord[component.label] === \"object\" ?\r\n\r\n                                convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                (typeof selectedRecord[component.label] === \"number\") ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo) :\r\n                                    selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        } else {\r\n                            sampleRegistration[\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                typeof selectedRecord[component.label] === \"object\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : new Date(), userInfo) :\r\n                                    typeof selectedRecord[component.label] === \"number\" ?\r\n                                        convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                            new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n\r\n                                        : selectedRecord[component.label] ?\r\n                                            selectedRecord[component.label] : \"\" :\r\n                                selectedRecord[component.label] ? typeof selectedRecord[component.label] === \"object\" ? convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : new Date(), userInfo) : typeof selectedRecord[component.label] === \"number\" ?\r\n                                    convertDateTimetoStringDBFormat(selectedRecord[component.label] ?\r\n                                        new Date(selectedRecord[component.label]) : new Date(), userInfo)\r\n                                    : selectedRecord[component.label] ?\r\n                                        selectedRecord[component.label] : \"\" : \"\";\r\n\r\n                            sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                        }\r\n                        if (component.timezone) {\r\n                            sampleRegistration[\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                            sampleRegistration[\"jsonuidata\"][`tz${component.label}`] = sampleRegistration[\"jsondata\"][`tz${component.label}`]\r\n                        }\r\n                        dateList.push(component.label)\r\n                    }\r\n                    else {\r\n                        sampleRegistration[\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                            selectedRecord[component.label] : \"\"\r\n\r\n                        sampleRegistration[\"jsonuidata\"][component.label] = sampleRegistration[\"jsondata\"][component.label]\r\n                    }\r\n                    return sampleRegistration;\r\n                }\r\n            }\r\n            )\r\n        })\r\n    })\r\n\r\n    if (masterData.RealSampleTypeValue.nsampletypecode === SampleType.PRODUCT && selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata) {\r\n        sampleRegistration[\"jsondata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:''\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordertypecode'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode ? selectedRecord['Plant Order'].item.jsondata.nexternalordertypecode : selectedRecord&&selectedRecord.nexternalordertypecode?selectedRecord.nexternalordertypecode:''\r\n        sampleRegistration[\"jsondata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord&&selectedRecord.sexternalordertypename?selectedRecord.sexternalordertypename:''\r\n        sampleRegistration[\"jsonuidata\"]['sexternalordertypename'] = selectedRecord['Plant Order'] && selectedRecord['Plant Order'].item && selectedRecord['Plant Order'].item.jsondata.sexternalordertypename ? selectedRecord['Plant Order'].item.jsondata.sexternalordertypename : selectedRecord&&selectedRecord.sexternalordertypename?selectedRecord.sexternalordertypename:''\r\n\r\n        sampleRegistration[\"jsondata\"]['externalorderid'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label)||''\r\n        sampleRegistration[\"jsonuidata\"]['externalorderid'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].label)||''\r\n        sampleRegistration[\"jsondata\"]['nexternalordercode'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value)||''\r\n        sampleRegistration[\"jsonuidata\"]['nexternalordercode'] = (selectedRecord['Plant Order'] && selectedRecord['Plant Order'].value)||''\r\n       \r\n    }\r\n    sampleRegistration[\"jsondata\"]['SchedulerSite']= (selectedRecord['SchedulerSite'] && {\r\n        'label':selectedRecord['SchedulerSite'].label,\r\n        'value':selectedRecord['SchedulerSite'].value,\r\n        'source':'site',\r\n        'nsitecode':selectedRecord['SchedulerSite'].value,\r\n        'pkey':'nsitecode'\r\n    })||''\r\n\r\n    sampleRegistration[\"jsondata\"]['SchedulerMaster']= (selectedRecord['SchedulerMaster'] && {\r\n        'label':selectedRecord['SchedulerMaster']&&selectedRecord['SchedulerMaster'].label ||'NA',\r\n        'value':selectedRecord['SchedulerMaster'] && selectedRecord['SchedulerMaster'].value || -1,\r\n        'source':'schedulemaster',\r\n        'nschedulecode':selectedRecord['SchedulerMaster'] && selectedRecord['SchedulerMaster'].value || -1,\r\n        'pkey':'nschedulecode'\r\n    })||''\r\n\r\n    sampleRegistration[\"jsonuidata\"]['SchedulerSite']=(selectedRecord['SchedulerSite'] &&  selectedRecord['SchedulerSite'].label )||''\r\n    sampleRegistration[\"jsonuidata\"]['SchedulerMaster']=(selectedRecord['SchedulerMaster'] &&  selectedRecord['SchedulerMaster'].label )||'NA';\r\n    const param = { sampleRegistration, dateList }\r\n    return param;\r\n}"]},"metadata":{},"sourceType":"module"}