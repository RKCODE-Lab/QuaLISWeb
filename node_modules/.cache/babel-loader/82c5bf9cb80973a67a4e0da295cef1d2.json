{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{injectIntl}from'react-intl';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{getControlMap,constructOptionList,copyText,convertDateTimetoStringDBFormat}from'../../components/CommonScript';import{connect}from'react-redux';import{Alert,Button,Card,Col,Form,Row}from'react-bootstrap';import{ListWrapper}from'../../components/client-group.styles';//import FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport{stringOperatorData,numericOperatorData,dateConditionData}from'../dashboard/SqlBuilderFilterType';import FormInput from'../../components/form-input/form-input.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCopy,faMinus,faPlus}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import ReactJson from\"react-json-view\";import{sendRequest,getQualisFormsFields,getQualisForms,getCustomQuery,getCustomQueryName,updateStore}from\"../../actions\";import{ContentPanel}from'../../components/App.styles';import{DEFAULT_RETURN}from'../../actions/LoginTypes';//import APIConsole from \"./APIConsole\"\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var APIService=/*#__PURE__*/function(_React$Component){_inherits(APIService,_React$Component);var _super=_createSuper(APIService);function APIService(props){var _this;_classCallCheck(this,APIService);_this=_super.call(this,props);//  this.console = React.createRef();\n_this.onInputOnChange=function(event,value,variant){if(event.target.type===\"checkbox\"){var constructApiData=_this.state.constructApiData;var selectedRecord=_this.state.selectedRecord;// selectedRecord['check'] = label\n// constructApiData={...constructApiData,[variant.item.scolumn]:\"\"}\nvar value1=selectedRecord[event.target.name];if(value1!==''&&value1!==undefined){if(value1.toLowerCase().includes(value.toLowerCase())){var index=value1.toLowerCase().indexOf(value.toLowerCase());delete constructApiData[variant.item.scolumn];if(index!==-1){if(index===0){var indexcomma=value1.indexOf(\",\");if(indexcomma!==-1){selectedRecord[event.target.name]=value1.slice(indexcomma+1);}else{selectedRecord[event.target.name]=\"\";}}else{if(value1.slice(index).indexOf(\",\")!==-1){selectedRecord[event.target.name]=value1.slice(0,index)+value1.slice(index+value1.slice(index).indexOf(\",\")+1);}else{selectedRecord[event.target.name]=value1.slice(0,index-1);}}}}else{selectedRecord[event.target.name]=value1+','+value;constructApiData=[].concat(_toConsumableArray(constructApiData),[_defineProperty({},variant.item.scolumn,\"\")]);}}else{selectedRecord[event.target.name]=value1+','+value;constructApiData=[].concat(_toConsumableArray(constructApiData),[_defineProperty({},variant.item.scolumn,\"\")]);}_this.setState({selectedRecord:selectedRecord,constructApiData:constructApiData,constructApiDataString:constructApiData.map(function(e){return JSON.stringify(e).replace(/{|}/g,'');}).join(',\\n')});}else{// const selectedRecord = this.state.selectedRecord;\nvar text=event.target.value.replaceAll('\\n','');text=text.replace(/\\s+/g,'');var constructApiData1=JSON.parse(text);var _constructApiData=Object.keys(constructApiData1).map(function(x){return _defineProperty({},x,constructApiData1[x]);});_this.setState({constructApiData:_constructApiData,constructApiDataString:_constructApiData.map(function(e){return JSON.stringify(e).replace(/{|}/g,'');}).join(',\\n')});}};_this.onComboChange=function(event,colunName){var selectedRecord=_this.state.selectedRecord;var oldValue=_objectSpread({},selectedRecord[colunName]);selectedRecord[colunName]=event;var map1=new Map();map1['userinfo']=_this.props.Login.userInfo;map1['selectedRecord']=selectedRecord;map1['masterData']=_this.props.Login.masterData;map1['constructApiData']=_this.state.constructApiData;if(colunName==='napiservicecode'){if(selectedRecord.napiservicecode.value===24){_this.props.getCustomQuery(map1);}else{var Parameters=_this.state.parameterValue||undefined;map1['Parameters']=Parameters;_this.props.getQualisForms(map1);}// }\n// this.setState({ selectedRecord })\n}else if(colunName==='nsqlquerycode'){_this.props.getCustomQueryName(map1);}else{if(oldValue&&oldValue.value!==event.value){_this.props.getQualisFormsFields(map1);}}//  this.setState({ selectedRecord })\n};_this.checkFilter=function(filterList){var check=[];filterList.map(function(item,index){if(item.filterColumn){if(item.filterCondition){if(item.filterColumn.item.columndatatype==='string'||item.filterColumn.item.columndatatype==='character varying'||item.filterColumn.item.columndatatype==='character'){if(item.filterCondition.value==='='||item.filterCondition.value==='IN'||item.filterCondition.value==='NOT'){if(item.filterValue&&item.filterValue!==\"\"){check.push(true);}}else{if(item.filterCondition){check.push(true);}}}else if(item.filterColumn.item.columndatatype==='numeric'||item.filterColumn.item.columndatatype==='integer'||item.filterColumn.item.columndatatype==='smallint'||item.filterColumn.item.columndatatype==='bigint'){if(item.filterCondition.value==='='||item.filterCondition.value==='!='||item.filterCondition.value==='>'||item.filterCondition.value==='<'||item.filterCondition.value==='>='||item.filterCondition.value==='<='){if(item.filterValue&&item.filterValue!==\"\"){check.push(true);}}else{if(item.filterCondition){check.push(true);}}}else if(item.filterColumn.item.columndatatype==='date'||item.filterColumn.item.columndatatype==='timestamp without time zone'){if(item.filterCondition.value==='='||item.filterCondition.value==='NOT'){if(item.filterValue&&item.filterValue!==\"\"){check.push(true);}}else{if(item.filterCondition){check.push(true);}}}}}});return check.length===filterList.length?true:false;};_this.onMoreClick=function(e){var selectedRecord=_this.state.selectedRecord||{};if(_this.checkFilter(selectedRecord['filterNew']||[])){if(_this.props.Login.masterData.SelectedForm){if(selectedRecord['filterNew']===undefined){selectedRecord['filterNew']=[];}selectedRecord['filterNew'][selectedRecord['filterNew'].length]={};var lstQryColumn=_this.removeSameRecordFromTwoDifferentArrays(_this.state.lstQueryBuilder,selectedRecord['filterNew']);if(lstQryColumn.length>0){_this.setState({selectedRecord:selectedRecord,lstQryColumn:lstQryColumn});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_COLUMNSNOTAVALIABLE\"}));}}else if(_this.props.Login.masterData.Columns){if(selectedRecord['filterNew']===undefined){selectedRecord['filterNew']=[];}selectedRecord['filterNew'][selectedRecord['filterNew'].length]={};var _lstQryColumn=_this.removeSameRecordFromTwoDifferentArrays(_this.state.lstQueryBuilder,selectedRecord['filterNew']);if(_lstQryColumn.length>0){_this.setState({selectedRecord:selectedRecord,lstQryColumn:_lstQryColumn});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_COLUMNSNOTAVALIABLE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTHEFORM\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASEFILLTHEVALUE\"}));}};_this.onFilterInputOnChange=function(event,index){var selectedRecord=_this.state.selectedRecord||{};//  const constructApiData = this.state.constructApiData\nvar filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);//ALPD-3801\nvar copyfiltertableaddedlist=_toConsumableArray(selectedRecord['filterNew']);var change=_objectSpread(_objectSpread({},filterTableNewAddedList[index]),{},_defineProperty({},event.target.name,event.target.value));var changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(copyfiltertableaddedlist.splice(index+1)));// const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n// if (index1 === -1) {\n//     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\n// } else {\n//     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\n// }\n_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:changeData})});};_this.onFilterNumericInputChange=function(value,name,index){var selectedRecord=_this.state.selectedRecord||{};//   const constructApiData = this.state.constructApiData\nvar filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);//ALPD-3801\nvar copyfilterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);var change=_objectSpread(_objectSpread({},filterTableNewAddedList[index]),{},_defineProperty({},name,value));// constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterValue })\n// const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n// if (index1 === -1) {\n//     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\n// } else {\n//     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\n// }\nvar changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(copyfilterTableNewAddedList.splice(index+1)));_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:changeData})});};_this.handleDateChange=function(columnLabel,value,index){var selectedRecord=_this.state.selectedRecord||{};// const constructApiData = this.state.constructApiData\nvar filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);var change=_objectSpread(_objectSpread({},filterTableNewAddedList[index]),{},_defineProperty({},columnLabel,value));// const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n// if (index1 === -1) {\n//     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\n// } else {\n//     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\n// }\nvar changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(filterTableNewAddedList.splice(index+1)));_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:changeData})});};_this.onfilterChange=function(comboValue,columnLabel,conditionType,index){var selectedRecord=_this.state.selectedRecord;if(conditionType==='column'){var _objectSpread5;var filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);//ALPD-3801\nvar copyfiltertableaddedlist=_toConsumableArray(selectedRecord['filterNew']);var change=_objectSpread(_objectSpread({},filterTableNewAddedList[index]),{},(_objectSpread5={},_defineProperty(_objectSpread5,columnLabel,comboValue),_defineProperty(_objectSpread5,\"filterCondition\",undefined),_defineProperty(_objectSpread5,\"filterValueType\",undefined),_defineProperty(_objectSpread5,\"filterValue\",undefined),_objectSpread5));var changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(copyfiltertableaddedlist.splice(index+1)));_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:changeData})});}else if(conditionType==='condition'){var _filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);//ALPD-3801\nvar _copyfiltertableaddedlist=_toConsumableArray(selectedRecord['filterNew']);var _change=_objectSpread(_objectSpread({},_filterTableNewAddedList[index]),{},_defineProperty({},columnLabel,comboValue));var _changeData=[].concat(_toConsumableArray(_filterTableNewAddedList.splice(0,index)),[_objectSpread(_objectSpread({},_change),{},{filterValue:undefined})],_toConsumableArray(_copyfiltertableaddedlist.splice(index+1)));// let constructApiData = this.state.constructApiData\n// if (change[\"filterCondition\"].value === 'IS NULL' ||\n//     change[\"filterCondition\"].value === 'IS NOT NULL' ||\n//     change[\"filterCondition\"].value === 'PRESENT' ||\n//     change[\"filterCondition\"].value === 'BLANK' ||\n//     change[\"filterCondition\"].value !== 'NULL' ||\n//     change[\"filterCondition\"].value !== 'NOT NULL' ||\n//     change[\"filterCondition\"].value === 'IN') {\n//     // constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value })\n//     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n//     if (index1 === -1) {\n//         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value })\n//     } else {\n//         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value }\n//     }\n// }\n// else if(change[\"filterColumn\"].item.columndatatype === 'date'&& \n// (change.filterCondition.value === '=' || change.filterCondition.value === '<' \n// || change.filterCondition.value === '>')){\n//     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n//     if (index1 === -1) {\n//         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\" })\n//     } else {\n//         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\"  }\n//     }\n// }\n// else if(change[\"filterColumn\"].item.columndatatype === 'date'&& \n//  (item.filterCondition.value === 'NOT')){\n//     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n//     if (index1 === -1) {\n//         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\" })\n//     } else {\n//         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\"  }\n//     }\n// }\n_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:_changeData})});}};_this.onFilterModalDelete=function(childIndex){// let constructApiData1 = [{ ...this.state.constructApiData[0] }, { ...this.state.constructApiData[1] }]\n// let constructApiData2 = [...this.state.constructApiData]\n// constructApiData2 = constructApiData2.splice(2)\n// constructApiData2 = constructApiData2.splice(0, childIndex)\n// let constructApiData3 = [...this.state.constructApiData]\n// constructApiData3 = constructApiData3.splice(2)\n// constructApiData3 = constructApiData3.splice(childIndex + 1)\nvar selectedRecord=_this.state.selectedRecord;selectedRecord['filterNew']=[].concat(_toConsumableArray(selectedRecord['filterNew'].slice(0,childIndex)),_toConsumableArray(selectedRecord['filterNew'].slice(childIndex+1)));// constructApiData1 = [...constructApiData1, ...constructApiData2, ...constructApiData3]\n_this.setState({selectedRecord:selectedRecord});};_this.filterQueryFormation=function(selectedRecord){var str=\"\";var strform=\"\";selectedRecord['filterNew']&&selectedRecord['filterNew'].length>0&&selectedRecord['filterNew'].map(function(item,index){if(item.filterCondition){if(item.filterCondition.value==='IN'){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+\" ('\"+(item.filterValue?item.filterValue:\"\")+\"') \";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" \"+item.filterCondition.value+\" ('\"+(item.filterValue?item.filterValue:\"\")+\"')\";}}else if(item.filterCondition.value==='PRESENT'){if(item.filterColumn.item.scolumn!=undefined){str=str+\" NOT \"+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" ='' \";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" ='' \";}}else if(item.filterCondition.value==='BLANK'){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" ='' \";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" ='' \";}}else if(item.filterCondition.value==='NULL'||item.filterCondition.value==='NOT NULL'){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" IS \"+item.filterCondition.value+\" \";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" IS \"+item.filterCondition.value+\" \";}}else if(item.filterCondition.value==='IS NULL'){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+\" \";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" \"+item.filterCondition.value+\" \";}}else if(item.filterCondition.value==='IS NOT NULL'){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+\" \";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" \"+item.filterCondition.value+\" \";}}else if(item.filterCondition.value==='STARTS WITH'){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\"ILIKE\"+\" '\"+(item.filterValue?item.filterValue:\"\")+\"%' collate \\\"default\\\"\";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" ILIKE \"+\" '\"+(item.filterValue?item.filterValue:\"\")+\"%' collate \\\"default\\\"\";}}else if(item.filterCondition.value==='ENDS WITH'){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\"ILIKE\"+\" '%\"+(item.filterValue?item.filterValue:\"\")+\"' collate \\\"default\\\"\";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" ILIKE\"+\" '%\"+(item.filterValue?item.filterValue:\"\")+\"' collate \\\"default\\\"\";}}else if(item.filterCondition.value==='CONTAINS'){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\"ILIKE\"+\" '\"+(item.filterValue?item.filterValue:\"\")+\"%' collate \\\"default\\\"\";}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" ILIKE\"+\" '\"+(item.filterValue?item.filterValue:\"\")+\"%' collate \\\"default\\\"\";}}else if((item.filterColumn.item.columndatatype==='date'||item.filterColumn.item.columndatatype==='timestamp without time zone')&&(item.filterCondition.value==='='||item.filterCondition.value==='<'||item.filterCondition.value==='>')){if(item.filterColumn.item.scolumn!=undefined){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+(\"'\"+(item.filterValue?convertDateTimetoStringDBFormat(item.filterValue,_this.props.Login.userInfo):convertDateTimetoStringDBFormat(new Date(),_this.props.Login.userInfo))+\"' \");}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" \"+item.filterCondition.value+(\"'\"+(item.filterValue?convertDateTimetoStringDBFormat(item.filterValue,_this.props.Login.userInfo):convertDateTimetoStringDBFormat(new Date(),_this.props.Login.userInfo))+\"' \");}}else if(item.filterColumn.item.columndatatype==='date'&&item.filterCondition.value==='NOT'||item.filterColumn.item.columndatatype==='timestamp without time zone'&&item.filterCondition.value==='NOT'){if(item.filterColumn.item.scolumn!=undefined){str=str+\"(NOT \"+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" = \"+(\"'\"+(item.filterValue?convertDateTimetoStringDBFormat(item.filterValue,_this.props.Login.userInfo):convertDateTimetoStringDBFormat(new Date(),_this.props.Login.userInfo))+\"')\");}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" = \"+(\"'\"+(item.filterValue?convertDateTimetoStringDBFormat(item.filterValue,_this.props.Login.userInfo):convertDateTimetoStringDBFormat(new Date(),_this.props.Login.userInfo))+\"')\");}}else if((item.filterColumn.item.columndatatype==='string'||item.filterColumn.item.columndatatype==='character varying')&&item.filterCondition.value==='NOT'){if(item.filterColumn.item.scolumn!=undefined){str=str+\"(NOT \"+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" = \"+(\"'\"+item.filterValue?item.filterValue:\"\"+\"')\");}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" = \"+(\"'\"+item.filterValue?item.filterValue:\"\"+\"')\");}}else if(item.filterColumn.item.columndatatype==='character varying'&&(item.filterCondition.value==='LIKE'||item.filterCondition.value==='NOT LIKE')){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" \"+item.filterCondition.value+\" \"+\" '\"+(item.filterValue?item.filterValue:\"\")+\"%' collate \\\"default\\\"\";}else{if(item.filterColumn.item.scolumn!=undefined){str=str+\" \"+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+(\"'\"+(item.filterValue?item.filterValue:\"\")+\"' \");}else if(item.filterColumn.item.scolumndisplayname!=undefined){str=str+(\"\\\"\"+item.filterColumn.item.scolumndisplayname+\"\\\"\")+\" \"+item.filterCondition.value+(\"'\"+(item.filterValue?item.filterValue:\"\")+\"' \");}}if(index!==selectedRecord['filterNew'].length-1){str=str+\" and \";}}//   })\n});strform=strform+\"\"+str;return strform;};_this.copyToClipboard=function(){copyText(_this.copyParameter());// toast.info(this.props.intl.formatMessage({ id: \"IDS_COPIEDSUCCESSFULLY\" }))\n};_this.sendRequest=function(){var selectedRecord=_this.state.selectedRecord;if(_this.props.Login.masterData.SelectedApi){if(_this.props.Login.masterData.SelectedApi.value>2&&_this.props.Login.masterData.SelectedApi.value<24){var url=_this.props.Login.masterData.SelectedApi.item.sapiservice;var obj=_this.sendObject();var obj1={\"inputData\":obj,url:url,masterData:_this.props.Login.masterData,\"userinfo\":_this.props.Login.userInfo,selectedRecord:selectedRecord};_this.props.sendRequest(obj1);}//ALPD-3801--Alert thrown when parameter is emtpty.\nelse if(_this.props.Login.masterData.SelectedApi.value===24&&_this.props.Login.masterData.SelectedSQLQuery){if(selectedRecord.nsqlquerycode!=undefined){var parametersname=[];var hasEmptyValue=false;if(_this.state.parameterValue!==undefined){hasEmptyValue=_this.state.parameterValue.map(function(item,index){var values=[];if(_this.state.selectedRecord&&_this.state.selectedRecord[\"ParamValue\"]&&_this.state.selectedRecord[\"ParamValue\"][index]){//ALPD-3801-When Parameter is empty isEmpty is true \nvar isEmpty=_this.state.selectedRecord[\"ParamValue\"][index][item]==='';if(isEmpty){parametersname.push(item);}return isEmpty;}parametersname.push(item);return true;});console.log(hasEmptyValue);}if(!hasEmptyValue.includes(true)){var _url=\"apiservice/getSQLQueryData\";var sqlquery=selectedRecord.nsqlquerycode.item.ssqlquery.trim();var _obj=_this.sendObject();var _obj2={\"inputData\":_obj,url:_url,masterData:_this.props.Login.masterData,\"userinfo\":_this.props.Login.userInfo,selectedRecord:selectedRecord,sqlquery:sqlquery,\"parameters\":_this.state.selectedRecord.ParamValue&&_this.state.selectedRecord.ParamValue.length>0?_this.state.selectedRecord.ParamValue:[]||[]};_this.props.sendRequest(_obj2);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASEFILLTHEPARAM\"})+\" (\"+parametersname.map(function(item){return item;}).join(\",\")+\") \");}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTHEQUERYNAME\"}));}}else if(_this.props.Login.masterData.SelectedForm){var _url2=_this.props.Login.masterData.SelectedApi.item.sapiservice;var _obj3=_this.sendObject();var _obj4={\"inputData\":_obj3,url:_url2,masterData:_this.props.Login.masterData,\"userinfo\":_this.props.Login.userInfo,selectedRecord:selectedRecord};_this.props.sendRequest(_obj4);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTHEFORM\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTHEAPI\"}));}};_this.removeSameRecordFromTwoDifferentArrays=function(firstArray,secondArray){var filterArray=[];if(Array.isArray(secondArray)&&secondArray.length>0){secondArray.map(function(x,index1){firstArray.map(function(y){if(x.filterColumn){if(x.filterColumn.item.scolumndisplayname===y.item.scolumndisplayname){var index=firstArray.findIndex(function(x1){return x1.item.scolumndisplayname===y.item.scolumndisplayname;});var firstArray1=_toConsumableArray(firstArray);firstArray1=_toConsumableArray(firstArray1.splice(0,index));var firstArray2=_toConsumableArray(firstArray);firstArray2=_toConsumableArray(firstArray2.splice(index+1));filterArray=[].concat(_toConsumableArray(firstArray1),_toConsumableArray(firstArray2));firstArray=_toConsumableArray(filterArray);}else if(x.filterColumn.item.scolumndisplayname===y.item.scolumndisplayname){var _index=firstArray.findIndex(function(x1){return x1.item.scolumndisplayname===y.item.scolumndisplayname;});var _firstArray=_toConsumableArray(firstArray);_firstArray=_toConsumableArray(_firstArray.splice(0,_index));var _firstArray2=_toConsumableArray(firstArray);_firstArray2=_toConsumableArray(_firstArray2.splice(_index+1));filterArray=[].concat(_toConsumableArray(_firstArray),_toConsumableArray(_firstArray2));firstArray=_toConsumableArray(filterArray);}}else{if(index1===0){filterArray=_toConsumableArray(firstArray);}}});});}else{filterArray=_toConsumableArray(firstArray);}return filterArray;};_this.onInputOnChangeParam=function(event,index){var selectedRecord=_this.state.selectedRecord||{};var filterParamList=_toConsumableArray(_this.state.parameterValue);var filterTableNewAddedList=[];if(selectedRecord['ParamValue']!==undefined){filterTableNewAddedList=_toConsumableArray(selectedRecord['ParamValue']);}var change=_defineProperty({},filterParamList[index],event.target.value);var changeData=[];if(selectedRecord['ParamValue']!==undefined){var paramerAddedList=[];paramerAddedList=_toConsumableArray(selectedRecord['ParamValue']);changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(paramerAddedList.splice(index+1)));}else{changeData=[_objectSpread({},change)];}_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{ParamValue:changeData})});// this.setState({selectedRecord});\n};_this.showQueryParameter=function(){//   let newObject = {}\nvar returnString=\"{\";//    let param;\nif(_this.state&&_this.state.selectedRecord&&_this.state.selectedRecord.napiservicecode&&_this.state.selectedRecord.napiservicecode.value<3){if(_this.state&&_this.state.constructApiData.length>0){_this.state.constructApiData.map(function(e,index){if(index<2){returnString=returnString+\" \\n \\\"\"+Object.keys(e)+\"\\\":\\\"\"+Object.values(e)+\"\\\"\";}});var text=_this.filterQueryFormation(_this.state.selectedRecord);returnString=returnString+\"\\n\"+\" \\\"whereCondition\\\":\\\"\"+text+\"\\\"\\n}\";}else{returnString=returnString+\"\\n}\";}}else if(_this.state&&_this.state.selectedRecord&&_this.state.selectedRecord.napiservicecode&&_this.state.selectedRecord.napiservicecode.value==24){if(_this.state&&_this.state.constructApiData.length>0){_this.state.constructApiData.map(function(e,index){if(index<_this.state.constructApiData.length){returnString=returnString+\"\\n \\\"\"+Object.keys(e)+\"\\\":\\\"\"+Object.values(e)+\"\\\"\";}});var _text=_this.filterQueryFormation(_this.state.selectedRecord);//ALPD-3801--Parameters Displaying in ShowQueryParam \nif(_this.state.parameterValue&&_this.state.parameterValue.length>0){_this.state.parameterValue.map(function(item,index){//  param =\"\\n\" +this.state.parameterValue[index]+\"\\\":\\\"\" +this.state.selectedRecord[this.state.parameterValue[index]]!==undefined?this.state.selectedRecord[this.state.parameterValue[index]] :\"\";\n// returnString = returnString + \"\\n \\\"\" + this.state.parameterValue[index] +\"\\\":\\\"\" + Object.values(e) + \"\\\"\"\nreturnString=returnString+(\"\\n \\\"\"+_this.state.parameterValue[index]+\"\\\":\\\"\")+(_this.state.selectedRecord[\"ParamValue\"]&&_this.state.selectedRecord[\"ParamValue\"][index]!==undefined?_this.state.selectedRecord[\"ParamValue\"][index][item]!=undefined?_this.state.selectedRecord[\"ParamValue\"][index][item]+\" \\\"\":\" \\\"\":\" \\\"\");});}returnString=returnString+\"\\n\"+\" \\\"whereCondition\\\":\\\"\"+_text+\"\\\"\\n}\";}else{returnString=returnString+\"\\n}\";}}else if(_this.props.Login){returnString=returnString+\"\\\"userinfo\\\":\";var userinfo=JSON.stringify(_this.props.Login.userInfo);returnString=returnString+userinfo+\"}\";}return returnString;};_this.copyParameter=function(){var newObject={};if(_this.state&&_this.state.selectedRecord&&_this.state.selectedRecord.napiservicecode&&_this.state.selectedRecord.napiservicecode.value<3){if(_this.state&&_this.state.constructApiData.length>0){toast.info(_this.props.intl.formatMessage({id:\"IDS_COPIEDSUCCESSFULLY\"}));_this.state.constructApiData.map(function(e,index){if(index<2){newObject=_objectSpread(_objectSpread({},newObject),e);}});var text=_this.filterQueryFormation(_this.state.selectedRecord);var object=_objectSpread(_objectSpread({},newObject),{},{\"whereCondition\":text});return JSON.stringify(object);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_QUERYISEMPTY\"}));}}else if(_this.props.Login&&_this.props.Login.userInfo){var parametersname=[];var hasEmptyValue=[];if(!_this.state.parameterValue!==undefined){hasEmptyValue.push(false);}if(_this.state.parameterValue!==undefined){hasEmptyValue=_this.state.parameterValue.map(function(item,index){// let isEmpty=[];\nif(_this.state.selectedRecord&&_this.state.selectedRecord[\"ParamValue\"]&&_this.state.selectedRecord[\"ParamValue\"][index]){//values.push(this.state.selectedRecord[\"ParamValue\"][index][item]||'');\nvar isEmpty=_this.state.selectedRecord[\"ParamValue\"][index][item]==='';//const isEmpty = values.some(value => value === '');\nif(isEmpty){parametersname.push(item);}return isEmpty;}parametersname.push(item);return true;});console.log(hasEmptyValue);}if(!hasEmptyValue.includes(true)){toast.info(_this.props.intl.formatMessage({id:\"IDS_COPIEDSUCCESSFULLY\"}));var _object={\"userinfo\":_this.props.Login.userInfo};return JSON.stringify(_object);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASEFILLTHEPARAM\"})+\" (\"+parametersname.map(function(item){return item;}).join(\",\")+\") \");}}};_this.sendObject=function(){var newObject={};_this.state.constructApiData.map(function(e){newObject=_objectSpread(_objectSpread({},newObject),e);});var text=_this.filterQueryFormation(_this.state.selectedRecord);var object=_objectSpread(_objectSpread({},newObject),{},{\"whereCondition\":text});return object;};_this.state={selectedRecord:{},constructApiData:[],consoleData:[],controlMap:{},userRoleControlRights:[],masterStatus:\"\",error:\"\"};return _this;}_createClass(APIService,[{key:\"render\",value:function render(){var _this2=this;// console.log(\"ParamValue\",this.state.selectedRecord.ParamValue);\nreturn/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content pb-0\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:5,className:\"pr-3\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"napiservicecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_API\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.apiServiceList||[],value:this.props.Login.masterData.SelectedApi&&this.props.Login.masterData.SelectedApi,isMandatory:true,isClearable:false,isMulti:false,isSearchable:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.onComboChange(event,'napiservicecode');}})),/*#__PURE__*/React.createElement(Col,{md:1},/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(e){return _this2.sendRequest();}},this.props.intl.formatMessage({id:\"IDS_SEND\"})))),this.props.Login.masterData&&this.props.Login.masterData.SelectedApi&&(this.props.Login.masterData.SelectedApi.value<3||this.props.Login.masterData.SelectedApi.value>24)?/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nformcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_FORMS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.qualisList||[],value:this.props.Login.masterData.SelectedForm&&this.props.Login.masterData.SelectedForm,isMandatory:true,isClearable:false,isMulti:false,isSearchable:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.onComboChange(event,'nformcode');}}))):\"\",this.props.Login.masterData&&this.props.Login.masterData.SelectedApi&&this.props.Login.masterData.SelectedApi.value===24?/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsqlquerycode\",formLabel:this.props.intl.formatMessage({id:\"IDS_QUERYNAME\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.queryList||[],value:this.state.selectedRecord[\"nsqlquerycode\"]&&this.state.selectedRecord[\"nsqlquerycode\"]||\"\",isMandatory:true,isClearable:false,isMulti:false,isSearchable:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.onComboChange(event,'nsqlquerycode');}}))):\"\",/*#__PURE__*/React.createElement(Card,{className:\"api-filter-condition-card\"},/*#__PURE__*/React.createElement(Card.Body,null,this.props.Login.masterData&&this.props.Login.masterData.SelectedApi&&(this.props.Login.masterData.SelectedApi.value<3||this.props.Login.masterData.SelectedApi.value>23)?/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"section\",null,this.props.Login.masterData&&this.props.Login.masterData.SelectedApi&&(this.props.Login.masterData.SelectedApi.value<3||this.props.Login.masterData.SelectedApi.value>23)&&this.props.Login.masterData.needdisplayparam?this.state.parameterValue&&this.state.parameterValue.map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:_this2.props.intl.formatMessage({id:\"IDS_PARAMETERS\"}),name:\"filterValue\",type:\"text\",placeholder:_this2.props.intl.formatMessage({id:\"IDS_PARAMETERS\"}),value:_this2.state.parameterValue[index],isMandatory:true,required:true,isDisabled:true,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(FormInput,{label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),name:\"filterValue\",type:\"text\",placeholder:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),value:_this2.state.selectedRecord['ParamValue']&&_this2.state.selectedRecord['ParamValue'][index]&&_this2.state.selectedRecord['ParamValue'][index][item]&&_this2.state.selectedRecord['ParamValue'][index][item]// Check how value should be set\n,isMandatory:true,onChange:function onChange(event){return _this2.onInputOnChangeParam(event,index);}// onInputOnChange={(e) => this.onInputOnChangeParam(e, index)}\n,required:true,maxLength:100}))));}):\"\"),/*#__PURE__*/React.createElement(\"section\",{className:'modal-card-body'},this.state.selectedRecord['filterNew']&&this.state.selectedRecord['filterNew'].map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:'field has-addons filterheight'},/*#__PURE__*/React.createElement(\"div\",{class:\"control is-expanded\"},/*#__PURE__*/React.createElement(\"div\",{class:\"select is-fullwidth\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:_this2.props.intl.formatMessage({id:\"IDS_FIELDS\"}),isSearchable:true,name:\"filterColumn\",placeholder:_this2.props.intl.formatMessage({id:\"IDS_FIELDS\"}),showOption:true,options:_this2.state.lstQryColumn||[],value:item[\"filterColumn\"]&&item[\"filterColumn\"]||\"\",onChange:function onChange(value){return _this2.onfilterChange(value,\"filterColumn\",'column',index);}}))),/*#__PURE__*/React.createElement(\"div\",{class:\"control is-expanded\"},/*#__PURE__*/React.createElement(\"div\",{class:\"select is-fullwidth\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:_this2.props.intl.formatMessage({id:\"IDS_CONDITION\"}),isSearchable:true,name:\"sviewname\",placeholder:_this2.props.intl.formatMessage({id:\"IDS_CONDITION\"}),showOption:true,options:item[\"filterColumn\"]&&item[\"filterColumn\"].item?item[\"filterColumn\"].item.columndatatype==='string'||item.filterColumn.item.columndatatype==='character varying'||item.filterColumn.item.columndatatype==='character'?stringOperatorData:item[\"filterColumn\"].item.columndatatype==='numeric'||item.filterColumn.item.columndatatype==='integer'||item.filterColumn.item.columndatatype==='smallint'||item.filterColumn.item.columndatatype==='bigint'?numericOperatorData:item[\"filterColumn\"].item.columndatatype==='date'||item[\"filterColumn\"].item.columndatatype==='timestamp without time zone'?dateConditionData:stringOperatorData:\"\",value:item[\"filterCondition\"]!==undefined?item[\"filterCondition\"]:\"\",onChange:function onChange(value){return _this2.onfilterChange(value,\"filterCondition\",'condition',index);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"control \"},item[\"filterCondition\"]&&item[\"filterCondition\"].value&&item[\"filterColumn\"]?item[\"filterColumn\"].item.columndatatype==='string'||item.filterColumn.item.columndatatype==='character varying'||item.filterColumn.item.columndatatype==='character'?item[\"filterCondition\"].value!=='IS NULL'&&item[\"filterCondition\"].value!=='IS NOT NULL'&&item[\"filterCondition\"].value!=='PRESENT'&&item[\"filterCondition\"].value!=='BLANK'?/*#__PURE__*/React.createElement(FormInput,{label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),name:\"filterValue\",type:\"text\",onChange:function onChange(event){return _this2.onFilterInputOnChange(event,index);},placeholder:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),value:item[\"filterValue\"]?item[\"filterValue\"]:\"\",isMandatory:true,required:true,maxLength:100}):\"\":item[\"filterColumn\"].item.columndatatype==='numeric'||item.filterColumn.item.columndatatype==='integer'||item.filterColumn.item.columndatatype==='smallint'||item.filterColumn.item.columndatatype==='bigint'?item[\"filterCondition\"].value!=='NULL'&&item[\"filterCondition\"].value!=='NOT NULL'?item[\"filterCondition\"].value==='IN'?/*#__PURE__*/React.createElement(FormInput,{label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),name:\"filterValue\",type:\"text\",onChange:function onChange(event){return _this2.onFilterInputOnChange(event,index);},placeholder:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),value:item[\"filterValue\"]?item[\"filterValue\"]:\"\",isMandatory:true,required:true,maxLength:100}):/*#__PURE__*/React.createElement(FormNumericInput,{name:\"filterValue\",label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),type:\"number\",value:item[\"filterValue\"],placeholder:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),strict:true//min={0}\n//max={99999999.99}\n,maxLength:10,onChange:function onChange(value){return _this2.onFilterNumericInputChange(value,\"filterValue\",index);},noStyle:true//precision={2}\n//isMandatory={true}\n,className:\"form-control\",errors:\"Please provide a valid number.\"}):\"\":item[\"filterColumn\"].item.columndatatype==='date'||item[\"filterColumn\"].item.columndatatype==='timestamp without time zone'?item[\"filterCondition\"].value==='='||item[\"filterCondition\"].value==='<'||item[\"filterCondition\"].value==='>'||item[\"filterCondition\"].value==='NOT'?/*#__PURE__*/React.createElement(DateTimePicker,{name:\"filterValue\",label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),className:\"form-control\",placeholderText:_this2.props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),selected:item[\"filterValue\"]?item[\"filterValue\"]:new Date(),dateFormat:_this2.props.Login.userInfo[\"ssitedatetime\"],timeInputLabel:_this2.props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:true,onChange:function onChange(date){return _this2.handleDateChange(\"filterValue\",date,index);},value:item[\"filterValue\"]?item[\"filterValue\"]:\"\"}):\"\":\"\":\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},_this2.state.selectedRecord['filterNew'].length>0&&/*#__PURE__*/React.createElement(Button,{className:\"button is-light is-danger\",onClick:function onClick(){return _this2.onFilterModalDelete(index);},type:\"button\",tabindex:\"0\"},/*#__PURE__*/React.createElement(\"span\",{className:\"icon\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faMinus})))));}),this.props.Login.masterData&&this.props.Login.masterData.SelectedApi&&(this.props.Login.masterData.SelectedApi.value<3||this.props.Login.masterData.SelectedApi.value>23)?/*#__PURE__*/React.createElement(\"div\",{className:'buttons is-right'},/*#__PURE__*/React.createElement(Button,{className:'button is-light is-info is-small',onClick:function onClick(e){return _this2.onMoreClick(e);},type:\"button\",tabindex:\"0\"},/*#__PURE__*/React.createElement(\"span\",{className:\"icon\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_MORE\"})))):\"\")):\"\"))),/*#__PURE__*/React.createElement(Col,{md:7},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"my-2 \"},/*#__PURE__*/React.createElement(Card.Header,{className:\"product-title-main\"},/*#__PURE__*/React.createElement(Card.Title,null,this.props.intl.formatMessage({id:\"IDS_QUERYPARAMS\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"api-card-body-scrollable-element\"},/*#__PURE__*/React.createElement(\"pre\",null,this.showQueryParameter()),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons is-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(e){return _this2.copyToClipboard();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"\",icon:faCopy}),'  ',this.props.intl.formatMessage({id:\"IDS_COPYQUERYPARAMS\"})))))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"product-title-main\"},/*#__PURE__*/React.createElement(Card.Title,null,this.props.intl.formatMessage({id:\"IDS_RESPONSE\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"api-card-body\"},/*#__PURE__*/React.createElement(ReactJson,{src:this.props.Login.masterData.consoleData&&this.props.Login.masterData.consoleData}))))))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){console.log(this.props.Login.masterData!==previousProps.Login.masterData);var _this$state=_objectSpread({},this.state),userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,apiServiceList=_this$state.apiServiceList,selectedRecord=_this$state.selectedRecord,constructApiData=_this$state.constructApiData,lstQueryBuilder=_this$state.lstQueryBuilder,qualisList=_this$state.qualisList,queryList=_this$state.queryList,paramList=_this$state.paramList,parameterValue=_this$state.parameterValue;if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);}if(this.props.Login&&this.props.Login.masterData&&this.props.Login.masterData.SelectedApi&&this.props.Login.masterData.SelectedApi.value<3){selectedRecord=_objectSpread({\"napiservicecode\":this.props.Login.masterData.SelectedApi},this.state.selectedRecord);}if(this.props.Login.masterData.lstApiService!==previousProps.Login.masterData.lstApiService){var apiServiceMap=constructOptionList(this.props.Login.masterData.lstApiService||[],\"napiservicecode\",\"sapiservicename\",\"nsorter\",\"ascending\",false);apiServiceList=apiServiceMap.get(\"OptionList\");}if(this.props.Login.masterData.lstqueryForm!==previousProps.Login.masterData.lstqueryForm){var qualisMap=constructOptionList(this.props.Login.masterData.lstqueryForm||[],\"nformcode\",\"sdisplayname\",\"nsorter\",\"ascending\",false);qualisList=qualisMap.get(\"OptionList\");// this.setState({\n//     qualisList\n// });\n}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){selectedRecord=_objectSpread(_objectSpread({},selectedRecord),this.props.Login.selectedRecord);}// if (this.props.Login.parameterValue !== previousProps.Login.parameterValue) {\n//     parameterValue={...parameterValue, \n//     ...this.props.Login.parameterValue };\n// }\nif(this.props.Login.masterData.lstSQLQuery!==previousProps.Login.masterData.lstSQLQuery){var queryMap=constructOptionList(this.props.Login.masterData.lstSQLQuery||[],\"nsqlquerycode\",\"ssqlqueryname\",\"ssqlquery\",\"nsorter\",\"ascending\",false);queryList=queryMap.get(\"OptionList\");}if(this.props.Login.masterData.Parameters!==previousProps.Login.masterData.Parameters){// const paramMap = constructOptionList(this.props.Login.masterData.Parameters || [] , this.props.Login.masterData.Parameters , \"ascending\", false);\n// paramList = paramMap.get(\"OptionList\")\nvar listParam=[];if(this.props.Login.masterData.Parameters!=undefined){listParam=this.props.Login.masterData.Parameters;parameterValue=listParam.map(function(item){return item;});}else{parameterValue=this.props.Login.masterData.Parameters;}}if(this.props.Login.masterData.SelectedForm!==previousProps.Login.masterData.SelectedForm){if(this.props.Login.masterData.SelectedForm&&this.props.Login.masterData.SelectedForm.value){constructApiData=[{\"nformcode\":this.props.Login.masterData.SelectedForm.value},{\"sformname\":this.props.Login.masterData.SelectedForm.label}];}else{constructApiData=[];}var constructData=this.props.Login.masterData.lstquerybilderColumns.map(function(item,index){return{label:item.scolumndisplayname,value:index,item:_objectSpread({},item)};});lstQueryBuilder=constructData;selectedRecord['filterNew']=[];}if(this.props.Login.masterData.SelectedApi!==previousProps.Login.masterData.SelectedApi){if(this.props.Login.masterData.SelectedApi&&this.props.Login.masterData.SelectedApi.value&&this.props.Login.masterData.SelectedApi.value===24){var constructQuery=this.props.Login.masterData.lstSQLQuery.map(function(item,index){return{label:item.ssqlqueryname,value:index,item:_objectSpread({},item)};});lstQueryBuilder=constructQuery;}}if(this.props.Login.masterData.SelectedSQLQuery!==previousProps.Login.masterData.SelectedSQLQuery){if(this.props.Login.masterData.SelectedSQLQuery&&this.props.Login.masterData.SelectedSQLQuery.value&&this.props.Login.masterData.SelectedApi.value===24){constructApiData=[{\"nsqlquerycode\":this.props.Login.masterData.SelectedSQLQuery.value},{\"ssqlqueryname\":this.props.Login.masterData.SelectedSQLQuery.label}];// if(this.props.Login.masterData.Parameters!=undefined){\n//     th   is.props.Login.masterData.Parameters.map(item=>{\n//         constructApiData.push({[item]:item})  \n//     })\n// }\n}else{constructApiData=[];}var _constructData=[];if(this.props.Login.masterData&&this.props.Login.masterData.Columns){_constructData=this.props.Login.masterData.Columns.map(function(item,index){return{label:item.scolumndisplayname,value:index,item:_objectSpread({},item)};});}else{_constructData=[];}lstQueryBuilder=_constructData;selectedRecord['filterNew']=[];}if(this.props.Login&&this.props.Login.newMap){selectedRecord['filterNew']={\"whereCondition\":this.props.Login.newMap.whereCondition};}this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,apiServiceList:apiServiceList,selectedRecord:selectedRecord,constructApiData:constructApiData,lstQueryBuilder:lstQueryBuilder,qualisList:qualisList,queryList:queryList,paramList:paramList,parameterValue:parameterValue});}else{if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord,data:this.props.Login.masterData});}}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return APIService;}(React.Component);export default connect(mapStateToProps,{sendRequest:sendRequest,getQualisFormsFields:getQualisFormsFields,getQualisForms:getQualisForms,getCustomQuery:getCustomQuery,getCustomQueryName:getCustomQueryName,updateStore:updateStore})(injectIntl(APIService));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/APIService.jsx"],"names":["React","injectIntl","FormSelectSearch","getControlMap","constructOptionList","copyText","convertDateTimetoStringDBFormat","connect","Alert","Button","Card","Col","Form","Row","ListWrapper","stringOperatorData","numericOperatorData","dateConditionData","FormInput","FormNumericInput","DateTimePicker","FontAwesomeIcon","faCopy","faMinus","faPlus","toast","ReactJson","sendRequest","getQualisFormsFields","getQualisForms","getCustomQuery","getCustomQueryName","updateStore","ContentPanel","DEFAULT_RETURN","mapStateToProps","state","Login","APIService","props","onInputOnChange","event","value","variant","target","type","constructApiData","selectedRecord","value1","name","undefined","toLowerCase","includes","index","indexOf","item","scolumn","indexcomma","slice","setState","constructApiDataString","map","e","JSON","stringify","replace","join","text","replaceAll","constructApiData1","parse","Object","keys","x","onComboChange","colunName","oldValue","map1","Map","userInfo","masterData","napiservicecode","Parameters","parameterValue","checkFilter","filterList","check","filterColumn","filterCondition","columndatatype","filterValue","push","length","onMoreClick","SelectedForm","lstQryColumn","removeSameRecordFromTwoDifferentArrays","lstQueryBuilder","warn","intl","formatMessage","id","Columns","onFilterInputOnChange","filterTableNewAddedList","copyfiltertableaddedlist","change","changeData","splice","filterNew","onFilterNumericInputChange","copyfilterTableNewAddedList","handleDateChange","columnLabel","onfilterChange","comboValue","conditionType","onFilterModalDelete","childIndex","filterQueryFormation","str","strform","isjsoncolumn","ismultilingual","jsoncolumnname","slanguagetypecode","scolumndisplayname","Date","copyToClipboard","copyParameter","SelectedApi","url","sapiservice","obj","sendObject","obj1","SelectedSQLQuery","nsqlquerycode","parametersname","hasEmptyValue","values","isEmpty","console","log","sqlquery","ssqlquery","trim","ParamValue","firstArray","secondArray","filterArray","Array","isArray","index1","y","findIndex","x1","firstArray1","firstArray2","onInputOnChangeParam","filterParamList","paramerAddedList","showQueryParameter","returnString","userinfo","newObject","info","object","consoleData","controlMap","userRoleControlRights","masterStatus","error","apiServiceList","qualisList","queryList","needdisplayparam","date","previousProps","paramList","nformcode","ncontrolcode","lstApiService","apiServiceMap","get","lstqueryForm","qualisMap","lstSQLQuery","queryMap","listParam","label","constructData","lstquerybilderColumns","constructQuery","ssqlqueryname","newMap","whereCondition","data","updateInfo","typeName","inputParam","operation","modalName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport {\r\n    getControlMap, constructOptionList, copyText, convertDateTimetoStringDBFormat\r\n} from '../../components/CommonScript';\r\nimport { connect } from 'react-redux';\r\nimport { Alert, Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\n//import FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport {\r\n    stringOperatorData, numericOperatorData\r\n    , dateConditionData\r\n} from '../dashboard/SqlBuilderFilterType'\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCopy, faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport ReactJson from \"react-json-view\";\r\nimport { sendRequest, getQualisFormsFields, getQualisForms, getCustomQuery, getCustomQueryName, updateStore } from \"../../actions\";\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\n//import APIConsole from \"./APIConsole\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { Login: state.Login };\r\n};\r\nclass APIService extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        //  this.console = React.createRef();\r\n        this.state = {\r\n            selectedRecord: {},\r\n            constructApiData: [],\r\n            consoleData: [],\r\n            controlMap: {},\r\n            userRoleControlRights: [],\r\n            masterStatus: \"\", error: \"\"\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onInputOnChange = (event, value, variant) => {\r\n        if (event.target.type === \"checkbox\") {\r\n            let constructApiData = this.state.constructApiData\r\n            const selectedRecord = this.state.selectedRecord;\r\n            // selectedRecord['check'] = label\r\n\r\n            // constructApiData={...constructApiData,[variant.item.scolumn]:\"\"}\r\n\r\n            const value1 = selectedRecord[event.target.name];\r\n            if (value1 !== '' && value1 !== undefined) {\r\n                if (value1.toLowerCase().includes(value.toLowerCase())) {\r\n                    const index = value1.toLowerCase().indexOf(value.toLowerCase());\r\n                    delete constructApiData[variant.item.scolumn]\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value1.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value1.slice(indexcomma + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            if (value1.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value1.slice(0, index) + value1.slice(index + value1.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value1.slice(0, index - 1)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value1 + ',' + value;\r\n                    constructApiData = [...constructApiData, { [variant.item.scolumn]: \"\" }]\r\n                }\r\n            } else {\r\n                selectedRecord[event.target.name] = value1 + ',' + value;\r\n                constructApiData = [...constructApiData, { [variant.item.scolumn]: \"\" }]\r\n            }\r\n            this.setState({\r\n                selectedRecord, constructApiData,\r\n                constructApiDataString: constructApiData.map(e => JSON.stringify(e).replace(/{|}/g, '')).join(',\\n')\r\n            })\r\n        } else {\r\n            // const selectedRecord = this.state.selectedRecord;\r\n            let text = event.target.value.replaceAll('\\n', '')\r\n            text = text.replace(/\\s+/g, '');\r\n            let constructApiData1 = JSON.parse(text)\r\n            let constructApiData = Object.keys(constructApiData1).map(x => {\r\n                return { [x]: constructApiData1[x] }\r\n            })\r\n            this.setState({\r\n                constructApiData,\r\n                constructApiDataString: constructApiData.map(e => JSON.stringify(e).replace(/{|}/g, '')).join(',\\n'),\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onComboChange = (event, colunName) => {\r\n        const selectedRecord = this.state.selectedRecord\r\n       \r\n        const oldValue = { ...selectedRecord[colunName] }\r\n        selectedRecord[colunName] = event\r\n        const map1 = new Map();\r\n        map1['userinfo'] = this.props.Login.userInfo;\r\n        map1['selectedRecord'] = selectedRecord\r\n        map1['masterData'] = this.props.Login.masterData\r\n        map1['constructApiData'] = this.state.constructApiData\r\n      \r\n        if (colunName === 'napiservicecode') {\r\n            if (selectedRecord.napiservicecode.value === 24) {\r\n                this.props.getCustomQuery(map1)\r\n            } else {\r\n                const Parameters=this.state.parameterValue||undefined;\r\n                map1['Parameters']=Parameters;\r\n                this.props.getQualisForms(map1)\r\n            }\r\n            // }\r\n            // this.setState({ selectedRecord })\r\n        } else if (colunName === 'nsqlquerycode') {\r\n            this.props.getCustomQueryName(map1)\r\n        } else {\r\n            if (oldValue && oldValue.value !== event.value) {\r\n                this.props.getQualisFormsFields(map1)\r\n            }\r\n        }\r\n        //  this.setState({ selectedRecord })\r\n    }\r\n    checkFilter = (filterList) => {\r\n        let check = [];\r\n        filterList.map((item, index) => {\r\n            if (item.filterColumn) {\r\n                if (item.filterCondition) {\r\n                    if (item.filterColumn.item.columndatatype === 'string' || item.filterColumn.item.columndatatype === 'character varying' || item.filterColumn.item.columndatatype === 'character') {\r\n                        if (item.filterCondition.value === '='\r\n                            || item.filterCondition.value === 'IN'\r\n                            || item.filterCondition.value === 'NOT') {\r\n\r\n                            if (item.filterValue && item.filterValue !== \"\") {\r\n                                check.push(true)\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (item.filterCondition) {\r\n                                check.push(true)\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (item.filterColumn.item.columndatatype === 'numeric' || item.filterColumn.item.columndatatype === 'integer' || item.filterColumn.item.columndatatype === 'smallint' || item.filterColumn.item.columndatatype === 'bigint') {\r\n                        if (item.filterCondition.value === '='\r\n                            || item.filterCondition.value === '!=' ||\r\n                            item.filterCondition.value === '>' ||\r\n                            item.filterCondition.value === '<' ||\r\n                            item.filterCondition.value === '>=' ||\r\n                            item.filterCondition.value === '<='\r\n                        ) {\r\n                            if (item.filterValue && item.filterValue !== \"\") {\r\n                                check.push(true)\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (item.filterCondition) {\r\n                                check.push(true)\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (item.filterColumn.item.columndatatype === 'date' || item.filterColumn.item.columndatatype === 'timestamp without time zone') {\r\n                        if (item.filterCondition.value === '='\r\n                            || item.filterCondition.value === 'NOT'\r\n                        ) {\r\n\r\n                            if (item.filterValue && item.filterValue !== \"\") {\r\n                                check.push(true)\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (item.filterCondition) {\r\n                                check.push(true)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n        })\r\n        return check.length === filterList.length ? true : false;\r\n    }\r\n\r\n\r\n    onMoreClick = (e) => {\r\n        const selectedRecord = this.state.selectedRecord || {}\r\n        if (this.checkFilter(selectedRecord['filterNew'] || [])) {\r\n            if (this.props.Login.masterData.SelectedForm) {\r\n                if (selectedRecord['filterNew'] === undefined) {\r\n                    selectedRecord['filterNew'] = []\r\n                }\r\n                selectedRecord['filterNew'][selectedRecord['filterNew'].length] = {}\r\n\r\n                const lstQryColumn = this.removeSameRecordFromTwoDifferentArrays(this.state.lstQueryBuilder, selectedRecord['filterNew'])\r\n\r\n                if (lstQryColumn.length > 0) {\r\n                    this.setState({\r\n                        selectedRecord, lstQryColumn\r\n                    })\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_COLUMNSNOTAVALIABLE\" }))\r\n                }\r\n            } else if (this.props.Login.masterData.Columns) {\r\n                if (selectedRecord['filterNew'] === undefined) {\r\n                    selectedRecord['filterNew'] = []\r\n                }\r\n                selectedRecord['filterNew'][selectedRecord['filterNew'].length] = {}\r\n                const lstQryColumn = this.removeSameRecordFromTwoDifferentArrays(this.state.lstQueryBuilder, selectedRecord['filterNew'])\r\n\r\n                if (lstQryColumn.length > 0) {\r\n                    this.setState({\r\n                        selectedRecord, lstQryColumn\r\n                    })\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_COLUMNSNOTAVALIABLE\" }))\r\n                }\r\n\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTHEFORM\" }))\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n        }\r\n    }\r\n\r\n    onFilterInputOnChange = (event, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        //  const constructApiData = this.state.constructApiData\r\n\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n\t\t//ALPD-3801\r\n        const copyfiltertableaddedlist = [...selectedRecord['filterNew']]\r\n\r\n        const change = { ...filterTableNewAddedList[index], [event.target.name]: event.target.value }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...copyfiltertableaddedlist.splice(index + 1)]\r\n\r\n        // const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n\r\n        // if (index1 === -1) {\r\n        //     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\r\n        // } else {\r\n        //     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\r\n        // }\r\n\r\n\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n    }\r\n\r\n    onFilterNumericInputChange = (value, name, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        //   const constructApiData = this.state.constructApiData\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n\t\t//ALPD-3801\r\n        const copyfilterTableNewAddedList = [...selectedRecord['filterNew']]\r\n\r\n        const change = { ...filterTableNewAddedList[index], [name]: value }\r\n        // constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterValue })\r\n        // const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n        // if (index1 === -1) {\r\n        //     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\r\n        // } else {\r\n        //     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\r\n        // }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...copyfilterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n\r\n    }\r\n\r\n    handleDateChange = (columnLabel, value, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        // const constructApiData = this.state.constructApiData\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n        const change = { ...filterTableNewAddedList[index], [columnLabel]: value }\r\n        // const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n        // if (index1 === -1) {\r\n        //     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\r\n        // } else {\r\n        //     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\r\n        // }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n    }\r\n\r\n    onfilterChange = (comboValue, columnLabel, conditionType, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n\r\n        if (conditionType === 'column') {\r\n            const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n\t\t\t//ALPD-3801\r\n            const copyfiltertableaddedlist = [...selectedRecord['filterNew']]\r\n\r\n            const change = {\r\n                ...filterTableNewAddedList[index], [columnLabel]: comboValue,\r\n                filterCondition: undefined, filterValueType: undefined, filterValue: undefined\r\n            }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...copyfiltertableaddedlist.splice(index + 1)]\r\n            this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } })\r\n        }\r\n        else if (conditionType === 'condition') {\r\n            const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n\t\t\t//ALPD-3801\r\n            const copyfiltertableaddedlist = [...selectedRecord['filterNew']]\r\n\r\n            const change = { ...filterTableNewAddedList[index], [columnLabel]: comboValue }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change, filterValue: undefined }, ...copyfiltertableaddedlist.splice(index + 1)]\r\n            // let constructApiData = this.state.constructApiData\r\n            // if (change[\"filterCondition\"].value === 'IS NULL' ||\r\n            //     change[\"filterCondition\"].value === 'IS NOT NULL' ||\r\n            //     change[\"filterCondition\"].value === 'PRESENT' ||\r\n            //     change[\"filterCondition\"].value === 'BLANK' ||\r\n            //     change[\"filterCondition\"].value !== 'NULL' ||\r\n            //     change[\"filterCondition\"].value !== 'NOT NULL' ||\r\n            //     change[\"filterCondition\"].value === 'IN') {\r\n            //     // constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value })\r\n\r\n            //     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n            //     if (index1 === -1) {\r\n            //         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value })\r\n            //     } else {\r\n            //         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value }\r\n            //     }\r\n\r\n            // }\r\n            // else if(change[\"filterColumn\"].item.columndatatype === 'date'&& \r\n            // (change.filterCondition.value === '=' || change.filterCondition.value === '<' \r\n            // || change.filterCondition.value === '>')){\r\n\r\n            //     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n            //     if (index1 === -1) {\r\n            //         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\" })\r\n            //     } else {\r\n            //         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\"  }\r\n            //     }\r\n\r\n            // }\r\n            // else if(change[\"filterColumn\"].item.columndatatype === 'date'&& \r\n            //  (item.filterCondition.value === 'NOT')){\r\n\r\n\r\n            //     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n            //     if (index1 === -1) {\r\n            //         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\" })\r\n            //     } else {\r\n            //         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\"  }\r\n            //     }\r\n            // }\r\n\r\n\r\n            this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } })\r\n        }\r\n\r\n    }\r\n\r\n    onFilterModalDelete = (childIndex) => {\r\n        // let constructApiData1 = [{ ...this.state.constructApiData[0] }, { ...this.state.constructApiData[1] }]\r\n        // let constructApiData2 = [...this.state.constructApiData]\r\n        // constructApiData2 = constructApiData2.splice(2)\r\n        // constructApiData2 = constructApiData2.splice(0, childIndex)\r\n        // let constructApiData3 = [...this.state.constructApiData]\r\n        // constructApiData3 = constructApiData3.splice(2)\r\n        // constructApiData3 = constructApiData3.splice(childIndex + 1)\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filterNew'] = [...selectedRecord['filterNew'].slice(0, childIndex), ...selectedRecord['filterNew'].slice(childIndex + 1)]\r\n        // constructApiData1 = [...constructApiData1, ...constructApiData2, ...constructApiData3]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    filterQueryFormation = (selectedRecord) => {\r\n        let str = \"\";\r\n        let strform = \"\";\r\n        selectedRecord['filterNew'] && selectedRecord['filterNew'].length > 0 && selectedRecord['filterNew'].map((item, index) => {\r\n            if (item.filterCondition) {\r\n                if (item.filterCondition.value === 'IN') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \" ('\" + (item.filterValue ? item.filterValue : \"\") + \"') \"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" \" + item.filterCondition.value + \" ('\" + (item.filterValue ? item.filterValue : \"\") + \"')\"\r\n                    }\r\n                }\r\n                else if (item.filterCondition.value === 'PRESENT') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n                        str = str + \" NOT \" + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" ='' \"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" ='' \"\r\n                    }\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'BLANK') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" ='' \"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" ='' \"\r\n                    }\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'NULL'\r\n                    || item.filterCondition.value === 'NOT NULL') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" IS \" + item.filterCondition.value + \" \"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" IS \" + item.filterCondition.value + \" \"\r\n                    }\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'IS NULL') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \" \"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" \" + item.filterCondition.value + \" \"\r\n                    }\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'IS NOT NULL') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \" \"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" \" + item.filterCondition.value + \" \"\r\n                    }\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'STARTS WITH') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '\" + (item.filterValue ? item.filterValue : \"\") + \"%' collate \\\"default\\\"\"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" ILIKE \" + \" '\" + (item.filterValue ? item.filterValue : \"\") + \"%' collate \\\"default\\\"\"\r\n                    }\r\n                }\r\n                else if (item.filterCondition.value === 'ENDS WITH') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '%\" + (item.filterValue ? item.filterValue : \"\") + \"' collate \\\"default\\\"\"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" ILIKE\" + \" '%\" + (item.filterValue ? item.filterValue : \"\") + \"' collate \\\"default\\\"\"\r\n                    }\r\n                }\r\n                else if (item.filterCondition.value === 'CONTAINS') {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '\" + (item.filterValue ? item.filterValue : \"\") + \"%' collate \\\"default\\\"\"\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" ILIKE\" + \" '\" + (item.filterValue ? item.filterValue : \"\") + \"%' collate \\\"default\\\"\"\r\n                    }\r\n                }\r\n                else if ((item.filterColumn.item.columndatatype === 'date' || item.filterColumn.item.columndatatype === 'timestamp without time zone') && (item.filterCondition.value === '=' || item.filterCondition.value === '<' || item.filterCondition.value === '>')) {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + (\"'\" + (item.filterValue ? convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) : convertDateTimetoStringDBFormat(new Date(), this.props.Login.userInfo)) + \"' \")\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" \" + item.filterCondition.value + (\"'\" + (item.filterValue ? convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) : convertDateTimetoStringDBFormat(new Date(), this.props.Login.userInfo)) + \"' \")\r\n                    }\r\n                }\r\n\r\n                else if ((item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === 'NOT')) || (item.filterColumn.item.columndatatype === 'timestamp without time zone' && (item.filterCondition.value === 'NOT'))) {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + \"(NOT \" + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \" + (\"'\" + (item.filterValue ? convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) : convertDateTimetoStringDBFormat(new Date(), this.props.Login.userInfo)) + \"')\")\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" = \" + (\"'\" + (item.filterValue ? convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) : convertDateTimetoStringDBFormat(new Date(), this.props.Login.userInfo)) + \"')\")\r\n                    }\r\n                }\r\n                else if ((item.filterColumn.item.columndatatype === 'string' || item.filterColumn.item.columndatatype === 'character varying') && (item.filterCondition.value === 'NOT')) {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + \"(NOT \" + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \" + (\"'\" + item.filterValue ? item.filterValue : \"\" + \"')\")\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" = \" + (\"'\" + item.filterValue ? item.filterValue : \"\" + \"')\")\r\n                    }\r\n                }\r\n                else if (item.filterColumn.item.columndatatype === 'character varying' && (item.filterCondition.value === 'LIKE' || item.filterCondition.value === 'NOT LIKE')) {\r\n                    str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" \" + item.filterCondition.value + \" \" + \" '\" + (item.filterValue ? item.filterValue : \"\") + \"%' collate \\\"default\\\"\"\r\n                }\r\n                else {\r\n                    if (item.filterColumn.item.scolumn != undefined) {\r\n\r\n                        str = str + \" \" + (item.filterColumn.item.isjsoncolumn ?\r\n                            item.filterColumn.item.ismultilingual ?\r\n                                item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                                : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                            : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + (\"'\" + (item.filterValue ? item.filterValue : \"\") + \"' \")\r\n                    } else if (item.filterColumn.item.scolumndisplayname != undefined) {\r\n                        str = str + (\"\\\"\" + item.filterColumn.item.scolumndisplayname + \"\\\"\") + \" \" + item.filterCondition.value + (\"'\" + (item.filterValue ? item.filterValue : \"\") + \"' \")\r\n                    }\r\n                }\r\n\r\n                if (index !== selectedRecord['filterNew'].length - 1) {\r\n                    str = str + \" and \";\r\n                }\r\n            }\r\n            //   })\r\n        })\r\n        strform = strform + \"\" + str\r\n        return strform;\r\n    }\r\n\r\n\r\n\r\n    copyToClipboard = () => {\r\n        copyText(this.copyParameter())\r\n        // toast.info(this.props.intl.formatMessage({ id: \"IDS_COPIEDSUCCESSFULLY\" }))\r\n    }\r\n\r\n\r\n    sendRequest = () => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        if (this.props.Login.masterData.SelectedApi) {\r\n            if (this.props.Login.masterData.SelectedApi.value > 2 && this.props.Login.masterData.SelectedApi.value < 24) {\r\n                const url = this.props.Login.masterData.SelectedApi.item.sapiservice\r\n                let obj = this.sendObject()\r\n                let obj1 = { \"inputData\": obj, url, masterData: this.props.Login.masterData, \"userinfo\": this.props.Login.userInfo, selectedRecord }\r\n                this.props.sendRequest(obj1)\r\n\r\n            }\r\n           //ALPD-3801--Alert thrown when parameter is emtpty.\r\n            else if (this.props.Login.masterData.SelectedApi.value === 24 && this.props.Login.masterData.SelectedSQLQuery) {\r\n                if (selectedRecord.nsqlquerycode != undefined) {\r\n                    let parametersname=[];\r\n                    let hasEmptyValue=false;\r\n                    if(this.state.parameterValue!==undefined){\r\n                         hasEmptyValue = this.state.parameterValue.map((item, index) => {\r\n                            let values = [];\r\n                             if (\r\n                                this.state.selectedRecord &&\r\n                                this.state.selectedRecord[\"ParamValue\"] &&\r\n                                this.state.selectedRecord[\"ParamValue\"][index]\r\n                            ) {\r\n\t\t\t//ALPD-3801-When Parameter is empty isEmpty is true \r\n                                const isEmpty=this.state.selectedRecord[\"ParamValue\"][index][item]==='';\r\n\r\n                                if(isEmpty){\r\n                                    parametersname.push(item);\r\n                                }\r\n                                return isEmpty;\r\n                                \r\n                            }\r\n                            parametersname.push(item);\r\n\r\n                            return true;\r\n                        });\r\n                        \r\n                        console.log(hasEmptyValue);\r\n                        \r\n                    }\r\n                    if(!hasEmptyValue.includes(true)){\r\n                    const url = \"apiservice/getSQLQueryData\"\r\n                    let sqlquery = selectedRecord.nsqlquerycode.item.ssqlquery.trim()\r\n                    let obj = this.sendObject()\r\n                    let obj1 = { \"inputData\": obj, url, masterData: this.props.Login.masterData, \"userinfo\": this.props.Login.userInfo, selectedRecord, sqlquery,\"parameters\":this.state.selectedRecord.ParamValue&&this.state.selectedRecord.ParamValue.length>0? this.state.selectedRecord.ParamValue:[]||[]}\r\n                    this.props.sendRequest(obj1)\r\n             }\r\n            else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEPARAM\" })+\" (\"+parametersname.map(item=>item).join(\",\")+\") \")\r\n\r\n            }   } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTHEQUERYNAME\" }))\r\n                }\r\n            } \r\n            \r\n            else if (this.props.Login.masterData.SelectedForm) {\r\n                const url = this.props.Login.masterData.SelectedApi.item.sapiservice\r\n                let obj = this.sendObject()\r\n                let obj1 = { \"inputData\": obj, url, masterData: this.props.Login.masterData, \"userinfo\": this.props.Login.userInfo, selectedRecord }\r\n                this.props.sendRequest(obj1)\r\n            }\r\n            else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTHEFORM\" }))\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTHEAPI\" }))\r\n        }\r\n    }\r\n\r\n\r\n    removeSameRecordFromTwoDifferentArrays = (firstArray, secondArray) => {\r\n        let filterArray = []\r\n        if (Array.isArray(secondArray) && secondArray.length > 0) {\r\n            secondArray.map((x, index1) => {\r\n                firstArray.map(y => {\r\n                    if (x.filterColumn) {\r\n                        if (x.filterColumn.item.scolumndisplayname === y.item.scolumndisplayname) {\r\n                            const index = firstArray.findIndex(x1 => x1.item.scolumndisplayname === y.item.scolumndisplayname)\r\n                            let firstArray1 = [...firstArray];\r\n                            firstArray1 = [...firstArray1.splice(0, index)];\r\n\r\n                            let firstArray2 = [...firstArray];\r\n                            firstArray2 = [...firstArray2.splice(index + 1)];\r\n                            filterArray = [...firstArray1, ...firstArray2]\r\n                            firstArray = [...filterArray]\r\n                        }\r\n                        else if (x.filterColumn.item.scolumndisplayname === y.item.scolumndisplayname) {\r\n                            const index = firstArray.findIndex(x1 => x1.item.scolumndisplayname === y.item.scolumndisplayname)\r\n                            let firstArray1 = [...firstArray];\r\n                            firstArray1 = [...firstArray1.splice(0, index)];\r\n\r\n                            let firstArray2 = [...firstArray];\r\n                            firstArray2 = [...firstArray2.splice(index + 1)];\r\n                            filterArray = [...firstArray1, ...firstArray2]\r\n                            firstArray = [...filterArray]\r\n                        }\r\n                    } else {\r\n                        if (index1 === 0) {\r\n                            filterArray = [...firstArray]\r\n                        }\r\n\r\n                    }\r\n                })\r\n            })\r\n        } else {\r\n            filterArray = [...firstArray];\r\n        }\r\n        return filterArray;\r\n\r\n    }\r\n\r\n           //ALPD-3801--Parameter OnInputOnChange\r\n    onInputOnChangeParam = (event, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {}\r\n        const filterParamList=[...this.state.parameterValue]\r\n        let filterTableNewAddedList=[];\r\n        if(selectedRecord['ParamValue']!==undefined){\r\n             filterTableNewAddedList = [...selectedRecord['ParamValue']]\r\n\r\n        }\r\n        let change={\r\n           [filterParamList[index]]:event.target.value\r\n       }\r\n       let  changeData= []\r\n       if(selectedRecord['ParamValue']!==undefined){\r\n        let paramerAddedList=[];\r\n        paramerAddedList=[...selectedRecord['ParamValue']]\r\n        changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...paramerAddedList.splice( index+1)]\r\n       }else{\r\n        changeData=[{...change}]\r\n       }\r\n        \r\n        this.setState({ selectedRecord: { ...selectedRecord, ParamValue: changeData } })\r\n        // this.setState({selectedRecord});\r\n    }\r\n\r\n    render() {\r\n       // console.log(\"ParamValue\",this.state.selectedRecord.ParamValue);\r\n\r\n        return (<>\r\n            <ListWrapper className=\"client-list-content pb-0\">\r\n                <Row noGutters>\r\n                    <Col md={5} className=\"pr-3\">\r\n                        <Row>\r\n                            <Col md={9}>\r\n                                <FormSelectSearch\r\n                                    name={\"napiservicecode\"}\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_API\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    options={this.state.apiServiceList || []}\r\n                                    value={this.props.Login.masterData.SelectedApi && this.props.Login.masterData.SelectedApi}\r\n                                    isMandatory={true}\r\n                                    isClearable={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={false}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.onComboChange(event, 'napiservicecode')}\r\n                                />\r\n                            </Col>\r\n                            <Col md={1}>\r\n                                <Button className='btn-user btn-primary-blue' onClick={(e) => this.sendRequest()}>\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_SEND\" })}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        {this.props.Login.masterData && this.props.Login.masterData.SelectedApi && (this.props.Login.masterData.SelectedApi.value < 3 || this.props.Login.masterData.SelectedApi.value > 24) ?\r\n                            <Row noGutters>\r\n                                <Col md={9}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nformcode\"}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_FORMS\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={this.state.qualisList || []}\r\n                                        value={this.props.Login.masterData.SelectedForm && this.props.Login.masterData.SelectedForm}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        isMulti={false}\r\n                                        isSearchable={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => this.onComboChange(event, 'nformcode')}\r\n                                    />\r\n                                </Col>\r\n                            </Row> : \"\"}\r\n                        {this.props.Login.masterData && this.props.Login.masterData.SelectedApi && (this.props.Login.masterData.SelectedApi.value === 24) ?\r\n                            <Row noGutters>\r\n                                <Col md={9}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nsqlquerycode\"}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_QUERYNAME\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                        options={this.state.queryList || []}\r\n                                        value={this.state.selectedRecord[\"nsqlquerycode\"] && this.state.selectedRecord[\"nsqlquerycode\"] || \"\"}\r\n                                        isMandatory={true}\r\n                                        isClearable={false}\r\n                                        isMulti={false}\r\n                                        isSearchable={false}\r\n                                        closeMenuOnSelect={true}\r\n                                        onChange={(event) => this.onComboChange(event, 'nsqlquerycode')}\r\n                                    />\r\n                                </Col>\r\n                            </Row> : \"\"}\r\n                        <Card className='api-filter-condition-card'>\r\n                            <Card.Body>\r\n                                {this.props.Login.masterData && this.props.Login.masterData.SelectedApi && (this.props.Login.masterData.SelectedApi.value < 3 || this.props.Login.masterData.SelectedApi.value > 23) ?\r\n                                    <form>\r\n                                        <section>\r\n                                            {this.props.Login.masterData && this.props.Login.masterData.SelectedApi &&\r\n                                                (this.props.Login.masterData.SelectedApi.value < 3 || this.props.Login.masterData.SelectedApi.value > 23) &&\r\n                                                this.props.Login.masterData.needdisplayparam ?\r\n                                                (\r\n                                                    this.state.parameterValue && this.state.parameterValue.map((item, index) => (\r\n                                                        <div>\r\n                                                            <Row>\r\n\r\n                                                                <Col md={6}>\r\n                                                                    <FormInput\r\n                                                                        label={this.props.intl.formatMessage({ id: \"IDS_PARAMETERS\" })}\r\n                                                                        name=\"filterValue\"\r\n                                                                        type=\"text\"\r\n                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PARAMETERS\" })}\r\n                                                                        value={this.state.parameterValue[index]}\r\n                                                                        isMandatory={true}\r\n                                                                        required={true}\r\n                                                                        isDisabled={true}\r\n                                                                        maxLength={100}\r\n                                                                    />\r\n                                                                </Col>\r\n\r\n                                                                <Col md={6}>\r\n                                                                    <FormInput\r\n                                                                        label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        name=\"filterValue\"\r\n                                                                        type=\"text\"\r\n                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        value={this.state.selectedRecord['ParamValue']&&this.state.selectedRecord['ParamValue'][index] && this.state.selectedRecord['ParamValue'][index][item]&&this.state.selectedRecord['ParamValue'][index][item]} // Check how value should be set\r\n                                                                        isMandatory={true}\r\n                                                                        onChange={(event) => this.onInputOnChangeParam(event, index)}\r\n\r\n                                                                       // onInputOnChange={(e) => this.onInputOnChangeParam(e, index)}\r\n                                                                        required={true}\r\n                                                                        maxLength={100}\r\n                                                                    />\r\n                                                                </Col>\r\n                                                            </Row>\r\n                                                        </div>\r\n                                                    ))\r\n                                                )\r\n                                                : \"\"\r\n                                            }\r\n\r\n\r\n                                        </section>\r\n\r\n                                        <section className={'modal-card-body'}>\r\n                                            {this.state.selectedRecord['filterNew'] && this.state.selectedRecord['filterNew'].map((item, index) => {\r\n                                                return <div className={'field has-addons filterheight'}>\r\n                                                    <div class=\"control is-expanded\">\r\n                                                        <div class=\"select is-fullwidth\">\r\n                                                            <FormSelectSearch\r\n                                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                                isSearchable={true}\r\n                                                                name={\"filterColumn\"}\r\n                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                                showOption={true}\r\n                                                                options={this.state.lstQryColumn || []}\r\n                                                                value={item[\"filterColumn\"] && item[\"filterColumn\"] || \"\"}\r\n                                                                onChange={value => this.onfilterChange(value, \"filterColumn\", 'column', index)}\r\n                                                            ></FormSelectSearch>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div class=\"control is-expanded\">\r\n                                                        <div class=\"select is-fullwidth\">\r\n                                                            <FormSelectSearch\r\n                                                                formGroupClassName=\"remove-floating-label-margin\"\r\n                                                                formLabel={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                                                isSearchable={true}\r\n                                                                name={\"sviewname\"}\r\n                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                                                showOption={true}\r\n                                                                options={item[\"filterColumn\"] && item[\"filterColumn\"].item ?\r\n                                                                    (item[\"filterColumn\"].item.columndatatype === 'string' || item.filterColumn.item.columndatatype === 'character varying' || item.filterColumn.item.columndatatype === 'character') ?\r\n                                                                        stringOperatorData :\r\n                                                                        (item[\"filterColumn\"].item.columndatatype === 'numeric' || item.filterColumn.item.columndatatype === 'integer' || item.filterColumn.item.columndatatype === 'smallint' || item.filterColumn.item.columndatatype === 'bigint') ?\r\n                                                                            numericOperatorData\r\n                                                                            : (item[\"filterColumn\"].item.columndatatype === 'date' || item[\"filterColumn\"].item.columndatatype === 'timestamp without time zone') ?\r\n                                                                                dateConditionData\r\n                                                                                : stringOperatorData : \"\"}\r\n\r\n                                                                value={item[\"filterCondition\"] !== undefined ? item[\"filterCondition\"] : \"\"}\r\n                                                                onChange={value => this.onfilterChange(value, \"filterCondition\", 'condition', index)}\r\n                                                            ></FormSelectSearch>\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className={\"control \"}>\r\n                                                        {(item[\"filterCondition\"] && item[\"filterCondition\"].value\r\n                                                            && item[\"filterColumn\"]) ?\r\n                                                            (item[\"filterColumn\"].item.columndatatype === 'string' || item.filterColumn.item.columndatatype === 'character varying' || item.filterColumn.item.columndatatype === 'character') ?\r\n                                                                (item[\"filterCondition\"].value !== 'IS NULL' &&\r\n                                                                    item[\"filterCondition\"].value !== 'IS NOT NULL' &&\r\n                                                                    item[\"filterCondition\"].value !== 'PRESENT' &&\r\n                                                                    item[\"filterCondition\"].value !== 'BLANK') ?\r\n                                                                    <FormInput\r\n                                                                        label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        name=\"filterValue\"\r\n                                                                        type=\"text\"\r\n                                                                        onChange={(event) => this.onFilterInputOnChange(event, index)}\r\n                                                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                        value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                        isMandatory={true}\r\n                                                                        required={true}\r\n                                                                        maxLength={100}\r\n                                                                    /> : \"\"\r\n                                                                :\r\n                                                                (item[\"filterColumn\"].item.columndatatype === 'numeric' || item.filterColumn.item.columndatatype === 'integer' || item.filterColumn.item.columndatatype === 'smallint' || item.filterColumn.item.columndatatype === 'bigint') ?\r\n                                                                    (item[\"filterCondition\"].value !== 'NULL' &&\r\n                                                                        item[\"filterCondition\"].value !== 'NOT NULL') ?\r\n                                                                        item[\"filterCondition\"].value === 'IN' ?\r\n                                                                            <FormInput\r\n                                                                                label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                                name=\"filterValue\"\r\n                                                                                type=\"text\"\r\n                                                                                onChange={(event) => this.onFilterInputOnChange(event, index)}\r\n                                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                                value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                                isMandatory={true}\r\n                                                                                required={true}\r\n                                                                                maxLength={100}\r\n                                                                            />\r\n                                                                            :\r\n                                                                            <FormNumericInput\r\n                                                                                name={\"filterValue\"}\r\n                                                                                label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                                type=\"number\"\r\n                                                                                value={item[\"filterValue\"]}\r\n                                                                                placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                                strict={true}\r\n                                                                                //min={0}\r\n                                                                                //max={99999999.99}\r\n                                                                                maxLength={10}\r\n                                                                                onChange={(value) => this.onFilterNumericInputChange(value, \"filterValue\", index)}\r\n                                                                                noStyle={true}\r\n                                                                                //precision={2}\r\n                                                                                //isMandatory={true}\r\n                                                                                className=\"form-control\"\r\n                                                                                errors=\"Please provide a valid number.\"\r\n                                                                            />\r\n\r\n                                                                        : \"\"\r\n                                                                    : (item[\"filterColumn\"].item.columndatatype === 'date' || item[\"filterColumn\"].item.columndatatype === 'timestamp without time zone') ?\r\n                                                                        (item[\"filterCondition\"].value === '=' ||\r\n                                                                            item[\"filterCondition\"].value === '<'\r\n                                                                            || item[\"filterCondition\"].value === '>'\r\n                                                                            || item[\"filterCondition\"].value === 'NOT'\r\n                                                                        ) ?\r\n                                                                            <DateTimePicker\r\n                                                                                name={\"filterValue\"}\r\n                                                                                label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                                className='form-control'\r\n                                                                                placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                                                                selected={item[\"filterValue\"] ? item[\"filterValue\"] : new Date()}\r\n                                                                                dateFormat={this.props.Login.userInfo[\"ssitedatetime\"]}\r\n                                                                                timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                                                                                showTimeInput={true}\r\n                                                                                onChange={date => this.handleDateChange(\"filterValue\", date, index)}\r\n                                                                                value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                            />\r\n                                                                            : \"\"\r\n                                                                        : \"\"\r\n                                                            : \"\"\r\n\r\n\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className={\"control\"}>\r\n                                                        {this.state.selectedRecord['filterNew'].length > 0 &&\r\n                                                            <Button className={\"button is-light is-danger\"}\r\n                                                                onClick={() => this.onFilterModalDelete(index)}\r\n                                                                type=\"button\" tabindex=\"0\">\r\n                                                                <span className={\"icon\"}>\r\n                                                                    <FontAwesomeIcon icon={faMinus} />\r\n                                                                </span>\r\n                                                            </Button>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            })}\r\n                                            {this.props.Login.masterData && this.props.Login.masterData.SelectedApi && (this.props.Login.masterData.SelectedApi.value < 3 || this.props.Login.masterData.SelectedApi.value > 23) ?\r\n                                                <div className={'buttons is-right'}>\r\n                                                    <Button className={'button is-light is-info is-small'}\r\n                                                        onClick={(e) => this.onMoreClick(e)} type=\"button\" tabindex=\"0\">\r\n\r\n                                                        <span className={\"icon\"}>\r\n                                                            <FontAwesomeIcon icon={faPlus} />\r\n                                                        </span>\r\n                                                        <span>{this.props.intl.formatMessage({ id: \"IDS_MORE\" })}</span>\r\n                                                    </Button>\r\n                                                </div> : \"\"}\r\n\r\n                                        </section>\r\n                                    </form >\r\n                                    : \"\"}\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <ContentPanel className=\"panel-main-content\" >\r\n                            <Card className='my-2 ' >\r\n                                <Card.Header className=\"product-title-main\">\r\n                                    <Card.Title>\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_QUERYPARAMS\" })}\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='api-card-body-scrollable-element'>\r\n                                    {/* <pre style={{ \"height\": \"200px\", \"overflow\": \"scroll\" }}>{\"{\\n\"}{this.state.constructApiData.map(e => JSON.stringify(e, null, 2).replace(/{|}/g, ''))}{\"\\n}\"}</pre> */}\r\n                                    <pre>{this.showQueryParameter()}</pre>\r\n                                    <div className='buttons is-right'>\r\n                                        <Button className='btn-user btn-primary-blue' onClick={(e) => this.copyToClipboard()}>\r\n                                            <FontAwesomeIcon className='' icon={faCopy}></FontAwesomeIcon>{'  '}\r\n                                            {this.props.intl.formatMessage({ id: \"IDS_COPYQUERYPARAMS\" })}\r\n                                        </Button>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </ContentPanel>\r\n                        <ContentPanel className=\"panel-main-content\" >\r\n                            <Card >\r\n                                <Card.Header className=\"product-title-main\">\r\n                                    <Card.Title>\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_RESPONSE\" })}\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='api-card-body'>\r\n                                    <ReactJson src={this.props.Login.masterData.consoleData && this.props.Login.masterData.consoleData} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </ContentPanel>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListWrapper>\r\n        </>)\r\n    }\r\n\r\n    showQueryParameter = () => {\r\n        //   let newObject = {}\r\n        let returnString = \"{\";\r\n        //    let param;\r\n        if (this.state && this.state.selectedRecord && this.state.selectedRecord.napiservicecode && this.state.selectedRecord.napiservicecode.value < 3) {\r\n            if (this.state && this.state.constructApiData.length > 0) {\r\n                this.state.constructApiData.map((e, index) => {\r\n                    if (index < 2) {\r\n                        returnString = returnString + \" \\n \\\"\" + Object.keys(e) + \"\\\":\\\"\" + Object.values(e) + \"\\\"\"\r\n                    }\r\n\r\n                })\r\n                let text = this.filterQueryFormation(this.state.selectedRecord)\r\n\r\n                returnString = returnString + \"\\n\" + \" \\\"whereCondition\\\":\\\"\" + text + \"\\\"\\n}\"\r\n            }\r\n            else {\r\n                returnString = returnString + \"\\n}\"\r\n            }\r\n        } else if (this.state && this.state.selectedRecord && this.state.selectedRecord.napiservicecode && this.state.selectedRecord.napiservicecode.value == 24) {\r\n            if (this.state && this.state.constructApiData.length > 0) {\r\n                this.state.constructApiData.map((e, index) => {\r\n                    if (index < this.state.constructApiData.length) {\r\n                        returnString = returnString + \"\\n \\\"\" + Object.keys(e) + \"\\\":\\\"\" + Object.values(e) + \"\\\"\"\r\n                    }\r\n                })\r\n                let text = this.filterQueryFormation(this.state.selectedRecord)\r\n\t    //ALPD-3801--Parameters Displaying in ShowQueryParam \r\n                if (this.state.parameterValue&&this.state.parameterValue.length > 0) {\r\n\r\n                    this.state.parameterValue.map((item, index) => {\r\n                        //  param =\"\\n\" +this.state.parameterValue[index]+\"\\\":\\\"\" +this.state.selectedRecord[this.state.parameterValue[index]]!==undefined?this.state.selectedRecord[this.state.parameterValue[index]] :\"\";\r\n                       // returnString = returnString + \"\\n \\\"\" + this.state.parameterValue[index] +\"\\\":\\\"\" + Object.values(e) + \"\\\"\"\r\n\r\n                        returnString = returnString + (\"\\n \\\"\" + this.state.parameterValue[index] +\"\\\":\\\"\") +(this.state.selectedRecord[\"ParamValue\"]&&this.state.selectedRecord[\"ParamValue\"][index]!==undefined?this.state.selectedRecord[\"ParamValue\"][index] [item]!=undefined?this.state.selectedRecord[\"ParamValue\"][index] [item]+ \" \\\"\":\" \\\"\":\" \\\"\")\r\n\r\n                    })\r\n                }\r\n                returnString = returnString + \"\\n\" + \" \\\"whereCondition\\\":\\\"\" + text + \"\\\"\\n}\"\r\n\r\n            } else {\r\n                returnString = returnString + \"\\n}\"\r\n            }\r\n        } else if (this.props.Login) {\r\n            returnString = returnString + \"\\\"userinfo\\\":\"\r\n            let userinfo = JSON.stringify(this.props.Login.userInfo);\r\n            returnString = returnString + userinfo + \"}\"\r\n        }\r\n\r\n        return returnString;\r\n    }\r\n\r\n    copyParameter = () => {\r\n        let newObject = {}\r\n        if (this.state && this.state.selectedRecord && this.state.selectedRecord.napiservicecode && this.state.selectedRecord.napiservicecode.value < 3) {\r\n            if (this.state && this.state.constructApiData.length > 0) {\r\n\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_COPIEDSUCCESSFULLY\" }))\r\n\r\n                this.state.constructApiData.map((e, index) => {\r\n                    if (index < 2) {\r\n                        newObject = {\r\n                            ...newObject,\r\n                            ...e\r\n                        }\r\n                    }\r\n\r\n                })\r\n                let text = this.filterQueryFormation(this.state.selectedRecord)\r\n                const object = {\r\n                    ...newObject,\r\n                    \"whereCondition\": text\r\n                }\r\n                return JSON.stringify(object);\r\n\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_QUERYISEMPTY\" }))\r\n            }\r\n        } else if (this.props.Login && this.props.Login.userInfo) {\r\n\r\n            let parametersname=[];\r\n            let hasEmptyValue=[];\r\n            if(!this.state.parameterValue!==undefined){\r\n                hasEmptyValue.push(false);\r\n            }\r\n            if(this.state.parameterValue!==undefined){\r\n                 hasEmptyValue = this.state.parameterValue.map((item, index) => {\r\n               \r\n                    // let isEmpty=[];\r\n                     if (\r\n                        this.state.selectedRecord &&\r\n                        this.state.selectedRecord[\"ParamValue\"] &&\r\n                        this.state.selectedRecord[\"ParamValue\"][index]\r\n                    ) {\r\n                        //values.push(this.state.selectedRecord[\"ParamValue\"][index][item]||'');\r\n                        const isEmpty=this.state.selectedRecord[\"ParamValue\"][index][item]==='';\r\n                       \r\n                            //const isEmpty = values.some(value => value === '');\r\n                        if(isEmpty){\r\n                            parametersname.push(item);\r\n                        }\r\n                        return isEmpty;\r\n                        \r\n                    }\r\n                    parametersname.push(item);\r\n\r\n                    return true;\r\n                });\r\n                \r\n                console.log(hasEmptyValue);\r\n                \r\n            }\r\n            if(!hasEmptyValue.includes(true) ){\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_COPIEDSUCCESSFULLY\" }))\r\n\r\n                const object = {\r\n                    \"userinfo\": this.props.Login.userInfo\r\n                }\r\n                return JSON.stringify(object);\r\n            }else{\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEPARAM\" })+\" (\"+parametersname.map(item=>item).join(\",\")+\") \")\r\n\r\n            }\r\n\r\n           \r\n\r\n        }\r\n    }\r\n\r\n    sendObject = () => {\r\n        let newObject = {}\r\n        this.state.constructApiData.map(e => {\r\n            newObject = {\r\n                ...newObject,\r\n                ...e\r\n            }\r\n        })\r\n        let text = this.filterQueryFormation(this.state.selectedRecord)\r\n        const object = {\r\n            ...newObject,\r\n            \"whereCondition\": text\r\n        }\r\n\r\n        return object;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            console.log(this.props.Login.masterData !== previousProps.Login.masterData)\r\n            let { userRoleControlRights, controlMap, apiServiceList,\r\n                selectedRecord, constructApiData, lstQueryBuilder, qualisList, queryList, paramList, parameterValue\r\n            } = { ...this.state }\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            }\r\n            if (this.props.Login && this.props.Login.masterData && this.props.Login.masterData.SelectedApi && this.props.Login.masterData.SelectedApi.value < 3) {\r\n                selectedRecord =\r\n                    { \"napiservicecode\": this.props.Login.masterData.SelectedApi, ...this.state.selectedRecord }\r\n            }\r\n\r\n            if (this.props.Login.masterData.lstApiService !== previousProps.Login.masterData.lstApiService) {\r\n                const apiServiceMap = constructOptionList(this.props.Login.masterData.lstApiService || [], \"napiservicecode\",\r\n                    \"sapiservicename\", \"nsorter\", \"ascending\", false);\r\n                apiServiceList = apiServiceMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.lstqueryForm !== previousProps.Login.masterData.lstqueryForm) {\r\n                const qualisMap = constructOptionList(this.props.Login.masterData.lstqueryForm || [], \"nformcode\",\r\n                    \"sdisplayname\", \"nsorter\", \"ascending\", false);\r\n                qualisList = qualisMap.get(\"OptionList\")\r\n                // this.setState({\r\n                //     qualisList\r\n                // });\r\n            }\r\n\r\n            if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n                selectedRecord={...selectedRecord, \r\n                ...this.props.Login.selectedRecord };\r\n            }\r\n            // if (this.props.Login.parameterValue !== previousProps.Login.parameterValue) {\r\n            //     parameterValue={...parameterValue, \r\n            //     ...this.props.Login.parameterValue };\r\n            // }\r\n            if (this.props.Login.masterData.lstSQLQuery !== previousProps.Login.masterData.lstSQLQuery) {\r\n                const queryMap = constructOptionList(this.props.Login.masterData.lstSQLQuery || [], \"nsqlquerycode\",\r\n                    \"ssqlqueryname\", \"ssqlquery\", \"nsorter\", \"ascending\", false);\r\n                queryList = queryMap.get(\"OptionList\")\r\n\r\n            }\r\n            if (this.props.Login.masterData.Parameters !== previousProps.Login.masterData.Parameters) {\r\n                // const paramMap = constructOptionList(this.props.Login.masterData.Parameters || [] , this.props.Login.masterData.Parameters , \"ascending\", false);\r\n                // paramList = paramMap.get(\"OptionList\")\r\n\r\n                let listParam = [];\r\n                if(this.props.Login.masterData.Parameters!=undefined){\r\n                    listParam = this.props.Login.masterData.Parameters;\r\n                    parameterValue = listParam.map(item => {\r\n                        return item;\r\n                    }\r\n                    );\r\n                }else{\r\n                    parameterValue=this.props.Login.masterData.Parameters;  \r\n                }\r\n               \r\n            }\r\n            if (this.props.Login.masterData.SelectedForm !== previousProps.Login.masterData.SelectedForm) {\r\n\r\n                if (this.props.Login.masterData.SelectedForm && this.props.Login.masterData.SelectedForm.value) {\r\n                    constructApiData = [\r\n                        { \"nformcode\": this.props.Login.masterData.SelectedForm.value },\r\n                        { \"sformname\": this.props.Login.masterData.SelectedForm.label }\r\n                    ]\r\n                }\r\n                else {\r\n                    constructApiData = []\r\n                }\r\n\r\n                let constructData = this.props.Login.masterData.lstquerybilderColumns.map((item, index) => {\r\n                    return { label: item.scolumndisplayname, value: index, item: { ...item } }\r\n\r\n                })\r\n                lstQueryBuilder = constructData;\r\n                selectedRecord['filterNew'] = []\r\n            }\r\n\r\n\r\n\r\n            if (this.props.Login.masterData.SelectedApi !== previousProps.Login.masterData.SelectedApi) {\r\n                if (this.props.Login.masterData.SelectedApi && this.props.Login.masterData.SelectedApi.value && this.props.Login.masterData.SelectedApi.value === 24) {\r\n\r\n                    let constructQuery = this.props.Login.masterData.lstSQLQuery.map((item, index) => {\r\n                        return { label: item.ssqlqueryname, value: index, item: { ...item } }\r\n                    })\r\n                    lstQueryBuilder = constructQuery;\r\n                }\r\n            }\r\n            if (this.props.Login.masterData.SelectedSQLQuery !== previousProps.Login.masterData.SelectedSQLQuery) {\r\n\r\n                if (this.props.Login.masterData.SelectedSQLQuery && this.props.Login.masterData.SelectedSQLQuery.value && this.props.Login.masterData.SelectedApi.value === 24) {\r\n\r\n                    constructApiData = [\r\n                        { \"nsqlquerycode\": this.props.Login.masterData.SelectedSQLQuery.value },\r\n                        { \"ssqlqueryname\": this.props.Login.masterData.SelectedSQLQuery.label },\r\n\r\n                    ]\r\n                    // if(this.props.Login.masterData.Parameters!=undefined){\r\n                    //     th   is.props.Login.masterData.Parameters.map(item=>{\r\n                    //         constructApiData.push({[item]:item})  \r\n\r\n                    //     })\r\n                    // }\r\n                }\r\n                else {\r\n                    constructApiData = []\r\n                }\r\n\r\n                let constructData = [];\r\n                if (this.props.Login.masterData && this.props.Login.masterData.Columns) {\r\n                    constructData = this.props.Login.masterData.Columns.map((item, index) => {\r\n                        return { label: item.scolumndisplayname, value: index, item: { ...item } }\r\n\r\n                    })\r\n                } else {\r\n                    constructData = [];\r\n                }\r\n                lstQueryBuilder = constructData;\r\n                selectedRecord['filterNew'] = []\r\n\r\n            }\r\n            if (this.props.Login && this.props.Login.newMap) {\r\n                selectedRecord['filterNew'] = { \"whereCondition\": this.props.Login.newMap.whereCondition }\r\n            }\r\n           \r\n            this.setState({\r\n                userRoleControlRights,\r\n                controlMap, apiServiceList,\r\n                selectedRecord, constructApiData,\r\n                lstQueryBuilder, qualisList, queryList, paramList, parameterValue\r\n            });\r\n        }\r\n        else {\r\n\r\n            if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n                this.setState({\r\n                    selectedRecord: this.props.Login.selectedRecord,\r\n                    data: this.props.Login.masterData\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    sendRequest,\r\n    getQualisFormsFields, getQualisForms, getCustomQuery, getCustomQueryName, updateStore\r\n})(injectIntl(APIService));"]},"metadata":{},"sourceType":"module"}