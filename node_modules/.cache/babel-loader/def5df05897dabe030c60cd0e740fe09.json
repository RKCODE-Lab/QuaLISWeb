{"ast":null,"code":"import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{toast}from'react-toastify';import{initRequest}from'./LoginAction';import{constructOptionList,fillRecordBasedOnCheckBoxSelection,getRecordBasedOnPrimaryKeyName,replaceUpdatedObject,sortData,getSameRecordFromTwoArrays,getSameRecordFromTwoDifferentArrays,filterRecordBasedOnPrimaryKeyName,reArrangeArrays}from'../components/CommonScript';import{postCRUDOrganiseTransSearch}from'./ServiceAction';import{REPORTTYPE,reportCOAType,transactionStatus}from'../components/Enumeration';import{intl}from'../components/App';export function getsubSampleDetail(inputData,isServiceRequired){return function(dispatch){var inputParamData={ntype:2,nflag:2,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,nsectioncode:inputData.nsectioncode,ntestcode:inputData.ntestcode,napprovalversioncode:inputData.napprovalversioncode,napprovalconfigcode:inputData.napprovalconfigcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeTestTab,activeSubSampleTab:inputData.activeTestTab,userinfo:inputData.userinfo,nneedsubsample:inputData.masterData.realRegSubTypeValue.nneedsubsample,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode?inputData.ndesigntemplatemappingcode:inputData.masterData.ndesigntemplatemappingcode,checkBoxOperation:inputData.masterData.searchedSubSample?inputData.masterData.searchedSubSample.length>0?inputData.checkBoxOperation:3:inputData.checkBoxOperation,noParameterget:inputData.checkBoxOperation==1?3:4,nbatchmastercode:inputData.nbatchmastercode};var activeName=\"\";var dataStateName=\"\";var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"approval/getApprovalSubSample\",inputParamData).then(function(response){var responseData=_objectSpread(_objectSpread({},response.data),{},{APSelectedSample:inputData.APSelectedSample});responseData=sortData(responseData);var oldSelectedTest=inputData.masterData.APSelectedTest?inputData.masterData.APSelectedTest:[];inputData.masterData.APSelectedTest=responseData.APSelectedTest?responseData.APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];//inputData.masterData.APSelectedSubSample = responseData.APSelectedSubSample ? responseData.APSelectedSubSample : inputData.masterData.AP_SUBSAMPLE.length > 0 ? [inputData.masterData.AP_SUBSAMPLE[0]] : []\nvar skipInfo={};var masterData={};if(subSample){var oldSelectedSubSample=inputData.masterData.APSelectedSubSample;var AP_TEST=inputData.masterData.AP_TEST;fillRecordBasedOnCheckBoxSelection(inputData.masterData,response.data,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample,selectedPreregno:inputData.npreregno,APSelectedSubSample:inputData.masterData.AP_SUBSAMPLE.length>0?[inputData.masterData.AP_SUBSAMPLE[0]]:[]});if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTests']=undefined;}if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.checkBoxOperation===1||inputData.checkBoxOperation===5){var wholeSubSampleList=masterData.AP_SUBSAMPLE.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.forEach(function(subsample,index){if(!wholeSubSampleList.includes(subsample.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}});if(oldSelectedSubSample.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedSubSample:oldSelectedSubSample});}var APSelectedTest=oldSelectedTest.length>0?getSameRecordFromTwoArrays(oldSelectedTest,masterData.APSelectedSubSample,'npreregno'):responseData.APSelectedTest;masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:APSelectedTest,AP_TEST:AP_TEST,ApprovalParameter:responseData.ApprovalParameter?responseData.ApprovalParameter.length>0?responseData.ApprovalParameter:masterData.ApprovalParameter:masterData.ApprovalParameter,RegistrationSampleAttachment:responseData.RegistrationSampleAttachment?responseData.RegistrationSampleAttachment.length>0?responseData.RegistrationSampleAttachment:masterData.RegistrationSampleAttachment:masterData.RegistrationSampleAttachment});}if(inputData.checkBoxOperation===7){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:responseData.APSelectedTest,AP_TEST:responseData.AP_TEST,ApprovalParameter:responseData.ApprovalParameter?responseData.ApprovalParameter.length>0?responseData.ApprovalParameter:masterData.ApprovalParameter:masterData.ApprovalParameter,RegistrationSampleAttachment:responseData.RegistrationSampleAttachment?responseData.RegistrationSampleAttachment.length>0?responseData.RegistrationSampleAttachment:masterData.RegistrationSampleAttachment:masterData.RegistrationSampleAttachment});}if(inputData.checkBoxOperation===3){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:masterData.AP_TEST.length>0?[masterData.AP_TEST[0]]:[],ApprovalParameter:responseData.ApprovalParameter?responseData.ApprovalParameter.length>0?responseData.ApprovalParameter:masterData.ApprovalParameter:masterData.ApprovalParameter,RegistrationSampleAttachment:responseData.RegistrationSampleAttachment?responseData.RegistrationSampleAttachment.length>0?responseData.RegistrationSampleAttachment:[]:[],RegistrationTestAttachment:responseData.RegistrationTestAttachment?responseData.RegistrationTestAttachment.length>0?responseData.RegistrationTestAttachment:[]:[],RegistrationAttachment:responseData.RegistrationAttachment?responseData.RegistrationAttachment.length>0?responseData.RegistrationAttachment:[]:[],RegistrationSampleComment:responseData.RegistrationSampleComment?responseData.RegistrationSampleComment.length>0?responseData.RegistrationSampleComment:[]:[],RegistrationTestComment:responseData.RegistrationTestComment?responseData.RegistrationTestComment.length>0?responseData.RegistrationTestComment:[]:[],RegistrationComment:responseData.RegistrationComment?responseData.RegistrationComment.length>0?responseData.RegistrationComment:[]:[]});}var _inputData=inputData,testskip=_inputData.testskip,testtake=_inputData.testtake,subSampleSkip=_inputData.subSampleSkip,subSampleTake=_inputData.subSampleTake;// let bool = false;\n// Commented bool value because no need to check bool condition to update skipInfo value.\n// if (inputData.masterData.AP_SUBSAMPLE.length < inputData.subSampleSkip) {\ntestskip=0;subSampleSkip=0;//     bool = true\n// }\n// if (bool) {\nskipInfo={testskip:testskip,testtake:testtake,subSampleSkip:subSampleSkip,subSampleTake:subSampleTake};// }\n}else{var oldApprovalParameter=inputData.masterData.ApprovalParameter;fillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample,APSelectedSubSample:inputData.masterData.APSelectedSubSample,APSelectedTest:inputData.masterData.APSelectedTest||[],selectedPreregno:inputData.npreregno});if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTests']=undefined;}// if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\n//     inputData.searchSubSampleRef.current.value = \"\";\n//     masterData['searchedSubSample'] = undefined\n// }\n// if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\n//     inputData.searchTestRef.current.value = \"\"\n//     masterData['searchedTests'] = undefined\n// }\nvar _inputData2=inputData,_testskip=_inputData2.testskip,_testtake=_inputData2.testtake;var bool=false;if(inputData.masterData.AP_TEST.length<=inputData.testskip){_testskip=0;bool=true;}if(bool){skipInfo={testskip:_testskip,testtake:_testtake};}var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var ntransactiontestcode;if(oldSelectedTest.length>0){keepOld=true;inputData.masterData['ApprovalParameter']=oldApprovalParameter;masterData=_objectSpread(_objectSpread({},masterData),{},{//AP_TEST:responseData.AP_TEST,\nApprovalParameter:oldApprovalParameter,APSelectedTest:oldSelectedTest});}else{ntransactiontestcode=masterData.APSelectedTest[0].ntransactiontestcode;}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else if(inputData.checkBoxOperation===5){var _ntransactiontestcode=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var list=[];var dbData=[];masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});switch(inputData.activeTestTab){case\"IDS_RESULTS\":dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,_ntransactiontestcode,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":dbData=response.data.ResultUsedInstrument||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedInstrument),_toConsumableArray(dbData));ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TASK\":dbData=response.data.ResultUsedTasks||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedTasks),_toConsumableArray(dbData));ResultUsedTasks=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":dbData=response.data.RegistrationTestAttachment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(dbData));RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":dbData=response.data.ApprovalResultChangeHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalResultChangeHistory),_toConsumableArray(dbData));ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":dbData=response.data.RegistrationTestComment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(dbData));RegistrationTestComment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":dbData=response.data.ApprovalHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalHistory),_toConsumableArray(dbData));ApprovalHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;default:dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;}}else if(inputData.checkBoxOperation===7){// masterData = {\n//     ...masterData,\n//     APSelectedTest:responseData.APSelectedTest,\n//     AP_TEST:responseData.AP_TEST,\n//     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\n// }\nvar _ntransactiontestcode2=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var _list=[];masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list,_ntransactiontestcode2,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list=response.data.ApprovalParameter?[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter)):_toConsumableArray(inputData.masterData.ApprovalParameter);ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else{var _ntransactiontestcode3=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var _list2=[];masterData=_objectSpread(_objectSpread({},masterData),{},{selectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list2=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list2,_ntransactiontestcode3,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list2=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list2=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list2=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list2=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list2=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list2=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list2=response.data.ApprovalParameter?[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter)):_toConsumableArray(inputData.masterData.ApprovalParameter);ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list2,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}masterData=_objectSpread(_objectSpread({},masterData),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory});}if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,activeSubSampleTab:inputData.activeSubSampleTab,skip:undefined,take:undefined},skipInfo),{},{activeTabIndex:inputData.activeTabIndex})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var skipInfo={};var bool=false;var _inputData3=inputData,testskip=_inputData3.testskip,testtake=_inputData3.testtake,subsampletake=_inputData3.subsampletake,subsampleskip=_inputData3.subsampleskip;var oldSelectedTest=inputData.masterData.APSelectedTest;var oldSelectedSubSample=inputData.masterData.APSelectedSubSample;var TestSelected=[];var subSampleSelected=[];var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];var isGrandChildGetRequired=false;if(inputData[\"statusNone\"]){TestSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}else{TestSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].npreregno,\"npreregno\");subSampleSelected=filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedSubSample,inputData.removeElementFromArray[0].npreregno,\"npreregno\");}if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedSample,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);if(isGrandChildGetRequired){var ntransactiontestcode=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode.toString():\"\";var APSelectedSample=inputData.APSelectedSample;var selectedPreregno=inputData.npreregno;var APSelectedTest=inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];var APSelectedSubSample=inputData.masterData.AP_SUBSAMPLE;if(subSample){var filterSelectedSubSample=getSameRecordFromTwoArrays(oldSelectedSubSample,inputData.masterData.AP_SUBSAMPLE,\"ntransactionsamplecode\");APSelectedSubSample=filterSelectedSubSample.length>0?filterSelectedSubSample:[inputData.masterData.AP_SUBSAMPLE[0]];if(inputData.masterData.AP_SUBSAMPLE.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:APSelectedSample,APSelectedSubSample:APSelectedSubSample,APSelectedTest:APSelectedTest});if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\"],ntransactiontestcode:ntransactiontestcode,APSelectedSample:APSelectedSample,selectedPreregno:selectedPreregno,APSelectedTest:APSelectedTest,APSelectedSubSample:APSelectedSubSample,checkBoxOperation:3,masterData:masterData},skipInfo);if(subSample){if(APSelectedTest.length===0){inputData[\"npreregno\"]=APSelectedSubSample.map(function(x){return x.npreregno;}).join(\",\");inputData[\"ntransactionsamplecode\"]=APSelectedSubSample.map(function(x){return x.ntransactionsamplecode;}).join(\",\");inputData[\"checkBoxOperation\"]=3;inputData[\"childTabsKey\"]=[\"AP_TEST\"];dispatch(getTestDetail(inputData,true));}else{dispatch(getTestChildTabDetail(inputData,true));}}else{dispatch(getTestChildTabDetail(inputData,true));}// dispatch(getTestChildTabDetail(inputData, true));\n}else{var _masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedTest:TestSelected?TestSelected:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[],APSelectedSample:inputData.APSelectedSample,APSelectedSubSample:subSampleSelected?subSampleSelected:inputData.masterData.AP_SUBSAMPLE.length>0?[inputData.masterData.AP_SUBSAMPLE[0]]:[]});var wholeTestList=_masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});if(subSample){if(inputData.masterData.AP_SUBSAMPLE.length<=inputData.subsampleskip){subsampleskip=0;skipInfo={subsampletake:subsampletake,subsampleskip:subsampleskip};}}var keepOld=false;var _ntransactiontestcode4;if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{testskip:testskip,testtake:testtake});}if(oldSelectedTest.length>0){keepOld=true;_masterData=_objectSpread(_objectSpread({},_masterData),{},{selectedTest:oldSelectedTest});}else{_ntransactiontestcode4=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"-1\";}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData[\"statusNone\"]?getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].npreregno,\"npreregno\"):filterRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].npreregno,\"npreregno\"):getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode4,\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode4,\"ntransactiontestcode\");break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode4,\"ntransactiontestcode\");break;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},_masterData),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory},skipInfo)},skipInfo),{},{loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab,activeSubSampleTab:inputData.activeSubSampleTab,activeTabIndex:inputData.activeTabIndex})});}}};}export function getTestDetail(inputData,isServiceRequired){return function(dispatch){var _inputParamData;var inputParamData=(_inputParamData={ntype:2,nflag:3,nsampletypecode:inputData.nsampletypecode,nregtypecode:inputData.nregtypecode,nregsubtypecode:inputData.nregsubtypecode,npreregno:inputData.npreregno,ntransactionstatus:inputData.ntransactionstatus,napprovalversioncode:inputData.napprovalversioncode,napprovalconfigcode:inputData.napprovalconfigcode,ntransactionsamplecode:inputData.ntransactionsamplecode,nsectioncode:inputData.nsectioncode,ntestcode:inputData.ntestcode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,activeSubSampleTab:inputData.activeSubSampleTab,userinfo:inputData.userinfo},_defineProperty(_inputParamData,\"ntransactionstatus\",inputData.ntransactionstatus),_defineProperty(_inputParamData,\"ndesigntemplatemappingcode\",inputData.ndesigntemplatemappingcode),_defineProperty(_inputParamData,\"checkBoxOperation\",inputData.checkBoxOperation),_defineProperty(_inputParamData,\"nneedsubsample\",inputData.masterData.realRegSubTypeValue.nneedsubsample),_defineProperty(_inputParamData,\"nbatchmastercode\",inputData.nbatchmastercode),_inputParamData);var activeName=\"\";var dataStateName=\"\";var masterData={};var subSample=inputData.nneedsubsample;dispatch(initRequest(true));if(isServiceRequired){rsapi.post(\"approval/getApprovalTest\",inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);//responseData = sortData(responseData,'descending', 'npreregno')\ninputData.searchTestRef.current.null=\"\";//inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\nvar oldSelectedTest=inputData.masterData.APSelectedTest;var oldSelectedSubSample=inputData.masterData.APSelectedSubSample;inputData.masterData.APSelectedTest=oldSelectedTest.length>0?oldSelectedTest:responseData.APSelectedTest?responseData.APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"npreregno\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedTest:inputData.masterData.APSelectedTest,// APselectedSample: inputData.APSelectedSample,\nAPSelectedSubSample:inputData.APSelectedSubSample,selectedPreregno:inputData.npreregno});if(inputData.searchSubSampleRef!==undefined&&inputData.searchSubSampleRef.current!==null){inputData.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputData.searchTestRef!==undefined&&inputData.searchTestRef.current!==null){inputData.searchTestRef.current.value=\"\";masterData['searchedTests']=undefined;}var _inputData4=inputData,testskip=_inputData4.testskip,testtake=_inputData4.testtake,subSampleSkip=_inputData4.subSampleSkip,subSampleTake=_inputData4.subSampleTake;// let bool = false;\n// Commented bool value because no need to check bool condition to update skipInfo value.\nif(inputData.masterData.AP_SUBSAMPLE.length<=inputData.subSampleSkip){subSampleSkip=0;}// if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\ntestskip=0;// bool = true\n// }\nvar skipInfo={};// if (bool) {\nskipInfo={testskip:testskip,testtake:testtake,subSampleSkip:subSampleSkip,subSampleTake:subSampleTake};// }\nvar ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];var RegistrationSampleComment=[];var RegistrationSampleAttachment=[];if(inputData.checkBoxOperation===1){var wholeTestList=masterData.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.map(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});var keepOld=false;var ntransactiontestcode;ntransactiontestcode=masterData.APSelectedTest[0].ntransactiontestcode;// }\nswitch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,ntransactiontestcode,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(subSample){var wholeSubsampleList=masterData.AP_SUBSAMPLE.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.map(function(test,index){if(!wholeSubsampleList.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});var _keepOld=false;var ntransactionsamplecode;ntransactionsamplecode=masterData.APSelectedSubSample[0].ntransactionsamplecode;switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLECOMMENTS\":RegistrationSampleComment=_keepOld?inputData.masterData.RegistrationSampleComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleComment\";dataStateName=\"subSampleCommentDataState\";break;default:RegistrationSampleAttachment=_keepOld?inputData.masterData.RegistrationSampleAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment,ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleAttachment\";dataStateName=\"subSampleAttachmentDataState\";break;}}}else if(inputData.checkBoxOperation===5){masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode5=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:0;var list=[];var dbData=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(dbData,_ntransactiontestcode5,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":dbData=response.data.ResultUsedInstrument||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedInstrument),_toConsumableArray(dbData));ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TASK\":dbData=response.data.ResultUsedTasks||[];list=[].concat(_toConsumableArray(inputData.masterData.ResultUsedTasks),_toConsumableArray(dbData));ResultUsedTasks=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":dbData=response.data.RegistrationTestAttachment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestAttachment),_toConsumableArray(dbData));RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":dbData=response.data.ApprovalResultChangeHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalResultChangeHistory),_toConsumableArray(dbData));ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":dbData=response.data.RegistrationTestComment||[];list=[].concat(_toConsumableArray(inputData.masterData.RegistrationTestComment),_toConsumableArray(dbData));RegistrationTestComment=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":dbData=response.data.ApprovalHistory||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalHistory),_toConsumableArray(dbData));ApprovalHistory=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;default:dbData=response.data.ApprovalParameter||[];list=[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(dbData));ApprovalParameter=getRecordBasedOnPrimaryKeyName(list,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");break;}}else if(inputData.checkBoxOperation===7){var testList=reArrangeArrays(inputData.masterData.AP_SUBSAMPLE,responseData.AP_TEST,\"ntransactionsamplecode\");masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:[testList[0]],AP_TEST:testList,ApprovalParameter:responseData.ApprovalParameter?responseData.ApprovalParameter.length>0?responseData.ApprovalParameter:masterData.ApprovalParameter:masterData.ApprovalParameter});// let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\nvar _keepOld2=false;// let ntransactiontestcode;\n// if (oldSelectedTest.length > 0) {\n//     keepOld = true\n//     masterData = {\n//         ...masterData,\n//         APSelectedTest: oldSelectedTest\n//     }\n// } else {\n//     ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\"\n// }\nvar _ntransactiontestcode6=testList.length>0?testList[0].ntransactiontestcode:\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=_keepOld2?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":ResultUsedTasks=_keepOld2?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=_keepOld2?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=_keepOld2?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=_keepOld2?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=_keepOld2?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:ApprovalParameter=_keepOld2?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode6,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}else{masterData=_objectSpread(_objectSpread({},masterData),{},{APSelectedTest:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var _ntransactiontestcode7=response.data.APSelectedTest?response.data.APSelectedTest.length>0?response.data.APSelectedTest[0].ntransactiontestcode:inputData.masterData.AP_TEST?inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:-1:-1:-1;//inputData.masterData.AP_TEST ? inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode: -1 : -1\nvar _list3=[];switch(inputData.activeTestTab){case\"IDS_RESULTS\":_list3=response.data.ApprovalParameter||[];ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list3,_ntransactiontestcode7,\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":_list3=response.data.ResultUsedInstrument||[];ResultUsedInstrument=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_TASK\":_list3=response.data.ResultUsedTasks||[];ResultUsedTasks=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":_list3=response.data.RegistrationTestAttachment||[];RegistrationTestAttachment=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestAttachment\";break;case\"IDS_RESULTCHANGEHISTORY\":_list3=response.data.ApprovalResultChangeHistory||[];ApprovalResultChangeHistory=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTCOMMENTS\":_list3=response.data.RegistrationTestComment||[];RegistrationTestComment=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":_list3=response.data.ApprovalHistory||[];ApprovalHistory=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;default:_list3=response.data.ApprovalParameter?[].concat(_toConsumableArray(inputData.masterData.ApprovalParameter),_toConsumableArray(response.data.ApprovalParameter)):_toConsumableArray(inputData.masterData.ApprovalParameter);ApprovalParameter=getRecordBasedOnPrimaryKeyName(_list3,inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"\",\"ntransactiontestcode\");activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}}if(subSample){var _wholeSubsampleList=masterData.AP_SUBSAMPLE.map(function(b){return b.ntransactionsamplecode;});oldSelectedSubSample.map(function(test,index){if(!_wholeSubsampleList.includes(test.ntransactionsamplecode)){oldSelectedSubSample.splice(index,1);}return null;});var _keepOld3=false;var _ntransactionsamplecode;if(oldSelectedSubSample.length>0){_keepOld3=true;// masterData = {\n//     ...masterData,\n//     //AP_TEST:responseData.AP_TEST,\n//     ApprovalParameter:oldApprovalParameter,\n//     APSelectedSubSample: oldSelectedSubSample\n// }\n}else{_ntransactionsamplecode=masterData.APSelectedSubSample[0].ntransactionsamplecode;}// ntransactionsamplecode = masterData.APSelectedSubSample[0].ntransactionsamplecode\nswitch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLECOMMENTS\":RegistrationSampleComment=_keepOld3?inputData.masterData.RegistrationSampleComment:getRecordBasedOnPrimaryKeyName(responseData.RegistrationSampleComment,_ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleComment\";dataStateName=\"subSampleCommentDataState\";break;default:RegistrationSampleAttachment=_keepOld3?inputData.masterData.RegistrationSampleAttachment:getRecordBasedOnPrimaryKeyName(responseData.RegistrationSampleAttachment,_ntransactionsamplecode,\"ntransactionsamplecode\");activeName=\"RegistrationSampleAttachment\";dataStateName=\"subSampleAttachmentDataState\";break;}}masterData=_objectSpread(_objectSpread({},masterData),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory,RegistrationSampleComment:RegistrationSampleComment,RegistrationSampleAttachment:RegistrationSampleAttachment});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined})));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});skipInfo=_objectSpread(_objectSpread({},skipInfo),{},{subSampleCommentDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined}),subSampleAttachmentDataState:_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})});dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},masterData),{},{APSelectedSubSample:inputData.APSelectedSubSample,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,activeTestTab:inputData.activeTestTab,activeSampleTab:inputData.activeSampleTab,skip:undefined,take:undefined},skipInfo)},skipInfo),{},{loading:false,showFilter:false,activeTestTab:inputData.activeTestTab})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{var bool=false;var skipInfo={};var _inputData5=inputData,testskip=_inputData5.testskip,testtake=_inputData5.testtake;var oldSelectedTest=inputData.masterData.APSelectedTest;var TestSelected=inputData[\"statusNone\"]?getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].ntransactionsamplecode,\"ntransactionsamplecode\"):filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest,inputData.removeElementFromArray[0].ntransactionsamplecode,\"ntransactionsamplecode\");var isGrandChildGetRequired=false;if(TestSelected.length>0){isGrandChildGetRequired=false;}else{isGrandChildGetRequired=true;}var ApprovalParameter=[];var ResultUsedInstrument=[];var ResultUsedTasks=[];var RegistrationTestAttachment=[];var ApprovalResultChangeHistory=[];var RegistrationTestComment=[];var ApprovalHistory=[];fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedSubSample,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);if(isGrandChildGetRequired){//let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\nvar APSelectedSample=inputData.masterData.APSelectedSample;var selectedPreregno=inputData.npreregno;//let selectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\nvar APSelectedSubSample=inputData.APSelectedSubSample;//let APSelectedSubSample = inputData.masterData.APSelectedSubSample\nvar filterTestSameOldSelectedTest=getSameRecordFromTwoDifferentArrays(oldSelectedTest,inputData.masterData.AP_TEST,\"ntransactiontestcode\");var APSelectedTest=filterTestSameOldSelectedTest.length>0?filterTestSameOldSelectedTest:[inputData.masterData.AP_TEST[0]];var ntransactiontestcode=APSelectedTest.length>0?APSelectedTest.map(function(x){return x.ntransactiontestcode;}).join(\",\"):\"-1\";if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}if(bool){skipInfo={testskip:testskip,testtake:testtake};}inputData=_objectSpread(_objectSpread({},inputData),{},{childTabsKey:[\"ApprovalParameter\",\"ApprovalResultChangeHistory\",\"ResultUsedInstrument\",\"ResultUsedTasks\",\"RegistrationTestAttachment\",\"RegistrationTestComment\"],ntransactiontestcode:ntransactiontestcode,APSelectedSample:APSelectedSample,selectedPreregno:selectedPreregno,APSelectedTest:APSelectedTest,APSelectedSubSample:APSelectedSubSample,checkBoxOperation:3,skipInfo:skipInfo});dispatch(getTestChildTabDetail(inputData,true));}else{var keepOld=false;var _ntransactiontestcode8;var _masterData2=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSubSample:inputData.APSelectedSubSample,selectedTransactioncode:inputData.ntransactionsamplecode,APSelectedTest:TestSelected?TestSelected:inputData.masterData.AP_TEST.length>0?[inputData.masterData.AP_TEST[0]]:[]});var wholeTestList=_masterData2.AP_TEST.map(function(b){return b.ntransactiontestcode;});oldSelectedTest.forEach(function(test,index){if(!wholeTestList.includes(test.ntransactiontestcode)){oldSelectedTest.splice(index,1);}return null;});if(inputData.masterData.AP_TEST.length<=inputData.testskip){testskip=0;bool=true;}var _skipInfo={};if(bool){_skipInfo={testskip:testskip,testtake:testtake};}if(oldSelectedTest.length>0){keepOld=true;_masterData2=_objectSpread(_objectSpread({},_masterData2),{},{APSelectedTest:oldSelectedTest});}else{_ntransactiontestcode8=inputData.masterData.AP_TEST.length>0?inputData.masterData.AP_TEST[0].ntransactiontestcode:\"-1\";}switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=keepOld?inputData[\"statusNone\"]?getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].ntransactionsamplecode,'ntransactionsamplecode'):filterRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].ntransactionsamplecode,'ntransactionsamplecode'):getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=keepOld?inputData.masterData.ResultUsedInstrument:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TASK\":ResultUsedTasks=keepOld?inputData.masterData.ResultUsedTasks:getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=keepOld?inputData.masterData.RegistrationTestAttachment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=keepOld?inputData.masterData.ApprovalResultChangeHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=keepOld?inputData.masterData.RegistrationTestComment:getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment,_ntransactiontestcode8,\"ntransactiontestcode\");break;case\"IDS_TESTAPPROVALHISTORY\":ApprovalHistory=keepOld?inputData.masterData.ApprovalHistory:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory,_ntransactiontestcode8,\"ntransactiontestcode\");break;default:ApprovalParameter=keepOld?inputData.masterData.ApprovalParameter:getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,_ntransactiontestcode8,\"ntransactiontestcode\");break;}dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({masterData:_objectSpread(_objectSpread({},_masterData2),{},{ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false,showFilter:false},_skipInfo),{},{activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeTestTab})});}}//}\n};}export function getTestChildTabDetail(inputData,isServiceRequired){return function(dispatch){if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){var inputParamData={ntransactiontestcode:inputData.ntransactiontestcode,npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;var testtake=inputData.testtake;var activeName=\"\";var dataStateName=\"\";switch(inputData.activeTestTab){case\"IDS_RESULTS\":url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;case\"IDS_PARAMETERRESULTS\":url=\"registration/getregistrationparameter\";activeName=\"RegistrationParameter\";dataStateName=\"resultDataState\";break;case\"IDS_INSTRUMENT\":url=\"resultentrybysample/getResultUsedInstrument\";activeName=\"ResultUsedInstrument\";dataStateName=\"instrumentDataState\";break;case\"IDS_MATERIAL\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_TASK\":url=\"resultentrybysample/getResultUsedTask\";activeName=\"ResultUsedTasks\";dataStateName=\"taskDataState\";break;case\"IDS_TESTATTACHMENTS\":url=\"attachment/getTestAttachment\";activeName=\"RegistrationTestAttachment\";break;case\"IDS_TESTCOMMENTS\":url=\"comments/getTestComment\";activeName=\"RegistrationTestComment\";dataStateName=\"testCommentDataState\";break;case\"IDS_DOCUMENTS\":url=\"approval/getapprovalparameter\";break;case\"IDS_RESULTCHANGEHISTORY\":url=\"approval/getApprovalResultChangeHistory\";activeName=\"ApprovalResultChangeHistory\";dataStateName=\"resultChangeDataState\";break;case\"IDS_TESTAPPROVALHISTORY\":url=\"approval/getSampleApprovalHistory\";activeName=\"ApprovalHistory\";dataStateName=\"historyDataState\";break;case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;default:url=\"approval/getapprovalparameter\";activeName=\"ApprovalParameter\";dataStateName=\"resultDataState\";break;}if(url!==null){dispatch(initRequest(true));if(isServiceRequired){rsapi.post(url,inputParamData).then(function(response){var skipInfo={};var responseData=_objectSpread(_objectSpread({},response.data),{},{APSelectedSubSample:inputData.APSelectedSubSample||inputData.masterData.APSelectedSubSample,selectedTest:inputData.APselectedTest});//responseData = inputData.checkBoxOperation === 7 ?  sortData( response.data,\"descending\",\"npreregno\"):responseData;\n//sortData( responseData,\"descending\",\"ntransactionsamplecode\")\n// fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\nfillRecordBasedOnCheckBoxSelection(inputData.masterData,responseData,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactionsamplecode\",inputData.removeElementFromArray);var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample||inputData.masterData.APSelectedSample,APSelectedSubSample:inputData.APSelectedSubSample||inputData.masterData.APSelectedSubSample,APSelectedTest:inputData.APSelectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode?inputData.ntransactionsamplecode:inputData.masterData.APSelectedSubSample[0].ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTabIndex:inputData.activeTabIndex,activeTabId:inputData.activeTabId,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{fillRecordBasedOnCheckBoxSelection(inputData.masterData,inputData.APSelectedTest,inputData.childTabsKey,inputData.checkBoxOperation,\"ntransactiontestcode\",inputData.removeElementFromArray);var skipInfo={};var masterData=_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedTest:inputData.APSelectedTest,selectedPreregno:inputData.npreregno,selectedSampleCode:inputData.ntransactionsamplecode,selectedTestCode:inputData.ntransactiontestcode});if(inputData[dataStateName]&&masterData[activeName].length<=inputData[dataStateName].skip){skipInfo=_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{skip:0,sort:undefined,filter:undefined}));}else{skipInfo=_objectSpread(_objectSpread({},skipInfo),{},_defineProperty({},dataStateName,_objectSpread(_objectSpread({},inputData[dataStateName]),{},{sort:undefined,filter:undefined})));}dispatch({type:DEFAULT_RETURN,payload:_objectSpread({masterData:masterData,loading:false,showFilter:false,activeTestTab:inputData.activeTestTab,screenName:inputData.screenName,testtake:testtake,testskip:undefined},skipInfo)});}}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},inputData.masterData),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{var _inputData$masterData=inputData.masterData,ApprovalParameter=_inputData$masterData.ApprovalParameter,ResultUsedInstrument=_inputData$masterData.ResultUsedInstrument,ResultUsedTasks=_inputData$masterData.ResultUsedTasks,RegistrationTestAttachment=_inputData$masterData.RegistrationTestAttachment,ApprovalResultChangeHistory=_inputData$masterData.ApprovalResultChangeHistory,RegistrationTestComment=_inputData$masterData.RegistrationTestComment,ApprovalHistory=_inputData$masterData.ApprovalHistory;switch(inputData.activeTestTab){case\"IDS_RESULTS\":ApprovalParameter=[];break;case\"IDS_INSTRUMENT\":ResultUsedInstrument=[];break;case\"IDS_TASK\":ResultUsedTasks=[];break;case\"IDS_TESTATTACHMENTS\":RegistrationTestAttachment=[];break;case\"IDS_RESULTCHANGEHISTORY\":ApprovalResultChangeHistory=[];break;case\"IDS_TESTCOMMENTS\":RegistrationTestComment=[];break;case\"IDS_APPROVALHISTORY\":ApprovalHistory=[];break;default:ApprovalParameter=[];break;}dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedTest:[],ApprovalParameter:ApprovalParameter,ResultUsedInstrument:ResultUsedInstrument,ResultUsedTasks:ResultUsedTasks,RegistrationTestAttachment:RegistrationTestAttachment,ApprovalResultChangeHistory:ApprovalResultChangeHistory,RegistrationTestComment:RegistrationTestComment,ApprovalHistory:ApprovalHistory}),loading:false}});}};}export function getSampleChildTabDetail(inputData){return function(dispatch){if(inputData.npreregno.length>0){var inputParamData={npreregno:inputData.npreregno,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSampleTab){case\"IDS_SAMPLEATTACHMENTS\":url=\"attachment/getSampleAttachment\";break;case\"IDS_SAMPLECOMMENTS\":url=\"comments/getSampleComment\";break;case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"resultentrybysample/getResultUsedMaterial\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"resultentrybysample/getResultUsedTask\";break;case\"IDS_SOURCE\":url=\"registration/getRegistrationSourceCountry\";break;case\"IDS_SAMPLEAPPROVALHISTORY\":url=\"approval/getSampleApprovalHistory\";break;case\"IDS_PRINTHISTORY\":url=\"approval/getPrintHistory\";break;case\"IDS_REPORTHISTORY\":url=\"approval/getCOAHistory\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{selectedSample:inputData.selectedSample,selectedTestCode:inputData.ntransactiontestcode}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab,activeTestTab:inputData.activeSampleTab,screenName:inputData.screenName,selectedId:null}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{selectedSample:inputData.selectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{toast.warn(intl.formatMessage({id:\"IDS_PLSSELECTASAMPLE\"}));}};}export function performAction(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/performAction\",inputParam.inputData).then(function(response){if(response.data.rtn===undefined||response.data.rtn===\"Success\"){replaceUpdatedObject(response.data[\"AP_SAMPLE\"],inputParam.masterData.AP_SAMPLE,\"npreregno\");replaceUpdatedObject(response.data[\"AP_SUBSAMPLE\"],inputParam.masterData.AP_SUBSAMPLE,\"ntransactionsamplecode\");replaceUpdatedObject(response.data[\"AP_TEST\"],inputParam.masterData.AP_TEST,\"ntransactiontestcode\");delete response.data[\"AP_SAMPLE\"];delete response.data[\"AP_SUBSAMPLE\"];delete response.data[\"AP_TEST\"];var masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),response.data),{},{APSelectedSample:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.APSelectedSample,\"npreregno\"),APSelectedSubSample:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.APSelectedSubSample,\"ntransactionsamplecode\"),APSelectedTest:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.APSelectedTest,\"ntransactiontestcode\")});// let masterData = {\n//     ...inputParam.masterData,\n//     ...response.data,\n//     AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\n//     AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\n//     AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\n// }\n// dispatch({type: DEFAULT_RETURN, payload:{\n// masterData:{\n//     ...inputParam.inputData.masterData,\n//     ...response.data, \n//     AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam   .inputData.masterData.AP_SAMPLE,'npreregno'),\n//     AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.inputData.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\n//     AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.inputData.masterData.AP_TEST,'ntransactiontestcode')\n// },\n//     loading:false ,\n//     loadEsign:false,\n//     openChildModal:false                     \n// }}) \nvar respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,loadEsign:false,openModal:false}});toast.warn(response.data.rtn);}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);//toast.error(intl.formatMessage({ id: \"IDS_SERVICEERROR\" }));\n}else{toast.warn(error.response.data);}});};}export function updateDecision(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/updateDecision\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);// dispatch({type: DEFAULT_RETURN, payload:{\n//     masterData:{\n//         ...inputParam.masterData,\n//         ...responseData, \n//         AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),\n//         AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\n//         AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')\n//     },\n//     loading:false                      \n// }}) \nvar masterData=_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')});var respObject={masterData:masterData,inputParam:inputParam,openChildModal:false,operation:\"dynamic\",masterStatus:\"\",errorCode:undefined,loadEsign:false,showEsign:false,selectedRecord:{},loading:false};dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList,respObject));}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getRegistrationType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{SampleTypeValue:inputData.SampleTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getRegistrationSubType(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getRegistrationSubType\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegTypeValue:inputData.RegTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterStatus(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApproveConfigVersionRegTemplateDesign\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getFilterBasedTest(inputData){return function(dispatch){if(inputData.napprovalversioncode){dispatch(initRequest(true));rsapi.post(\"approval/getFilterBasedTest\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{RegSubTypeValue:inputData.RegSubTypeValue,ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,DesignTemplateMappingValue:inputData.DesignTemplateMappingValue}),loading:false}});if(response.data.rtn){toast.warn(response.data.rtn);}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{//toast.warn(\"Please Select All the Values in Filter\");\ntoast.warn(intl.FormattedMessage({id:\"IDS_PLSSELECTALLVALUESINFILTER\"}));}};}export function getApprovalVersion(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApprovalVersion\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);//  responseData = sortData(responseData)\ndispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputParam.masterData),responseData),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getApprovalSample(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getApprovalSample\",inputParam.inputData).then(function(response){var responseData=_objectSpread({},response.data);// responseData = sortData(responseData)\nvar masterData=_objectSpread(_objectSpread({},inputParam.masterData),responseData);if(inputParam.searchSampleRef!==undefined&&inputParam.searchSampleRef.current!==null){inputParam.searchSampleRef.current.value=\"\";masterData['searchedSample']=undefined;}if(inputParam.searchSubSampleRef!==undefined&&inputParam.searchSubSampleRef.current!==null){inputParam.searchSubSampleRef.current.value=\"\";masterData['searchedSubSample']=undefined;}if(inputParam.searchTestRef!==undefined&&inputParam.searchTestRef.current!==null){inputParam.searchTestRef.current.value=\"\";// masterData['searchedTest'] = undefined\nmasterData['searchedTests']=undefined;}sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,loading:false,showFilter:false,skip:0,take:inputParam.take,testskip:0,testtake:inputParam.testtake,resultDataState:_objectSpread(_objectSpread({},inputParam.resultDataState),{},{sort:undefined,filter:undefined}),instrumentDataState:_objectSpread(_objectSpread({},inputParam.instrumentDataState),{},{sort:undefined,filter:undefined}),materialDataState:_objectSpread(_objectSpread({},inputParam.materialDataState),{},{sort:undefined,filter:undefined}),taskDataState:_objectSpread(_objectSpread({},inputParam.taskDataState),{},{sort:undefined,filter:undefined}),documentDataState:_objectSpread(_objectSpread({},inputParam.documentDataState),{},{sort:undefined,filter:undefined}),resultChangeDataState:_objectSpread(_objectSpread({},inputParam.resultChangeDataState),{},{sort:undefined,filter:undefined}),testCommentDataState:_objectSpread(_objectSpread({},inputParam.testCommentDataState),{},{sort:undefined,filter:undefined}),historyDataState:_objectSpread(_objectSpread({},inputParam.historyDataState),{},{sort:undefined,filter:undefined}),samplePrintHistoryDataState:_objectSpread(_objectSpread({},inputParam.samplePrintHistoryDataState),{},{sort:undefined,filter:undefined}),sampleHistoryDataState:_objectSpread(_objectSpread({},inputParam.sampleHistoryDataState),{},{sort:undefined,filter:undefined})}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getStatusCombo(inputParam){return function(dispatch){var inputData={ntransactionresultcode:inputParam.primaryKeyValue,userinfo:inputParam.userInfo};dispatch(initRequest(true));rsapi.post(\"approval/getStatusCombo\",inputData).then(function(response){var responseData=_objectSpread({},response.data);//responseData = sortData(responseData)\nvar GradeListMap=constructOptionList(response.data.Grade||[],\"ngradecode\",\"sgradename\",'ascending','ngradecode',false);var Grade=GradeListMap.get(\"OptionList\");dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputParam.masterData),responseData),{},{Grade:Grade,selectedParamId:inputParam.primaryKeyValue}),loading:false,showFilter:false,openChildModal:true,ncontrolCode:inputParam.ncontrolCode,selectedRecord:{senforcestatuscomment:response.data.parameterComment&&response.data.parameterComment.senforcestatuscomment,ntransactionresultcode:response.data.parameterComment&&response.data.parameterComment.ntransactionresultcode,ntransactiontestcode:response.data.parameterComment&&response.data.parameterComment.ntransactiontestcode},operation:\"enforce\",screenName:\"IDS_STATUS\"}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getParameterEdit(inputParam){return function(dispatch){var inputData={ntransactiontestcode:inputParam.selectedTest&&inputParam.selectedTest.map(function(item){return item.ntransactiontestcode;}).join(\",\"),userinfo:inputParam.userInfo};if(inputData.ntransactiontestcode&&inputData.ntransactiontestcode.length>0){dispatch(initRequest(true));rsapi.post(\"approval/getEditParameter\",inputData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:_objectSpread(_objectSpread({},responseData),{},{loading:false,openChildModal:true,operation:\"update\",screenName:\"IDS_APPROVALPARAMETER\"// ncontrolCode:inputParam.ncontrolCode,\n})});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{multilingualMsg:\"IDS_SELECTTEST\"}});}};}export function validateEsignforApproval(inputParam){return function(dispatch){dispatch(initRequest(true));return rsapi.post(\"login/validateEsignCredential\",inputParam.inputData).then(function(response){if(response.data===\"Success\"){if(inputParam.operation==='dynamic'){var methodUrl=\"performaction\";inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;if(inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()]&&inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];}dispatch(performAction(inputParam[\"screenData\"][\"inputParam\"],inputParam[\"screenData\"][\"masterData\"]));}else if(inputParam.operation==='reportgeneration'){delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"agree\"];inputParam[\"screenData\"][\"inputParam\"][\"reporparam\"][\"userinfo\"]=inputParam.inputData.userinfo;dispatch(generateCOAReport(inputParam[\"screenData\"][\"inputParam\"]['reporparam']));}else if(inputParam.operation==='decision'){delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignpassword\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esigncomments\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignreason\"];delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"agree\"];inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"]=inputParam.inputData.userinfo;dispatch(updateDecision(inputParam[\"screenData\"][\"inputParam\"]));}}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function previewSampleReport(inputParam){return function(dispatch){dispatch(initRequest(true));var ndecisionStatus=inputParam.sample.ndecisionstatus;if(inputParam.sample.ndecisionstatus===undefined||inputParam.sample.ndecisionstatus===transactionStatus.DRAFT){ndecisionStatus=transactionStatus.PASS;}var inputData={ndecisionstatus:ndecisionStatus,userinfo:inputParam.userinfo,nprimarykey:inputParam.sample.npreregno,ncoareporttypecode:reportCOAType.SAMPLECERTIFICATEPRIVIEW,nreporttypecode:REPORTTYPE.SAMPLEREPORT,sprimarykeyname:\"npreregno\",ncontrolcode:inputParam.ncontrolCode,nregtypecode:inputParam.sample.nregtypecode,nregsubtypecode:inputParam.sample.nregsubtypecode,npreregno:inputParam.sample.npreregno};rsapi.post(\"approval/previewSampleReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function generateCOAReport(inputParam){return function(dispatch){dispatch(initRequest(true));var inputData={npreregno:inputParam.sample.npreregno,nsectioncode:inputParam.nsectioncode||-1,userinfo:inputParam.userinfo,nprimarykey:inputParam.sample.npreregno,ncoareporttypecode:reportCOAType.SAMPLEWISE,nreporttypecode:REPORTTYPE.COAREPORT,sprimarykeyname:\"npreregno\",ncontrolcode:inputParam.ncontrolCode,nregtypecode:inputParam.nregtypecode,nregsubtypecode:inputParam.nregsubtypecode};rsapi.post(\"approval/generateCOAReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){document.getElementById(\"download_data\").setAttribute(\"href\",response.data.filepath);document.getElementById(\"download_data\").click();}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getEnforceCommentsHistory(selectedParam,masterData,userInfo,idsName,dataField){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getEnforceCommentsHistory\",{ntransactionresultcode:selectedParam.ntransactionresultcode,userinfo:userInfo,fetchField:dataField}).then(function(response){if(response.data.length>0){masterData=_objectSpread(_objectSpread({},masterData),{},{enforceCommentsHistory:response.data});dispatch({type:DEFAULT_RETURN,payload:{loading:false,masterData:masterData,openChildModal:true,operation:\"view\",screenName:\"IDS_ENFORCECOMMENTHISTORY\",idsName:idsName,dataField:dataField}});}else{dispatch({type:DEFAULT_RETURN,payload:{loading:false,multilingualMsg:\"IDS_NOPREVIOUSCOMMENTSFOUND\"}});}}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function reportGenerate(inputParam){return function(dispatch){dispatch(initRequest(true));var inputData={npreregno:inputParam.sample.npreregno,userinfo:inputParam.userinfo,nregsubtypecode:inputParam.sample.nregsubtypecode,reportName:\"RJ_Testwise_Report_QRCode\",reportFormat:\"pdf\"};rsapi.post(\"reportjasper/generateCOAReport\",inputData).then(function(response){if(response.data.rtn===\"Success\"){if(response.data.filePath){// let user = response;\nvar elnURL=response.data.filePath;window.open(elnURL,'_blank');}else{toast.info(intl.FormattedMessage({id:\"IDS_ELNUIURLNOTAVAILABLE\"}));}// document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filePath);\n// document.getElementById(\"download_data\").click();\n}else{toast.warn(response.data.rtn);}dispatch({type:DEFAULT_RETURN,payload:{loading:false,openChildModal:false,selectedRecord:{},loadEsign:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getSubSampleChildTabDetail(inputData){return function(dispatch){if(inputData.ntransactionsamplecode.length>0){var inputParamData={ntransactionsamplecode:inputData.ntransactionsamplecode,userinfo:inputData.userinfo};var url=null;switch(inputData.activeSubSampleTab){case\"IDS_SUBSAMPLEATTACHMENTS\":url=\"attachment/getSubSampleAttachment\";break;case\"IDS_SUBSAMPLECOMMENTS\":url=\"comments/getSubSampleComment\";break;default:url=null;break;}if(url!==null){dispatch(initRequest(true));rsapi.post(url,inputParamData).then(function(response){var responseData=_objectSpread({},response.data);responseData=sortData(responseData);dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread(_objectSpread({},inputData.masterData),responseData),{},{APSelectedSubSample:inputData.APSelectedSubSample// selectedTestCode: inputData.ntransactiontestcode,\n}),loading:false,showFilter:false,activeTestTab:inputData.activeSubSampleTab,screenName:inputData.screenName}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),{},{APSelectedSample:inputData.APSelectedSample}),loading:false,showFilter:false,activeSampleTab:inputData.activeSampleTab}});}}else{//toast.warn(\"Please Select a Sample\");\ntoast.warn(intl.FormattedMessage({id:\"IDS_PLSSELECTASAMPLE\"}));}};}export function ViewPatientDetails(masterData,screenName,userInfo,viewdetails){return function(dispatch){dispatch(initRequest(true));var selectedRecord={ntestcode:viewdetails.test.ntestcode};rsapi.post(\"worklist/getSampleViewDetails\",{selectedRecord:selectedRecord,PatientId:viewdetails.test.PatientId,npreregno:viewdetails.test.npreregno,userinfo:userInfo}).then(function(response){masterData['AuditModifiedComments']=[];masterData['AuditModifiedComments']=response.data['AuditModifiedComments'];masterData['viewdetails']=[];masterData['viewdetails']=response.data['viewdetails'][0];//sortData(masterData);\ndispatch({type:DEFAULT_RETURN,payload:{masterData:masterData,screenName:\"IDS_PREVIOUSRESULTVIEW\",operation:\"\",loading:false,openChildModal:true}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getTestBasedCompletedBatch(inputData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"approval/getTestBasedOnCompletedBatch\",inputData).then(function(response){dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},inputData.masterData),response.data),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/ApprovalAction.js"],"names":["rsapi","DEFAULT_RETURN","toast","initRequest","constructOptionList","fillRecordBasedOnCheckBoxSelection","getRecordBasedOnPrimaryKeyName","replaceUpdatedObject","sortData","getSameRecordFromTwoArrays","getSameRecordFromTwoDifferentArrays","filterRecordBasedOnPrimaryKeyName","reArrangeArrays","postCRUDOrganiseTransSearch","REPORTTYPE","reportCOAType","transactionStatus","intl","getsubSampleDetail","inputData","isServiceRequired","dispatch","inputParamData","ntype","nflag","nsampletypecode","nregtypecode","nregsubtypecode","npreregno","ntransactionstatus","nsectioncode","ntestcode","napprovalversioncode","napprovalconfigcode","activeTestTab","activeSampleTab","activeSubSampleTab","userinfo","nneedsubsample","masterData","realRegSubTypeValue","ndesigntemplatemappingcode","checkBoxOperation","searchedSubSample","length","noParameterget","nbatchmastercode","activeName","dataStateName","subSample","post","then","response","responseData","data","APSelectedSample","oldSelectedTest","APSelectedTest","AP_TEST","skipInfo","oldSelectedSubSample","APSelectedSubSample","childTabsKey","removeElementFromArray","selectedPreregno","AP_SUBSAMPLE","searchTestRef","undefined","current","value","searchSubSampleRef","wholeSubSampleList","map","b","ntransactionsamplecode","forEach","subsample","index","includes","splice","ApprovalParameter","RegistrationSampleAttachment","RegistrationTestAttachment","RegistrationAttachment","RegistrationSampleComment","RegistrationTestComment","RegistrationComment","testskip","testtake","subSampleSkip","subSampleTake","oldApprovalParameter","bool","ResultUsedInstrument","ResultUsedTasks","ApprovalResultChangeHistory","ApprovalHistory","wholeTestList","ntransactiontestcode","test","keepOld","list","dbData","selectedTest","skip","sort","filter","samplePrintHistoryDataState","sampleHistoryDataState","type","payload","loading","showFilter","take","activeTabIndex","catch","error","status","message","warn","subsampletake","subsampleskip","TestSelected","subSampleSelected","isGrandChildGetRequired","toString","filterSelectedSubSample","x","join","getTestDetail","getTestChildTabDetail","null","wholeSubsampleList","testList","subSampleCommentDataState","subSampleAttachmentDataState","selectedSampleCode","filterTestSameOldSelectedTest","selectedTransactioncode","url","APselectedTest","selectedTestCode","activeTabId","screenName","getSampleChildTabDetail","selectedSample","selectedId","formatMessage","id","performAction","inputParam","rtn","AP_SAMPLE","updatedSample","updatedSubSample","updatedTest","respObject","openChildModal","operation","masterStatus","errorCode","loadEsign","showEsign","selectedRecord","postParamList","openModal","updateDecision","getRegistrationType","SampleTypeValue","getRegistrationSubType","RegTypeValue","getFilterStatus","RegSubTypeValue","getFilterBasedTest","DesignTemplateMappingValue","FormattedMessage","getApprovalVersion","getApprovalSample","searchSampleRef","resultDataState","instrumentDataState","materialDataState","taskDataState","documentDataState","resultChangeDataState","testCommentDataState","historyDataState","getStatusCombo","ntransactionresultcode","primaryKeyValue","userInfo","GradeListMap","Grade","get","selectedParamId","ncontrolCode","senforcestatuscomment","parameterComment","getParameterEdit","item","multilingualMsg","validateEsignforApproval","methodUrl","toLowerCase","generateCOAReport","previewSampleReport","ndecisionStatus","sample","ndecisionstatus","DRAFT","PASS","nprimarykey","ncoareporttypecode","SAMPLECERTIFICATEPRIVIEW","nreporttypecode","SAMPLEREPORT","sprimarykeyname","ncontrolcode","document","getElementById","setAttribute","filepath","click","SAMPLEWISE","COAREPORT","getEnforceCommentsHistory","selectedParam","idsName","dataField","fetchField","enforceCommentsHistory","reportGenerate","reportName","reportFormat","filePath","elnURL","window","open","info","getSubSampleChildTabDetail","ViewPatientDetails","viewdetails","PatientId","getTestBasedCompletedBatch"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { initRequest } from './LoginAction';\r\nimport { constructOptionList, fillRecordBasedOnCheckBoxSelection, getRecordBasedOnPrimaryKeyName, replaceUpdatedObject, sortData, getSameRecordFromTwoArrays, getSameRecordFromTwoDifferentArrays, filterRecordBasedOnPrimaryKeyName, reArrangeArrays } from '../components/CommonScript';\r\nimport { postCRUDOrganiseTransSearch } from './ServiceAction';\r\nimport { REPORTTYPE, reportCOAType, transactionStatus } from '../components/Enumeration';\r\nimport { intl } from '../components/App';\r\n\r\nexport function getsubSampleDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            ntype: 2,\r\n            nflag: 2,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            nsectioncode: inputData.nsectioncode,\r\n            ntestcode: inputData.ntestcode,\r\n            napprovalversioncode: inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeTestTab,\r\n            activeSubSampleTab: inputData.activeTestTab,\r\n            userinfo: inputData.userinfo,\r\n            nneedsubsample: inputData.masterData.realRegSubTypeValue.nneedsubsample,\r\n            ndesigntemplatemappingcode : inputData.ndesigntemplatemappingcode ? inputData.ndesigntemplatemappingcode : inputData.masterData.ndesigntemplatemappingcode,\r\n            checkBoxOperation: inputData.masterData.searchedSubSample ?  \r\n                inputData.masterData.searchedSubSample.length > 0 ? inputData.checkBoxOperation:3:inputData.checkBoxOperation,\r\n            noParameterget:inputData.checkBoxOperation == 1 ? 3 : 4,\r\n            nbatchmastercode:inputData.nbatchmastercode\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        const subSample = inputData.nneedsubsample\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"approval/getApprovalSubSample\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data, APSelectedSample: inputData.APSelectedSample }\r\n                    responseData = sortData(responseData);\r\n                    let oldSelectedTest = inputData.masterData.APSelectedTest ? inputData.masterData.APSelectedTest : []\r\n                    inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                    //inputData.masterData.APSelectedSubSample = responseData.APSelectedSubSample ? responseData.APSelectedSubSample : inputData.masterData.AP_SUBSAMPLE.length > 0 ? [inputData.masterData.AP_SUBSAMPLE[0]] : []\r\n                    let skipInfo = {}\r\n                    let masterData = {}\r\n                    \r\n                    \r\n                    if (subSample) {\r\n                        \r\n                        let oldSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n                        let AP_TEST = inputData.masterData.AP_TEST\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, response.data, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            APSelectedSample: inputData.APSelectedSample,\r\n                            selectedPreregno: inputData.npreregno,\r\n                            APSelectedSubSample: inputData.masterData.AP_SUBSAMPLE.length > 0 ?\r\n                                [inputData.masterData.AP_SUBSAMPLE[0]] : [],\r\n                        }\r\n                        \r\n                        if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                            inputData.searchTestRef.current.value = \"\"\r\n                            masterData['searchedTests'] = undefined\r\n                        }\r\n                        if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                            inputData.searchSubSampleRef.current.value = \"\";\r\n                            masterData['searchedSubSample'] = undefined\r\n                        }\r\n                        if (inputData.checkBoxOperation === 1 || inputData.checkBoxOperation === 5) {\r\n\r\n                            const wholeSubSampleList = masterData.AP_SUBSAMPLE.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.forEach((subsample, index) => {\r\n                                if (!wholeSubSampleList.includes(subsample.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n\r\n                            })\r\n                            if (oldSelectedSubSample.length > 0) {\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    APSelectedSubSample: oldSelectedSubSample\r\n                                }\r\n                            }\r\n                            const APSelectedTest = oldSelectedTest.length >0 ? getSameRecordFromTwoArrays(oldSelectedTest,\r\n                                masterData.APSelectedSubSample, 'npreregno') : responseData.APSelectedTest\r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest,\r\n                                AP_TEST,\r\n                                ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter,\r\n                                RegistrationSampleAttachment : responseData.RegistrationSampleAttachment ? responseData.RegistrationSampleAttachment.length > 0  ? responseData.RegistrationSampleAttachment : masterData.RegistrationSampleAttachment: masterData.RegistrationSampleAttachment\r\n                            }\r\n                        }\r\n                        if(inputData.checkBoxOperation === 7 )\r\n                        {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest:responseData.APSelectedTest,\r\n                                AP_TEST:responseData.AP_TEST,\r\n                                ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter,\r\n                                RegistrationSampleAttachment : responseData.RegistrationSampleAttachment ? responseData.RegistrationSampleAttachment.length > 0  ? responseData.RegistrationSampleAttachment : masterData.RegistrationSampleAttachment: masterData.RegistrationSampleAttachment\r\n                            }\r\n                        }\r\n                        if (inputData.checkBoxOperation === 3) {\r\n                            masterData = {\r\n                                ...masterData,\r\n                                APSelectedTest: masterData.AP_TEST.length > 0 ? [masterData.AP_TEST[0]] : [],\r\n                                ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter :masterData.ApprovalParameter : masterData.ApprovalParameter,\r\n                                RegistrationSampleAttachment : responseData.RegistrationSampleAttachment ? responseData.RegistrationSampleAttachment.length > 0  ? responseData.RegistrationSampleAttachment : []: [],\r\n                                RegistrationTestAttachment : responseData.RegistrationTestAttachment ? responseData.RegistrationTestAttachment.length > 0  ? responseData.RegistrationTestAttachment : []: [],\r\n                                RegistrationAttachment : responseData.RegistrationAttachment ? responseData.RegistrationAttachment.length > 0  ? responseData.RegistrationAttachment : []: [],\r\n                                RegistrationSampleComment : responseData.RegistrationSampleComment ? responseData.RegistrationSampleComment.length > 0  ? responseData.RegistrationSampleComment : []: [],\r\n                                RegistrationTestComment : responseData.RegistrationTestComment ? responseData.RegistrationTestComment.length > 0  ? responseData.RegistrationTestComment : []: [],\r\n                                RegistrationComment : responseData.RegistrationComment ? responseData.RegistrationComment.length > 0  ? responseData.RegistrationComment : []: []\r\n                               \r\n\r\n                            }\r\n                        }\r\n\r\n\r\n                        let { testskip, testtake, subSampleSkip, subSampleTake } = inputData\r\n                        // let bool = false;\r\n                        // Commented bool value because no need to check bool condition to update skipInfo value.\r\n                        // if (inputData.masterData.AP_SUBSAMPLE.length < inputData.subSampleSkip) {\r\n                            testskip = 0;\r\n                            subSampleSkip = 0;\r\n                        //     bool = true\r\n                        // }\r\n                        // if (bool) {\r\n                            skipInfo = { testskip, testtake, subSampleSkip, subSampleTake }\r\n                        // }\r\n                    }\r\n                    else {\r\n                        let oldApprovalParameter = inputData.masterData.ApprovalParameter;\r\n                        fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n\r\n                        masterData = {\r\n                            ...inputData.masterData,\r\n                            APSelectedSample: inputData.APSelectedSample,\r\n                            APSelectedSubSample: inputData.masterData.APSelectedSubSample,\r\n                            APSelectedTest: inputData.masterData.APSelectedTest || [],\r\n                            selectedPreregno: inputData.npreregno,\r\n                        }\r\n                        if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                            inputData.searchTestRef.current.value = \"\"\r\n                            masterData['searchedTests'] = undefined\r\n                        }\r\n                        // if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        //     inputData.searchSubSampleRef.current.value = \"\";\r\n                        //     masterData['searchedSubSample'] = undefined\r\n                        // }\r\n                        // if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        //     inputData.searchTestRef.current.value = \"\"\r\n                        //     masterData['searchedTests'] = undefined\r\n                        // }\r\n                        let { testskip, testtake } = inputData\r\n                        let bool = false;\r\n                        if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                            testskip = 0;\r\n                            bool = true\r\n                        }\r\n\r\n                        if (bool) {\r\n                            skipInfo = { testskip, testtake }\r\n                        }\r\n\r\n                        let ApprovalParameter = [];\r\n                        let ResultUsedInstrument = [];\r\n                        let ResultUsedTasks = [];\r\n                        let RegistrationTestAttachment = [];\r\n                        let ApprovalResultChangeHistory = [];\r\n                        let RegistrationTestComment = [];\r\n                        let ApprovalHistory = [];\r\n\r\n                        if (inputData.checkBoxOperation === 1) {\r\n\r\n                            let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                            oldSelectedTest.map((test, index) => {\r\n                                if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                    oldSelectedTest.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                            let keepOld = false;\r\n                            let ntransactiontestcode;\r\n                            if (oldSelectedTest.length > 0) {\r\n                                keepOld = true\r\n                                inputData.masterData['ApprovalParameter'] = oldApprovalParameter\r\n                                masterData = {\r\n                                    ...masterData,\r\n                                    //AP_TEST:responseData.AP_TEST,\r\n                                    ApprovalParameter:oldApprovalParameter,\r\n                                    APSelectedTest: oldSelectedTest\r\n                                }\r\n                            } else {\r\n                                ntransactiontestcode = masterData.APSelectedTest[0].ntransactiontestcode\r\n                            }\r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedInstrument\"\r\n                                    dataStateName = \"instrumentDataState\"\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedTasks\"\r\n                                    dataStateName = \"taskDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalResultChangeHistory\"\r\n                                    dataStateName = \"resultChangeDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalHistory\"\r\n                                    dataStateName = \"historyDataState\"\r\n                                    break;\r\n                                default:\r\n                                    ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        } else if (inputData.checkBoxOperation === 5) {\r\n                            let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0;\r\n                            let list = [];\r\n                            let dbData = []\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                            }\r\n                           \r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    dbData = response.data.ApprovalParameter || []\r\n                                    list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    dbData = response.data.ResultUsedInstrument || []\r\n                                    list = [...inputData.masterData.ResultUsedInstrument, ...dbData]\r\n                                    ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    dbData = response.data.ResultUsedTasks || []\r\n                                    list = [...inputData.masterData.ResultUsedTasks, ...dbData]\r\n                                    ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    dbData = response.data.RegistrationTestAttachment || []\r\n                                    list = [...inputData.masterData.RegistrationTestAttachment, ...dbData]\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    dbData = response.data.ApprovalResultChangeHistory || []\r\n                                    list = [...inputData.masterData.ApprovalResultChangeHistory, ...dbData]\r\n                                    ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    dbData = response.data.RegistrationTestComment || []\r\n                                    list = [...inputData.masterData.RegistrationTestComment, ...dbData]\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    dbData = response.data.ApprovalHistory || []\r\n                                    list = [...inputData.masterData.ApprovalHistory, ...dbData]\r\n                                    ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                                default:\r\n                                    dbData = response.data.ApprovalParameter || []\r\n                                    list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    break;\r\n                            }\r\n                        } \r\n                        else if(inputData.checkBoxOperation === 7 )\r\n                        {\r\n                            // masterData = {\r\n                            //     ...masterData,\r\n                            //     APSelectedTest:responseData.APSelectedTest,\r\n                            //     AP_TEST:responseData.AP_TEST,\r\n                            //     ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                            // }\r\n\r\n                            let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0\r\n                            let list = [];\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                            }\r\n                          \r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    list = response.data.ApprovalParameter || []\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    list = response.data.ResultUsedInstrument || []\r\n                                    ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedInstrument\"\r\n                                    dataStateName = \"instrumentDataState\"\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    list = response.data.ResultUsedTasks || []\r\n                                    ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedTasks\"\r\n                                    dataStateName = \"taskDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    list = response.data.RegistrationTestAttachment || []\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    list = response.data.ApprovalResultChangeHistory || []\r\n                                    ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalResultChangeHistory\"\r\n                                    dataStateName = \"resultChangeDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    list = response.data.RegistrationTestComment || []\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    list = response.data.ApprovalHistory || []\r\n                                    ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalHistory\"\r\n                                    dataStateName = \"historyDataState\"\r\n                                    break;\r\n                                default:\r\n                                    list = response.data.ApprovalParameter?[...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]:\r\n                                    [...inputData.masterData.ApprovalParameter]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }else {\r\n                            let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0\r\n                            let list = [];\r\n                            masterData = {\r\n                                ...masterData,\r\n                                selectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                            }\r\n                          \r\n                            switch (inputData.activeTestTab) {\r\n                                case \"IDS_RESULTS\":\r\n                                    list = response.data.ApprovalParameter || []\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                                case \"IDS_INSTRUMENT\":\r\n                                    list = response.data.ResultUsedInstrument || []\r\n                                    ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedInstrument\"\r\n                                    dataStateName = \"instrumentDataState\"\r\n                                    break;\r\n                                case \"IDS_TASK\":\r\n                                    list = response.data.ResultUsedTasks || []\r\n                                    ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ResultUsedTasks\"\r\n                                    dataStateName = \"taskDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTATTACHMENTS\":\r\n                                    list = response.data.RegistrationTestAttachment || []\r\n                                    RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestAttachment\"\r\n                                    break;\r\n                                case \"IDS_RESULTCHANGEHISTORY\":\r\n                                    list = response.data.ApprovalResultChangeHistory || []\r\n                                    ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalResultChangeHistory\"\r\n                                    dataStateName = \"resultChangeDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTCOMMENTS\":\r\n                                    list = response.data.RegistrationTestComment || []\r\n                                    RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"RegistrationTestComment\"\r\n                                    dataStateName = \"testCommentDataState\"\r\n                                    break;\r\n                                case \"IDS_TESTAPPROVALHISTORY\":\r\n                                    list = response.data.ApprovalHistory || []\r\n                                    ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalHistory\"\r\n                                    dataStateName = \"historyDataState\"\r\n                                    break;\r\n                                default:\r\n                                    list = response.data.ApprovalParameter?[...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]:\r\n                                    [...inputData.masterData.ApprovalParameter]\r\n                                    ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                    activeName = \"ApprovalParameter\"\r\n                                    dataStateName = \"resultDataState\"\r\n                                    break;\r\n                            }\r\n                        }\r\n\r\n                        masterData = {\r\n                            ...masterData,\r\n                            ApprovalParameter,\r\n                            ResultUsedInstrument,\r\n                            ResultUsedTasks,\r\n                            RegistrationTestAttachment,\r\n                            ApprovalResultChangeHistory,\r\n                            RegistrationTestComment,\r\n                            ApprovalHistory\r\n                        }\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        samplePrintHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        sampleHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeSubSampleTab:inputData.activeSubSampleTab,\r\n                            skip: undefined,\r\n                            take: undefined,\r\n                            ...skipInfo,\r\n                            activeTabIndex: inputData.activeTabIndex\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            let skipInfo = {};\r\n            let bool = false;\r\n            let { testskip, testtake, subsampletake, subsampleskip } = inputData;\r\n            let oldSelectedTest = inputData.masterData.APSelectedTest\r\n            let oldSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n            let TestSelected = [];\r\n            let subSampleSelected = [];\r\n            let ApprovalParameter = [];\r\n            let ResultUsedInstrument = [];\r\n            let ResultUsedTasks = [];\r\n            let RegistrationTestAttachment = [];\r\n            let ApprovalResultChangeHistory = [];\r\n            let RegistrationTestComment = [];\r\n            let ApprovalHistory = [];\r\n            let isGrandChildGetRequired = false;\r\n            if(inputData[\"statusNone\"])\r\n            {\r\n             TestSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n             subSampleSelected = getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n            else\r\n            {\r\n                TestSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n                subSampleSelected = filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedSubSample, inputData.removeElementFromArray[0].npreregno, \"npreregno\");\r\n            }\r\n          \r\n                if (TestSelected.length > 0) {\r\n                    isGrandChildGetRequired = false;\r\n                } else {\r\n                    isGrandChildGetRequired = true;\r\n                }\r\n\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedSample, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n        \r\n            if (isGrandChildGetRequired) {\r\n                let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\r\n                let APSelectedSample = inputData.APSelectedSample;\r\n                let selectedPreregno = inputData.npreregno;\r\n                let APSelectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\r\n                let APSelectedSubSample = inputData.masterData.AP_SUBSAMPLE\r\n\r\n                if (subSample) {\r\n                    let filterSelectedSubSample = getSameRecordFromTwoArrays(oldSelectedSubSample, inputData.masterData.AP_SUBSAMPLE, \"ntransactionsamplecode\");\r\n                    APSelectedSubSample = filterSelectedSubSample.length > 0 ? filterSelectedSubSample : [inputData.masterData.AP_SUBSAMPLE[0]];\r\n                    if (inputData.masterData.AP_SUBSAMPLE.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n\r\n                }\r\n                let masterData = { ...inputData.masterData, APSelectedSample, APSelectedSubSample, APSelectedTest }\r\n                if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                        \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\r\n                    APSelectedSubSample, checkBoxOperation: 3,masterData,...skipInfo\r\n                }\r\n\r\n                if (subSample) {\r\n                    if (APSelectedTest.length === 0) {\r\n                        inputData[\"npreregno\"] = APSelectedSubSample.map(x => x.npreregno).join(\",\")\r\n                        inputData[\"ntransactionsamplecode\"] = APSelectedSubSample.map(x => x.ntransactionsamplecode).join(\",\")\r\n                        inputData[\"checkBoxOperation\"] = 3\r\n                        inputData[\"childTabsKey\"] = [\"AP_TEST\"]\r\n                        dispatch(getTestDetail(inputData, true));\r\n                    } else {\r\n                        dispatch(getTestChildTabDetail(inputData, true));\r\n                    }\r\n                } else {\r\n                    dispatch(getTestChildTabDetail(inputData, true));\r\n                }\r\n\r\n                // dispatch(getTestChildTabDetail(inputData, true));\r\n            } else {\r\n              \r\n                let masterData = {\r\n                    ...inputData.masterData,\r\n                    APSelectedTest: TestSelected ? TestSelected :inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [],\r\n                    APSelectedSample: inputData.APSelectedSample,\r\n                    APSelectedSubSample: subSampleSelected ? subSampleSelected : inputData.masterData.AP_SUBSAMPLE.length>0 ? [inputData.masterData.AP_SUBSAMPLE[0]]:[]\r\n                }\r\n                let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                oldSelectedTest.map((test, index) => {\r\n                    if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                        oldSelectedTest.splice(index, 1)\r\n                    }\r\n                    return null;\r\n                });\r\n\r\n                if(subSample)\r\n                {\r\n                    if (inputData.masterData.AP_SUBSAMPLE.length <= inputData.subsampleskip) {\r\n                        subsampleskip = 0;\r\n                        skipInfo = { subsampletake, subsampleskip }\r\n                    }\r\n    \r\n                }\r\n                let keepOld = false;\r\n                let ntransactiontestcode;\r\n                if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { ...skipInfo, testskip, testtake }\r\n                }\r\n                if (oldSelectedTest.length > 0) {\r\n                    keepOld = true\r\n                    masterData = {\r\n                        ...masterData,\r\n                        selectedTest: oldSelectedTest\r\n                    }\r\n                } else {\r\n                    ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"-1\";\r\n                }\r\n                switch (inputData.activeTestTab) {\r\n                    case \"IDS_RESULTS\":\r\n                        ApprovalParameter = keepOld ? inputData[\"statusNone\"] ? getRecordBasedOnPrimaryKeyName (inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].npreregno, \"npreregno\"): filterRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].npreregno, \"npreregno\") : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n\r\n                        break;\r\n                    case \"IDS_INSTRUMENT\":\r\n                        ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TASK\":\r\n                        ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTATTACHMENTS\":\r\n                        RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_RESULTCHANGEHISTORY\":\r\n                        ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTCOMMENTS\":\r\n                        RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    case \"IDS_TESTAPPROVALHISTORY\":\r\n                        ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                    default:\r\n                        ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                        break;\r\n                }\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...masterData,\r\n                            ApprovalParameter,\r\n                            ResultUsedInstrument,\r\n                            ResultUsedTasks,\r\n                            RegistrationTestAttachment,\r\n                            ApprovalResultChangeHistory,\r\n                            RegistrationTestComment,\r\n                            ApprovalHistory,\r\n                            ...skipInfo,\r\n                        },\r\n                        ...skipInfo,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab,\r\n                        activeTestTab: inputData.activeTestTab,\r\n                        activeSubSampleTab:inputData.activeSubSampleTab,\r\n                        activeTabIndex: inputData.activeTabIndex\r\n                    }\r\n                })\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function getTestDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        let inputParamData = {\r\n            ntype: 2,\r\n            nflag: 3,\r\n            nsampletypecode: inputData.nsampletypecode,\r\n            nregtypecode: inputData.nregtypecode,\r\n            nregsubtypecode: inputData.nregsubtypecode,\r\n            npreregno: inputData.npreregno,\r\n            ntransactionstatus: inputData.ntransactionstatus,\r\n            napprovalversioncode: inputData.napprovalversioncode,\r\n            napprovalconfigcode: inputData.napprovalconfigcode,\r\n            ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n            nsectioncode: inputData.nsectioncode,\r\n            ntestcode: inputData.ntestcode,\r\n            activeTestTab: inputData.activeTestTab,\r\n            activeSampleTab: inputData.activeSampleTab,\r\n            activeSubSampleTab: inputData.activeSubSampleTab,\r\n            userinfo: inputData.userinfo,\r\n            ntransactionstatus:inputData.ntransactionstatus,\r\n          //  ndesigntemplatemappingcode : inputData.masterData.ndesigntemplatemappingcode,\r\n            ndesigntemplatemappingcode : inputData.ndesigntemplatemappingcode,\r\n            checkBoxOperation: inputData.checkBoxOperation,\r\n            nneedsubsample: inputData.masterData.realRegSubTypeValue.nneedsubsample,\r\n            nbatchmastercode:inputData.nbatchmastercode\r\n\r\n        }\r\n        let activeName = \"\";\r\n        let dataStateName = \"\";\r\n        let masterData = {};\r\n        let subSample = inputData.nneedsubsample;\r\n        dispatch(initRequest(true));\r\n        if (isServiceRequired) {\r\n            rsapi.post(\"approval/getApprovalTest\", inputParamData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    //responseData = sortData(responseData,'descending', 'npreregno')\r\n                    inputData.searchTestRef.current.null = \"\"\r\n                    //inputData.masterData.APSelectedTest = responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n\r\n                    let oldSelectedTest = inputData.masterData.APSelectedTest\r\n                    let oldSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n\r\n                    inputData.masterData.APSelectedTest = oldSelectedTest.length > 0 ? oldSelectedTest : responseData.APSelectedTest ? responseData.APSelectedTest : inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"npreregno\", inputData.removeElementFromArray);\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedTest: inputData.masterData.APSelectedTest,\r\n                        // APselectedSample: inputData.APSelectedSample,\r\n                        APSelectedSubSample: inputData.APSelectedSubSample,\r\n                        selectedPreregno: inputData.npreregno,\r\n                    }\r\n\r\n                    if (inputData.searchSubSampleRef !== undefined && inputData.searchSubSampleRef.current !== null) {\r\n                        inputData.searchSubSampleRef.current.value = \"\";\r\n                        masterData['searchedSubSample'] = undefined\r\n                    }\r\n                    if (inputData.searchTestRef !== undefined && inputData.searchTestRef.current !== null) {\r\n                        inputData.searchTestRef.current.value = \"\"\r\n                        masterData['searchedTests'] = undefined\r\n                    }\r\n\r\n                    let { testskip, testtake, subSampleSkip, subSampleTake } = inputData\r\n                    // let bool = false;\r\n                    // Commented bool value because no need to check bool condition to update skipInfo value.\r\n                    if (inputData.masterData.AP_SUBSAMPLE.length <= inputData.subSampleSkip) {\r\n                        subSampleSkip = 0;\r\n                    }\r\n                    // if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                        testskip = 0;\r\n                        // bool = true\r\n                    // }\r\n                    let skipInfo = {}\r\n                    // if (bool) {\r\n                        skipInfo = { testskip, testtake, subSampleSkip, subSampleTake }\r\n                    // }\r\n\r\n                    let ApprovalParameter = [];\r\n                    let ResultUsedInstrument = [];\r\n                    let ResultUsedTasks = [];\r\n                    let RegistrationTestAttachment = [];\r\n                    let ApprovalResultChangeHistory = [];\r\n                    let RegistrationTestComment = [];\r\n                    let ApprovalHistory = [];\r\n                    let RegistrationSampleComment = [];\r\n                    let RegistrationSampleAttachment = [];\r\n\r\n\r\n\r\n                    if (inputData.checkBoxOperation === 1) {\r\n                        let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                        oldSelectedTest.map((test, index) => {\r\n                            if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                                oldSelectedTest.splice(index, 1)\r\n                            }\r\n                            return null;\r\n                        })\r\n                        let keepOld = false;\r\n                        let ntransactiontestcode;\r\n                       \r\n                        ntransactiontestcode = masterData.APSelectedTest[0].ntransactiontestcode\r\n                        // }\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                        if(subSample)\r\n                        {\r\n                            let wholeSubsampleList = masterData.AP_SUBSAMPLE.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.map((test, index) => {\r\n                                if (!wholeSubsampleList.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                        let keepOld = false;\r\n                        let ntransactionsamplecode;\r\n                       \r\n                        ntransactionsamplecode = masterData.APSelectedSubSample[0].ntransactionsamplecode\r\n                            switch (inputData.activeSubSampleTab) {\r\n                                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                                    RegistrationSampleComment = keepOld ? inputData.masterData.RegistrationSampleComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleComment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                    activeName = \"RegistrationSampleComment\"\r\n                                    dataStateName = \"subSampleCommentDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationSampleAttachment = keepOld ? inputData.masterData.RegistrationSampleAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationSampleAttachment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                    activeName = \"RegistrationSampleAttachment\"\r\n                                    dataStateName = \"subSampleAttachmentDataState\"\r\n                                break;\r\n                            }\r\n                        }\r\n                        \r\n                    } else if (inputData.checkBoxOperation === 5) {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                        }\r\n                        let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : 0;\r\n                        let list = [];\r\n                        let dbData = []\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                dbData = response.data.ApprovalParameter || []\r\n                                list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(dbData, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                dbData = response.data.ResultUsedInstrument || []\r\n                                list = [...inputData.masterData.ResultUsedInstrument, ...dbData]\r\n                                ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                dbData = response.data.ResultUsedTasks || []\r\n                                list = [...inputData.masterData.ResultUsedTasks, ...dbData]\r\n                                ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                dbData = response.data.RegistrationTestAttachment || []\r\n                                list = [...inputData.masterData.RegistrationTestAttachment, ...dbData]\r\n                                RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                dbData = response.data.ApprovalResultChangeHistory || []\r\n                                list = [...inputData.masterData.ApprovalResultChangeHistory, ...dbData]\r\n                                ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                dbData = response.data.RegistrationTestComment || []\r\n                                list = [...inputData.masterData.RegistrationTestComment, ...dbData]\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                dbData = response.data.ApprovalHistory || []\r\n                                list = [...inputData.masterData.ApprovalHistory, ...dbData]\r\n                                ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                            default:\r\n                                dbData = response.data.ApprovalParameter || []\r\n                                list = [...inputData.masterData.ApprovalParameter, ...dbData]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                break;\r\n                        }\r\n                    } else if (inputData.checkBoxOperation === 7) {\r\n                        let testList = reArrangeArrays( inputData.masterData.AP_SUBSAMPLE, responseData.AP_TEST, \"ntransactionsamplecode\");\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest:[testList[0]],\r\n                            AP_TEST: testList,\r\n                            ApprovalParameter:responseData.ApprovalParameter ? responseData.ApprovalParameter.length > 0  ? responseData.ApprovalParameter : masterData.ApprovalParameter: masterData.ApprovalParameter\r\n                        }\r\n                        // let wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                    \r\n                         let keepOld = false;\r\n                        // let ntransactiontestcode;\r\n                        // if (oldSelectedTest.length > 0) {\r\n                        //     keepOld = true\r\n                        //     masterData = {\r\n                        //         ...masterData,\r\n                        //         APSelectedTest: oldSelectedTest\r\n                        //     }\r\n                        // } else {\r\n                        //     ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\"\r\n                        // }\r\n                        let ntransactiontestcode = testList.length > 0 ? testList[0].ntransactiontestcode : \"\"\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                ApprovalParameter =  getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n\r\n                    } else {\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : []\r\n                        }\r\n                        let ntransactiontestcode = response.data.APSelectedTest ? response.data.APSelectedTest.length > 0 ? \r\n                                response.data.APSelectedTest[0].ntransactiontestcode : inputData.masterData.AP_TEST ? inputData.masterData.AP_TEST.length > 0 ?  inputData.masterData.AP_TEST[0].ntransactiontestcode :-1:-1:-1\r\n                                \r\n                                //inputData.masterData.AP_TEST ? inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode: -1 : -1\r\n                        let list = [];\r\n                        switch (inputData.activeTestTab) {\r\n                            case \"IDS_RESULTS\":\r\n                                list = response.data.ApprovalParameter || []\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, ntransactiontestcode, \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                            case \"IDS_INSTRUMENT\":\r\n                                list = response.data.ResultUsedInstrument || []\r\n                                ResultUsedInstrument = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedInstrument\"\r\n                                dataStateName = \"instrumentDataState\"\r\n                                break;\r\n                            case \"IDS_TASK\":\r\n                                list = response.data.ResultUsedTasks || []\r\n                                ResultUsedTasks = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ResultUsedTasks\"\r\n                                dataStateName = \"taskDataState\"\r\n                                break;\r\n                            case \"IDS_TESTATTACHMENTS\":\r\n                                list = response.data.RegistrationTestAttachment || []\r\n                                RegistrationTestAttachment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestAttachment\"\r\n                                break;\r\n                            case \"IDS_RESULTCHANGEHISTORY\":\r\n                                list = response.data.ApprovalResultChangeHistory || []\r\n                                ApprovalResultChangeHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalResultChangeHistory\"\r\n                                dataStateName = \"resultChangeDataState\"\r\n                                break;\r\n                            case \"IDS_TESTCOMMENTS\":\r\n                                list = response.data.RegistrationTestComment || []\r\n                                RegistrationTestComment = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"RegistrationTestComment\"\r\n                                dataStateName = \"testCommentDataState\"\r\n                                break;\r\n                            case \"IDS_TESTAPPROVALHISTORY\":\r\n                                list = response.data.ApprovalHistory || []\r\n                                ApprovalHistory = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalHistory\"\r\n                                dataStateName = \"historyDataState\"\r\n                                break;\r\n                            default:\r\n                                list = response.data.ApprovalParameter?[...inputData.masterData.ApprovalParameter, ...response.data.ApprovalParameter]:\r\n                                [...inputData.masterData.ApprovalParameter]\r\n                                ApprovalParameter = getRecordBasedOnPrimaryKeyName(list, inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode : \"\", \"ntransactiontestcode\")\r\n                                activeName = \"ApprovalParameter\"\r\n                                dataStateName = \"resultDataState\"\r\n                                break;\r\n                        }\r\n                    }\r\n                    if(subSample)\r\n                        {\r\n                            let wholeSubsampleList = masterData.AP_SUBSAMPLE.map(b => b.ntransactionsamplecode)\r\n                            oldSelectedSubSample.map((test, index) => {\r\n                                if (!wholeSubsampleList.includes(test.ntransactionsamplecode)) {\r\n                                    oldSelectedSubSample.splice(index, 1)\r\n                                }\r\n                                return null;\r\n                            })\r\n                        let keepOld = false;\r\n                        let ntransactionsamplecode;\r\n\r\n                        if (oldSelectedSubSample.length > 0) {\r\n                            keepOld = true\r\n                            // masterData = {\r\n                            //     ...masterData,\r\n                            //     //AP_TEST:responseData.AP_TEST,\r\n                            //     ApprovalParameter:oldApprovalParameter,\r\n                            //     APSelectedSubSample: oldSelectedSubSample\r\n                            // }\r\n                        } else {\r\n                            ntransactionsamplecode = masterData.APSelectedSubSample[0].ntransactionsamplecode\r\n                        }\r\n                       \r\n                       // ntransactionsamplecode = masterData.APSelectedSubSample[0].ntransactionsamplecode\r\n                            switch (inputData.activeSubSampleTab) {\r\n                                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                                    RegistrationSampleComment = keepOld ? inputData.masterData.RegistrationSampleComment : getRecordBasedOnPrimaryKeyName(responseData.RegistrationSampleComment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                    activeName = \"RegistrationSampleComment\"\r\n                                    dataStateName = \"subSampleCommentDataState\"\r\n                                    break;\r\n                                default:\r\n                                    RegistrationSampleAttachment = keepOld ? inputData.masterData.RegistrationSampleAttachment : getRecordBasedOnPrimaryKeyName(responseData.RegistrationSampleAttachment, ntransactionsamplecode, \"ntransactionsamplecode\")\r\n                                    activeName = \"RegistrationSampleAttachment\"\r\n                                    dataStateName = \"subSampleAttachmentDataState\"\r\n                                break;\r\n                            }\r\n                        }\r\n\r\n                    masterData = {\r\n                        ...masterData,\r\n                        ApprovalParameter,\r\n                        ResultUsedInstrument,\r\n                        ResultUsedTasks,\r\n                        RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory,\r\n                        RegistrationTestComment,\r\n                        ApprovalHistory,\r\n                        RegistrationSampleComment,\r\n                        RegistrationSampleAttachment\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        samplePrintHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        sampleHistoryDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    skipInfo = {\r\n                        ...skipInfo,\r\n                        subSampleCommentDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        },\r\n                        subSampleAttachmentDataState: {\r\n                            ...inputData[dataStateName],\r\n                            sort: undefined,\r\n                            filter: undefined\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                APSelectedSubSample: inputData.APSelectedSubSample,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode,\r\n                                activeTestTab: inputData.activeTestTab,\r\n                                activeSampleTab: inputData.activeSampleTab,\r\n                                skip: undefined,\r\n                                take: undefined,\r\n                                ...skipInfo\r\n                            },\r\n                            ...skipInfo,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            let bool = false;\r\n            let skipInfo = {};\r\n            let { testskip, testtake } = inputData;\r\n            let oldSelectedTest = inputData.masterData.APSelectedTest\r\n            let TestSelected = \r\n          inputData[\"statusNone\"] ?\r\n            getRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].ntransactionsamplecode, \"ntransactionsamplecode\"):\r\n            filterRecordBasedOnPrimaryKeyName(inputData.masterData.APSelectedTest, inputData.removeElementFromArray[0].ntransactionsamplecode, \"ntransactionsamplecode\");\r\n            let isGrandChildGetRequired = false;\r\n            if (TestSelected.length > 0) {\r\n                isGrandChildGetRequired = false;\r\n            } else {\r\n                isGrandChildGetRequired = true;\r\n            }\r\n\r\n            let ApprovalParameter = [];\r\n            let ResultUsedInstrument = [];\r\n            let ResultUsedTasks = [];\r\n            let RegistrationTestAttachment = [];\r\n            let ApprovalResultChangeHistory = [];\r\n            let RegistrationTestComment = [];\r\n\r\n            let ApprovalHistory = [];\r\n            fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedSubSample, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n            if (isGrandChildGetRequired) {\r\n                //let ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ? inputData.masterData.AP_TEST[0].ntransactiontestcode.toString() : \"\";\r\n                let APSelectedSample = inputData.masterData.APSelectedSample;\r\n                let selectedPreregno = inputData.npreregno;\r\n                //let selectedTest = inputData.masterData.AP_TEST.length > 0 ? [inputData.masterData.AP_TEST[0]] : [];\r\n                let APSelectedSubSample = inputData.APSelectedSubSample\r\n                //let APSelectedSubSample = inputData.masterData.APSelectedSubSample\r\n                let filterTestSameOldSelectedTest = getSameRecordFromTwoDifferentArrays(oldSelectedTest, inputData.masterData.AP_TEST, \"ntransactiontestcode\");\r\n                let APSelectedTest = filterTestSameOldSelectedTest.length > 0 ? filterTestSameOldSelectedTest : [inputData.masterData.AP_TEST[0]];\r\n                let ntransactiontestcode = APSelectedTest.length > 0 ? APSelectedTest.map(x => x.ntransactiontestcode).join(\",\") : \"-1\";\r\n\r\n                if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                    testskip = 0;\r\n                    bool = true;\r\n                }\r\n                if (bool) {\r\n                    skipInfo = { testskip, testtake }\r\n                }\r\n                inputData = {\r\n                    ...inputData, childTabsKey: [\"ApprovalParameter\", \"ApprovalResultChangeHistory\", \"ResultUsedInstrument\",\r\n                        \"ResultUsedTasks\", \"RegistrationTestAttachment\", \"RegistrationTestComment\"], ntransactiontestcode, APSelectedSample, selectedPreregno, APSelectedTest,\r\n                    APSelectedSubSample, checkBoxOperation: 3, skipInfo\r\n                }\r\n                dispatch(getTestChildTabDetail(inputData, true));\r\n            } \r\n            else {\r\n                    let keepOld = false;\r\n                    let ntransactiontestcode;\r\n\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedSubSample: inputData.APSelectedSubSample,\r\n                        selectedTransactioncode: inputData.ntransactionsamplecode,\r\n                        APSelectedTest: TestSelected ? TestSelected : inputData.masterData.AP_TEST.length > 0 ?\r\n                            [inputData.masterData.AP_TEST[0]] : [],\r\n                    }\r\n\r\n                    const wholeTestList = masterData.AP_TEST.map(b => b.ntransactiontestcode)\r\n                    oldSelectedTest.forEach((test, index) => {\r\n                        if (!wholeTestList.includes(test.ntransactiontestcode)) {\r\n                            oldSelectedTest.splice(index, 1)\r\n                        }\r\n                        return null;\r\n                    });\r\n                    if (inputData.masterData.AP_TEST.length <= inputData.testskip) {\r\n                        testskip = 0;\r\n                        bool = true\r\n                    }\r\n                    let skipInfo = {}\r\n                    if (bool) {\r\n                        skipInfo = { testskip, testtake }\r\n                    }\r\n\r\n                    if (oldSelectedTest.length > 0) {\r\n                        keepOld = true\r\n                        masterData = {\r\n                            ...masterData,\r\n                            APSelectedTest: oldSelectedTest,\r\n                        }\r\n                    } else {\r\n                        ntransactiontestcode = inputData.masterData.AP_TEST.length > 0 ?\r\n                            inputData.masterData.AP_TEST[0].ntransactiontestcode : \"-1\"\r\n                    }\r\n\r\n\r\n                    switch (inputData.activeTestTab) {\r\n                        case \"IDS_RESULTS\":\r\n                            ApprovalParameter = keepOld ? \r\n                            inputData[\"statusNone\"] ?\r\n                            getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].ntransactionsamplecode,'ntransactionsamplecode'):\r\n                            filterRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter,inputData.removeElementFromArray[0].ntransactionsamplecode,'ntransactionsamplecode') : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_INSTRUMENT\":\r\n                            ResultUsedInstrument = keepOld ? inputData.masterData.ResultUsedInstrument : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedInstrument, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TASK\":\r\n                            ResultUsedTasks = keepOld ? inputData.masterData.ResultUsedTasks : getRecordBasedOnPrimaryKeyName(inputData.masterData.ResultUsedTasks, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTATTACHMENTS\":\r\n                            RegistrationTestAttachment = keepOld ? inputData.masterData.RegistrationTestAttachment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestAttachment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_RESULTCHANGEHISTORY\":\r\n                            ApprovalResultChangeHistory = keepOld ? inputData.masterData.ApprovalResultChangeHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalResultChangeHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTCOMMENTS\":\r\n                            RegistrationTestComment = keepOld ? inputData.masterData.RegistrationTestComment : getRecordBasedOnPrimaryKeyName(inputData.masterData.RegistrationTestComment, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        case \"IDS_TESTAPPROVALHISTORY\":\r\n                            ApprovalHistory = keepOld ? inputData.masterData.ApprovalHistory : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalHistory, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                        default:\r\n                            ApprovalParameter = keepOld ? inputData.masterData.ApprovalParameter : getRecordBasedOnPrimaryKeyName(inputData.masterData.ApprovalParameter, ntransactiontestcode, \"ntransactiontestcode\")\r\n                            break;\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...masterData,\r\n                                ApprovalParameter,\r\n                                ResultUsedInstrument,\r\n                                ResultUsedTasks,\r\n                                RegistrationTestAttachment,\r\n                                ApprovalResultChangeHistory,\r\n                                RegistrationTestComment,\r\n                                ApprovalHistory\r\n                            },\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            ...skipInfo,\r\n                            activeSampleTab: inputData.activeSampleTab,\r\n                            activeTestTab: inputData.activeTestTab\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n        //}\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function getTestChildTabDetail(inputData, isServiceRequired) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactiontestcode: inputData.ntransactiontestcode,\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            let { testtake } = inputData;\r\n            let activeName = \"\";\r\n            let dataStateName = \"\";\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_PARAMETERRESULTS\":\r\n                    url = \"registration/getregistrationparameter\"\r\n                    activeName = \"RegistrationParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    url = \"resultentrybysample/getResultUsedInstrument\"\r\n                    activeName = \"ResultUsedInstrument\"\r\n                    dataStateName = \"instrumentDataState\"\r\n                    break;\r\n                case \"IDS_MATERIAL\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    activeName = \"ResultUsedTasks\"\r\n                    dataStateName = \"taskDataState\"\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    url = \"attachment/getTestAttachment\"\r\n                    activeName = \"RegistrationTestAttachment\"\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    url = \"comments/getTestComment\"\r\n                    activeName = \"RegistrationTestComment\"\r\n                    dataStateName = \"testCommentDataState\"\r\n                    break;\r\n                case \"IDS_DOCUMENTS\":\r\n                    url = \"approval/getapprovalparameter\"\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    url = \"approval/getApprovalResultChangeHistory\"\r\n                    activeName = \"ApprovalResultChangeHistory\"\r\n                    dataStateName = \"resultChangeDataState\"\r\n                    break;\r\n                case \"IDS_TESTAPPROVALHISTORY\":\r\n                    url = \"approval/getSampleApprovalHistory\"\r\n                    activeName = \"ApprovalHistory\"\r\n                    dataStateName = \"historyDataState\"\r\n                    break;\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                default:\r\n                    url = \"approval/getapprovalparameter\"\r\n                    activeName = \"ApprovalParameter\"\r\n                    dataStateName = \"resultDataState\"\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                if (isServiceRequired) {\r\n                    rsapi.post(url, inputParamData)\r\n                        .then(response => {\r\n                            let skipInfo = {};\r\n                            let responseData = { ...response.data, APSelectedSubSample: inputData.APSelectedSubSample || inputData.masterData.APSelectedSubSample, selectedTest: inputData.APselectedTest }\r\n                            //responseData = inputData.checkBoxOperation === 7 ?  sortData( response.data,\"descending\",\"npreregno\"):responseData;\r\n                            //sortData( responseData,\"descending\",\"ntransactionsamplecode\")\r\n                            // fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.selectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\",inputData.removeElementFromArray);\r\n                            fillRecordBasedOnCheckBoxSelection(inputData.masterData, responseData, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactionsamplecode\", inputData.removeElementFromArray);\r\n                            let masterData = {\r\n                                ...inputData.masterData,\r\n                                APSelectedSample: inputData.APSelectedSample || inputData.masterData.APSelectedSample,\r\n                                APSelectedSubSample: inputData.APSelectedSubSample || inputData.masterData.APSelectedSubSample,\r\n                                APSelectedTest: inputData.APSelectedTest,\r\n                                selectedPreregno: inputData.npreregno,\r\n                                selectedSampleCode: inputData.ntransactionsamplecode ? inputData.ntransactionsamplecode :inputData.masterData.APSelectedSubSample[0].ntransactionsamplecode ,\r\n                                selectedTestCode: inputData.ntransactiontestcode,\r\n                                activeTabIndex:inputData.activeTabIndex,\r\n                                activeTabId:inputData.activeTabId\r\n                            }\r\n                            if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                                skipInfo = {\r\n\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        skip: 0,\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                skipInfo = {\r\n                                    ...skipInfo,\r\n                                    [dataStateName]: {\r\n                                        ...inputData[dataStateName],\r\n                                        sort: undefined,\r\n                                        filter: undefined\r\n                                    }\r\n                                }\r\n                            }\r\n                            dispatch({\r\n                                type: DEFAULT_RETURN, payload: {\r\n                                    masterData,\r\n                                    loading: false,\r\n                                    showFilter: false,\r\n                                    activeTabIndex:inputData.activeTabIndex,\r\n                                    activeTabId:inputData.activeTabId,\r\n                                    activeTestTab: inputData.activeTestTab,\r\n                                    screenName: inputData.screenName,\r\n                                    testtake, testskip: undefined,\r\n                                    ...skipInfo\r\n                                }\r\n                            })\r\n                        })\r\n                        .catch(error => {\r\n                            dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                            if (error.response.status === 500) {\r\n                                toast.error(error.message);\r\n                            }\r\n                            else {\r\n                                toast.warn(error.response.data);\r\n                            }\r\n                        })\r\n                } else {\r\n                    fillRecordBasedOnCheckBoxSelection(inputData.masterData, inputData.APSelectedTest, inputData.childTabsKey, inputData.checkBoxOperation, \"ntransactiontestcode\", inputData.removeElementFromArray);\r\n                    let skipInfo = {};\r\n                    let masterData = {\r\n                        ...inputData.masterData,\r\n                        APSelectedTest: inputData.APSelectedTest,\r\n                        selectedPreregno: inputData.npreregno,\r\n                        selectedSampleCode: inputData.ntransactionsamplecode,\r\n                        selectedTestCode: inputData.ntransactiontestcode,\r\n                    }\r\n                    if (inputData[dataStateName] && masterData[activeName].length <= inputData[dataStateName].skip) {\r\n\r\n                        skipInfo = {\r\n\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                skip: 0,\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    } else {\r\n                        skipInfo = {\r\n                            ...skipInfo,\r\n                            [dataStateName]: {\r\n                                ...inputData[dataStateName],\r\n                                sort: undefined,\r\n                                filter: undefined\r\n                            }\r\n                        }\r\n                    }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            showFilter: false,\r\n                            activeTestTab: inputData.activeTestTab,\r\n                            screenName: inputData.screenName,\r\n                            testtake, testskip: undefined,\r\n                            ...skipInfo\r\n                        }\r\n                    })\r\n                }\r\n\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            let { ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment, ApprovalResultChangeHistory,\r\n                RegistrationTestComment, ApprovalHistory } = inputData.masterData\r\n            switch (inputData.activeTestTab) {\r\n                case \"IDS_RESULTS\":\r\n                    ApprovalParameter = [];\r\n                    break;\r\n                case \"IDS_INSTRUMENT\":\r\n                    ResultUsedInstrument = []\r\n                    break;\r\n                case \"IDS_TASK\":\r\n                    ResultUsedTasks = []\r\n                    break;\r\n                case \"IDS_TESTATTACHMENTS\":\r\n                    RegistrationTestAttachment = []\r\n                    break;\r\n                case \"IDS_RESULTCHANGEHISTORY\":\r\n                    ApprovalResultChangeHistory = []\r\n                    break;\r\n                case \"IDS_TESTCOMMENTS\":\r\n                    RegistrationTestComment = []\r\n                    break;\r\n                case \"IDS_APPROVALHISTORY\":\r\n                    ApprovalHistory = []\r\n                    break;\r\n                default:\r\n                    ApprovalParameter = []\r\n                    break;\r\n            }\r\n\r\n            dispatch({\r\n                type: DEFAULT_RETURN, payload: {\r\n                    masterData: {\r\n                        ...inputData.masterData,\r\n                        selectedTest: [],\r\n                        ApprovalParameter, ResultUsedInstrument, ResultUsedTasks, RegistrationTestAttachment,\r\n                        ApprovalResultChangeHistory, RegistrationTestComment, ApprovalHistory\r\n                    }, loading: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\nexport function getSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.npreregno.length > 0) {\r\n            let inputParamData = {\r\n                npreregno: inputData.npreregno,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSampleTab) {\r\n                case \"IDS_SAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SAMPLECOMMENTS\":\r\n                    url = \"comments/getSampleComment\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedMaterial\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"resultentrybysample/getResultUsedTask\"\r\n                    break;\r\n                case \"IDS_SOURCE\":\r\n                    url = \"registration/getRegistrationSourceCountry\"\r\n                    break;\r\n                case \"IDS_SAMPLEAPPROVALHISTORY\":\r\n                    url = \"approval/getSampleApprovalHistory\"\r\n                    break;\r\n\r\n                case \"IDS_PRINTHISTORY\":\r\n                    url = \"approval/getPrintHistory\"\r\n                    break;\r\n                case \"IDS_REPORTHISTORY\":\r\n                    url = \"approval/getCOAHistory\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    selectedSample: inputData.selectedSample,\r\n                                    selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeSampleTab: inputData.activeSampleTab,\r\n                                activeTestTab: inputData.activeSampleTab,\r\n                                screenName: inputData.screenName,\r\n                                selectedId: null\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            selectedSample: inputData.selectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            \r\n            toast.warn(intl.formatMessage({ id: \"IDS_PLSSELECTASAMPLE\" }));\r\n        }\r\n    }\r\n}\r\nexport function performAction(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/performAction\", inputParam.inputData)\r\n            .then(response => {\r\n                if(response.data.rtn === undefined || response.data.rtn===\"Success\"){\r\n                    replaceUpdatedObject(response.data[\"AP_SAMPLE\"], inputParam.masterData.AP_SAMPLE, \"npreregno\");\r\n                    replaceUpdatedObject(response.data[\"AP_SUBSAMPLE\"], inputParam.masterData.AP_SUBSAMPLE, \"ntransactionsamplecode\");\r\n                    replaceUpdatedObject(response.data[\"AP_TEST\"], inputParam.masterData.AP_TEST, \"ntransactiontestcode\");\r\n\r\n                    delete response.data[\"AP_SAMPLE\"];\r\n                    delete response.data[\"AP_SUBSAMPLE\"];\r\n                    delete response.data[\"AP_TEST\"];\r\n                    let masterData = {\r\n                        ...inputParam.masterData,\r\n                         ...response.data,\r\n                         APSelectedSample: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.APSelectedSample, \"npreregno\"),\r\n                         APSelectedSubSample: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.APSelectedSubSample, \"ntransactionsamplecode\"),\r\n                        APSelectedTest: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.APSelectedTest, \"ntransactiontestcode\"),\r\n                    }\r\n                // let masterData = {\r\n                //     ...inputParam.masterData,\r\n                //     ...response.data,\r\n                //     AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\r\n                //     AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\r\n                //     AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\r\n                // }\r\n                // dispatch({type: DEFAULT_RETURN, payload:{\r\n                // masterData:{\r\n                //     ...inputParam.inputData.masterData,\r\n                //     ...response.data, \r\n                //     AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam   .inputData.masterData.AP_SAMPLE,'npreregno'),\r\n                //     AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.inputData.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\r\n                //     AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.inputData.masterData.AP_TEST,'ntransactiontestcode')\r\n                // },\r\n                //     loading:false ,\r\n                //     loadEsign:false,\r\n                //     openChildModal:false                     \r\n                // }}) \r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"dynamic\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false\r\n                }\r\n\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n\r\n\r\n                \r\n            }else{\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        loadEsign: false,\r\n                        openModal: false\r\n                    }\r\n                });\r\n                toast.warn(response.data.rtn);\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                    //toast.error(intl.formatMessage({ id: \"IDS_SERVICEERROR\" }));\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function updateDecision(inputParam) {\r\n\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/updateDecision\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                // dispatch({type: DEFAULT_RETURN, payload:{\r\n                //     masterData:{\r\n                //         ...inputParam.masterData,\r\n                //         ...responseData, \r\n                //         AP_SAMPLE:replaceUpdatedObject(response.data.updatedSample,inputParam.masterData.AP_SAMPLE,'npreregno'),\r\n                //         AP_SUBSAMPLE:replaceUpdatedObject(response.data.updatedSubSample,inputParam.masterData.AP_SUBSAMPLE,'ntransactionsamplecode'),\r\n                //         AP_TEST:replaceUpdatedObject(response.data.updatedTest,inputParam.masterData.AP_TEST,'ntransactiontestcode')\r\n\r\n                //     },\r\n                //     loading:false                      \r\n                // }}) \r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                    AP_SAMPLE: replaceUpdatedObject(response.data.updatedSample, inputParam.masterData.AP_SAMPLE, 'npreregno'),\r\n                    AP_SUBSAMPLE: replaceUpdatedObject(response.data.updatedSubSample, inputParam.masterData.AP_SUBSAMPLE, 'ntransactionsamplecode'),\r\n                    AP_TEST: replaceUpdatedObject(response.data.updatedTest, inputParam.masterData.AP_TEST, 'ntransactiontestcode')\r\n\r\n                }\r\n                let respObject = {\r\n                    masterData,\r\n                    inputParam,\r\n                    openChildModal: false,\r\n                    operation: \"dynamic\",\r\n                    masterStatus: \"\",\r\n                    errorCode: undefined,\r\n                    loadEsign: false,\r\n                    showEsign: false,\r\n                    selectedRecord: {},\r\n                    loading: false\r\n                }\r\n                dispatch(postCRUDOrganiseTransSearch(inputParam.postParamList, respObject))\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getRegistrationType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            SampleTypeValue: inputData.SampleTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getRegistrationSubType(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getRegistrationSubType\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegTypeValue: inputData.RegTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getFilterStatus(inputData) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApproveConfigVersionRegTemplateDesign\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...responseData,\r\n                            RegSubTypeValue: inputData.RegSubTypeValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getFilterBasedTest(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.napprovalversioncode) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approval/getFilterBasedTest\", inputData)\r\n                .then(response => {\r\n\r\n\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData: {\r\n                                ...inputData.masterData,\r\n                                ...responseData,\r\n                                RegSubTypeValue: inputData.RegSubTypeValue,\r\n                                ndesigntemplatemappingcode:inputData.ndesigntemplatemappingcode,\r\n                                DesignTemplateMappingValue:inputData.DesignTemplateMappingValue\r\n                            },\r\n                            loading: false\r\n                        }\r\n                    })\r\n                    if (response.data.rtn) {\r\n                        toast.warn(response.data.rtn);\r\n                    }\r\n\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        }\r\n        else {\r\n            //toast.warn(\"Please Select All the Values in Filter\");\r\n            toast.warn(intl.FormattedMessage({\r\n                id: \"IDS_PLSSELECTALLVALUESINFILTER\"\r\n            }));\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport function getApprovalVersion(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalVersion\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n              //  responseData = sortData(responseData)\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            // fromDate: inputParam.inputData.dfrom,\r\n                            // toDate: inputParam.inputData.dto,\r\n                        },\r\n                        loading: false,\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getApprovalSample(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getApprovalSample\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                // responseData = sortData(responseData)\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                if (inputParam.searchSampleRef !== undefined && inputParam.searchSampleRef.current !== null) {\r\n                    inputParam.searchSampleRef.current.value = \"\";\r\n                    masterData['searchedSample'] = undefined\r\n                }\r\n                if (inputParam.searchSubSampleRef !== undefined && inputParam.searchSubSampleRef.current !== null) {\r\n                    inputParam.searchSubSampleRef.current.value = \"\";\r\n                    masterData['searchedSubSample'] = undefined\r\n                }\r\n                if (inputParam.searchTestRef !== undefined && inputParam.searchTestRef.current !== null) {\r\n                    inputParam.searchTestRef.current.value = \"\"\r\n                    // masterData['searchedTest'] = undefined\r\n                    masterData['searchedTests'] = undefined\r\n\r\n                }\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData,\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        skip: 0,\r\n                        take: inputParam.take,\r\n                        testskip: 0,\r\n                        testtake: inputParam.testtake,\r\n                        resultDataState: { ...inputParam.resultDataState, sort: undefined, filter: undefined },\r\n                        instrumentDataState: { ...inputParam.instrumentDataState, sort: undefined, filter: undefined },\r\n                        materialDataState: { ...inputParam.materialDataState, sort: undefined, filter: undefined },\r\n                        taskDataState: { ...inputParam.taskDataState, sort: undefined, filter: undefined },\r\n                        documentDataState: { ...inputParam.documentDataState, sort: undefined, filter: undefined },\r\n                        resultChangeDataState: { ...inputParam.resultChangeDataState, sort: undefined, filter: undefined },\r\n                        testCommentDataState: { ...inputParam.testCommentDataState, sort: undefined, filter: undefined },\r\n                        historyDataState: { ...inputParam.historyDataState, sort: undefined, filter: undefined },\r\n                        samplePrintHistoryDataState: { ...inputParam.samplePrintHistoryDataState, sort: undefined, filter: undefined },\r\n                        sampleHistoryDataState: { ...inputParam.sampleHistoryDataState, sort: undefined, filter: undefined }\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getStatusCombo(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            ntransactionresultcode: inputParam.primaryKeyValue,\r\n            userinfo: inputParam.userInfo\r\n        }\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getStatusCombo\", inputData)\r\n            .then(response => {\r\n                let responseData = { ...response.data }\r\n                //responseData = sortData(responseData)\r\n                const GradeListMap = constructOptionList(response.data.Grade || [], \"ngradecode\", \"sgradename\", 'ascending', 'ngradecode', false);\r\n                let Grade = GradeListMap.get(\"OptionList\");\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputParam.masterData,\r\n                            ...responseData,\r\n                            Grade,\r\n                            selectedParamId: inputParam.primaryKeyValue\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        openChildModal: true,\r\n                        ncontrolCode: inputParam.ncontrolCode,\r\n                        selectedRecord: {\r\n                            senforcestatuscomment: response.data.parameterComment && response.data.parameterComment.senforcestatuscomment,\r\n                            ntransactionresultcode: response.data.parameterComment && response.data.parameterComment.ntransactionresultcode,\r\n                            ntransactiontestcode: response.data.parameterComment && response.data.parameterComment.ntransactiontestcode\r\n                        },\r\n                        operation: \"enforce\",\r\n                        screenName: \"IDS_STATUS\"\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getParameterEdit(inputParam) {\r\n    return function (dispatch) {\r\n        let inputData = {\r\n            ntransactiontestcode: inputParam.selectedTest && inputParam.selectedTest.map(item => item.ntransactiontestcode).join(\",\"),\r\n            userinfo: inputParam.userInfo\r\n        }\r\n        if (inputData.ntransactiontestcode && inputData.ntransactiontestcode.length > 0) {\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"approval/getEditParameter\", inputData)\r\n                .then(response => {\r\n                    let responseData = { ...response.data }\r\n                    responseData = sortData(responseData)\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            ...responseData,\r\n                            loading: false,\r\n                            openChildModal: true,\r\n                            operation: \"update\",\r\n                            screenName: \"IDS_APPROVALPARAMETER\"\r\n                            // ncontrolCode:inputParam.ncontrolCode,\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    }\r\n                    else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    multilingualMsg: \"IDS_SELECTTEST\",\r\n                }\r\n            });\r\n        }\r\n    }\r\n}\r\nexport function validateEsignforApproval(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n\r\n                    if (inputParam.operation === 'dynamic') {\r\n                        const methodUrl = \"performaction\"\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n\r\n                        if (inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()] &&\r\n                            inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"]) {\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignpassword\"];\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esigncomments\"];\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"esignreason\"];\r\n                            delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][methodUrl.toLowerCase()][\"agree\"];\r\n                        }\r\n                        dispatch(performAction(inputParam[\"screenData\"][\"inputParam\"], inputParam[\"screenData\"][\"masterData\"]))\r\n                    } else if (inputParam.operation === 'reportgeneration') {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"]['reporparam'][\"agree\"];\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"reporparam\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                        dispatch(generateCOAReport(inputParam[\"screenData\"][\"inputParam\"]['reporparam']))\r\n                    }\r\n                    else if (inputParam.operation === 'decision') {\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignpassword\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esigncomments\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"esignreason\"];\r\n                        delete inputParam[\"screenData\"][\"inputParam\"][\"inputData\"]['updatedecision'][\"agree\"];\r\n                        inputParam[\"screenData\"][\"inputParam\"][\"inputData\"][\"userinfo\"] = inputParam.inputData.userinfo;\r\n                        dispatch(updateDecision(inputParam[\"screenData\"][\"inputParam\"]))\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nexport function previewSampleReport(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        let ndecisionStatus = inputParam.sample.ndecisionstatus;\r\n        if (inputParam.sample.ndecisionstatus === undefined || inputParam.sample.ndecisionstatus === transactionStatus.DRAFT) {\r\n            ndecisionStatus = transactionStatus.PASS;\r\n        }\r\n        const inputData = {\r\n            ndecisionstatus: ndecisionStatus,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.sample.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLECERTIFICATEPRIVIEW,\r\n            nreporttypecode: REPORTTYPE.SAMPLEREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.sample.nregtypecode,\r\n            nregsubtypecode: inputParam.sample.nregsubtypecode,\r\n            npreregno: inputParam.sample.npreregno\r\n        }\r\n        rsapi.post(\"approval/previewSampleReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function generateCOAReport(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const inputData = {\r\n            npreregno: inputParam.sample.npreregno,\r\n            nsectioncode: inputParam.nsectioncode || -1,\r\n            userinfo: inputParam.userinfo,\r\n            nprimarykey: inputParam.sample.npreregno,\r\n            ncoareporttypecode: reportCOAType.SAMPLEWISE,\r\n            nreporttypecode: REPORTTYPE.COAREPORT,\r\n            sprimarykeyname: \"npreregno\",\r\n            ncontrolcode: inputParam.ncontrolCode,\r\n            nregtypecode: inputParam.nregtypecode,\r\n            nregsubtypecode: inputParam.nregsubtypecode\r\n        }\r\n        rsapi.post(\"approval/generateCOAReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n                    document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filepath);\r\n                    document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, selectedRecord: {}, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function getEnforceCommentsHistory(selectedParam, masterData, userInfo,idsName,dataField) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getEnforceCommentsHistory\", {\r\n            ntransactionresultcode: selectedParam.ntransactionresultcode,\r\n            userinfo: userInfo,\r\n            fetchField:dataField\r\n        })\r\n            .then(response => {\r\n                if (response.data.length > 0) {\r\n                    masterData = { ...masterData, enforceCommentsHistory: response.data }\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            masterData,\r\n                            openChildModal: true,\r\n                            operation: \"view\",\r\n                            screenName: \"IDS_ENFORCECOMMENTHISTORY\",\r\n                            idsName:idsName,\r\n                            dataField:dataField\r\n                        }\r\n                    })\r\n                } else {\r\n                    dispatch({ type: DEFAULT_RETURN, payload: { loading: false, multilingualMsg: \"IDS_NOPREVIOUSCOMMENTSFOUND\" } })\r\n\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\nexport function reportGenerate(inputParam) {\r\n    return function (dispatch) {\r\n\r\n        dispatch(initRequest(true));\r\n        const inputData = {\r\n            npreregno: inputParam.sample.npreregno,\r\n            userinfo: inputParam.userinfo,\r\n            nregsubtypecode: inputParam.sample.nregsubtypecode,\r\n            reportName:\"RJ_Testwise_Report_QRCode\",\r\n            reportFormat:\"pdf\"\r\n           \r\n        }\r\n        rsapi.post(\"reportjasper/generateCOAReport\", inputData)\r\n            .then(response => {\r\n\r\n                if (response.data.rtn === \"Success\") {\r\n\r\n                    if (response.data.filePath) {\r\n                       // let user = response;\r\n                        let elnURL = response.data.filePath;\r\n                        window.open(elnURL, '_blank');\r\n                    } else {\r\n                        toast.info(intl.FormattedMessage({\r\n                            id: \"IDS_ELNUIURLNOTAVAILABLE\"\r\n                        }))\r\n                    }\r\n\r\n                    // document.getElementById(\"download_data\").setAttribute(\"href\", response.data.filePath);\r\n                    // document.getElementById(\"download_data\").click();\r\n                } else {\r\n                    toast.warn(response.data.rtn);\r\n                }\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false, openChildModal: false, selectedRecord: {}, loadEsign: false } })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getSubSampleChildTabDetail(inputData) {\r\n    return function (dispatch) {\r\n        if (inputData.ntransactionsamplecode.length > 0) {\r\n            let inputParamData = {\r\n                ntransactionsamplecode: inputData.ntransactionsamplecode,\r\n                userinfo: inputData.userinfo\r\n            }\r\n            let url = null\r\n            switch (inputData.activeSubSampleTab) {\r\n                case \"IDS_SUBSAMPLEATTACHMENTS\":\r\n                    url = \"attachment/getSubSampleAttachment\"\r\n                    break;\r\n                case \"IDS_SUBSAMPLECOMMENTS\":\r\n                    url = \"comments/getSubSampleComment\"\r\n                    break;\r\n                default:\r\n                    url = null\r\n                    break;\r\n            }\r\n            if (url !== null) {\r\n                dispatch(initRequest(true));\r\n                rsapi.post(url, inputParamData)\r\n                    .then(response => {\r\n                        let responseData = { ...response.data }\r\n                        responseData = sortData(responseData)\r\n                        dispatch({\r\n                            type: DEFAULT_RETURN, payload: {\r\n                                masterData: {\r\n                                    ...inputData.masterData,\r\n                                    ...responseData,\r\n                                    APSelectedSubSample: inputData.APSelectedSubSample,\r\n                                   // selectedTestCode: inputData.ntransactiontestcode,\r\n                                },\r\n                                loading: false,\r\n                                showFilter: false,\r\n                                activeTestTab: inputData.activeSubSampleTab,\r\n                                screenName: inputData.screenName\r\n                            }\r\n                        })\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                        if (error.response.status === 500) {\r\n                            toast.error(error.message);\r\n                        }\r\n                        else {\r\n                            toast.warn(error.response.data);\r\n                        }\r\n                    })\r\n            } else {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            APSelectedSample: inputData.APSelectedSample\r\n                        },\r\n                        loading: false,\r\n                        showFilter: false,\r\n                        activeSampleTab: inputData.activeSampleTab\r\n                    }\r\n                })\r\n            }\r\n        } else {\r\n            //toast.warn(\"Please Select a Sample\");\r\n            toast.warn(intl.FormattedMessage({\r\n                id: \"IDS_PLSSELECTASAMPLE\"\r\n            }));\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport function ViewPatientDetails(masterData, screenName, userInfo, viewdetails) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const selectedRecord={\r\n            ntestcode:viewdetails.test.ntestcode\r\n        }\r\n        rsapi.post(\"worklist/getSampleViewDetails\", { selectedRecord, PatientId:viewdetails.test.PatientId, npreregno: viewdetails.test.npreregno, userinfo: userInfo })\r\n            .then(response => {\r\n                masterData['AuditModifiedComments'] = [];\r\n                masterData['AuditModifiedComments'] = response.data['AuditModifiedComments']\r\n                masterData['viewdetails'] = [];\r\n                masterData['viewdetails'] = response.data['viewdetails'][0]\r\n                //sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData,\r\n                        screenName: \"IDS_PREVIOUSRESULTVIEW\",\r\n                        operation: \"\",\r\n                        loading: false,\r\n                        openChildModal: true,\r\n\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function  getTestBasedCompletedBatch (inputData){\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"approval/getTestBasedOnCompletedBatch\", inputData)\r\n            .then(response => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        masterData: {\r\n                            ...inputData.masterData,\r\n                            ...response.data,\r\n                           // defaultTestvalues: inputData.defaultTestvalues //,\r\n                            // defaultRegistrationSubType: inputData.masterData.defaultRegistrationSubType,//inputData.defaultRegistrationSubType,\r\n                            // ndesigntemplatemappingcode: inputData.ndesigntemplatemappingcode,\r\n                            // DesignTemplateMappingValue: inputData.DesignTemplateMappingValue\r\n                        },\r\n                        loading: false\r\n                    }\r\n                })\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}