{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _toConsumableArray from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{injectIntl}from'react-intl';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{getControlMap,constructOptionList,copyText,convertDateTimetoStringDBFormat}from'../../components/CommonScript';import{connect}from'react-redux';import{Alert,Button,Card,Col,Form,Row}from'react-bootstrap';import{ListWrapper}from'../../components/client-group.styles';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{stringOperatorData,numericOperatorData,dateConditionData}from'../dashboard/SqlBuilderFilterType';import FormInput from'../../components/form-input/form-input.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import DateTimePicker from'../../components/date-time-picker/date-time-picker.component';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faCopy,faMinus,faPlus}from'@fortawesome/free-solid-svg-icons';import{toast}from'react-toastify';import ReactJson from\"react-json-view\";import{sendRequest,getQualisFormsFields,getQualisForms,updateStore}from\"../../actions\";import{ContentPanel}from'../../components/App.styles';import{DEFAULT_RETURN}from'../../actions/LoginTypes';//import APIConsole from \"./APIConsole\"\nvar mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var APIService=/*#__PURE__*/function(_React$Component){_inherits(APIService,_React$Component);var _super=_createSuper(APIService);function APIService(props){var _this;_classCallCheck(this,APIService);_this=_super.call(this,props);//  this.console = React.createRef();\n_this.onInputOnChange=function(event,value,variant){if(event.target.type===\"checkbox\"){var constructApiData=_this.state.constructApiData;var selectedRecord=_this.state.selectedRecord;// selectedRecord['check'] = label\n// constructApiData={...constructApiData,[variant.item.scolumn]:\"\"}\nvar value1=selectedRecord[event.target.name];if(value1!==''&&value1!==undefined){if(value1.toLowerCase().includes(value.toLowerCase())){var index=value1.toLowerCase().indexOf(value.toLowerCase());delete constructApiData[variant.item.scolumn];if(index!==-1){if(index===0){var indexcomma=value1.indexOf(\",\");if(indexcomma!==-1){selectedRecord[event.target.name]=value1.slice(indexcomma+1);}else{selectedRecord[event.target.name]=\"\";}}else{if(value1.slice(index).indexOf(\",\")!==-1){selectedRecord[event.target.name]=value1.slice(0,index)+value1.slice(index+value1.slice(index).indexOf(\",\")+1);}else{selectedRecord[event.target.name]=value1.slice(0,index-1);}}}}else{selectedRecord[event.target.name]=value1+','+value;constructApiData=[].concat(_toConsumableArray(constructApiData),[_defineProperty({},variant.item.scolumn,\"\")]);}}else{selectedRecord[event.target.name]=value1+','+value;constructApiData=[].concat(_toConsumableArray(constructApiData),[_defineProperty({},variant.item.scolumn,\"\")]);}_this.setState({selectedRecord:selectedRecord,constructApiData:constructApiData,constructApiDataString:constructApiData.map(function(e){return JSON.stringify(e).replace(/{|}/g,'');}).join(',\\n')});}else{// const selectedRecord = this.state.selectedRecord;\nvar text=event.target.value.replaceAll('\\n','');text=text.replace(/\\s+/g,'');var constructApiData1=JSON.parse(text);var _constructApiData=Object.keys(constructApiData1).map(function(x){return _defineProperty({},x,constructApiData1[x]);});_this.setState({constructApiData:_constructApiData,constructApiDataString:_constructApiData.map(function(e){return JSON.stringify(e).replace(/{|}/g,'');}).join(',\\n')});}};_this.onComboChange=function(event,colunName){var selectedRecord=_this.state.selectedRecord;var oldValue=_objectSpread({},selectedRecord[colunName]);selectedRecord[colunName]=event;var map1=new Map();map1['userinfo']=_this.props.Login.userInfo;map1['selectedRecord']=selectedRecord;map1['masterData']=_this.props.Login.masterData;if(colunName==='napiservicecode'){_this.props.getQualisForms(map1);// this.setState({ selectedRecord })\n}else{if(oldValue&&oldValue.value!==event.value){_this.props.getQualisFormsFields(map1);}}//  this.setState({ selectedRecord })\n};_this.checkFilter=function(filterList){var check=[];filterList.map(function(item,index){if(item.filterColumn){if(item.filterCondition){if(item.filterColumn.item.columndatatype==='string'){if(item.filterCondition.value==='='||item.filterCondition.value==='IN'||item.filterCondition.value==='NOT'){if(item.filterValue&&item.filterValue!==\"\"){check.push(true);}}else{if(item.filterCondition){check.push(true);}}}else if(item.filterColumn.item.columndatatype==='numeric'){if(item.filterCondition.value==='='||item.filterCondition.value==='!='||item.filterCondition.value==='>'||item.filterCondition.value==='<'||item.filterCondition.value==='>='||item.filterCondition.value==='<='){if(item.filterValue&&item.filterValue!==\"\"){check.push(true);}}else{if(item.filterCondition){check.push(true);}}}else if(item.filterColumn.item.columndatatype==='date'){if(item.filterCondition.value==='='||item.filterCondition.value==='NOT'){if(item.filterValue&&item.filterValue!==\"\"){check.push(true);}}else{if(item.filterCondition){check.push(true);}}}}}});return check.length===filterList.length?true:false;};_this.onMoreClick=function(e){var selectedRecord=_this.state.selectedRecord||{};if(_this.checkFilter(selectedRecord['filterNew']||[])){if(_this.props.Login.masterData.SelectedForm){if(selectedRecord['filterNew']===undefined){selectedRecord['filterNew']=[];}selectedRecord['filterNew'][selectedRecord['filterNew'].length]={};var lstQryColumn=_this.removeSameRecordFromTwoDifferentArrays(_this.state.lstQueryBuilder,selectedRecord['filterNew']);if(lstQryColumn.length>0){_this.setState({selectedRecord:selectedRecord,lstQryColumn:lstQryColumn});}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_COLUMNSNOTAVALIABLE\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_SELECTTHEFORM\"}));}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_PLEASEFILLTHEVALUE\"}));}};_this.onFilterInputOnChange=function(event,index){var selectedRecord=_this.state.selectedRecord||{};//  const constructApiData = this.state.constructApiData\nvar filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);var change=_objectSpread(_objectSpread({},filterTableNewAddedList[index]),{},_defineProperty({},event.target.name,event.target.value));var changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(filterTableNewAddedList.splice(index+1)));// const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n// if (index1 === -1) {\n//     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\n// } else {\n//     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\n// }\n_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:changeData})});};_this.onFilterNumericInputChange=function(value,name,index){var selectedRecord=_this.state.selectedRecord||{};//   const constructApiData = this.state.constructApiData\nvar filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);var change=_objectSpread(_objectSpread({},filterTableNewAddedList[index]),{},_defineProperty({},name,value));// constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterValue })\n// const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n// if (index1 === -1) {\n//     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\n// } else {\n//     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\n// }\nvar changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(filterTableNewAddedList.splice(index+1)));_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:changeData})});};_this.handleDateChange=function(columnLabel,value,index){var selectedRecord=_this.state.selectedRecord||{};// const constructApiData = this.state.constructApiData\nvar filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);var change=_objectSpread(_objectSpread({},filterTableNewAddedList[index]),{},_defineProperty({},columnLabel,value));// const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n// if (index1 === -1) {\n//     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\n// } else {\n//     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\n// }\nvar changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(filterTableNewAddedList.splice(index+1)));_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:changeData})});};_this.onfilterChange=function(comboValue,columnLabel,conditionType,index){var selectedRecord=_this.state.selectedRecord;if(conditionType==='column'){var _objectSpread5;var filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);var change=_objectSpread(_objectSpread({},filterTableNewAddedList[index]),{},(_objectSpread5={},_defineProperty(_objectSpread5,columnLabel,comboValue),_defineProperty(_objectSpread5,\"filterCondition\",undefined),_defineProperty(_objectSpread5,\"filterValueType\",undefined),_defineProperty(_objectSpread5,\"filterValue\",undefined),_objectSpread5));var changeData=[].concat(_toConsumableArray(filterTableNewAddedList.splice(0,index)),[_objectSpread({},change)],_toConsumableArray(filterTableNewAddedList.splice(index+1)));_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:changeData})});}else if(conditionType==='condition'){var _filterTableNewAddedList=_toConsumableArray(selectedRecord['filterNew']);var _change=_objectSpread(_objectSpread({},_filterTableNewAddedList[index]),{},_defineProperty({},columnLabel,comboValue));var _changeData=[].concat(_toConsumableArray(_filterTableNewAddedList.splice(0,index)),[_objectSpread(_objectSpread({},_change),{},{filterValue:undefined})],_toConsumableArray(_filterTableNewAddedList.splice(index+1)));// let constructApiData = this.state.constructApiData\n// if (change[\"filterCondition\"].value === 'IS NULL' ||\n//     change[\"filterCondition\"].value === 'IS NOT NULL' ||\n//     change[\"filterCondition\"].value === 'PRESENT' ||\n//     change[\"filterCondition\"].value === 'BLANK' ||\n//     change[\"filterCondition\"].value !== 'NULL' ||\n//     change[\"filterCondition\"].value !== 'NOT NULL' ||\n//     change[\"filterCondition\"].value === 'IN') {\n//     // constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value })\n//     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n//     if (index1 === -1) {\n//         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value })\n//     } else {\n//         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value }\n//     }\n// }\n// else if(change[\"filterColumn\"].item.columndatatype === 'date'&& \n// (change.filterCondition.value === '=' || change.filterCondition.value === '<' \n// || change.filterCondition.value === '>')){\n//     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n//     if (index1 === -1) {\n//         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\" })\n//     } else {\n//         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\"  }\n//     }\n// }\n// else if(change[\"filterColumn\"].item.columndatatype === 'date'&& \n//  (item.filterCondition.value === 'NOT')){\n//     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\n//     if (index1 === -1) {\n//         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\" })\n//     } else {\n//         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\"  }\n//     }\n// }\n_this.setState({selectedRecord:_objectSpread(_objectSpread({},selectedRecord),{},{filterNew:_changeData})});}};_this.onFilterModalDelete=function(childIndex){// let constructApiData1 = [{ ...this.state.constructApiData[0] }, { ...this.state.constructApiData[1] }]\n// let constructApiData2 = [...this.state.constructApiData]\n// constructApiData2 = constructApiData2.splice(2)\n// constructApiData2 = constructApiData2.splice(0, childIndex)\n// let constructApiData3 = [...this.state.constructApiData]\n// constructApiData3 = constructApiData3.splice(2)\n// constructApiData3 = constructApiData3.splice(childIndex + 1)\nvar selectedRecord=_this.state.selectedRecord;selectedRecord['filterNew']=[].concat(_toConsumableArray(selectedRecord['filterNew'].slice(0,childIndex)),_toConsumableArray(selectedRecord['filterNew'].slice(childIndex+1)));// constructApiData1 = [...constructApiData1, ...constructApiData2, ...constructApiData3]\n_this.setState({selectedRecord:selectedRecord});};_this.filterQueryFormation=function(selectedRecord){var str=\"\";var strform=\"\";selectedRecord['filterNew']&&selectedRecord['filterNew'].length>0&&selectedRecord['filterNew'].map(function(item,index){if(item.filterCondition){if(item.filterCondition.value==='IN'){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+\" ('\"+(item.filterValue?item.filterValue:\"\")+\"') \";}else if(item.filterCondition.value==='PRESENT'){str=str+\" NOT \"+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" ='' \";}else if(item.filterCondition.value==='BLANK'){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" ='' \";}else if(item.filterCondition.value==='NULL'||item.filterCondition.value==='NOT NULL'){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" IS '\"+item.filterCondition.value+\"' \";}else if(item.filterCondition.value==='IS NULL'){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+\"' \";}else if(item.filterCondition.value==='IS NOT NULL'){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+\"' \";}else if(item.filterCondition.value==='STARTS WITH'){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\"ILIKE\"+\" '\"+(item.filterValue?item.filterValue:\"\")+\"%' collate \\\"default\\\"\";}else if(item.filterCondition.value==='ENDS WITH'){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\"ILIKE\"+\" '%\"+(item.filterValue?item.filterValue:\"\")+\"' collate \\\"default\\\"\";}else if(item.filterCondition.value==='CONTAINS'){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\"ILIKE\"+\" '\"+(item.filterValue?item.filterValue:\"\")+\"%' collate \\\"default\\\"\";}else if(item.filterColumn.item.columndatatype==='date'&&(item.filterCondition.value==='='||item.filterCondition.value==='<'||item.filterCondition.value==='>')){str=str+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+(\"'\"+(item.filterValue?convertDateTimetoStringDBFormat(item.filterValue,_this.props.Login.userInfo):convertDateTimetoStringDBFormat(new Date(),_this.props.Login.userInfo))+\"' \");}else if(item.filterColumn.item.columndatatype==='date'&&item.filterCondition.value==='NOT'){str=str+\"(NOT \"+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" = \"+(\"'\"+(item.filterValue?convertDateTimetoStringDBFormat(item.filterValue,_this.props.Login.userInfo):convertDateTimetoStringDBFormat(new Date(),_this.props.Login.userInfo))+\"')\");}else if(item.filterColumn.item.columndatatype==='string'&&item.filterCondition.value==='NOT'){str=str+\"(NOT \"+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" = \"+(\"'\"+item.filterValue?item.filterValue:\"\"+\"')\");}else{str=str+\" \"+(item.filterColumn.item.isjsoncolumn?item.filterColumn.item.ismultilingual?item.filterColumn.item.jsoncolumnname+\"->'\"+item.filterColumn.item.scolumn+\"'->>'\"+_this.props.Login.userInfo.slanguagetypecode+\"'\":item.filterColumn.item.jsoncolumnname+\"->>'\"+item.filterColumn.item.scolumn+\"'\":\"\\\"\"+item.filterColumn.item.scolumn+\"\\\"\")+\" \"+item.filterCondition.value+(\"'\"+(item.filterValue?item.filterValue:\"\")+\"' \");}if(index!==selectedRecord['filterNew'].length-1){str=str+\" and \";}}//  })\n});strform=strform+\" \"+str;return strform;};_this.copyToClipboard=function(){copyText(_this.copyParameter());toast.info(_this.props.intl.formatMessage({id:\"IDS_COPIEDSUCCESSFULLY\"}));};_this.sendRequest=function(){var selectedRecord=_this.state.selectedRecord;if(_this.props.Login.masterData.SelectedApi){if(_this.props.Login.masterData.SelectedForm){var url=_this.props.Login.masterData.SelectedApi.item.sapiservice;var obj=_this.sendObject();var obj1={\"inputData\":obj,url:url,masterData:_this.props.Login.masterData};_this.props.sendRequest(obj1);}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTTHEFORM\"}));}}else{toast.info(_this.props.intl.formatMessage({id:\"IDS_SELECTTHEAPI\"}));}};_this.removeSameRecordFromTwoDifferentArrays=function(firstArray,secondArray){var filterArray=[];if(Array.isArray(secondArray)&&secondArray.length>0){secondArray.map(function(x,index1){firstArray.map(function(y){if(x.filterColumn){if(x.filterColumn.item.scolumn===y.item.scolumn){var index=firstArray.findIndex(function(x1){return x1.item.scolumn===y.item.scolumn;});var firstArray1=_toConsumableArray(firstArray);firstArray1=_toConsumableArray(firstArray1.splice(0,index));var firstArray2=_toConsumableArray(firstArray);firstArray2=_toConsumableArray(firstArray2.splice(index+1));filterArray=[].concat(_toConsumableArray(firstArray1),_toConsumableArray(firstArray2));firstArray=_toConsumableArray(filterArray);}}else{if(index1===0){filterArray=_toConsumableArray(firstArray);}}});});}else{filterArray=_toConsumableArray(firstArray);}return filterArray;};_this.showQueryParameter=function(){//   let newObject = {}\nvar returnString=\"{\";_this.state.constructApiData.map(function(e,index){if(index<2){returnString=returnString+\" \\n \\\"\"+Object.keys(e)+\"\\\":\\\"\"+Object.values(e)+\"\\\"\";}});var text=_this.filterQueryFormation(_this.state.selectedRecord);returnString=returnString+\"\\n\"+\" \\\"whereCondition\\\":\\\"\"+text+\"\\\"\\n}\";// const object = {\n//     ...newObject,\n//     \"whereCondition\": text\n// }\nreturn returnString;};_this.copyParameter=function(){var newObject={};_this.state.constructApiData.map(function(e,index){if(index<2){newObject=_objectSpread(_objectSpread({},newObject),e);}});var text=_this.filterQueryFormation(_this.state.selectedRecord);var object=_objectSpread(_objectSpread({},newObject),{},{\"whereCondition\":text});return JSON.stringify(object);};_this.sendObject=function(){var newObject={};_this.state.constructApiData.map(function(e){newObject=_objectSpread(_objectSpread({},newObject),e);});var text=_this.filterQueryFormation(_this.state.selectedRecord);var object=_objectSpread(_objectSpread({},newObject),{},{\"whereCondition\":text});return object;};_this.state={selectedRecord:{},constructApiData:[],consoleData:[],controlMap:{},userRoleControlRights:[],masterStatus:\"\",error:\"\"};return _this;}_createClass(APIService,[{key:\"render\",value:function render(){var _this2=this;return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:5,className:\"pr-3\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"napiservicecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_API\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.apiServiceList||[],value:this.props.Login.masterData.SelectedApi&&this.props.Login.masterData.SelectedApi,isMandatory:true,isClearable:false,isMulti:false,isSearchable:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.onComboChange(event,'napiservicecode');}})),/*#__PURE__*/React.createElement(Col,{md:1},/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(e){return _this2.sendRequest();}},this.props.intl.formatMessage({id:\"IDS_SENT\"})))),/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:9},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nformcode\",formLabel:this.props.intl.formatMessage({id:\"IDS_FORMS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:this.state.qualisList||[],value:this.props.Login.masterData.SelectedForm&&this.props.Login.masterData.SelectedForm,isMandatory:true,isClearable:false,isMulti:false,isSearchable:false,closeMenuOnSelect:true,onChange:function onChange(event){return _this2.onComboChange(event,'nformcode');}}))),/*#__PURE__*/React.createElement(Card,{className:\"api-filter-condition-card\"},/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(\"form\",null,/*#__PURE__*/React.createElement(\"section\",{className:'modal-card-body'},this.state.selectedRecord['filterNew']&&this.state.selectedRecord['filterNew'].map(function(item,index){return/*#__PURE__*/React.createElement(\"div\",{className:'field has-addons filterheight'},/*#__PURE__*/React.createElement(\"div\",{class:\"control is-expanded\"},/*#__PURE__*/React.createElement(\"div\",{class:\"select is-fullwidth\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:_this2.props.intl.formatMessage({id:\"IDS_FIELDS\"}),isSearchable:true,name:\"filterColumn\",placeholder:_this2.props.intl.formatMessage({id:\"IDS_FIELDS\"}),showOption:true,options:_this2.state.lstQryColumn||[],value:item[\"filterColumn\"]&&item[\"filterColumn\"]||\"\",onChange:function onChange(value){return _this2.onfilterChange(value,\"filterColumn\",'column',index);}}))),/*#__PURE__*/React.createElement(\"div\",{class:\"control is-expanded\"},/*#__PURE__*/React.createElement(\"div\",{class:\"select is-fullwidth\"},/*#__PURE__*/React.createElement(FormSelectSearch,{formGroupClassName:\"remove-floating-label-margin\",formLabel:_this2.props.intl.formatMessage({id:\"IDS_CONDITION\"}),isSearchable:true,name:\"sviewname\",placeholder:_this2.props.intl.formatMessage({id:\"IDS_CONDITION\"}),showOption:true,options:item[\"filterColumn\"]&&item[\"filterColumn\"].item?item[\"filterColumn\"].item.columndatatype==='string'?stringOperatorData:item[\"filterColumn\"].item.columndatatype==='numeric'?numericOperatorData:item[\"filterColumn\"].item.columndatatype==='date'?dateConditionData:stringOperatorData:\"\",value:item[\"filterCondition\"]!==undefined?item[\"filterCondition\"]:\"\",onChange:function onChange(value){return _this2.onfilterChange(value,\"filterCondition\",'condition',index);}}))),/*#__PURE__*/React.createElement(\"div\",{className:\"control \"},item[\"filterCondition\"]&&item[\"filterCondition\"].value&&item[\"filterColumn\"]?item[\"filterColumn\"].item.columndatatype==='string'?item[\"filterCondition\"].value!=='IS NULL'&&item[\"filterCondition\"].value!=='IS NOT NULL'&&item[\"filterCondition\"].value!=='PRESENT'&&item[\"filterCondition\"].value!=='BLANK'?/*#__PURE__*/React.createElement(FormInput,{label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),name:\"filterValue\",type:\"text\",onChange:function onChange(event){return _this2.onFilterInputOnChange(event,index);},placeholder:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),value:item[\"filterValue\"]?item[\"filterValue\"]:\"\",isMandatory:true,required:true,maxLength:100}):\"\":item[\"filterColumn\"].item.columndatatype==='numeric'?item[\"filterCondition\"].value!=='NULL'&&item[\"filterCondition\"].value!=='NOT NULL'?item[\"filterCondition\"].value==='IN'?/*#__PURE__*/React.createElement(FormInput,{label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),name:\"filterValue\",type:\"text\",onChange:function onChange(event){return _this2.onFilterInputOnChange(event,index);},placeholder:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),value:item[\"filterValue\"]?item[\"filterValue\"]:\"\",isMandatory:true,required:true,maxLength:100}):/*#__PURE__*/React.createElement(FormNumericInput,{name:\"filterValue\",label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),type:\"number\",value:item[\"filterValue\"],placeholder:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),strict:true//min={0}\n//max={99999999.99}\n,maxLength:10,onChange:function onChange(value){return _this2.onFilterNumericInputChange(value,\"filterValue\",index);},noStyle:true//precision={2}\n//isMandatory={true}\n,className:\"form-control\",errors:\"Please provide a valid number.\"}):\"\":item[\"filterColumn\"].item.columndatatype==='date'?item[\"filterCondition\"].value==='='||item[\"filterCondition\"].value==='<'||item[\"filterCondition\"].value==='>'||item[\"filterCondition\"].value==='NOT'?/*#__PURE__*/React.createElement(DateTimePicker,{name:\"filterValue\",label:_this2.props.intl.formatMessage({id:\"IDS_VALUE\"}),className:\"form-control\",placeholderText:_this2.props.intl.formatMessage({id:\"IDS_SELECTDATE\"}),selected:item[\"filterValue\"]?item[\"filterValue\"]:new Date(),dateFormat:_this2.props.Login.userInfo[\"ssitedatetime\"],timeInputLabel:_this2.props.intl.formatMessage({id:\"IDS_TIME\"}),showTimeInput:true,onChange:function onChange(date){return _this2.handleDateChange(\"filterValue\",date,index);},value:item[\"filterValue\"]?item[\"filterValue\"]:\"\"}):\"\":\"\":\"\"),/*#__PURE__*/React.createElement(\"div\",{className:\"control\"},_this2.state.selectedRecord['filterNew'].length>0&&/*#__PURE__*/React.createElement(Button,{className:\"button is-light is-danger\",onClick:function onClick(){return _this2.onFilterModalDelete(index);},type:\"button\",tabindex:\"0\"},/*#__PURE__*/React.createElement(\"span\",{className:\"icon\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faMinus})))));}),/*#__PURE__*/React.createElement(\"div\",{className:'buttons is-right'},/*#__PURE__*/React.createElement(Button,{className:'button is-light is-info is-small',onClick:function onClick(e){return _this2.onMoreClick(e);},type:\"button\",tabindex:\"0\"},/*#__PURE__*/React.createElement(\"span\",{className:\"icon\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faPlus})),/*#__PURE__*/React.createElement(\"span\",null,this.props.intl.formatMessage({id:\"IDS_ADDMORE\"}))))))))),/*#__PURE__*/React.createElement(Col,{md:7},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"my-2 \"},/*#__PURE__*/React.createElement(Card.Header,{className:\"product-title-main\"},/*#__PURE__*/React.createElement(Card.Title,null,this.props.intl.formatMessage({id:\"IDS_QUERYPARAMS\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"api-card-body-scrollable-element\"},/*#__PURE__*/React.createElement(\"pre\",null,this.showQueryParameter()),/*#__PURE__*/React.createElement(\"div\",{className:\"buttons is-right\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(e){return _this2.copyToClipboard();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{className:\"\",icon:faCopy}),'  ',this.props.intl.formatMessage({id:\"IDS_COPYQUERYPARAMS\"})))))),/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"product-title-main\"},/*#__PURE__*/React.createElement(Card.Title,null,this.props.intl.formatMessage({id:\"IDS_RESPONSE\"}))),/*#__PURE__*/React.createElement(Card.Body,{className:\"api-card-body\"},/*#__PURE__*/React.createElement(ReactJson,{src:this.props.Login.masterData.consoleData&&this.props.Login.masterData.consoleData}))))))));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){console.log(this.props.Login.masterData!==previousProps.Login.masterData);var _this$state=_objectSpread({},this.state),userRoleControlRights=_this$state.userRoleControlRights,controlMap=_this$state.controlMap,apiServiceList=_this$state.apiServiceList,selectedRecord=_this$state.selectedRecord,constructApiData=_this$state.constructApiData,lstQueryBuilder=_this$state.lstQueryBuilder,qualisList=_this$state.qualisList;if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);}if(this.props.Login.masterData.lstApiService!==previousProps.Login.masterData.lstApiService){var apiServiceMap=constructOptionList(this.props.Login.masterData.lstApiService||[],\"napiservicecode\",\"sapiservicename\",\"nsorter\",\"ascending\",false);apiServiceList=apiServiceMap.get(\"OptionList\");}if(this.props.Login.masterData.lstqueryForm!==previousProps.Login.masterData.lstqueryForm){var qualisMap=constructOptionList(this.props.Login.masterData.lstqueryForm||[],\"nformcode\",\"sdisplayname\",\"nsorter\",\"ascending\",false);qualisList=qualisMap.get(\"OptionList\");// this.setState({\n//     qualisList\n// });\n}if(this.props.Login.masterData.SelectedForm!==previousProps.Login.masterData.SelectedForm){if(this.props.Login.masterData.SelectedForm&&this.props.Login.masterData.SelectedForm.value){constructApiData=[{\"nformcode\":this.props.Login.masterData.SelectedForm.value},{\"sformname\":this.props.Login.masterData.SelectedForm.label}];}var constructData=this.props.Login.masterData.lstquerybilderColumns.map(function(item,index){return{label:item.scolumndisplayname,value:index,item:_objectSpread({},item)};});lstQueryBuilder=constructData;selectedRecord['filterNew']=[];}this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,apiServiceList:apiServiceList,selectedRecord:selectedRecord,constructApiData:constructApiData,lstQueryBuilder:lstQueryBuilder,qualisList:qualisList});}// if (this.props.Login.masterData.lstqueryForm !== previousProps.Login.masterData.lstqueryForm) {\n//     const qualisMap = constructOptionList(this.props.Login.masterData.lstqueryForm || [], \"nformcode\",\n//         \"sdisplayname\", \"nsorter\", \"ascending\", false);\n//     const qualisList = qualisMap.get(\"OptionList\")\n//     this.setState({\n//         qualisList\n//     });\n// }\n// if (this.props.Login.masterData.SelectedForm !== previousProps.Login.masterData.SelectedForm) {\n//     const constructApiData = [\n//         { \"nformcode\": this.props.Login.masterData.SelectedForm.value },\n//         { \"sformname\": this.props.Login.masterData.SelectedForm.label }\n//     ]\n//     let constructData = this.props.Login.masterData.lstquerybilderColumns.map((item, index) => {\n//         return { label: item.scolumndisplayname, value: index, item: { ...item } }\n//     })\n//     this.setState({\n//         constructApiData, lstQueryBuilder: constructData\n//     });\n// }\nif(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return APIService;}(React.Component);export default connect(mapStateToProps,{sendRequest:sendRequest,getQualisFormsFields:getQualisFormsFields,getQualisForms:getQualisForms,updateStore:updateStore})(injectIntl(APIService));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/configurationmaster/APIService.jsx"],"names":["React","injectIntl","FormSelectSearch","getControlMap","constructOptionList","copyText","convertDateTimetoStringDBFormat","connect","Alert","Button","Card","Col","Form","Row","ListWrapper","FormTextarea","stringOperatorData","numericOperatorData","dateConditionData","FormInput","FormNumericInput","DateTimePicker","FontAwesomeIcon","faCopy","faMinus","faPlus","toast","ReactJson","sendRequest","getQualisFormsFields","getQualisForms","updateStore","ContentPanel","DEFAULT_RETURN","mapStateToProps","state","Login","APIService","props","onInputOnChange","event","value","variant","target","type","constructApiData","selectedRecord","value1","name","undefined","toLowerCase","includes","index","indexOf","item","scolumn","indexcomma","slice","setState","constructApiDataString","map","e","JSON","stringify","replace","join","text","replaceAll","constructApiData1","parse","Object","keys","x","onComboChange","colunName","oldValue","map1","Map","userInfo","masterData","checkFilter","filterList","check","filterColumn","filterCondition","columndatatype","filterValue","push","length","onMoreClick","SelectedForm","lstQryColumn","removeSameRecordFromTwoDifferentArrays","lstQueryBuilder","warn","intl","formatMessage","id","onFilterInputOnChange","filterTableNewAddedList","change","changeData","splice","filterNew","onFilterNumericInputChange","handleDateChange","columnLabel","onfilterChange","comboValue","conditionType","onFilterModalDelete","childIndex","filterQueryFormation","str","strform","isjsoncolumn","ismultilingual","jsoncolumnname","slanguagetypecode","Date","copyToClipboard","copyParameter","info","SelectedApi","url","sapiservice","obj","sendObject","obj1","firstArray","secondArray","filterArray","Array","isArray","index1","y","findIndex","x1","firstArray1","firstArray2","showQueryParameter","returnString","values","newObject","object","consoleData","controlMap","userRoleControlRights","masterStatus","error","apiServiceList","qualisList","date","previousProps","console","log","nformcode","ncontrolcode","lstApiService","apiServiceMap","get","lstqueryForm","qualisMap","label","constructData","lstquerybilderColumns","scolumndisplayname","updateInfo","typeName","data","inputParam","operation","modalName","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport {\r\n    getControlMap, constructOptionList, copyText, convertDateTimetoStringDBFormat\r\n} from '../../components/CommonScript';\r\nimport { connect } from 'react-redux';\r\nimport { Alert, Button, Card, Col, Form, Row } from 'react-bootstrap';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport {\r\n    stringOperatorData, numericOperatorData\r\n    , dateConditionData\r\n} from '../dashboard/SqlBuilderFilterType'\r\n\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCopy, faMinus, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { toast } from 'react-toastify';\r\nimport ReactJson from \"react-json-view\";\r\nimport { sendRequest, getQualisFormsFields, getQualisForms, updateStore } from \"../../actions\";\r\nimport { ContentPanel } from '../../components/App.styles';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\n//import APIConsole from \"./APIConsole\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { Login: state.Login };\r\n};\r\nclass APIService extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        //  this.console = React.createRef();\r\n        this.state = {\r\n            selectedRecord: {},\r\n            constructApiData: [],\r\n            consoleData: [],\r\n            controlMap: {},\r\n            userRoleControlRights: [],\r\n            masterStatus: \"\", error: \"\"\r\n        }\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    onInputOnChange = (event, value, variant) => {\r\n        if (event.target.type === \"checkbox\") {\r\n            let constructApiData = this.state.constructApiData\r\n            const selectedRecord = this.state.selectedRecord;\r\n            // selectedRecord['check'] = label\r\n\r\n            // constructApiData={...constructApiData,[variant.item.scolumn]:\"\"}\r\n\r\n            const value1 = selectedRecord[event.target.name];\r\n            if (value1 !== '' && value1 !== undefined) {\r\n                if (value1.toLowerCase().includes(value.toLowerCase())) {\r\n                    const index = value1.toLowerCase().indexOf(value.toLowerCase());\r\n                    delete constructApiData[variant.item.scolumn]\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value1.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value1.slice(indexcomma + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            if (value1.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value1.slice(0, index) + value1.slice(index + value1.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value1.slice(0, index - 1)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value1 + ',' + value;\r\n                    constructApiData = [...constructApiData, { [variant.item.scolumn]: \"\" }]\r\n                }\r\n            } else {\r\n                selectedRecord[event.target.name] = value1 + ',' + value;\r\n                constructApiData = [...constructApiData, { [variant.item.scolumn]: \"\" }]\r\n            }\r\n            this.setState({\r\n                selectedRecord, constructApiData,\r\n                constructApiDataString: constructApiData.map(e => JSON.stringify(e).replace(/{|}/g, '')).join(',\\n')\r\n            })\r\n        } else {\r\n            // const selectedRecord = this.state.selectedRecord;\r\n            let text = event.target.value.replaceAll('\\n', '')\r\n            text = text.replace(/\\s+/g, '');\r\n            let constructApiData1 = JSON.parse(text)\r\n            let constructApiData = Object.keys(constructApiData1).map(x => {\r\n                return { [x]: constructApiData1[x] }\r\n            })\r\n            this.setState({\r\n                constructApiData,\r\n                constructApiDataString: constructApiData.map(e => JSON.stringify(e).replace(/{|}/g, '')).join(',\\n'),\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    onComboChange = (event, colunName) => {\r\n        const selectedRecord = this.state.selectedRecord\r\n        const oldValue = { ...selectedRecord[colunName] }\r\n        selectedRecord[colunName] = event\r\n        const map1 = new Map();\r\n        map1['userinfo'] = this.props.Login.userInfo;\r\n        map1['selectedRecord'] = selectedRecord\r\n        map1['masterData'] = this.props.Login.masterData\r\n        if (colunName === 'napiservicecode') {\r\n            this.props.getQualisForms(map1)\r\n            // this.setState({ selectedRecord })\r\n        } else {\r\n            if (oldValue && oldValue.value !== event.value) {\r\n                this.props.getQualisFormsFields(map1)\r\n            }\r\n        }\r\n        //  this.setState({ selectedRecord })\r\n    }\r\n    checkFilter = (filterList) => {\r\n        let check = [];\r\n        filterList.map((item, index) => {\r\n            if (item.filterColumn) {\r\n                if (item.filterCondition) {\r\n                    if (item.filterColumn.item.columndatatype === 'string') {\r\n                        if (item.filterCondition.value === '='\r\n                            || item.filterCondition.value === 'IN'\r\n                            || item.filterCondition.value === 'NOT') {\r\n\r\n                            if (item.filterValue && item.filterValue !== \"\") {\r\n                                check.push(true)\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (item.filterCondition) {\r\n                                check.push(true)\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (item.filterColumn.item.columndatatype === 'numeric') {\r\n                        if (item.filterCondition.value === '='\r\n                            || item.filterCondition.value === '!=' ||\r\n                            item.filterCondition.value === '>' ||\r\n                            item.filterCondition.value === '<' ||\r\n                            item.filterCondition.value === '>=' ||\r\n                            item.filterCondition.value === '<='\r\n                        ) {\r\n                            if (item.filterValue && item.filterValue !== \"\") {\r\n                                check.push(true)\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (item.filterCondition) {\r\n                                check.push(true)\r\n                            }\r\n                        }\r\n                    }\r\n                    else if (item.filterColumn.item.columndatatype === 'date') {\r\n                        if (item.filterCondition.value === '='\r\n                            || item.filterCondition.value === 'NOT'\r\n                        ) {\r\n\r\n                            if (item.filterValue && item.filterValue !== \"\") {\r\n                                check.push(true)\r\n                            }\r\n\r\n                        }\r\n                        else {\r\n                            if (item.filterCondition) {\r\n                                check.push(true)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n        })\r\n        return check.length === filterList.length ? true : false;\r\n    }\r\n\r\n\r\n    onMoreClick = (e) => {\r\n        const selectedRecord = this.state.selectedRecord || {}\r\n        if (this.checkFilter(selectedRecord['filterNew'] || [])) {\r\n            if (this.props.Login.masterData.SelectedForm) {\r\n                if (selectedRecord['filterNew'] === undefined) {\r\n                    selectedRecord['filterNew'] = []\r\n                }\r\n                selectedRecord['filterNew'][selectedRecord['filterNew'].length] = {}\r\n\r\n                const lstQryColumn = this.removeSameRecordFromTwoDifferentArrays(this.state.lstQueryBuilder, selectedRecord['filterNew'])\r\n\r\n                if (lstQryColumn.length > 0) {\r\n                    this.setState({\r\n                        selectedRecord, lstQryColumn\r\n                    })\r\n                } else {\r\n                    toast.warn(this.props.intl.formatMessage({ id: \"IDS_COLUMNSNOTAVALIABLE\" }))\r\n                }\r\n            } else {\r\n                toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTHEFORM\" }))\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASEFILLTHEVALUE\" }))\r\n        }\r\n    }\r\n\r\n    onFilterInputOnChange = (event, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n      //  const constructApiData = this.state.constructApiData\r\n\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n        const change = { ...filterTableNewAddedList[index], [event.target.name]: event.target.value }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n\r\n        // const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n\r\n        // if (index1 === -1) {\r\n        //     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\r\n        // } else {\r\n        //     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\r\n        // }\r\n\r\n\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n    }\r\n\r\n    onFilterNumericInputChange = (value, name, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n     //   const constructApiData = this.state.constructApiData\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n        const change = { ...filterTableNewAddedList[index], [name]: value }\r\n        // constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterValue })\r\n        // const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n        // if (index1 === -1) {\r\n        //     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\r\n        // } else {\r\n        //     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\r\n        // }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n\r\n    }\r\n\r\n    handleDateChange = (columnLabel, value, index) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n       // const constructApiData = this.state.constructApiData\r\n        const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n        const change = { ...filterTableNewAddedList[index], [columnLabel]: value }\r\n       // const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n        // if (index1 === -1) {\r\n        //     constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue })\r\n        // } else {\r\n        //     constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value + \" \" + change.filterValue }\r\n        // }\r\n        const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n        this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } });\r\n    }\r\n\r\n    onfilterChange = (comboValue, columnLabel, conditionType, index) => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n\r\n        if (conditionType === 'column') {\r\n            const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n            const change = {\r\n                ...filterTableNewAddedList[index], [columnLabel]: comboValue,\r\n                filterCondition: undefined, filterValueType: undefined, filterValue: undefined\r\n            }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change }, ...filterTableNewAddedList.splice(index + 1)]\r\n            this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } })\r\n        }\r\n        else if (conditionType === 'condition') {\r\n            const filterTableNewAddedList = [...selectedRecord['filterNew']]\r\n            const change = { ...filterTableNewAddedList[index], [columnLabel]: comboValue }\r\n            const changeData = [...filterTableNewAddedList.splice(0, index), { ...change, filterValue: undefined }, ...filterTableNewAddedList.splice(index + 1)]\r\n            // let constructApiData = this.state.constructApiData\r\n            // if (change[\"filterCondition\"].value === 'IS NULL' ||\r\n            //     change[\"filterCondition\"].value === 'IS NOT NULL' ||\r\n            //     change[\"filterCondition\"].value === 'PRESENT' ||\r\n            //     change[\"filterCondition\"].value === 'BLANK' ||\r\n            //     change[\"filterCondition\"].value !== 'NULL' ||\r\n            //     change[\"filterCondition\"].value !== 'NOT NULL' ||\r\n            //     change[\"filterCondition\"].value === 'IN') {\r\n            //     // constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value })\r\n\r\n            //     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n            //     if (index1 === -1) {\r\n            //         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value })\r\n            //     } else {\r\n            //         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value }\r\n            //     }\r\n\r\n            // }\r\n            // else if(change[\"filterColumn\"].item.columndatatype === 'date'&& \r\n            // (change.filterCondition.value === '=' || change.filterCondition.value === '<' \r\n            // || change.filterCondition.value === '>')){\r\n\r\n            //     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n            //     if (index1 === -1) {\r\n            //         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\" })\r\n            //     } else {\r\n            //         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\"  }\r\n            //     }\r\n\r\n            // }\r\n            // else if(change[\"filterColumn\"].item.columndatatype === 'date'&& \r\n            //  (item.filterCondition.value === 'NOT')){\r\n\r\n\r\n            //     const index1 = constructApiData.findIndex(x => Object.keys(x).toString() === change.filterColumn.item.scolumn)\r\n            //     if (index1 === -1) {\r\n            //         constructApiData.push({ [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\" })\r\n            //     } else {\r\n            //         constructApiData[index1] = { [change.filterColumn.item.scolumn]: change.filterCondition.value+\" '\"+convertDateTimetoStringDBFormat(new Date(),this.props.Login.userInfo)+\"'\"  }\r\n            //     }\r\n            // }\r\n\r\n\r\n            this.setState({ selectedRecord: { ...selectedRecord, filterNew: changeData } })\r\n        }\r\n\r\n    }\r\n\r\n    onFilterModalDelete = (childIndex) => {\r\n        // let constructApiData1 = [{ ...this.state.constructApiData[0] }, { ...this.state.constructApiData[1] }]\r\n        // let constructApiData2 = [...this.state.constructApiData]\r\n        // constructApiData2 = constructApiData2.splice(2)\r\n        // constructApiData2 = constructApiData2.splice(0, childIndex)\r\n        // let constructApiData3 = [...this.state.constructApiData]\r\n        // constructApiData3 = constructApiData3.splice(2)\r\n        // constructApiData3 = constructApiData3.splice(childIndex + 1)\r\n        const selectedRecord = this.state.selectedRecord;\r\n        selectedRecord['filterNew'] = [...selectedRecord['filterNew'].slice(0, childIndex), ...selectedRecord['filterNew'].slice(childIndex + 1)]\r\n       // constructApiData1 = [...constructApiData1, ...constructApiData2, ...constructApiData3]\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    filterQueryFormation = (selectedRecord) => {\r\n        let str = \"\";\r\n        let strform = \"\";\r\n        selectedRecord['filterNew'] && selectedRecord['filterNew'].length > 0 && selectedRecord['filterNew'].map((item, index) => {\r\n            if (item.filterCondition) {\r\n                if (item.filterCondition.value === 'IN') {\r\n\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \" ('\" + (item.filterValue ? item.filterValue : \"\") + \"') \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'PRESENT') {\r\n\r\n                    str = str + \" NOT \" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" ='' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'BLANK') {\r\n\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" ='' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'NULL'\r\n                    || item.filterCondition.value === 'NOT NULL') {\r\n\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" IS '\" + item.filterCondition.value + \"' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'IS NULL') {\r\n\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \"' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'IS NOT NULL') {\r\n\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + \"' \"\r\n\r\n                }\r\n                else if (item.filterCondition.value === 'STARTS WITH') {\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '\" + (item.filterValue ? item.filterValue : \"\") + \"%' collate \\\"default\\\"\"\r\n                }\r\n                else if (item.filterCondition.value === 'ENDS WITH') {\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '%\" + (item.filterValue ? item.filterValue : \"\") + \"' collate \\\"default\\\"\"\r\n                }\r\n                else if (item.filterCondition.value === 'CONTAINS') {\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \"ILIKE\" + \" '\" + (item.filterValue ? item.filterValue : \"\") + \"%' collate \\\"default\\\"\"\r\n                }\r\n                else if (item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === '=' || item.filterCondition.value === '<' || item.filterCondition.value === '>')) {\r\n                    str = str + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + (\"'\" + (item.filterValue ? convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) : convertDateTimetoStringDBFormat(new Date(), this.props.Login.userInfo)) + \"' \")\r\n                }\r\n\r\n                else if (item.filterColumn.item.columndatatype === 'date' && (item.filterCondition.value === 'NOT')) {\r\n                    str = str + \"(NOT \" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \" + (\"'\" + (item.filterValue ? convertDateTimetoStringDBFormat(item.filterValue, this.props.Login.userInfo) : convertDateTimetoStringDBFormat(new Date(), this.props.Login.userInfo)) + \"')\")\r\n                }\r\n                else if (item.filterColumn.item.columndatatype === 'string' && (item.filterCondition.value === 'NOT')) {\r\n                    str = str + \"(NOT \" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" = \" + (\"'\" + item.filterValue ? item.filterValue : \"\" + \"')\")\r\n                }\r\n                else {\r\n                    str = str + \" \" + (item.filterColumn.item.isjsoncolumn ?\r\n                        item.filterColumn.item.ismultilingual ?\r\n                            item.filterColumn.item.jsoncolumnname + \"->'\" + item.filterColumn.item.scolumn + \"'->>'\" + this.props.Login.userInfo.slanguagetypecode + \"'\"\r\n                            : item.filterColumn.item.jsoncolumnname + \"->>'\" + item.filterColumn.item.scolumn + \"'\"\r\n                        : \"\\\"\" + item.filterColumn.item.scolumn + \"\\\"\") + \" \" + item.filterCondition.value + (\"'\" + (item.filterValue ? item.filterValue : \"\") + \"' \")\r\n                }\r\n\r\n                if (index !== selectedRecord['filterNew'].length - 1) {\r\n                    str = str + \" and \";\r\n                }\r\n            }\r\n            //  })\r\n        })\r\n        strform = strform + \" \" + str\r\n        return strform;\r\n    }\r\n\r\n\r\n\r\n    copyToClipboard = () => {\r\n        copyText(this.copyParameter())\r\n        toast.info(this.props.intl.formatMessage({ id: \"IDS_COPIEDSUCCESSFULLY\" }))\r\n    }\r\n\r\n\r\n    sendRequest = () => {\r\n        const selectedRecord = this.state.selectedRecord;\r\n        if (this.props.Login.masterData.SelectedApi) {\r\n            if (this.props.Login.masterData.SelectedForm) {\r\n                const url = this.props.Login.masterData.SelectedApi.item.sapiservice\r\n                let obj = this.sendObject()\r\n                let obj1 = { \"inputData\": obj, url, masterData: this.props.Login.masterData }\r\n                this.props.sendRequest(obj1)\r\n            } else {\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTTHEFORM\" }))\r\n            }\r\n        } else {\r\n            toast.info(this.props.intl.formatMessage({ id: \"IDS_SELECTTHEAPI\" }))\r\n        }\r\n    }\r\n\r\n\r\n    removeSameRecordFromTwoDifferentArrays = (firstArray, secondArray) => {\r\n        let filterArray = []\r\n        if (Array.isArray(secondArray) && secondArray.length > 0) {\r\n            secondArray.map((x, index1) => {\r\n                firstArray.map(y => {\r\n                    if (x.filterColumn) {\r\n                        if (x.filterColumn.item.scolumn === y.item.scolumn) {\r\n                            const index = firstArray.findIndex(x1 => x1.item.scolumn === y.item.scolumn)\r\n                            let firstArray1 = [...firstArray];\r\n                            firstArray1 = [...firstArray1.splice(0, index)];\r\n\r\n                            let firstArray2 = [...firstArray];\r\n                            firstArray2 = [...firstArray2.splice(index + 1)];\r\n                            filterArray = [...firstArray1, ...firstArray2]\r\n                            firstArray = [...filterArray]\r\n                        }\r\n                    } else {\r\n                        if (index1 === 0) {\r\n                            filterArray = [...firstArray]\r\n                        }\r\n\r\n                    }\r\n                })\r\n            })\r\n        } else {\r\n            filterArray = [...firstArray];\r\n        }\r\n        return filterArray;\r\n\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            <ListWrapper className=\"client-list-content\">\r\n                <Row noGutters>\r\n                    <Col md={5} className=\"pr-3\">\r\n                        <Row>\r\n                            <Col md={9}>\r\n                                <FormSelectSearch\r\n                                    name={\"napiservicecode\"}\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_API\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    options={this.state.apiServiceList || []}\r\n                                    value={this.props.Login.masterData.SelectedApi && this.props.Login.masterData.SelectedApi}\r\n                                    isMandatory={true}\r\n                                    isClearable={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={false}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.onComboChange(event, 'napiservicecode')}\r\n                                />\r\n                            </Col>\r\n                            <Col md={1}>\r\n                                <Button className='btn-user btn-primary-blue' onClick={(e) => this.sendRequest()}>\r\n                                    {this.props.intl.formatMessage({ id: \"IDS_SENT\" })}\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row noGutters>\r\n                            <Col md={9}>\r\n                                <FormSelectSearch\r\n                                    name={\"nformcode\"}\r\n                                    formLabel={this.props.intl.formatMessage({ id: \"IDS_FORMS\" })}\r\n                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                                    options={this.state.qualisList || []}\r\n                                    value={this.props.Login.masterData.SelectedForm && this.props.Login.masterData.SelectedForm}\r\n                                    isMandatory={true}\r\n                                    isClearable={false}\r\n                                    isMulti={false}\r\n                                    isSearchable={false}\r\n                                    closeMenuOnSelect={true}\r\n                                    onChange={(event) => this.onComboChange(event, 'nformcode')}\r\n                                />\r\n                            </Col>\r\n                        </Row>\r\n                        <Card className='api-filter-condition-card'>\r\n                            <Card.Body>\r\n                                <form>\r\n                                    <section className={'modal-card-body'}>\r\n                                        {this.state.selectedRecord['filterNew'] && this.state.selectedRecord['filterNew'].map((item, index) => {\r\n                                            return <div className={'field has-addons filterheight'}>\r\n                                                <div class=\"control is-expanded\">\r\n                                                    <div class=\"select is-fullwidth\">\r\n                                                        <FormSelectSearch\r\n                                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"filterColumn\"}\r\n                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FIELDS\" })}\r\n                                                            showOption={true}\r\n                                                            options={this.state.lstQryColumn || []}\r\n                                                            value={item[\"filterColumn\"] && item[\"filterColumn\"] || \"\"}\r\n                                                            onChange={value => this.onfilterChange(value, \"filterColumn\", 'column', index)}\r\n                                                        ></FormSelectSearch>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class=\"control is-expanded\">\r\n                                                    <div class=\"select is-fullwidth\">\r\n                                                        <FormSelectSearch\r\n                                                            formGroupClassName=\"remove-floating-label-margin\"\r\n                                                            formLabel={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                                            isSearchable={true}\r\n                                                            name={\"sviewname\"}\r\n                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_CONDITION\" })}\r\n                                                            showOption={true}\r\n                                                            options={item[\"filterColumn\"] && item[\"filterColumn\"].item ?\r\n                                                                item[\"filterColumn\"].item.columndatatype === 'string' ?\r\n                                                                    stringOperatorData :\r\n                                                                    item[\"filterColumn\"].item.columndatatype === 'numeric' ?\r\n                                                                        numericOperatorData\r\n                                                                        : item[\"filterColumn\"].item.columndatatype === 'date' ?\r\n                                                                            dateConditionData\r\n                                                                            : stringOperatorData : \"\"}\r\n\r\n                                                            value={item[\"filterCondition\"] !== undefined ? item[\"filterCondition\"] : \"\"}\r\n                                                            onChange={value => this.onfilterChange(value, \"filterCondition\", 'condition', index)}\r\n                                                        ></FormSelectSearch>\r\n                                                    </div>\r\n                                                </div>\r\n\r\n                                                <div className={\"control \"}>\r\n                                                    {(item[\"filterCondition\"] && item[\"filterCondition\"].value\r\n                                                        && item[\"filterColumn\"]) ?\r\n                                                        item[\"filterColumn\"].item.columndatatype === 'string' ?\r\n                                                            (item[\"filterCondition\"].value !== 'IS NULL' &&\r\n                                                                item[\"filterCondition\"].value !== 'IS NOT NULL' &&\r\n                                                                item[\"filterCondition\"].value !== 'PRESENT' &&\r\n                                                                item[\"filterCondition\"].value !== 'BLANK') ?\r\n                                                                <FormInput\r\n                                                                    label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                    name=\"filterValue\"\r\n                                                                    type=\"text\"\r\n                                                                    onChange={(event) => this.onFilterInputOnChange(event, index)}\r\n                                                                    placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                    value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                    isMandatory={true}\r\n                                                                    required={true}\r\n                                                                    maxLength={100}\r\n                                                                /> : \"\"\r\n                                                            :\r\n                                                            item[\"filterColumn\"].item.columndatatype === 'numeric' ?\r\n                                                                (item[\"filterCondition\"].value !== 'NULL' &&\r\n                                                                    item[\"filterCondition\"].value !== 'NOT NULL') ?\r\n                                                                    item[\"filterCondition\"].value === 'IN' ?\r\n                                                                        <FormInput\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                            name=\"filterValue\"\r\n                                                                            type=\"text\"\r\n                                                                            onChange={(event) => this.onFilterInputOnChange(event, index)}\r\n                                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                            value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                            isMandatory={true}\r\n                                                                            required={true}\r\n                                                                            maxLength={100}\r\n                                                                        />\r\n                                                                        :\r\n                                                                        <FormNumericInput\r\n                                                                            name={\"filterValue\"}\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                            type=\"number\"\r\n                                                                            value={item[\"filterValue\"]}\r\n                                                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                            strict={true}\r\n                                                                            //min={0}\r\n                                                                            //max={99999999.99}\r\n                                                                            maxLength={10}\r\n                                                                            onChange={(value) => this.onFilterNumericInputChange(value, \"filterValue\", index)}\r\n                                                                            noStyle={true}\r\n                                                                            //precision={2}\r\n                                                                            //isMandatory={true}\r\n                                                                            className=\"form-control\"\r\n                                                                            errors=\"Please provide a valid number.\"\r\n                                                                        />\r\n\r\n                                                                    : \"\"\r\n                                                                : item[\"filterColumn\"].item.columndatatype === 'date' ?\r\n                                                                    (item[\"filterCondition\"].value === '=' ||\r\n                                                                        item[\"filterCondition\"].value === '<'\r\n                                                                        || item[\"filterCondition\"].value === '>'\r\n                                                                        || item[\"filterCondition\"].value === 'NOT'\r\n                                                                    ) ?\r\n                                                                        <DateTimePicker\r\n                                                                            name={\"filterValue\"}\r\n                                                                            label={this.props.intl.formatMessage({ id: \"IDS_VALUE\" })}\r\n                                                                            className='form-control'\r\n                                                                            placeholderText={this.props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                                                                            selected={item[\"filterValue\"] ? item[\"filterValue\"] : new Date()}\r\n                                                                            dateFormat={this.props.Login.userInfo[\"ssitedatetime\"]}\r\n                                                                            timeInputLabel={this.props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                                                                            showTimeInput={true}\r\n                                                                            onChange={date => this.handleDateChange(\"filterValue\", date, index)}\r\n                                                                            value={item[\"filterValue\"] ? item[\"filterValue\"] : \"\"}\r\n                                                                        />\r\n                                                                        : \"\"\r\n                                                                    : \"\"\r\n                                                        : \"\"\r\n\r\n\r\n                                                    }\r\n                                                </div>\r\n                                                <div className={\"control\"}>\r\n                                                    {this.state.selectedRecord['filterNew'].length > 0 &&\r\n                                                        <Button className={\"button is-light is-danger\"}\r\n                                                            onClick={() => this.onFilterModalDelete(index)}\r\n                                                            type=\"button\" tabindex=\"0\">\r\n                                                            <span className={\"icon\"}>\r\n                                                                <FontAwesomeIcon icon={faMinus} />\r\n                                                            </span>\r\n                                                        </Button>\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        })}\r\n                                        <div className={'buttons is-right'}>\r\n                                            <Button className={'button is-light is-info is-small'}\r\n                                                onClick={(e) => this.onMoreClick(e)} type=\"button\" tabindex=\"0\">\r\n\r\n                                                <span className={\"icon\"}>\r\n                                                    <FontAwesomeIcon icon={faPlus} />\r\n                                                </span>\r\n                                                <span>{this.props.intl.formatMessage({ id: \"IDS_ADDMORE\" })}</span>\r\n                                            </Button>\r\n                                        </div>\r\n\r\n                                    </section>\r\n                                </form >\r\n\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col md={7}>\r\n                        <ContentPanel className=\"panel-main-content\" >\r\n                            <Card className='my-2 ' >\r\n                                <Card.Header className=\"product-title-main\">\r\n                                    <Card.Title>\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_QUERYPARAMS\" })}\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='api-card-body-scrollable-element'>\r\n                                    {/* <pre style={{ \"height\": \"200px\", \"overflow\": \"scroll\" }}>{\"{\\n\"}{this.state.constructApiData.map(e => JSON.stringify(e, null, 2).replace(/{|}/g, ''))}{\"\\n}\"}</pre> */}\r\n                                    <pre>{this.showQueryParameter()}</pre>\r\n                                    <div className='buttons is-right'>\r\n                                        <Button className='btn-user btn-primary-blue' onClick={(e) => this.copyToClipboard()}>\r\n                                            <FontAwesomeIcon className='' icon={faCopy}></FontAwesomeIcon>{'  '}\r\n                                            {this.props.intl.formatMessage({ id: \"IDS_COPYQUERYPARAMS\" })}\r\n                                        </Button>\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </ContentPanel>\r\n                        <ContentPanel className=\"panel-main-content\" >\r\n                            <Card >\r\n                                <Card.Header className=\"product-title-main\">\r\n                                    <Card.Title>\r\n                                        {this.props.intl.formatMessage({ id: \"IDS_RESPONSE\" })}\r\n                                    </Card.Title>\r\n                                </Card.Header>\r\n                                <Card.Body className='api-card-body'>\r\n                                    <ReactJson src={this.props.Login.masterData.consoleData && this.props.Login.masterData.consoleData} />\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </ContentPanel>\r\n\r\n                    </Col>\r\n                </Row>\r\n            </ListWrapper>\r\n        </>)\r\n    }\r\n\r\n    showQueryParameter = () => {\r\n     //   let newObject = {}\r\n        let returnString = \"{\";\r\n        this.state.constructApiData.map((e, index) => {\r\n            if (index < 2) {\r\n                returnString = returnString + \" \\n \\\"\" + Object.keys(e) + \"\\\":\\\"\" + Object.values(e)+\"\\\"\"\r\n            }\r\n\r\n        })\r\n        let text = this.filterQueryFormation(this.state.selectedRecord)\r\n\r\n        returnString = returnString + \"\\n\" + \" \\\"whereCondition\\\":\\\"\" + text+\"\\\"\\n}\"\r\n        // const object = {\r\n        //     ...newObject,\r\n        //     \"whereCondition\": text\r\n        // }\r\n\r\n        return returnString;\r\n    }\r\n\r\n    copyParameter = () => {\r\n        let newObject = {}\r\n        this.state.constructApiData.map((e, index) => {\r\n            if (index < 2) {\r\n                newObject = {\r\n                    ...newObject,\r\n                    ...e\r\n                }\r\n            }\r\n\r\n        })\r\n        let text = this.filterQueryFormation(this.state.selectedRecord)\r\n        const object = {\r\n            ...newObject,\r\n            \"whereCondition\": text\r\n        }\r\n\r\n        return JSON.stringify(object);\r\n    }\r\n\r\n    sendObject = () => {\r\n        let newObject = {}\r\n        this.state.constructApiData.map(e => {\r\n            newObject = {\r\n                ...newObject,\r\n                ...e\r\n            }\r\n        })\r\n        let text = this.filterQueryFormation(this.state.selectedRecord)\r\n        const object = {\r\n            ...newObject,\r\n            \"whereCondition\": text\r\n        }\r\n\r\n        return object;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            console.log(this.props.Login.masterData !== previousProps.Login.masterData)\r\n            let { userRoleControlRights, controlMap, apiServiceList,\r\n                selectedRecord, constructApiData, lstQueryBuilder, qualisList\r\n            } = { ...this.state }\r\n\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            }\r\n\r\n            if (this.props.Login.masterData.lstApiService !== previousProps.Login.masterData.lstApiService) {\r\n                const apiServiceMap = constructOptionList(this.props.Login.masterData.lstApiService || [], \"napiservicecode\",\r\n                    \"sapiservicename\", \"nsorter\", \"ascending\", false);\r\n                apiServiceList = apiServiceMap.get(\"OptionList\")\r\n            }\r\n\r\n            if (this.props.Login.masterData.lstqueryForm !== previousProps.Login.masterData.lstqueryForm) {\r\n                const qualisMap = constructOptionList(this.props.Login.masterData.lstqueryForm || [], \"nformcode\",\r\n                    \"sdisplayname\", \"nsorter\", \"ascending\", false);\r\n                qualisList = qualisMap.get(\"OptionList\")\r\n                // this.setState({\r\n                //     qualisList\r\n                // });\r\n            }\r\n\r\n            if (this.props.Login.masterData.SelectedForm !== previousProps.Login.masterData.SelectedForm) {\r\n\r\n                if(this.props.Login.masterData.SelectedForm&&this.props.Login.masterData.SelectedForm.value){\r\n                    constructApiData = [\r\n                        { \"nformcode\": this.props.Login.masterData.SelectedForm.value },\r\n                        { \"sformname\": this.props.Login.masterData.SelectedForm.label }\r\n                    ]\r\n                }\r\n               \r\n                let constructData = this.props.Login.masterData.lstquerybilderColumns.map((item, index) => {\r\n                    return { label: item.scolumndisplayname, value: index, item: { ...item } }\r\n\r\n                })\r\n                lstQueryBuilder = constructData;\r\n                selectedRecord['filterNew'] = []\r\n            }\r\n\r\n            this.setState({\r\n                userRoleControlRights,\r\n                controlMap, apiServiceList,\r\n                selectedRecord, constructApiData,\r\n                lstQueryBuilder, qualisList\r\n            });\r\n        }\r\n\r\n        // if (this.props.Login.masterData.lstqueryForm !== previousProps.Login.masterData.lstqueryForm) {\r\n        //     const qualisMap = constructOptionList(this.props.Login.masterData.lstqueryForm || [], \"nformcode\",\r\n        //         \"sdisplayname\", \"nsorter\", \"ascending\", false);\r\n        //     const qualisList = qualisMap.get(\"OptionList\")\r\n        //     this.setState({\r\n        //         qualisList\r\n        //     });\r\n        // }\r\n\r\n        // if (this.props.Login.masterData.SelectedForm !== previousProps.Login.masterData.SelectedForm) {\r\n        //     const constructApiData = [\r\n        //         { \"nformcode\": this.props.Login.masterData.SelectedForm.value },\r\n        //         { \"sformname\": this.props.Login.masterData.SelectedForm.label }\r\n        //     ]\r\n        //     let constructData = this.props.Login.masterData.lstquerybilderColumns.map((item, index) => {\r\n        //         return { label: item.scolumndisplayname, value: index, item: { ...item } }\r\n\r\n        //     })\r\n\r\n        //     this.setState({\r\n        //         constructApiData, lstQueryBuilder: constructData\r\n        //     });\r\n\r\n        // }\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({\r\n                selectedRecord: this.props.Login.selectedRecord\r\n            });\r\n        }\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    sendRequest,\r\n    getQualisFormsFields, getQualisForms, updateStore\r\n})(injectIntl(APIService));"]},"metadata":{},"sourceType":"module"}