{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import{injectIntl}from'react-intl';import FormInput from'../form-input/form-input.component';import FormTextarea from'../form-textarea/form-textarea.component';import CustomSwitch from'../custom-switch/custom-switch.component';var AddType2Component=function AddType2Component(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:props.intl.formatMessage({id:props.extractedColumnList[0].idsName}),name:props.extractedColumnList[0].dataField,type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:props.extractedColumnList[0].idsName}),value:props.selectedRecord[props.extractedColumnList[0].dataField],isMandatory:props.extractedColumnList[0].mandatory,required:props.extractedColumnList[0].mandatory,maxLength:props.extractedColumnList[0].fieldLength//isInvalid={props.failedControls.indexOf(props.extractedColumnList[0].dataField) !==-1}\n})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:props.extractedColumnList[1].idsName}),name:props.extractedColumnList[1].dataField,onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:props.extractedColumnList[1].idsName}),value:props.selectedRecord[props.extractedColumnList[1].dataField],rows:\"2\",isMandatory:props.extractedColumnList[1].mandatory,required:props.extractedColumnList[1].mandatory,maxLength:props.extractedColumnList[1].fieldLength//isInvalid={props.failedControls.indexOf(props.extractedColumnList[1].dataField) !==-1}\n})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(CustomSwitch,{label:props.intl.formatMessage({id:props.extractedColumnList[2].idsName}),type:\"switch\",name:props.extractedColumnList[2].controlName,onChange:function onChange(event){return props.onInputOnChange(event);},placeholder:props.intl.formatMessage({id:props.extractedColumnList[2].idsName}),defaultValue:props.selectedRecord[props.extractedColumnList[2].controlName]===3?true:false,isMandatory:props.extractedColumnList[2].mandatory,required:props.extractedColumnList[2].mandatory,checked:props.selectedRecord[props.extractedColumnList[2].controlName]===3?true:false//disabled={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\n})));};export default injectIntl(AddType2Component);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/components/type2component/AddType2Component.js"],"names":["React","Row","Col","injectIntl","FormInput","FormTextarea","CustomSwitch","AddType2Component","props","intl","formatMessage","id","extractedColumnList","idsName","dataField","event","onInputOnChange","selectedRecord","mandatory","fieldLength","controlName"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport {Row, Col} from 'react-bootstrap';\r\nimport { injectIntl } from 'react-intl';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport FormTextarea from '../form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../custom-switch/custom-switch.component';\r\n\r\nconst AddType2Component = (props) => { \r\n    return(<Row>\r\n                <Col md={12}>\r\n                    <FormInput\r\n                        label={props.intl.formatMessage({ id:props.extractedColumnList[0].idsName})}\r\n                        name={props.extractedColumnList[0].dataField}\r\n                        type=\"text\"\r\n                        onChange={(event)=>props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id:props.extractedColumnList[0].idsName})}\r\n                        value ={props.selectedRecord[props.extractedColumnList[0].dataField]}\r\n                        isMandatory={props.extractedColumnList[0].mandatory}\r\n                        required={props.extractedColumnList[0].mandatory}\r\n                        maxLength={props.extractedColumnList[0].fieldLength}\r\n                        //isInvalid={props.failedControls.indexOf(props.extractedColumnList[0].dataField) !==-1}\r\n                        \r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <FormTextarea\r\n                        label={props.intl.formatMessage({ id:props.extractedColumnList[1].idsName})}\r\n                        name={props.extractedColumnList[1].dataField}\r\n                        onChange={(event)=>props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id:props.extractedColumnList[1].idsName})}\r\n                        value ={props.selectedRecord[props.extractedColumnList[1].dataField]}\r\n                        rows=\"2\"\r\n                        isMandatory={props.extractedColumnList[1].mandatory}\r\n                        required={props.extractedColumnList[1].mandatory}\r\n                        maxLength={props.extractedColumnList[1].fieldLength}\r\n                        //isInvalid={props.failedControls.indexOf(props.extractedColumnList[1].dataField) !==-1}\r\n                    />\r\n                </Col>\r\n                <Col md={12}>\r\n                    <CustomSwitch\r\n                        label={props.intl.formatMessage({ id:props.extractedColumnList[2].idsName})}\r\n                        type=\"switch\"\r\n                        name={props.extractedColumnList[2].controlName}\r\n                        onChange={(event)=>props.onInputOnChange(event)}\r\n                        placeholder={props.intl.formatMessage({ id:props.extractedColumnList[2].idsName})}\r\n                        defaultValue ={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false }\r\n                        isMandatory={props.extractedColumnList[2].mandatory}\r\n                        required={props.extractedColumnList[2].mandatory}\r\n                        checked={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\r\n                        //disabled={props.selectedRecord[props.extractedColumnList[2].controlName] === 3 ? true :false}\r\n                    />                                               \r\n                </Col>\r\n            </Row>)\r\n}\r\nexport default injectIntl(AddType2Component);"]},"metadata":{},"sourceType":"module"}