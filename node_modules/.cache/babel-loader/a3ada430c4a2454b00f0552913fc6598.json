{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-FINAL\\\\SOURCE-513-ALPD-4991\\\\QuaLISWeb\\\\src\\\\pages\\\\dashboard\\\\QueryTypeFilter.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst QueryTypeFilter = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"nquerytypecode\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_QUERYTYPE\"\n    }),\n    isSearchable: true // menuPosition=\"fixed\"\n    ,\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    isMandatory: false,\n    isDisabled: false,\n    showOption: true,\n    options: props.queryType || [],\n    value: props.selectedRecord.nquerytypecode ? props.selectedRecord.nquerytypecode : props.filterQueryType ? {\n      \"label\": props.filterQueryType.squerytypename,\n      \"value\": props.filterQueryType.nquerytypecode\n    } : \"\" //value={props.selectedRecord[\"nquerytypecode\"] ? props.selectedRecord[\"nquerytypecode\"] : \"\"}\n    ,\n    onChange: value => props.onComboChange(value, \"nquerytypecode\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(QueryTypeFilter);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-FINAL/SOURCE-513-ALPD-4991/QuaLISWeb/src/pages/dashboard/QueryTypeFilter.jsx"],"names":["React","injectIntl","Row","Col","FormSelectSearch","QueryTypeFilter","props","intl","formatMessage","id","queryType","selectedRecord","nquerytypecode","filterQueryType","squerytypename","value","onComboChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,GAAT,EAAcC,GAAd,QAAyB,iBAAzB;AACA,OAAOC,gBAAP,MAA6B,kEAA7B;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAC/B,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,gBAAD;AACI,IAAA,IAAI,EAAE,gBADV;AAEI,IAAA,SAAS,EAAEA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAE;AAAN,KAAzB,CAFf;AAGI,IAAA,YAAY,EAAE,IAHlB,CAIG;AAJH;AAKI,IAAA,WAAW,EAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB;AAAEC,MAAAA,EAAE,EAAC;AAAL,KAAzB,CALjB;AAMI,IAAA,WAAW,EAAE,KANjB;AAOI,IAAA,UAAU,EAAE,KAPhB;AAQI,IAAA,UAAU,EAAE,IARhB;AASI,IAAA,OAAO,EAAEH,KAAK,CAACI,SAAN,IAAmB,EAThC;AAUI,IAAA,KAAK,EAAEJ,KAAK,CAACK,cAAN,CAAqBC,cAArB,GAAsCN,KAAK,CAACK,cAAN,CAAqBC,cAA3D,GACFN,KAAK,CAACO,eAAN,GAAwB;AAAE,eAASP,KAAK,CAACO,eAAN,CAAsBC,cAAjC;AAAiD,eAASR,KAAK,CAACO,eAAN,CAAsBD;AAAhF,KAAxB,GAA2H,EAXpI,CAaI;AAbJ;AAcI,IAAA,QAAQ,EAAEG,KAAK,IAAIT,KAAK,CAACU,aAAN,CAAoBD,KAApB,EAA2B,gBAA3B,CAdvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAwBH,CAzBD;;AA2BA,eAAgBd,UAAU,CAACI,eAAD,CAA1B","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst QueryTypeFilter = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n                <FormSelectSearch\r\n                    name={\"nquerytypecode\"}\r\n                    formLabel={props.intl.formatMessage({ id: \"IDS_QUERYTYPE\" })}\r\n                    isSearchable={true}\r\n                   // menuPosition=\"fixed\"\r\n                    placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}  \r\n                    isMandatory={false}\r\n                    isDisabled={false}\r\n                    showOption={true}                  \r\n                    options={props.queryType || []}\r\n                    value={props.selectedRecord.nquerytypecode ? props.selectedRecord.nquerytypecode\r\n                        :props.filterQueryType ? { \"label\": props.filterQueryType.squerytypename, \"value\": props.filterQueryType.nquerytypecode } : \"\"}\r\n      \r\n                    //value={props.selectedRecord[\"nquerytypecode\"] ? props.selectedRecord[\"nquerytypecode\"] : \"\"}\r\n                    onChange={value => props.onComboChange(value, \"nquerytypecode\")}\r\n                   \r\n                >\r\n                </FormSelectSearch>\r\n            </Col>\r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default (injectIntl(QueryTypeFilter));"]},"metadata":{},"sourceType":"module"}