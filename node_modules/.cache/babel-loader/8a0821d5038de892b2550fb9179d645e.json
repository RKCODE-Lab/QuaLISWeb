{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\submitter\\\\institution\\\\Institution.jsx\";\nimport React from \"react\";\nimport { connect } from 'react-redux';\nimport { FormattedMessage, injectIntl } from \"react-intl\";\nimport { callService, crudMaster, validateEsignCredential, updateStore, getInstitutionDetail, getInstitutionCombo, getInstitutionSiteData, addInstitutionFile, changeInstitutionCategoryFilter, viewAttachment, filterColumnData, getCitComboServices, getDistComboServices } from \"../../../actions\";\nimport BreadcrumbComponent from \"../../../components/Breadcrumb.Component\";\nimport { Affix } from 'rsuite';\nimport { constructOptionList, getControlMap, showEsign, onDropAttachFileList, deleteAttachmentDropZone, create_UUID, validatePhoneNumber, validateEmail } from '../../../components/CommonScript';\nimport { Row, Col, Card, FormGroup, FormLabel, Nav } from \"react-bootstrap\";\nimport { ContentPanel } from '../../product/product.styled';\nimport ListMaster from \"../../../components/list-master/list-master.component\";\nimport ReactTooltip from 'react-tooltip';\nimport InstitutionCategoryFilter from \"./InstitutionCategoryFilter\";\nimport { ReadOnlyText } from '../../../components/App.styles';\nimport CustomTab from \"../../../components/custom-tabs/custom-tabs.component\";\nimport InstitutionSiteTab from \"./InstitutionSiteTab\";\nimport InstitutionFileTab from \"./InstitutionFileTab\";\nimport { DEFAULT_RETURN } from \"../../../actions/LoginTypes\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport SlideOutModal from \"../../../components/slide-out-modal/SlideOutModal\";\nimport Esign from \"../../audittrail/Esign\";\nimport AddInstitution from \"./AddInstitution\";\nimport AddInstitutionSite from \"./AddInstitutionSite\";\nimport AddInstitutionFile from \"./AddInstitutionFile\";\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\nimport { toast } from 'react-toastify';\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass Institution extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.tabDetail = () => {\n      const tabMap = new Map();\n      const editSiteId = this.state.controlMap.has(\"EditInstitutionSite\") && this.state.controlMap.get(\"EditInstitutionSite\").ncontrolcode;\n      const deleteSiteId = this.state.controlMap.has(\"DeleteInstitutionSite\") && this.state.controlMap.get(\"DeleteInstitutionSite\").ncontrolcode;\n      const deleteFileId = this.state.controlMap.has(\"DeleteInstitutionFile\") && this.state.controlMap.get(\"DeleteInstitutionFile\").ncontrolcode;\n      const deleteParam = {\n        operation: \"delete\",\n        deleteSiteId\n      };\n      const deleteTestParam = {\n        operation: \"delete\",\n        deleteFileId\n      };\n      const editParam = {\n        screenName: \"Institution Site\",\n        operation: \"update\",\n        primaryKeyField: \"ninstitutionsitecode\",\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        ncontrolcode: editSiteId,\n        instItem: this.props.Login.masterData.selectedInstitution,\n        instItemSite: this.props.Login.masterData.selectedInstitutionSite\n      };\n      tabMap.set(\"IDS_INSTITUTIONSITE\", /*#__PURE__*/React.createElement(InstitutionSiteTab, {\n        selectedId: this.props.Login.selectedId,\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        selectedInstitution: this.props.Login.masterData.selectedInstitution,\n        InstitutionSite: this.props.Login.masterData.InstitutionSite,\n        masterData: this.props.Login.masterData,\n        userInfo: this.props.Login.userInfo,\n        getInstitutionSiteData: this.props.getInstitutionSiteData,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord,\n        dataState: this.props.Login.dataState,\n        deleteRecord: this.DeleteInstitutionSite,\n        deleteParam: deleteParam,\n        fetchRecord: this.props.getInstitutionSiteData,\n        editParam: editParam,\n        InstitutionSiteData: this.props.Login.masterData.InstitutionSite || [],\n        screenName: \"Institution Site\",\n        settings: this.props.Login.settings,\n        errorCode: this.props.Login.errorCode,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 5\n        }\n      }));\n      tabMap.set(\"IDS_INSTITUTIONFILE\", /*#__PURE__*/React.createElement(InstitutionFileTab, {\n        controlMap: this.state.controlMap,\n        userRoleControlRights: this.state.userRoleControlRights,\n        userInfo: this.props.Login.userInfo,\n        inputParam: this.props.Login.inputParam,\n        InstitutionFile: this.props.Login.masterData.InstitutionFile || [],\n        settings: this.props.Login.settings,\n        addInstitutionFile: this.props.addInstitutionFile,\n        deleteRecord: this.DeleteInstitutionFile,\n        deleteParam: deleteTestParam //editParam={editTestParam}\n        ,\n        viewInstitutionFile: this.viewInstitutionFile,\n        screenName: \"InstitutionFile\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 5\n        }\n      }));\n      return tabMap;\n    };\n\n    this.openFilter = () => {\n      let showFilter = !this.props.Login.showFilter;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.closeFilter = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          showFilter: false\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onFilterSubmit = () => {\n      if (this.props.Login.masterData.defaultInstitutionCategory) {\n        let inputParam = {\n          inputData: {\n            ninstitutioncatcode: this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode,\n            userinfo: this.props.Login.userInfo\n          },\n          classUrl: \"institution\",\n          methodUrl: \"InstitutionByCategory\"\n        };\n        this.props.changeInstitutionCategoryFilter(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.defaultInstitutionCategory);\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_INSTITUTIONCATEGORYNOTAVAILABLE\"\n        }));\n      }\n    };\n\n    this.reloadData = () => {\n      this.searchRef.current.value = \"\";\n      const inputParam = {\n        inputData: {\n          \"ninstitutioncatcode\": this.props.Login.masterData.SelectedInstitutionCategory.ninstitutioncatcode,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: \"InstitutionByCategory\",\n        displayName: this.props.intl.formatMessage({\n          id: \"IDS_INSTITUTION\"\n        })\n      };\n      this.props.changeInstitutionCategoryFilter(inputParam, this.props.Login.masterData.FilterInstitutionCategory, this.props.Login.masterData.SelectedInstitutionCategory);\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let openChildModal = this.props.Login.openChildModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedId = this.props.Login.selectedId;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          openChildModal = false;\n          selectedRecord = [];\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n          selectedRecord = selectedRecord;\n        }\n      } else {\n        openModal = false;\n        openChildModal = false;\n        selectedRecord = [];\n        this.props.Login.cityList = [];\n        this.props.Login.districtList = [];\n        selectedId = null; //this.setState({ selectedRecord });\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId,\n          openChildModal\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onTabChange = tabProps => {\n      const screenName = tabProps.screenName;\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          screenName\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onNumericInputOnChange = (value, name) => {\n      const selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onInputOnChange = (event, optional) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === \"checkbox\") {\n        selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\n      } else if (event.target.type === \"radio\") {\n        selectedRecord[event.target.name] = optional;\n      } else {\n        if (event.target.name === \"sfaxno\") {\n          if (event.target.value !== \"\") {\n            event.target.value = validatePhoneNumber(event.target.value);\n            selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\n          } else {\n            selectedRecord[event.target.name] = event.target.value;\n          }\n        } else {\n          selectedRecord[event.target.name] = event.target.value;\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onComboChangeFilter = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || [];\n\n      if (comboData) {\n        if (fieldName === \"ninstitutioncatcode\") {\n          if (comboData.value !== this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode) {\n            let masterData = { ...this.props.Login.masterData,\n              defaultInstitutionCategory: comboData.item\n            };\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                masterData\n              }\n            };\n            this.props.updateStore(updateInfo);\n          }\n        }\n      }\n    };\n\n    this.onComboChange = (comboData, fieldName) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData != null) {\n        if (fieldName === \"ninstitutioncatcode\") {\n          selectedRecord[fieldName] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"nsitecode\") {\n          selectedRecord[\"nsitecode\"] = comboData;\n          selectedRecord[\"ssitecode\"] = comboData.item[\"ssitecode\"];\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"nregioncode\") {\n          selectedRecord[\"nregioncode\"] = comboData;\n          selectedRecord[\"sregioncode\"] = comboData.item[\"sregioncode\"];\n          this.props.getDistComboServices({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.nregioncode.label,\n              primarykey: selectedRecord.nregioncode.value\n            }\n          });\n          selectedRecord[\"ndistrictcode\"] = \"\";\n          selectedRecord[\"sdistrictcode\"] = \"\";\n          selectedRecord[\"ncitycode\"] = \"\";\n          selectedRecord[\"scitycode\"] = \"\";\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"ncountrycode\") {\n          selectedRecord[\"ncountrycode\"] = comboData;\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"ndistrictcode\") {\n          selectedRecord[\"ndistrictcode\"] = comboData;\n          selectedRecord[\"sdistrictcode\"] = comboData.item[\"sdistrictcode\"];\n          this.props.getCitComboServices({\n            inputData: {\n              userinfo: this.props.Login.userInfo,\n              sdisplayname: selectedRecord.ndistrictcode.label,\n              primarykey: selectedRecord.ndistrictcode.value\n            }\n          });\n          selectedRecord[\"ncitycode\"] = \"\";\n          selectedRecord[\"scitycode\"] = \"\";\n          this.setState({\n            selectedRecord\n          });\n        } else if (fieldName === \"ncitycode\") {\n          selectedRecord[\"ncitycode\"] = comboData;\n          selectedRecord[\"scitycode\"] = comboData.item[\"scitycode\"];\n          this.setState({\n            selectedRecord\n          });\n        }\n      }\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      let postParam = undefined;\n      let inputData = [];\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      let dataState = undefined;\n\n      if (this.props.Login.screenName === \"Institution\") {\n        if (this.props.Login.operation === \"update\") {\n          // edit\n          const selectedRecord = this.state.selectedRecord;\n          postParam = {\n            inputListName: \"Institution\",\n            selectedObject: \"selectedInstitution\",\n            primaryKeyField: \"ninstitutioncode\"\n          };\n          inputData[\"institution\"] = {};\n          this.fieldInstitutionList.map(item => {\n            return inputData[\"institution\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n          });\n          inputData[\"institution\"][\"ninstitutioncode\"] = selectedRecord[\"ninstitutioncode\"] ? selectedRecord[\"ninstitutioncode\"] : -1;\n          inputData[\"institution\"][\"ninstitutioncatcode\"] = this.state.selectedRecord ? this.state.selectedRecord.ninstitutioncatcode.value : -1;\n          dataState = this.state.dataState;\n        } else {\n          //add               \n          inputData[\"institution\"] = {\n            \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n          };\n          this.fieldInstitutionList.map(item => {\n            return inputData[\"institution\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\n          });\n          inputData[\"institution\"][\"ninstitutioncatcode\"] = this.state.selectedRecord ? this.state.selectedRecord.ninstitutioncatcode.value : -1;\n        }\n\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: \"Institution\",\n          displayName: this.props.Login.screenName,\n          inputData: inputData,\n          selectedId: this.state.selectedRecord[\"ninstututioncode\"],\n          operation: this.props.Login.operation,\n          saveType,\n          formRef,\n          dataState,\n          searchRef: this.searchRef,\n          postParam: postParam,\n          filtercombochange: this.props.Login.masterData.searchedData !== undefined ? this.state.selectedRecord.ninstitutioncatcode.value === this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode ? false : true : false\n        };\n        let masterData = { ...this.props.Login.masterData\n        };\n\n        if (this.state.selectedRecord.ninstitutioncatcode.value !== this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode) {\n          masterData = { ...this.props.Login.masterData,\n            defaultInstitutionCategory: this.state.selectedRecord.ninstitutioncatcode.item,\n            SelectedInstitutionCategory: this.state.selectedRecord.ninstitutioncatcode.item\n          };\n        } //  this.setState({ FilterInstitutionCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\n\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData\n              },\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: this.props.Login.screenName\n              }),\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, masterData, \"openModal\");\n        }\n      } else if (this.props.Login.screenName === \"Institution Site\") {\n        const isValidateEmail = this.state.selectedRecord[\"semail\"] ? validateEmail(this.state.selectedRecord[\"semail\"]) : true;\n\n        if (isValidateEmail) {\n          if (this.props.Login.operation === \"update\") {\n            // edit\n            const selectedRecord = this.state.selectedRecord;\n            postParam = {\n              inputListName: \"InstitutionSite\",\n              selectedObject: \"selectedInstitutionSite\",\n              primaryKeyField: \"ninstitutionsitecode\"\n            };\n            inputData[\"institutionsite\"] = {};\n            inputData[\"institutionsite\"][\"ninstitutionsitecode\"] = selectedRecord[\"ninstitutionsitecode\"] ? selectedRecord[\"ninstitutionsitecode\"] : -1;\n            inputData[\"institutionsite\"][\"ninstitutioncode\"] = this.props.Login.instItem[\"ninstitutioncode\"];\n            ;\n            inputData[\"institutionsite\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nsitecode\"] ? this.state.selectedRecord[\"nsitecode\"].value : -1;\n            inputData[\"institutionsite\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : -1;\n            inputData[\"institutionsite\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\n            inputData[\"institutionsite\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : -1;\n            inputData[\"institutionsite\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : -1;\n            this.fieldInstitutionSiteList.map(item => {\n              return inputData[\"institutionsite\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\n            });\n            dataState = this.state.dataState;\n          } else {\n            postParam = undefined; //add               \n            //inputData[\"institutionsite\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };  \n\n            inputData[\"institutionsite\"] = {};\n            inputData[\"institutionsite\"][\"ninstitutioncode\"] = this.props.Login.instItem[\"ninstitutioncode\"];\n            ;\n            inputData[\"institutionsite\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nsitecode\"] ? this.state.selectedRecord[\"nsitecode\"].value : -1;\n            inputData[\"institutionsite\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : -1;\n            inputData[\"institutionsite\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\n            inputData[\"institutionsite\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : -1;\n            inputData[\"institutionsite\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : -1;\n            this.fieldInstitutionSiteList.map(item => {\n              return inputData[\"institutionsite\"][item] = this.state.selectedRecord[item] !== undefined ? this.state.selectedRecord[item] : \"\";\n            });\n          }\n\n          const inputParam = {\n            classUrl: this.props.Login.inputParam.classUrl,\n            methodUrl: \"InstitutionSite\",\n            displayName: this.props.Login.screenName,\n            inputData: inputData,\n            selectedId: this.state.selectedRecord[\"ninstitutionsitecode\"],\n            operation: this.props.Login.operation,\n            saveType,\n            formRef,\n            dataState,\n            searchRef: this.searchRef,\n            postParam: postParam\n          }; //this.setState({ FilterClientCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\n\n          if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n            const updateInfo = {\n              typeName: DEFAULT_RETURN,\n              data: {\n                loadEsign: true,\n                screenData: {\n                  inputParam,\n                  masterData: this.props.Login.masterData\n                },\n                openChildModal: true,\n                screenName: this.props.intl.formatMessage({\n                  id: this.props.Login.screenName\n                }),\n                operation: this.props.Login.operation\n              }\n            };\n            this.props.updateStore(updateInfo);\n          } else {\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n          }\n        } else {\n          toast.info(this.props.intl.formatMessage({\n            id: \"IDS_ENTERVALIDEMAIL\"\n          }));\n        }\n      } else if (this.props.Login.screenName === \"InstitutionFile\") {\n        const selectedRecord = this.state.selectedRecord;\n        const acceptedFiles = selectedRecord.sfilename;\n        const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n        let isFileEdited = transactionStatus.NO;\n        let institutionFileArray = [];\n        let institutionFile = {\n          ninstitutioncode: this.props.Login.masterData.selectedInstitution.ninstitutioncode,\n          ninstitutionfilecode: selectedRecord.ninstitutionfilecode ? selectedRecord.ninstitutionfilecode : 0,\n          nstatus: transactionStatus.ACTIVE,\n          nattachmenttypecode\n        };\n        const formData = new FormData();\n\n        if (nattachmenttypecode === attachmentType.FTP) {\n          if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n            acceptedFiles.forEach((file, index) => {\n              const tempData = Object.assign({}, institutionFile);\n              const splittedFileName = file.name.split('.');\n              const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n              const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\n              const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\n              const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0 && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\n              tempData[\"sfilename\"] = file.name;\n              tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n              tempData[\"nlinkcode\"] = transactionStatus.NA;\n              tempData[\"ssystemfilename\"] = uniquefilename;\n              tempData[\"nfilesize\"] = file.size;\n              formData.append(\"uploadedFile\" + index, file);\n              formData.append(\"uniquefilename\" + index, uniquefilename);\n              institutionFileArray.push(tempData);\n            });\n            formData.append(\"filecount\", acceptedFiles.length);\n            isFileEdited = transactionStatus.YES;\n          } else {\n            institutionFile[\"sfilename\"] = selectedRecord.sfilename;\n            institutionFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\n            institutionFile[\"nlinkcode\"] = transactionStatus.NA;\n            institutionFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n            institutionFile[\"nfilesize\"] = selectedRecord.nfilesize;\n            institutionFileArray.push(institutionFile);\n          }\n        } else {\n          institutionFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\n          institutionFile[\"sfiledesc\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\n          institutionFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n          institutionFile[\"ssystemfilename\"] = \"\";\n          institutionFile[\"nfilesize\"] = 0;\n          institutionFileArray.push(institutionFile);\n        }\n\n        formData.append(\"isFileEdited\", isFileEdited);\n        formData.append(\"institutionfile\", JSON.stringify(institutionFileArray));\n        let selectedId = null;\n        let postParam = undefined;\n\n        if (this.props.Login.operation === \"update\") {\n          postParam = {\n            inputListName: \"Institution\",\n            selectedObject: \"selectedInstitution\",\n            primaryKeyField: \"ninstitutioncode\"\n          };\n          selectedId = selectedRecord[\"ninstitutionfilecode\"];\n        }\n\n        const inputParam = {\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          isFileupload: true,\n          operation: this.props.Login.operation,\n          classUrl: \"institution\",\n          saveType,\n          formRef,\n          methodUrl: \"InstitutionFile\",\n          postParam\n        };\n\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openChildModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: this.props.Login.screenName\n              }),\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\n        }\n      }\n    };\n\n    this.ConfirmDelete = deleteId => {\n      this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_DEFAULTCONFIRMMSG\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_OK\"\n      }), this.props.intl.formatMessage({\n        id: \"IDS_CANCEL\"\n      }), () => this.DeleteInstitution(\"delete\", deleteId));\n    };\n\n    this.DeleteInstitutionFile = deleteTestParam => {\n      let inputData = [];\n      let ncontrolcode = deleteTestParam.ncontrolCode;\n      let operation = deleteTestParam.operation;\n      inputData[\"institutionfile\"] = deleteTestParam.selectedRecord;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"institutionfile\",\n        selectedObject: \"selectedInstitutionFile\",\n        primaryKeyField: \"ninstitutionfilecode\",\n        primaryKeyValue: deleteTestParam.selectedRecord.ninstitutionfilecode,\n        fetchUrl: \"institution/getInstitutionFile\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"InstitutionFile\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Institution File\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n      }\n    };\n\n    this.DeleteInstitutionSite = deleteParam => {\n      let inputData = [];\n      let ncontrolcode = deleteParam.ncontrolCode;\n      let operation = deleteParam.operation;\n      delete deleteParam.selectedRecord.expanded;\n      inputData[\"institutionsite\"] = deleteParam.selectedRecord;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"institutionsite\",\n        selectedObject: \"selectedInstitutionSite\",\n        primaryKeyField: \"ninstitutionsitecode\",\n        primaryKeyValue: deleteParam.selectedRecord.ninstitutionsitecode,\n        fetchUrl: \"institution/getInstitutionSite\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"InstitutionSite\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openChildModal: true,\n            screenName: \"Institution Site\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openChildModal\");\n      }\n    };\n\n    this.DeleteInstitution = (operation, ncontrolCode) => {\n      let inputData = [];\n      inputData[\"institution\"] = this.props.Login.masterData.selectedInstitution;\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      const postParam = {\n        inputListName: \"institution\",\n        selectedObject: \"selectedInstitution\",\n        primaryKeyField: \"ninstitutioncode\",\n        primaryKeyValue: this.props.Login.masterData.selectedInstitution.ninstitutioncode,\n        fetchUrl: \"institution/getSelectedInstitutionDetail\",\n        fecthInputObject: {\n          userinfo: this.props.Login.userInfo\n        }\n      };\n      const inputParam = {\n        methodUrl: \"Institution\",\n        classUrl: this.props.Login.inputParam.classUrl,\n        inputData: inputData,\n        operation: \"delete\",\n        postParam\n      };\n      const masterData = this.props.Login.masterData;\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData\n            },\n            openModal: true,\n            screenName: \"Institution\",\n            operation\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, masterData, \"openModal\");\n      }\n    };\n\n    this.viewInstitutionFile = filedata => {\n      const inputParam = {\n        inputData: {\n          institutionfile: filedata,\n          userinfo: this.props.Login.userInfo\n        },\n        classUrl: \"institution\",\n        operation: \"view\",\n        methodUrl: \"InstitutionFile\",\n        screenName: \"IDS_INSTITUTION\"\n      };\n      this.props.viewAttachment(inputParam);\n    };\n\n    this.onDropInstitutionFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\"\n      });\n    };\n\n    this.validateEsign = () => {\n      let modalName;\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n\n      if (this.props.Login.screenName === \"Institution\") {\n        modalName = \"openModal\";\n      } else {\n        modalName = \"openChildModal\";\n      }\n\n      this.props.validateEsignCredential(inputParam, modalName);\n    };\n\n    this.formRef = React.createRef();\n    this.confirmMessage = new ConfirmMessage();\n    this.searchRef = React.createRef();\n    this.fieldInstitutionList = [];\n    this.fieldInstitutionSiteList = [];\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      selectedRecord: {}\n    };\n  }\n\n  render() {\n    let mandatoryFields = [];\n\n    if (this.props.Login.screenName === \"Institution\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONCATEGORY\",\n        dataField: \"ninstitutioncatcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTITUTION\",\n        dataField: \"sinstitutionname\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONCODE\",\n        dataField: \"sinstitutioncode\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      });\n    } else if (this.props.Login.screenName === \"Institution Site\") {\n      mandatoryFields.push({\n        mandatory: true,\n        idsName: \"IDS_INSTITUTIONSITE\",\n        dataField: \"sinstitutionsitename\",\n        mandatoryLabel: \"IDS_ENTER\",\n        controlType: \"textbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_REGIONNAME\",\n        dataField: \"nregioncode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_DISTRICT\",\n        dataField: \"ndistrictcode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_CITY\",\n        dataField: \"ncitycode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_COUNTRY\",\n        dataField: \"ncountrycode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      }, {\n        mandatory: true,\n        idsName: \"IDS_LIMSSITE\",\n        dataField: \"nsitecode\",\n        mandatoryLabel: \"IDS_SELECT\",\n        controlType: \"selectbox\"\n      });\n    } else {\n      if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILENAME\",\n          \"dataField\": \"slinkfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        }, {\n          \"idsName\": \"IDS_LINKNAME\",\n          \"dataField\": \"nlinkcode\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_SELECT\",\n          \"controlType\": \"selectbox\"\n        });\n      } else {\n        // if (this.props.operation !== 'update') {\n        mandatoryFields.push({\n          \"idsName\": \"IDS_FILE\",\n          \"dataField\": \"sfilename\",\n          \"mandatory\": true,\n          \"mandatoryLabel\": \"IDS_CHOOSE\",\n          \"controlType\": \"file\"\n        });\n      }\n    }\n\n    this.fieldInstitutionList = [\"sinstitutionname\", \"sinstitutioncode\", \"sdescription\"];\n    this.fieldInstitutionSiteList = [\"sinstitutionsitename\", \"sinstitutionsiteaddress\", \"szipcode\", \"sstate\", \"stelephone\", \"sfaxno\", \"semail\", \"swebsite\"];\n    const addId = this.state.controlMap.has(\"AddInstitution\") && this.state.controlMap.get(\"AddInstitution\").ncontrolcode;\n    const editId = this.state.controlMap.has(\"EditInstitution\") && this.state.controlMap.get(\"EditInstitution\").ncontrolcode;\n    const deleteId = this.state.controlMap.has(\"DeleteInstitution\") && this.state.controlMap.get(\"DeleteInstitution\").ncontrolcode;\n    const filterParam = {\n      inputListName: \"Institution\",\n      selectedObject: \"selectedInstitution\",\n      primaryKeyField: \"ninstitutioncode\",\n      fetchUrl: \"institution/getSelectedInstitutionDetail\",\n      fecthInputObject: {\n        userinfo: this.props.Login.userInfo,\n        Institution: this.props.Login.masterData.selectedInstitution\n      },\n      masterData: this.props.Login.masterData,\n      searchFieldList: [\"sinstitutioncatname\", \"sinstitutionname\", \"sdescription\"]\n    };\n    const {\n      selectedInstitution\n    } = this.props.Login.masterData;\n    const breadCrumbData = this.state.filterData || [];\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, breadCrumbData.length > 0 ? /*#__PURE__*/React.createElement(Affix, {\n      top: 53,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbComponent, {\n      breadCrumbItem: breadCrumbData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    })) : \"\", /*#__PURE__*/React.createElement(Row, {\n      noGutters: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ListMaster, {\n      formatMessage: this.props.intl.formatMessage,\n      screenName: this.props.intl.formatMessage({\n        id: \"IDS_INSTITUTION\"\n      }),\n      masterData: this.props.Login.masterData,\n      userInfo: this.props.Login.userInfo,\n      masterList: this.props.Login.masterData.searchedData || this.props.Login.masterData.Institution,\n      getMasterDetail: Institution => this.props.getInstitutionDetail(Institution, this.props.Login.userInfo, this.props.Login.masterData),\n      selectedMaster: this.props.Login.masterData.selectedInstitution,\n      primaryKeyField: \"ninstitutioncode\",\n      mainField: \"sinstitutionname\",\n      firstField: \"sinstitutioncatname\",\n      isIDSField: \"Yes\",\n      filterColumnData: this.props.filterColumnData,\n      filterParam: filterParam,\n      userRoleControlRights: this.state.userRoleControlRights,\n      addId: addId,\n      searchRef: this.searchRef,\n      reloadData: this.reloadData,\n      hidePaging: true,\n      openModal: () => this.props.getInstitutionCombo(\"Institution\", \"create\", \"ninstitutioncode\", this.props.Login.masterData, this.props.Login.userInfo, addId),\n      openFilter: this.openFilter,\n      closeFilter: this.closeFilter,\n      onFilterSubmit: this.onFilterSubmit,\n      showFilterIcon: true,\n      showFilter: this.props.Login.showFilter,\n      filterComponent: [{\n        \"IDS_INSTITUTIONCATEGORYFILTER\": /*#__PURE__*/React.createElement(InstitutionCategoryFilter, {\n          FilterInstitutionCategory: this.state.FilterInstitutionCategory || [],\n          nfilterInstitutionCategory: this.props.Login.masterData.defaultInstitutionCategory || {},\n          selectedRecord: this.state.selectedRecord || {},\n          onFilterComboChange: this.onComboChangeFilter,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 41\n          }\n        })\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 12,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(ContentPanel, {\n      className: \"panel-main-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"border-0\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 41\n      }\n    }, this.props.Login.masterData.selectedInstitution ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(ReactTooltip, {\n      place: \"bottom\",\n      globalEventOff: \"click\",\n      id: \"tooltip_list_wrap\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 49\n      }\n    }), /*#__PURE__*/React.createElement(Card.Title, {\n      className: \"product-title-main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 49\n      }\n    }, this.props.Login.masterData.selectedInstitution.sinstitutionname), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-flex product-category\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"product-title-sub flex-grow-1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 57\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"d-inline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"editInstitution\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_EDIT\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(editId) === -1,\n      className: \"btn btn-circle outline-grey mr-2\",\n      onClick: e => this.props.getInstitutionCombo(\"Institution\", \"update\", \"ninstitutioncode\", this.props.Login.masterData, this.props.Login.userInfo, editId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faPencilAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 57\n      }\n    })), /*#__PURE__*/React.createElement(Nav.Link, {\n      name: \"deleteInstitution\",\n      className: \"btn btn-circle outline-grey mr-2 action-icons-wrap\",\n      \"data-tip\": this.props.intl.formatMessage({\n        id: \"IDS_DELETE\"\n      }),\n      \"data-for\": \"tooltip_list_wrap\",\n      hidden: this.state.userRoleControlRights.indexOf(deleteId) === -1,\n      onClick: () => this.ConfirmDelete(deleteId),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: faTrashAlt,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 57\n      }\n    })))))), /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 48\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 53\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 58\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_INSTITUTIONCODE\",\n      messasge: \"Institution\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedInstitution.sinstitutioncode))), /*#__PURE__*/React.createElement(Col, {\n      md: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 57\n      }\n    }, /*#__PURE__*/React.createElement(FormGroup, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 61\n      }\n    }, /*#__PURE__*/React.createElement(FormLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 65\n      }\n    }, /*#__PURE__*/React.createElement(FormattedMessage, {\n      id: \"IDS_DESCRIPTION\",\n      messasge: \"Description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 69\n      }\n    })), /*#__PURE__*/React.createElement(ReadOnlyText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 65\n      }\n    }, this.props.Login.masterData.selectedInstitution.sdescription)))), selectedInstitution && /*#__PURE__*/React.createElement(CustomTab, {\n      tabDetail: this.tabDetail(),\n      onTabChange: this.onTabChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 57\n      }\n    }))) : \"\"))))))), (this.props.Login.openModal || this.props.Login.openChildModal) && /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal || this.props.Login.openChildModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.operation,\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      mandatoryFields: mandatoryFields,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.state.selectedRecord || {},\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"Institution\" ? /*#__PURE__*/React.createElement(AddInstitution, {\n        onNumericInputOnChange: this.onNumericInputOnChange,\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onComboChange: this.onComboChange,\n        InstitutionCategory: this.props.Login.InstitutionCategory,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"Institution Site\" ? /*#__PURE__*/React.createElement(AddInstitutionSite, {\n        selectedRecord: this.state.selectedRecord || {},\n        Site: this.props.Login.Site,\n        Region: this.props.Login.Region,\n        Country: this.props.Login.Country,\n        onComboChange: this.onComboChange,\n        onInputOnChange: this.onInputOnChange,\n        operation: this.props.Login.operation,\n        inputParam: this.props.inputParam,\n        userInfo: this.props.Login.userInfo,\n        districtList: this.props.Login.districtList,\n        cityList: this.props.Login.cityList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 29\n        }\n      }) : this.props.Login.screenName === \"InstitutionFile\" ? /*#__PURE__*/React.createElement(AddInstitutionFile, {\n        selectedRecord: this.state.selectedRecord || {},\n        onInputOnChange: this.onInputOnChange,\n        onDrop: this.onDropInstitutionFile,\n        label: this.props.intl.formatMessage({\n          id: \"IDS_FILENAME\"\n        }),\n        deleteAttachment: this.deleteAttachment,\n        linkMaster: this.props.Login.linkMaster,\n        maxSize: 20,\n        maxFiles: 1,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 29\n        }\n      }) : \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 21\n      }\n    }));\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== \"\" && props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    if (props.Login.selectedRecord === undefined) {\n      return {\n        selectedRecord: {}\n      };\n    }\n\n    return null;\n  }\n\n  generateBreadCrumData() {\n    const breadCrumbData = [];\n\n    if (this.props.Login.masterData && this.props.Login.masterData.FilterInstitutionCategory) {\n      breadCrumbData.push({\n        \"label\": \"IDS_INSTITUTIONCATEGORY\",\n        \"value\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory.sinstitutioncatname : \"-\"\n      });\n    }\n\n    return breadCrumbData;\n  }\n\n  componentDidUpdate(previousProps) {\n    let selectedRecord = this.state.selectedRecord || {};\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      selectedRecord = this.props.Login.selectedRecord;\n      this.setState({\n        selectedRecord\n      });\n    }\n\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.setState({\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        this.setState({\n          data: this.props.Login.masterData,\n          dataState,\n          selectedRecord: this.props.Login.selectedRecord\n        });\n      } ///     let FilterInstitutionCategory = this.state.FilterInstitutionCategory || {};\n      //   if (this.props.Login.masterData.FilterInstitutionCategory !== previousProps.Login.masterData.FilterInstitutionCategory) {\n\n\n      const InstitutionCategoryMap = constructOptionList(this.props.Login.masterData.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", 'ninstitutioncatcode', 'descending', false);\n      const FilterInstitutionCategory = InstitutionCategoryMap.get(\"OptionList\"); //  } \n\n      const filterData = this.generateBreadCrumData();\n      this.setState({\n        FilterInstitutionCategory,\n        filterData\n      });\n\n      if (this.props.Login.comboSet) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            comboSet: false\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    } // if (this.props.Login.masterData !== previousProps.Login.masterData) {\n    //     this.setState({ filterData });\n    // }\n\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  validateEsignCredential,\n  updateStore,\n  getInstitutionDetail,\n  getInstitutionCombo,\n  getInstitutionSiteData,\n  addInstitutionFile,\n  changeInstitutionCategoryFilter,\n  viewAttachment,\n  filterColumnData,\n  getCitComboServices,\n  getDistComboServices\n})(injectIntl(Institution));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/submitter/institution/Institution.jsx"],"names":["React","connect","FormattedMessage","injectIntl","callService","crudMaster","validateEsignCredential","updateStore","getInstitutionDetail","getInstitutionCombo","getInstitutionSiteData","addInstitutionFile","changeInstitutionCategoryFilter","viewAttachment","filterColumnData","getCitComboServices","getDistComboServices","BreadcrumbComponent","Affix","constructOptionList","getControlMap","showEsign","onDropAttachFileList","deleteAttachmentDropZone","create_UUID","validatePhoneNumber","validateEmail","Row","Col","Card","FormGroup","FormLabel","Nav","ContentPanel","ListMaster","ReactTooltip","InstitutionCategoryFilter","ReadOnlyText","CustomTab","InstitutionSiteTab","InstitutionFileTab","DEFAULT_RETURN","FontAwesomeIcon","faPencilAlt","faTrashAlt","SlideOutModal","Esign","AddInstitution","AddInstitutionSite","AddInstitutionFile","ConfirmMessage","toast","attachmentType","transactionStatus","mapStateToProps","state","Login","Institution","Component","constructor","props","tabDetail","tabMap","Map","editSiteId","controlMap","has","get","ncontrolcode","deleteSiteId","deleteFileId","deleteParam","operation","deleteTestParam","editParam","screenName","primaryKeyField","userInfo","inputParam","instItem","masterData","selectedInstitution","instItemSite","selectedInstitutionSite","set","selectedId","userRoleControlRights","InstitutionSite","selectedRecord","dataState","DeleteInstitutionSite","settings","errorCode","InstitutionFile","DeleteInstitutionFile","viewInstitutionFile","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","defaultInstitutionCategory","inputData","ninstitutioncatcode","userinfo","classUrl","methodUrl","FilterInstitutionCategory","warn","intl","formatMessage","id","reloadData","searchRef","current","value","SelectedInstitutionCategory","displayName","closeModal","loadEsign","openModal","openChildModal","cityList","districtList","onTabChange","tabProps","onNumericInputOnChange","name","setState","onInputOnChange","event","optional","target","type","checked","onComboChangeFilter","comboData","fieldName","item","onComboChange","sdisplayname","nregioncode","label","primarykey","ndistrictcode","onSaveClick","saveType","formRef","postParam","undefined","inputListName","selectedObject","fieldInstitutionList","map","nmastersitecode","filtercombochange","searchedData","nformcode","ncontrolCode","screenData","isValidateEmail","fieldInstitutionSiteList","info","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","institutionFileArray","institutionFile","ninstitutioncode","ninstitutionfilecode","nstatus","ACTIVE","formData","FormData","FTP","Array","isArray","length","forEach","file","index","tempData","Object","assign","splittedFileName","split","fileExtension","ssystemfilename","filesystemfileext","uniquefilename","ntestfilecode","sfiledesc","trim","NA","size","append","push","YES","nfilesize","slinkfilename","slinkdescription","nlinkcode","JSON","stringify","isFileupload","ConfirmDelete","deleteId","confirmMessage","confirm","DeleteInstitution","primaryKeyValue","fetchUrl","fecthInputObject","expanded","ninstitutionsitecode","filedata","institutionfile","onDropInstitutionFile","attachedFiles","maxSize","actionType","deleteAttachment","validateEsign","modalName","sreason","nreasoncode","spredefinedreason","password","createRef","skip","take","parseInt","render","mandatoryFields","mandatory","idsName","dataField","mandatoryLabel","controlType","LINK","addId","editId","filterParam","searchFieldList","breadCrumbData","filterData","sinstitutionname","indexOf","e","sinstitutioncode","sdescription","masterStatus","InstitutionCategory","Site","Region","Country","linkMaster","getDerivedStateFromProps","error","generateBreadCrumData","sinstitutioncatname","componentDidUpdate","previousProps","values","InstitutionCategoryMap","comboSet"],"mappings":"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","sourcesContent":[" import React from \"react\";\r\nimport { connect } from 'react-redux';\r\nimport {FormattedMessage,injectIntl } from \"react-intl\";\r\nimport { callService,crudMaster,validateEsignCredential,updateStore,getInstitutionDetail,getInstitutionCombo,\r\n         getInstitutionSiteData,addInstitutionFile,changeInstitutionCategoryFilter,viewAttachment,filterColumnData ,getCitComboServices,getDistComboServices} from \"../../../actions\";\r\nimport BreadcrumbComponent from \"../../../components/Breadcrumb.Component\";\r\nimport { Affix } from 'rsuite';\r\nimport { constructOptionList, getControlMap, showEsign,onDropAttachFileList,deleteAttachmentDropZone,create_UUID,validatePhoneNumber,validateEmail } from '../../../components/CommonScript';\r\nimport { Row,Col,Card,FormGroup, FormLabel,Nav} from \"react-bootstrap\";\r\nimport { ContentPanel } from '../../product/product.styled';\r\nimport ListMaster from \"../../../components/list-master/list-master.component\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport InstitutionCategoryFilter  from  \"./InstitutionCategoryFilter\";\r\nimport { ReadOnlyText } from '../../../components/App.styles';\r\nimport CustomTab from \"../../../components/custom-tabs/custom-tabs.component\";\r\nimport InstitutionSiteTab from \"./InstitutionSiteTab\";\r\nimport InstitutionFileTab from \"./InstitutionFileTab\";\r\nimport { DEFAULT_RETURN } from \"../../../actions/LoginTypes\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPencilAlt, faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport SlideOutModal from \"../../../components/slide-out-modal/SlideOutModal\";\r\nimport Esign from \"../../audittrail/Esign\"; \r\nimport AddInstitution from \"./AddInstitution\";\r\nimport AddInstitutionSite from \"./AddInstitutionSite\";\r\nimport AddInstitutionFile from \"./AddInstitutionFile\";\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\nimport { toast } from 'react-toastify';\r\nimport { attachmentType,transactionStatus } from \"../../../components/Enumeration\";\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\nclass Institution extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.formRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.searchRef = React.createRef();\r\n        this.fieldInstitutionList = [];\r\n        this.fieldInstitutionSiteList =[];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state ={\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            selectedRecord: {}, \r\n        }\r\n       \r\n    }\r\n    render(){\r\n        let mandatoryFields = [];\r\n        if (this.props.Login.screenName === \"Institution\") {\r\n          mandatoryFields.push(\r\n            {\r\n              mandatory: true,\r\n              idsName: \"IDS_INSTITUTIONCATEGORY\",\r\n              dataField: \"ninstitutioncatcode\",\r\n              mandatoryLabel: \"IDS_SELECT\",\r\n              controlType: \"selectbox\",\r\n            },\r\n            {\r\n              mandatory: true,\r\n              idsName: \"IDS_INSTITUTION\",\r\n              dataField: \"sinstitutionname\",\r\n              mandatoryLabel: \"IDS_ENTER\",\r\n              controlType: \"textbox\",\r\n            },\r\n            {\r\n                mandatory: true,\r\n                idsName: \"IDS_INSTITUTIONCODE\",\r\n                dataField: \"sinstitutioncode\",\r\n                mandatoryLabel: \"IDS_ENTER\",\r\n                controlType: \"textbox\",\r\n              },\r\n            \r\n          );\r\n         \r\n          \r\n          \r\n        }else if(this.props.Login.screenName === \"Institution Site\"){\r\n            mandatoryFields.push(\r\n                {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_INSTITUTIONSITE\",\r\n                    dataField: \"sinstitutionsitename\",\r\n                    mandatoryLabel: \"IDS_ENTER\",\r\n                    controlType: \"textbox\",\r\n                  },\r\n                  {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_REGIONNAME\",\r\n                    dataField: \"nregioncode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                  },\r\n                  {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_DISTRICT\",\r\n                    dataField: \"ndistrictcode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                  },\r\n                  {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_CITY\",\r\n                    dataField: \"ncitycode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                  },\r\n                  {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_COUNTRY\",\r\n                    dataField: \"ncountrycode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                  },\r\n                  {\r\n                    mandatory: true,\r\n                    idsName: \"IDS_LIMSSITE\",\r\n                    dataField: \"nsitecode\",\r\n                    mandatoryLabel: \"IDS_SELECT\",\r\n                    controlType: \"selectbox\",\r\n                  }  \r\n            );\r\n     }\r\n            else  {\r\n                if (this.state.selectedRecord && this.state.selectedRecord.nattachmenttypecode === attachmentType.LINK) {\r\n                    mandatoryFields.push(\r\n                        { \"idsName\": \"IDS_FILENAME\", \"dataField\": \"slinkfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" },\r\n                        { \"idsName\": \"IDS_LINKNAME\", \"dataField\": \"nlinkcode\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" }\r\n                    );\r\n                } else {\r\n                    // if (this.props.operation !== 'update') {\r\n                        mandatoryFields.push(\r\n                            { \"idsName\": \"IDS_FILE\", \"dataField\": \"sfilename\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_CHOOSE\", \"controlType\": \"file\" }\r\n                        )\r\n                }\r\n            }\r\n        \r\n\r\n        this.fieldInstitutionList = [\"sinstitutionname\", \"sinstitutioncode\",\"sdescription\"];\r\n        this.fieldInstitutionSiteList = [\"sinstitutionsitename\",\"sinstitutionsiteaddress\",\"szipcode\",\"sstate\",\"stelephone\",\"sfaxno\",\"semail\",\"swebsite\"];\r\n\r\n        \r\n                \r\n        const addId = this.state.controlMap.has(\"AddInstitution\") && this.state.controlMap.get(\"AddInstitution\").ncontrolcode;\r\n        const editId =  this.state.controlMap.has(\"EditInstitution\") && this.state.controlMap.get(\"EditInstitution\").ncontrolcode;\r\n        const deleteId = this.state.controlMap.has(\"DeleteInstitution\") && this.state.controlMap.get(\"DeleteInstitution\").ncontrolcode;\r\n\r\n        const filterParam = {\r\n            inputListName: \"Institution\", selectedObject: \"selectedInstitution\", primaryKeyField: \"ninstitutioncode\",\r\n            fetchUrl: \"institution/getSelectedInstitutionDetail\", fecthInputObject: { userinfo: this.props.Login.userInfo,Institution:this.props.Login.masterData.selectedInstitution },\r\n            masterData: this.props.Login.masterData,\r\n            searchFieldList: [\"sinstitutioncatname\", \"sinstitutionname\",\"sdescription\"]\r\n        };\r\n\r\n        const { selectedInstitution } = this.props.Login.masterData;\r\n        const breadCrumbData =this.state.filterData || [];\r\n        return(\r\n            <>\r\n                <div className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                        <ListMaster\r\n                            formatMessage={this.props.intl.formatMessage}\r\n                            screenName={this.props.intl.formatMessage({ id: \"IDS_INSTITUTION\" })}\r\n                            masterData={this.props.Login.masterData}\r\n                            userInfo={this.props.Login.userInfo}\r\n                            masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.Institution}\r\n                            getMasterDetail={(Institution) => this.props.getInstitutionDetail(Institution, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                            selectedMaster={this.props.Login.masterData.selectedInstitution}\r\n                            primaryKeyField=\"ninstitutioncode\"\r\n                            mainField=\"sinstitutionname\"\r\n                            firstField=\"sinstitutioncatname\"\r\n                            isIDSField=\"Yes\"\r\n                            filterColumnData={this.props.filterColumnData}\r\n                            filterParam={filterParam}\r\n                            userRoleControlRights={this.state.userRoleControlRights}\r\n                            addId={addId}\r\n                            searchRef={this.searchRef}\r\n                            reloadData={this.reloadData}\r\n                            hidePaging={true}\r\n                            openModal={() =>\r\n                                this.props.getInstitutionCombo(\r\n                                \"Institution\",\r\n                                \"create\",\r\n                                \"ninstitutioncode\",\r\n                                this.props.Login.masterData,\r\n                                this.props.Login.userInfo,\r\n                                addId\r\n                                )\r\n                              }\r\n                            openFilter={this.openFilter}\r\n                            closeFilter={this.closeFilter}\r\n                            onFilterSubmit={this.onFilterSubmit}\r\n                            showFilterIcon={true}\r\n                            showFilter={this.props.Login.showFilter}\r\n                            filterComponent={[\r\n                                {\r\n                                    \"IDS_INSTITUTIONCATEGORYFILTER\":\r\n                                        <InstitutionCategoryFilter\r\n                                        FilterInstitutionCategory={this.state.FilterInstitutionCategory || []}\r\n                                        nfilterInstitutionCategory ={this.props.Login.masterData.defaultInstitutionCategory ||{}}\r\n                                        selectedRecord={this.state.selectedRecord || {}}\r\n                                        onFilterComboChange={this.onComboChangeFilter}\r\n                                        />\r\n                                }\r\n                            ]}\r\n                        />\r\n                        </Col>\r\n                        <Col md={8}>\r\n                            <Row>\r\n                                <Col md={12}>\r\n                                    <ContentPanel className=\"panel-main-content\">\r\n                                        <Card className=\"border-0\">\r\n                                            {this.props.Login.masterData.selectedInstitution ?(\r\n                                               <>\r\n                                               <Card.Header>\r\n                                                <ReactTooltip\r\n                                                    place=\"bottom\"\r\n                                                    globalEventOff=\"click\"\r\n                                                    id=\"tooltip_list_wrap\"\r\n                                                />\r\n                                                <Card.Title className=\"product-title-main\">\r\n                                                    {this.props.Login.masterData.selectedInstitution.sinstitutionname}\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle>\r\n                                                    <div className=\"d-flex product-category\">\r\n                                                        <h2 className=\"product-title-sub flex-grow-1\"></h2>\r\n                                                        <div className=\"d-inline\">\r\n                                                        <Nav.Link\r\n                                                            name=\"editInstitution\"\r\n                                                            data-tip={this.props.intl.formatMessage({id: \"IDS_EDIT\", })}\r\n                                                            data-for=\"tooltip_list_wrap\" hidden={this.state.userRoleControlRights.indexOf(editId) === -1}\r\n                                                            className=\"btn btn-circle outline-grey mr-2\"\r\n                                                            onClick={(e) => this.props.getInstitutionCombo(\"Institution\",\"update\",\"ninstitutioncode\",this.props.Login.masterData,this.props.Login.userInfo,editId)}\r\n                                    \r\n                                                        >\r\n                                                        <FontAwesomeIcon icon={faPencilAlt} />\r\n                                                        </Nav.Link>\r\n                                                        <Nav.Link\r\n                                                            name=\"deleteInstitution\"\r\n                                                            className=\"btn btn-circle outline-grey mr-2 action-icons-wrap\"\r\n                                                            data-tip={this.props.intl.formatMessage({id: \"IDS_DELETE\",})}\r\n                                                            data-for=\"tooltip_list_wrap\"  hidden={this.state.userRoleControlRights.indexOf(deleteId) === -1}\r\n                                                            onClick={() =>this.ConfirmDelete(deleteId)}\r\n                                                        >\r\n                                                        <FontAwesomeIcon icon={faTrashAlt} />\r\n                                                        </Nav.Link>\r\n                                                        </div>    \r\n                                                    </div>\r\n                                                </Card.Subtitle>\r\n                                               </Card.Header>\r\n                                               <Card.Body>\r\n                                                    <Row>\r\n                                                        {/* <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_INSTITUTION\" messasge=\"Institution\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedInstitution.sinstitutionname}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col> */}\r\n                                                        {/* <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_INSTITUTIONCATEGORY\" messasge=\"Institution Category\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedInstitution.sinstitutioncatname}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col> */}\r\n                                                         <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_INSTITUTIONCODE\" messasge=\"Institution\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedInstitution.sinstitutioncode}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                        <Col md={4}>\r\n                                                            <FormGroup>\r\n                                                                <FormLabel>\r\n                                                                    <FormattedMessage id=\"IDS_DESCRIPTION\" messasge=\"Description\"/>\r\n                                                                </FormLabel>\r\n                                                                <ReadOnlyText>\r\n                                                                    {this.props.Login.masterData.selectedInstitution.sdescription}\r\n                                                                </ReadOnlyText>\r\n                                                            </FormGroup>\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                    {selectedInstitution && (\r\n                                                        <CustomTab\r\n                                                            tabDetail={this.tabDetail()}\r\n                                                                onTabChange={this.onTabChange}\r\n                                                        />\r\n                                                    )}\r\n                                               </Card.Body>\r\n                                               </>     \r\n                                            ):(\r\n                                             \"\"\r\n                                            )}\r\n                                        </Card>    \r\n                                     </ContentPanel>   \r\n                                </Col>   \r\n                            </Row>\r\n                        </Col>  \r\n                    </Row>\r\n                </div>\r\n                {(this.props.Login.openModal || this.props.Login.openChildModal) && (\r\n                    <SlideOutModal\r\n                        show={(this.props.Login.openModal||this.props.Login.openChildModal)}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        mandatoryFields={mandatoryFields}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        addComponent={\r\n                             this.props.Login.loadEsign ? (\r\n                            <Esign\r\n                                operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            ) : this.props.Login.screenName === \"Institution\" ? (\r\n                            <AddInstitution\r\n                                onNumericInputOnChange={this.onNumericInputOnChange}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                InstitutionCategory={this.props.Login.InstitutionCategory}   \r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                \r\n                            />\r\n                            ) : this.props.Login.screenName === \"Institution Site\" ? (\r\n                            <AddInstitutionSite\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                Site={this.props.Login.Site}\r\n                                Region={this.props.Login.Region}\r\n                                Country={this.props.Login.Country}\r\n                                onComboChange={this.onComboChange}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                operation={this.props.Login.operation}\r\n                                inputParam={this.props.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                districtList={this.props.Login.districtList}\r\n                                cityList={this.props.Login.cityList}\r\n\r\n                            />\r\n                            )  : this.props.Login.screenName ===\"InstitutionFile\" ? (\r\n                            <AddInstitutionFile\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onDrop={this.onDropInstitutionFile}\r\n                                label={this.props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                                deleteAttachment={this.deleteAttachment}\r\n                                linkMaster ={this.props.Login.linkMaster}\r\n                                maxSize={20}\r\n                                maxFiles={1}\r\n                            />\r\n                            )  : (\r\n                            \"\"\r\n                            )\r\n                        }   \r\n                    />\r\n                )}\r\n            </>\r\n        )\r\n        \r\n    }\r\n\r\n  tabDetail = () => {\r\n    const tabMap = new Map();\r\n    \r\n    const editSiteId = this.state.controlMap.has(\"EditInstitutionSite\") &&  this.state.controlMap.get(\"EditInstitutionSite\").ncontrolcode;\r\n    const deleteSiteId = this.state.controlMap.has(\"DeleteInstitutionSite\") && this.state.controlMap.get(\"DeleteInstitutionSite\").ncontrolcode;    \r\n    const deleteFileId = this.state.controlMap.has(\"DeleteInstitutionFile\") && this.state.controlMap.get(\"DeleteInstitutionFile\").ncontrolcode;    \r\n    const deleteParam ={operation:\"delete\",deleteSiteId};\r\n    const deleteTestParam ={operation:\"delete\",deleteFileId};\r\n    const editParam = {screenName:\"Institution Site\",operation:\"update\",primaryKeyField:\"ninstitutionsitecode\",\r\n                        userInfo:this.props.Login.userInfo,inputParam: this.props.Login.inputParam,ncontrolcode :editSiteId,\r\n                        instItem :this.props.Login.masterData.selectedInstitution,instItemSite:this.props.Login.masterData.selectedInstitutionSite}\r\n    \r\n    tabMap.set(\"IDS_INSTITUTIONSITE\",\r\n    <InstitutionSiteTab\r\n      selectedId = {this.props.Login.selectedId}\r\n      controlMap={this.state.controlMap}\r\n      userRoleControlRights={this.state.userRoleControlRights}\r\n      selectedInstitution={this.props.Login.masterData.selectedInstitution}\r\n      InstitutionSite= {this.props.Login.masterData.InstitutionSite}\r\n      masterData={this.props.Login.masterData}\r\n      userInfo={this.props.Login.userInfo}\r\n      getInstitutionSiteData={this.props.getInstitutionSiteData}\r\n      inputParam={this.props.Login.inputParam}\r\n      selectedRecord={this.state.selectedRecord}\r\n      dataState={this.props.Login.dataState}\r\n      deleteRecord ={this.DeleteInstitutionSite}\r\n      deleteParam={deleteParam}\r\n      fetchRecord={this.props.getInstitutionSiteData}\r\n      editParam={editParam}\r\n      InstitutionSiteData={this.props.Login.masterData.InstitutionSite || []}\r\n      screenName=\"Institution Site\"\r\n      settings={this.props.Login.settings}\r\n      errorCode={this.props.Login.errorCode}\r\n    />);\r\n\r\n   \r\n    \r\n\r\n\r\n    tabMap.set(\"IDS_INSTITUTIONFILE\",\r\n    <InstitutionFileTab\r\n      controlMap={this.state.controlMap}\r\n      userRoleControlRights={this.state.userRoleControlRights}\r\n      userInfo={this.props.Login.userInfo}\r\n      inputParam={this.props.Login.inputParam}\r\n      InstitutionFile={this.props.Login.masterData.InstitutionFile || []}\r\n      settings = {this.props.Login.settings}\r\n      addInstitutionFile={this.props.addInstitutionFile}\r\n      deleteRecord={this.DeleteInstitutionFile}\r\n      deleteParam ={deleteTestParam}\r\n      //editParam={editTestParam}\r\n      viewInstitutionFile={this.viewInstitutionFile}\r\n      screenName=\"InstitutionFile\"\r\n\r\n\r\n    />);\r\n\r\n    return tabMap;\r\n  }\r\n\r\n  openFilter = () => {\r\n    let showFilter = !this.props.Login.showFilter\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { showFilter }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n}\r\n\r\ncloseFilter = () => {\r\n\r\n    const updateInfo = {\r\n        typeName: DEFAULT_RETURN,\r\n        data: { showFilter: false }\r\n    }\r\n    this.props.updateStore(updateInfo);\r\n}\r\n\r\n  onFilterSubmit = () => {\r\n    if (this.props.Login.masterData.defaultInstitutionCategory) {\r\n        let inputParam = {\r\n            inputData: {\r\n                ninstitutioncatcode: this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode,\r\n                userinfo: this.props.Login.userInfo,\r\n               \r\n            },\r\n            classUrl: \"institution\",\r\n            methodUrl: \"InstitutionByCategory\"\r\n        }\r\n        this.props.changeInstitutionCategoryFilter(inputParam,this.props.Login.masterData.FilterInstitutionCategory,this.props.Login.masterData.defaultInstitutionCategory);\r\n    } else {\r\n        toast.warn(this.props.intl.formatMessage({ id: \"IDS_INSTITUTIONCATEGORYNOTAVAILABLE\" }));\r\n    }\r\n  }\r\n\r\n    reloadData = () => {\r\n        this.searchRef.current.value = \"\";\r\n\r\n        const inputParam = {\r\n            inputData: {\"ninstitutioncatcode\": this.props.Login.masterData.SelectedInstitutionCategory.ninstitutioncatcode,\r\n                    \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl:\"InstitutionByCategory\",\r\n            displayName:this.props.intl.formatMessage({ id: \"IDS_INSTITUTION\" }),\r\n        };\r\n        this.props.changeInstitutionCategoryFilter(inputParam,this.props.Login.masterData.FilterInstitutionCategory,this.props.Login.masterData.SelectedInstitutionCategory);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error!==\"\"&& props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n    \r\n\r\n  closeModal = () => {\r\n    let loadEsign = this.props.Login.loadEsign;\r\n    let openModal = this.props.Login.openModal;\r\n    let openChildModal = this.props.Login.openChildModal;\r\n    let selectedRecord = this.props.Login.selectedRecord;\r\n    let selectedId = this.props.Login.selectedId;\r\n    if (this.props.Login.loadEsign) {\r\n      if (this.props.Login.operation === \"delete\") {\r\n        loadEsign = false;\r\n        openModal = false;\r\n        openChildModal=false;\r\n        selectedRecord = [];\r\n      } else {\r\n        loadEsign = false;\r\n        selectedRecord['esignpassword'] = \"\";\r\n        selectedRecord['esigncomments'] = \"\";\r\n        selectedRecord['esignreason']=\"\";\r\n        selectedRecord=selectedRecord;\r\n      }\r\n    } else {\r\n      openModal = false;\r\n      openChildModal=false;\r\n      selectedRecord = [];\r\n      this.props.Login.cityList=[];\r\n      this.props.Login.districtList=[];\r\n      selectedId = null;\r\n     //this.setState({ selectedRecord });\r\n    }\r\n\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { openModal, loadEsign, selectedRecord, selectedId,openChildModal},\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n\r\n  onTabChange = (tabProps) => {\r\n    const screenName = tabProps.screenName;\r\n    const updateInfo = {\r\n      typeName: DEFAULT_RETURN,\r\n      data: { screenName },\r\n    };\r\n    this.props.updateStore(updateInfo);\r\n  };\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    };\r\n\r\n    onInputOnChange = (event,optional) => {\r\n      const selectedRecord = this.state.selectedRecord || {};\r\n      if (event.target.type === \"checkbox\") {\r\n          selectedRecord[event.target.name] = event.target.checked === true ? 3 : 4;\r\n      }else if(event.target.type === \"radio\"){\r\n        selectedRecord[event.target.name] = optional;\r\n      }else {\r\n            if( event.target.name === \"sfaxno\"){\r\n                if(event.target.value !== \"\"){\r\n                    event.target.value = validatePhoneNumber(event.target.value);\r\n                    selectedRecord[event.target.name] = event.target.value !== \"\" ? event.target.value : selectedRecord[event.target.name];\r\n                }else {\r\n                    selectedRecord[event.target.name] = event.target.value;\r\n                }\r\n            }else{\r\n                selectedRecord[event.target.name] = event.target.value;\r\n            }\r\n          \r\n      }\r\n      this.setState({ selectedRecord });\r\n    };\r\n\r\n    onComboChangeFilter = (comboData,fieldName) => {\r\n        const selectedRecord =this.state.selectedRecord || [];\r\n        if(comboData){\r\n            if(fieldName===\"ninstitutioncatcode\"){\r\n               if(comboData.value !== this.props.Login.masterData.defaultInstitutionCategory. ninstitutioncatcode) {\r\n                    let masterData = { ...this.props.Login.masterData, defaultInstitutionCategory: comboData.item}\r\n                    const updateInfo = { \r\n                        typeName: DEFAULT_RETURN,\r\n                        data: { masterData }\r\n                    }\r\n                    this.props.updateStore(updateInfo);\r\n                }  \r\n            }           \r\n        }     \r\n    }\r\n\r\n    onComboChange=(comboData,fieldName)=> {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData != null) {\r\n            if(fieldName===\"ninstitutioncatcode\"){\r\n                selectedRecord[fieldName] = comboData;\r\n                this.setState({ selectedRecord });\r\n            }else if(fieldName=== \"nsitecode\"){\r\n                selectedRecord[\"nsitecode\"] = comboData;\r\n                selectedRecord[\"ssitecode\"]= comboData.item[\"ssitecode\"];\r\n                this.setState({ selectedRecord });  \r\n            }else if(fieldName=== \"nregioncode\"){\r\n                selectedRecord[\"nregioncode\"] = comboData;\r\n                selectedRecord[\"sregioncode\"]= comboData.item[\"sregioncode\"];\r\n                    this.props.getDistComboServices({\r\n                        inputData: {\r\n                            userinfo: this.props.Login.userInfo,\r\n                            sdisplayname: selectedRecord.nregioncode.label,\r\n                            primarykey: selectedRecord.nregioncode.value,\r\n                       }\r\n                    });   \r\n                selectedRecord[\"ndistrictcode\"]=\"\"; \r\n                selectedRecord[\"sdistrictcode\"]=\"\"; \r\n                selectedRecord[\"ncitycode\"]=\"\"; \r\n                selectedRecord[\"scitycode\"]=\"\"; \r\n                this.setState({ selectedRecord });  \r\n            }else if(fieldName=== \"ncountrycode\"){\r\n                selectedRecord[\"ncountrycode\"] = comboData;\r\n                this.setState({ selectedRecord });  \r\n            }else if(fieldName=== \"ndistrictcode\"){\r\n                selectedRecord[\"ndistrictcode\"] = comboData;\r\n                selectedRecord[\"sdistrictcode\"]= comboData.item[\"sdistrictcode\"];\r\n                    this.props.getCitComboServices({\r\n                        inputData: {\r\n                            userinfo: this.props.Login.userInfo,\r\n                            sdisplayname: selectedRecord.ndistrictcode.label,\r\n                            primarykey: selectedRecord.ndistrictcode.value,\r\n                       }\r\n                    });   \r\n                selectedRecord[\"ncitycode\"]=\"\"; \r\n                selectedRecord[\"scitycode\"]=\"\"; \r\n                this.setState({ selectedRecord });  \r\n            }else if(fieldName=== \"ncitycode\"){\r\n                selectedRecord[\"ncitycode\"] = comboData;\r\n                selectedRecord[\"scitycode\"]= comboData.item[\"scitycode\"];\r\n                this.setState({ selectedRecord });  \r\n            }      \r\n        }\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let postParam = undefined;\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n\r\n        if(this.props.Login.screenName === \"Institution\"){\r\n            if (this.props.Login.operation === \"update\") {  // edit\r\n                const selectedRecord=this.state.selectedRecord;\r\n                    postParam = {\r\n                      inputListName: \"Institution\",\r\n                      selectedObject: \"selectedInstitution\",\r\n                      primaryKeyField: \"ninstitutioncode\",\r\n                    };\r\n                  inputData[\"institution\"] = {};\r\n    \r\n                  this.fieldInstitutionList.map(item => {\r\n                      return inputData[\"institution\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n                 })\r\n                 inputData[\"institution\"][\"ninstitutioncode\"] =selectedRecord[\"ninstitutioncode\"] ? selectedRecord[\"ninstitutioncode\"] : -1;\r\n                 inputData[\"institution\"][\"ninstitutioncatcode\"] = this.state.selectedRecord ? this.state.selectedRecord.ninstitutioncatcode.value : -1;\r\n                 dataState = this.state.dataState;\r\n            }else {\r\n                  //add               \r\n                  inputData[\"institution\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n    \r\n    \r\n                  this.fieldInstitutionList.map(item => {\r\n                      return inputData[\"institution\"][item] = this.state.selectedRecord[item]!==undefined ? this.state.selectedRecord[item]:\"\";\r\n                  })\r\n                  inputData[\"institution\"][\"ninstitutioncatcode\"] = this.state.selectedRecord ? this.state.selectedRecord.ninstitutioncatcode.value : -1;\r\n                }\r\n       \r\n            const inputParam = {\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"Institution\",\r\n            displayName: this.props.Login.screenName,\r\n            inputData: inputData,\r\n            selectedId: this.state.selectedRecord[\"ninstututioncode\"],\r\n            operation: this.props.Login.operation, saveType, formRef, dataState,\r\n            searchRef: this.searchRef,\r\n            postParam:postParam,\r\n            filtercombochange:this.props.Login.masterData.searchedData!==undefined?\r\n            this.state.selectedRecord.ninstitutioncatcode.value===\r\n           this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode?false:true:false\r\n            }\r\n\r\n            let masterData={...this.props.Login.masterData\r\n               };\r\n\r\n                if(this.state.selectedRecord.ninstitutioncatcode.value!==\r\n                    this.props.Login.masterData.defaultInstitutionCategory.ninstitutioncatcode){\r\n                         masterData={...this.props.Login.masterData,\r\n                            defaultInstitutionCategory: this.state.selectedRecord.ninstitutioncatcode.item,\r\n                            SelectedInstitutionCategory:this.state.selectedRecord.ninstitutioncatcode.item };\r\n                }\r\n\r\n          //  this.setState({ FilterInstitutionCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                          loadEsign: true, screenData: { inputParam, masterData },\r\n                          openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.screenName }),\r\n                          operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else {\r\n                    this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n            }\r\n        }else if(this.props.Login.screenName === \"Institution Site\"){\r\n\r\n            const isValidateEmail = this.state.selectedRecord[\"semail\"]? validateEmail(this.state.selectedRecord[\"semail\"]): true;\r\n            if(isValidateEmail){\r\n                \r\n            if (this.props.Login.operation === \"update\") {  // edit\r\n                const selectedRecord=this.state.selectedRecord;\r\n                    postParam = {\r\n                      inputListName: \"InstitutionSite\",\r\n                      selectedObject: \"selectedInstitutionSite\",\r\n                      primaryKeyField: \"ninstitutionsitecode\",\r\n                    };\r\n                  inputData[\"institutionsite\"] = {};\r\n\r\n                  inputData[\"institutionsite\"][\"ninstitutionsitecode\"] =selectedRecord[\"ninstitutionsitecode\"] ? selectedRecord[\"ninstitutionsitecode\"] : -1;\r\n                  inputData[\"institutionsite\"][\"ninstitutioncode\"] = this.props.Login.instItem[\"ninstitutioncode\"];;\r\n                  inputData[\"institutionsite\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nsitecode\"] ? this.state.selectedRecord[\"nsitecode\"].value : -1;\r\n                  inputData[\"institutionsite\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : -1;\r\n                  inputData[\"institutionsite\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\r\n                  inputData[\"institutionsite\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : -1;\r\n                  inputData[\"institutionsite\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : -1;\r\n    \r\n                  this.fieldInstitutionSiteList.map(item => {\r\n                      return inputData[\"institutionsite\"][item] = selectedRecord[item] !== null ? selectedRecord[item] : \"\";\r\n                 })\r\n                \r\n\r\n                 dataState = this.state.dataState;\r\n            }else {\r\n                postParam=undefined;\r\n                //add               \r\n                //inputData[\"institutionsite\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };  \r\n                inputData[\"institutionsite\"] = {}; \r\n                inputData[\"institutionsite\"][\"ninstitutioncode\"] = this.props.Login.instItem[\"ninstitutioncode\"];;\r\n                inputData[\"institutionsite\"][\"nregionalsitecode\"] = this.state.selectedRecord[\"nsitecode\"] ? this.state.selectedRecord[\"nsitecode\"].value : -1;\r\n                inputData[\"institutionsite\"][\"nregioncode\"] = this.state.selectedRecord[\"nregioncode\"] ? this.state.selectedRecord[\"nregioncode\"].value : -1;\r\n                inputData[\"institutionsite\"][\"ncountrycode\"] = this.state.selectedRecord[\"ncountrycode\"] ? this.state.selectedRecord[\"ncountrycode\"].value : -1;\r\n                inputData[\"institutionsite\"][\"ncitycode\"] = this.state.selectedRecord[\"ncitycode\"] ? this.state.selectedRecord[\"ncitycode\"].value : -1;\r\n                inputData[\"institutionsite\"][\"ndistrictcode\"] = this.state.selectedRecord[\"ndistrictcode\"] ? this.state.selectedRecord[\"ndistrictcode\"].value : -1;\r\n  \r\n\r\n                this.fieldInstitutionSiteList.map(item => {\r\n                    return inputData[\"institutionsite\"][item] = this.state.selectedRecord[item]!==undefined ? this.state.selectedRecord[item]:\"\";\r\n                })\r\n            }\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: \"InstitutionSite\",\r\n                displayName: this.props.Login.screenName,\r\n                inputData: inputData,\r\n                selectedId: this.state.selectedRecord[\"ninstitutionsitecode\"],\r\n                operation: this.props.Login.operation, saveType, formRef, dataState,\r\n                searchRef: this.searchRef,\r\n                postParam:postParam\r\n            }\r\n            //this.setState({ FilterClientCategory: { \"label\":  this.state.selectedRecord.ninstitutioncatcode.label, \"value\":  this.state.selectedRecord.ninstitutioncatcode.value } });\r\n            if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                          loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                          openChildModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.screenName }),\r\n                          operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n            }\r\n            }else{\r\n                toast.info(this.props.intl.formatMessage({ id: \"IDS_ENTERVALIDEMAIL\" }))\r\n            }\r\n\r\n        }else if(this.props.Login.screenName === \"InstitutionFile\"){\r\n                const selectedRecord =this.state.selectedRecord;\r\n                const acceptedFiles = selectedRecord.sfilename;\r\n                const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n                let isFileEdited = transactionStatus.NO;\r\n                let institutionFileArray = [];\r\n                let institutionFile = {\r\n                    ninstitutioncode: this.props.Login.masterData.selectedInstitution.ninstitutioncode,\r\n                    ninstitutionfilecode: selectedRecord.ninstitutionfilecode ? selectedRecord.ninstitutionfilecode : 0,\r\n                    nstatus: transactionStatus.ACTIVE,\r\n                    nattachmenttypecode,\r\n                };\r\n                const formData = new FormData();\r\n                if (nattachmenttypecode === attachmentType.FTP) {\r\n                    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n                        acceptedFiles.forEach((file, index) => {\r\n                            const tempData = Object.assign({}, institutionFile);\r\n                            const splittedFileName = file.name.split('.');\r\n                            const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                            const ssystemfilename = selectedRecord.ssystemfilename ? selectedRecord.ssystemfilename.split('.') : \"\";\r\n                            const filesystemfileext = selectedRecord.ssystemfilename ? file.name.split('.')[ssystemfilename.length - 1] : \"\";\r\n                            const uniquefilename = nattachmenttypecode === attachmentType.FTP ? selectedRecord.ntestfilecode && selectedRecord.ntestfilecode > 0\r\n                                && selectedRecord.ssystemfilename !== \"\" ? ssystemfilename[0] + '.' + filesystemfileext : create_UUID() + '.' + fileExtension : \"\";\r\n                            tempData[\"sfilename\"] = file.name;\r\n                            tempData[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\r\n                            tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                            tempData[\"ssystemfilename\"] = uniquefilename;\r\n                            tempData[\"nfilesize\"] = file.size;\r\n                            formData.append(\"uploadedFile\" + index, file);\r\n                            formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                            institutionFileArray.push(tempData);\r\n                        });  \r\n                        \r\n                        formData.append(\"filecount\", acceptedFiles.length);\r\n                        isFileEdited = transactionStatus.YES;\r\n                    }else{\r\n                        institutionFile[\"sfilename\"] = selectedRecord.sfilename;\r\n                        institutionFile[\"sfiledesc\"] = selectedRecord.sfiledesc ? selectedRecord.sfiledesc.trim() : \"\";\r\n                        institutionFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                        institutionFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                        institutionFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                        institutionFileArray.push(institutionFile);\r\n                    }   \r\n                }else{\r\n                    institutionFile[\"sfilename\"] = selectedRecord.slinkfilename.trim();\r\n                    institutionFile[\"sfiledesc\"] = selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\";\r\n                    institutionFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n                    institutionFile[\"ssystemfilename\"] = \"\";\r\n                    institutionFile[\"nfilesize\"] = 0;\r\n                    institutionFileArray.push(institutionFile);\r\n                }\r\n                formData.append(\"isFileEdited\", isFileEdited);\r\n                formData.append(\"institutionfile\", JSON.stringify(institutionFileArray));\r\n                let selectedId = null;\r\n                let postParam = undefined;\r\n                if ( this.props.Login.operation === \"update\"){\r\n                    postParam =  { inputListName : \"Institution\", selectedObject : \"selectedInstitution\", primaryKeyField : \"ninstitutioncode\" };\r\n                    selectedId = selectedRecord[\"ninstitutionfilecode\"];               \r\n                }\r\n                const inputParam = {\r\n                    inputData: { userinfo: this.props.Login.userInfo},\r\n                    formData: formData,\r\n                    isFileupload: true,\r\n                    operation: this.props.Login.operation,\r\n                    classUrl: \"institution\",\r\n                    saveType, formRef, methodUrl: \"InstitutionFile\",postParam\r\n                }\r\n                \r\n                if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n                    const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openChildModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.screenName }),\r\n                        operation: this.props.Login.operation\r\n                    }\r\n                }\r\n                    this.props.updateStore(updateInfo);\r\n                }else {\r\n                    this.props.crudMaster(inputParam, this.props.Login.masterData, \"openChildModal\");\r\n                }\r\n\r\n        }\r\n\r\n        \r\n        \r\n    }\r\n    \r\n    ConfirmDelete = (deleteId) => {\r\n        this.confirmMessage.confirm(\"deleteMessage\", this.props.intl.formatMessage({ id: \"IDS_DELETE\" }), this.props.intl.formatMessage({ id: \"IDS_DEFAULTCONFIRMMSG\" }),\r\n            this.props.intl.formatMessage({ id: \"IDS_OK\" }), this.props.intl.formatMessage({ id: \"IDS_CANCEL\" }),\r\n            () => this.DeleteInstitution(\"delete\",deleteId));\r\n    }\r\n\r\n    DeleteInstitutionFile = (deleteTestParam) => {\r\n        let inputData = [];\r\n        let ncontrolcode =deleteTestParam.ncontrolCode;\r\n        let operation =deleteTestParam.operation;\r\n        inputData[\"institutionfile\"] = deleteTestParam.selectedRecord;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"institutionfile\", selectedObject: \"selectedInstitutionFile\",\r\n            primaryKeyField: \"ninstitutionfilecode\",\r\n            primaryKeyValue: deleteTestParam.selectedRecord.ninstitutionfilecode,\r\n            fetchUrl: \"institution/getInstitutionFile\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"InstitutionFile\", \r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openChildModal: true, screenName: \"Institution File\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n        }\r\n    }\r\n\r\n    \r\n    DeleteInstitutionSite = (deleteParam) => {\r\n        let inputData = [];\r\n        let ncontrolcode =deleteParam.ncontrolCode;\r\n        let operation =deleteParam.operation;\r\n        delete (deleteParam.selectedRecord.expanded);\r\n        inputData[\"institutionsite\"] = deleteParam.selectedRecord;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"institutionsite\", selectedObject: \"selectedInstitutionSite\",\r\n            primaryKeyField: \"ninstitutionsitecode\",\r\n            primaryKeyValue: deleteParam.selectedRecord.ninstitutionsitecode,\r\n            fetchUrl: \"institution/getInstitutionSite\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"InstitutionSite\", \r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openChildModal: true, screenName: \"Institution Site\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openChildModal\");\r\n        }\r\n    }\r\n\r\n    DeleteInstitution= (operation, ncontrolCode) => {\r\n        let inputData = [];\r\n\r\n        inputData[\"institution\"] = this.props.Login.masterData.selectedInstitution;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        const postParam = {\r\n            inputListName: \"institution\", selectedObject: \"selectedInstitution\",\r\n            primaryKeyField: \"ninstitutioncode\",\r\n            primaryKeyValue: this.props.Login.masterData.selectedInstitution.ninstitutioncode,\r\n            fetchUrl: \"institution/getSelectedInstitutionDetail\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo },\r\n        }\r\n        const inputParam = {\r\n            methodUrl: \"Institution\", \r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            inputData: inputData,\r\n            operation: \"delete\",\r\n            postParam\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData },\r\n                    openModal: true, screenName: \"Institution\", operation\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    viewInstitutionFile = (filedata) => {\r\n        const inputParam = {\r\n            inputData: {\r\n                institutionfile: filedata,\r\n                userinfo: this.props.Login.userInfo\r\n            },\r\n            classUrl: \"institution\",\r\n            operation: \"view\",\r\n            methodUrl: \"InstitutionFile\",\r\n            screenName: \"IDS_INSTITUTION\"\r\n        }\r\n        this.props.viewAttachment(inputParam);\r\n    }\r\n\r\n    onDropInstitutionFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(\r\n          selectedRecord[fieldName],\r\n          attachedFiles,\r\n          maxSize\r\n        );\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    };\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(\r\n          selectedRecord[fieldName],\r\n          file\r\n        );\r\n    \r\n        this.setState({\r\n          selectedRecord,\r\n          actionType: \"delete\",\r\n        });\r\n    };\r\n\r\n    validateEsign = () => {\r\n        let modalName;\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        if(this.props.Login.screenName === \"Institution\"){\r\n            modalName=\"openModal\";\r\n          }\r\n          else{\r\n            modalName=\"openChildModal\";\r\n          }\r\n          this.props.validateEsignCredential(inputParam, modalName);\r\n    }\r\n\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FilterInstitutionCategory) {\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_INSTITUTIONCATEGORY\",\r\n                    \"value\": this.props.Login.masterData.defaultInstitutionCategory ? this.props.Login.masterData.defaultInstitutionCategory.sinstitutioncatname : \"-\"\r\n                }\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            selectedRecord =  this.props.Login.selectedRecord \r\n            this.setState({ selectedRecord});\r\n        }\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({  userRoleControlRights, controlMap, data: this.props.Login.masterData});\r\n            }\r\n            else {\r\n\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                this.setState({ data: this.props.Login.masterData, dataState,selectedRecord :this.props.Login.selectedRecord  });\r\n            }\r\n\r\n            \r\n\r\n       ///     let FilterInstitutionCategory = this.state.FilterInstitutionCategory || {};\r\n\r\n         //   if (this.props.Login.masterData.FilterInstitutionCategory !== previousProps.Login.masterData.FilterInstitutionCategory) {\r\n                const InstitutionCategoryMap = constructOptionList(this.props.Login.masterData.FilterInstitutionCategory || [], \"ninstitutioncatcode\", \"sinstitutioncatname\", 'ninstitutioncatcode', 'descending', false);\r\n                const    FilterInstitutionCategory = InstitutionCategoryMap.get(\"OptionList\");               \r\n          //  } \r\n         \r\n            const filterData = this.generateBreadCrumData();\r\n         \r\n            this.setState({ FilterInstitutionCategory,filterData});\r\n\r\n            if(this.props.Login.comboSet){\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { comboSet: false }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        }\r\n       \r\n        \r\n        \r\n        // if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n          \r\n        //     this.setState({ filterData });\r\n        // }\r\n    }\r\n    \r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService,crudMaster,validateEsignCredential,updateStore,getInstitutionDetail,getInstitutionCombo,getInstitutionSiteData,addInstitutionFile,changeInstitutionCategoryFilter,viewAttachment,filterColumnData,getCitComboServices,getDistComboServices\r\n})(injectIntl(Institution));\r\n"]},"metadata":{},"sourceType":"module"}