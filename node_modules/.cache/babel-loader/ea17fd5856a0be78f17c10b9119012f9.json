{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import{DEFAULT_RETURN}from'./LoginTypes';import{sortData}from'../components/CommonScript';import{initRequest}from'./LoginAction';import{toast}from'react-toastify';import{intl}from'../components/App';export function sendRequest(obj){return function(dispatch){dispatch(initRequest(true));var newMap=_objectSpread({},obj.inputData);var masterData=obj.masterData;var selectedRecord=obj.selectedRecord;var query=obj.sqlquery;rsapi.post(obj.url,_objectSpread(_objectSpread({},newMap),{},{userinfo:obj.userinfo,query:query,whereCondition:newMap.whereCondition})).then(function(response){masterData['consoleData']=response.data;newMap['whereCondition']=obj.inputData.whereCondition;// selectedRecord['filterNew']\ndispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread(_objectSpread({},masterData),{},{selectedRecord:selectedRecord,newMap:newMap}),loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getQualisForms(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=obj.selectedRecord;var constructApiData=obj.constructApiData;var masterData=obj.masterData;rsapi.post('/apiservice/getQualisForms',{'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);masterData['SelectedApi']=selectedRecord['napiservicecode'];if(selectedRecord['napiservicecode'].value<3){constructApiData=obj.constructApiData;}else{constructApiData=[];}masterData['consoleData']=[];selectedRecord['filterNew']=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord,userinfo:userinfo,//constructApiData:[]\nconstructApiData:constructApiData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getQualisFormsFields(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=_objectSpread(_objectSpread({},obj.selectedRecord),{},{'filterNew':[]});var masterData=_objectSpread({},obj.masterData);rsapi.post('/apiservice/getQualisFormFields',{'userinfo':userinfo,'nformcode':selectedRecord.nformcode.value}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),{},{'lstquerybilderColumns':response.data,'SelectedForm':_objectSpread({},selectedRecord['nformcode']),'consoleData':[]});selectedRecord['filterNew']=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getCustomQuery(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=obj.selectedRecord;var constructApiData=obj.constructApiData;var masterData=obj.masterData;rsapi.post('/apiservice/getCustomQuery',{'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value}).then(function(response){masterData=_objectSpread(_objectSpread({},masterData),response.data);masterData['SelectedApi']=selectedRecord['napiservicecode'];masterData['SelectedSQLQuery']=response.data.SelectedSQLQuery;masterData['Columns']=response.data.Columns;masterData['Parameters']=response.data.Parameters;constructApiData=obj.constructApiData;masterData['consoleData']=[];selectedRecord['filterNew']=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord,userinfo:userinfo,constructApiData:constructApiData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}export function getCustomQueryName(obj){return function(dispatch){dispatch(initRequest(true));var userinfo=obj.userinfo;var selectedRecord=obj.selectedRecord;var masterData=_objectSpread({},obj.masterData);rsapi.post('/apiservice/getCustomQueryName',{'userinfo':userinfo,'nsqlquerycode':selectedRecord.nsqlquerycode.value}).then(function(response){masterData=_objectSpread({},masterData);masterData['SelectedSQLQuery']=response.data.SelectedSQLQuery;masterData['Columns']=response.data.Columns;masterData['consoleData']=[];selectedRecord['filterNew']=[];dispatch({type:DEFAULT_RETURN,payload:{masterData:_objectSpread({},masterData),loading:false,selectedRecord:selectedRecord}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});});};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/APIServiceAction.js"],"names":["rsapi","DEFAULT_RETURN","sortData","initRequest","toast","intl","sendRequest","obj","dispatch","newMap","inputData","masterData","selectedRecord","query","sqlquery","post","url","userinfo","whereCondition","then","response","data","type","payload","loading","catch","error","getQualisForms","constructApiData","napiservicecode","value","getQualisFormsFields","nformcode","getCustomQuery","SelectedSQLQuery","Columns","Parameters","getCustomQueryName","nsqlquerycode"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { sortData } from '../components/CommonScript';\r\nimport { initRequest } from './LoginAction';\r\nimport { toast } from 'react-toastify';\r\nimport { intl } from '../components/App';\r\n\r\n\r\nexport function sendRequest(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        const newMap={...obj.inputData}\r\n        const masterData=obj.masterData\r\n        const selectedRecord=obj.selectedRecord\r\n        const query = obj.sqlquery\r\n        rsapi.post(obj.url, {...newMap , userinfo: obj.userinfo ,query , whereCondition: newMap.whereCondition} )\r\n            .then(response => {\r\n                masterData['consoleData']=response.data\r\n                newMap['whereCondition']=obj.inputData.whereCondition\r\n                // selectedRecord['filterNew']\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData,selectedRecord,newMap}, loading: false\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN,payload: { loading: false }})\r\n            })\r\n    }\r\n}\r\n\r\nexport function getQualisForms(obj) {\r\n    return function (dispatch) {     \r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       const selectedRecord=obj.selectedRecord\r\n       let constructApiData = obj.constructApiData\r\n       let masterData=obj.masterData\r\n        rsapi.post('/apiservice/getQualisForms', {'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value} )\r\n            .then(response => {\r\n                masterData={...masterData,\r\n                    ...response.data,\r\n                    // lstquerybilderColumns: response.data.lstquerybilderColumns.map((item, index) => {\r\n                    //         return { label: item.scolumndisplayname, value: index, item: { ...item } }})\r\n                }\r\n                masterData['SelectedApi']=selectedRecord['napiservicecode']\r\n                if(selectedRecord['napiservicecode'].value < 3){   \r\n                    constructApiData = obj.constructApiData\r\n                }\r\n                else{\r\n                    constructApiData = []\r\n                }\r\n                \r\n                masterData['consoleData']=[]\r\n                selectedRecord['filterNew']=[]\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData},\r\n                        loading: false,\r\n                        selectedRecord,\r\n                        userinfo,\r\n                        //constructApiData:[]\r\n                        constructApiData\r\n                       \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getQualisFormsFields(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       let selectedRecord={...obj.selectedRecord,'filterNew':[]}\r\n       let masterData={...obj.masterData}\r\n        rsapi.post('/apiservice/getQualisFormFields', {'userinfo':userinfo,'nformcode':selectedRecord.nformcode.value} )\r\n            .then(response => {\r\n                masterData={...masterData,'lstquerybilderColumns':response.data,\r\n                'SelectedForm':{...selectedRecord['nformcode']},'consoleData':[]}\r\n                selectedRecord['filterNew']=[]\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData} ,\r\n                        loading: false,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\nexport function getCustomQuery(obj) {\r\n    return function (dispatch) {     \r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       const selectedRecord=obj.selectedRecord\r\n       let constructApiData = obj.constructApiData\r\n       let masterData=obj.masterData\r\n        rsapi.post('/apiservice/getCustomQuery', {'userinfo':userinfo,'napiservicecode':selectedRecord.napiservicecode.value} )\r\n            .then(response => {\r\n                masterData={...masterData,\r\n                    ...response.data,\r\n                }\r\n                masterData['SelectedApi']=selectedRecord['napiservicecode']\r\n                masterData['SelectedSQLQuery'] = response.data.SelectedSQLQuery\r\n                masterData['Columns']=response.data.Columns\r\n                masterData['Parameters']=response.data.Parameters\r\n                constructApiData = obj.constructApiData\r\n                masterData['consoleData']=[]\r\n                selectedRecord['filterNew']=[]\r\n                       \r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData},\r\n                        loading: false,\r\n                        selectedRecord,\r\n                        userinfo,\r\n                        constructApiData\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\nexport function getCustomQueryName(obj) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n       const userinfo=obj.userinfo\r\n       let selectedRecord=obj.selectedRecord \r\n       let masterData={...obj.masterData}\r\n        rsapi.post('/apiservice/getCustomQueryName', {'userinfo':userinfo,'nsqlquerycode':selectedRecord.nsqlquerycode.value} )\r\n            .then(response => {\r\n                masterData={...masterData}\r\n                masterData['SelectedSQLQuery'] = response.data.SelectedSQLQuery\r\n                masterData['Columns']=response.data.Columns\r\n                masterData['consoleData']=[]\r\n                selectedRecord['filterNew']=[]\r\n                dispatch({\r\n                    type: DEFAULT_RETURN, payload: {\r\n                        masterData:{...masterData} ,\r\n                        loading: false,\r\n                        selectedRecord\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}