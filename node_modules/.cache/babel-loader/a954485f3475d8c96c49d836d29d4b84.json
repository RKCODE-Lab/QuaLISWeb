{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\project\\\\ProjectMasterClosure.jsx\";\nimport React from 'react';\nimport { Row, Col, FormGroup } from 'react-bootstrap';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport { injectIntl } from 'react-intl';\nimport DropZone from '../../components/dropzone/dropzone.component';\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\nimport { transactionStatus } from '../../components/Enumeration';\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\n\nconst ProjectMasterClosure = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: props.name,\n    label: props.label,\n    isMandatory: false,\n    maxFiles: props.maxFiles,\n    minSize: 0,\n    maxSize: props.maxSize,\n    onDrop: event => props.onDrop(event, \"sfilename\", props.maxFiles),\n    actionType: props.actionType,\n    deleteAttachment: props.deleteAttachment,\n    multiple: props.multiple,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: 0,\n    fileSizeName: \"nfilesize\",\n    fileName: \"sfilename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(Col, {\n    md: props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(DateTimePicker, {\n    name: \"dprojectclosuredate\",\n    label: props.intl.formatMessage({\n      id: \"IDS_CLOSUREDATE\"\n    }),\n    className: \"form-control\",\n    placeholderText: props.intl.formatMessage({\n      id: \"IDS_SELECTDATE\"\n    }),\n    selected: props.selectedRecord[\"dprojectclosuredate\"] ? props.selectedRecord[\"dprojectclosuredate\"] : new Date() //    dateFormat={props.userInfo.ssitedate}\n    ,\n    dateFormat: props.userInfo ? props.userInfo.ssitedate || [] : [],\n    timeInputLabel: props.intl.formatMessage({\n      id: \"IDS_TIME\"\n    }),\n    showTimeInput: false,\n    isClearable: false,\n    isMandatory: true,\n    required: true,\n    value: props.selectedRecord[\"dprojectclosuredate\"] ? props.selectedRecord[\"dprojectclosuredate\"] : new Date(),\n    maxDate: props.currentTime,\n    maxTime: props.currentTime,\n    onChange: date => props.handleDateChange(\"dprojectclosuredate\", date),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  })), props.userInfo.istimezoneshow === transactionStatus.YES && /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FormSelectSearch, {\n    name: \"ntzprojectclosuredate\",\n    formLabel: props.intl.formatMessage({\n      id: \"IDS_TIMEZONE\"\n    }),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_SELECTRECORD\"\n    }),\n    options: props.TimeZoneList // optionId=\"ntimezonecode\"\n    // optionValue=\"stimezoneid\"\n    ,\n    value: props.selectedRecord[\"ntzprojectclosuredate\"],\n    defaultValue: props.selectedRecord[\"ntzprojectclosuredate\"],\n    isMandatory: false,\n    isMulti: false,\n    isSearchable: true // isClearable={false}                               \n    ,\n    isDisabled: false,\n    closeMenuOnSelect: true,\n    alphabeticalSort: true,\n    onChange: event => props.onComboChange(event, 'ntzprojectclosuredate', 1),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    name: \"sclosureremarks\",\n    label: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    onChange: event => props.onInputOnChange(event, 1),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_REMARKS\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sclosureremarks\"] : \"\",\n    rows: \"2\",\n    required: false,\n    maxLength: 500,\n    isMandatory: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 25\n    }\n  })))));\n};\n\nexport default injectIntl(ProjectMasterClosure);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/project/ProjectMasterClosure.jsx"],"names":["React","Row","Col","FormGroup","FormTextarea","injectIntl","DropZone","DateTimePicker","transactionStatus","FormSelectSearch","ProjectMasterClosure","props","name","label","maxFiles","maxSize","event","onDrop","actionType","deleteAttachment","multiple","selectedRecord","userInfo","istimezoneshow","YES","intl","formatMessage","id","Date","ssitedate","currentTime","date","handleDateChange","TimeZoneList","onComboChange","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Row, Col, FormGroup } from 'react-bootstrap';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport DateTimePicker from '../../components/date-time-picker/date-time-picker.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\n\r\n\r\nconst ProjectMasterClosure = (props) => {\r\n    return (\r\n        <Row>\r\n            <Col md={12}>\r\n\r\n                <Row>\r\n\r\n                    <Col md={12}>\r\n                        <FormGroup>\r\n                            {/* <FormLabel><FormattedMessage id=\"IDS_FILENAME\" message=\"File Name\" /></FormLabel> */}\r\n                            {/* {props.FileImagePath === null ? \"-\" :\r\n                                <a href={props.fileImgPath} download>\r\n                                    <Image src={props.fileImgPath}\r\n                                        width={100} height={75}\r\n                                        rounded\r\n                                        //onClick={() => window.open(signImgPath, '_blank')}\r\n                                        //onClick={()=>this.downloadImage(this.props.Login.masterData.SignImagePath)}\r\n                                        title={props.sfileimgname} />\r\n                                </a>\r\n                            } */}\r\n                            <DropZone\r\n                                name={props.name}\r\n                                label={props.label}\r\n                                isMandatory={false}\r\n                                maxFiles={props.maxFiles}\r\n                                minSize={0}\r\n                                maxSize={props.maxSize}\r\n                                onDrop={(event) => props.onDrop(event, \"sfilename\", props.maxFiles)}\r\n                                actionType={props.actionType}\r\n                                deleteAttachment={props.deleteAttachment}\r\n                                multiple={props.multiple}\r\n                                editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                                attachmentTypeCode={0}\r\n                                fileSizeName=\"nfilesize\"\r\n                                fileName=\"sfilename\"\r\n\r\n                            />\r\n                        </FormGroup>\r\n                    </Col>\r\n\r\n                    <Col md={props.userInfo.istimezoneshow === transactionStatus.YES ? 6 : 12}>\r\n            <DateTimePicker\r\n                            name={\"dprojectclosuredate\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_CLOSUREDATE\" })}\r\n                            className='form-control'\r\n                            placeholderText={props.intl.formatMessage({ id: \"IDS_SELECTDATE\" })}\r\n                            selected={props.selectedRecord[\"dprojectclosuredate\"] ?props.selectedRecord[\"dprojectclosuredate\"] :new Date()}\r\n                            //    dateFormat={props.userInfo.ssitedate}\r\n                            dateFormat={props.userInfo ? props.userInfo.ssitedate || [] : []}\r\n                            timeInputLabel={props.intl.formatMessage({ id: \"IDS_TIME\" })}\r\n                            showTimeInput={false}\r\n                            isClearable={false}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            value={props.selectedRecord[\"dprojectclosuredate\"]? props.selectedRecord[\"dprojectclosuredate\"] : new Date()}\r\n                            maxDate={props.currentTime}\r\n                            maxTime={props.currentTime}\r\n                            onChange={date => props.handleDateChange(\"dprojectclosuredate\", date)}/>\r\n            </Col>\r\n\r\n\r\n            {props.userInfo.istimezoneshow  === transactionStatus.YES &&\r\n                <Col md={6}>\r\n                    <FormSelectSearch\r\n                        name={\"ntzprojectclosuredate\"}\r\n                        formLabel={props.intl.formatMessage({ id: \"IDS_TIMEZONE\" })}\r\n                        placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        options={props.TimeZoneList}\r\n                        // optionId=\"ntimezonecode\"\r\n                        // optionValue=\"stimezoneid\"\r\n                        value={props.selectedRecord[\"ntzprojectclosuredate\"]}\r\n                        defaultValue={props.selectedRecord[\"ntzprojectclosuredate\"]}\r\n                        isMandatory={false}\r\n                        isMulti={false}\r\n                        isSearchable={true}\r\n                        // isClearable={false}                               \r\n                        isDisabled={false}\r\n                        closeMenuOnSelect={true}\r\n                        alphabeticalSort={true}\r\n                        onChange={(event) => props.onComboChange(event, 'ntzprojectclosuredate', 1)}\r\n                    />\r\n\r\n                </Col>\r\n            }  \r\n\r\n                    <Col md={12}>\r\n                        <FormTextarea\r\n                            name={\"sclosureremarks\"}\r\n                            label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                            onChange={(event) => props.onInputOnChange(event, 1)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sclosureremarks\"] : \"\"}\r\n                            rows=\"2\"\r\n                            required={false}\r\n                            maxLength={500}\r\n                            isMandatory={false}\r\n                        >\r\n                        </FormTextarea>\r\n                    </Col>\r\n\r\n                </Row>\r\n            </Col>\r\n\r\n\r\n        </Row>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\nexport default injectIntl(ProjectMasterClosure);"]},"metadata":{},"sourceType":"module"}