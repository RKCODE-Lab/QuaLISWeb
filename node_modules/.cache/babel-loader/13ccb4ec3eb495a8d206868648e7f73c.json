{"ast":null,"code":"import _objectSpread from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _classCallCheck from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\SOURCE-512\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{connect}from'react-redux';import{injectIntl}from'react-intl';import DataGrid from'../../components/data-grid/data-grid.component';import SlideOutModal from'../../components/slide-out-modal/SlideOutModal';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormInput from'../../components/form-input/form-input.component';import{callService,crudMaster,openFTPConfigModal,fetchFTPConfigByID,updateStore,validateEsignCredential}from'../../actions';import{toast}from'react-toastify';import{Row,Col}from'react-bootstrap';import{process}from'@progress/kendo-data-query';import{ListWrapper}from'../../components/client-group.styles';import{showEsign,getControlMap}from'../../components/CommonScript';import{DEFAULT_RETURN}from'../../actions/LoginTypes';import Esign from'../audittrail/Esign';import{transactionStatus}from'../../components/Enumeration';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var FTPConfig=/*#__PURE__*/function(_React$Component){_inherits(FTPConfig,_React$Component);var _super=_createSuper(FTPConfig);function FTPConfig(props){var _this;_classCallCheck(this,FTPConfig);_this=_super.call(this,props);_this.dataStateChange=function(event){_this.setState({dataResult:process(_this.state.data,event.dataState),dataState:event.dataState});};_this.reloadData=function(){var inputParam={inputData:{userinfo:_this.props.Login.userInfo},methodUrl:_this.props.Login.inputParam.methodUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:'',classUrl:_this.props.Login.inputParam.classUrl,userInfo:_this.props.Login.userInfo};_this.props.callService(inputParam);};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;var selectedId=_this.props.Login.selectedId;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"delete\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;selectedRecord={};selectedId=null;}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,optionsChecklistComponent:[],optionsQBCategory:[],selectedId:selectedId}};_this.props.updateStore(updateInfo);};_this.onSaveClick=function(saveType,formRef){var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var dataState=undefined;var selectedId=null;if(_this.props.Login.operation===\"update\"){// edit\nselectedId=_this.state.selectedRecord.nftpno;dataState=_this.state.dataState;inputData[\"ftpconfig\"]={\"nftpno\":_this.state.selectedRecord.nftpno,\"susername\":_this.state.selectedRecord.susername,\"spassword\":_this.state.selectedRecord.spassword,\"nsitecode\":_this.props.Login.userInfo.nmastersitecode,//this.state.selectedRecord.nsitecode,\n\"shost\":_this.state.selectedRecord.shost,\"nportno\":_this.state.selectedRecord.nportno,\"nsslrequired\":_this.state.selectedRecord.nsslrequired,\"nchecksumrequired\":_this.state.selectedRecord.nchecksumrequired,\"ndefaultstatus\":_this.state.selectedRecord.ndefaultstatus,\"sphysicalpath\":_this.state.selectedRecord.sphysicalpath,\"nftptypecode\":_this.state.selectedRecord.nftptypecode.value//\"nregionsitecode\":this.state.selectedRecord.nsitecode.value,\n};}else{//add               \ninputData[\"ftpconfig\"]={\"susername\":_this.state.selectedRecord.susername,\"spassword\":_this.state.selectedRecord.spassword,\"nsitecode\":_this.props.Login.userInfo.nmastersitecode,//this.state.selectedRecord.nsitecode,\n\"shost\":_this.state.selectedRecord.shost,\"nportno\":_this.state.selectedRecord.nportno,\"nsslrequired\":_this.state.selectedRecord.nsslrequired,\"nchecksumrequired\":_this.state.selectedRecord.nchecksumrequired,\"ndefaultstatus\":_this.state.selectedRecord.ndefaultstatus,\"sphysicalpath\":_this.state.selectedRecord.sphysicalpath,\"nftptypecode\":_this.state.selectedRecord.nftptypecode.value// \"nregionsitecode\":this.state.selectedRecord.nsitecode.value,\n};}//   inputData[\"ftpconfig\"][\"sphysicalpath\"] =this.state.selectedRecord.sphysicalpath+\"\\\\\";\nvar inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:\"\",inputData:inputData,operation:_this.props.Login.operation,formRef:formRef,saveType:saveType,dataState:dataState,selectedId:selectedId,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolcode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.deleteRecord=function(deleteParam){var inputParam={methodUrl:_this.props.Login.inputParam.methodUrl,classUrl:_this.props.Login.inputParam.classUrl,displayName:_this.props.Login.inputParam.displayName?_this.props.Login.inputParam.displayName:\"\",inputData:{\"ftpconfig\":deleteParam.selectedRecord,\"userinfo\":_this.props.Login.userInfo},operation:deleteParam.operation,dataState:_this.state.dataState,selectedRecord:_objectSpread({},_this.state.selectedRecord)};var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,deleteParam.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},operation:deleteParam.operation,openModal:true,screenName:_this.props.Login.inputParam.displayName,optionsQBCategory:_this.props.Login.optionsQBCategory,optionsChecklistComponent:_this.props.Login.optionsChecklistComponent}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.onNumericInputOnChange=function(value,name){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[name]=value;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};if(fieldName==='nftptypecode'){selectedRecord[fieldName]=comboData;}else{if(comboData){selectedRecord['siteValue']=comboData;//selectedRecord[fieldName] = comboData.value;\nselectedRecord[fieldName]=comboData;}else{selectedRecord['siteValue']=[];selectedRecord[fieldName]=\"\";}}_this.setState({selectedRecord:selectedRecord});};_this.formRef=React.createRef();_this.extractedColumnList=[];var _dataState={skip:0,take:_this.props.Login.settings?parseInt(_this.props.Login.settings[14]):5};_this.state={data:[],masterStatus:\"\",error:\"\",selectedRecord:{},dataResult:[],dataState:_dataState,userRoleControlRights:[],controlMap:new Map()};return _this;}_createClass(FTPConfig,[{key:\"render\",value:function render(){var _this2=this;var primaryKeyField=\"\";this.extractedColumnList=[// {\"idsName\":\"IDS_SITE\",\"dataField\":\"ssitename\",\"width\":\"200px\"},\n{\"idsName\":\"IDS_FTPTYPE\",\"dataField\":\"sftptypename\",\"width\":\"200px\"},{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"width\":\"200px\"},{\"idsName\":\"IDS_HOST\",\"dataField\":\"shost\",\"width\":\"200px\"},{\"idsName\":\"IDS_PORTNO\",\"dataField\":\"nportno\",\"width\":\"200px\"},{\"idsName\":\"IDS_DEFAULTSTATUS\",\"dataField\":\"sdefaultstatus\",\"width\":\"200px\"}];primaryKeyField=\"nftpno\";var addID=this.props.Login.inputParam&&this.state.controlMap.has(\"AddFTPConfig\")&&this.state.controlMap.get('AddFTPConfig').ncontrolcode;var editID=this.props.Login.inputParam&&this.state.controlMap.has(\"EditFTPConfig\")&&this.state.controlMap.get('EditFTPConfig').ncontrolcode;var editParam={screenName:this.props.Login.inputParam?this.props.Login.inputParam.displayName:'',operation:\"update\",primaryKeyField:primaryKeyField,masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,ncontrolCode:editID,inputparam:this.props.Login.inputparam};var deleteParam={screenName:this.props.Login.inputParam?this.props.Login.inputParam.displayName:'',methodUrl:\"UserMultiRole\",operation:\"delete\"};var mandatoryFields=[{\"idsName\":\"IDS_FTPTYPE\",\"dataField\":\"nftptypecode\",\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"combo\"},// {\"idsName\": \"IDS_SITE\", \"dataField\": \"nsitecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\n{\"idsName\":\"IDS_USERNAME\",\"dataField\":\"susername\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PASSWORD\",\"dataField\":\"spassword\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_HOST\",\"dataField\":\"shost\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PORTNO\",\"dataField\":\"nportno\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_PHYSICALPATH\",\"dataField\":\"sphysicalpath\",\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-list-content\"},this.state.data?/*#__PURE__*/React.createElement(DataGrid,{primaryKeyField:primaryKeyField,data:this.state.data,dataResult:this.state.dataResult,dataState:this.state.dataState,dataStateChange:this.dataStateChange,extractedColumnList:this.extractedColumnList,fetchRecord:this.props.fetchFTPConfigByID,deleteRecord:this.deleteRecord,reloadData:this.reloadData,pageable:{buttonCount:4,pageSizes:true},controlMap:this.state.controlMap,userRoleControlRights:this.state.userRoleControlRights,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo,isActionRequired:true,isToolBarRequired:true,editParam:editParam,deleteParam:deleteParam,scrollable:\"scrollable\",gridHeight:\"600px\",selectedId:this.props.Login.selectedId,addRecord:function addRecord(){return _this2.props.openFTPConfigModal(_this2.props.Login.userInfo,addID);}}):\"\"))),this.props.Login.openModal?/*#__PURE__*/React.createElement(SlideOutModal,{onSaveClick:this.onSaveClick,operation:this.props.Login.operation,screenName:\"IDS_FTPCONFIG\",closeModal:this.closeModal,show:this.props.Login.openModal,inputParam:this.props.Login.inputParam,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nsitecode\",formLabel:this.props.intl.formatMessage({id:\"IDS_FTPTYPE\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_FTPTYPE\"}),value:this.state.selectedRecord.nftptypecode?this.state.selectedRecord.nftptypecode:\"\",options:this.props.Login.ftpTypeList?this.props.Login.ftpTypeList:[]// optionId=\"nsitecode\"\n// optionValue=\"ssitename\"\n,isMandatory:true,isMulti:false,isDisabled:false,isSearchable:false,isClearable:false,as:\"select\",onChange:function onChange(event){return _this2.onComboChange(event,\"nftptypecode\");}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_USERNAME\"}),name:\"susername\",type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_USERNAME\"}),value:this.state.selectedRecord?this.state.selectedRecord[\"susername\"]:\"\",isMandatory:true,required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),name:\"spassword\",type:\"password\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_PASSWORD\"}),isMandatory:true,required:true,value:this.state.selectedRecord?this.state.selectedRecord[\"spassword\"]:\"\",maxLength:100}),/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_HOST\"}),name:\"shost\",type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_HOST\"}),value:this.state.selectedRecord?this.state.selectedRecord[\"shost\"]:\"\",isMandatory:true,required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormNumericInput,{label:this.props.intl.formatMessage({id:\"IDS_PORTNO\"}),name:\"nportno\",type:\"number\",onChange:function onChange(event){return _this2.onNumericInputOnChange(event,\"nportno\");},placeholder:this.props.intl.formatMessage({id:\"IDS_PORTNO\"}),isMandatory:true,required:true,noStyle:true,strict:true,className:\"form-control\"// max={10000000}\n,errors:\"Please provide a valid number.\"// min={0}\n,maxLength:10//maxLength={100}\n,value:this.state.selectedRecord[\"nportno\"]}),/*#__PURE__*/React.createElement(FormInput,{label:this.props.intl.formatMessage({id:\"IDS_PHYSICALPATH\"}),name:\"sphysicalpath\",type:\"text\",onChange:function onChange(event){return _this2.onInputOnChange(event);},placeholder:this.props.intl.formatMessage({id:\"IDS_PHYSICALPATH\"}),value:this.state.selectedRecord?this.state.selectedRecord[\"sphysicalpath\"]:\"\",isMandatory:true,required:false,maxLength:100})),/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"ndefaultstatus\",type:\"switch\",label:this.props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_DEFAULTSTATUS\"}),defaultValue:this.state.selectedRecord?this.state.selectedRecord[\"ndefaultstatus\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:this.state.selectedRecord?this.state.selectedRecord[\"ndefaultstatus\"]===transactionStatus.YES?true:false:false,onChange:function onChange(event){return _this2.onInputOnChange(event);}})),this.state.selectedRecord.nftptypecode&&this.state.selectedRecord.nftptypecode.value===1?/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nsslrequired\",type:\"switch\",label:this.props.intl.formatMessage({id:\"IDS_SSL\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_SSL\"}),defaultValue:this.state.selectedRecord?this.state.selectedRecord[\"nsslrequired\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:this.state.selectedRecord?this.state.selectedRecord[\"nsslrequired\"]===transactionStatus.YES?true:false:false,onChange:function onChange(event){return _this2.onInputOnChange(event);}})):\"\",/*#__PURE__*/React.createElement(Col,{md:6},/*#__PURE__*/React.createElement(CustomSwitch,{name:\"nchecksumrequired\",type:\"switch\",label:this.props.intl.formatMessage({id:\"IDS_CHECKSUM\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_CHECKSUM\"}),defaultValue:this.state.selectedRecord?this.state.selectedRecord[\"nchecksumrequired\"]===transactionStatus.YES?true:false:false,isMandatory:false,required:false,checked:this.state.selectedRecord?this.state.selectedRecord[\"nchecksumrequired\"]===transactionStatus.YES?true:false:false,onChange:function onChange(event){return _this2.onInputOnChange(event);}})))}):\"\");}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.masterData!==previousProps.Login.masterData){if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap,data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,this.state.dataState)});}else{var dataState=this.state.dataState;if(this.props.Login.dataState===undefined){dataState={skip:0,take:this.props.Login.settings?parseInt(this.props.Login.settings[14]):5};}this.setState({data:this.props.Login.masterData,dataResult:process(this.props.Login.masterData,dataState),dataState:dataState});}}if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}return null;}}]);return FTPConfig;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,openFTPConfigModal:openFTPConfigModal,fetchFTPConfigByID:fetchFTPConfigByID,updateStore:updateStore,validateEsignCredential:validateEsignCredential})(injectIntl(FTPConfig));","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/configurationmaster/FTPConfig.jsx"],"names":["React","connect","injectIntl","DataGrid","SlideOutModal","CustomSwitch","FormInput","callService","crudMaster","openFTPConfigModal","fetchFTPConfigByID","updateStore","validateEsignCredential","toast","Row","Col","process","ListWrapper","showEsign","getControlMap","DEFAULT_RETURN","Esign","transactionStatus","FormNumericInput","FormSelectSearch","mapStateToProps","state","Login","FTPConfig","props","dataStateChange","event","setState","dataResult","data","dataState","reloadData","inputParam","inputData","userinfo","userInfo","methodUrl","displayName","classUrl","closeModal","loadEsign","openModal","selectedRecord","selectedId","operation","updateInfo","typeName","optionsChecklistComponent","optionsQBCategory","onSaveClick","saveType","formRef","undefined","nftpno","susername","spassword","nmastersitecode","shost","nportno","nsslrequired","nchecksumrequired","ndefaultstatus","sphysicalpath","nftptypecode","value","masterData","userRoleControlRights","nformcode","ncontrolcode","screenData","deleteRecord","deleteParam","ncontrolCode","screenName","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","onNumericInputOnChange","name","onInputOnChange","target","type","checked","YES","NO","onComboChange","comboData","fieldName","createRef","extractedColumnList","skip","take","settings","parseInt","masterStatus","error","controlMap","Map","primaryKeyField","addID","has","get","editID","editParam","inputparam","mandatoryFields","buttonCount","pageSizes","intl","formatMessage","id","ftpTypeList","previousProps","Object","values","map","item","push","modalName","warn","Component"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport DataGrid from '../../components/data-grid/data-grid.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport { callService, crudMaster, openFTPConfigModal, fetchFTPConfigByID, updateStore, validateEsignCredential } from '../../actions';\r\nimport { toast } from 'react-toastify';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { ListWrapper } from '../../components/client-group.styles'\r\nimport { showEsign, getControlMap } from '../../components/CommonScript';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes'\r\nimport Esign from '../audittrail/Esign';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass FTPConfig extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map()\r\n        }\r\n    }\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data, event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { userinfo: this.props.Login.userInfo },\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : '',\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedId = this.props.Login.selectedId;\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedId = null;\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, optionsChecklistComponent: [], optionsQBCategory: [], selectedId }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    };\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let dataState = undefined;\r\n        let selectedId = null;\r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            selectedId = this.state.selectedRecord.nftpno\r\n            dataState = this.state.dataState\r\n            inputData[\"ftpconfig\"] = {\r\n                \"nftpno\": this.state.selectedRecord.nftpno,\r\n                \"susername\": this.state.selectedRecord.susername,\r\n                \"spassword\": this.state.selectedRecord.spassword,\r\n                \"nsitecode\": this.props.Login.userInfo.nmastersitecode,//this.state.selectedRecord.nsitecode,\r\n                \"shost\": this.state.selectedRecord.shost,\r\n                \"nportno\": this.state.selectedRecord.nportno,\r\n                \"nsslrequired\": this.state.selectedRecord.nsslrequired,\r\n                \"nchecksumrequired\": this.state.selectedRecord.nchecksumrequired,\r\n                \"ndefaultstatus\": this.state.selectedRecord.ndefaultstatus,\r\n                \"sphysicalpath\": this.state.selectedRecord.sphysicalpath,\r\n                \"nftptypecode\": this.state.selectedRecord.nftptypecode.value,\r\n                //\"nregionsitecode\":this.state.selectedRecord.nsitecode.value,\r\n            }\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"ftpconfig\"] =\r\n            {\r\n                \"susername\": this.state.selectedRecord.susername,\r\n                \"spassword\": this.state.selectedRecord.spassword,\r\n                \"nsitecode\": this.props.Login.userInfo.nmastersitecode,//this.state.selectedRecord.nsitecode,\r\n                \"shost\": this.state.selectedRecord.shost,\r\n                \"nportno\": this.state.selectedRecord.nportno,\r\n                \"nsslrequired\": this.state.selectedRecord.nsslrequired,\r\n                \"nchecksumrequired\": this.state.selectedRecord.nchecksumrequired,\r\n                \"ndefaultstatus\": this.state.selectedRecord.ndefaultstatus,\r\n                \"sphysicalpath\": this.state.selectedRecord.sphysicalpath,\r\n                \"nftptypecode\": this.state.selectedRecord.nftptypecode.value,\r\n               // \"nregionsitecode\":this.state.selectedRecord.nsitecode.value,\r\n            };\r\n        }\r\n\r\n        //   inputData[\"ftpconfig\"][\"sphysicalpath\"] =this.state.selectedRecord.sphysicalpath+\"\\\\\";\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : \"\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            formRef, saveType, dataState, selectedId,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolcode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    deleteRecord = (deleteParam) => {\r\n\r\n        const inputParam = {\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            displayName: this.props.Login.inputParam.displayName ? this.props.Login.inputParam.displayName : \"\",\r\n            inputData: { \"ftpconfig\": deleteParam.selectedRecord, \"userinfo\": this.props.Login.userInfo },\r\n            operation: deleteParam.operation,\r\n            dataState: this.state.dataState,\r\n            selectedRecord:{...this.state.selectedRecord}\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n        if (\r\n            showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true,\r\n                    screenData: { inputParam, masterData },\r\n                    operation: deleteParam.operation,\r\n                    openModal: true,\r\n                    screenName: this.props.Login.inputParam.displayName,\r\n                    optionsQBCategory: this.props.Login.optionsQBCategory,\r\n                    optionsChecklistComponent: this.props.Login.optionsChecklistComponent\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n    render() {\r\n        let primaryKeyField = \"\";\r\n        this.extractedColumnList = [\r\n           // {\"idsName\":\"IDS_SITE\",\"dataField\":\"ssitename\",\"width\":\"200px\"},\r\n            { \"idsName\": \"IDS_FTPTYPE\", \"dataField\": \"sftptypename\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"width\": \"200px\" },            \r\n            { \"idsName\": \"IDS_HOST\", \"dataField\": \"shost\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_PORTNO\", \"dataField\": \"nportno\", \"width\": \"200px\" },\r\n            { \"idsName\": \"IDS_DEFAULTSTATUS\", \"dataField\": \"sdefaultstatus\", \"width\": \"200px\" }\r\n        ];\r\n        primaryKeyField = \"nftpno\";\r\n        const addID = this.props.Login.inputParam && this.state.controlMap.has(\"AddFTPConfig\")\r\n            && this.state.controlMap.get('AddFTPConfig').ncontrolcode;\r\n        const editID = this.props.Login.inputParam && this.state.controlMap.has(\"EditFTPConfig\")\r\n            && this.state.controlMap.get('EditFTPConfig').ncontrolcode;\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam ? this.props.Login.inputParam.displayName : '',\r\n            operation: \"update\",\r\n            primaryKeyField,\r\n            masterData: this.props.Login.masterData,\r\n            userInfo: this.props.Login.userInfo,\r\n            ncontrolCode: editID,\r\n            inputparam: this.props.Login.inputparam,\r\n        };\r\n        const deleteParam = {\r\n            screenName: this.props.Login.inputParam ? this.props.Login.inputParam.displayName : '',\r\n            methodUrl: \"UserMultiRole\",\r\n            operation: \"delete\"\r\n        };\r\n        const mandatoryFields = [{ \"idsName\": \"IDS_FTPTYPE\", \"dataField\": \"nftptypecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n       // {\"idsName\": \"IDS_SITE\", \"dataField\": \"nsitecode\", \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"combo\" },\r\n        { \"idsName\": \"IDS_USERNAME\", \"dataField\": \"susername\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_PASSWORD\", \"dataField\": \"spassword\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_HOST\", \"dataField\": \"shost\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_PORTNO\", \"dataField\": \"nportno\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n        { \"idsName\": \"IDS_PHYSICALPATH\", \"dataField\": \"sphysicalpath\", \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\"}\r\n        ]\r\n\r\n        return (\r\n            <>\r\n                <Row>\r\n                    <Col>\r\n                        <ListWrapper className=\"client-list-content\">\r\n                            {/* <PrimaryHeader className=\"d-flex justify-content-between mb-3\">\r\n                            <HeaderName className=\"header-primary-md\">\r\n                                {this.props.Login.inputParam&&this.props.Login.inputParam.displayName ?\r\n                                    <FormattedMessage id={this.props.Login.inputParam.displayName} /> : \"\"}\r\n                            </HeaderName>\r\n                            <Button className=\"btn btn-user btn-primary-blue\" \r\n                             hidden={this.state.userRoleControlRights.indexOf(addID) === -1}\r\n                            onClick={()=>this.props.openFTPConfigModal(this.props.userInfo,addID)} \r\n                            role=\"button\">\r\n                                <FontAwesomeIcon icon={faPlus} /> { }                          \r\n                                <FormattedMessage id=\"IDS_ADD\" defaultMessage='Add'/> \r\n                            </Button>\r\n                        </PrimaryHeader> */}\r\n\r\n                            {this.state.data ?\r\n                                <DataGrid\r\n                                    primaryKeyField={primaryKeyField}\r\n                                    data={this.state.data}\r\n                                    dataResult={this.state.dataResult}\r\n                                    dataState={this.state.dataState}\r\n                                    dataStateChange={this.dataStateChange}\r\n                                    extractedColumnList={this.extractedColumnList}\r\n                                    fetchRecord={this.props.fetchFTPConfigByID}\r\n                                    deleteRecord={this.deleteRecord}\r\n                                    reloadData={this.reloadData}\r\n                                    pageable={{ buttonCount: 4, pageSizes: true }}\r\n                                    controlMap={this.state.controlMap}\r\n                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                    inputParam={this.props.Login.inputParam}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    isActionRequired={true}\r\n                                    isToolBarRequired={true}\r\n                                    editParam={editParam}\r\n                                    deleteParam={deleteParam}\r\n                                    scrollable={\"scrollable\"}\r\n                                    gridHeight={\"600px\"}\r\n                                    selectedId={this.props.Login.selectedId}\r\n                                    addRecord={() => this.props.openFTPConfigModal(this.props.Login.userInfo, addID)}\r\n\r\n                                />\r\n                                : \"\"}\r\n                        </ListWrapper>\r\n                    </Col>\r\n                </Row>\r\n                {this.props.Login.openModal ?\r\n                    <SlideOutModal\r\n                        onSaveClick={this.onSaveClick}\r\n                        operation={this.props.Login.operation}\r\n                        screenName=\"IDS_FTPCONFIG\"\r\n                        closeModal={this.closeModal}\r\n                        show={this.props.Login.openModal}\r\n                        inputParam={this.props.Login.inputParam}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            :\r\n                            <Row>\r\n                                {/* <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nsitecode\"}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SITE\" })}\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord.nsitecode : []}\r\n                                        options={this.props.Login.siteOptions ? this.props.Login.siteOptions : []}\r\n                                        // optionId=\"nsitecode\"\r\n                                        // optionValue=\"ssitename\"\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isDisabled={false}\r\n                                        isSearchable={false}\r\n                                        isClearable={false}\r\n                                        as={\"select\"}\r\n                                        onChange={(event) => this.onComboChange(event, \"nsitecode\")}\r\n                                    />\r\n                                </Col> */}\r\n\r\n\r\n                                <Col md={12}>\r\n                                    <FormSelectSearch\r\n                                        name={\"nsitecode\"}\r\n                                        formLabel={this.props.intl.formatMessage({ id: \"IDS_FTPTYPE\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_FTPTYPE\" })}\r\n                                        value={this.state.selectedRecord.nftptypecode ? this.state.selectedRecord.nftptypecode : \"\"}\r\n                                        options={this.props.Login.ftpTypeList ? this.props.Login.ftpTypeList : []}\r\n                                        // optionId=\"nsitecode\"\r\n                                        // optionValue=\"ssitename\"\r\n                                        isMandatory={true}\r\n                                        isMulti={false}\r\n                                        isDisabled={false}\r\n                                        isSearchable={false}\r\n                                        isClearable={false}\r\n                                        as={\"select\"}\r\n                                        onChange={(event) => this.onComboChange(event, \"nftptypecode\")}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={12}>\r\n                                    <FormInput\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_USERNAME\" })}\r\n                                        name={\"susername\"}\r\n                                        type=\"text\"\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_USERNAME\" })}\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord[\"susername\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                    />\r\n                                    <FormInput\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                                        name={\"spassword\"}\r\n                                        type=\"password\"\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PASSWORD\" })}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord[\"spassword\"] : \"\"}\r\n                                        maxLength={100}\r\n                                    />\r\n                                    {/* <Col md={12}>/site commented/\r\n                            <FormSelectSearch\r\n                                name={\"nsitecode\"}\r\n                                formLabel={this.props.intl.formatMessage({ id:\"IDS_SITE\"})}\r\n                                placeholder={this.props.intl.formatMessage({ id:\"IDS_SITE\"})}\r\n                                value={this.state.selectedRecord?this.state.selectedRecord.siteValue:[]}\r\n                                options={this.props.Login.siteOptions?this.props.Login.siteOptions:[]}\r\n                                optionId=\"nsitecode\"\r\n                                optionValue=\"ssitename\"\r\n                                isMandatory={true}\r\n                                isMulti={false}\r\n                                isDisabled={false}\r\n                                isSearchable={false}\r\n                                isClearable={false}\r\n                                as={\"select\"}\r\n                                onChange={(event)=>this.onComboChange(event,\"nsitecode\")}\r\n                            />\r\n                        </Col> */}\r\n                                    <FormInput\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_HOST\" })}\r\n                                        name={\"shost\"}\r\n                                        type=\"text\"\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_HOST\" })}\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord[\"shost\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        maxLength={100}\r\n                                    />\r\n                                    <FormNumericInput\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_PORTNO\" })}\r\n                                        name={\"nportno\"}\r\n                                        type=\"number\"\r\n                                        onChange={(event) => this.onNumericInputOnChange(event, \"nportno\")}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PORTNO\" })}\r\n                                        isMandatory={true}\r\n                                        required={true}\r\n                                        noStyle={true}\r\n                                        strict={true}\r\n                                        className=\"form-control\"\r\n                                        // max={10000000}\r\n                                        errors=\"Please provide a valid number.\"\r\n                                        // min={0}\r\n                                        maxLength={10}\r\n                                        //maxLength={100}\r\n                                        value={this.state.selectedRecord[\"nportno\"]}\r\n                                    />\r\n                                    <FormInput\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_PHYSICALPATH\" })}\r\n                                        name={\"sphysicalpath\"}\r\n                                        type=\"text\"\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_PHYSICALPATH\" })}\r\n                                        value={this.state.selectedRecord ? this.state.selectedRecord[\"sphysicalpath\"] : \"\"}\r\n                                        isMandatory={true}\r\n                                        required={false}\r\n                                        maxLength={100}\r\n                                    />\r\n                                </Col>\r\n                                <Col md={6}>\r\n                                    <CustomSwitch\r\n                                        name={\"ndefaultstatus\"}\r\n                                        type=\"switch\"\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                                        defaultValue={this.state.selectedRecord ? this.state.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES ? true : false : false}\r\n                                        isMandatory={false}\r\n                                        required={false}\r\n                                        checked={this.state.selectedRecord ? this.state.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES ? true : false : false}\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                    />\r\n                                </Col>\r\n                                {this.state.selectedRecord.nftptypecode && this.state.selectedRecord.nftptypecode.value === 1 ?\r\n                                    <Col md={6}>\r\n                                        <CustomSwitch\r\n                                            name={\"nsslrequired\"}\r\n                                            type=\"switch\"\r\n                                            label={this.props.intl.formatMessage({ id: \"IDS_SSL\" })}\r\n                                            placeholder={this.props.intl.formatMessage({ id: \"IDS_SSL\" })}\r\n                                            defaultValue={this.state.selectedRecord ? this.state.selectedRecord[\"nsslrequired\"] === transactionStatus.YES ? true : false : false}\r\n                                            isMandatory={false}\r\n                                            required={false}\r\n                                            checked={this.state.selectedRecord ? this.state.selectedRecord[\"nsslrequired\"] === transactionStatus.YES ? true : false : false}\r\n                                            onChange={(event) => this.onInputOnChange(event)}\r\n                                        />\r\n                                    </Col>\r\n                                    : \"\"}\r\n\r\n                                <Col md={6}>\r\n                                    <CustomSwitch\r\n                                        name={\"nchecksumrequired\"}\r\n                                        type=\"switch\"\r\n                                        label={this.props.intl.formatMessage({ id: \"IDS_CHECKSUM\" })}\r\n                                        placeholder={this.props.intl.formatMessage({ id: \"IDS_CHECKSUM\" })}\r\n                                        defaultValue={this.state.selectedRecord ? this.state.selectedRecord[\"nchecksumrequired\"] === transactionStatus.YES ? true : false : false}\r\n                                        isMandatory={false}\r\n                                        required={false}\r\n                                        checked={this.state.selectedRecord ? this.state.selectedRecord[\"nchecksumrequired\"] === transactionStatus.YES ? true : false : false}\r\n                                        onChange={(event) => this.onInputOnChange(event)}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                        } /> : \"\"}\r\n\r\n            </>\r\n        );\r\n    }\r\n\r\n    onNumericInputOnChange = (value, name) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.setState({\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n                this.setState({\r\n                    data: this.props.Login.masterData,\r\n                    dataResult: process(this.props.Login.masterData, dataState),\r\n                    dataState\r\n                });\r\n            }\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onInputOnChange = (event) => {\r\n\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n\r\n    }\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (fieldName === 'nftptypecode') {\r\n            selectedRecord[fieldName] = comboData;\r\n        } else {\r\n            if (comboData) {\r\n                selectedRecord['siteValue'] = comboData\r\n                //selectedRecord[fieldName] = comboData.value;\r\n                selectedRecord[fieldName] = comboData;\r\n            } else {\r\n                selectedRecord['siteValue'] = []\r\n                selectedRecord[fieldName] = \"\";\r\n            }\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { callService, crudMaster, openFTPConfigModal, fetchFTPConfigByID, updateStore, validateEsignCredential })(injectIntl(FTPConfig));"]},"metadata":{},"sourceType":"module"}