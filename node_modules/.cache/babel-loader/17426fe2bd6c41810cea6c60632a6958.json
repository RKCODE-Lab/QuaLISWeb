{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{injectIntl}from'react-intl';var AddModuleSorting=function AddModuleSorting(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormInput,{name:\"nformcode\",label:props.intl.formatMessage({id:\"IDS_FORMNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.formMapList||[],value:props.selectedRecord.nformcode.label,readOnly:true})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nmodulecode\",formLabel:props.intl.formatMessage({id:\"IDS_MODULENAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.moduleMapList||[],value:props.selectedRecord?props.selectedRecord[\"nmodulecode\"]:\"\",isMandatory:true,required:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,onChange:function onChange(event){return props.onComboChange(event,\"nmodulecode\");}})));};export default injectIntl(AddModuleSorting);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-512/QuaLISWeb/src/pages/credentialmanagement/AddModuleSorting.jsx"],"names":["React","Row","Col","FormInput","FormSelectSearch","injectIntl","AddModuleSorting","props","intl","formatMessage","id","formMapList","selectedRecord","nformcode","label","moduleMapList","event","onComboChange"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,GAAT,CAAcC,GAAd,KAAyB,iBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,kDAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,kEAA7B,CACA,OAAQC,UAAR,KAA0B,YAA1B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAW,CAChC,mBACM,oBAAC,GAAD,mBACI,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACM,oBAAC,SAAD,EACI,IAAI,CAAE,WADV,CAEI,KAAK,CAAGA,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,cAAL,CAAzB,CAFZ,CAGI,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,kBAAL,CAAzB,CAHjB,CAII,OAAO,CAAGH,KAAK,CAACI,WAAN,EAAqB,EAJnC,CAKI,KAAK,CAAKJ,KAAK,CAACK,cAAN,CAAqBC,SAArB,CAA+BC,KAL7C,CAMI,QAAQ,CAAE,IANd,EADN,CADJ,cAWE,oBAAC,GAAD,EAAK,EAAE,CAAE,EAAT,eACA,oBAAC,gBAAD,EACgB,IAAI,CAAE,aADtB,CAEgB,SAAS,CAAGP,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,gBAAL,CAAzB,CAF5B,CAGgB,WAAW,CAAEH,KAAK,CAACC,IAAN,CAAWC,aAAX,CAAyB,CAAEC,EAAE,CAAC,kBAAL,CAAzB,CAH7B,CAIgB,OAAO,CAAGH,KAAK,CAACQ,aAAN,EAAuB,EAJjD,CAKgB,KAAK,CAAKR,KAAK,CAACK,cAAN,CAAuBL,KAAK,CAACK,cAAN,CAAqB,aAArB,CAAvB,CAA2D,EALrF,CAMgB,WAAW,CAAE,IAN7B,CAOgB,QAAQ,CAAE,IAP1B,CAQgB,OAAO,CAAE,KARzB,CASgB,YAAY,CAAE,IAT9B,CAUgB,UAAU,CAAE,KAV5B,CAWgB,iBAAiB,CAAE,IAXnC,CAYgB,QAAQ,CAAI,kBAACI,KAAD,QAAUT,CAAAA,KAAK,CAACU,aAAN,CAAoBD,KAApB,CAA2B,aAA3B,CAAV,EAZ5B,EADA,CAXF,CADN,CA8BH,CA/BD,CAgCA,cAAeX,CAAAA,UAAU,CAACC,gBAAD,CAAzB","sourcesContent":["import React from 'react';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport {injectIntl } from 'react-intl';\r\n\r\nconst AddModuleSorting = (props) => {\r\n    return(\r\n          <Row>    \r\n              <Col md={12}>\r\n                    <FormInput\r\n                        name={\"nformcode\"}\r\n                        label={ props.intl.formatMessage({ id:\"IDS_FORMNAME\"})}                              \r\n                        placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                            \r\n                        options={ props.formMapList || []}\r\n                        value = { props.selectedRecord.nformcode.label }\r\n                        readOnly={true}\r\n                />\r\n            </Col>\r\n            <Col md={12}>\r\n            <FormSelectSearch\r\n                            name={\"nmodulecode\"}\r\n                            formLabel={ props.intl.formatMessage({ id:\"IDS_MODULENAME\"})}                              \r\n                            placeholder={props.intl.formatMessage({ id:\"IDS_SELECTRECORD\"})}                               \r\n                            options={ props.moduleMapList || []}\r\n                            value = { props.selectedRecord ? props.selectedRecord[\"nmodulecode\"]:\"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            isMulti={false}\r\n                            isSearchable={true}                                \r\n                            isDisabled={false}\r\n                            closeMenuOnSelect={true}\r\n                            onChange = {(event)=> props.onComboChange(event, \"nmodulecode\")}                               \r\n                    />\r\n            </Col>\r\n         </Row>\r\n    );\r\n};\r\nexport default injectIntl(AddModuleSorting);"]},"metadata":{},"sourceType":"module"}