{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import _defineProperty from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import{Row,Col,Card,Nav,FormGroup,FormLabel}from'react-bootstrap';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPencilAlt,faTrashAlt,faThumbsUp,faUserLock,faClock}from'@fortawesome/free-solid-svg-icons';//,faUserTimes, faTrash\nimport{connect}from'react-redux';import{injectIntl,FormattedMessage}from'react-intl';import{toast}from'react-toastify';import{callService,crudMaster,validateEsignCredential,updateStore,getTrainingCertificateDetail,getTrainingCertificateComboService,getTrainingParticipantsComboDataService,filterColumnData,reloadTrainingCertificate}from'../../../actions';import{ReactComponent as Reject}from\"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/image/reject.svg\";import{ReadOnlyText,ContentPanel}from'../../../components/App.styles';import{constructOptionList,getControlMap,showEsign,validateEmail,validatePhoneNumber,validateTwoDigitDate,convertDateValuetoString,formatInputDate}from'../../../components/CommonScript';//searchData, sortData,\nimport ListMaster from'../../../components/list-master/list-master.component';import SlideOutModal from'../../../components/slide-out-modal/SlideOutModal';import AddTrainingCertificate from'./AddTrainingCertificate';import Esign from'../../../pages/audittrail/Esign';import{DEFAULT_RETURN}from'../../../actions/LoginTypes';import BreadcrumbComponent from'../../../components/Breadcrumb.Component';import{ListWrapper}from'../../../components/client-group.styles';import{transactionStatus}from'../../../components/Enumeration';import DateFilter from'../../../components/DateFilter';import{Affix}from'rsuite';import ConfirmMessage from'../../../components/confirm-alert/confirm-message.component';// import ReactTooltip from 'react-tooltip';\nimport TrainingCertificateParticipantsTab from'./TrainingCertificateParticipantsTab';var mapStateToProps=function mapStateToProps(state){return{Login:state.Login};};var TrainingCertificate=/*#__PURE__*/function(_React$Component){_inherits(TrainingCertificate,_React$Component);var _super=_createSuper(TrainingCertificate);function TrainingCertificate(props){var _this;_classCallCheck(this,TrainingCertificate);_this=_super.call(this,props);// const dataState = {\n//     skip: 0,\n//     take: 10,\n// };\n_this.getTrainingCertificateComboService=function(resheduleId){if(_this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus!==transactionStatus.CANCELLED){_this.props.getTrainingCertificateComboService(\"IDS_TRAININGCERTIFICATE\",\"update\",\"ntrainingcode\",_this.props.Login.masterData.SelectedTrainingCertificate.ntrainingcode,_this.props.Login.masterData,_this.props.Login.userInfo,resheduleId);}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_TRAININGCANCELED\"}));}};_this.openFilter=function(){var showFilter=!_this.props.Login.showFilter;var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:showFilter}};_this.props.updateStore(updateInfo);};_this.closeFilter=function(){var updateInfo={typeName:DEFAULT_RETURN,data:{showFilter:false}};_this.props.updateStore(updateInfo);};_this.onFilterSubmit=function(){_this.reloadData(true);};_this.reloadData=function(isFilterSubmit){_this.searchRef.current.value=\"\";// let obj = this.convertDatetoString(selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\n//     selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\nvar fromDate=_this.props.Login.masterData.FromDate;var toDate=_this.props.Login.masterData.ToDate;if(isFilterSubmit){var selectedRecord=_this.state.selectedRecord||{};if(selectedRecord&&selectedRecord[\"fromdate\"]!==undefined){fromDate=selectedRecord[\"fromdate\"];}if(selectedRecord&&selectedRecord[\"todate\"]!==undefined){toDate=selectedRecord[\"todate\"];}}//let obj = this.convertDatetoString(fromDate, toDate); \nvar obj=convertDateValuetoString(fromDate,toDate,_this.props.Login.userInfo);var inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:obj.fromDate,toDate:obj.toDate,currentDate:null//currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\n},classUrl:\"trainingcertificate\",methodUrl:\"TrainingCertificate\",displayName:\"IDS_TRAININGCERTIFICATE\",userInfo:_this.props.Login.userInfo};//this.props.callService(inputParam);\n_this.props.reloadTrainingCertificate(inputParam);};_this.onConductlick=function(){if(_this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus!==transactionStatus.CANCELLED){var _inputParam;var ncontrolCode=_this.state.controlMap.has(\"ConductTrainingCertificate\")&&_this.state.controlMap.get(\"ConductTrainingCertificate\").ncontrolcode;var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;var postParam=undefined;inputData[\"trainingcertificate\"]={\"ntrainingcode\":_this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"]?_this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"].Value:\"\"};inputData[\"trainingcertificate\"]=_this.props.Login.masterData.SelectedTrainingCertificate;postParam={inputListName:\"TrainingCertificate\",selectedObject:\"SelectedTrainingCertificate\",primaryKeyField:\"ntrainingcode\"};var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;var inputParam=(_inputParam={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:fromDate,toDate:toDate},classUrl:'trainingcertificate',methodUrl:\"TrainingCertificate\"},_defineProperty(_inputParam,\"inputData\",inputData),_defineProperty(_inputParam,\"operation\",\"conduct\"),_defineProperty(_inputParam,\"postParam\",postParam),_inputParam);var saveType;var masterData=_this.props.Login.masterData;var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,openModal:true,operation:\"conduct\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}}else{toast.warn(_this.props.intl.formatMessage({id:\"IDS_TRAININGCANCELED\"}));}};_this.onCancelListClick=function(){var _inputParam2;//if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.DRAFT) {\nvar ncontrolCode=_this.state.controlMap.has(\"CancelTrainingCertificate\")&&_this.state.controlMap.get(\"CancelTrainingCertificate\").ncontrolcode;var inputData=[];inputData[\"userinfo\"]=_this.props.Login.userInfo;//add               \nvar postParam=undefined;inputData[\"trainingcertificate\"]={\"ntrainingcode\":_this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"]?_this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"].Value:\"\"};inputData[\"trainingcertificate\"]=_this.props.Login.masterData.SelectedTrainingCertificate;postParam={inputListName:\"TrainingCertificate\",selectedObject:\"SelectedTrainingCertificate\",primaryKeyField:\"ntrainingcode\"};var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;var inputParam=(_inputParam2={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:fromDate,toDate:toDate},classUrl:'trainingcertificate',methodUrl:\"TrainingCertificate\"},_defineProperty(_inputParam2,\"inputData\",inputData),_defineProperty(_inputParam2,\"operation\",\"cancel\"),_defineProperty(_inputParam2,\"postParam\",postParam),_inputParam2);var saveType;var masterData=_this.props.Login.masterData;var esignNeeded=showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,ncontrolCode);if(esignNeeded){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType,openModal:true,operation:\"cancel\"}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.validateEsign=function(){var inputParam={inputData:{\"userinfo\":_objectSpread(_objectSpread({},_this.props.Login.userInfo),{},{sreason:_this.state.selectedRecord[\"esigncomments\"],nreasoncode:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].value,spredefinedreason:_this.state.selectedRecord[\"esignreason\"]&&_this.state.selectedRecord[\"esignreason\"].label}),password:_this.state.selectedRecord[\"esignpassword\"]},screenData:_this.props.Login.screenData};_this.props.validateEsignCredential(inputParam,\"openModal\");};_this.closeModal=function(){var loadEsign=_this.props.Login.loadEsign;var openModal=_this.props.Login.openModal;var selectedRecord=_this.props.Login.selectedRecord;if(_this.props.Login.loadEsign){if(_this.props.Login.operation===\"conduct\"||_this.props.Login.operation===\"blackList\"||_this.props.Login.operation===\"cancel\"||_this.props.Login.operation===\"invite\"){loadEsign=false;openModal=false;selectedRecord={};}else{loadEsign=false;selectedRecord['esignpassword']=\"\";selectedRecord['esigncomments']=\"\";selectedRecord['esignreason']=\"\";}}else{openModal=false;selectedRecord={};}var updateInfo={typeName:DEFAULT_RETURN,data:{openModal:openModal,loadEsign:loadEsign,selectedRecord:selectedRecord,selectedId:null}};_this.props.updateStore(updateInfo);};_this.onComboChange=function(comboData,fieldName){var selectedRecord=_this.state.selectedRecord||{};selectedRecord[fieldName]=comboData;;_this.setState({selectedRecord:selectedRecord});};_this.onInputOnChange=function(event){var selectedRecord=_this.state.selectedRecord||{};if(event.target.type==='checkbox'){selectedRecord[event.target.name]=event.target.checked===true?transactionStatus.YES:transactionStatus.NO;}else{selectedRecord[event.target.name]=event.target.value;}_this.setState({selectedRecord:selectedRecord});};_this.handleDateChange=function(dateName,dateValue){var selectedRecord=_this.state.selectedRecord;selectedRecord[dateName]=dateValue;_this.setState({selectedRecord:selectedRecord});};_this.onSaveClick=function(saveType,formRef){var _inputParam3;var inputData=[];inputData[\"ncontrolcode\"]=_this.props.Login.ncontrolCode;inputData[\"userinfo\"]=_this.props.Login.userInfo;var obj=convertDateValuetoString(_this.props.Login.masterData.FromDate,_this.props.Login.masterData.ToDate,_this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;inputData[\"fromDate\"]=fromDate;inputData[\"toDate\"]=toDate;var postParam=undefined;if(_this.props.Login.operation===\"update\"){// edit\npostParam={inputListName:\"TrainingCertificate\",selectedObject:\"SelectedTrainingCertificate\",primaryKeyField:\"ntrainingcode\"};inputData[\"trainingcertificate\"]=JSON.parse(JSON.stringify(_this.props.Login.selectedRecord));_this.trainingcertificateFieldList.map(function(item){return inputData[\"trainingcertificate\"][item]=_this.state.selectedRecord[item]?_this.state.selectedRecord[item]:\"\";});}else{//add               \ninputData[\"trainingcertificate\"]={\"nsitecode\":_this.props.Login.userInfo.nmastersitecode};_this.trainingcertificateFieldList.map(function(item){return inputData[\"trainingcertificate\"][item]=_this.state.selectedRecord[item];});inputData[\"trainingcertificate\"][\"ntransactionstatus\"]=\"41\";}if(_this.state.selectedRecord[\"dtrainingdatetime\"]){inputData[\"trainingcertificate\"][\"dtrainingdatetime\"]=formatInputDate(_this.state.selectedRecord[\"dtrainingdatetime\"],false);}inputData[\"trainingcertificate\"][\"ntrainingcategorycode\"]=_this.state.selectedRecord[\"ntrainingcategorycode\"]?_this.state.selectedRecord[\"ntrainingcategorycode\"].value:\"-1\";inputData[\"trainingcertificate\"][\"ntechniquecode\"]=_this.state.selectedRecord[\"ntechniquecode\"]?_this.state.selectedRecord[\"ntechniquecode\"].value:\"-1\";inputData[\"trainingcertificate\"][\"ntztrainingdate\"]=_this.state.selectedRecord[\"ntztrainingdate\"]?_this.state.selectedRecord[\"ntztrainingdate\"].value:\"-1\";var inputParam=(_inputParam3={inputData:{\"userinfo\":_this.props.Login.userInfo,fromDate:fromDate,toDate:toDate},classUrl:\"trainingcertificate\",//this.props.Login.inputParam.classUrl,\nmethodUrl:\"TrainingCertificate\"},_defineProperty(_inputParam3,\"inputData\",inputData),_defineProperty(_inputParam3,\"operation\",_this.props.Login.operation),_defineProperty(_inputParam3,\"saveType\",saveType),_defineProperty(_inputParam3,\"formRef\",formRef),_defineProperty(_inputParam3,\"postParam\",postParam),_defineProperty(_inputParam3,\"searchRef\",_this.searchRef),_inputParam3);var masterData=_this.props.Login.masterData;if(showEsign(_this.props.Login.userRoleControlRights,_this.props.Login.userInfo.nformcode,_this.props.Login.ncontrolCode)){var updateInfo={typeName:DEFAULT_RETURN,data:{loadEsign:true,screenData:{inputParam:inputParam,masterData:masterData},saveType:saveType}};_this.props.updateStore(updateInfo);}else{_this.props.crudMaster(inputParam,masterData,\"openModal\");}};_this.onTabChange=function(tabProps){var screenName=tabProps.screenName;var updateInfo={typeName:DEFAULT_RETURN,data:{screenName:screenName}};_this.props.updateStore(updateInfo);};_this.state={isOpen:false,trainingcertificateData:[],TrainingParticipantsData:[],trainingcategoryList:[],techniqueList:[],masterStatus:\"\",error:\"\",selectedRecord:{},operation:\"\",screenName:undefined,userLogged:true,selectedTrainingCertificate:undefined,trainingparticipants:[],selectedTrainingParticipants:[],userRoleControlRights:[],controlMap:new Map(),showAccordian:true,TrainingParticipantscombo:[],trainingparticipantsList:[]};_this.searchRef=React.createRef();_this.confirmMessage=new ConfirmMessage();_this.trainingcertificateFieldList=['strainername','strainingtopic','strainingvenue','dtrainingdatetime','ntransactionstatus','ntechniquecode','ntrainingcategorycode','stztrainingdate','scomments'];//'nmahcode',\nreturn _this;}_createClass(TrainingCertificate,[{key:\"render\",value:function render(){var _this2=this;//console.log('screen name:',this.props.Login.screenName,'operation ;',this.props.Login.operation)\n//console.log('selected r :', this.props.Login.inputParam)\nvar userStatusCSS=\"outline-secondary\";if(this.props.Login.masterData.SelectedTrainingCertificate?this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus===transactionStatus.COMPLETED||this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus===transactionStatus.CONDUCTED:false){userStatusCSS=\"outline-success\";}else if(this.props.Login.masterData.SelectedTrainingCertificate&&this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus===transactionStatus.CANCELLED){userStatusCSS=\"outline-danger\";}var addId=this.state.controlMap.has(\"AddTrainingCertificate\")&&this.state.controlMap.get(\"AddTrainingCertificate\").ncontrolcode;var resheduleId=this.state.controlMap.has(\"ResheduleTrainingCertificate\")&&this.state.controlMap.get(\"ResheduleTrainingCertificate\").ncontrolcode;var conductId=this.state.controlMap.has(\"ConductTrainingCertificate\")&&this.state.controlMap.get(\"ConductTrainingCertificate\").ncontrolcode;var cancelId=this.state.controlMap.has(\"CancelTrainingCertificate\")&&this.state.controlMap.get(\"CancelTrainingCertificate\").ncontrolcode;var obj=convertDateValuetoString(this.state.selectedRecord[\"fromdate\"]||this.props.Login.masterData&&this.props.Login.masterData.FromDate,this.state.selectedRecord[\"todate\"]||this.props.Login.masterData&&this.props.Login.masterData.ToDate,this.props.Login.userInfo);var fromDate=obj.fromDate;var toDate=obj.toDate;var filterParam={inputListName:\"TrainingCertificate\",selectedObject:\"SelectedTrainingCertificate\",primaryKeyField:\"ntrainingcode\",fetchUrl:\"trainingcertificate/getTrainingCertificate\",fecthInputObject:{userinfo:this.props.Login.userInfo,fromDate:fromDate,toDate:toDate},masterData:this.props.Login.masterData,unchangeList:[\"FromDate\",\"ToDate\"],searchFieldList:this.trainingcertificateFieldList};this.validationColumnList=[{\"idsName\":\"IDS_TRAININGCATERGORY\",\"dataField\":\"ntrainingcategorycode\",\"width\":\"200px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TECHNIQUE\",\"dataField\":\"ntechniquecode\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TRAININGTPOIC\",\"dataField\":\"strainingtopic\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_TRAININGDATE\",\"dataField\":\"dtrainingdatetime\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TIMEZONE\",\"dataField\":\"ntztrainingdate\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_SELECT\",\"controlType\":\"selectbox\"},{\"idsName\":\"IDS_TRAINERNAME\",\"dataField\":\"strainername\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_TRAININGVENUE\",\"dataField\":\"strainingvenue\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"},{\"idsName\":\"IDS_COMMENTS\",\"dataField\":\"scomments\",\"width\":\"150px\",\"mandatory\":true,\"mandatoryLabel\":\"IDS_ENTER\",\"controlType\":\"textbox\"}];var mandatoryFields=[];this.validationColumnList.forEach(function(item){return item.mandatory===true?mandatoryFields.push(item):\"\";});var breadCrumbDataDate=convertDateValuetoString(this.props.Login.masterData&&this.props.Login.masterData.FromDate,this.props.Login.masterData&&this.props.Login.masterData.ToDate,this.props.Login.userInfo);var breadCrumbData=[{\"label\":\"IDS_FROM\",\"value\":breadCrumbDataDate.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":breadCrumbDataDate.breadCrumbto}];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(ListWrapper,{className:\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\"},breadCrumbData.length>0?/*#__PURE__*/React.createElement(Affix,{top:53},/*#__PURE__*/React.createElement(BreadcrumbComponent,{breadCrumbItem:breadCrumbData})):\"\",/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(ListMaster,{formatMessage:this.props.intl.formatMessage,screenName:\"IDS_TRAININGCERTIFICATE\",masterData:this.props.Login.masterData,userInfo:this.props.Login.userInfo,masterList:this.props.Login.masterData.searchedData||this.props.Login.masterData.TrainingCertificate,getMasterDetail:function getMasterDetail(trainingcertificate){return _this2.props.getTrainingCertificateDetail(trainingcertificate,fromDate,toDate,_this2.props.Login.userInfo,_this2.props.Login.masterData);},selectedMaster:this.props.Login.masterData.SelectedTrainingCertificate,primaryKeyField:\"ntrainingcode\",mainField:\"strainingtopic\",firstField:\"strainingcategoryname\",secondField:\"sdisplaystatus\",isIDSField:\"Yes\",filterColumnData:this.props.filterColumnData,filterParam:filterParam,userRoleControlRights:this.state.userRoleControlRights,addId:addId,searchRef:this.searchRef,reloadData:this.reloadData,hidePaging:true,openModal:function openModal(){return _this2.props.getTrainingCertificateComboService(\"IDS_TRAININGCERTIFICATE\",\"create\",\"ntrainingcode\",null,_this2.props.Login.masterData,_this2.props.Login.userInfo,addId);},showFilterIcon:true,showFilter:this.props.Login.showFilter,openFilter:this.openFilter,closeFilter:this.closeFilter,onFilterSubmit:this.onFilterSubmit,filterComponent:[{\"IDS_FILTER\":/*#__PURE__*/React.createElement(DateFilter,{selectedRecord:this.state.selectedRecord||{},handleDateChange:this.handleDateChange,fromDate:fromDate,toDate:toDate,userInfo:this.props.Login.userInfo})}]})),/*#__PURE__*/React.createElement(Col,{md:8},/*#__PURE__*/React.createElement(ContentPanel,{className:\"panel-main-content\"},/*#__PURE__*/React.createElement(Card,{className:\"border-0\"},this.props.Login.masterData.TrainingCertificate&&this.props.Login.masterData.TrainingCertificate.length>0&&this.props.Login.masterData.SelectedTrainingCertificate?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card.Header,null,/*#__PURE__*/React.createElement(Card.Title,null,/*#__PURE__*/React.createElement(\"h1\",{className:\"product-title-main\"},this.props.Login.masterData.SelectedTrainingCertificate.strainingtopic)),/*#__PURE__*/React.createElement(Card.Subtitle,{className:\"text-muted font-weight-normal\"},/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:10,className:\"d-flex no-padding\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"product-title-sub flex-grow-1\"},/*#__PURE__*/React.createElement(\"span\",{className:\"btn btn-outlined \".concat(userStatusCSS,\" btn-sm ml-3\")},this.props.Login.masterData.SelectedTrainingCertificate&&this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus===transactionStatus.ACTIVE?/*#__PURE__*/React.createElement(\"i\",{class:\"fas fa-check \"}):\"\",/*#__PURE__*/React.createElement(FormattedMessage,{id:this.props.Login.masterData.SelectedTrainingCertificate.sdisplaystatus||\"\"})))),/*#__PURE__*/React.createElement(Col,{md:2},/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex product-category float-right icon-group-wrap\"},/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(resheduleId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_RESCHEDULE\"})// data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.getTrainingCertificateComboService(resheduleId);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faClock,title:this.props.intl.formatMessage({id:\"IDS_RESCHEDULE\"})})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(conductId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_CONDUCT\"})// data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.onConductlick();}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faThumbsUp,title:this.props.intl.formatMessage({id:\"IDS_CONDUCT\"})})),/*#__PURE__*/React.createElement(Nav.Link,{className:\"btn btn-circle outline-grey mr-2\",hidden:this.state.userRoleControlRights.indexOf(cancelId)===-1,\"data-tip\":this.props.intl.formatMessage({id:\"IDS_TRAININGSCHEDULECANCEL\"})//   data-for=\"tooltip_list_wrap\"\n,onClick:function onClick(){return _this2.onCancelListClick();}},/*#__PURE__*/React.createElement(Reject,{className:\"custom_icons\",width:\"20\",height:\"20\"}))))))),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TRAININGCATEGORY\",message:\"Training Category\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedTrainingCertificate.strainingcategoryname))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TECHNIQUE\",message:\"Technique\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedTrainingCertificate.stechniquename))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TRAININGTOPIC\",message:\"Training Topic\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedTrainingCertificate.strainingtopic))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TRAININGDATE\",message:\"Training Date\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedTrainingCertificate.strainingdatetime))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TRAININGNAME\",message:\"Training Name\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,\" \",this.props.Login.masterData.SelectedTrainingCertificate.strainername))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TRAININGVENUE\",message:\"Venue\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,\" \",this.props.Login.masterData.SelectedTrainingCertificate.strainingvenue))),/*#__PURE__*/React.createElement(Col,{md:4},/*#__PURE__*/React.createElement(FormGroup,null,/*#__PURE__*/React.createElement(FormLabel,null,/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_TRAININGCOMMENTS\",message:\"Comments\"})),/*#__PURE__*/React.createElement(ReadOnlyText,null,this.props.Login.masterData.SelectedTrainingCertificate.scomments)))),/*#__PURE__*/React.createElement(TrainingCertificateParticipantsTab,{formatMessage:this.props.intl.formatMessage,operation:this.props.Login.operation,inputParam:this.props.Login.inputParam||[],screenName:this.props.Login.screenName,userInfo:this.props.Login.userInfo,masterData:this.props.Login.masterData,crudMaster:this.props.crudMaster,errorCode:this.props.Login.errorCode,masterStatus:this.props.Login.masterStatus,openChildModal:this.props.Login.openChildModal,updateStore:this.props.updateStore,selectedRecord:this.props.Login.selectedRecord,getTrainingParticipantsComboDataService:this.props.getTrainingParticipantsComboDataService,ncontrolCode:this.props.Login.ncontrolCode,userRoleControlRights:this.state.userRoleControlRights,esignRights:this.props.Login.userRoleControlRights,screenData:this.props.Login.screenData,validateEsignCredential:this.props.validateEsignCredential,loadEsign:this.props.Login.loadEsign,controlMap:this.state.controlMap,showAccordian:this.state.showAccordian,dataState:this.props.Login.dataState,selectedId:this.props.Login.selectedId,settings:this.props.Login.settings,nFlag:this.props.Login.nFlag}))):\"\"))))),this.props.Login.openModal&&/*#__PURE__*/React.createElement(SlideOutModal,{show:this.props.Login.openModal,closeModal:this.closeModal,operation:this.props.Login.operation===\"update\"?this.props.intl.formatMessage({id:\"IDS_RESCHEDULE\"}):this.props.Login.operation,inputParam:this.props.Login.inputParam||[],screenName:this.props.Login.screenName,onSaveClick:this.onSaveClick,esign:this.props.Login.loadEsign,validateEsign:this.validateEsign,masterStatus:this.props.Login.masterStatus,updateStore:this.props.updateStore,selectedRecord:this.state.selectedRecord||{},mandatoryFields:mandatoryFields,addComponent:this.props.Login.loadEsign?/*#__PURE__*/React.createElement(Esign,{operation:this.props.Login.operation,formatMessage:this.props.intl.formatMessage,onInputOnChange:this.onInputOnChange,inputParam:this.props.Login.inputParam,selectedRecord:this.state.selectedRecord||{}}):/*#__PURE__*/React.createElement(AddTrainingCertificate,{selectedRecord:this.state.selectedRecord||{},onInputOnChange:this.onInputOnChange,onComboChange:this.onComboChange,handleDateChange:this.handleDateChange,formatMessage:this.props.intl.formatMessage,trainingcategoryList:this.props.Login.trainingcategoryList||[],techniqueList:this.props.Login.techniqueList||[],timeZoneList:this.props.Login.timeZoneList||[],currentTime:this.props.Login.currentTime||[],selectedTrainingCertificate:this.props.Login.masterData.SelectedTrainingCertificate||{},operation:this.props.Login.operation,userLogged:this.props.Login.userLogged,inputParam:this.props.Login.inputParam,userInfo:this.props.Login.userInfo})}));}},{key:\"componentDidUpdate\",value:function componentDidUpdate(previousProps){if(this.props.Login.selectedRecord!==previousProps.Login.selectedRecord){this.setState({selectedRecord:this.props.Login.selectedRecord});}if(this.props.Login.userInfo.nformcode!==previousProps.Login.userInfo.nformcode){var userRoleControlRights=[];if(this.props.Login.userRoleControlRights){this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]&&Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(function(item){return userRoleControlRights.push(item.ncontrolcode);});}var controlMap=getControlMap(this.props.Login.userRoleControlRights,this.props.Login.userInfo.nformcode);this.setState({userRoleControlRights:userRoleControlRights,controlMap:controlMap});}}},{key:\"generateBreadCrumData\",value:function generateBreadCrumData(){var breadCrumbData=[];if(this.props.Login.masterData&&this.props.Login.masterData.FromDate){var obj=convertDateValuetoString(this.props.Login.masterData.FromDate,this.props.Login.masterData.ToDate,this.props.Login.userInfo);breadCrumbData.push({\"label\":\"IDS_FROM\",\"value\":obj.breadCrumbFrom},{\"label\":\"IDS_TO\",\"value\":obj.breadCrumbto});}return breadCrumbData;}},{key:\"componentWillUnmount\",value:function componentWillUnmount(){var updateInfo={typeName:DEFAULT_RETURN,data:{masterData:[],inputParam:undefined,operation:null,modalName:undefined}};this.props.updateStore(updateInfo);}// reloadData = () => {\n//     const startDate = this.state.selectedRecord[\"fromdate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.fromDate));\n//     const endDate = this.state.selectedRecord[\"todate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.toDate));\n//     const prevMonth = validateTwoDigitDate(String(startDate.getMonth()+1)); \n//     const currentMonth = validateTwoDigitDate(String(endDate.getMonth()+1));\n//     const prevDay = validateTwoDigitDate(String(startDate.getDate())); \n//     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\n//     const fromDate = startDate.getFullYear()+'-'+prevMonth+'-'+prevDay +\" 00:00:00\";\n//     const toDate = endDate.getFullYear()+'-'+currentMonth+'-'+currentDay + \" 23:59:00\" ;                    \n//     const inputParam = {\n//         inputData : {\"userinfo\":this.props.Login.userInfo,\n//                         fromDate, toDate,\n//                     },                        \n//                     classUrl: this.props.Login.inputParam.classUrl,\n//                     methodUrl: this.props.Login.inputParam.methodUrl,\n//                     displayName:this.props.Login.inputParam.displayName,\n//                     userInfo: this.props.Login.userInfo\n//                 };     \n//     this.props.callService(inputParam);\n//     // this.searchRef.current.value = \"\";\n//     // const inputParam = {\n//     //     inputData: { \"userinfo\": this.props.Login.userInfo },\n//     //     classUrl: \"trainingcertificate\",\n//     //     methodUrl: \"TrainingCertificate\",\n//     //     displayName: \"IDS_TRAININGcertificate\",\n//     //     userInfo: this.props.Login.userInfo\n//     // };\n//     // this.props.callService(inputParam);\n// }\n}],[{key:\"getDerivedStateFromProps\",value:function getDerivedStateFromProps(props,state){if(props.Login.masterStatus!==\"\"&&props.Login.masterStatus!==state.masterStatus){toast.warn(props.Login.masterStatus);props.Login.masterStatus=\"\";}if(props.Login.error!==state.error){toast.error(props.Login.error);props.Login.error=\"\";}if(props.Login.selectedRecord===undefined){return{selectedRecord:{}};}return null;}}]);return TrainingCertificate;}(React.Component);export default connect(mapStateToProps,{callService:callService,crudMaster:crudMaster,validateEsignCredential:validateEsignCredential,updateStore:updateStore,getTrainingCertificateDetail:getTrainingCertificateDetail,getTrainingCertificateComboService:getTrainingCertificateComboService,getTrainingParticipantsComboDataService:getTrainingParticipantsComboDataService,filterColumnData:filterColumnData,reloadTrainingCertificate:reloadTrainingCertificate})(injectIntl(TrainingCertificate));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/competencemanagement/trainingcertificate/TrainingandCertificate.jsx"],"names":["React","Row","Col","Card","Nav","FormGroup","FormLabel","FontAwesomeIcon","faPencilAlt","faTrashAlt","faThumbsUp","faUserLock","faClock","connect","injectIntl","FormattedMessage","toast","callService","crudMaster","validateEsignCredential","updateStore","getTrainingCertificateDetail","getTrainingCertificateComboService","getTrainingParticipantsComboDataService","filterColumnData","reloadTrainingCertificate","ReadOnlyText","ContentPanel","constructOptionList","getControlMap","showEsign","validateEmail","validatePhoneNumber","validateTwoDigitDate","convertDateValuetoString","formatInputDate","ListMaster","SlideOutModal","AddTrainingCertificate","Esign","DEFAULT_RETURN","BreadcrumbComponent","ListWrapper","transactionStatus","DateFilter","Affix","ConfirmMessage","TrainingCertificateParticipantsTab","mapStateToProps","state","Login","TrainingCertificate","props","resheduleId","masterData","SelectedTrainingCertificate","ntransactionstatus","CANCELLED","ntrainingcode","userInfo","warn","intl","formatMessage","id","openFilter","showFilter","updateInfo","typeName","data","closeFilter","onFilterSubmit","reloadData","isFilterSubmit","searchRef","current","value","fromDate","FromDate","toDate","ToDate","selectedRecord","undefined","obj","inputParam","inputData","currentDate","classUrl","methodUrl","displayName","onConductlick","ncontrolCode","controlMap","has","get","ncontrolcode","postParam","Value","inputListName","selectedObject","primaryKeyField","saveType","esignNeeded","userRoleControlRights","nformcode","loadEsign","screenData","openModal","operation","onCancelListClick","validateEsign","sreason","nreasoncode","spredefinedreason","label","password","closeModal","selectedId","onComboChange","comboData","fieldName","setState","onInputOnChange","event","target","type","name","checked","YES","NO","handleDateChange","dateName","dateValue","onSaveClick","formRef","JSON","parse","stringify","trainingcertificateFieldList","map","item","nmastersitecode","onTabChange","tabProps","screenName","isOpen","trainingcertificateData","TrainingParticipantsData","trainingcategoryList","techniqueList","masterStatus","error","userLogged","selectedTrainingCertificate","trainingparticipants","selectedTrainingParticipants","Map","showAccordian","TrainingParticipantscombo","trainingparticipantsList","createRef","confirmMessage","userStatusCSS","COMPLETED","CONDUCTED","addId","conductId","cancelId","filterParam","fetchUrl","fecthInputObject","userinfo","unchangeList","searchFieldList","validationColumnList","mandatoryFields","forEach","mandatory","push","breadCrumbDataDate","breadCrumbData","breadCrumbFrom","breadCrumbto","length","searchedData","trainingcertificate","strainingtopic","ACTIVE","sdisplaystatus","indexOf","strainingcategoryname","stechniquename","strainingdatetime","strainername","strainingvenue","scomments","errorCode","openChildModal","dataState","settings","nFlag","timeZoneList","currentTime","previousProps","Object","values","modalName","Component"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col, Card, Nav, FormGroup, FormLabel } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPencilAlt, faTrashAlt, faThumbsUp, faUserLock, faClock } from '@fortawesome/free-solid-svg-icons';//,faUserTimes, faTrash\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl, FormattedMessage } from 'react-intl';\r\nimport { toast } from 'react-toastify';\r\nimport {\r\n    callService, crudMaster, validateEsignCredential, updateStore, getTrainingCertificateDetail,\r\n    getTrainingCertificateComboService, getTrainingParticipantsComboDataService, filterColumnData, reloadTrainingCertificate,\r\n} from '../../../actions';\r\nimport { ReactComponent as Reject } from '../../../assets/image/reject.svg'\r\nimport { ReadOnlyText, ContentPanel } from '../../../components/App.styles';\r\nimport { constructOptionList, getControlMap, showEsign, validateEmail, validatePhoneNumber, validateTwoDigitDate, convertDateValuetoString, formatInputDate } from '../../../components/CommonScript';//searchData, sortData,\r\nimport ListMaster from '../../../components/list-master/list-master.component';\r\nimport SlideOutModal from '../../../components/slide-out-modal/SlideOutModal';\r\nimport AddTrainingCertificate from './AddTrainingCertificate'\r\nimport Esign from '../../../pages/audittrail/Esign';\r\nimport { DEFAULT_RETURN } from '../../../actions/LoginTypes';\r\nimport BreadcrumbComponent from '../../../components/Breadcrumb.Component';\r\nimport { ListWrapper } from '../../../components/client-group.styles';\r\nimport { transactionStatus } from '../../../components/Enumeration';\r\nimport DateFilter from '../../../components/DateFilter';\r\nimport { Affix } from 'rsuite';\r\nimport ConfirmMessage from '../../../components/confirm-alert/confirm-message.component';\r\n// import ReactTooltip from 'react-tooltip';\r\nimport TrainingCertificateParticipantsTab from './TrainingCertificateParticipantsTab';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass TrainingCertificate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        // const dataState = {\r\n        //     skip: 0,\r\n        //     take: 10,\r\n        // };\r\n\r\n        this.state = {\r\n            isOpen: false,\r\n            trainingcertificateData: [], TrainingParticipantsData: [],\r\n            trainingcategoryList: [], techniqueList: [],\r\n            masterStatus: \"\",\r\n            error: \"\",\r\n            selectedRecord: {},\r\n            operation: \"\",\r\n\r\n            screenName: undefined,\r\n            userLogged: true,\r\n            selectedTrainingCertificate: undefined,\r\n            trainingparticipants: [], selectedTrainingParticipants: [],\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            showAccordian: true,\r\n            TrainingParticipantscombo: [], trainingparticipantsList: []\r\n        };\r\n        this.searchRef = React.createRef();\r\n        this.confirmMessage = new ConfirmMessage();\r\n        this.trainingcertificateFieldList = ['strainername', 'strainingtopic', 'strainingvenue',\r\n            'dtrainingdatetime', 'ntransactionstatus', 'ntechniquecode', 'ntrainingcategorycode', 'stztrainingdate', 'scomments'];//'nmahcode',\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        if (props.Login.selectedRecord === undefined) {\r\n            return { selectedRecord: {} }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n                        //console.log('screen name:',this.props.Login.screenName,'operation ;',this.props.Login.operation)\r\n                        //console.log('selected r :', this.props.Login.inputParam)\r\n        let userStatusCSS = \"outline-secondary\";\r\n        if (this.props.Login.masterData.SelectedTrainingCertificate ? this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.COMPLETED\r\n            || this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CONDUCTED : false) {\r\n            userStatusCSS = \"outline-success\";\r\n        }\r\n        else if (this.props.Login.masterData.SelectedTrainingCertificate && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.CANCELLED) {\r\n            userStatusCSS = \"outline-danger\";\r\n        }\r\n\r\n        const addId = this.state.controlMap.has(\"AddTrainingCertificate\") && this.state.controlMap.get(\"AddTrainingCertificate\").ncontrolcode;\r\n        const resheduleId = this.state.controlMap.has(\"ResheduleTrainingCertificate\") && this.state.controlMap.get(\"ResheduleTrainingCertificate\").ncontrolcode;\r\n        const conductId = this.state.controlMap.has(\"ConductTrainingCertificate\") && this.state.controlMap.get(\"ConductTrainingCertificate\").ncontrolcode\r\n        const cancelId = this.state.controlMap.has(\"CancelTrainingCertificate\") && this.state.controlMap.get(\"CancelTrainingCertificate\").ncontrolcode\r\n\r\n        let obj = convertDateValuetoString(this.state.selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n            this.state.selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate),\r\n            this.props.Login.userInfo)\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        const filterParam = {\r\n            inputListName: \"TrainingCertificate\",\r\n            selectedObject: \"SelectedTrainingCertificate\",\r\n            primaryKeyField: \"ntrainingcode\",\r\n            fetchUrl: \"trainingcertificate/getTrainingCertificate\",\r\n            fecthInputObject: { userinfo: this.props.Login.userInfo, fromDate, toDate },\r\n            masterData: this.props.Login.masterData,\r\n            unchangeList: [\"FromDate\", \"ToDate\"],\r\n            searchFieldList: this.trainingcertificateFieldList\r\n\r\n\r\n        };\r\n        this.validationColumnList = [\r\n            { \"idsName\": \"IDS_TRAININGCATERGORY\", \"dataField\": \"ntrainingcategorycode\", \"width\": \"200px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_TECHNIQUE\", \"dataField\": \"ntechniquecode\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_TRAININGTPOIC\", \"dataField\": \"strainingtopic\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_TRAININGDATE\", \"dataField\": \"dtrainingdatetime\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_TIMEZONE\", \"dataField\": \"ntztrainingdate\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_SELECT\", \"controlType\": \"selectbox\" },\r\n            { \"idsName\": \"IDS_TRAINERNAME\", \"dataField\": \"strainername\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_TRAININGVENUE\", \"dataField\": \"strainingvenue\", \"width\": \"150px\", \"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n            { \"idsName\": \"IDS_COMMENTS\", \"dataField\": \"scomments\", \"width\": \"150px\",\"mandatory\": true, \"mandatoryLabel\": \"IDS_ENTER\", \"controlType\": \"textbox\" },\r\n\r\n        ]\r\n        const mandatoryFields = [];\r\n        this.validationColumnList.forEach(item => item.mandatory === true ?\r\n            mandatoryFields.push(item) : \"\"\r\n        );\r\n        let breadCrumbDataDate = convertDateValuetoString(this.props.Login.masterData && this.props.Login.masterData.FromDate,\r\n            this.props.Login.masterData && this.props.Login.masterData.ToDate,\r\n            this.props.Login.userInfo)\r\n\r\n        const breadCrumbData = [\r\n            {\r\n                \"label\": \"IDS_FROM\",\r\n                \"value\": breadCrumbDataDate.breadCrumbFrom\r\n            },\r\n            {\r\n                \"label\": \"IDS_TO\",\r\n                \"value\": breadCrumbDataDate.breadCrumbto\r\n            }\r\n        ];\r\n        return (\r\n            <>\r\n                <ListWrapper className=\"client-listing-wrap mtop-fixed-breadcrumb fixed_breadcrumd\">\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                    {breadCrumbData.length > 0 ?\r\n                        <Affix top={53}>\r\n                            <BreadcrumbComponent breadCrumbItem={breadCrumbData} />\r\n                        </Affix> : \"\"\r\n                    }\r\n                    {/* Start of get display*/}\r\n                    {/* <div className=\"client-listing-wrap mtop-4\"> */}\r\n                    {/* <ReactTooltip place=\"bottom\" globalEventOff='click' id=\"tooltip_list_wrap\" /> */}\r\n                    <Row noGutters={true}>\r\n                        <Col md={4}>\r\n                            <ListMaster\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                screenName={\"IDS_TRAININGCERTIFICATE\"}\r\n                                masterData={this.props.Login.masterData}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                masterList={this.props.Login.masterData.searchedData || this.props.Login.masterData.TrainingCertificate}\r\n                                getMasterDetail={(trainingcertificate) => this.props.getTrainingCertificateDetail(trainingcertificate, fromDate, toDate, this.props.Login.userInfo, this.props.Login.masterData)}\r\n                                selectedMaster={this.props.Login.masterData.SelectedTrainingCertificate}\r\n                                primaryKeyField=\"ntrainingcode\"\r\n                                mainField=\"strainingtopic\"\r\n                                firstField=\"strainingcategoryname\"\r\n                                secondField=\"sdisplaystatus\"\r\n                                isIDSField=\"Yes\"\r\n                                filterColumnData={this.props.filterColumnData}\r\n                                filterParam={filterParam}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                addId={addId}\r\n                                searchRef={this.searchRef}\r\n                                reloadData={this.reloadData}\r\n                                hidePaging={true}\r\n                                openModal={() => this.props.getTrainingCertificateComboService(\"IDS_TRAININGCERTIFICATE\", \"create\", \"ntrainingcode\", null, this.props.Login.masterData, this.props.Login.userInfo, addId)}\r\n                                showFilterIcon={true}\r\n                                showFilter={this.props.Login.showFilter}\r\n                                openFilter={this.openFilter}\r\n                                closeFilter={this.closeFilter}\r\n                                onFilterSubmit={this.onFilterSubmit}\r\n\r\n\r\n                                filterComponent={[\r\n                                    {\r\n                                        \"IDS_FILTER\":\r\n                                            <DateFilter\r\n                                                selectedRecord={this.state.selectedRecord || {}}\r\n                                                handleDateChange={this.handleDateChange}\r\n                                                fromDate={fromDate}\r\n                                                toDate={toDate}\r\n                                                userInfo={this.props.Login.userInfo}\r\n                                            />\r\n                                    }\r\n                                ]}\r\n                            />\r\n                        </Col>\r\n\r\n                        {/* <Row>\r\n                        <Col md={3}>\r\n                                <DateTimePicker\r\n                                        name={\"fromdate\"} \r\n                                        label={ this.props.intl.formatMessage({ id:\"IDS_FROM\"})}                     \r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"fromdate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.fromDate))}\r\n                                        dateFormat={\"dd/MM/yyyy\"}\r\n                                        isClearable={false}\r\n                                        onChange={date => this.handleDateChange(\"fromdate\", date)}\r\n                                        value={this.state.selectedRecord[\"fromdate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.fromDate))}\r\n                                                                        \r\n                                />\r\n                        </Col>\r\n                        <Col md={3}>\r\n                                <DateTimePicker\r\n                                        name={\"todate\"} \r\n                                        label={ this.props.intl.formatMessage({ id:\"IDS_TO\"})}                     \r\n                                        className='form-control'\r\n                                        placeholderText=\"Select date..\"\r\n                                        selected={this.state.selectedRecord[\"todate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.toDate))}\r\n                                        dateFormat={\"dd/MM/yyyy\"}\r\n                                        isClearable={false}                                        \r\n                                        onChange={date => this.handleDateChange(\"todate\", date)}\r\n                                        value={this.state.selectedRecord[\"todate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.toDate))}\r\n                                                                        \r\n                                />\r\n                        </Col>\r\n                        <Col></Col>\r\n                   </Row> */}\r\n\r\n                        <Col md={8}>\r\n                            <ContentPanel className=\"panel-main-content\">\r\n                                <Card className=\"border-0\">\r\n                                    {this.props.Login.masterData.TrainingCertificate && this.props.Login.masterData.TrainingCertificate.length > 0 && this.props.Login.masterData.SelectedTrainingCertificate ?\r\n                                        <>\r\n                                            <Card.Header>\r\n                                                <Card.Title>\r\n                                                    <h1 className=\"product-title-main\">{this.props.Login.masterData.SelectedTrainingCertificate.strainingtopic}</h1>\r\n                                                </Card.Title>\r\n                                                <Card.Subtitle className=\"text-muted font-weight-normal\">\r\n                                                    <Row>\r\n                                                        <Col md={10} className=\"d-flex no-padding\">\r\n                                                            <h2 className=\"product-title-sub flex-grow-1\">\r\n\r\n                                                                <span className={`btn btn-outlined ${userStatusCSS} btn-sm ml-3`}>\r\n                                                                    {this.props.Login.masterData.SelectedTrainingCertificate && this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.ACTIVE ? <i class=\"fas fa-check \"></i> : \"\"}\r\n                                                                    <FormattedMessage id={this.props.Login.masterData.SelectedTrainingCertificate.sdisplaystatus || \"\"} />\r\n                                                                </span>\r\n\r\n                                                            </h2>\r\n                                                        </Col>\r\n                                                        <Col md={2}>\r\n                                                            <div className=\"d-flex product-category float-right icon-group-wrap\">\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(resheduleId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_RESCHEDULE\" })}\r\n                                                                   // data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.getTrainingCertificateComboService(resheduleId)}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faClock} title={this.props.intl.formatMessage({ id: \"IDS_RESCHEDULE\" })} />\r\n                                                                </Nav.Link>\r\n\r\n\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(conductId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_CONDUCT\" })}\r\n                                                                   // data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.onConductlick()}\r\n                                                                >\r\n                                                                    <FontAwesomeIcon icon={faThumbsUp} title={this.props.intl.formatMessage({ id: \"IDS_CONDUCT\" })} />\r\n                                                                </Nav.Link>\r\n                                                                <Nav.Link className=\"btn btn-circle outline-grey mr-2\"\r\n                                                                    hidden={this.state.userRoleControlRights.indexOf(cancelId) === -1}\r\n                                                                    data-tip={this.props.intl.formatMessage({ id: \"IDS_TRAININGSCHEDULECANCEL\" })}\r\n                                                                 //   data-for=\"tooltip_list_wrap\"\r\n                                                                    onClick={() => this.onCancelListClick()}\r\n                                                                >\r\n                                                                    <Reject className=\"custom_icons\" width=\"20\" height=\"20\" />\r\n                                                                    {/* <FontAwesomeIcon icon={faUserLock} title={this.props.intl.formatMessage({ id: \"IDS_TRAININGSCHEDULECANCEL\" })} /> */}\r\n                                                                </Nav.Link>\r\n                                                            </div>\r\n\r\n                                                        </Col>\r\n                                                    </Row>\r\n                                                </Card.Subtitle>\r\n                                            </Card.Header>\r\n                                            <Card.Body>\r\n                                                {/* <Card.Text> */}\r\n                                                <Row>\r\n                                                <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGCATEGORY\" message=\"Training Category\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingcategoryname}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TECHNIQUE\" message=\"Technique\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.stechniquename}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGTOPIC\" message=\"Training Topic\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingtopic}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGDATE\" message=\"Training Date\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.strainingdatetime}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGNAME\" message=\"Training Name\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.SelectedTrainingCertificate.strainername}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGVENUE\" message=\"Venue\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.SelectedTrainingCertificate.strainingvenue}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n                                                    {/* <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININTIMEZONE\" message=\"Time Zone\" /></FormLabel>\r\n                                                            <ReadOnlyText> {this.props.Login.masterData.SelectedTrainingCertificate.ntztrainingdate}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col> */}\r\n                                                    <Col md={4}>\r\n                                                        <FormGroup>\r\n                                                            <FormLabel><FormattedMessage id=\"IDS_TRAININGCOMMENTS\" message=\"Comments\" /></FormLabel>\r\n                                                            <ReadOnlyText>{this.props.Login.masterData.SelectedTrainingCertificate.scomments}</ReadOnlyText>\r\n                                                        </FormGroup>\r\n                                                    </Col>\r\n\r\n                                                </Row>\r\n                                                <TrainingCertificateParticipantsTab formatMessage={this.props.intl.formatMessage}\r\n                                                    operation={this.props.Login.operation}\r\n                                                    inputParam={this.props.Login.inputParam|| []}\r\n                                                    screenName={this.props.Login.screenName}\r\n                                                    userInfo={this.props.Login.userInfo}\r\n                                                    masterData={this.props.Login.masterData}\r\n                                                    crudMaster={this.props.crudMaster}\r\n                                                    errorCode={this.props.Login.errorCode}\r\n                                                    masterStatus={this.props.Login.masterStatus}\r\n                                                    openChildModal={this.props.Login.openChildModal}\r\n                                                    updateStore={this.props.updateStore}\r\n                                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                                    getTrainingParticipantsComboDataService={this.props.getTrainingParticipantsComboDataService}\r\n                                                    ncontrolCode={this.props.Login.ncontrolCode}\r\n                                                    userRoleControlRights={this.state.userRoleControlRights}\r\n                                                    esignRights={this.props.Login.userRoleControlRights}\r\n                                                    screenData={this.props.Login.screenData}\r\n                                                    validateEsignCredential={this.props.validateEsignCredential}\r\n                                                    loadEsign={this.props.Login.loadEsign}\r\n                                                    controlMap={this.state.controlMap}\r\n                                                    showAccordian={this.state.showAccordian}\r\n                                                    dataState={this.props.Login.dataState}\r\n                                                    selectedId={this.props.Login.selectedId}\r\n                                                    settings={this.props.Login.settings}\r\n                                                    nFlag={this.props.Login.nFlag}\r\n\r\n                                                />\r\n                                            </Card.Body>\r\n                                        </>\r\n                                        : \"\"\r\n                                    }\r\n                                </Card>\r\n                            </ContentPanel>\r\n                        </Col>\r\n                    </Row>\r\n                </ListWrapper>\r\n\r\n\r\n                {this.props.Login.openModal &&\r\n                    <SlideOutModal show={this.props.Login.openModal}\r\n                        closeModal={this.closeModal}\r\n                        operation={this.props.Login.operation === \"update\" ? this.props.intl.formatMessage({ id:\"IDS_RESCHEDULE\"}) : this.props.Login.operation}\r\n                        inputParam={this.props.Login.inputParam || []}\r\n                        screenName={this.props.Login.screenName}\r\n                        onSaveClick={this.onSaveClick}\r\n                        esign={this.props.Login.loadEsign}\r\n                        validateEsign={this.validateEsign}\r\n                        masterStatus={this.props.Login.masterStatus}\r\n                        updateStore={this.props.updateStore}\r\n                        selectedRecord={this.state.selectedRecord || {}}\r\n                        mandatoryFields={mandatoryFields}\r\n                        addComponent={this.props.Login.loadEsign ?\r\n                            <Esign operation={this.props.Login.operation}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                            />\r\n                            : <AddTrainingCertificate\r\n                                selectedRecord={this.state.selectedRecord || {}}\r\n                                onInputOnChange={this.onInputOnChange}\r\n                                onComboChange={this.onComboChange}\r\n                                handleDateChange={this.handleDateChange}\r\n                                formatMessage={this.props.intl.formatMessage}\r\n                                trainingcategoryList={this.props.Login.trainingcategoryList || []}\r\n                                techniqueList={this.props.Login.techniqueList || []}\r\n                                timeZoneList={this.props.Login.timeZoneList || []}\r\n                                currentTime={this.props.Login.currentTime || []}\r\n                                selectedTrainingCertificate={this.props.Login.masterData.SelectedTrainingCertificate || {}}\r\n                                operation={this.props.Login.operation}\r\n                                userLogged={this.props.Login.userLogged}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                            />\r\n                        }\r\n                    />\r\n                }\r\n                {/* End of Modal Sideout for User Creation */}\r\n            </>\r\n        );\r\n    }\r\n\r\n\r\n    componentDidUpdate(previousProps) {\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n        if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n            const userRoleControlRights = [];\r\n            if (this.props.Login.userRoleControlRights) {\r\n                this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                    userRoleControlRights.push(item.ncontrolcode))\r\n            }\r\n            const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n            this.setState({ userRoleControlRights, controlMap });\r\n        }\r\n\r\n    }\r\n\r\n    getTrainingCertificateComboService = (resheduleId) => {\r\n\r\n        if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CANCELLED) {\r\n\r\n            this.props.getTrainingCertificateComboService(\"IDS_TRAININGCERTIFICATE\", \"update\", \"ntrainingcode\", this.props.Login.masterData.SelectedTrainingCertificate.ntrainingcode,\r\n                this.props.Login.masterData, this.props.Login.userInfo, resheduleId)\r\n\r\n        }\r\n        else {\r\n\r\n            toast.warn(this.props.intl.formatMessage({ id:\"IDS_TRAININGCANCELED\"}));\r\n        }\r\n    }\r\n    generateBreadCrumData() {\r\n        const breadCrumbData = [];\r\n\r\n        if (this.props.Login.masterData && this.props.Login.masterData.FromDate) {\r\n\r\n            let obj = convertDateValuetoString(this.props.Login.masterData.FromDate,\r\n                this.props.Login.masterData.ToDate,\r\n                this.props.Login.userInfo);\r\n\r\n            breadCrumbData.push(\r\n                {\r\n                    \"label\": \"IDS_FROM\",\r\n                    \"value\": obj.breadCrumbFrom\r\n                },\r\n                {\r\n                    \"label\": \"IDS_TO\",\r\n                    \"value\": obj.breadCrumbto\r\n                },\r\n            );\r\n        }\r\n        return breadCrumbData;\r\n    }\r\n\r\n    openFilter = () => {\r\n        let showFilter = !this.props.Login.showFilter\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n\r\n    closeFilter = () => {\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { showFilter: false }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    onFilterSubmit = () => {\r\n        this.reloadData(true);\r\n    }\r\n\r\n    reloadData = (isFilterSubmit) => {\r\n\r\n        this.searchRef.current.value = \"\";\r\n        // let obj = this.convertDatetoString(selectedRecord[\"fromdate\"] || (this.props.Login.masterData && this.props.Login.masterData.FromDate),\r\n        //     selectedRecord[\"todate\"] || (this.props.Login.masterData && this.props.Login.masterData.ToDate))\r\n\r\n        let fromDate = this.props.Login.masterData.FromDate;\r\n        let toDate = this.props.Login.masterData.ToDate;\r\n        if (isFilterSubmit) {\r\n            let selectedRecord = this.state.selectedRecord || {};\r\n            if (selectedRecord && selectedRecord[\"fromdate\"] !== undefined) {\r\n                fromDate = selectedRecord[\"fromdate\"];\r\n            }\r\n            if (selectedRecord && selectedRecord[\"todate\"] !== undefined) {\r\n                toDate = selectedRecord[\"todate\"];\r\n            }\r\n        }\r\n        //let obj = this.convertDatetoString(fromDate, toDate); \r\n        let obj = convertDateValuetoString(fromDate, toDate, this.props.Login.userInfo);\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate: obj.fromDate,\r\n                toDate: obj.toDate,\r\n                currentDate: null\r\n                //currentdate: isDateChange === true ? null : formatInputDate(new Date(), true)\r\n            },\r\n            classUrl: \"trainingcertificate\",\r\n            methodUrl: \"TrainingCertificate\",\r\n            displayName: \"IDS_TRAININGCERTIFICATE\",\r\n\r\n            userInfo: this.props.Login.userInfo\r\n        };\r\n        //this.props.callService(inputParam);\r\n        this.props.reloadTrainingCertificate(inputParam);\r\n    }\r\n\r\n    onConductlick = () => {\r\n        if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus !== transactionStatus.CANCELLED) {\r\n\r\n        const ncontrolCode = this.state.controlMap.has(\"ConductTrainingCertificate\") && this.state.controlMap.get(\"ConductTrainingCertificate\").ncontrolcode\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n\r\n        let postParam = undefined;\r\n        inputData[\"trainingcertificate\"] = { \"ntrainingcode\": this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"] ? this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"].Value : \"\" };\r\n        inputData[\"trainingcertificate\"] = this.props.Login.masterData.SelectedTrainingCertificate;\r\n        postParam = { inputListName: \"TrainingCertificate\", selectedObject: \"SelectedTrainingCertificate\", primaryKeyField: \"ntrainingcode\" };\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate, toDate,\r\n            },\r\n            classUrl: 'trainingcertificate',\r\n            methodUrl: \"TrainingCertificate\",\r\n            inputData: inputData,\r\n            operation: \"conduct\", postParam\r\n        }\r\n        let saveType;\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"conduct\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n    }\r\n    else {\r\n\r\n        toast.warn(this.props.intl.formatMessage({ id:\"IDS_TRAININGCANCELED\"}));\r\n    }\r\n    }\r\n\r\n    onCancelListClick = () => {\r\n        //if (this.props.Login.masterData.SelectedTrainingCertificate.ntransactionstatus === transactionStatus.DRAFT) {\r\n        const ncontrolCode = this.state.controlMap.has(\"CancelTrainingCertificate\") && this.state.controlMap.get(\"CancelTrainingCertificate\").ncontrolcode\r\n        let inputData = [];\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        //add               \r\n        let postParam = undefined;\r\n        inputData[\"trainingcertificate\"] = { \"ntrainingcode\": this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"] ? this.props.Login.masterData.SelectedTrainingCertificate[\"ntrainingcode\"].Value : \"\" };\r\n        inputData[\"trainingcertificate\"] = this.props.Login.masterData.SelectedTrainingCertificate;\r\n\r\n        postParam = { inputListName: \"TrainingCertificate\", selectedObject: \"SelectedTrainingCertificate\", primaryKeyField: \"ntrainingcode\" };\r\n\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate, toDate,\r\n            },\r\n            classUrl: 'trainingcertificate',\r\n            methodUrl: \"TrainingCertificate\",\r\n            inputData: inputData,\r\n            operation: \"cancel\", postParam\r\n        }\r\n        let saveType;\r\n\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType, openModal: true, operation: \"cancel\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason:this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n               \r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"conduct\"\r\n                || this.props.Login.operation === \"blackList\" || this.props.Login.operation === \"cancel\"\r\n                  || this.props.Login.operation === \"invite\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\";\r\n                selectedRecord['esigncomments'] = \"\";\r\n                selectedRecord['esignreason']=\"\";\r\n            }\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal, loadEsign, selectedRecord, selectedId: null }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    onComboChange = (comboData, fieldName) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = comboData;;\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onInputOnChange = (event) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (event.target.type === 'checkbox') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        }\r\n        else {\r\n            selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n\r\n        this.setState({ selectedRecord });\r\n    }\r\n    handleDateChange = (dateName, dateValue) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n\r\n\r\n        let inputData = [];\r\n        inputData[\"ncontrolcode\"] = this.props.Login.ncontrolCode;\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        let obj = convertDateValuetoString(this.props.Login.masterData.FromDate, this.props.Login.masterData.ToDate, this.props.Login.userInfo);\r\n\r\n        let fromDate = obj.fromDate;\r\n        let toDate = obj.toDate;\r\n        inputData[\"fromDate\"] = fromDate;\r\n        inputData[\"toDate\"] = toDate;\r\n\r\n        let postParam = undefined;\r\n        \r\n        if (this.props.Login.operation === \"update\") {\r\n            // edit\r\n            postParam = { inputListName: \"TrainingCertificate\", selectedObject: \"SelectedTrainingCertificate\", primaryKeyField: \"ntrainingcode\" };\r\n            inputData[\"trainingcertificate\"] = JSON.parse(JSON.stringify(this.props.Login.selectedRecord));\r\n\r\n            this.trainingcertificateFieldList.map(item => {\r\n                return inputData[\"trainingcertificate\"][item] = this.state.selectedRecord[item] ? this.state.selectedRecord[item] : \"\";\r\n            })\r\n        }\r\n        else {\r\n            //add               \r\n            inputData[\"trainingcertificate\"] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n\r\n            this.trainingcertificateFieldList.map(item => {\r\n                return inputData[\"trainingcertificate\"][item] = this.state.selectedRecord[item]\r\n            });\r\n            inputData[\"trainingcertificate\"][\"ntransactionstatus\"] = \"41\";\r\n\r\n        }\r\n        if (this.state.selectedRecord[\"dtrainingdatetime\"]) {\r\n            inputData[\"trainingcertificate\"][\"dtrainingdatetime\"] = formatInputDate(\r\n              this.state.selectedRecord[\"dtrainingdatetime\"],\r\n              false\r\n            );\r\n          }\r\n\r\n        inputData[\"trainingcertificate\"][\"ntrainingcategorycode\"] = this.state.selectedRecord[\"ntrainingcategorycode\"] ? this.state.selectedRecord[\"ntrainingcategorycode\"].value : \"-1\";\r\n        inputData[\"trainingcertificate\"][\"ntechniquecode\"] = this.state.selectedRecord[\"ntechniquecode\"] ? this.state.selectedRecord[\"ntechniquecode\"].value : \"-1\";\r\n        inputData[\"trainingcertificate\"][\"ntztrainingdate\"] = this.state.selectedRecord[\"ntztrainingdate\"] ? this.state.selectedRecord[\"ntztrainingdate\"].value : \"-1\";\r\n\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": this.props.Login.userInfo,\r\n                fromDate, toDate,\r\n            },\r\n            classUrl: \"trainingcertificate\", //this.props.Login.inputParam.classUrl,\r\n            methodUrl: \"TrainingCertificate\",\r\n            inputData: inputData,\r\n            operation: this.props.Login.operation,\r\n            saveType, formRef, postParam, searchRef: this.searchRef\r\n        }\r\n        const masterData = this.props.Login.masterData;\r\n\r\n        if (\r\n            showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData }, saveType\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n\r\n    componentWillUnmount() {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                masterData: [], inputParam: undefined, operation: null, modalName: undefined\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    // reloadData = () => {\r\n    //     const startDate = this.state.selectedRecord[\"fromdate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.fromDate));\r\n    //     const endDate = this.state.selectedRecord[\"todate\"] || (this.props.Login.inputParam && new Date(this.props.Login.inputParam.inputData.toDate));\r\n\r\n    //     const prevMonth = validateTwoDigitDate(String(startDate.getMonth()+1)); \r\n    //     const currentMonth = validateTwoDigitDate(String(endDate.getMonth()+1));\r\n    //     const prevDay = validateTwoDigitDate(String(startDate.getDate())); \r\n    //     const currentDay = validateTwoDigitDate(String(endDate.getDate()));\r\n\r\n    //     const fromDate = startDate.getFullYear()+'-'+prevMonth+'-'+prevDay +\" 00:00:00\";\r\n    //     const toDate = endDate.getFullYear()+'-'+currentMonth+'-'+currentDay + \" 23:59:00\" ;                    \r\n\r\n    //     const inputParam = {\r\n    //         inputData : {\"userinfo\":this.props.Login.userInfo,\r\n    //                         fromDate, toDate,\r\n    //                     },                        \r\n    //                     classUrl: this.props.Login.inputParam.classUrl,\r\n    //                     methodUrl: this.props.Login.inputParam.methodUrl,\r\n    //                     displayName:this.props.Login.inputParam.displayName,\r\n    //                     userInfo: this.props.Login.userInfo\r\n    //                 };     \r\n    //     this.props.callService(inputParam);\r\n\r\n    //     // this.searchRef.current.value = \"\";\r\n    //     // const inputParam = {\r\n    //     //     inputData: { \"userinfo\": this.props.Login.userInfo },\r\n    //     //     classUrl: \"trainingcertificate\",\r\n    //     //     methodUrl: \"TrainingCertificate\",\r\n\r\n    //     //     displayName: \"IDS_TRAININGcertificate\",\r\n    //     //     userInfo: this.props.Login.userInfo\r\n    //     // };\r\n\r\n    //     // this.props.callService(inputParam);\r\n    // }\r\n    onTabChange = (tabProps) => {\r\n        const screenName = tabProps.screenName;\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { screenName }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, validateEsignCredential,\r\n    updateStore, getTrainingCertificateDetail,\r\n    getTrainingCertificateComboService, getTrainingParticipantsComboDataService, filterColumnData, reloadTrainingCertificate\r\n})(injectIntl(TrainingCertificate));\r\n\r\n"]},"metadata":{},"sourceType":"module"}