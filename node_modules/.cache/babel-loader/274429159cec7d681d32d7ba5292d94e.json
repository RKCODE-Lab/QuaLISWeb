{"ast":null,"code":"import React from'react';import{Row,Col}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import CustomSwitch from'../../components/custom-switch/custom-switch.component';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import FormNumericInput from'../../components/form-numeric-input/form-numeric-input.component';import FormMultiSelect from'../../components/form-multi-select/form-multi-select.component';import{injectIntl}from'react-intl';var AddTestGroupTestMaterial=function AddTestGroupTestMaterial(props){return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nmaterialtypecode\",formLabel:props.intl.formatMessage({id:\"IDS_MATERIALTYPE\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.materialType,value:props.selectedRecord[\"nmaterialtypecode\"]?props.selectedRecord[\"nmaterialtypecode\"]:\"\",defaultValue:props.selectedRecord[\"nmaterialtypecode\"],isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'nmaterialtypecode',4);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nmaterialcatcode\",formLabel:props.intl.formatMessage({id:\"IDS_MATERIALCATEGORY\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.materialCategoryList,value:props.selectedRecord[\"nmaterialcatcode\"]?props.selectedRecord[\"nmaterialcatcode\"]:\"\",defaultValue:props.selectedRecord[\"nmaterialcatcode\"],isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'nmaterialcatcode',5);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormSelectSearch,{name:\"nmaterialcode\",formLabel:props.intl.formatMessage({id:\"IDS_MATERIALNAME\"}),placeholder:props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),options:props.materialList,value:props.selectedRecord[\"nmaterialcode\"]?props.selectedRecord[\"nmaterialcode\"]:\"\",defaultValue:props.selectedRecord[\"nmaterialcode\"],isMandatory:true,isMulti:false,isSearchable:true,isDisabled:false,closeMenuOnSelect:true,alphabeticalSort:true,onChange:function onChange(event){return props.onComboChange(event,'nmaterialcode',1);}})),/*#__PURE__*/React.createElement(Col,{md:12},/*#__PURE__*/React.createElement(FormTextarea,{label:props.intl.formatMessage({id:\"IDS_REMARKS\"}),name:\"sremarks\",type:\"text\",onChange:function onChange(event){return props.onInputOnChange(event,1);},placeholder:props.intl.formatMessage({id:\"IDS_REMARKS\"}),value:props.selectedRecord[\"sremarks\"],rows:\"2\",isMandatory:false,required:true,maxLength:\"255\"})));};export default injectIntl(AddTestGroupTestMaterial);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testgroup/AddTestGroupTestMaterial.jsx"],"names":["React","Row","Col","FormInput","CustomSwitch","FormSelectSearch","FormTextarea","FormNumericInput","FormMultiSelect","injectIntl","AddTestGroupTestMaterial","props","intl","formatMessage","id","materialType","selectedRecord","event","onComboChange","materialCategoryList","materialList","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\n\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormNumericInput from '../../components/form-numeric-input/form-numeric-input.component';\r\nimport FormMultiSelect from '../../components/form-multi-select/form-multi-select.component';\r\n\r\nimport {injectIntl } from 'react-intl';\r\n\r\n\r\nconst AddTestGroupTestMaterial = (props) => {\r\n    return (\r\n        <Row>\r\n           \r\n            <Col md={12}>\r\n            <FormSelectSearch\r\n                                   name={\"nmaterialtypecode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_MATERIALTYPE\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={props.materialType}\r\n                                   value={props.selectedRecord[\"nmaterialtypecode\"] ? props.selectedRecord[\"nmaterialtypecode\"] : \"\"}\r\n                                   defaultValue={props.selectedRecord[\"nmaterialtypecode\"]}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nmaterialtypecode',4)}                               \r\n                              />\r\n            </Col>\r\n            <Col md={12}>\r\n            <FormSelectSearch\r\n                                   name={\"nmaterialcatcode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_MATERIALCATEGORY\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.materialCategoryList}\r\n                                   value={props.selectedRecord[\"nmaterialcatcode\"] ? props.selectedRecord[\"nmaterialcatcode\"] : \"\"}\r\n                                   defaultValue={props.selectedRecord[\"nmaterialcatcode\"]}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nmaterialcatcode',5)}                               \r\n                              />\r\n            </Col>\r\n            <Col md={12}>\r\n            <FormSelectSearch\r\n                                   name={\"nmaterialcode\"}\r\n                                   formLabel={ props.intl.formatMessage({ id:\"IDS_MATERIALNAME\"})}                                \r\n                                   placeholder={props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}                                \r\n                                   options={ props.materialList}\r\n                                   value={props.selectedRecord[\"nmaterialcode\"] ? props.selectedRecord[\"nmaterialcode\"] : \"\"}\r\n                                   defaultValue={props.selectedRecord[\"nmaterialcode\"]}\r\n                                   isMandatory={true}\r\n                                   isMulti={false}\r\n                                   isSearchable={true}\r\n                                   isDisabled={false}\r\n                                   closeMenuOnSelect={true}\r\n                                   alphabeticalSort={true}\r\n                                   onChange = {(event)=> props.onComboChange(event, 'nmaterialcode',1)}                               \r\n                              />\r\n                   \r\n            \r\n            </Col>\r\n            \r\n            <Col md={12}>\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    name={\"sremarks\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event,1)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_REMARKS\" })}\r\n                    value ={ props.selectedRecord[\"sremarks\"]}\r\n                    rows=\"2\"                  \r\n                    isMandatory={false}\r\n                    required={true}\r\n                    maxLength={\"255\"}\r\n                />\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddTestGroupTestMaterial);"]},"metadata":{},"sourceType":"module"}