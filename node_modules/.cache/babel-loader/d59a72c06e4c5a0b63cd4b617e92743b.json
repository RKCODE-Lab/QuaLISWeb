{"ast":null,"code":"import { initRequest } from './LoginAction';\nimport rsapi from '../rsapi';\nimport { DEFAULT_RETURN } from './LoginTypes';\nimport { toast } from 'react-toastify';\nimport { replaceUpdatedObject } from '../components/CommonScript';\nexport function getIncidentMasterData(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"incident/getIncident\", inputParam.inputData).then(response => {\n      let responseData = response.data;\n      let masterData = { ...inputParam.masterData,\n        ...responseData,\n        searchedData: undefined\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport const getIncidentDetail = (OosMasterItem, userInfo, masterData) => {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"incident/getActiveIncidentById\", {\n      noosmastercode: OosMasterItem.noosmastercode,\n      userinfo: userInfo\n    }).then(response => {\n      masterData = { ...masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n};\nexport function onSaveIncidentWorkFlowTransaction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.inputData.classUrl + \"/\" + inputParam.inputData.operation + inputParam.inputData.methodUrl, inputParam.inputData.formData).then(response => {\n      const masterData = { ...inputParam.inputData.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response && error.response.status === 500) {\n        toast.error(error.message);\n      } else if (error.response === undefined) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function onUpdateIncidentWorkFlowTransaction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false,\n          selectedId: \"\",\n          scomments: \"\",\n          sadditionalcomments: \"\"\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response && error.response.status === 500) {\n        toast.error(error.message);\n      } else if (error.response === undefined) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function onSaveIncidentChecklistQb(inputParam) {\n  return function (dispatch) {\n    let listResultCheckList = [];\n\n    if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\n      inputParam.selectedRecord.editedQB.map(qbcode => listResultCheckList.push(inputParam.selectedRecord[qbcode]));\n      let inputParamData = {\n        noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\n        OOSChecklistQb: {\n          jsondata: inputParam.selectedRecord.jsondata,\n          noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode\n        },\n        userinfo: inputParam.inputData.userinfo,\n        ncontrolcode: -1\n      };\n      dispatch(initRequest(true));\n      rsapi.post(\"incident/createIncidentChecklistQb\", inputParamData).then(response => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            selectedRecord: {},\n            selectedId: \"\",\n            templateData: undefined,\n            openModal: false,\n            loading: false,\n            loadEsign: false\n          }\n        });\n      }).catch(error => {\n        dispatch({\n          type: DEFAULT_RETURN,\n          payload: {\n            loading: false,\n            loadEsign: false\n          }\n        });\n\n        if (error.response.status === 500) {\n          toast.error(error.message);\n        } else {\n          toast.warn(error.response.data);\n        }\n      });\n    } else {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          openTemplateModal: false,\n          selectedRecord: {},\n          loading: false,\n          loadEsign: false\n        }\n      });\n    }\n  };\n}\nexport function deleteIncidentWorkFlowTransaction(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData).then(response => {\n      const masterData = { ...inputParam.masterData,\n        ...response.data\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response && error.response.status === 500) {\n        toast.error(error.message);\n      } else if (error.response === undefined) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function getIncidentDetailsData(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData).then(response => {\n      let responseData = response.data;\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          screenName: inputParam.screenName,\n          openModal: true,\n          operation: inputParam.operation\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function onSaveIncident(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData).then(response => {\n      inputParam.searchRef.current.value = \"\";\n      let responseData = response.data;\n      let masterData = { ...inputParam.masterData,\n        ...responseData\n      };\n      masterData[\"searchedData\"] = undefined;\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          openModal: false,\n          selectedRecord: {}\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function openCloseIncident(inputParam) {\n  return function (dispatch) {\n    dispatch(initRequest(true));\n    rsapi.post(\"incident/openCloseIncident\", inputParam.inputData).then(response => {\n      let OosMaster = inputParam.masterData.OosMaster;\n      let searchedData = inputParam.masterData.searchedData;\n\n      if (response.data && response.data.selectedOosMaster && response.data.selectedOosMaster != null) {\n        OosMaster = replaceUpdatedObject([response.data.selectedOosMaster], OosMaster, \"noosmastercode\");\n        searchedData = replaceUpdatedObject([response.data.selectedOosMaster], searchedData, \"noosmastercode\");\n      }\n\n      const masterData = { ...inputParam.masterData,\n        ...response.data,\n        ...OosMaster,\n        ...searchedData\n      };\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          masterData,\n          loading: false,\n          loadEsignStateHandle: false,\n          openModal: false\n        }\n      });\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.warn(error.response.data);\n      }\n    });\n  };\n}\nexport function validateEsignforIncident(inputParam) {\n  return dispatch => {\n    dispatch(initRequest(true));\n    return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData).then(response => {\n      if (response.data === \"Success\") {\n        dispatch(dispatchMethods(inputParam[\"screenData\"]));\n      }\n    }).catch(error => {\n      dispatch({\n        type: DEFAULT_RETURN,\n        payload: {\n          loading: false\n        }\n      });\n\n      if (error.response.status === 500) {\n        toast.error(error.message);\n      } else {\n        toast.info(error.response.data);\n      }\n    });\n  };\n}\n\nfunction dispatchMethods(screenData) {\n  return dispatch => {\n    let operation = screenData.inputParam.inputData.operation;\n\n    switch (operation) {\n      case \"close\":\n        dispatch(openCloseIncident(screenData.inputParam));\n        break;\n\n      default:\n        break;\n    }\n  };\n}","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/actions/IncidentAction.js"],"names":["initRequest","rsapi","DEFAULT_RETURN","toast","replaceUpdatedObject","getIncidentMasterData","inputParam","dispatch","post","inputData","then","response","responseData","data","masterData","searchedData","undefined","type","payload","loading","catch","error","status","message","warn","getIncidentDetail","OosMasterItem","userInfo","noosmastercode","userinfo","onSaveIncidentWorkFlowTransaction","classUrl","operation","methodUrl","formData","openModal","onUpdateIncidentWorkFlowTransaction","selectedId","scomments","sadditionalcomments","onSaveIncidentChecklistQb","listResultCheckList","selectedRecord","jsondata","editedQB","map","qbcode","push","inputParamData","noosworkflowtransactioncode","OOSChecklistQb","ncontrolcode","templateData","loadEsign","openTemplateModal","deleteIncidentWorkFlowTransaction","getIncidentDetailsData","screenName","onSaveIncident","searchRef","current","value","openCloseIncident","OosMaster","selectedOosMaster","loadEsignStateHandle","validateEsignforIncident","dispatchMethods","info","screenData"],"mappings":"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","sourcesContent":["import { initRequest } from './LoginAction';\r\nimport rsapi from '../rsapi';\r\nimport { DEFAULT_RETURN } from './LoginTypes';\r\nimport { toast } from 'react-toastify';\r\nimport { replaceUpdatedObject } from '../components/CommonScript';\r\n\r\nexport function getIncidentMasterData(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"incident/getIncident\", inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = response.data;\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                    searchedData: undefined\r\n                }\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport const getIncidentDetail = (OosMasterItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"incident/getActiveIncidentById\", { noosmastercode: OosMasterItem.noosmastercode, userinfo: userInfo })\r\n            .then(response => {\r\n                masterData = { ...masterData, ...response.data };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport function onSaveIncidentWorkFlowTransaction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.inputData.classUrl + \"/\" + inputParam.inputData.operation + inputParam.inputData.methodUrl, inputParam.inputData.formData)\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...inputParam.inputData.masterData,\r\n                    ...response.data\r\n                };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function onUpdateIncidentWorkFlowTransaction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data\r\n                };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false,\r\n                            selectedId: \"\",\r\n                            scomments: \"\",\r\n                            sadditionalcomments: \"\"\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function onSaveIncidentChecklistQb(inputParam) {\r\n    return function (dispatch) {\r\n        let listResultCheckList = [];\r\n        if (inputParam.selectedRecord && inputParam.selectedRecord.jsondata) {\r\n            inputParam.selectedRecord.editedQB.map(qbcode =>\r\n                listResultCheckList.push(inputParam.selectedRecord[qbcode]))\r\n            let inputParamData = {\r\n                noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\r\n                OOSChecklistQb: {\r\n                    jsondata: inputParam.selectedRecord.jsondata,\r\n                    noosworkflowtransactioncode: inputParam.inputData.noosworkflowtransactioncode,\r\n                },\r\n                userinfo: inputParam.inputData.userinfo,\r\n                ncontrolcode: -1\r\n            }\r\n            dispatch(initRequest(true));\r\n            rsapi.post(\"incident/createIncidentChecklistQb\", inputParamData)\r\n                .then(response => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            selectedRecord: {},\r\n                            selectedId: \"\",\r\n                            templateData: undefined,\r\n                            openModal: false,\r\n                            loading: false,\r\n                            loadEsign: false\r\n                        }\r\n                    })\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false,\r\n                            loadEsign: false\r\n                        }\r\n                    })\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                })\r\n        } else {\r\n            dispatch({\r\n                type: DEFAULT_RETURN,\r\n                payload: {\r\n                    openTemplateModal: false,\r\n                    selectedRecord: {},\r\n                    loading: false,\r\n                    loadEsign: false\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteIncidentWorkFlowTransaction(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data\r\n                };\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response && error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else if (error.response === undefined) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\nexport function getIncidentDetailsData(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                let responseData = response.data;\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData,\r\n                }\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            screenName: inputParam.screenName,\r\n                            openModal: true,\r\n                            operation: inputParam.operation\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport function onSaveIncident(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(inputParam.classUrl + \"/\" + inputParam.operation + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                inputParam.searchRef.current.value = \"\";\r\n                let responseData = response.data;\r\n                let masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...responseData\r\n                }\r\n                masterData[\"searchedData\"] = undefined;\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            openModal: false,\r\n                            selectedRecord: {},\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport function openCloseIncident(inputParam) {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"incident/openCloseIncident\", inputParam.inputData)\r\n            .then(response => {\r\n                let OosMaster = inputParam.masterData.OosMaster;\r\n                let searchedData = inputParam.masterData.searchedData;\r\n                if (response.data && response.data.selectedOosMaster && response.data.selectedOosMaster != null) {\r\n                    OosMaster = replaceUpdatedObject([response.data.selectedOosMaster], OosMaster, \"noosmastercode\");\r\n                    searchedData = replaceUpdatedObject([response.data.selectedOosMaster], searchedData, \"noosmastercode\");\r\n                }\r\n                const masterData = {\r\n                    ...inputParam.masterData,\r\n                    ...response.data,\r\n                    ...OosMaster,\r\n                    ...searchedData\r\n                }\r\n                dispatch(\r\n                    {\r\n                        type: DEFAULT_RETURN, payload: {\r\n                            masterData,\r\n                            loading: false,\r\n                            loadEsignStateHandle: false,\r\n                            openModal: false\r\n                        }\r\n                    }\r\n                )\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                } else {\r\n                    toast.warn(error.response.data);\r\n                }\r\n            }\r\n            )\r\n    }\r\n}\r\n\r\nexport function validateEsignforIncident(inputParam) {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        return rsapi.post(\"login/validateEsignCredential\", inputParam.inputData)\r\n            .then(response => {\r\n                if (response.data === \"Success\") {\r\n                    dispatch(dispatchMethods(inputParam[\"screenData\"]))\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n                if (error.response.status === 500) {\r\n                    toast.error(error.message);\r\n                }\r\n                else {\r\n                    toast.info(error.response.data);\r\n                }\r\n            })\r\n    };\r\n}\r\n\r\nfunction dispatchMethods(screenData) {\r\n    return (dispatch) => {\r\n        let operation = screenData.inputParam.inputData.operation\r\n        switch (operation) {\r\n            case \"close\":\r\n                dispatch(openCloseIncident(screenData.inputParam));\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}