{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5500\\\\QuaLISWeb\\\\src\\\\pages\\\\product\\\\AddComponent.jsx\";\nimport React from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport FormInput from '../../components/form-input/form-input.component';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\nimport { transactionStatus } from '../../components/Enumeration';\nimport { injectIntl } from 'react-intl';\n\nconst AddComponent = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.genericLabel && props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],\n    name: \"scomponentname\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.genericLabel && props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode],\n    value: props.selectedRecord ? props.selectedRecord[\"scomponentname\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"sdescription\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord && props.selectedRecord[\"sdescription\"] !== \"null\" ? props.selectedRecord[\"sdescription\"] : \"\",\n    rows: \"3\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(CustomSwitch, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    type: \"switch\",\n    name: \"ndefaultstatus\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DEFAULTSTATUS\"\n    }),\n    defaultValue: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES ? true : false : true,\n    error: \"\",\n    rows: \"4\",\n    required: false,\n    checked: props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES ? true : false : true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default injectIntl(AddComponent);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5500/QuaLISWeb/src/pages/product/AddComponent.jsx"],"names":["React","Row","Col","FormInput","FormTextarea","CustomSwitch","transactionStatus","injectIntl","AddComponent","props","genericLabel","userInfo","slanguagetypecode","event","onInputOnChange","selectedRecord","intl","formatMessage","id","YES"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport CustomSwitch from '../../components/custom-switch/custom-switch.component';\r\nimport { transactionStatus } from '../../components/Enumeration';\r\nimport { injectIntl } from 'react-intl';\r\n\r\n\r\nconst AddComponent = (props) => {\r\n    return (\r\n        <Row>\r\n\r\n            <Col md={12}>\r\n                <FormInput\r\n                    label={props.genericLabel &&  props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                    name={\"scomponentname\"}\r\n                    type=\"text\"\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.genericLabel && props.genericLabel[\"Component\"][\"jsondata\"][\"sdisplayname\"][props.userInfo.slanguagetypecode]}\r\n                    value={props.selectedRecord ? props.selectedRecord[\"scomponentname\"] : \"\"}\r\n                    isMandatory={true}\r\n                    required={true}\r\n                    maxLength={\"100\"}\r\n                />\r\n                <FormTextarea\r\n                    label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    name={\"sdescription\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                    value={props.selectedRecord && props.selectedRecord[\"sdescription\"] !== \"null\" ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                    rows=\"3\"\r\n                    isMandatory={false}\r\n                    required={false}\r\n                    maxLength={\"255\"}\r\n                >\r\n                </FormTextarea>\r\n                <CustomSwitch\r\n                    label={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    type=\"switch\"\r\n                    name={\"ndefaultstatus\"}\r\n                    onChange={(event) => props.onInputOnChange(event)}\r\n                    placeholder={props.intl.formatMessage({ id: \"IDS_DEFAULTSTATUS\" })}\r\n                    defaultValue={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES ? true : false : true}\r\n                    error={\"\"}\r\n                    rows=\"4\"\r\n                    required={false}\r\n                    checked={props.selectedRecord ? props.selectedRecord[\"ndefaultstatus\"] === transactionStatus.YES ? true : false : true}\r\n\r\n                >\r\n                </CustomSwitch>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\nexport default injectIntl(AddComponent);"]},"metadata":{},"sourceType":"module"}