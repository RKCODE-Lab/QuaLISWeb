{"ast":null,"code":"var _jsxFileName = \"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\src\\\\pages\\\\dynamicmaster\\\\DynamicMaster.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { injectIntl } from 'react-intl';\nimport { Row, Col } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { process } from '@progress/kendo-data-query';\nimport DynamicDataGrid from '../../components/data-grid/data-grid.component';\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\nimport Esign from '../../pages/audittrail/Esign';\nimport { callService, crudMaster, updateStore, validateEsignCredential, getEditDynamicMasterCombo, //fetchRecord,\ngetDynamicMasterCombo, getChildValues, addMasterRecord, getAddMasterCombo, getDynamicMasterTempalte, getChildComboMaster, getChildValuesForAddMaster, getEditMaster, viewAttachment } from '../../actions';\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\nimport { showEsign, getControlMap, deleteAttachmentDropZone, getSameRecordFromTwoArrays, onDropAttachFileList, convertDateTimetoString, create_UUID, validateEmail, formatDate, sortData, ageCalculate, formatInputDate, extractFieldHeader, childComboClear, Lims_JSON_stringify, conditionBasedInput } from '../../components/CommonScript';\nimport { ListWrapper } from '../../components/client-group.styles';\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout.jsx';\nimport { designComponents, transactionStatus } from '../../components/Enumeration';\nimport { getFieldSpecification } from '../../components/type2component/Type2FieldSpecificationList';\nimport AddMasterRecords from '../dynamicpreregdesign/AddMasterRecords';\nimport { getFieldSpecification as getFieldSpecification1 } from '../../components/type1component/Type1FieldSpecificationList';\nimport { getFieldSpecification as getFieldSpecification3 } from '../../components/type3component/Type3FieldSpecificationList';\nimport ImportTemplate from './ImportTemplate';\n\nconst mapStateToProps = state => {\n  return {\n    Login: state.Login\n  };\n};\n\nclass DynamicMaster extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.dataStateChange = event => {\n      this.setState({\n        dataResult: process(this.state.data || [], event.dataState),\n        dataState: event.dataState\n      });\n    };\n\n    this.removeIndex = (data, removeIndex) => {\n      const data1 = [...data.splice(0, removeIndex), ...data.splice(removeIndex + 1)];\n      return data1;\n    };\n\n    this.closeModal = () => {\n      let loadEsign = this.props.Login.loadEsign;\n      let openModal = this.props.Login.openModal;\n      let selectedRecord = this.props.Login.selectedRecord;\n      let selectedMaster = this.props.Login.selectedMaster;\n      let selectedControl = this.props.Login.selectedControl;\n      let masterextractedColumnList = this.props.Login.masterextractedColumnList;\n      let masterfieldList = this.props.Login.masterfieldList;\n      let masterdataList = this.props.Login.masterfieldList;\n      let mastercomboComponents = this.props.Login.masterfieldList;\n      let masterwithoutCombocomponent = this.props.Login.masterfieldList;\n      let masterComboColumnFiled = this.props.Login.masterComboColumnFiled;\n      let masterOperation = this.props.Login.masterOperation;\n      let masterEditObject = this.props.Login.masterEditObject;\n      let masterDesign = this.props.Login.masterDesign;\n      let addMaster = this.props.Login.addMaster;\n      let masterIndex = this.props.Login.masterIndex;\n      let screenName = this.props.Login.screenName;\n\n      if (this.props.Login.loadEsign) {\n        if (this.props.Login.operation === \"delete\") {\n          loadEsign = false;\n          openModal = false;\n          selectedRecord = {};\n        } else {\n          loadEsign = false;\n          selectedRecord['esignpassword'] = \"\";\n          selectedRecord['esigncomments'] = \"\";\n          selectedRecord['esignreason'] = \"\";\n        }\n      } else if (this.props.Login.addMaster) {\n        if (masterIndex !== 0) {\n          screenName = selectedControl[masterIndex - 1].displayname[this.props.Login.userInfo.slanguagetypecode];\n          selectedMaster = this.removeIndex(selectedMaster, masterIndex);\n          selectedControl = this.removeIndex(selectedControl, masterIndex);\n          masterextractedColumnList = masterextractedColumnList && this.removeIndex(masterextractedColumnList, masterIndex);\n          masterfieldList = masterfieldList && this.removeIndex(masterfieldList, masterIndex);\n          masterdataList = masterdataList && this.removeIndex(masterdataList, masterIndex);\n          mastercomboComponents = mastercomboComponents && this.removeIndex(mastercomboComponents, masterIndex);\n          masterComboColumnFiled = masterComboColumnFiled && this.removeIndex(masterComboColumnFiled, masterIndex);\n          masterwithoutCombocomponent = masterwithoutCombocomponent && this.removeIndex(masterwithoutCombocomponent, masterIndex);\n          masterDesign = masterDesign && this.removeIndex(masterDesign, masterIndex);\n          masterOperation = masterOperation && this.removeIndex(masterOperation, masterIndex);\n          masterEditObject = masterEditObject && this.removeIndex(masterEditObject, masterIndex);\n          masterIndex = masterIndex - 1; //  masterprimaryKeyField = \"\"\n          //addMaster = false\n        } else {\n          selectedMaster = [];\n          selectedControl = [];\n          masterextractedColumnList = [];\n          masterfieldList = [];\n          addMaster = false;\n          masterdataList = [];\n          mastercomboComponents = [];\n          masterwithoutCombocomponent = [];\n          masterComboColumnFiled = [];\n          masterDesign = [];\n          masterOperation = [];\n          masterEditObject = [];\n          masterIndex = undefined;\n          screenName = this.props.Login.inputParam.displayName;\n        }\n      } else {\n        openModal = false;\n        selectedRecord = {};\n        selectedMaster = [];\n        selectedControl = [];\n        masterextractedColumnList = [];\n        masterfieldList = [];\n        addMaster = false;\n        masterdataList = [];\n        mastercomboComponents = [];\n        masterwithoutCombocomponent = [];\n        masterComboColumnFiled = [];\n        masterDesign = [];\n        masterOperation = [];\n        masterEditObject = [];\n        masterIndex = undefined;\n      }\n\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal,\n          loadEsign,\n          selectedRecord,\n          selectedId: null,\n          selectedMaster,\n          selectedControl,\n          masterextractedColumnList,\n          masterfieldList,\n          addMaster,\n          masterIndex,\n          masterdataList,\n          mastercomboComponents,\n          masterwithoutCombocomponent,\n          masterComboColumnFiled,\n          masterDesign,\n          screenName,\n          masterOperation,\n          masterEditObject\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.onSaveClickImportFile = (saveType, formRef) => {\n      //add \n      let inputFileData = {\n        nsitecode: this.props.Login.userInfo.nmastersitecode\n      };\n      let editData = {};\n      const formData = new FormData();\n      const selectedRecord = this.state.selectedRecord;\n      const acceptedFiles = selectedRecord.stemplatefilename;\n\n      if (acceptedFiles && acceptedFiles.length === 1) {\n        inputFileData['userinfo'] = this.props.Login.userInfo;\n\n        if (acceptedFiles && acceptedFiles.length === 1) {\n          acceptedFiles.forEach((file, index) => {\n            formData.append(\"uploadedFile\", file);\n          });\n        }\n\n        const dateList = [];\n        this.props.Login.masterData.DynamicMasterDesign.screendesign.masterdatefields.map(x => {\n          dateList.push(x['2']);\n        });\n        let mandatoryfields = {};\n        this.state.mandatoryFields.map(x => {\n          mandatoryfields[x.dataField] = x.mandatory;\n        });\n        formData.append('mandatoryFields', Lims_JSON_stringify(JSON.stringify(mandatoryfields), false));\n        formData.append('comboComponents', Lims_JSON_stringify(JSON.stringify(this.state.comboComponents), false));\n        formData.append('masterdateconstraints', Lims_JSON_stringify(JSON.stringify(this.props.Login.masterData.DynamicMasterDesign.screendesign.masterdateconstraints), false));\n        formData.append('masterdatelist', Lims_JSON_stringify(JSON.stringify(dateList), false));\n        formData.append('mastercombinationunique', Lims_JSON_stringify(JSON.stringify(this.props.Login.masterData.DynamicMasterDesign.screendesign.mastercombinationunique), false));\n        formData.append('ndesigntemplatemappingcode', this.props.Login.masterData.DynamicMasterDesign.ndesigntemplatemappingcode);\n        const inputParam = {\n          classUrl: this.props.Login.inputParam.classUrl,\n          methodUrl: this.props.Login.inputParam.methodUrl,\n          inputData: {\n            userinfo: this.props.Login.userInfo\n          },\n          formData: formData,\n          editData: editData,\n          isFileupload: true,\n          operation: this.props.Login.operation,\n          displayName: this.props.Login.inputParam.displayName,\n          saveType,\n          formRef\n        };\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n        if (esignNeeded) {\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              loadEsign: true,\n              screenData: {\n                inputParam,\n                masterData: this.props.Login.masterData\n              },\n              openModal: true,\n              screenName: this.props.intl.formatMessage({\n                id: this.props.Login.inputParam.displayName\n              }),\n              operation: this.props.Login.operation\n            }\n          };\n          this.props.updateStore(updateInfo);\n        } else {\n          this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_PLEASESELECTTHEFILE\"\n        }));\n      }\n    };\n\n    this.onComboChangeMasterDyanmic = (comboData, control, customName) => {\n      let comboName = customName || control.label;\n      let selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {}; //if (comboData) {\n\n      comboData[\"item\"] = { ...comboData[\"item\"],\n        \"pkey\": control.valuemember,\n        \"nquerybuildertablecode\": control.nquerybuildertablecode,\n        \"source\": control.source\n      };\n      selectedMaster[masterIndex][comboName] = comboData; // console.log(\"selected:\", selectedMaster, comboData, control, customName);\n\n      if (control.child && control.child.length > 0) {\n        const childComboList = getSameRecordFromTwoArrays(this.props.Login.mastercomboComponents[masterIndex], control.child, \"label\");\n        let childColumnList = {};\n        childComboList.map(columnList => {\n          const val = this.comboChild(this.props.Login.mastercomboComponents[masterIndex], columnList, childColumnList, false);\n          childColumnList = val.childColumnList;\n        });\n        const parentList = getSameRecordFromTwoArrays(this.props.Login.masterwithoutCombocomponent[masterIndex], control.child, \"label\");\n\n        if (comboData) {\n          const inputParem = {\n            child: control.child,\n            source: control.source,\n            primarykeyField: control.valuemember,\n            value: comboData.value,\n            item: comboData.item\n          };\n          this.props.getChildValuesForAddMaster(inputParem, this.props.Login.userInfo, selectedMaster, this.props.Login.masterdataList, childComboList, childColumnList, this.props.Login.masterwithoutCombocomponent, [...childComboList, ...parentList], masterIndex);\n        } else {\n          let comboData = this.props.Login.masterdataList;\n          const withoutCombocomponent = this.props.Login.masterwithoutCombocomponent || [];\n          const inputParam = {\n            control,\n            comboComponents: this.props.Login.mastercomboComponents[masterIndex],\n            withoutCombocomponent: withoutCombocomponent[masterIndex],\n            selectedMaster: selectedMaster[masterIndex],\n            comboData: comboData[masterIndex]\n          };\n          const childParam = childComboClear(inputParam);\n          selectedMaster[masterIndex] = childParam.selectedRecord;\n          comboData[masterIndex] = childParam.comboData;\n          const updateInfo = {\n            typeName: DEFAULT_RETURN,\n            data: {\n              selectedMaster,\n              mastedataList: comboData\n            }\n          };\n          this.props.updateStore(updateInfo);\n        }\n      } else {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedMaster\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onInputOnChangeMasterDynamic = (event, control, radiotext) => {\n      let selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {};\n\n      if (event.target.type === 'toggle') {\n        selectedMaster[masterIndex][event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'numeric') {\n        if (/\\D/.test(event.target.value)) selectedMaster[masterIndex][event.target.name] = event.target.value;\n      } else if (event.target.type === 'checkbox') {\n        const value = selectedMaster[masterIndex][event.target.name];\n\n        if (value !== '' && value !== undefined) {\n          if (value.includes(radiotext)) {\n            const index = value.indexOf(radiotext);\n\n            if (index !== -1) {\n              if (index === 0) {\n                const indexcomma = value.indexOf(\",\");\n\n                if (indexcomma !== -1) {\n                  selectedMaster[masterIndex][event.target.name] = value.slice(indexcomma + 1);\n                } else {\n                  selectedMaster[masterIndex][event.target.name] = \"\";\n                }\n              } else {\n                if (value.slice(index).indexOf(\",\") !== -1) {\n                  selectedMaster[masterIndex][event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1);\n                } else {\n                  selectedMaster[masterIndex][event.target.name] = value.slice(0, index - 1);\n                }\n              }\n            }\n          } else {\n            selectedMaster[masterIndex][event.target.name] = value + ',' + radiotext;\n          }\n        } else {\n          selectedMaster[masterIndex][event.target.name] = radiotext;\n        }\n      } else if (event.target.type === 'radio') {\n        selectedMaster[masterIndex][event.target.name] = radiotext;\n      } else {\n        selectedMaster[masterIndex][event.target.name] = conditionBasedInput(control, event.target.value, radiotext); // selectedMaster[masterIndex][event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedMaster\n      });\n    };\n\n    this.handleDateChangeMasterDynamic = (dateValue, dateName) => {\n      let selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {};\n      selectedMaster[masterIndex][dateName] = dateValue;\n      this.setState({\n        selectedMaster\n      });\n    };\n\n    this.onNumericInputChangeMasterDynamic = (value, name) => {\n      let selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {};\n      selectedMaster[masterIndex][name] = value;\n      this.setState({\n        selectedMaster\n      });\n    };\n\n    this.onNumericBlurMasterDynamic = (value, control) => {\n      let selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {};\n\n      if (selectedMaster[masterIndex][control.label]) {\n        if (control.max) {\n          if (!(selectedMaster[masterIndex][control.label] < parseFloat(control.max))) {\n            selectedMaster[masterIndex][control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max);\n          }\n        }\n\n        if (control.min) {\n          if (!(selectedMaster[masterIndex][control.label] > parseFloat(control.min))) {\n            selectedMaster[masterIndex][control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min);\n          }\n        }\n      }\n\n      this.setState({\n        selectedMaster\n      });\n    };\n\n    this.onComboChangeMaster = (comboData, fieldName, item) => {\n      const selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {};\n\n      if (comboData !== null) {\n        if (this.props.Login.selectedControl[masterIndex].table.item.nformcode === 137) {\n          selectedMaster[masterIndex][item.tableDataField] = comboData.value;\n        } else if (item.foreignDataField) {\n          selectedMaster[masterIndex][item.foreignDataField] = comboData.value;\n        }\n      }\n\n      selectedMaster[masterIndex][fieldName] = comboData;\n\n      if (item.childIndex !== undefined) {\n        this.props.getChildComboMaster(selectedMaster, fieldName, item, this.props.Login.selectedControl, this.props.Login.masterfieldList, this.props.Login.masterdataList, this.props.Login.userInfo, masterIndex);\n      } else {\n        this.setState({\n          selectedMaster\n        });\n      }\n    };\n\n    this.handleDateChangeMaster = (dateName, dateValue, item) => {\n      //   const { selectedMaster } = this.state;\n      const selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {};\n      selectedMaster[masterIndex][dateName] = dateValue;\n      const age = ageCalculate(dateValue);\n      selectedMaster[masterIndex][\"sage\"] = age;\n      this.setState({\n        selectedMaster\n      });\n    };\n\n    this.onNumericInputOnChangeMaster = (value, name, item) => {\n      const selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {};\n      selectedMaster[masterIndex][name] = value;\n      this.setState({\n        selectedMaster\n      });\n    };\n\n    this.onInputOnChangeMaster = event => {\n      const selectedMaster = this.state.selectedMaster || [];\n      const masterIndex = this.props.Login.masterIndex;\n      selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex]\n      } || {};\n\n      if (event.target.type === 'checkbox') {\n        selectedMaster[masterIndex][event.target.name] = event.target.checked === true ? 3 : 4;\n\n        if (this.props.Login.selectedControl[masterIndex].table.item.nformcode === 137) {\n          if (selectedMaster[masterIndex].nneedcurrentaddress === 3) {\n            selectedMaster[masterIndex].sflatnotemp = selectedMaster[masterIndex].sflatno;\n            selectedMaster[masterIndex].shousenotemp = selectedMaster[masterIndex].shouseno;\n            selectedMaster[masterIndex].spostalcodetemp = selectedMaster[masterIndex].spostalcode;\n            selectedMaster[masterIndex].sstreettemp = selectedMaster[masterIndex].sstreet;\n            selectedMaster[masterIndex].scitynametemp = selectedMaster[masterIndex].scityname;\n            selectedMaster[masterIndex].sdistrictnametemp = selectedMaster[masterIndex].sdistrictname;\n            selectedMaster[masterIndex].sregionnametemp = selectedMaster[masterIndex].sregionname;\n          } else {\n            selectedMaster[masterIndex].sflatnotemp = \"\";\n            selectedMaster[masterIndex].shousenotemp = \"\";\n            selectedMaster[masterIndex].spostalcodetemp = \"\";\n            selectedMaster[masterIndex].sstreettemp = \"\";\n            selectedMaster[masterIndex].scitynametemp = \"\";\n            selectedMaster[masterIndex].sdistrictnametemp = \"\";\n            selectedMaster[masterIndex].sregionnametemp = \"\";\n          }\n        }\n      } else {\n        selectedMaster[masterIndex][event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedMaster\n      });\n    };\n\n    this.onSaveMasterRecord = (saveType, formRef) => {\n      //add / edit            \n      const masterIndex = this.props.Login.masterIndex;\n      let inputData = [];\n      const selectedControl = this.props.Login.selectedControl;\n      const masterDesign = this.props.Login.masterDesign;\n      inputData[\"userinfo\"] = { ...this.props.Login.userInfo,\n        nformcode: selectedControl[masterIndex].table.item.nformcode\n      };\n      inputData[selectedControl[masterIndex].table.item.methodUrl.toLowerCase()] = {\n        \"nsitecode\": this.props.Login.userInfo.nmastersitecode\n      };\n      const methodUrl = selectedControl[masterIndex].table.item.methodUrl.toLowerCase();\n\n      if (this.props.Login.masterOperation[masterIndex] === 'update') {\n        if (selectedControl[masterIndex].table.item.component === 'Dynamic') {\n          inputData[methodUrl][\"ndynamicmastercode\"] = this.props.Login.masterEditObject[masterIndex].item ? this.props.Login.masterEditObject[masterIndex].item.jsondata.ndynamicmastercode : this.props.Login.masterEditObject[masterIndex].ndynamicmastercode;\n        } else {\n          inputData[methodUrl][selectedControl[masterIndex][\"valuemember\"]] = this.props.Login.masterEditObject[masterIndex].value;\n        }\n      }\n\n      if (selectedControl[masterIndex].table.item.component === 'Dynamic') {\n        const selectedMaster = this.state.selectedMaster;\n        inputData[\"userinfo\"] = { ...this.props.Login.userInfo,\n          nformcode: selectedControl[masterIndex].table.item.nformcode\n        };\n        inputData[\"masterdateconstraints\"] = masterDesign[masterIndex].screendesign.masterdateconstraints;\n        inputData[\"masterdatefields\"] = masterDesign[masterIndex].screendesign.masterdatefields;\n        inputData[\"mastercombinationunique\"] = masterDesign[masterIndex].screendesign.mastercombinationunique; //add                          \n\n        inputData[\"dynamicmaster\"] = { ...inputData[methodUrl],\n          nformcode: selectedControl[masterIndex].table.item.nformcode,\n          ndesigntemplatemappingcode: masterDesign[masterIndex].ndesigntemplatemappingcode,\n          jsondata: {},\n          jsonuidata: {}\n        };\n        const dateList = [];\n        const defaulttimezone = this.props.Login.defaulttimezone;\n        masterDesign[masterIndex] && masterDesign[masterIndex].slideoutdesign.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.hasOwnProperty(\"children\")) {\n                component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\") {\n                    inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = selectedMaster[componentrow.label] ? {\n                      value: selectedMaster[masterIndex][componentrow.label].value,\n                      label: selectedMaster[masterIndex][componentrow.label].label,\n                      pkey: componentrow.valuemember,\n                      nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                      source: componentrow.source,\n                      [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: this.props.Login.masterOperation[masterIndex] === 'update' ? selectedMaster[masterIndex][componentrow.label].item ? selectedMaster[masterIndex][componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedMaster[masterIndex][componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedMaster[masterIndex][componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                    } : -1;\n                    inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = selectedMaster[masterIndex][componentrow.label] ? selectedMaster[masterIndex][componentrow.label].label : \"\";\n                  } else if (componentrow.inputtype === \"date\") {\n                    if (componentrow.mandatory) {\n                      inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = formatDate(selectedMaster[masterIndex][componentrow.label], false);\n                      inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]; //inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = convertDateTimetoString(selectedRecord[componentrow.label], userInfo);\n                    } else {\n                      inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? formatDate(selectedMaster[masterIndex][componentrow.label] || new Date(), false) : selectedMaster[masterIndex][componentrow.label] ? formatDate(selectedMaster[masterIndex][componentrow.label], false) : \"\";\n                      inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]; //convertDateTimetoString(selectedRecord[componentrow.label], userInfo);\n                    }\n\n                    if (componentrow.timezone) {\n                      inputData[\"dynamicmaster\"][\"jsondata\"][`tz${componentrow.label}`] = selectedMaster[masterIndex][`tz${componentrow.label}`] ? {\n                        value: selectedMaster[masterIndex][`tz${componentrow.label}`].value,\n                        label: selectedMaster[masterIndex][`tz${componentrow.label}`].label\n                      } : defaulttimezone ? defaulttimezone : -1;\n                      inputData[\"dynamicmaster\"][\"jsonuidata\"][`tz${componentrow.label}`] = inputData[\"dynamicmaster\"][\"jsondata\"][`tz${componentrow.label}`];\n                    }\n\n                    dateList.push(componentrow.label);\n                  } else {\n                    inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = selectedMaster[masterIndex][componentrow.label] ? selectedMaster[masterIndex][componentrow.label] : \"\";\n                    inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]; // inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]\n                  }\n\n                  return inputData[\"dynamicmaster\"];\n                });\n              } else {\n                if (component.inputtype === \"combo\") {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = selectedMaster[masterIndex][component.label] ? {\n                    value: selectedMaster[masterIndex][component.label].value,\n                    label: selectedMaster[masterIndex][component.label].label,\n                    pkey: component.valuemember,\n                    nquerybuildertablecode: component.nquerybuildertablecode,\n                    source: component.source,\n                    [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: this.props.Login.masterOperation[masterIndex] === 'update' ? selectedMaster[masterIndex][component.label].item ? selectedMaster[masterIndex][component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedMaster[masterIndex][component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedMaster[masterIndex][component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                  } : -1;\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label; //selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\n                } else if (component.inputtype === \"date\") {\n                  if (component.mandatory) {\n                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = formatDate(selectedMaster[masterIndex][component.label], false); // convertDateTimetoString(selectedRecord[component.label] ?\n                    // selectedRecord[component.label] : new Date(), userInfo);\n\n                    inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]; //convertDateTimetoString(selectedRecord[component.label], userInfo);\n                  } else {\n                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = component.loadcurrentdate ? //convertDateTimetoString(selectedRecord[component.label] ?                                      \n                    //    selectedRecord[component.label] : new Date(), userInfo) :\n                    formatDate(selectedMaster[masterIndex][component.label] || new Date(), false) : selectedMaster[masterIndex][component.label] ? // convertDateTimetoString(selectedRecord[component.label] ?\n                    //   selectedRecord[component.label] : new Date(), userInfo) : \"\";\n                    formatDate(selectedMaster[masterIndex][component.label], false) : \"\";\n                    inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]; //convertDateTimetoString(selectedRecord[component.label], userInfo)\n                  }\n\n                  if (component.timezone) {\n                    inputData[\"dynamicmaster\"][\"jsondata\"][`tz${component.label}`] = selectedMaster[masterIndex][`tz${component.label}`] ? {\n                      value: selectedMaster[masterIndex][`tz${component.label}`].value,\n                      label: selectedMaster[masterIndex][`tz${component.label}`].label\n                    } : defaulttimezone ? defaulttimezone : -1;\n                    inputData[\"dynamicmaster\"][\"jsonuidata\"][`tz${component.label}`] = inputData[\"dynamicmaster\"][\"jsondata\"][`tz${component.label}`];\n                  }\n\n                  dateList.push(component.label);\n                } else {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = selectedMaster[masterIndex][component.label] ? selectedMaster[masterIndex][component.label] : \"\";\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label];\n                }\n              }\n\n              return inputData[\"dynamicmaster\"];\n            });\n            return inputData[\"dynamicmaster\"];\n          });\n          return inputData[\"dynamicmaster\"];\n        });\n        inputData[\"dynamicmaster\"][\"jsonstring\"] = JSON.stringify(inputData[\"dynamicmaster\"][\"jsondata\"]);\n        inputData[\"dynamicmaster\"][\"jsonuistring\"] = JSON.stringify(inputData[\"dynamicmaster\"][\"jsonuidata\"]);\n        inputData[\"masterdatelist\"] = dateList;\n      } else if (selectedControl[masterIndex].table.item.component === 'Type3Component' && selectedControl[masterIndex].table.item.nformcode === 137) {\n        inputData[\"noneedfilter\"] = true;\n        this.props.Login.masterextractedColumnList[masterIndex].map(item => {\n          let fieldName = item.dataField;\n\n          if (item.isJsonField === true) {\n            return inputData[methodUrl][item.jsonObjectName] = { ...inputData[methodUrl][item.jsonObjectName],\n              [fieldName]: this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\"\n            };\n          } else {\n            if (item.controlType === \"selectbox\") {\n              // inputData[methodUrl][fieldName] = this.state.selectedMaster[fieldName] ? this.state.selectedMaster[fieldName].label ? this.state.selectedMaster[fieldName].label : \"\" : -1;\n              inputData[methodUrl][item.tableDataField] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName].value ? this.state.selectedMaster[masterIndex][fieldName].value : \"\" : -1;\n              return inputData;\n            } else if (item.controlType === \"datepicker\") {\n              inputData[methodUrl][item.dateField] = formatInputDate(this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\", false);\n            } else if (item.controlType === \"checkbox\") {\n              inputData[methodUrl][item.controlName] = this.state.selectedMaster[masterIndex][item.controlName] ? this.state.selectedMaster[masterIndex][item.controlName] : transactionStatus.NO;\n            } else {\n              inputData[methodUrl][fieldName] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\";\n            } // inputData[methodUrl][selectedRecordPrimarykey] = this.props.Login.selectedId;\n\n\n            return inputData;\n          }\n        });\n      } else {\n        this.props.Login.masterextractedColumnList[masterIndex].map(item => {\n          let fieldName = item.dataField;\n\n          if (item.isJsonField === true) {\n            return inputData[methodUrl][item.jsonObjectName] = { ...inputData[methodUrl][item.jsonObjectName],\n              [fieldName]: this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\"\n            };\n          } else {\n            if (item.controlType === \"selectbox\") {\n              inputData[methodUrl][fieldName] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName].label ? this.state.selectedMaster[masterIndex][fieldName].label : \"\" : -1;\n              inputData[methodUrl][item.foreignDataField] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName].value ? this.state.selectedMaster[masterIndex][fieldName].value : \"\" : -1;\n              return inputData;\n            } else if (item.controlType === \"datepicker\") {\n              inputData[methodUrl][item.dateField] = formatInputDate(this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\", false);\n            } else if (item.controlType === \"checkbox\") {\n              inputData[methodUrl][item.controlName] = this.state.selectedMaster[masterIndex][item.controlName] ? this.state.selectedMaster[masterIndex][item.controlName] : transactionStatus.NO;\n            } else {\n              inputData[methodUrl][fieldName] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\";\n            } // inputData[methodUrl][selectedRecordPrimarykey] = this.props.Login.selectedId;\n\n\n            return inputData;\n          }\n        });\n      } // }\n\n\n      const inputParam = {\n        userinfo: this.props.Login.userInfo,\n        withoutCombocomponent: this.state.withoutCombocomponent,\n        comboComponents: this.state.comboComponents,\n        selectedRecord: this.state.selectedRecord,\n        selectedRecordName: 'selectedRecord',\n        loadSubSample: false,\n        selectedControl: this.props.Login.selectedControl,\n        comboData: this.props.Login.comboData,\n        comboName: 'comboData',\n        classUrl: selectedControl[masterIndex].table.item.classUrl,\n        methodUrl: selectedControl[masterIndex].table.item.methodUrl,\n        displayName: this.props.Login.inputParam.displayName,\n        // selectedControl[masterIndex].table.item.sdisplayname,\n        screenName: masterIndex !== 0 ? selectedControl[masterIndex - 1].displayname[this.props.Login.userInfo.slanguagetypecode] : this.props.Login.inputParam.displayName,\n        inputData: inputData,\n        operation: this.props.Login.masterOperation[masterIndex],\n        masterEditObject: this.props.Login.masterEditObject,\n        masterOperation: this.props.Login.masterOperation,\n        saveType,\n        formRef,\n        masterIndex,\n        selectedMaster: this.state.selectedMaster,\n        mastercomboComponents: this.props.Login.mastercomboComponents,\n        masterwithoutCombocomponent: this.props.Login.masterwithoutCombocomponent,\n        masterComboColumnFiled: this.props.Login.masterComboColumnFiled,\n        masterextractedColumnList: this.props.Login.masterextractedColumnList,\n        masterdataList: this.props.Login.masterdataList,\n        masterDesign: this.props.Login.masterDesign,\n        masterfieldList: this.props.Login.masterfieldList\n      };\n      this.props.addMasterRecord(inputParam, this.props.Login.masterData);\n    };\n\n    this.addMasterRecord = control => {\n      let masterIndex = this.props.Login.masterIndex;\n\n      if (masterIndex !== undefined) {\n        masterIndex = masterIndex + 1;\n      } else {\n        masterIndex = 0;\n      }\n\n      let selectedControl = this.props.Login.selectedControl || [];\n      let selectedMaster = this.state.selectedMaster || [];\n      selectedMaster[masterIndex] = {};\n      selectedControl[masterIndex] = control;\n      let fieldList = this.props.Login.masterfieldList || [];\n      fieldList[masterIndex] = [];\n      let masterComboColumnFiled = this.props.Login.masterComboColumnFiled || [];\n      masterComboColumnFiled[masterIndex] = [];\n      let extractedColumnList = this.props.Login.masterextractedColumnList || [];\n      extractedColumnList[masterIndex] = [];\n      let masterdataList = this.props.Login.masterdataList || [];\n      let masterDesign = this.props.Login.masterDesign || [];\n      let masterwithoutCombocomponent = this.props.Login.masterwithoutCombocomponent || [];\n      let mastercomboComponents = this.props.Login.mastercomboComponents || [];\n      let masterOperation = this.props.Login.masterOperation || [];\n      masterdataList[masterIndex] = [];\n      masterDesign[masterIndex] = [];\n      masterwithoutCombocomponent[masterIndex] = [];\n      mastercomboComponents[masterIndex] = [];\n      masterOperation[masterIndex] = 'create';\n\n      if (control.table.item.component === 'Type2Component' || control.table.item.component === 'Type1Component') {\n        if (control.table.item.component === 'Type2Component') {\n          fieldList[masterIndex] = getFieldSpecification().get(control.table.item.methodUrl) || [];\n        } else {\n          fieldList[masterIndex] = getFieldSpecification1().get(control.table.item.methodUrl) || [];\n        }\n\n        extractedColumnList[masterIndex] = extractFieldHeader(Object.values(fieldList[masterIndex]));\n        const primaryKeyField = Object.keys(fieldList[masterIndex]).length > 0 ? fieldList[masterIndex][0].dataField : \"\";\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedControl,\n            addMaster: true,\n            masterfieldList: fieldList,\n            masterextractedColumnList: extractedColumnList,\n            masterprimaryKeyField: primaryKeyField,\n            masterComboColumnFiled: masterComboColumnFiled,\n            masterIndex,\n            masterdataList,\n            masterDesign,\n            masterwithoutCombocomponent,\n            mastercomboComponents,\n            masterOperation,\n            selectedMaster,\n            screenName: selectedControl[masterIndex].displayname[this.props.Login.userInfo.slanguagetypecode]\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else if (control.table.item.component === 'Type3Component') {\n        fieldList[masterIndex] = getFieldSpecification3().get(control.table.item.methodUrl) || [];\n        extractedColumnList[masterIndex] = extractFieldHeader(Object.values(fieldList[masterIndex]));\n        masterComboColumnFiled[masterIndex] = extractedColumnList[masterIndex].filter(item => item.ndesigncomponentcode === designComponents.COMBOBOX);\n        const primaryKeyField = Object.keys(fieldList[masterIndex]).length > 0 ? fieldList[masterIndex][0].dataField : \"\";\n        const inputParam = {\n          userinfo: this.props.Login.userInfo,\n          selectedControl,\n          masterfieldList: fieldList,\n          masterextractedColumnList: extractedColumnList,\n          masterprimaryKeyField: primaryKeyField,\n          masterComboColumnFiled: masterComboColumnFiled,\n          masterIndex,\n          masterdataList,\n          masterDesign,\n          masterwithoutCombocomponent,\n          mastercomboComponents,\n          selectedMaster,\n          masterOperation,\n          screenName: selectedControl[masterIndex].displayname[this.props.Login.userInfo.slanguagetypecode]\n        };\n        this.props.getAddMasterCombo(inputParam);\n      } else if (control.table.item.component === 'Dynamic') {\n        const inputParam = {\n          userinfo: this.props.Login.userInfo,\n          selectedControl,\n          masterIndex,\n          masterdataList,\n          masterDesign,\n          masterComboColumnFiled,\n          masterwithoutCombocomponent,\n          mastercomboComponents,\n          masterfieldList: fieldList,\n          masterextractedColumnList: extractedColumnList,\n          masterComboColumnFiled,\n          masterOperation,\n          selectedMaster\n        };\n        this.props.getDynamicMasterTempalte(inputParam);\n      } // this.props.getMasterRecord(control);\n\n    };\n\n    this.editMasterRecord = (control, editObject) => {\n      if (editObject) {\n        let masterIndex = this.props.Login.masterIndex;\n\n        if (masterIndex !== undefined) {\n          masterIndex = masterIndex + 1;\n        } else {\n          masterIndex = 0;\n        }\n\n        let selectedControl = this.props.Login.selectedControl || [];\n        let selectedMaster = this.state.selectedMaster || [];\n        selectedMaster[masterIndex] = {};\n        selectedControl[masterIndex] = control;\n        let fieldList = this.props.Login.masterfieldList || [];\n        fieldList[masterIndex] = [];\n        let masterComboColumnFiled = this.props.Login.masterComboColumnFiled || [];\n        masterComboColumnFiled[masterIndex] = [];\n        let extractedColumnList = this.props.Login.masterextractedColumnList || [];\n        extractedColumnList[masterIndex] = [];\n        let masterdataList = this.props.Login.masterdataList || [];\n        let masterDesign = this.props.Login.masterDesign || [];\n        let masterwithoutCombocomponent = this.props.Login.masterwithoutCombocomponent || [];\n        let mastercomboComponents = this.props.Login.mastercomboComponents || [];\n        let masterOperation = this.props.Login.masterOperation || [];\n        let masterEditObject = this.props.Login.masterEditObject || [];\n        masterdataList[masterIndex] = [];\n        masterDesign[masterIndex] = [];\n        masterwithoutCombocomponent[masterIndex] = [];\n        mastercomboComponents[masterIndex] = [];\n        masterOperation[masterIndex] = 'update';\n        masterEditObject[masterIndex] = editObject;\n\n        if (control.table.item.component === 'Type2Component' || control.table.item.component === 'Type1Component') {\n          if (control.table.item.component === 'Type2Component') {\n            fieldList[masterIndex] = getFieldSpecification().get(control.table.item.methodUrl) || [];\n          } else {\n            fieldList[masterIndex] = getFieldSpecification1().get(control.table.item.methodUrl) || [];\n          }\n\n          extractedColumnList[masterIndex] = extractFieldHeader(Object.values(fieldList[masterIndex]));\n          const primaryKeyField = Object.keys(fieldList[masterIndex]).length > 0 ? fieldList[masterIndex][0].dataField : \"\";\n          const updateInfo = {\n            userinfo: this.props.Login.userInfo,\n            selectedControl,\n            addMaster: true,\n            masterfieldList: fieldList,\n            masterextractedColumnList: extractedColumnList,\n            masterprimaryKeyField: primaryKeyField,\n            masterComboColumnFiled: masterComboColumnFiled,\n            masterIndex,\n            masterdataList,\n            masterDesign,\n            masterwithoutCombocomponent,\n            mastercomboComponents,\n            selectedMaster,\n            masterEditObject,\n            masterOperation // editObject\n            //   screenName:selectedControl[masterIndex].displayname[this.props.Login.userInfo.slanguagetypecode]\n\n          };\n          this.props.getEditMaster(updateInfo);\n        } else if (control.table.item.component === 'Type3Component') {\n          fieldList[masterIndex] = getFieldSpecification3().get(control.table.item.methodUrl) || [];\n          extractedColumnList[masterIndex] = extractFieldHeader(Object.values(fieldList[masterIndex]));\n          masterComboColumnFiled[masterIndex] = extractedColumnList[masterIndex].filter(item => item.ndesigncomponentcode === designComponents.COMBOBOX);\n          const primaryKeyField = Object.keys(fieldList[masterIndex]).length > 0 ? fieldList[masterIndex][0].dataField : \"\";\n          const inputParam = {\n            userinfo: this.props.Login.userInfo,\n            selectedControl,\n            masterfieldList: fieldList,\n            masterextractedColumnList: extractedColumnList,\n            masterprimaryKeyField: primaryKeyField,\n            masterComboColumnFiled: masterComboColumnFiled,\n            masterIndex,\n            masterdataList,\n            masterDesign,\n            masterwithoutCombocomponent,\n            mastercomboComponents,\n            masterEditObject,\n            masterOperation,\n            selectedMaster,\n            screenName: selectedControl[masterIndex].displayname[this.props.Login.userInfo.slanguagetypecode] // editObject\n\n          };\n          this.props.getEditMaster(inputParam);\n        } else if (control.table.item.component === 'Dynamic') {\n          const inputParam = {\n            userinfo: this.props.Login.userInfo,\n            selectedControl,\n            masterIndex,\n            masterdataList,\n            masterDesign,\n            masterComboColumnFiled,\n            masterwithoutCombocomponent,\n            mastercomboComponents,\n            masterfieldList: fieldList,\n            masterextractedColumnList: extractedColumnList,\n            masterComboColumnFiled,\n            masterEditObject,\n            masterOperation,\n            selectedMaster //  editObject\n\n          };\n          this.props.getEditMaster(inputParam);\n        }\n      } else {\n        toast.warn(this.props.intl.formatMessage({\n          id: \"IDS_SELECTTHERECORD\"\n        }));\n      }\n    };\n\n    this.openModal = () => {\n      const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\") && this.state.controlMap.get(\"Add\").ncontrolcode;\n      this.props.getDynamicMasterCombo(this.props.Login.masterData, this.props.Login.userInfo, addId, this.state.designData, this.state.selectedRecord, this.state.childColumnList, this.state.comboComponents, this.state.withoutCombocomponent, false, true, new Map(), true, \"create\", this.props.Login.displayName);\n    };\n\n    this.fetchRecord = fetchRecordParam => {\n      this.props.getEditDynamicMasterCombo(fetchRecordParam, this.state.designData, this.state.selectedRecord, this.state.childColumnList, this.state.comboComponents, this.state.withoutCombocomponent);\n    };\n\n    this.onNumericBlur = (value, control) => {\n      let selectedRecord = this.state.selectedRecord;\n\n      if (selectedRecord[control.label]) {\n        if (control.max) {\n          if (!(selectedRecord[control.label] < parseFloat(control.max))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max);\n          }\n        }\n\n        if (control.min) {\n          if (!(selectedRecord[control.label] > parseFloat(control.min))) {\n            selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min);\n          }\n        }\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.comboChild = (data, columnList, childColumnList, slice) => {\n      let retunObj = {}; // if (data.findIndex(x => x.label === columnList.label) !== -1) {\n\n      if (!childColumnList.hasOwnProperty(columnList.label)) {\n        if (childColumnList[columnList.label] === undefined) {\n          if (columnList.hasOwnProperty(\"child\")) {\n            let childList = [];\n            columnList.child.map(childData => {\n              const index = data.findIndex(x => x.label === childData.label);\n\n              if (index !== -1) {\n                childList.push(data[index]);\n\n                if (slice) {\n                  data = [...data.slice(0, index), ...data.slice(index + 1)];\n                }\n              }\n            });\n            childColumnList[columnList.label] = childList;\n\n            if (childList.length > 0) {\n              childList.map(y => {\n                if (y.hasOwnProperty(\"child\")) {\n                  const val = this.comboChild(data, y, childColumnList, slice);\n                  retunObj[\"data\"] = val.data;\n                  retunObj[\"childColumnList\"] = val.childColumnList;\n                } else {\n                  retunObj[\"data\"] = data;\n                  retunObj[\"childColumnList\"] = childColumnList;\n                }\n              });\n            } else {\n              retunObj[\"data\"] = data;\n              retunObj[\"childColumnList\"] = childColumnList;\n            }\n          } else {\n            retunObj[\"data\"] = data;\n            retunObj[\"childColumnList\"] = childColumnList;\n          }\n        } else {\n          retunObj[\"data\"] = data;\n          retunObj[\"childColumnList\"] = childColumnList;\n        }\n      } else {\n        retunObj[\"data\"] = data;\n        retunObj[\"childColumnList\"] = childColumnList;\n      }\n\n      return retunObj;\n    };\n\n    this.onComboChange = (comboData, control, customName) => {\n      let comboName = customName || control.label;\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (comboData) {\n        comboData[\"item\"] = { ...comboData[\"item\"],\n          \"pkey\": control.valuemember,\n          \"nquerybuildertablecode\": control.nquerybuildertablecode,\n          \"source\": control.source\n        };\n        selectedRecord[comboName] = comboData;\n      } else {\n        selectedRecord[comboName] = [];\n      }\n\n      if (control.child && control.child.length > 0) {\n        const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\");\n        let childColumnList = {};\n        childComboList.map(columnList => {\n          const val = this.comboChild(this.state.comboComponents, columnList, childColumnList, false);\n          childColumnList = val.childColumnList;\n        });\n        const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\");\n        const inputParem = {\n          child: control.child,\n          source: control.source,\n          primarykeyField: control.valuemember,\n          value: comboData.value,\n          item: comboData.item\n        };\n        this.props.getChildValues(inputParem, this.props.Login.userInfo, selectedRecord, this.props.Login.comboData, childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList]);\n      } else {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            selectedRecord\n          }\n        };\n        this.props.updateStore(updateInfo);\n      }\n    };\n\n    this.onNumericInputChange = (value, name) => {\n      let selectedRecord = this.state.selectedRecord;\n      selectedRecord[name] = value;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.handleDateChange = (dateValue, dateName) => {\n      const {\n        selectedRecord\n      } = this.state;\n      selectedRecord[dateName] = dateValue;\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.onDrop = (value, type, oldVlaue) => {\n      const design = this.state.design;\n      let columns = design[0].children;\n      let designData = this.props.Login.ReactInputFields;\n      value = JSON.parse(value.fields);\n      value = { ...value,\n        type: \"component\"\n      };\n      let designDataIndex = designData.findIndex(item => item.label === value.label);\n      let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\n      let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\n      if (designDataIndex >= 0) designData.splice(designDataIndex, 1);\n\n      if (firstIndex >= 0) {\n        if (type !== 1) {\n          columns[0].children.splice(firstIndex, 1); // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[0].children.findIndex(item => item.label === value.label);\n            let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\n            columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 1) {\n        if (columns[0]) {\n          columns[0].children.push(value);\n        } else {\n          columns[0] = {\n            id: \"1\",\n            type: \"column\",\n            children: []\n          };\n          columns[0].children.push(value);\n        }\n      }\n\n      if (secondIndex >= 0) {\n        if (type !== 2) {\n          columns[1].splice(secondIndex, 1);\n        } else {\n          if (oldVlaue) {\n            oldVlaue = JSON.parse(oldVlaue);\n            let from = columns[1].children.findIndex(item => item.label === value.label);\n            let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\n            columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\n          }\n        }\n      } else if (type === 2) {\n        if (columns[1]) {\n          columns[1].children.push(value);\n        } else {\n          columns[1] = {\n            id: \"2\",\n            type: \"column\",\n            children: []\n          };\n          columns[1].children.push(value);\n        }\n      } // design.push(columns)\n\n\n      this.setState({\n        designData,\n        design\n      });\n    };\n\n    this.onDropFile = (attachedFiles, fieldName, maxSize) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize);\n      this.setState({\n        selectedRecord,\n        actionType: \"new\"\n      });\n    };\n\n    this.deleteAttachment = (event, file, fieldName) => {\n      let selectedRecord = this.state.selectedRecord || {};\n      selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file);\n      this.setState({\n        selectedRecord,\n        actionType: \"delete\" //fileToDelete:file.name \n\n      });\n    };\n\n    this.onInputOnChange = (event, control, value) => {\n      const selectedRecord = this.state.selectedRecord || {};\n\n      if (event.target.type === 'toggle') {\n        selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\n      } else if (event.target.type === 'numeric') {\n        if (/\\D/.test(event.target.value)) selectedRecord[event.target.name] = event.target.value;\n      } else if (event.target.type === 'checkbox') {\n        const value1 = selectedRecord[event.target.name];\n\n        if (value1 !== '' && value1 !== undefined) {\n          if (value1.toLowerCase().includes(value.toLowerCase())) {\n            const index = value1.toLowerCase().indexOf(value.toLowerCase());\n\n            if (index !== -1) {\n              if (index === 0) {\n                const indexcomma = value1.indexOf(\",\");\n\n                if (indexcomma !== -1) {\n                  selectedRecord[event.target.name] = value1.slice(indexcomma + 1);\n                } else {\n                  selectedRecord[event.target.name] = \"\";\n                }\n              } else {\n                if (value1.slice(index).indexOf(\",\") !== -1) {\n                  selectedRecord[event.target.name] = value1.slice(0, index) + value1.slice(index + value1.slice(index).indexOf(\",\") + 1);\n                } else {\n                  selectedRecord[event.target.name] = value1.slice(0, index - 1);\n                }\n              }\n            }\n          } else {\n            selectedRecord[event.target.name] = value1 + ',' + value;\n          }\n        } else {\n          selectedRecord[event.target.name] = value;\n        }\n      } else if (event.target.type === 'radio') {\n        selectedRecord[event.target.name] = value;\n      } else {\n        selectedRecord[event.target.name] = conditionBasedInput(control, event.target.value, control && control.label); // if (control.isnumeric === true\n        //     && control.label===value) {\n        // selectedRecord[event.target.name] = event.target.value.replace(/[^0-9]/g, '');\n        //     } else {\n        //         selectedRecord[event.target.name] = event.target.value;\n        //     }\n        // selectedRecord[event.target.name] = event.target.value;\n      }\n\n      this.setState({\n        selectedRecord\n      });\n    };\n\n    this.import = () => {\n      const updateInfo = {\n        typeName: DEFAULT_RETURN,\n        data: {\n          openModal: true,\n          screenName: this.props.Login.displayName,\n          operation: \"import\"\n        }\n      };\n      this.props.updateStore(updateInfo);\n    };\n\n    this.deleteRecord = deleteParam => {\n      const inputParam = {\n        classUrl: \"dynamicmaster\",\n        methodUrl: \"DynamicMaster\",\n        displayName: this.props.Login.displayName,\n        inputData: {\n          [\"dynamicmaster\"]: {\n            \"ndynamicmastercode\": deleteParam.selectedRecord.ndynamicmastercode\n          },\n          //.dataItem,\n          \"userinfo\": this.props.Login.userInfo\n        },\n        operation: \"delete\",\n        dataState: this.state.dataState\n      };\n\n      if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.Login.displayName,\n            operation: \"delete\"\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.reloadData = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": this.props.Login.userInfo\n        },\n        classUrl: this.props.Login.inputParam.classUrl,\n        methodUrl: this.props.Login.inputParam.methodUrl,\n        userInfo: this.props.Login.userInfo,\n        displayName: this.props.Login.inputParam.displayName\n      };\n      this.props.callService(inputParam);\n    };\n\n    this.onSaveClick = (saveType, formRef) => {\n      //add / edit  \n      let isFileupload = true;\n      let inputData = {};\n      let dataState = undefined;\n      let methodUrl = \"DynamicMaster\";\n      inputData[\"userinfo\"] = this.props.Login.userInfo;\n      inputData[\"masterdateconstraints\"] = this.props.Login.masterData.DynamicMasterDesign.screendesign.masterdateconstraints;\n      inputData[\"masterdatefields\"] = this.props.Login.masterData.DynamicMasterDesign.screendesign.masterdatefields;\n      inputData[\"mastercombinationunique\"] = this.props.Login.masterData.DynamicMasterDesign.screendesign.mastercombinationunique;\n      inputData[\"isFileupload\"] = false;\n      let selectedId = null;\n      let operation = \"\";\n      let selectedRecord = this.state.selectedRecord;\n\n      if (this.props.Login.operation === \"update\") {\n        // edit\n        dataState = this.state.dataState;\n        inputData[\"dynamicmaster\"] = {\n          ndynamicmastercode: this.state.selectedRecord[\"ndynamicmastercode\"]\n        }; //this.state.selectedRecord;\n\n        inputData[\"dynamicmaster\"][\"jsondata\"] = {};\n        inputData[\"dynamicmaster\"][\"jsonuidata\"] = {};\n        selectedId = this.props.Login.selectedId;\n        operation = \"update\";\n      } else {\n        //add                          \n        inputData[\"dynamicmaster\"] = {\n          //\"nsitecode\": this.props.Login.userInfo.nmastersitecode, \n          nformcode: this.props.Login.userInfo.nformcode,\n          ndesigntemplatemappingcode: this.props.Login.masterData.DynamicMasterDesign.ndesigntemplatemappingcode,\n          jsondata: {},\n          jsonuidata: {}\n        };\n        operation = \"create\";\n      }\n\n      const dateList = [];\n      const defaulttimezone = this.props.Login.defaulttimezone;\n      const userInfo = this.props.Login.userInfo;\n      this.props.Login.masterData.DynamicMasterDesign && this.props.Login.masterData.DynamicMasterDesign.slideoutdesign.map(row => {\n        row.children.map(column => {\n          column.children.map(component => {\n            if (component.hasOwnProperty(\"children\")) {\n              component.children.map(componentrow => {\n                if (componentrow.inputtype === \"combo\") {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? {\n                    value: selectedRecord[componentrow.label].value,\n                    label: selectedRecord[componentrow.label].label,\n                    pkey: componentrow.valuemember,\n                    nquerybuildertablecode: componentrow.nquerybuildertablecode,\n                    source: componentrow.source,\n                    [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ? selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] : selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\n                  } : -1;\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\";\n                } else if (componentrow.inputtype === \"date\") {\n                  if (componentrow.mandatory) {\n                    inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = formatDate(selectedRecord[componentrow.label], false);\n                    inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]; //inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = convertDateTimetoString(selectedRecord[componentrow.label], userInfo);\n                  } else {\n                    inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ? formatDate(selectedRecord[componentrow.label] || new Date(), false) : selectedRecord[componentrow.label] ? formatDate(selectedRecord[componentrow.label], false) : \"\";\n                    inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]; //convertDateTimetoString(selectedRecord[componentrow.label], userInfo);\n                  }\n\n                  if (componentrow.timezone) {\n                    inputData[\"dynamicmaster\"][\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ? {\n                      value: selectedRecord[`tz${componentrow.label}`].value,\n                      label: selectedRecord[`tz${componentrow.label}`].label\n                    } : defaulttimezone ? defaulttimezone : -1;\n                    inputData[\"dynamicmaster\"][\"jsonuidata\"][`tz${componentrow.label}`] = inputData[\"dynamicmaster\"][\"jsondata\"][`tz${componentrow.label}`];\n                  }\n\n                  dateList.push(componentrow.label);\n                } else {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label] : \"\";\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]; // inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]\n                }\n\n                return inputData[\"dynamicmaster\"];\n              });\n            } else {\n              if (component.inputtype === \"combo\") {\n                if (selectedRecord[component.label].length === 0) {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = -1;\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = \"\";\n                } else {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = selectedRecord[component.label] ? {\n                    value: selectedRecord[component.label].value,\n                    label: selectedRecord[component.label].label,\n                    pkey: component.valuemember,\n                    nquerybuildertablecode: component.nquerybuildertablecode,\n                    source: component.source,\n                    [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: operation === \"update\" ? selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata && selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedRecord[component.label].item.jsondata && selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\n                  } : -1;\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label ? inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label : -1;\n                } //selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\n\n              } else if (component.inputtype === \"date\") {\n                if (component.mandatory) {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = formatDate(selectedRecord[component.label], false); // convertDateTimetoString(selectedRecord[component.label] ?\n                  // selectedRecord[component.label] : new Date(), userInfo);\n\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]; //convertDateTimetoString(selectedRecord[component.label], userInfo);\n                } else {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = component.loadcurrentdate ? //convertDateTimetoString(selectedRecord[component.label] ?                                      \n                  //    selectedRecord[component.label] : new Date(), userInfo) :\n                  formatDate(selectedRecord[component.label] || new Date(), false) : selectedRecord[component.label] ? // convertDateTimetoString(selectedRecord[component.label] ?\n                  //   selectedRecord[component.label] : new Date(), userInfo) : \"\";\n                  formatDate(selectedRecord[component.label], false) : \"\";\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]; //convertDateTimetoString(selectedRecord[component.label], userInfo)\n                }\n\n                if (component.timezone) {\n                  inputData[\"dynamicmaster\"][\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ? {\n                    value: selectedRecord[`tz${component.label}`].value,\n                    label: selectedRecord[`tz${component.label}`].label\n                  } : defaulttimezone ? defaulttimezone : -1;\n                  inputData[\"dynamicmaster\"][\"jsonuidata\"][`tz${component.label}`] = inputData[\"dynamicmaster\"][\"jsondata\"][`tz${component.label}`];\n                }\n\n                dateList.push(component.label);\n              } else {\n                inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = selectedRecord[component.label] ? selectedRecord[component.label] : \"\";\n                inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label ? inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label : inputData[\"dynamicmaster\"][\"jsondata\"][component.label];\n              }\n            }\n\n            return inputData[\"dynamicmaster\"];\n          });\n          return inputData[\"dynamicmaster\"];\n        });\n        return inputData[\"dynamicmaster\"];\n      });\n      let tempData = {};\n      const formData = new FormData();\n      this.props.Login.withoutCombocomponent.map(item => {\n        if (item.inputtype === \"files\") {\n          if (typeof selectedRecord[item && item.label] === \"object\") {\n            this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\n              const fileName = create_UUID();\n              const splittedFileName = item1.name.split('.');\n              const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\n              const uniquefilename = fileName + '.' + fileExtension;\n              tempData[item && item.label + '_susername'] = this.props.Login.userInfo.susername;\n              tempData[item && item.label + '_suserrolename'] = this.props.Login.userInfo.suserrolename;\n              tempData[item && item.label + '_nfilesize'] = item1.size;\n              tempData[item && item.label + '_ssystemfilename'] = uniquefilename;\n              tempData[item && item.label] = Lims_JSON_stringify(item1.name.trim(), false);\n              formData.append(\"uploadedFile\" + index, item1);\n              formData.append(\"uniquefilename\" + index, uniquefilename);\n              formData.append(\"filecount\", this.state.selectedRecord[item && item.label].length);\n              formData.append(\"isFileEdited\", transactionStatus.YES);\n              formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\n              inputData[\"dynamicmaster\"][\"jsondata\"] = { ...inputData[\"dynamicmaster\"][\"jsondata\"],\n                ...tempData\n              };\n              inputData[\"dynamicmaster\"][\"jsonuidata\"] = { ...inputData[\"dynamicmaster\"][\"jsonuidata\"],\n                ...tempData\n              };\n              formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\n              inputData[\"isFileupload\"] = true;\n              isFileupload = true; //methodUrl=\"DynamicMasterWithFile\"\n            });\n          }\n        }\n\n        if (this.state.selectedRecord[this.state.selectedRecord[item && item.label] + '_ssystemfilename'] === undefined && item.inputtype === \"files\" && tempData[item && item.label + '_ssystemfilename'] == undefined) {\n          inputData[\"dynamicmaster\"][\"jsondata\"] = { ...inputData[\"dynamicmaster\"][\"jsonuidata\"],\n            ...this.state.selectedRecord\n          };\n          inputData[\"dynamicmaster\"][\"jsonuidata\"] = { ...inputData[\"dynamicmaster\"][\"jsondata\"]\n          };\n        }\n      });\n      inputData[\"dynamicmaster\"][\"jsonstring\"] = JSON.stringify(inputData[\"dynamicmaster\"][\"jsondata\"]);\n      inputData[\"dynamicmaster\"][\"jsonuistring\"] = JSON.stringify(inputData[\"dynamicmaster\"][\"jsonuidata\"]);\n      inputData[\"masterdatelist\"] = dateList;\n      formData.append(\"Map\", Lims_JSON_stringify(JSON.stringify(inputData)));\n      const inputParam = {\n        classUrl: \"dynamicmaster\",\n        methodUrl: methodUrl,\n        displayName: this.props.Login.displayName,\n        inputData: inputData,\n        operation: operation,\n        saveType,\n        formRef,\n        selectedId,\n        dataState,\n        formData: formData,\n        isFileupload\n      };\n      const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\n\n      if (esignNeeded) {\n        const updateInfo = {\n          typeName: DEFAULT_RETURN,\n          data: {\n            loadEsign: true,\n            screenData: {\n              inputParam,\n              masterData: this.props.Login.masterData\n            },\n            openModal: true,\n            screenName: this.props.Login.displayName,\n            operation: \"create\"\n          }\n        };\n        this.props.updateStore(updateInfo);\n      } else {\n        this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\n      }\n    };\n\n    this.validateEsign = () => {\n      const inputParam = {\n        inputData: {\n          \"userinfo\": { ...this.props.Login.userInfo,\n            sreason: this.state.selectedRecord[\"esigncomments\"],\n            nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\n            spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label\n          },\n          password: this.state.selectedRecord[\"esignpassword\"]\n        },\n        screenData: this.props.Login.screenData\n      };\n      this.props.validateEsignCredential(inputParam, \"openModal\");\n    };\n\n    this.formRef = React.createRef();\n    this.extractedColumnList = [];\n    this.detailedColumnList = [];\n    const _dataState = {\n      skip: 0,\n      take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n    };\n    this.state = {\n      data: [],\n      masterStatus: \"\",\n      error: \"\",\n      selectedRecord: {},\n      dataResult: [],\n      dataState: _dataState,\n      userRoleControlRights: [],\n      controlMap: new Map(),\n      comboComponents: [],\n      withoutCombocomponent: [],\n      selectedMaster: []\n    };\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\n      toast.warn(props.Login.masterStatus);\n      props.Login.masterStatus = \"\";\n    }\n\n    if (props.Login.error !== state.error) {\n      toast.error(props.Login.error);\n      props.Login.error = \"\";\n    }\n\n    return null;\n  }\n\n  render() {\n    let primaryKeyField = \"ndynamicmastercode\";\n    let viewFileURL = {\n      \"classUrl\": \"dynamicmaster\",\n      \"methodUrl\": \"DynamicMaster\",\n      \"screenName\": \"DynamicMaster\"\n    };\n    const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\") && this.state.controlMap.get(\"Edit\").ncontrolcode;\n    const editParam = {\n      screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName && this.props.intl.formatMessage({\n        id: this.props.Login.inputParam.displayName\n      }),\n      operation: \"update\",\n      primaryKeyField,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      ncontrolCode: editId\n    };\n    const deleteParam = {\n      operation: \"delete\"\n    }; // const mandatoryFields=[];\n    // this.extractedColumnList.forEach(item=>item.mandatory === true ? \n    //     mandatoryFields.push(item) :\"\"\n    // );   \n\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(ListWrapper, {\n      className: \"client-list-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }\n    }, this.state.data ? /*#__PURE__*/React.createElement(DynamicDataGrid, {\n      primaryKeyField: primaryKeyField,\n      data: this.state.data,\n      dataResult: this.state.dataResult,\n      dataState: this.state.dataState,\n      dataStateChange: this.dataStateChange,\n      extractedColumnList: this.extractedColumnList,\n      detailedFieldList: this.detailedColumnList,\n      expandField: this.detailedColumnList.length > 0 ? \"expanded\" : false,\n      methodUrl: \"\",\n      controlMap: this.state.controlMap,\n      userRoleControlRights: this.state.userRoleControlRights,\n      inputParam: this.props.Login.inputParam,\n      userInfo: this.props.Login.userInfo,\n      fetchRecord: this.fetchRecord,\n      editParam: editParam,\n      deleteRecord: this.deleteRecord,\n      deleteParam: deleteParam,\n      reloadData: this.reloadData,\n      addRecord: this.openModal,\n      pageable: true,\n      scrollable: 'scrollable',\n      gridHeight: '600px',\n      isActionRequired: true,\n      isToolBarRequired: true,\n      selectedId: this.props.Login.selectedId,\n      import: this.import,\n      screenName: this.props.Login.displayName,\n      isImportRequired: false,\n      viewFileURL: viewFileURL,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 29\n      }\n    }) : \"\"))), this.props.Login.openModal ? /*#__PURE__*/React.createElement(SlideOutModal, {\n      show: this.props.Login.openModal,\n      closeModal: this.closeModal,\n      operation: this.props.Login.addMaster ? this.props.Login.masterOperation[this.props.Login.masterIndex] : this.props.Login.operation ? this.props.Login.operation : \"create\",\n      inputParam: this.props.Login.inputParam,\n      screenName: this.props.Login.screenName,\n      onSaveClick: this.props.Login.addMaster ? this.onSaveMasterRecord : this.props.Login.operation === 'import' ? this.onSaveClickImportFile : this.onSaveClick,\n      esign: this.props.Login.loadEsign,\n      validateEsign: this.validateEsign,\n      masterStatus: this.props.Login.masterStatus,\n      updateStore: this.props.updateStore,\n      selectedRecord: this.props.Login.addMaster ? this.state.selectedMaster[this.props.Login.masterIndex] : this.state.selectedRecord || {},\n      mandatoryFields: this.props.Login.addMaster ? this.props.Login.masterextractedColumnList[this.props.Login.masterIndex].filter(x => x.mandatory === true) : this.props.Login.operation === 'import' ? [{\n        \"mandatory\": true,\n        \"idsName\": \"IDS_FILE\",\n        \"dataField\": 'stemplatefilename',\n        \"mandatoryLabel\": \"IDS_SELECT\",\n        \"controlType\": \"textbox\"\n      }] : this.state.mandatoryFields || [],\n      addComponent: this.props.Login.loadEsign ? /*#__PURE__*/React.createElement(Esign, {\n        operation: this.props.Login.operation,\n        onInputOnChange: this.onInputOnChange,\n        inputParam: this.props.Login.inputParam,\n        selectedRecord: this.state.selectedRecord || {},\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 25\n        }\n      }) : this.props.Login.addMaster ? /*#__PURE__*/React.createElement(AddMasterRecords, {\n        selectedControl: this.props.Login.selectedControl[this.props.Login.masterIndex],\n        fieldList: this.props.Login.masterfieldList && this.props.Login.masterfieldList[this.props.Login.masterIndex],\n        extractedColumnList: this.props.Login.masterextractedColumnList[this.props.Login.masterIndex] // primaryKeyField={this.props.Login.masterprimaryKeyField}\n        ,\n        selectedRecord: this.state.selectedMaster[this.props.Login.masterIndex] || {},\n        onInputOnChange: this.onInputOnChangeMaster,\n        onComboChange: this.onComboChangeMaster,\n        handleDateChange: this.handleDateChangeMaster,\n        dataList: this.props.Login.masterdataList && this.props.Login.masterdataList[this.props.Login.masterIndex],\n        onNumericInputOnChange: this.onNumericInputOnChangeMaster,\n        masterDesign: this.props.Login.masterDesign && this.props.Login.masterDesign[this.props.Login.masterIndex],\n        mastertimeZoneList: this.props.Login.mastertimeZoneList,\n        masterdefaultTimeZone: this.props.Login.masterdefaultTimeZone,\n        onComboChangeMasterDyanmic: this.onComboChangeMasterDyanmic,\n        handleDateChangeMasterDynamic: this.handleDateChangeMasterDynamic,\n        onInputOnChangeMasterDynamic: this.onInputOnChangeMasterDynamic,\n        onNumericInputChangeMasterDynamic: this.onNumericInputChangeMasterDynamic,\n        onNumericBlurMasterDynamic: this.onNumericBlurMasterDynamic,\n        userInfo: this.props.Login.userInfo,\n        Login: this.props.Login,\n        addMasterRecord: this.addMasterRecord,\n        editMasterRecord: this.editMasterRecord,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        masterIndex: this.props.Login.masterIndex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 29\n        }\n      }) : this.props.Login.operation === 'import' ? /*#__PURE__*/React.createElement(ImportTemplate, {\n        selectedRecord: this.state.selectedRecord || {} //onInputOnChange={this.onInputOnChange}\n        ,\n        onDrop: this.onDropFile,\n        deleteAttachment: this.deleteAttachment,\n        actionType: this.state.actionType,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 33\n        }\n      }) : /*#__PURE__*/React.createElement(DynamicSlideout, {\n        selectedRecord: this.props.Login.selectedRecord,\n        templateData: this.props.Login.masterData.DynamicMasterDesign && this.props.Login.masterData.DynamicMasterDesign.slideoutdesign // handleChange={this.handleChange}\n        ,\n        handleDateChange: this.handleDateChange,\n        onInputOnChange: this.onInputOnChange,\n        onNumericInputChange: this.onNumericInputChange,\n        comboData: this.props.Login.comboData,\n        onComboChange: this.onComboChange,\n        onDropFile: this.onDropFile,\n        deleteAttachment: this.deleteAttachment,\n        onNumericBlur: this.onNumericBlur,\n        userInfo: this.props.Login.userInfo,\n        timeZoneList: this.props.Login.timeZoneList,\n        defaultTimeZone: this.props.Login.defaultTimeZone,\n        Login: this.props.Login,\n        addMasterRecord: this.addMasterRecord,\n        editMasterRecord: this.editMasterRecord,\n        userRoleControlRights: this.props.Login.userRoleControlRights,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 33\n        }\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }\n    }) : \"\");\n  }\n\n  componentDidUpdate(previousProps) {\n    if (this.props.Login.masterData !== previousProps.Login.masterData) {\n      if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\n        const userRoleControlRights = [];\n\n        if (this.props.Login.userRoleControlRights) {\n          this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item => userRoleControlRights.push(item.ncontrolcode));\n        }\n\n        const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode);\n        this.extractedColumnList = [];\n        this.detailedColumnList = [];\n        let data = [];\n        const withoutCombocomponent = [];\n        const mandatoryFields = [];\n        const Layout = this.props.Login.masterData.DynamicMasterDesign && this.props.Login.masterData.DynamicMasterDesign.slideoutdesign || [];\n        Layout.map(row => {\n          row.children.map(column => {\n            column.children.map(component => {\n              if (component.hasOwnProperty(\"children\")) {\n                component.children.map(componentrow => {\n                  if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\" || componentrow.inputtype === \"frontendsearchfilter\") {\n                    data.push(componentrow);\n                  } else {\n                    withoutCombocomponent.push(componentrow);\n                  }\n\n                  if (componentrow.mandatory === true) {\n                    if (componentrow.inputtype === \"email\") {\n                      mandatoryFields.push({\n                        \"mandatory\": true,\n                        \"idsName\": componentrow.label,\n                        \"dataField\": componentrow.label,\n                        \"alertPreFix\": this.props.intl.formatMessage({\n                          id: \"IDS_VALID\"\n                        }),\n                        \"validateFunction\": validateEmail,\n                        \"mandatoryLabel\": \"IDS_ENTER\",\n                        \"controlType\": \"textbox\"\n                      });\n                    } else {\n                      mandatoryFields.push({\n                        \"mandatory\": true,\n                        \"idsName\": componentrow.label,\n                        \"dataField\": componentrow.label,\n                        \"mandatoryLabel\": componentrow.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                        \"controlType\": componentrow.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                      });\n                    }\n                  }\n                });\n              } else {\n                component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\" || component.inputtype === \"frontendsearchfilter\" ? data.push(component) : withoutCombocomponent.push(component);\n\n                if (component.mandatory === true) {\n                  if (component.inputtype === \"email\") {\n                    mandatoryFields.push({\n                      \"mandatory\": true,\n                      \"idsName\": component.label,\n                      \"dataField\": component.label,\n                      \"alertPreFix\": this.props.intl.formatMessage({\n                        id: \"IDS_VALID\"\n                      }),\n                      \"validateFunction\": validateEmail,\n                      \"mandatoryLabel\": \"IDS_ENTER\",\n                      \"controlType\": \"textbox\"\n                    });\n                  } else {\n                    mandatoryFields.push({\n                      \"mandatory\": true,\n                      \"idsName\": component.label,\n                      \"dataField\": component.label,\n                      \"mandatoryLabel\": component.inputtype === \"combo\" ? \"IDS_SELECT\" : \"IDS_ENTER\",\n                      \"controlType\": component.inputtype === \"combo\" ? \"selectbox\" : \"textbox\"\n                    });\n                  }\n                }\n              }\n            });\n          });\n        });\n\n        if (this.props.Login.masterData && this.props.Login.masterData.DynamicMasterDesign && this.props.Login.masterData.DynamicMasterDesign.screendesign) {\n          this.props.Login.masterData.DynamicMasterDesign.screendesign.griditem.map(row => {\n            this.extractedColumnList.push({\n              \"idsName\": row[\"1\"][this.props.Login.userInfo.slanguagetypecode],\n              \"dataField\": row[\"2\"],\n              \"width\": \"150\",\n              \"dateField\": withoutCombocomponent.findIndex(x => x.label === row[\"2\"] && x.inputtype === 'date') !== -1 ? true : false,\n              \"dataType\": withoutCombocomponent.filter(x => x.label === row[\"2\"]).map(x => x.inputtype)\n            });\n          });\n          this.props.Login.masterData.DynamicMasterDesign.screendesign.gridmoreitem.map(row => {\n            this.detailedColumnList.push({\n              \"idsName\": row[\"1\"][this.props.Login.userInfo.slanguagetypecode],\n              \"dataField\": row[\"2\"],\n              \"dateField\": withoutCombocomponent.findIndex(x => x.label === row[\"2\"] && x.inputtype === 'date') !== -1 ? true : false,\n              \"dataType\": withoutCombocomponent.filter(x => x.label === row[\"2\"]).map(x => x.inputtype)\n            });\n          });\n        }\n\n        const comboComponents = data;\n        let childColumnList = {};\n        data.map(columnList => {\n          const val = this.comboChild(data, columnList, childColumnList, true);\n          data = val.data;\n          childColumnList = val.childColumnList;\n        });\n        const masterData = this.props.Login.masterData.DynamicMasterData ? sortData(this.props.Login.masterData.DynamicMasterData, \"descending\", \"ndynamicmastercode\") : [];\n        this.setState({\n          withoutCombocomponent,\n          comboComponents,\n          childColumnList,\n          designData: data,\n          mandatoryFields,\n          userRoleControlRights,\n          controlMap,\n          data: this.props.Login.masterData.DynamicMasterData || [],\n          dataResult: process(masterData || [], this.state.dataState)\n        });\n      } else {\n        let {\n          dataState\n        } = this.state;\n\n        if (this.props.Login.dataState === undefined) {\n          dataState = {\n            skip: 0,\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5\n          };\n        }\n\n        const masterData = this.props.Login.masterData.DynamicMasterData ? sortData(this.props.Login.masterData.DynamicMasterData, \"descending\", \"ndynamicmastercode\") : [];\n        this.setState({\n          data: this.props.Login.masterData.DynamicMasterData || [],\n          selectedRecord: this.props.Login.selectedRecord,\n          dataResult: process(masterData || [], dataState),\n          dataState //, comboComponents, withoutCombocomponent\n\n        });\n      }\n    }\n\n    if (this.props.Login.selectedMaster !== previousProps.Login.selectedMaster) {\n      this.setState({\n        selectedMaster: this.props.Login.selectedMaster\n      });\n    }\n\n    if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\n      this.setState({\n        selectedRecord: this.props.Login.selectedRecord\n      });\n    }\n  }\n\n}\n\nexport default connect(mapStateToProps, {\n  callService,\n  crudMaster,\n  updateStore,\n  validateEsignCredential,\n  getChildValues,\n  getEditDynamicMasterCombo,\n  //fetchRecord,\n  getDynamicMasterCombo,\n  addMasterRecord,\n  getAddMasterCombo,\n  getDynamicMasterTempalte,\n  getChildComboMaster,\n  getChildValuesForAddMaster,\n  getEditMaster,\n  viewAttachment\n})(injectIntl(DynamicMaster));","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/dynamicmaster/DynamicMaster.jsx"],"names":["React","connect","injectIntl","Row","Col","toast","process","DynamicDataGrid","SlideOutModal","Esign","callService","crudMaster","updateStore","validateEsignCredential","getEditDynamicMasterCombo","getDynamicMasterCombo","getChildValues","addMasterRecord","getAddMasterCombo","getDynamicMasterTempalte","getChildComboMaster","getChildValuesForAddMaster","getEditMaster","viewAttachment","DEFAULT_RETURN","showEsign","getControlMap","deleteAttachmentDropZone","getSameRecordFromTwoArrays","onDropAttachFileList","convertDateTimetoString","create_UUID","validateEmail","formatDate","sortData","ageCalculate","formatInputDate","extractFieldHeader","childComboClear","Lims_JSON_stringify","conditionBasedInput","ListWrapper","DynamicSlideout","designComponents","transactionStatus","getFieldSpecification","AddMasterRecords","getFieldSpecification1","getFieldSpecification3","ImportTemplate","mapStateToProps","state","Login","DynamicMaster","Component","constructor","props","dataStateChange","event","setState","dataResult","data","dataState","removeIndex","data1","splice","closeModal","loadEsign","openModal","selectedRecord","selectedMaster","selectedControl","masterextractedColumnList","masterfieldList","masterdataList","mastercomboComponents","masterwithoutCombocomponent","masterComboColumnFiled","masterOperation","masterEditObject","masterDesign","addMaster","masterIndex","screenName","operation","displayname","userInfo","slanguagetypecode","undefined","inputParam","displayName","updateInfo","typeName","selectedId","onSaveClickImportFile","saveType","formRef","inputFileData","nsitecode","nmastersitecode","editData","formData","FormData","acceptedFiles","stemplatefilename","length","forEach","file","index","append","dateList","masterData","DynamicMasterDesign","screendesign","masterdatefields","map","x","push","mandatoryfields","mandatoryFields","dataField","mandatory","JSON","stringify","comboComponents","masterdateconstraints","mastercombinationunique","ndesigntemplatemappingcode","classUrl","methodUrl","inputData","userinfo","isFileupload","esignNeeded","userRoleControlRights","nformcode","ncontrolCode","screenData","intl","formatMessage","id","warn","onComboChangeMasterDyanmic","comboData","control","customName","comboName","label","valuemember","nquerybuildertablecode","source","child","childComboList","childColumnList","columnList","val","comboChild","parentList","inputParem","primarykeyField","value","item","withoutCombocomponent","childParam","mastedataList","onInputOnChangeMasterDynamic","radiotext","target","type","name","checked","YES","NO","test","includes","indexOf","indexcomma","slice","handleDateChangeMasterDynamic","dateValue","dateName","onNumericInputChangeMasterDynamic","onNumericBlurMasterDynamic","max","parseFloat","precision","parseInt","min","onComboChangeMaster","fieldName","table","tableDataField","foreignDataField","childIndex","handleDateChangeMaster","age","onNumericInputOnChangeMaster","onInputOnChangeMaster","nneedcurrentaddress","sflatnotemp","sflatno","shousenotemp","shouseno","spostalcodetemp","spostalcode","sstreettemp","sstreet","scitynametemp","scityname","sdistrictnametemp","sdistrictname","sregionnametemp","sregionname","onSaveMasterRecord","toLowerCase","component","jsondata","ndynamicmastercode","jsonuidata","defaulttimezone","slideoutdesign","row","children","column","hasOwnProperty","componentrow","inputtype","pkey","loadcurrentdate","Date","timezone","isJsonField","jsonObjectName","controlType","dateField","controlName","selectedRecordName","loadSubSample","fieldList","extractedColumnList","get","Object","values","primaryKeyField","keys","masterprimaryKeyField","filter","ndesigncomponentcode","COMBOBOX","editMasterRecord","editObject","addId","controlMap","has","ncontrolcode","designData","Map","fetchRecord","fetchRecordParam","onNumericBlur","retunObj","childList","childData","findIndex","y","onComboChange","onNumericInputChange","handleDateChange","onDrop","oldVlaue","design","columns","ReactInputFields","parse","fields","designDataIndex","firstIndex","secondIndex","from","to","onDropFile","attachedFiles","maxSize","actionType","deleteAttachment","onInputOnChange","value1","import","deleteRecord","deleteParam","reloadData","onSaveClick","tempData","item1","fileName","splittedFileName","split","fileExtension","uniquefilename","susername","suserrolename","size","trim","validateEsign","sreason","nreasoncode","spredefinedreason","password","createRef","detailedColumnList","skip","take","settings","masterStatus","error","getDerivedStateFromProps","render","viewFileURL","editId","editParam","mastertimeZoneList","masterdefaultTimeZone","timeZoneList","defaultTimeZone","componentDidUpdate","previousProps","Layout","griditem","gridmoreitem","DynamicMasterData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { injectIntl } from 'react-intl';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport DynamicDataGrid from '../../components/data-grid/data-grid.component';\r\nimport SlideOutModal from '../../components/slide-out-modal/SlideOutModal';\r\nimport Esign from '../../pages/audittrail/Esign';\r\nimport {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    getEditDynamicMasterCombo,\r\n    //fetchRecord,\r\n    getDynamicMasterCombo, getChildValues,\r\n    addMasterRecord, getAddMasterCombo, getDynamicMasterTempalte,\r\n    getChildComboMaster, getChildValuesForAddMaster, getEditMaster, viewAttachment\r\n} from '../../actions';\r\nimport { DEFAULT_RETURN } from '../../actions/LoginTypes';\r\nimport {\r\n    showEsign, getControlMap, deleteAttachmentDropZone,\r\n    getSameRecordFromTwoArrays, onDropAttachFileList, convertDateTimetoString, create_UUID,\r\n    validateEmail, formatDate, sortData, ageCalculate, formatInputDate, extractFieldHeader, childComboClear, Lims_JSON_stringify, conditionBasedInput\r\n} from '../../components/CommonScript';\r\nimport { ListWrapper } from '../../components/client-group.styles';\r\nimport DynamicSlideout from '../dynamicpreregdesign/DynamicSlideout.jsx';\r\nimport { designComponents, transactionStatus } from '../../components/Enumeration';\r\nimport { getFieldSpecification } from '../../components/type2component/Type2FieldSpecificationList';\r\nimport AddMasterRecords from '../dynamicpreregdesign/AddMasterRecords'\r\nimport { getFieldSpecification as getFieldSpecification1 } from '../../components/type1component/Type1FieldSpecificationList';\r\nimport { getFieldSpecification as getFieldSpecification3 } from '../../components/type3component/Type3FieldSpecificationList';\r\nimport ImportTemplate from './ImportTemplate';\r\n\r\nconst mapStateToProps = state => {\r\n    return ({ Login: state.Login })\r\n}\r\n\r\nclass DynamicMaster extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.formRef = React.createRef();\r\n        this.extractedColumnList = [];\r\n        this.detailedColumnList = [];\r\n        const dataState = {\r\n            skip: 0,\r\n            take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5,\r\n        };\r\n        this.state = {\r\n            data: [], masterStatus: \"\", error: \"\", selectedRecord: {},\r\n            dataResult: [],\r\n            dataState: dataState,\r\n            userRoleControlRights: [],\r\n            controlMap: new Map(),\r\n            comboComponents: [],\r\n            withoutCombocomponent: [],\r\n            selectedMaster: []\r\n        };\r\n    }\r\n\r\n    dataStateChange = (event) => {\r\n        this.setState({\r\n            dataResult: process(this.state.data || [], event.dataState),\r\n            dataState: event.dataState\r\n        });\r\n    }\r\n\r\n    removeIndex = (data, removeIndex) => {\r\n        const data1 = [...data.splice(0, removeIndex), ...data.splice(removeIndex + 1)]\r\n        return data1\r\n    }\r\n\r\n    closeModal = () => {\r\n        let loadEsign = this.props.Login.loadEsign;\r\n        let openModal = this.props.Login.openModal;\r\n        let selectedRecord = this.props.Login.selectedRecord;\r\n        let selectedMaster = this.props.Login.selectedMaster;\r\n        let selectedControl = this.props.Login.selectedControl;\r\n        let masterextractedColumnList = this.props.Login.masterextractedColumnList;\r\n        let masterfieldList = this.props.Login.masterfieldList;\r\n        let masterdataList = this.props.Login.masterfieldList;\r\n        let mastercomboComponents = this.props.Login.masterfieldList;\r\n        let masterwithoutCombocomponent = this.props.Login.masterfieldList;\r\n        let masterComboColumnFiled = this.props.Login.masterComboColumnFiled;\r\n        let masterOperation = this.props.Login.masterOperation\r\n        let masterEditObject = this.props.Login.masterEditObject\r\n        let masterDesign = this.props.Login.masterDesign;\r\n        let addMaster = this.props.Login.addMaster\r\n        let masterIndex = this.props.Login.masterIndex\r\n        let screenName = this.props.Login.screenName\r\n\r\n        if (this.props.Login.loadEsign) {\r\n            if (this.props.Login.operation === \"delete\") {\r\n                loadEsign = false;\r\n                openModal = false;\r\n                selectedRecord = {};\r\n            }\r\n            else {\r\n                loadEsign = false;\r\n                selectedRecord['esignpassword'] = \"\"\r\n                selectedRecord['esigncomments'] = \"\"\r\n                selectedRecord['esignreason'] = \"\"\r\n            }\r\n        } else if (this.props.Login.addMaster) {\r\n            if (masterIndex !== 0) {\r\n                screenName = selectedControl[masterIndex - 1].displayname[this.props.Login.userInfo.slanguagetypecode]\r\n                selectedMaster = this.removeIndex(selectedMaster, masterIndex)\r\n                selectedControl = this.removeIndex(selectedControl, masterIndex)\r\n                masterextractedColumnList = masterextractedColumnList && this.removeIndex(masterextractedColumnList, masterIndex)\r\n                masterfieldList = masterfieldList && this.removeIndex(masterfieldList, masterIndex)\r\n                masterdataList = masterdataList && this.removeIndex(masterdataList, masterIndex)\r\n                mastercomboComponents = mastercomboComponents && this.removeIndex(mastercomboComponents, masterIndex)\r\n                masterComboColumnFiled = masterComboColumnFiled && this.removeIndex(masterComboColumnFiled, masterIndex)\r\n                masterwithoutCombocomponent = masterwithoutCombocomponent && this.removeIndex(masterwithoutCombocomponent, masterIndex)\r\n                masterDesign = masterDesign && this.removeIndex(masterDesign, masterIndex)\r\n                masterOperation = masterOperation && this.removeIndex(masterOperation, masterIndex)\r\n                masterEditObject = masterEditObject && this.removeIndex(masterEditObject, masterIndex)\r\n                masterIndex = masterIndex - 1;\r\n                //  masterprimaryKeyField = \"\"\r\n                //addMaster = false\r\n            } else {\r\n                selectedMaster = []\r\n                selectedControl = []\r\n                masterextractedColumnList = []\r\n                masterfieldList = []\r\n                addMaster = false\r\n                masterdataList = []\r\n                mastercomboComponents = []\r\n                masterwithoutCombocomponent = []\r\n                masterComboColumnFiled = []\r\n                masterDesign = []\r\n                masterOperation = []\r\n                masterEditObject = []\r\n                masterIndex = undefined\r\n                screenName = this.props.Login.inputParam.displayName\r\n            }\r\n\r\n        }\r\n        else {\r\n            openModal = false;\r\n            selectedRecord = {};\r\n            selectedMaster = []\r\n            selectedControl = []\r\n            masterextractedColumnList = []\r\n            masterfieldList = []\r\n            addMaster = false\r\n            masterdataList = []\r\n            mastercomboComponents = []\r\n            masterwithoutCombocomponent = []\r\n            masterComboColumnFiled = []\r\n            masterDesign = []\r\n            masterOperation = []\r\n            masterEditObject = []\r\n            masterIndex = undefined\r\n        }\r\n\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: {\r\n                openModal, loadEsign,\r\n                selectedRecord, selectedId: null, selectedMaster, selectedControl,\r\n                masterextractedColumnList, masterfieldList\r\n                , addMaster, masterIndex, masterdataList,\r\n                mastercomboComponents,\r\n                masterwithoutCombocomponent,\r\n                masterComboColumnFiled, masterDesign, screenName, masterOperation,\r\n                masterEditObject,\r\n            }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n\r\n    }\r\n\r\n    static getDerivedStateFromProps(props, state) {\r\n        if (props.Login.masterStatus !== \"\" && props.Login.masterStatus !== state.masterStatus) {\r\n            toast.warn(props.Login.masterStatus);\r\n            props.Login.masterStatus = \"\";\r\n        }\r\n\r\n        if (props.Login.error !== state.error) {\r\n            toast.error(props.Login.error)\r\n            props.Login.error = \"\";\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n\r\n        let primaryKeyField = \"ndynamicmastercode\";\r\n        let viewFileURL={\"classUrl\":\"dynamicmaster\",\r\n        \"methodUrl\" :\"DynamicMaster\",\"screenName\":\"DynamicMaster\"};\r\n\r\n        const editId = this.props.Login.inputParam && this.state.controlMap.has(\"Edit\")\r\n            && this.state.controlMap.get(\"Edit\").ncontrolcode;\r\n\r\n        const editParam = {\r\n            screenName: this.props.Login.inputParam && this.props.Login.inputParam.displayName\r\n                && this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }), operation: \"update\", primaryKeyField,\r\n            inputParam: this.props.Login.inputParam, userInfo: this.props.Login.userInfo, ncontrolCode: editId\r\n        };\r\n\r\n        const deleteParam = { operation: \"delete\" };\r\n\r\n        // const mandatoryFields=[];\r\n        // this.extractedColumnList.forEach(item=>item.mandatory === true ? \r\n        //     mandatoryFields.push(item) :\"\"\r\n        // );   \r\n\r\n        return (<>\r\n            <Row>\r\n                <Col>\r\n                    <ListWrapper className=\"client-list-content\">\r\n                        {this.state.data ?\r\n                            <DynamicDataGrid\r\n                                primaryKeyField={primaryKeyField}\r\n                                data={this.state.data}\r\n                                dataResult={this.state.dataResult}\r\n                                dataState={this.state.dataState}\r\n                                dataStateChange={this.dataStateChange}\r\n                                extractedColumnList={this.extractedColumnList}\r\n                                detailedFieldList={this.detailedColumnList}\r\n                                expandField={this.detailedColumnList.length > 0 ? \"expanded\" : false}\r\n                                methodUrl={\"\"}\r\n                                controlMap={this.state.controlMap}\r\n                                userRoleControlRights={this.state.userRoleControlRights}\r\n                                inputParam={this.props.Login.inputParam}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                fetchRecord={this.fetchRecord}\r\n                                editParam={editParam}\r\n                                deleteRecord={this.deleteRecord}\r\n                                deleteParam={deleteParam}\r\n                                reloadData={this.reloadData}\r\n                                addRecord={this.openModal}\r\n                                pageable={true}\r\n                                scrollable={'scrollable'}\r\n                                gridHeight={'600px'}\r\n                                isActionRequired={true}\r\n                                isToolBarRequired={true}\r\n                                selectedId={this.props.Login.selectedId}\r\n                                import={this.import}\r\n                                screenName={this.props.Login.displayName}\r\n                                isImportRequired={false}\r\n                                viewFileURL={viewFileURL}\r\n                            />\r\n                            : \"\"}\r\n                    </ListWrapper>\r\n                </Col>\r\n            </Row>\r\n\r\n            {/* Below Condition Added to avoid unwanted rendering of SlideOut */}\r\n            {this.props.Login.openModal ?\r\n                <SlideOutModal show={this.props.Login.openModal}\r\n                    closeModal={this.closeModal}\r\n                    operation={this.props.Login.addMaster ? this.props.Login.masterOperation[this.props.Login.masterIndex] : this.props.Login.operation ? this.props.Login.operation : \"create\"}\r\n                    inputParam={this.props.Login.inputParam}\r\n                    screenName={this.props.Login.screenName}\r\n                    onSaveClick={this.props.Login.addMaster ?\r\n                        this.onSaveMasterRecord : this.props.Login.operation === 'import' ?\r\n                            this.onSaveClickImportFile : this.onSaveClick}\r\n                    esign={this.props.Login.loadEsign}\r\n                    validateEsign={this.validateEsign}\r\n                    masterStatus={this.props.Login.masterStatus}\r\n                    updateStore={this.props.updateStore}\r\n                    selectedRecord={this.props.Login.addMaster ?\r\n                        this.state.selectedMaster[this.props.Login.masterIndex] : this.state.selectedRecord || {}}\r\n                    mandatoryFields={this.props.Login.addMaster ?\r\n                        this.props.Login.masterextractedColumnList[this.props.Login.masterIndex].filter(x => x.mandatory === true)\r\n                        : this.props.Login.operation === 'import' ? [{\r\n                            \"mandatory\": true,\r\n                            \"idsName\": \"IDS_FILE\",\r\n                            \"dataField\": 'stemplatefilename',\r\n                            \"mandatoryLabel\": \"IDS_SELECT\",\r\n                            \"controlType\": \"textbox\"\r\n                        }] : this.state.mandatoryFields || []}\r\n                    addComponent={this.props.Login.loadEsign ?\r\n                        <Esign operation={this.props.Login.operation}\r\n                            onInputOnChange={this.onInputOnChange}\r\n                            inputParam={this.props.Login.inputParam}\r\n                            selectedRecord={this.state.selectedRecord || {}}\r\n                        /> : this.props.Login.addMaster ?\r\n                            <AddMasterRecords\r\n                                selectedControl={this.props.Login.selectedControl[this.props.Login.masterIndex]}\r\n                                fieldList={this.props.Login.masterfieldList && this.props.Login.masterfieldList[this.props.Login.masterIndex]}\r\n                                extractedColumnList={this.props.Login.masterextractedColumnList[this.props.Login.masterIndex]}\r\n                                // primaryKeyField={this.props.Login.masterprimaryKeyField}\r\n                                selectedRecord={this.state.selectedMaster[this.props.Login.masterIndex] || {}}\r\n                                onInputOnChange={this.onInputOnChangeMaster}\r\n                                onComboChange={this.onComboChangeMaster}\r\n                                handleDateChange={this.handleDateChangeMaster}\r\n                                dataList={this.props.Login.masterdataList && this.props.Login.masterdataList[this.props.Login.masterIndex]}\r\n                                onNumericInputOnChange={this.onNumericInputOnChangeMaster}\r\n                                masterDesign={this.props.Login.masterDesign && this.props.Login.masterDesign[this.props.Login.masterIndex]}\r\n                                mastertimeZoneList={this.props.Login.mastertimeZoneList}\r\n                                masterdefaultTimeZone={this.props.Login.masterdefaultTimeZone}\r\n                                onComboChangeMasterDyanmic={this.onComboChangeMasterDyanmic}\r\n                                handleDateChangeMasterDynamic={this.handleDateChangeMasterDynamic}\r\n                                onInputOnChangeMasterDynamic={this.onInputOnChangeMasterDynamic}\r\n                                onNumericInputChangeMasterDynamic={this.onNumericInputChangeMasterDynamic}\r\n                                onNumericBlurMasterDynamic={this.onNumericBlurMasterDynamic}\r\n                                userInfo={this.props.Login.userInfo}\r\n                                Login={this.props.Login}\r\n                                addMasterRecord={this.addMasterRecord}\r\n                                editMasterRecord={this.editMasterRecord}\r\n                                userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                masterIndex={this.props.Login.masterIndex}\r\n                            /> : this.props.Login.operation === 'import' ?\r\n                                <ImportTemplate\r\n                                    selectedRecord={this.state.selectedRecord || {}}\r\n                                    //onInputOnChange={this.onInputOnChange}\r\n                                    onDrop={this.onDropFile}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                    actionType={this.state.actionType}\r\n                                />\r\n                                :\r\n                                <DynamicSlideout\r\n                                    selectedRecord={this.props.Login.selectedRecord}\r\n                                    templateData={this.props.Login.masterData.DynamicMasterDesign &&\r\n                                        this.props.Login.masterData.DynamicMasterDesign.slideoutdesign}\r\n                                    // handleChange={this.handleChange}\r\n                                    handleDateChange={this.handleDateChange}\r\n                                    onInputOnChange={this.onInputOnChange}\r\n                                    onNumericInputChange={this.onNumericInputChange}\r\n                                    comboData={this.props.Login.comboData}\r\n                                    onComboChange={this.onComboChange}\r\n                                    onDropFile={this.onDropFile}\r\n                                    deleteAttachment={this.deleteAttachment}\r\n                                    onNumericBlur={this.onNumericBlur}\r\n                                    userInfo={this.props.Login.userInfo}\r\n                                    timeZoneList={this.props.Login.timeZoneList}\r\n                                    defaultTimeZone={this.props.Login.defaultTimeZone}\r\n                                    Login={this.props.Login}\r\n                                    addMasterRecord={this.addMasterRecord}\r\n                                    editMasterRecord={this.editMasterRecord}\r\n                                    userRoleControlRights={this.props.Login.userRoleControlRights}\r\n                                />\r\n                    }\r\n\r\n                /> : \"\"}\r\n        </>\r\n        );\r\n    }\r\n   \r\n\r\n    onSaveClickImportFile = (saveType, formRef) => {\r\n        //add \r\n        let inputFileData = { nsitecode: this.props.Login.userInfo.nmastersitecode };\r\n        let editData = {};\r\n        const formData = new FormData();\r\n        const selectedRecord = this.state.selectedRecord;\r\n        const acceptedFiles = selectedRecord.stemplatefilename;\r\n        if (acceptedFiles && acceptedFiles.length === 1) {\r\n            inputFileData['userinfo'] = this.props.Login.userInfo\r\n            if (acceptedFiles && acceptedFiles.length === 1) {\r\n                acceptedFiles.forEach((file, index) => {\r\n                    formData.append(\"uploadedFile\", file);\r\n                });\r\n            }\r\n            const dateList = [];\r\n            this.props.Login.masterData.DynamicMasterDesign.screendesign.masterdatefields.map(x => {\r\n                dateList.push(x['2'])\r\n            })\r\n\r\n            let mandatoryfields ={};\r\n            this.state.mandatoryFields.map(x=>{\r\n              mandatoryfields[x.dataField]=x.mandatory;\r\n\r\n            })\r\n            formData.append('mandatoryFields',Lims_JSON_stringify(JSON.stringify(mandatoryfields),false))\r\n            formData.append('comboComponents', Lims_JSON_stringify(JSON.stringify(this.state.comboComponents), false))\r\n            formData.append('masterdateconstraints', Lims_JSON_stringify(JSON.stringify(this.props.Login.masterData.DynamicMasterDesign.screendesign.masterdateconstraints), false))\r\n            formData.append('masterdatelist', Lims_JSON_stringify(JSON.stringify(dateList), false))\r\n            formData.append('mastercombinationunique', Lims_JSON_stringify(JSON.stringify(this.props.Login.masterData.DynamicMasterDesign.screendesign.mastercombinationunique), false))\r\n            formData.append('ndesigntemplatemappingcode', this.props.Login.masterData.DynamicMasterDesign.ndesigntemplatemappingcode)\r\n            const inputParam = {\r\n                classUrl: this.props.Login.inputParam.classUrl,\r\n                methodUrl: this.props.Login.inputParam.methodUrl,\r\n                inputData: { userinfo: this.props.Login.userInfo },\r\n                formData: formData,\r\n                editData: editData,\r\n                isFileupload: true,\r\n                operation: this.props.Login.operation,\r\n                displayName: this.props.Login.inputParam.displayName,\r\n                saveType, formRef\r\n\r\n            }\r\n            const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n            if (esignNeeded) {\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: {\r\n                        loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                        openModal: true, screenName: this.props.intl.formatMessage({ id: this.props.Login.inputParam.displayName }),\r\n                        operation: this.props.Login.operation,\r\n                    },\r\n\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n            else {\r\n                this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n            }\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_PLEASESELECTTHEFILE\" }))\r\n        }\r\n    }\r\n\r\n    onComboChangeMasterDyanmic = (comboData, control, customName) => {\r\n\r\n        let comboName = customName || control.label;\r\n        let selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n        //if (comboData) {\r\n        comboData[\"item\"] = {\r\n            ...comboData[\"item\"], \"pkey\": control.valuemember, \"nquerybuildertablecode\": control.nquerybuildertablecode,\r\n            \"source\": control.source\r\n        };\r\n        selectedMaster[masterIndex][comboName] = comboData;\r\n\r\n        // console.log(\"selected:\", selectedMaster, comboData, control, customName);\r\n        if (control.child && control.child.length > 0) {\r\n            const childComboList = getSameRecordFromTwoArrays(this.props.Login.mastercomboComponents[masterIndex], control.child, \"label\")\r\n            let childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = this.comboChild(this.props.Login.mastercomboComponents[masterIndex], columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            const parentList = getSameRecordFromTwoArrays(this.props.Login.masterwithoutCombocomponent[masterIndex], control.child, \"label\")\r\n\r\n            if (comboData) {\r\n                const inputParem = {\r\n                    child: control.child,\r\n                    source: control.source,\r\n                    primarykeyField: control.valuemember,\r\n                    value: comboData.value,\r\n                    item: comboData.item\r\n                }\r\n                this.props.getChildValuesForAddMaster(inputParem,\r\n                    this.props.Login.userInfo, selectedMaster, this.props.Login.masterdataList,\r\n                    childComboList, childColumnList,\r\n                    this.props.Login.masterwithoutCombocomponent,\r\n                    [...childComboList, ...parentList], masterIndex)\r\n            } else {\r\n                let comboData = this.props.Login.masterdataList\r\n                const withoutCombocomponent = this.props.Login.masterwithoutCombocomponent || []\r\n                const inputParam = { control, comboComponents: this.props.Login.mastercomboComponents[masterIndex], withoutCombocomponent: withoutCombocomponent[masterIndex], selectedMaster: selectedMaster[masterIndex], comboData: comboData[masterIndex] }\r\n                const childParam = childComboClear(inputParam)\r\n                selectedMaster[masterIndex] = childParam.selectedRecord\r\n                comboData[masterIndex] = childParam.comboData\r\n                const updateInfo = {\r\n                    typeName: DEFAULT_RETURN,\r\n                    data: { selectedMaster, mastedataList: comboData }\r\n                }\r\n                this.props.updateStore(updateInfo);\r\n            }\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedMaster }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n\r\n    onInputOnChangeMasterDynamic = (event, control, radiotext) => {\r\n        let selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n\r\n        if (event.target.type === 'toggle') {\r\n            selectedMaster[masterIndex][event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else if (event.target.type === 'numeric') {\r\n            if (/\\D/.test(event.target.value))\r\n                selectedMaster[masterIndex][event.target.name] = event.target.value;\r\n        } else if (event.target.type === 'checkbox') {\r\n            const value = selectedMaster[masterIndex][event.target.name];\r\n            if (value !== '' && value !== undefined) {\r\n                if (value.includes(radiotext)) {\r\n                    const index = value.indexOf(radiotext);\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedMaster[masterIndex][event.target.name] = value.slice(indexcomma + 1)\r\n                            } else {\r\n                                selectedMaster[masterIndex][event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            if (value.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedMaster[masterIndex][event.target.name] = value.slice(0, index) + value.slice(index + value.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedMaster[masterIndex][event.target.name] = value.slice(0, index - 1)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedMaster[masterIndex][event.target.name] = value + ',' + radiotext;\r\n                }\r\n\r\n            } else {\r\n                selectedMaster[masterIndex][event.target.name] = radiotext;\r\n            }\r\n        } else if (event.target.type === 'radio') {\r\n            selectedMaster[masterIndex][event.target.name] = radiotext\r\n        } else {\r\n            selectedMaster[masterIndex][event.target.name] = conditionBasedInput(control, event.target.value, radiotext)\r\n            // selectedMaster[masterIndex][event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedMaster });\r\n    }\r\n\r\n\r\n    handleDateChangeMasterDynamic = (dateValue, dateName) => {\r\n        let selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n\r\n        selectedMaster[masterIndex][dateName] = dateValue;\r\n\r\n        this.setState({ selectedMaster });\r\n    }\r\n\r\n    onNumericInputChangeMasterDynamic = (value, name) => {\r\n        let selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n\r\n        selectedMaster[masterIndex][name] = value;\r\n        this.setState({ selectedMaster });\r\n    }\r\n\r\n    onNumericBlurMasterDynamic = (value, control) => {\r\n        let selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n\r\n        if (selectedMaster[masterIndex][control.label]) {\r\n            if (control.max) {\r\n                if (!(selectedMaster[masterIndex][control.label] < parseFloat(control.max))) {\r\n                    selectedMaster[masterIndex][control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max)\r\n                }\r\n            }\r\n            if (control.min) {\r\n                if (!(selectedMaster[masterIndex][control.label] > parseFloat(control.min))) {\r\n                    selectedMaster[masterIndex][control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min)\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        this.setState({ selectedMaster });\r\n    }\r\n    onComboChangeMaster = (comboData, fieldName, item) => {\r\n        const selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n        if (comboData !== null) {\r\n            if (this.props.Login.selectedControl[masterIndex].table.item.nformcode === 137) {\r\n                selectedMaster[masterIndex][item.tableDataField] = comboData.value;\r\n            }\r\n            else if (item.foreignDataField) {\r\n                selectedMaster[masterIndex][item.foreignDataField] = comboData.value;\r\n            }\r\n        }\r\n        selectedMaster[masterIndex][fieldName] = comboData;\r\n        if (item.childIndex !== undefined) {\r\n            this.props.getChildComboMaster(selectedMaster, fieldName, item,\r\n                this.props.Login.selectedControl,\r\n                this.props.Login.masterfieldList,\r\n                this.props.Login.masterdataList, this.props.Login.userInfo, masterIndex)\r\n        } else {\r\n            this.setState({ selectedMaster });\r\n        }\r\n\r\n    }\r\n\r\n    handleDateChangeMaster = (dateName, dateValue, item) => {\r\n        //   const { selectedMaster } = this.state;\r\n        const selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n\r\n        selectedMaster[masterIndex][dateName] = dateValue;\r\n        const age = ageCalculate(dateValue);\r\n        selectedMaster[masterIndex][\"sage\"] = age;\r\n        this.setState({ selectedMaster });\r\n\r\n    }\r\n\r\n    onNumericInputOnChangeMaster = (value, name, item) => {\r\n        const selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n\r\n        selectedMaster[masterIndex][name] = value;\r\n        this.setState({ selectedMaster });\r\n    }\r\n\r\n\r\n\r\n    onInputOnChangeMaster = (event) => {\r\n        const selectedMaster = this.state.selectedMaster || [];\r\n        const masterIndex = this.props.Login.masterIndex\r\n        selectedMaster[masterIndex] = selectedMaster[masterIndex] && { ...selectedMaster[masterIndex] } || {}\r\n\r\n        if (event.target.type === 'checkbox') {\r\n            selectedMaster[masterIndex][event.target.name] = event.target.checked === true ? 3 : 4;\r\n            if (this.props.Login.selectedControl[masterIndex].table.item.nformcode === 137) {\r\n                if (selectedMaster[masterIndex].nneedcurrentaddress === 3) {\r\n                    selectedMaster[masterIndex].sflatnotemp = selectedMaster[masterIndex].sflatno;\r\n                    selectedMaster[masterIndex].shousenotemp = selectedMaster[masterIndex].shouseno;\r\n                    selectedMaster[masterIndex].spostalcodetemp = selectedMaster[masterIndex].spostalcode;\r\n                    selectedMaster[masterIndex].sstreettemp = selectedMaster[masterIndex].sstreet;\r\n                    selectedMaster[masterIndex].scitynametemp = selectedMaster[masterIndex].scityname;\r\n                    selectedMaster[masterIndex].sdistrictnametemp = selectedMaster[masterIndex].sdistrictname;\r\n                    selectedMaster[masterIndex].sregionnametemp = selectedMaster[masterIndex].sregionname;\r\n                }\r\n                else {\r\n                    selectedMaster[masterIndex].sflatnotemp = \"\";\r\n                    selectedMaster[masterIndex].shousenotemp = \"\";\r\n                    selectedMaster[masterIndex].spostalcodetemp = \"\";\r\n                    selectedMaster[masterIndex].sstreettemp = \"\";\r\n                    selectedMaster[masterIndex].scitynametemp = \"\";\r\n                    selectedMaster[masterIndex].sdistrictnametemp = \"\";\r\n                    selectedMaster[masterIndex].sregionnametemp = \"\";\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            selectedMaster[masterIndex][event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedMaster });\r\n    }\r\n\r\n    onSaveMasterRecord = (saveType, formRef) => {\r\n        //add / edit            \r\n        const masterIndex = this.props.Login.masterIndex;\r\n        let inputData = [];\r\n        const selectedControl = this.props.Login.selectedControl\r\n        const masterDesign = this.props.Login.masterDesign\r\n        inputData[\"userinfo\"] = { ...this.props.Login.userInfo, nformcode: selectedControl[masterIndex].table.item.nformcode };\r\n        inputData[selectedControl[masterIndex].table.item.methodUrl.toLowerCase()] = { \"nsitecode\": this.props.Login.userInfo.nmastersitecode };\r\n\r\n        const methodUrl = selectedControl[masterIndex].table.item.methodUrl.toLowerCase()\r\n        if (this.props.Login.masterOperation[masterIndex] === 'update') {\r\n            if (selectedControl[masterIndex].table.item.component === 'Dynamic') {\r\n                inputData[methodUrl][\"ndynamicmastercode\"] = this.props.Login.masterEditObject[masterIndex].item ?\r\n                    this.props.Login.masterEditObject[masterIndex].item.jsondata.ndynamicmastercode : this.props.Login.masterEditObject[masterIndex].ndynamicmastercode\r\n            }\r\n            else {\r\n                inputData[methodUrl][selectedControl[masterIndex][\"valuemember\"]] = this.props.Login.masterEditObject[masterIndex].value\r\n            }\r\n\r\n        }\r\n\r\n\r\n        if (selectedControl[masterIndex].table.item.component === 'Dynamic') {\r\n            const selectedMaster = this.state.selectedMaster;\r\n            inputData[\"userinfo\"] = { ...this.props.Login.userInfo, nformcode: selectedControl[masterIndex].table.item.nformcode };\r\n            inputData[\"masterdateconstraints\"] = masterDesign[masterIndex].screendesign.masterdateconstraints;\r\n            inputData[\"masterdatefields\"] = masterDesign[masterIndex].screendesign.masterdatefields;\r\n            inputData[\"mastercombinationunique\"] = masterDesign[masterIndex].screendesign.mastercombinationunique;\r\n            //add                          \r\n            inputData[\"dynamicmaster\"] = {\r\n                ...inputData[methodUrl],\r\n                nformcode: selectedControl[masterIndex].table.item.nformcode,\r\n                ndesigntemplatemappingcode: masterDesign[masterIndex].ndesigntemplatemappingcode,\r\n                jsondata: {}, jsonuidata: {}\r\n            };\r\n\r\n            const dateList = [];\r\n            const defaulttimezone = this.props.Login.defaulttimezone;\r\n\r\n            masterDesign[masterIndex] &&\r\n                masterDesign[masterIndex].slideoutdesign.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            if (component.hasOwnProperty(\"children\")) {\r\n\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\") {\r\n                                        inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = selectedMaster[componentrow.label] ?\r\n                                            {\r\n                                                value: selectedMaster[masterIndex][componentrow.label].value,\r\n                                                label: selectedMaster[masterIndex][componentrow.label].label,\r\n                                                pkey: componentrow.valuemember,\r\n                                                nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                                source: componentrow.source,\r\n                                                [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: this.props.Login.masterOperation[masterIndex] === 'update' ?\r\n                                                    selectedMaster[masterIndex][componentrow.label].item ? selectedMaster[masterIndex][componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                        selectedMaster[masterIndex][componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                    :\r\n                                                    selectedMaster[masterIndex][componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                            } : -1\r\n\r\n                                        inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = selectedMaster[masterIndex][componentrow.label] ? selectedMaster[masterIndex][componentrow.label].label : \"\"\r\n\r\n                                    }\r\n                                    else if (componentrow.inputtype === \"date\") {\r\n                                        if (componentrow.mandatory) {\r\n                                            inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = formatDate(selectedMaster[masterIndex][componentrow.label], false)\r\n\r\n                                            inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]\r\n                                            //inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = convertDateTimetoString(selectedRecord[componentrow.label], userInfo);\r\n                                        }\r\n                                        else {\r\n                                            inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                                formatDate(selectedMaster[masterIndex][componentrow.label] || new Date(), false) :\r\n                                                selectedMaster[masterIndex][componentrow.label] ? formatDate(selectedMaster[masterIndex][componentrow.label], false)\r\n                                                    : \"\";\r\n\r\n                                            inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label];\r\n                                            //convertDateTimetoString(selectedRecord[componentrow.label], userInfo);\r\n                                        }\r\n                                        if (componentrow.timezone) {\r\n                                            inputData[\"dynamicmaster\"][\"jsondata\"][`tz${componentrow.label}`] = selectedMaster[masterIndex][`tz${componentrow.label}`] ?\r\n                                                { value: selectedMaster[masterIndex][`tz${componentrow.label}`].value, label: selectedMaster[masterIndex][`tz${componentrow.label}`].label } :\r\n                                                defaulttimezone ? defaulttimezone : -1\r\n\r\n                                            inputData[\"dynamicmaster\"][\"jsonuidata\"][`tz${componentrow.label}`] = inputData[\"dynamicmaster\"][\"jsondata\"][`tz${componentrow.label}`]\r\n                                        }\r\n                                        dateList.push(componentrow.label)\r\n                                    }\r\n\r\n                                    else {\r\n                                        inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = selectedMaster[masterIndex][componentrow.label] ?\r\n                                            selectedMaster[masterIndex][componentrow.label] : \"\"\r\n\r\n                                        inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]\r\n                                        // inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]\r\n\r\n                                    }\r\n                                    return inputData[\"dynamicmaster\"];\r\n                                })\r\n                            }\r\n                            else {\r\n                                if (component.inputtype === \"combo\") {\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = selectedMaster[masterIndex][component.label] ?\r\n                                        {\r\n                                            value: selectedMaster[masterIndex][component.label].value,\r\n                                            label: selectedMaster[masterIndex][component.label].label,\r\n                                            pkey: component.valuemember,\r\n                                            nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                            source: component.source,\r\n                                            [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]: this.props.Login.masterOperation[masterIndex] === 'update' ?\r\n                                                selectedMaster[masterIndex][component.label].item ? selectedMaster[masterIndex][component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] : selectedMaster[masterIndex][component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                                :\r\n                                                selectedMaster[masterIndex][component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                        } : -1\r\n\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label;\r\n                                    //selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\r\n                                }\r\n                                else if (component.inputtype === \"date\") {\r\n                                    if (component.mandatory) {\r\n                                        inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = formatDate(selectedMaster[masterIndex][component.label], false);\r\n                                        // convertDateTimetoString(selectedRecord[component.label] ?\r\n                                        // selectedRecord[component.label] : new Date(), userInfo);\r\n\r\n                                        inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]\r\n                                        //convertDateTimetoString(selectedRecord[component.label], userInfo);\r\n\r\n                                    } else {\r\n                                        inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                            //convertDateTimetoString(selectedRecord[component.label] ?                                      \r\n                                            //    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                            formatDate(selectedMaster[masterIndex][component.label] || new Date(), false) :\r\n                                            selectedMaster[masterIndex][component.label] ?\r\n                                                // convertDateTimetoString(selectedRecord[component.label] ?\r\n                                                //   selectedRecord[component.label] : new Date(), userInfo) : \"\";\r\n                                                formatDate(selectedMaster[masterIndex][component.label], false) : \"\";\r\n                                        inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]\r\n                                        //convertDateTimetoString(selectedRecord[component.label], userInfo)\r\n\r\n                                    }\r\n                                    if (component.timezone) {\r\n                                        inputData[\"dynamicmaster\"][\"jsondata\"][`tz${component.label}`] = selectedMaster[masterIndex][`tz${component.label}`] ?\r\n                                            { value: selectedMaster[masterIndex][`tz${component.label}`].value, label: selectedMaster[masterIndex][`tz${component.label}`].label } :\r\n                                            defaulttimezone ? defaulttimezone : -1\r\n\r\n                                        inputData[\"dynamicmaster\"][\"jsonuidata\"][`tz${component.label}`] = inputData[\"dynamicmaster\"][\"jsondata\"][`tz${component.label}`]\r\n                                    }\r\n                                    dateList.push(component.label)\r\n                                }\r\n                                else {\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = selectedMaster[masterIndex][component.label] ?\r\n                                        selectedMaster[masterIndex][component.label] : \"\"\r\n\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]\r\n                                }\r\n                            }\r\n                            return inputData[\"dynamicmaster\"];\r\n                        }\r\n                        )\r\n                        return inputData[\"dynamicmaster\"];\r\n                    })\r\n                    return inputData[\"dynamicmaster\"];\r\n                })\r\n\r\n\r\n            inputData[\"dynamicmaster\"][\"jsonstring\"] = JSON.stringify(inputData[\"dynamicmaster\"][\"jsondata\"]);\r\n            inputData[\"dynamicmaster\"][\"jsonuistring\"] = JSON.stringify(inputData[\"dynamicmaster\"][\"jsonuidata\"]);\r\n            inputData[\"masterdatelist\"] = dateList;\r\n\r\n\r\n        }\r\n        else if (selectedControl[masterIndex].table.item.component === 'Type3Component'\r\n            && selectedControl[masterIndex].table.item.nformcode === 137) {\r\n            inputData[\"noneedfilter\"] = true\r\n            this.props.Login.masterextractedColumnList[masterIndex].map(item => {\r\n                let fieldName = item.dataField;\r\n                if (item.isJsonField === true) {\r\n                    return inputData[methodUrl][item.jsonObjectName] = { ...inputData[methodUrl][item.jsonObjectName], [fieldName]: this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\" }\r\n                }\r\n                else {\r\n                    if (item.controlType === \"selectbox\") {\r\n                        // inputData[methodUrl][fieldName] = this.state.selectedMaster[fieldName] ? this.state.selectedMaster[fieldName].label ? this.state.selectedMaster[fieldName].label : \"\" : -1;\r\n                        inputData[methodUrl][item.tableDataField] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName].value ? this.state.selectedMaster[masterIndex][fieldName].value : \"\" : -1;\r\n                        return inputData;\r\n                    }\r\n                    else if (item.controlType === \"datepicker\") {\r\n                        inputData[methodUrl][item.dateField] = formatInputDate(this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\", false);\r\n                    }\r\n                    else if (item.controlType === \"checkbox\") {\r\n                        inputData[methodUrl][item.controlName] = this.state.selectedMaster[masterIndex][item.controlName] ? this.state.selectedMaster[masterIndex][item.controlName] : transactionStatus.NO;\r\n                    }\r\n                    else {\r\n                        inputData[methodUrl][fieldName] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\";\r\n                    }\r\n                    // inputData[methodUrl][selectedRecordPrimarykey] = this.props.Login.selectedId;\r\n                    return inputData;\r\n                }\r\n            })\r\n        }\r\n        else {\r\n\r\n            this.props.Login.masterextractedColumnList[masterIndex].map(item => {\r\n                let fieldName = item.dataField;\r\n                if (item.isJsonField === true) {\r\n                    return inputData[methodUrl][item.jsonObjectName] = { ...inputData[methodUrl][item.jsonObjectName], [fieldName]: this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\" }\r\n                }\r\n                else {\r\n                    if (item.controlType === \"selectbox\") {\r\n                        inputData[methodUrl][fieldName] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName].label ? this.state.selectedMaster[masterIndex][fieldName].label : \"\" : -1;\r\n                        inputData[methodUrl][item.foreignDataField] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName].value ? this.state.selectedMaster[masterIndex][fieldName].value : \"\" : -1;\r\n                        return inputData;\r\n                    }\r\n                    else if (item.controlType === \"datepicker\") {\r\n                        inputData[methodUrl][item.dateField] = formatInputDate(this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\", false);\r\n                    }\r\n                    else if (item.controlType === \"checkbox\") {\r\n                        inputData[methodUrl][item.controlName] = this.state.selectedMaster[masterIndex][item.controlName] ? this.state.selectedMaster[masterIndex][item.controlName] : transactionStatus.NO;\r\n                    }\r\n                    else {\r\n                        inputData[methodUrl][fieldName] = this.state.selectedMaster[masterIndex][fieldName] ? this.state.selectedMaster[masterIndex][fieldName] : \"\";\r\n                    }\r\n                    // inputData[methodUrl][selectedRecordPrimarykey] = this.props.Login.selectedId;\r\n                    return inputData;\r\n                }\r\n            })\r\n        }\r\n        // }\r\n\r\n        const inputParam = {\r\n            userinfo: this.props.Login.userInfo,\r\n            withoutCombocomponent: this.state.withoutCombocomponent,\r\n            comboComponents: this.state.comboComponents,\r\n            selectedRecord: this.state.selectedRecord,\r\n            selectedRecordName: 'selectedRecord',\r\n            loadSubSample: false,\r\n            selectedControl: this.props.Login.selectedControl,\r\n            comboData: this.props.Login.comboData,\r\n            comboName: 'comboData',\r\n            classUrl: selectedControl[masterIndex].table.item.classUrl,\r\n            methodUrl: selectedControl[masterIndex].table.item.methodUrl,\r\n            displayName: this.props.Login.inputParam.displayName,// selectedControl[masterIndex].table.item.sdisplayname,\r\n            screenName: masterIndex !== 0 ?\r\n                selectedControl[masterIndex - 1].displayname[this.props.Login.userInfo.slanguagetypecode] : this.props.Login.inputParam.displayName,\r\n            inputData: inputData,\r\n            operation: this.props.Login.masterOperation[masterIndex],\r\n            masterEditObject: this.props.Login.masterEditObject,\r\n            masterOperation: this.props.Login.masterOperation, saveType, formRef,\r\n            masterIndex,\r\n            selectedMaster: this.state.selectedMaster,\r\n            mastercomboComponents: this.props.Login.mastercomboComponents,\r\n            masterwithoutCombocomponent: this.props.Login.masterwithoutCombocomponent,\r\n            masterComboColumnFiled: this.props.Login.masterComboColumnFiled,\r\n            masterextractedColumnList: this.props.Login.masterextractedColumnList,\r\n            masterdataList: this.props.Login.masterdataList,\r\n            masterDesign: this.props.Login.masterDesign,\r\n            masterfieldList: this.props.Login.masterfieldList,\r\n\r\n        }\r\n\r\n        this.props.addMasterRecord(inputParam, this.props.Login.masterData)\r\n\r\n\r\n\r\n    }\r\n\r\n\r\n    addMasterRecord = (control) => {\r\n        let masterIndex = this.props.Login.masterIndex\r\n        if (masterIndex !== undefined) {\r\n            masterIndex = masterIndex + 1;\r\n        } else {\r\n            masterIndex = 0\r\n        }\r\n        let selectedControl = this.props.Login.selectedControl || []\r\n        let selectedMaster = this.state.selectedMaster || []\r\n        selectedMaster[masterIndex] = {}\r\n        selectedControl[masterIndex] = control\r\n\r\n        let fieldList = this.props.Login.masterfieldList || []\r\n        fieldList[masterIndex] = []\r\n\r\n        let masterComboColumnFiled = this.props.Login.masterComboColumnFiled || []\r\n        masterComboColumnFiled[masterIndex] = []\r\n\r\n        let extractedColumnList = this.props.Login.masterextractedColumnList || []\r\n        extractedColumnList[masterIndex] = []\r\n\r\n        let masterdataList = this.props.Login.masterdataList || []\r\n        let masterDesign = this.props.Login.masterDesign || []\r\n        let masterwithoutCombocomponent = this.props.Login.masterwithoutCombocomponent || []\r\n        let mastercomboComponents = this.props.Login.mastercomboComponents || []\r\n        let masterOperation = this.props.Login.masterOperation || []\r\n\r\n        masterdataList[masterIndex] = []\r\n        masterDesign[masterIndex] = []\r\n        masterwithoutCombocomponent[masterIndex] = []\r\n        mastercomboComponents[masterIndex] = []\r\n        masterOperation[masterIndex] = 'create'\r\n\r\n        if (control.table.item.component === 'Type2Component' || control.table.item.component === 'Type1Component') {\r\n            if (control.table.item.component === 'Type2Component') {\r\n                fieldList[masterIndex] = getFieldSpecification().get(control.table.item.methodUrl) || [];\r\n            } else {\r\n                fieldList[masterIndex] = getFieldSpecification1().get(control.table.item.methodUrl) || [];\r\n            }\r\n\r\n\r\n            extractedColumnList[masterIndex] = extractFieldHeader(Object.values(fieldList[masterIndex]));\r\n\r\n            const primaryKeyField = Object.keys(fieldList[masterIndex]).length > 0 ? fieldList[masterIndex][0].dataField : \"\";\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    selectedControl,\r\n                    addMaster: true,\r\n                    masterfieldList: fieldList,\r\n                    masterextractedColumnList: extractedColumnList,\r\n                    masterprimaryKeyField: primaryKeyField,\r\n                    masterComboColumnFiled: masterComboColumnFiled,\r\n                    masterIndex,\r\n                    masterdataList,\r\n                    masterDesign,\r\n                    masterwithoutCombocomponent,\r\n                    mastercomboComponents,\r\n                    masterOperation,\r\n                    selectedMaster,\r\n                    screenName: selectedControl[masterIndex].displayname[this.props.Login.userInfo.slanguagetypecode]\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo)\r\n        }\r\n        else if (control.table.item.component === 'Type3Component') {\r\n            fieldList[masterIndex] = getFieldSpecification3().get(control.table.item.methodUrl) || [];\r\n            extractedColumnList[masterIndex] = extractFieldHeader(Object.values(fieldList[masterIndex]));\r\n            masterComboColumnFiled[masterIndex] = extractedColumnList[masterIndex].filter(item =>\r\n                item.ndesigncomponentcode === designComponents.COMBOBOX)\r\n            const primaryKeyField = Object.keys(fieldList[masterIndex]).length > 0 ? fieldList[masterIndex][0].dataField : \"\";\r\n            const inputParam = {\r\n                userinfo: this.props.Login.userInfo,\r\n                selectedControl,\r\n                masterfieldList: fieldList,\r\n                masterextractedColumnList: extractedColumnList,\r\n                masterprimaryKeyField: primaryKeyField,\r\n                masterComboColumnFiled: masterComboColumnFiled,\r\n                masterIndex,\r\n                masterdataList,\r\n                masterDesign,\r\n                masterwithoutCombocomponent,\r\n                mastercomboComponents,\r\n                selectedMaster,\r\n                masterOperation,\r\n                screenName: selectedControl[masterIndex].displayname[this.props.Login.userInfo.slanguagetypecode]\r\n            }\r\n\r\n            this.props.getAddMasterCombo(inputParam);\r\n\r\n        }\r\n        else if (control.table.item.component === 'Dynamic') {\r\n            const inputParam = {\r\n                userinfo: this.props.Login.userInfo,\r\n                selectedControl,\r\n                masterIndex,\r\n                masterdataList,\r\n                masterDesign,\r\n                masterComboColumnFiled,\r\n                masterwithoutCombocomponent,\r\n                mastercomboComponents,\r\n                masterfieldList: fieldList,\r\n                masterextractedColumnList: extractedColumnList,\r\n                masterComboColumnFiled,\r\n                masterOperation,\r\n                selectedMaster\r\n            }\r\n            this.props.getDynamicMasterTempalte(inputParam);\r\n        }\r\n\r\n        // this.props.getMasterRecord(control);\r\n    }\r\n\r\n\r\n    editMasterRecord = (control, editObject) => {\r\n        if (editObject) {\r\n            let masterIndex = this.props.Login.masterIndex\r\n            if (masterIndex !== undefined) {\r\n                masterIndex = masterIndex + 1;\r\n            } else {\r\n                masterIndex = 0\r\n            }\r\n            let selectedControl = this.props.Login.selectedControl || []\r\n            let selectedMaster = this.state.selectedMaster || []\r\n            selectedMaster[masterIndex] = {}\r\n            selectedControl[masterIndex] = control\r\n\r\n            let fieldList = this.props.Login.masterfieldList || []\r\n            fieldList[masterIndex] = []\r\n\r\n            let masterComboColumnFiled = this.props.Login.masterComboColumnFiled || []\r\n            masterComboColumnFiled[masterIndex] = []\r\n\r\n            let extractedColumnList = this.props.Login.masterextractedColumnList || []\r\n            extractedColumnList[masterIndex] = []\r\n\r\n            let masterdataList = this.props.Login.masterdataList || []\r\n            let masterDesign = this.props.Login.masterDesign || []\r\n            let masterwithoutCombocomponent = this.props.Login.masterwithoutCombocomponent || []\r\n            let mastercomboComponents = this.props.Login.mastercomboComponents || []\r\n            let masterOperation = this.props.Login.masterOperation || []\r\n            let masterEditObject = this.props.Login.masterEditObject || []\r\n\r\n            masterdataList[masterIndex] = []\r\n            masterDesign[masterIndex] = []\r\n            masterwithoutCombocomponent[masterIndex] = []\r\n            mastercomboComponents[masterIndex] = []\r\n            masterOperation[masterIndex] = 'update'\r\n            masterEditObject[masterIndex] = editObject\r\n\r\n            if (control.table.item.component === 'Type2Component' || control.table.item.component === 'Type1Component') {\r\n                if (control.table.item.component === 'Type2Component') {\r\n                    fieldList[masterIndex] = getFieldSpecification().get(control.table.item.methodUrl) || [];\r\n                } else {\r\n                    fieldList[masterIndex] = getFieldSpecification1().get(control.table.item.methodUrl) || [];\r\n                }\r\n                extractedColumnList[masterIndex] = extractFieldHeader(Object.values(fieldList[masterIndex]));\r\n\r\n                const primaryKeyField = Object.keys(fieldList[masterIndex]).length > 0 ? fieldList[masterIndex][0].dataField : \"\";\r\n\r\n                const updateInfo = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    selectedControl,\r\n                    addMaster: true,\r\n                    masterfieldList: fieldList,\r\n                    masterextractedColumnList: extractedColumnList,\r\n                    masterprimaryKeyField: primaryKeyField,\r\n                    masterComboColumnFiled: masterComboColumnFiled,\r\n                    masterIndex,\r\n                    masterdataList,\r\n                    masterDesign,\r\n                    masterwithoutCombocomponent,\r\n                    mastercomboComponents,\r\n                    selectedMaster,\r\n                    masterEditObject,\r\n                    masterOperation\r\n                    // editObject\r\n                    //   screenName:selectedControl[masterIndex].displayname[this.props.Login.userInfo.slanguagetypecode]\r\n\r\n                }\r\n                this.props.getEditMaster(updateInfo)\r\n            }\r\n            else if (control.table.item.component === 'Type3Component') {\r\n                fieldList[masterIndex] = getFieldSpecification3().get(control.table.item.methodUrl) || [];\r\n                extractedColumnList[masterIndex] = extractFieldHeader(Object.values(fieldList[masterIndex]));\r\n                masterComboColumnFiled[masterIndex] = extractedColumnList[masterIndex].filter(item =>\r\n                    item.ndesigncomponentcode === designComponents.COMBOBOX)\r\n                const primaryKeyField = Object.keys(fieldList[masterIndex]).length > 0 ? fieldList[masterIndex][0].dataField : \"\";\r\n                const inputParam = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    selectedControl,\r\n                    masterfieldList: fieldList,\r\n                    masterextractedColumnList: extractedColumnList,\r\n                    masterprimaryKeyField: primaryKeyField,\r\n                    masterComboColumnFiled: masterComboColumnFiled,\r\n                    masterIndex,\r\n                    masterdataList,\r\n                    masterDesign,\r\n                    masterwithoutCombocomponent,\r\n                    mastercomboComponents,\r\n                    masterEditObject,\r\n                    masterOperation,\r\n                    selectedMaster,\r\n                    screenName: selectedControl[masterIndex].displayname[this.props.Login.userInfo.slanguagetypecode],\r\n                    // editObject\r\n                }\r\n\r\n                this.props.getEditMaster(inputParam);\r\n\r\n            }\r\n            else if (control.table.item.component === 'Dynamic') {\r\n                const inputParam = {\r\n                    userinfo: this.props.Login.userInfo,\r\n                    selectedControl,\r\n                    masterIndex,\r\n                    masterdataList,\r\n                    masterDesign,\r\n                    masterComboColumnFiled,\r\n                    masterwithoutCombocomponent,\r\n                    mastercomboComponents,\r\n                    masterfieldList: fieldList,\r\n                    masterextractedColumnList: extractedColumnList,\r\n                    masterComboColumnFiled,\r\n                    masterEditObject,\r\n                    masterOperation,\r\n                    selectedMaster,\r\n                    //  editObject\r\n                }\r\n                this.props.getEditMaster(inputParam);\r\n            }\r\n\r\n        } else {\r\n            toast.warn(this.props.intl.formatMessage({ id: \"IDS_SELECTTHERECORD\" }))\r\n        }\r\n\r\n    }\r\n\r\n    openModal = () => {\r\n\r\n        const addId = this.props.Login.inputParam && this.state.controlMap.has(\"Add\")\r\n            && this.state.controlMap.get(\"Add\").ncontrolcode;\r\n\r\n        this.props.getDynamicMasterCombo(this.props.Login.masterData, this.props.Login.userInfo, addId,\r\n            this.state.designData, this.state.selectedRecord, this.state.childColumnList,\r\n            this.state.comboComponents, this.state.withoutCombocomponent,\r\n            false, true, new Map(), true, \"create\", this.props.Login.displayName);\r\n    }\r\n\r\n    fetchRecord = (fetchRecordParam) => {\r\n\r\n        this.props.getEditDynamicMasterCombo(fetchRecordParam,\r\n            this.state.designData, this.state.selectedRecord, this.state.childColumnList,\r\n            this.state.comboComponents, this.state.withoutCombocomponent)\r\n\r\n    }\r\n\r\n\r\n    onNumericBlur = (value, control) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        if (selectedRecord[control.label]) {\r\n            if (control.max) {\r\n                if (!(selectedRecord[control.label] < parseFloat(control.max))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.max) : parseInt(control.max)\r\n                }\r\n            }\r\n            if (control.min) {\r\n                if (!(selectedRecord[control.label] > parseFloat(control.min))) {\r\n                    selectedRecord[control.label] = control.precision ? parseFloat(control.min) : parseInt(control.min)\r\n                }\r\n            }\r\n\r\n\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    comboChild = (data, columnList, childColumnList, slice) => {\r\n        let retunObj = {}\r\n        // if (data.findIndex(x => x.label === columnList.label) !== -1) {\r\n        if (!childColumnList.hasOwnProperty(columnList.label)) {\r\n            if (childColumnList[columnList.label] === undefined) {\r\n                if (columnList.hasOwnProperty(\"child\")) {\r\n                    let childList = []\r\n                    columnList.child.map(childData => {\r\n                        const index = data.findIndex(x => x.label === childData.label)\r\n                        if (index !== -1) {\r\n                            childList.push(data[index])\r\n                            if (slice) {\r\n                                data = [...data.slice(0, index), ...data.slice(index + 1)]\r\n                            }\r\n                        }\r\n                    })\r\n                    childColumnList[columnList.label] = childList;\r\n                    if (childList.length > 0) {\r\n                        childList.map(y => {\r\n                            if (y.hasOwnProperty(\"child\")) {\r\n                                const val = this.comboChild(data, y, childColumnList, slice)\r\n                                retunObj[\"data\"] = val.data;\r\n                                retunObj[\"childColumnList\"] = val.childColumnList;\r\n                            } else {\r\n                                retunObj[\"data\"] = data;\r\n                                retunObj[\"childColumnList\"] = childColumnList;\r\n                            }\r\n                        })\r\n                    } else {\r\n                        retunObj[\"data\"] = data;\r\n                        retunObj[\"childColumnList\"] = childColumnList;\r\n                    }\r\n                } else {\r\n                    retunObj[\"data\"] = data;\r\n                    retunObj[\"childColumnList\"] = childColumnList;\r\n                }\r\n            } else {\r\n                retunObj[\"data\"] = data;\r\n                retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n            }\r\n        } else {\r\n            retunObj[\"data\"] = data;\r\n            retunObj[\"childColumnList\"] = childColumnList;\r\n\r\n        }\r\n        return retunObj;\r\n    }\r\n\r\n    onComboChange = (comboData, control, customName) => {\r\n\r\n        let comboName = customName || control.label;\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n        if (comboData) {\r\n            comboData[\"item\"] = {\r\n                ...comboData[\"item\"], \"pkey\": control.valuemember, \"nquerybuildertablecode\": control.nquerybuildertablecode,\r\n                \"source\": control.source\r\n            };\r\n            selectedRecord[comboName] = comboData;\r\n        } else {\r\n            selectedRecord[comboName] = [];\r\n        }\r\n        if (control.child && control.child.length > 0) {\r\n            const childComboList = getSameRecordFromTwoArrays(this.state.comboComponents, control.child, \"label\")\r\n            let childColumnList = {};\r\n            childComboList.map(columnList => {\r\n                const val = this.comboChild(this.state.comboComponents, columnList, childColumnList, false);\r\n                childColumnList = val.childColumnList\r\n            })\r\n\r\n            const parentList = getSameRecordFromTwoArrays(this.state.withoutCombocomponent, control.child, \"label\")\r\n\r\n            const inputParem = {\r\n                child: control.child,\r\n                source: control.source,\r\n                primarykeyField: control.valuemember,\r\n                value: comboData.value,\r\n                item: comboData.item\r\n            }\r\n            this.props.getChildValues(inputParem,\r\n                this.props.Login.userInfo, selectedRecord, this.props.Login.comboData,\r\n                childComboList, childColumnList, this.state.withoutCombocomponent, [...childComboList, ...parentList])\r\n        } else {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: { selectedRecord }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n    }\r\n\r\n    onNumericInputChange = (value, name) => {\r\n        let selectedRecord = this.state.selectedRecord\r\n        selectedRecord[name] = value;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    handleDateChange = (dateValue, dateName) => {\r\n        const { selectedRecord } = this.state;\r\n        selectedRecord[dateName] = dateValue;\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    onDrop = (value, type, oldVlaue) => {\r\n        const design = this.state.design;\r\n        let columns = design[0].children;\r\n        let designData = this.props.Login.ReactInputFields;\r\n        value = JSON.parse(value.fields);\r\n        value = { ...value, type: \"component\" }\r\n        let designDataIndex = designData.findIndex(item => item.label === value.label);\r\n        let firstIndex = columns[0] ? columns[0].children.findIndex(item => item.label === value.label) : -1;\r\n        let secondIndex = columns[1] ? columns[1].children.findIndex(item => item.label === value.label) : -1;\r\n\r\n        if (designDataIndex >= 0)\r\n            designData.splice(designDataIndex, 1);\r\n        if (firstIndex >= 0) {\r\n            if (type !== 1) {\r\n                columns[0].children.splice(firstIndex, 1);\r\n                // columns[0].splice(to, 0, columns[0].splice(from, 1)[0]);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[0].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[0].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[0].children.splice(to, 0, columns[0].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n\r\n        } else if (type === 1) {\r\n            if (columns[0]) {\r\n                columns[0].children.push(value);\r\n            } else {\r\n                columns[0] = {\r\n                    id: \"1\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n\r\n                columns[0].children.push(value);\r\n            }\r\n        }\r\n        if (secondIndex >= 0) {\r\n            if (type !== 2) {\r\n                columns[1].splice(secondIndex, 1);\r\n            } else {\r\n                if (oldVlaue) {\r\n                    oldVlaue = JSON.parse(oldVlaue);\r\n                    let from = columns[1].children.findIndex(item => item.label === value.label);\r\n                    let to = columns[1].children.findIndex(item => item.label === oldVlaue.label);\r\n                    columns[1].children.splice(to, 0, columns[1].children.splice(from, 1)[0]);\r\n                }\r\n            }\r\n        } else if (type === 2) {\r\n            if (columns[1]) {\r\n                columns[1].children.push(value);\r\n            } else {\r\n                columns[1] = {\r\n                    id: \"2\",\r\n                    type: \"column\",\r\n                    children: []\r\n                }\r\n                columns[1].children.push(value);\r\n            }\r\n        }\r\n\r\n        // design.push(columns)\r\n        this.setState({ designData, design })\r\n    }\r\n\r\n    onDropFile = (attachedFiles, fieldName, maxSize) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = onDropAttachFileList(selectedRecord[fieldName], attachedFiles, maxSize)\r\n        this.setState({ selectedRecord, actionType: \"new\" });\r\n    }\r\n\r\n    deleteAttachment = (event, file, fieldName) => {\r\n        let selectedRecord = this.state.selectedRecord || {};\r\n        selectedRecord[fieldName] = deleteAttachmentDropZone(selectedRecord[fieldName], file)\r\n\r\n        this.setState({\r\n            selectedRecord, actionType: \"delete\" //fileToDelete:file.name \r\n        });\r\n    }\r\n\r\n    componentDidUpdate(previousProps) {\r\n\r\n        if (this.props.Login.masterData !== previousProps.Login.masterData) {\r\n            if (this.props.Login.userInfo.nformcode !== previousProps.Login.userInfo.nformcode) {\r\n                const userRoleControlRights = [];\r\n\r\n                if (this.props.Login.userRoleControlRights) {\r\n                    this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode] && Object.values(this.props.Login.userRoleControlRights[this.props.Login.userInfo.nformcode]).map(item =>\r\n                        userRoleControlRights.push(item.ncontrolcode))\r\n                }\r\n                const controlMap = getControlMap(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode)\r\n                this.extractedColumnList = [];\r\n                this.detailedColumnList = [];\r\n\r\n\r\n\r\n                let data = [];\r\n                const withoutCombocomponent = [];\r\n                const mandatoryFields = [];\r\n                const Layout = (this.props.Login.masterData.DynamicMasterDesign && this.props.Login.masterData.DynamicMasterDesign.slideoutdesign) || [];\r\n                Layout.map(row => {\r\n                    row.children.map(column => {\r\n                        column.children.map(component => {\r\n                            if (component.hasOwnProperty(\"children\")) {\r\n                                component.children.map(componentrow => {\r\n                                    if (componentrow.inputtype === \"combo\" || componentrow.inputtype === \"backendsearchfilter\"\r\n                                        || componentrow.inputtype === \"frontendsearchfilter\") {\r\n                                        data.push(componentrow)\r\n                                    } else {\r\n                                        withoutCombocomponent.push(componentrow)\r\n                                    }\r\n                                    if (componentrow.mandatory === true) {\r\n                                        if (componentrow.inputtype === \"email\") {\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true, \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                                \"validateFunction\": validateEmail,\r\n                                                \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                                \"controlType\": \"textbox\"\r\n                                            })\r\n                                        }\r\n                                        else {\r\n                                            mandatoryFields.push({\r\n                                                \"mandatory\": true,\r\n                                                \"idsName\": componentrow.label,\r\n                                                \"dataField\": componentrow.label,\r\n                                                \"mandatoryLabel\": componentrow.inputtype === \"combo\" ?\r\n                                                    \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                                \"controlType\": componentrow.inputtype === \"combo\" ?\r\n                                                    \"selectbox\" : \"textbox\"\r\n                                            })\r\n                                        }\r\n                                    }\r\n                                })\r\n                            }\r\n                            else {\r\n                                component.inputtype === \"combo\" || component.inputtype === \"backendsearchfilter\"\r\n                                    || component.inputtype === \"frontendsearchfilter\" ?\r\n                                    data.push(component)\r\n                                    : withoutCombocomponent.push(component)\r\n\r\n                                if (component.mandatory === true) {\r\n                                    if (component.inputtype === \"email\") {\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true, \"idsName\": component.label,\r\n                                            \"dataField\": component.label,\r\n                                            \"alertPreFix\": this.props.intl.formatMessage({ id: \"IDS_VALID\" }),\r\n                                            \"validateFunction\": validateEmail,\r\n                                            \"mandatoryLabel\": \"IDS_ENTER\",\r\n                                            \"controlType\": \"textbox\"\r\n                                        })\r\n                                    }\r\n                                    else {\r\n                                        mandatoryFields.push({\r\n                                            \"mandatory\": true,\r\n                                            \"idsName\": component.label,\r\n                                            \"dataField\": component.label,\r\n                                            \"mandatoryLabel\": component.inputtype === \"combo\" ?\r\n                                                \"IDS_SELECT\" : \"IDS_ENTER\",\r\n                                            \"controlType\": component.inputtype === \"combo\" ?\r\n                                                \"selectbox\" : \"textbox\"\r\n                                        })\r\n                                    }\r\n                                }\r\n                            }\r\n                        })\r\n                    })\r\n                })\r\n\r\n                if (this.props.Login.masterData && this.props.Login.masterData.DynamicMasterDesign &&\r\n                    this.props.Login.masterData.DynamicMasterDesign.screendesign) {\r\n                    this.props.Login.masterData.DynamicMasterDesign.screendesign.griditem.map(row => {\r\n                        this.extractedColumnList.push({\r\n                            \"idsName\": row[\"1\"][this.props.Login.userInfo.slanguagetypecode],\r\n                            \"dataField\": row[\"2\"],\r\n                            \"width\": \"150\",\r\n                            \"dateField\": withoutCombocomponent.findIndex(x => x.label === row[\"2\"] && x.inputtype === 'date') !== -1 ? true : false,\r\n                            \"dataType\": withoutCombocomponent.filter(x => x.label === row[\"2\"]).map(x => x.inputtype)\r\n                        });\r\n                    })\r\n                    this.props.Login.masterData.DynamicMasterDesign.screendesign.gridmoreitem.map(row => {\r\n                        this.detailedColumnList.push({\r\n                            \"idsName\": row[\"1\"][this.props.Login.userInfo.slanguagetypecode],\r\n                            \"dataField\": row[\"2\"],\r\n                            \"dateField\": withoutCombocomponent.findIndex(x => x.label === row[\"2\"] && x.inputtype === 'date') !== -1 ? true : false,\r\n                            \"dataType\": withoutCombocomponent.filter(x => x.label === row[\"2\"]).map(x => x.inputtype)\r\n                        });\r\n                    })\r\n\r\n                }\r\n                const comboComponents = data;\r\n                let childColumnList = {};\r\n                data.map(columnList => {\r\n                    const val = this.comboChild(data, columnList, childColumnList, true);\r\n                    data = val.data;\r\n                    childColumnList = val.childColumnList\r\n                })\r\n\r\n                const masterData = this.props.Login.masterData.DynamicMasterData ? sortData(this.props.Login.masterData.DynamicMasterData, \"descending\", \"ndynamicmastercode\") : [];\r\n\r\n                this.setState({\r\n                    withoutCombocomponent, comboComponents, childColumnList, designData: data, mandatoryFields,\r\n                    userRoleControlRights, controlMap, data: this.props.Login.masterData.DynamicMasterData || [],\r\n                    dataResult: process(masterData || [], this.state.dataState),\r\n                });\r\n            }\r\n            else {\r\n                let { dataState } = this.state;\r\n                if (this.props.Login.dataState === undefined) {\r\n                    dataState = { skip: 0, take: this.props.Login.settings ? parseInt(this.props.Login.settings[14]) : 5 }\r\n                }\r\n\r\n                const masterData = this.props.Login.masterData.DynamicMasterData ? sortData(this.props.Login.masterData.DynamicMasterData, \"descending\", \"ndynamicmastercode\") : [];\r\n\r\n                this.setState({\r\n                    data: this.props.Login.masterData.DynamicMasterData || [], selectedRecord: this.props.Login.selectedRecord,\r\n                    dataResult: process(masterData || [], dataState),\r\n                    dataState//, comboComponents, withoutCombocomponent\r\n                });\r\n            }\r\n        }\r\n\r\n        if (this.props.Login.selectedMaster !== previousProps.Login.selectedMaster) {\r\n            this.setState({ selectedMaster: this.props.Login.selectedMaster });\r\n        }\r\n        if (this.props.Login.selectedRecord !== previousProps.Login.selectedRecord) {\r\n            this.setState({ selectedRecord: this.props.Login.selectedRecord });\r\n        }\r\n    }\r\n\r\n    onInputOnChange = (event, control, value) => {\r\n        const selectedRecord = this.state.selectedRecord || {};\r\n\r\n        if (event.target.type === 'toggle') {\r\n            selectedRecord[event.target.name] = event.target.checked === true ? transactionStatus.YES : transactionStatus.NO;\r\n        } else if (event.target.type === 'numeric') {\r\n            if (/\\D/.test(event.target.value))\r\n                selectedRecord[event.target.name] = event.target.value;\r\n        } else if (event.target.type === 'checkbox') {\r\n            const value1 = selectedRecord[event.target.name];\r\n            if (value1 !== '' && value1 !== undefined) {\r\n                if (value1.toLowerCase().includes(value.toLowerCase())) {\r\n                    const index = value1.toLowerCase().indexOf(value.toLowerCase());\r\n                    if (index !== -1) {\r\n                        if (index === 0) {\r\n                            const indexcomma = value1.indexOf(\",\")\r\n                            if (indexcomma !== -1) {\r\n                                selectedRecord[event.target.name] = value1.slice(indexcomma + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = \"\"\r\n                            }\r\n                        } else {\r\n                            if (value1.slice(index).indexOf(\",\") !== -1) {\r\n                                selectedRecord[event.target.name] = value1.slice(0, index) + value1.slice(index + value1.slice(index).indexOf(\",\") + 1)\r\n                            } else {\r\n                                selectedRecord[event.target.name] = value1.slice(0, index - 1)\r\n                            }\r\n                        }\r\n                    }\r\n\r\n                } else {\r\n                    selectedRecord[event.target.name] = value1 + ',' + value;\r\n                }\r\n\r\n            } else {\r\n                selectedRecord[event.target.name] = value;\r\n            }\r\n        } else if (event.target.type === 'radio') {\r\n            selectedRecord[event.target.name] = value\r\n        } else {\r\n            selectedRecord[event.target.name] = conditionBasedInput(control, event.target.value, control && control.label)\r\n            // if (control.isnumeric === true\r\n            //     && control.label===value) {\r\n            // selectedRecord[event.target.name] = event.target.value.replace(/[^0-9]/g, '');\r\n            //     } else {\r\n            //         selectedRecord[event.target.name] = event.target.value;\r\n            //     }\r\n            // selectedRecord[event.target.name] = event.target.value;\r\n        }\r\n        this.setState({ selectedRecord });\r\n    }\r\n\r\n    import = () => {\r\n        const updateInfo = {\r\n            typeName: DEFAULT_RETURN,\r\n            data: { openModal: true, screenName: this.props.Login.displayName, operation: \"import\" }\r\n        }\r\n        this.props.updateStore(updateInfo);\r\n    }\r\n    //deleteRecord = (selectedRecord, operation, ncontrolCode) => {\r\n    deleteRecord = (deleteParam) => {\r\n        const inputParam = {\r\n            classUrl: \"dynamicmaster\",\r\n            methodUrl: \"DynamicMaster\",\r\n            displayName: this.props.Login.displayName,\r\n            inputData: {\r\n                [\"dynamicmaster\"]: { \"ndynamicmastercode\": deleteParam.selectedRecord.ndynamicmastercode },//.dataItem,\r\n                \"userinfo\": this.props.Login.userInfo\r\n            },\r\n            operation: \"delete\",\r\n            dataState: this.state.dataState\r\n        }\r\n\r\n        if (showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, deleteParam.ncontrolCode)) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.Login.displayName,\r\n                    operation: \"delete\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    reloadData = () => {\r\n        const inputParam = {\r\n            inputData: { \"userinfo\": this.props.Login.userInfo },\r\n            classUrl: this.props.Login.inputParam.classUrl,\r\n            methodUrl: this.props.Login.inputParam.methodUrl,\r\n            userInfo: this.props.Login.userInfo,\r\n            displayName: this.props.Login.inputParam.displayName\r\n        };\r\n        this.props.callService(inputParam);\r\n    }\r\n\r\n    onSaveClick = (saveType, formRef) => {\r\n        //add / edit  \r\n        let isFileupload = true;\r\n        let inputData = {};\r\n        let dataState = undefined;\r\n        let methodUrl = \"DynamicMaster\";\r\n        inputData[\"userinfo\"] = this.props.Login.userInfo;\r\n        inputData[\"masterdateconstraints\"] = this.props.Login.masterData.DynamicMasterDesign.screendesign.masterdateconstraints;\r\n        inputData[\"masterdatefields\"] = this.props.Login.masterData.DynamicMasterDesign.screendesign.masterdatefields;\r\n        inputData[\"mastercombinationunique\"] = this.props.Login.masterData.DynamicMasterDesign.screendesign.mastercombinationunique;\r\n        inputData[\"isFileupload\"] = false;\r\n        let selectedId = null;\r\n        let operation = \"\";\r\n        let selectedRecord = this.state.selectedRecord;\r\n        if (this.props.Login.operation === \"update\") {    // edit\r\n            dataState = this.state.dataState\r\n            inputData[\"dynamicmaster\"] = { ndynamicmastercode: this.state.selectedRecord[\"ndynamicmastercode\"] };//this.state.selectedRecord;\r\n            inputData[\"dynamicmaster\"][\"jsondata\"] = {};\r\n            inputData[\"dynamicmaster\"][\"jsonuidata\"] = {};\r\n            selectedId = this.props.Login.selectedId;\r\n            operation = \"update\";\r\n        }\r\n        else {\r\n            //add                          \r\n            inputData[\"dynamicmaster\"] = { //\"nsitecode\": this.props.Login.userInfo.nmastersitecode, \r\n                nformcode: this.props.Login.userInfo.nformcode,\r\n                ndesigntemplatemappingcode: this.props.Login.masterData.DynamicMasterDesign.ndesigntemplatemappingcode,\r\n                jsondata: {}, jsonuidata: {}\r\n            };\r\n\r\n            operation = \"create\";\r\n\r\n        }\r\n\r\n        const dateList = [];\r\n        const defaulttimezone = this.props.Login.defaulttimezone;\r\n        const userInfo = this.props.Login.userInfo;\r\n\r\n        this.props.Login.masterData.DynamicMasterDesign &&\r\n            this.props.Login.masterData.DynamicMasterDesign.slideoutdesign.map(row => {\r\n                row.children.map(column => {\r\n                    column.children.map(component => {\r\n                        if (component.hasOwnProperty(\"children\")) {\r\n\r\n                            component.children.map(componentrow => {\r\n                                if (componentrow.inputtype === \"combo\") {\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                        {\r\n                                            value: selectedRecord[componentrow.label].value,\r\n                                            label: selectedRecord[componentrow.label].label,\r\n                                            pkey: componentrow.valuemember,\r\n                                            nquerybuildertablecode: componentrow.nquerybuildertablecode,\r\n                                            source: componentrow.source,\r\n\r\n                                            [componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]: operation === \"update\" ?\r\n                                                selectedRecord[componentrow.label].item ? selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember] :\r\n                                                    selectedRecord[componentrow.label][componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                                :\r\n                                                selectedRecord[componentrow.label].item.jsondata[componentrow.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : componentrow.valuemember]\r\n                                        } : -1\r\n\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = selectedRecord[componentrow.label] ? selectedRecord[componentrow.label].label : \"\"\r\n\r\n                                }\r\n                                else if (componentrow.inputtype === \"date\") {\r\n                                    if (componentrow.mandatory) {\r\n                                        inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = formatDate(selectedRecord[componentrow.label], false)\r\n\r\n                                        inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]\r\n                                        //inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = convertDateTimetoString(selectedRecord[componentrow.label], userInfo);\r\n                                    }\r\n                                    else {\r\n                                        inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = componentrow.loadcurrentdate ?\r\n                                            formatDate(selectedRecord[componentrow.label] || new Date(), false) :\r\n                                            selectedRecord[componentrow.label] ? formatDate(selectedRecord[componentrow.label], false)\r\n                                                : \"\";\r\n\r\n                                        inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label];\r\n                                        //convertDateTimetoString(selectedRecord[componentrow.label], userInfo);\r\n                                    }\r\n                                    if (componentrow.timezone) {\r\n                                        inputData[\"dynamicmaster\"][\"jsondata\"][`tz${componentrow.label}`] = selectedRecord[`tz${componentrow.label}`] ?\r\n                                            { value: selectedRecord[`tz${componentrow.label}`].value, label: selectedRecord[`tz${componentrow.label}`].label } :\r\n                                            defaulttimezone ? defaulttimezone : -1\r\n\r\n                                        inputData[\"dynamicmaster\"][\"jsonuidata\"][`tz${componentrow.label}`] = inputData[\"dynamicmaster\"][\"jsondata\"][`tz${componentrow.label}`]\r\n                                    }\r\n                                    dateList.push(componentrow.label)\r\n                                }\r\n\r\n                                else {\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label] = selectedRecord[componentrow.label] ?\r\n                                        selectedRecord[componentrow.label] : \"\"\r\n\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][componentrow.label] = inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]\r\n                                    // inputData[\"dynamicmaster\"][\"jsondata\"][componentrow.label]\r\n\r\n                                }\r\n                                return inputData[\"dynamicmaster\"];\r\n                            })\r\n                        }\r\n                        else {\r\n                            if (component.inputtype === \"combo\" ) {\r\n                                if(selectedRecord[component.label].length ===0){\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = -1;\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = \"\";\r\n\r\n                                }else{\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                    {\r\n                                        value: selectedRecord[component.label].value,\r\n                                        label: selectedRecord[component.label].label,\r\n                                        pkey: component.valuemember,\r\n                                        nquerybuildertablecode: component.nquerybuildertablecode,\r\n                                        source: component.source,\r\n\r\n                                        [component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                        : operation === \"update\" ?\r\n                                            selectedRecord[component.label].item ? selectedRecord[component.label].item.jsondata && selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember] :\r\n                                                selectedRecord[component.label][component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                            :\r\n                                            selectedRecord[component.label].item.jsondata && selectedRecord[component.label].item.jsondata[component.table.item.component === 'Dynamic' ? 'ndynamicmastercode' : component.valuemember]\r\n                                    } : -1\r\n                                \r\n\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label ? inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label : -1;\r\n                                }    \r\n                                //selectedRecord[component.label] ? selectedRecord[component.label].label : \"\"\r\n                            }\r\n                            else if (component.inputtype === \"date\") {\r\n                                if (component.mandatory) {\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = formatDate(selectedRecord[component.label], false);\r\n                                    // convertDateTimetoString(selectedRecord[component.label] ?\r\n                                    // selectedRecord[component.label] : new Date(), userInfo);\r\n\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]\r\n                                    //convertDateTimetoString(selectedRecord[component.label], userInfo);\r\n\r\n                                } else {\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = component.loadcurrentdate ?\r\n                                        //convertDateTimetoString(selectedRecord[component.label] ?                                      \r\n                                        //    selectedRecord[component.label] : new Date(), userInfo) :\r\n                                        formatDate(selectedRecord[component.label] || new Date(), false) :\r\n                                        selectedRecord[component.label] ?\r\n                                            // convertDateTimetoString(selectedRecord[component.label] ?\r\n                                            //   selectedRecord[component.label] : new Date(), userInfo) : \"\";\r\n                                            formatDate(selectedRecord[component.label], false) : \"\";\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label]\r\n                                    //convertDateTimetoString(selectedRecord[component.label], userInfo)\r\n\r\n                                }\r\n                                if (component.timezone) {\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][`tz${component.label}`] = selectedRecord[`tz${component.label}`] ?\r\n                                        { value: selectedRecord[`tz${component.label}`].value, label: selectedRecord[`tz${component.label}`].label } :\r\n                                        defaulttimezone ? defaulttimezone : -1\r\n\r\n                                    inputData[\"dynamicmaster\"][\"jsonuidata\"][`tz${component.label}`] = inputData[\"dynamicmaster\"][\"jsondata\"][`tz${component.label}`]\r\n                                }\r\n                                dateList.push(component.label)\r\n                            }\r\n                            else {\r\n                                inputData[\"dynamicmaster\"][\"jsondata\"][component.label] = selectedRecord[component.label] ?\r\n                                    selectedRecord[component.label] : \"\"\r\n\r\n                                inputData[\"dynamicmaster\"][\"jsonuidata\"][component.label] = inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label ? inputData[\"dynamicmaster\"][\"jsondata\"][component.label].label :\r\n                                    inputData[\"dynamicmaster\"][\"jsondata\"][component.label]\r\n                            }\r\n                        }\r\n                        return inputData[\"dynamicmaster\"];\r\n                    }\r\n                    )\r\n                    return inputData[\"dynamicmaster\"];\r\n                })\r\n                return inputData[\"dynamicmaster\"];\r\n            })\r\n        let tempData = {}\r\n        const formData = new FormData();\r\n        this.props.Login.withoutCombocomponent.map(item => {\r\n            if (item.inputtype === \"files\") {\r\n                if (typeof selectedRecord[item && item.label] === \"object\") {\r\n                    this.state.selectedRecord[item && item.label] && this.state.selectedRecord[item && item.label].forEach((item1, index) => {\r\n                        const fileName = create_UUID();\r\n                        const splittedFileName = item1.name.split('.');\r\n                        const fileExtension = item1.name.split('.')[splittedFileName.length - 1];\r\n                        const uniquefilename = fileName + '.' + fileExtension;\r\n\r\n                        tempData[item && item.label + '_susername'] = this.props.Login.userInfo.susername\r\n                        tempData[item && item.label + '_suserrolename'] = this.props.Login.userInfo.suserrolename\r\n                        tempData[item && item.label + '_nfilesize'] = item1.size\r\n                        tempData[item && item.label + '_ssystemfilename'] = uniquefilename\r\n                        tempData[item && item.label] = Lims_JSON_stringify(item1.name.trim(), false)\r\n                        formData.append(\"uploadedFile\" + index, item1);\r\n                        formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                        formData.append(\"filecount\", this.state.selectedRecord[item && item.label].length);\r\n                        formData.append(\"isFileEdited\", transactionStatus.YES);\r\n                        formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                        inputData[\"dynamicmaster\"][\"jsondata\"] = {\r\n                            ...inputData[\"dynamicmaster\"][\"jsondata\"],\r\n                            ...tempData\r\n                        };\r\n                        inputData[\"dynamicmaster\"][\"jsonuidata\"] = {\r\n                            ...inputData[\"dynamicmaster\"][\"jsonuidata\"],\r\n                            ...tempData\r\n                        };\r\n                        formData.append(\"userinfo\", JSON.stringify(this.props.Login.userInfo));\r\n                        inputData[\"isFileupload\"] = true;\r\n                        isFileupload = true;\r\n                        //methodUrl=\"DynamicMasterWithFile\"\r\n                    }\r\n                    )\r\n                }\r\n            }\r\n            if(this.state.selectedRecord[this.state.selectedRecord[item && item.label]+'_ssystemfilename']===undefined && item.inputtype === \"files\" && tempData[item && item.label + '_ssystemfilename']==undefined){\r\n            inputData[\"dynamicmaster\"][\"jsondata\"]={...inputData[\"dynamicmaster\"][\"jsonuidata\"],\r\n            ...this.state.selectedRecord}\r\n            inputData[\"dynamicmaster\"][\"jsonuidata\"]={...inputData[\"dynamicmaster\"][\"jsondata\"]}\r\n            }\r\n        })\r\n        inputData[\"dynamicmaster\"][\"jsonstring\"] = JSON.stringify(inputData[\"dynamicmaster\"][\"jsondata\"]);\r\n        inputData[\"dynamicmaster\"][\"jsonuistring\"] = JSON.stringify(inputData[\"dynamicmaster\"][\"jsonuidata\"]);\r\n        inputData[\"masterdatelist\"] = dateList;\r\n        formData.append(\"Map\", Lims_JSON_stringify(JSON.stringify(inputData)));\r\n        const inputParam = {\r\n            classUrl: \"dynamicmaster\",\r\n            methodUrl: methodUrl,\r\n            displayName: this.props.Login.displayName,\r\n            inputData: inputData, operation: operation,\r\n            saveType, formRef, selectedId, dataState, formData: formData, isFileupload\r\n\r\n        }\r\n        const esignNeeded = showEsign(this.props.Login.userRoleControlRights, this.props.Login.userInfo.nformcode, this.props.Login.ncontrolCode);\r\n        if (esignNeeded) {\r\n            const updateInfo = {\r\n                typeName: DEFAULT_RETURN,\r\n                data: {\r\n                    loadEsign: true, screenData: { inputParam, masterData: this.props.Login.masterData },\r\n                    openModal: true, screenName: this.props.Login.displayName,\r\n                    operation: \"create\"\r\n                }\r\n            }\r\n            this.props.updateStore(updateInfo);\r\n        }\r\n        else {\r\n            this.props.crudMaster(inputParam, this.props.Login.masterData, \"openModal\");\r\n        }\r\n    }\r\n\r\n    validateEsign = () => {\r\n        const inputParam = {\r\n            inputData: {\r\n                \"userinfo\": {\r\n                    ...this.props.Login.userInfo,\r\n                    sreason: this.state.selectedRecord[\"esigncomments\"],\r\n                    nreasoncode: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].value,\r\n                    spredefinedreason: this.state.selectedRecord[\"esignreason\"] && this.state.selectedRecord[\"esignreason\"].label,\r\n\r\n                },\r\n                password: this.state.selectedRecord[\"esignpassword\"]\r\n            },\r\n            screenData: this.props.Login.screenData\r\n        }\r\n        this.props.validateEsignCredential(inputParam, \"openModal\");\r\n    }\r\n\r\n}\r\nexport default connect(mapStateToProps, {\r\n    callService, crudMaster, updateStore, validateEsignCredential,\r\n    getChildValues, getEditDynamicMasterCombo,//fetchRecord,\r\n    getDynamicMasterCombo,\r\n    addMasterRecord, getAddMasterCombo, getDynamicMasterTempalte,\r\n    getChildComboMaster, getChildValuesForAddMaster, getEditMaster, viewAttachment\r\n})(injectIntl(DynamicMaster));\r\n"]},"metadata":{},"sourceType":"module"}