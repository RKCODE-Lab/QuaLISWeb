{"ast":null,"code":"import { create_UUID, Lims_JSON_stringify } from \"../../../components/CommonScript\";\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\nexport function onSaveSampleAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let samindex = {\n    index: 0\n  };\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1]; // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \n        //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\n\n        selectedMaster.forEach((sample, sampleindex) => {\n          const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n          const uniquefilename = fileName + '.' + fileExtension;\n          const tempData = {};\n          tempData['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n          tempData[\"npreregno\"] = sample.npreregno;\n          tempData['nformcode'] = saveParam.userInfo.nformcode;\n          tempData['nusercode'] = saveParam.userInfo.nusercode;\n          tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n          tempData[\"nlinkcode\"] = transactionStatus.NA; // tempData[\"nfilesize\"] = file.size;\n\n          tempData['jsondata'] = {\n            susername: saveParam.userInfo.susername,\n            suserrolename: saveParam.userInfo.suserrolename,\n            ssystemfilename: uniquefilename,\n            sfilename: Lims_JSON_stringify(file.name.trim(), false),\n            nfilesize: file.size,\n            sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n            slinkname: \"\"\n          };\n          tempData['nattachmenttypecode'] = nattachmenttypecode; // tempData[\"ssystemfilename\"] = uniquefilename;\n          // tempData[\"sfilename\"] = file.name.trim();\n          // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n          tempData['nstatus'] = transactionStatus.ACTIVE;\n          formData.append(\"uploadedFile\" + samindex[\"index\"], file);\n          formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\n          fileArray.push(tempData);\n          samindex[\"index\"] = samindex[\"index\"] + 1;\n        });\n      });\n      formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      selectedMaster.forEach(sample => {\n        let sampleFile = {};\n        sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n        sampleFile[\"npreregno\"] = sample.npreregno;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = transactionStatus.NA; // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\n\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile['jsondata'] = {\n          susername: saveParam.userInfo.susername,\n          suserrolename: saveParam.userInfo.suserrolename,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: Lims_JSON_stringify(selectedRecord.sfilename.trim(), false),\n          nfilesize: selectedRecord.nfilesize,\n          sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          slinkname: \"\"\n        };\n        sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        sampleFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename.trim(), false); // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  } else {\n    selectedMaster.forEach(sample => {\n      let sampleFile = {};\n      sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\n      sampleFile[\"npreregno\"] = sample.npreregno;\n      sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n      sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n      sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n      sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n      sampleFile['jsondata'] = {\n        susername: saveParam.userInfo.susername,\n        suserrolename: saveParam.userInfo.suserrolename,\n        ssystemfilename: \"\",\n        sfilename: Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false),\n        nfilesize: 0,\n        slinkname: selectedRecord.nlinkcode.label,\n        sdescription: Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false)\n      };\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode; // sampleFile[\"ssystemfilename\"] = \"\";\n\n      sampleFile['nstatus'] = transactionStatus.ACTIVE;\n      fileArray.push(sampleFile);\n    });\n  }\n\n  formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"sampleattachment\", JSON.stringify(fileArray)); //ALPD-1728\n  //formData.append(\"sampleattachment\", JSON.stringify(fileArray[0]).replaceAll('\\\\n','#r#'));\n\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"npreregno\", saveParam.npreregno); //formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n\n  formData.append(\"userinfo\", JSON.stringify({ ...saveParam.userInfo,\n    sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\n    smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\n    slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)\n  }));\n  const inputParam = {\n    // inputData: { userinfo: saveParam.userInfo },\n    inputData: {\n      // userinfo: saveParam.userInfo },\n      \"userinfo\": { ...saveParam.userInfo,\n        sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\n        smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)\n      }\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"SampleAttachment\"\n  };\n  return inputParam;\n}\nexport function onSaveTestAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let testindex1 = {\n    index: 0\n  };\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      if (saveParam.operation === 'create') {\n        acceptedFiles.forEach((file, index) => {\n          const splittedFileName = file.name.split('.');\n          const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n          selectedMaster.forEach((test, testindex) => {\n            const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n            tempData[\"ntransactiontestcode\"] = test.ntransactiontestcode;\n            tempData[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\n            tempData[\"npreregno\"] = test.npreregno;\n            tempData['nformcode'] = saveParam.userInfo.nformcode;\n            tempData['nusercode'] = saveParam.userInfo.nusercode;\n            tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData['nattachmenttypecode'] = nattachmenttypecode;\n            tempData['jsondata'] = {\n              stestsynonym: Lims_JSON_stringify(test.stestsynonym.trim(), false),\n              susername: saveParam.userInfo.susername,\n              suserrolename: saveParam.userInfo.suserrolename,\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\n            }; // tempData[\"nfilesize\"] = file.size; :\n            // tempData[\"ssystemfilename\"] = uniquefilename;\n            // tempData[\"sfilename\"] = file.name.trim();\n            // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n            tempData['nstatus'] = transactionStatus.ACTIVE;\n            formData.append(\"uploadedFile\" + testindex1[\"index\"], file);\n            formData.append(\"uniquefilename\" + testindex1[\"index\"], uniquefilename);\n            fileArray.push(tempData);\n            testindex1[\"index\"] = testindex1[\"index\"] + 1;\n          });\n        });\n        formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n        isFileEdited = transactionStatus.YES;\n      } else {\n        acceptedFiles.forEach((file, index) => {\n          const splittedFileName = file.name.split('.');\n          const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n          selectedMaster.forEach((test, testindex) => {\n            const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n            const uniquefilename = fileName + '.' + fileExtension;\n            const tempData = {};\n            tempData['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n            tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode;\n            tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode;\n            tempData[\"npreregno\"] = selectedRecord.npreregno;\n            tempData['nformcode'] = saveParam.userInfo.nformcode;\n            tempData['nusercode'] = saveParam.userInfo.nusercode;\n            tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n            tempData[\"nlinkcode\"] = transactionStatus.NA;\n            tempData['nattachmenttypecode'] = nattachmenttypecode;\n            tempData['jsondata'] = {\n              stestsynonym: Lims_JSON_stringify(selectedRecord.stestsynonym.trim(), false),\n              susername: saveParam.userInfo.susername,\n              suserrolename: saveParam.userInfo.suserrolename,\n              nfilesize: file.size,\n              ssystemfilename: uniquefilename,\n              sfilename: Lims_JSON_stringify(file.name.trim(), false),\n              slinkname: \"\",\n              sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n              nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\n            }; // tempData[\"nfilesize\"] = file.size;\n            // tempData[\"ssystemfilename\"] = uniquefilename;\n            // tempData[\"sfilename\"] = file.name.trim();\n            // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n            tempData['nstatus'] = transactionStatus.ACTIVE;\n            formData.append(\"uploadedFile\" + testindex1[\"index\"], file);\n            formData.append(\"uniquefilename\" + testindex1[\"index\"], uniquefilename);\n            fileArray.push(tempData);\n            testindex1[\"index\"] = testindex1[\"index\"] + 1;\n          });\n        });\n        formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n        isFileEdited = transactionStatus.YES;\n      }\n    } else {\n      selectedMaster.forEach(test => {\n        let sampleFile = {};\n        sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n        sampleFile[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode;\n        sampleFile[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode;\n        sampleFile[\"npreregno\"] = selectedRecord.npreregno;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = transactionStatus.NA; // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\n\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile['jsondata'] = {\n          stestsynonym: Lims_JSON_stringify(selectedRecord.stestsynonym.trim(), false),\n          susername: saveParam.userInfo.susername,\n          suserrolename: saveParam.userInfo.suserrolename,\n          nfilesize: selectedRecord.size,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: Lims_JSON_stringify(selectedRecord.sfilename.trim(), false),\n          slinkname: \"\",\n          sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nneedreport: selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO\n        }; // sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n        // sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\n        // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  } else {\n    if (saveParam.operation === 'create') {\n      selectedMaster.forEach(test => {\n        let sampleFile = {};\n        sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n        sampleFile[\"ntransactiontestcode\"] = test.ntransactiontestcode;\n        sampleFile[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\n        sampleFile[\"npreregno\"] = test.npreregno;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        sampleFile[\"jsondata\"] = {\n          stestsynonym: Lims_JSON_stringify(test.stestsynonym.trim(), false),\n          susername: saveParam.userInfo.susername,\n          suserrolename: saveParam.userInfo.suserrolename,\n          ssystemfilename: \"\",\n          sfilename: Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false),\n          nfilesize: 0,\n          slinkname: selectedRecord.nlinkcode.label,\n          sdescription: Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nneedreport: transactionStatus.NO\n        };\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    } else {\n      selectedMaster.forEach(test => {\n        let sampleFile = {};\n        sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\n        sampleFile[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode;\n        sampleFile[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode;\n        sampleFile[\"npreregno\"] = selectedRecord.npreregno;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n        sampleFile[\"jsondata\"] = {\n          stestsynonym: Lims_JSON_stringify(selectedRecord.stestsynonym.trim(), false),\n          susername: saveParam.userInfo.susername,\n          suserrolename: saveParam.userInfo.suserrolename,\n          ssystemfilename: \"\",\n          sfilename: Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false),\n          nfilesize: 0,\n          slinkname: selectedRecord.nlinkcode.label,\n          sdescription: Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          nneedreport: transactionStatus.NO\n        };\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  }\n\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"testattachment\", JSON.stringify(fileArray)); //ALPD-1728\n\n  formData.append(\"testattachment\", JSON.stringify(fileArray[0]).replaceAll('\\\\n', '#r#'));\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"ntransactiontestcode\", saveParam.ntransactiontestcode); // formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n\n  const inputParam = {\n    inputData: {\n      \"userinfo\": { ...saveParam.userInfo,\n        sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\n        smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)\n      }\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"TestAttachment\"\n  };\n  return inputParam;\n}\nexport function onSaveBatchAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let nreleasebatchcode = selectedMaster.nreleasebatchcode;\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1];\n        const fileName = selectedRecord.nbatchfilecode && selectedRecord.nbatchfilecode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n        const uniquefilename = fileName + '.' + fileExtension; //selectedMaster.forEach(sample=>{\n\n        const tempData = {};\n        tempData['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n        tempData[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n        tempData[\"nlinkcode\"] = transactionStatus.NA;\n        tempData['nattachmenttypecode'] = nattachmenttypecode;\n        tempData[\"ssystemfilename\"] = uniquefilename;\n        tempData[\"sfilename\"] = Lims_JSON_stringify(file.name.trim(), false);\n        tempData[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim().replaceAll('\\\\n', '#r#') : \"\", false);\n        tempData['nstatus'] = transactionStatus.ACTIVE;\n        formData.append(\"uploadedFile\" + index, file);\n        formData.append(\"uniquefilename\" + index, uniquefilename);\n        fileArray.push(tempData); //nreleasebatchcode.push(selectedMaster.releasebatchcode)\n        //})\n      });\n      formData.append(\"filecount\", acceptedFiles.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      // selectedMaster.forEach(sample=>{\n      let sampleFile = {};\n      sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n      sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n      sampleFile[\"nlinkcode\"] = transactionStatus.NA;\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n      sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\n      sampleFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename.trim(), false);\n      sampleFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.trim().replaceAll('\\\\n', '#r#') : \"\", false);\n      sampleFile['nstatus'] = transactionStatus.ACTIVE; //npreregno.push(sample.npreregno)\n\n      fileArray.push(sampleFile); // })\n    }\n  } else {\n    //selectedMaster.forEach(sample=>{\n    let sampleFile = {};\n    sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\n    sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\n    sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n    sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n    sampleFile[\"ssystemfilename\"] = \"\";\n    sampleFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false);\n    sampleFile[\"sdescription\"] = Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\", false);\n    sampleFile['nstatus'] = transactionStatus.ACTIVE;\n    fileArray.push(sampleFile); //npreregno.push(sample.npreregno)\n    //})  \n  }\n\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"batchcreationfile\", JSON.stringify(fileArray)); //ALPD-1728\n  //formData.append(\"batchcreationfile\", JSON.stringify(fileArray[0]).replaceAll('\\\\n','#r#'));\n\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"nreleasebatchcode\", nreleasebatchcode);\n  formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n  const inputParam = {\n    inputData: {\n      userinfo: saveParam.userInfo\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"BatchCreationFile\"\n  };\n  return inputParam;\n}\nexport function onSaveSubSampleAttachment(saveParam, selectedMaster) {\n  const formData = new FormData();\n  const selectedRecord = saveParam.selectedRecord;\n  const acceptedFiles = selectedRecord.sfilename;\n  const nattachmenttypecode = selectedRecord.nattachmenttypecode;\n  let isFileEdited = transactionStatus.NO;\n  let fileArray = [];\n  let samindex = {\n    index: 0\n  };\n\n  if (nattachmenttypecode === attachmentType.FTP) {\n    if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\n      acceptedFiles.forEach((file, index) => {\n        const splittedFileName = file.name.split('.');\n        const fileExtension = file.name.split('.')[splittedFileName.length - 1]; // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \n        //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\n\n        selectedMaster.forEach((sample, sampleindex) => {\n          const fileName = selectedRecord.nsampleattachmentcode && selectedRecord.nsampleattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID();\n          const uniquefilename = fileName + '.' + fileExtension;\n          const tempData = {};\n          tempData['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\n          tempData[\"npreregno\"] = sample.npreregno;\n          tempData[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\n          tempData['nformcode'] = saveParam.userInfo.nformcode;\n          tempData['nusercode'] = saveParam.userInfo.nusercode;\n          tempData['nuserrolecode'] = saveParam.userInfo.nuserrole;\n          tempData[\"nlinkcode\"] = transactionStatus.NA; // tempData[\"nfilesize\"] = file.size;\n\n          tempData['jsondata'] = {\n            susername: saveParam.userInfo.susername,\n            suserrolename: saveParam.userInfo.suserrolename,\n            ssystemfilename: uniquefilename,\n            sfilename: Lims_JSON_stringify(file.name.trim(), false),\n            nfilesize: file.size,\n            sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n            slinkname: \"\"\n          };\n          tempData['nattachmenttypecode'] = nattachmenttypecode; // tempData[\"ssystemfilename\"] = uniquefilename;\n          // tempData[\"sfilename\"] = file.name.trim();\n          // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n          tempData['nstatus'] = transactionStatus.ACTIVE;\n          formData.append(\"uploadedFile\" + samindex[\"index\"], file);\n          formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\n          fileArray.push(tempData);\n          samindex[\"index\"] = samindex[\"index\"] + 1;\n        });\n      });\n      formData.append(\"filecount\", acceptedFiles.length * selectedMaster.length);\n      isFileEdited = transactionStatus.YES;\n    } else {\n      selectedMaster.forEach(sample => {\n        let sampleFile = {};\n        sampleFile['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\n        sampleFile[\"npreregno\"] = sample.npreregno;\n        sampleFile[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\n        sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n        sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n        sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n        sampleFile[\"nlinkcode\"] = transactionStatus.NA; // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\n\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode;\n        sampleFile['jsondata'] = {\n          susername: saveParam.userInfo.susername,\n          suserrolename: saveParam.userInfo.suserrolename,\n          ssystemfilename: selectedRecord.ssystemfilename,\n          sfilename: Lims_JSON_stringify(selectedRecord.sfilename.trim(), false),\n          nfilesize: selectedRecord.nfilesize,\n          sdescription: Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false),\n          slinkname: \"\"\n        };\n        sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename; //sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\n        // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\n\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\n        fileArray.push(sampleFile);\n      });\n    }\n  } else {\n    selectedMaster.forEach(sample => {\n      let sampleFile = {};\n      sampleFile['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\n      sampleFile[\"npreregno\"] = sample.npreregno;\n      sampleFile[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\n      sampleFile['nformcode'] = saveParam.userInfo.nformcode;\n      sampleFile['nusercode'] = saveParam.userInfo.nusercode;\n      sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole;\n      sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\n      sampleFile['jsondata'] = {\n        susername: saveParam.userInfo.susername,\n        suserrolename: saveParam.userInfo.suserrolename,\n        ssystemfilename: \"\",\n        sfilename: Lims_JSON_stringify(selectedRecord.slinkfilename.trim(), false),\n        nfilesize: 0,\n        slinkname: selectedRecord.nlinkcode.label,\n        sdescription: Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.replaceAll('\\n', '\\\\\\\\n').replaceAll('\"', '\\\\\"').trim() : \"\", false)\n      };\n      sampleFile['nattachmenttypecode'] = nattachmenttypecode; // sampleFile[\"ssystemfilename\"] = \"\";\n\n      sampleFile['nstatus'] = transactionStatus.ACTIVE;\n      fileArray.push(sampleFile);\n    });\n  }\n\n  formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\n  formData.append(\"isFileEdited\", isFileEdited);\n  formData.append(\"subsampleattachment\", JSON.stringify(fileArray)); //ALPD-1728\n  //formData.append(\"subsampleattachment\", JSON.stringify(fileArray[0]).replaceAll('\\\\n','#r#'));\n\n  formData.append(\"nattachmenttypecode\", nattachmenttypecode);\n  formData.append(\"npreregno\", saveParam.npreregno);\n  formData.append(\"ntransactionsamplecode\", saveParam.ntransactionsamplecode); //formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\n\n  formData.append(\"userinfo\", JSON.stringify({ ...saveParam.userInfo,\n    sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\n    smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\n    slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)\n  }));\n  const inputParam = {\n    inputData: {\n      // userinfo: saveParam.userInfo },\n      \"userinfo\": { ...saveParam.userInfo,\n        sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\n        smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\n        slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)\n      }\n    },\n    formData: formData,\n    isFileupload: true,\n    operation: saveParam.operation,\n    classUrl: \"attachment\",\n    saveType: saveParam.saveType,\n    formRef: saveParam.formRef,\n    methodUrl: \"SubSampleAttachment\"\n  };\n  return inputParam;\n}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/attachmentscomments/attachments/AttachmentFunctions.js"],"names":["create_UUID","Lims_JSON_stringify","attachmentType","transactionStatus","onSaveSampleAttachment","saveParam","selectedMaster","formData","FormData","selectedRecord","acceptedFiles","sfilename","nattachmenttypecode","isFileEdited","NO","fileArray","samindex","index","FTP","Array","isArray","length","forEach","file","splittedFileName","name","split","fileExtension","sample","sampleindex","fileName","nregattachmentcode","ssystemfilename","uniquefilename","tempData","npreregno","userInfo","nformcode","nusercode","nuserrole","NA","susername","suserrolename","trim","nfilesize","size","sdescription","replaceAll","slinkname","ACTIVE","append","push","YES","sampleFile","nlinkcode","value","slinkfilename","label","slinkdescription","ncontrolCode","JSON","stringify","sformname","smodulename","slanguagename","inputParam","inputData","isFileupload","operation","classUrl","saveType","formRef","methodUrl","onSaveTestAttachment","testindex1","test","testindex","ntestattachmentcode","ntransactiontestcode","ntransactionsamplecode","stestsynonym","nneedreport","onSaveBatchAttachment","nreleasebatchcode","nbatchfilecode","userinfo","onSaveSubSampleAttachment","nsampleattachmentcode"],"mappings":"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","sourcesContent":["import { create_UUID, Lims_JSON_stringify } from \"../../../components/CommonScript\";\r\nimport { attachmentType, transactionStatus } from \"../../../components/Enumeration\";\r\n\r\nexport function onSaveSampleAttachment(saveParam, selectedMaster) {\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let samindex = {\r\n        index: 0\r\n    };\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n\r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \r\n                //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\r\n\r\n\r\n                selectedMaster.forEach((sample, sampleindex) => {\r\n                    const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\r\n                    tempData[\"npreregno\"] = sample.npreregno;\r\n                    tempData['nformcode'] = saveParam.userInfo.nformcode\r\n                    tempData['nusercode'] = saveParam.userInfo.nusercode\r\n                    tempData['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    // tempData[\"nfilesize\"] = file.size;\r\n                    tempData['jsondata'] = {\r\n                        susername: saveParam.userInfo.susername,\r\n                        suserrolename: saveParam.userInfo.suserrolename,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename:Lims_JSON_stringify(file.name.trim(),false) ,\r\n                        nfilesize: file.size,\r\n                        sdescription:Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim() : \"\",false) ,\r\n                        slinkname: \"\"\r\n                    }\r\n                    tempData['nattachmenttypecode'] = nattachmenttypecode\r\n                    // tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    // tempData[\"sfilename\"] = file.name.trim();\r\n                    // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                    tempData['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n\r\n\r\n                    formData.append(\"uploadedFile\" + samindex[\"index\"], file);\r\n                    formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\r\n                    fileArray.push(tempData);\r\n                    samindex[\"index\"] = samindex[\"index\"] + 1;\r\n                })\r\n            });\r\n            formData.append(\"filecount\", (acceptedFiles.length * selectedMaster.length));\r\n\r\n            isFileEdited = transactionStatus.YES;\r\n        } else {\r\n            selectedMaster.forEach(sample => {\r\n                let sampleFile = {};\r\n                sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\r\n                sampleFile[\"npreregno\"] = sample.npreregno;\r\n                sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n                sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile['jsondata'] = {\r\n                    susername: saveParam.userInfo.susername,\r\n                    suserrolename: saveParam.userInfo.suserrolename,\r\n                    ssystemfilename: selectedRecord.ssystemfilename,\r\n                    sfilename:Lims_JSON_stringify(selectedRecord.sfilename.trim(),false)  ,\r\n                    nfilesize: selectedRecord.nfilesize,\r\n                    sdescription:Lims_JSON_stringify( selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim() : \"\",false),\r\n                    slinkname: \"\"\r\n                }\r\n                sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                sampleFile[\"sfilename\"] = Lims_JSON_stringify(selectedRecord.sfilename.trim(),false) ;\r\n                // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n    } else {\r\n        selectedMaster.forEach(sample => {\r\n            let sampleFile = {};\r\n            sampleFile['nregattachmentcode'] = selectedRecord.nregattachmentcode ? selectedRecord.nregattachmentcode : 0;\r\n            sampleFile[\"npreregno\"] = sample.npreregno;\r\n            sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n            sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n            sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n            sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            sampleFile['jsondata'] = {\r\n                susername: saveParam.userInfo.susername,\r\n                suserrolename: saveParam.userInfo.suserrolename,\r\n                ssystemfilename: \"\",\r\n                sfilename:Lims_JSON_stringify( selectedRecord.slinkfilename.trim(),false),\r\n                nfilesize: 0,\r\n                slinkname: selectedRecord.nlinkcode.label,\r\n                sdescription:Lims_JSON_stringify(  selectedRecord.slinkdescription ? selectedRecord.slinkdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim(): \"\",false)\r\n            }\r\n            sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n            // sampleFile[\"ssystemfilename\"] = \"\";\r\n            sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n            fileArray.push(sampleFile);\r\n        })\r\n    }\r\n    formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"sampleattachment\", JSON.stringify(fileArray));\r\n    //ALPD-1728\r\n    //formData.append(\"sampleattachment\", JSON.stringify(fileArray[0]).replaceAll('\\\\n','#r#'));\r\n    formData.append(\"nattachmenttypecode\", nattachmenttypecode);\r\n    formData.append(\"npreregno\", saveParam.npreregno);\r\n    //formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n    formData.append(\"userinfo\", JSON.stringify({...saveParam.userInfo,\r\n                                                sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\r\n                                                smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\r\n                                                slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)}));\r\n    const inputParam = {\r\n       // inputData: { userinfo: saveParam.userInfo },\r\n       inputData: {// userinfo: saveParam.userInfo },\r\n                    \"userinfo\": {...saveParam.userInfo,\r\n                    sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)}},\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType: saveParam.saveType,\r\n        formRef: saveParam.formRef,\r\n        methodUrl: \"SampleAttachment\"\r\n    }\r\n    return inputParam;\r\n}\r\n\r\nexport function onSaveTestAttachment(saveParam, selectedMaster) {\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let testindex1 = {\r\n        index: 0\r\n    };\r\n\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            if(saveParam.operation==='create'){\r\n                acceptedFiles.forEach((file, index) => {\r\n\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n    \r\n    \r\n                    selectedMaster.forEach((test, testindex) => {\r\n                        const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                        const uniquefilename = fileName + '.' + fileExtension;\r\n                        const tempData = {};\r\n                        tempData['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\r\n                        tempData[\"ntransactiontestcode\"] = test.ntransactiontestcode;\r\n                        tempData[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\r\n                        tempData[\"npreregno\"] = test.npreregno;\r\n                        tempData['nformcode'] = saveParam.userInfo.nformcode\r\n                        tempData['nusercode'] = saveParam.userInfo.nusercode\r\n                        tempData['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                        tempData['nattachmenttypecode'] = nattachmenttypecode\r\n                        tempData['jsondata'] = {\r\n                            stestsynonym:Lims_JSON_stringify(test.stestsynonym.trim(),false),\r\n                            susername: saveParam.userInfo.susername,\r\n                            suserrolename: saveParam.userInfo.suserrolename,\r\n                            nfilesize: file.size,\r\n                            ssystemfilename: uniquefilename,\r\n                            sfilename:Lims_JSON_stringify(file.name.trim(),false) ,\r\n                            slinkname: \"\",                         \r\n                            sdescription:Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim() : \"\",false),\r\n                            nneedreport:selectedRecord.nneedreport ?  selectedRecord.nneedreport  : transactionStatus.NO\r\n                        }\r\n                        // tempData[\"nfilesize\"] = file.size; :\r\n                        // tempData[\"ssystemfilename\"] = uniquefilename;\r\n                        // tempData[\"sfilename\"] = file.name.trim();\r\n                        // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                        tempData['nstatus'] = transactionStatus.ACTIVE;\r\n    \r\n    \r\n                        formData.append(\"uploadedFile\" + testindex1[\"index\"], file);\r\n                        formData.append(\"uniquefilename\" + testindex1[\"index\"], uniquefilename);\r\n                        fileArray.push(tempData);\r\n                        testindex1[\"index\"] = testindex1[\"index\"] + 1;\r\n                    })\r\n                });\r\n                formData.append(\"filecount\", (acceptedFiles.length * selectedMaster.length));\r\n                isFileEdited = transactionStatus.YES;\r\n            }else {\r\n                acceptedFiles.forEach((file, index) => {\r\n\r\n                    const splittedFileName = file.name.split('.');\r\n                    const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n    \r\n    \r\n                    selectedMaster.forEach((test, testindex) => {\r\n                        const fileName = selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                        const uniquefilename = fileName + '.' + fileExtension;\r\n                        const tempData = {};\r\n                        tempData['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\r\n                        tempData[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode;\r\n                        tempData[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode;\r\n                        tempData[\"npreregno\"] = selectedRecord.npreregno;\r\n                        tempData['nformcode'] = saveParam.userInfo.nformcode\r\n                        tempData['nusercode'] = saveParam.userInfo.nusercode\r\n                        tempData['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                        tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                        tempData['nattachmenttypecode'] = nattachmenttypecode\r\n                        tempData['jsondata'] = {\r\n                            stestsynonym:Lims_JSON_stringify(selectedRecord.stestsynonym.trim(),false),\r\n                            susername: saveParam.userInfo.susername,\r\n                            suserrolename: saveParam.userInfo.suserrolename,\r\n                            nfilesize: file.size,\r\n                            ssystemfilename: uniquefilename,\r\n                            sfilename:Lims_JSON_stringify(file.name.trim(),false) ,\r\n                            slinkname: \"\",\r\n                            sdescription:Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim():\"\",false),\r\n                            nneedreport:selectedRecord.nneedreport ?  selectedRecord.nneedreport  : transactionStatus.NO   \r\n                        }\r\n                        // tempData[\"nfilesize\"] = file.size;\r\n                        // tempData[\"ssystemfilename\"] = uniquefilename;\r\n                        // tempData[\"sfilename\"] = file.name.trim();\r\n                        // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                        tempData['nstatus'] = transactionStatus.ACTIVE;\r\n    \r\n    \r\n                        formData.append(\"uploadedFile\" + testindex1[\"index\"], file);\r\n                        formData.append(\"uniquefilename\" + testindex1[\"index\"], uniquefilename);\r\n                        fileArray.push(tempData);\r\n                        testindex1[\"index\"] = testindex1[\"index\"] + 1;\r\n                    })\r\n                });\r\n                formData.append(\"filecount\", (acceptedFiles.length * selectedMaster.length));\r\n                isFileEdited = transactionStatus.YES;\r\n            }\r\n\r\n            \r\n        } else {\r\n            selectedMaster.forEach(test => {\r\n                let sampleFile = {};\r\n                sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\r\n                sampleFile[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode;\r\n                sampleFile[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode;\r\n                sampleFile[\"npreregno\"] = selectedRecord.npreregno;\r\n                sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n                sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile['jsondata'] = {\r\n                    stestsynonym:Lims_JSON_stringify(selectedRecord.stestsynonym.trim(),false),\r\n                    susername: saveParam.userInfo.susername,\r\n                    suserrolename: saveParam.userInfo.suserrolename,\r\n                    nfilesize: selectedRecord.size,\r\n                    ssystemfilename: selectedRecord.ssystemfilename,\r\n                    sfilename:Lims_JSON_stringify(selectedRecord.sfilename.trim(),false) ,\r\n                    slinkname: \"\",\r\n                    sdescription:Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim(): \"\",false),\r\n                    nneedreport:selectedRecord.nneedreport ? selectedRecord.nneedreport : transactionStatus.NO    \r\n                }\r\n                // sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                // sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n                // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n    } else {\r\n        if(saveParam.operation==='create'){\r\n            selectedMaster.forEach(test => {\r\n                let sampleFile = {};\r\n                sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\r\n                sampleFile[\"ntransactiontestcode\"] = test.ntransactiontestcode;\r\n                sampleFile[\"ntransactionsamplecode\"] = test.ntransactionsamplecode;\r\n                sampleFile[\"npreregno\"] = test.npreregno;\r\n                sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n                sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n                sampleFile[\"jsondata\"] = {\r\n                    stestsynonym:Lims_JSON_stringify(test.stestsynonym.trim(),false),\r\n                    susername: saveParam.userInfo.susername,\r\n                    suserrolename: saveParam.userInfo.suserrolename,\r\n                    ssystemfilename: \"\",\r\n                    sfilename:Lims_JSON_stringify(selectedRecord.slinkfilename.trim(),false)  ,\r\n                    nfilesize: 0,\r\n                    slinkname: selectedRecord.nlinkcode.label,\r\n                    sdescription:Lims_JSON_stringify( selectedRecord.slinkdescription ? selectedRecord.slinkdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim() : \"\",false),\r\n                    nneedreport : transactionStatus.NO\r\n                };\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }else {\r\n            selectedMaster.forEach(test => {\r\n                let sampleFile = {};\r\n                sampleFile['ntestattachmentcode'] = selectedRecord.ntestattachmentcode ? selectedRecord.ntestattachmentcode : 0;\r\n                sampleFile[\"ntransactiontestcode\"] = selectedRecord.ntransactiontestcode;\r\n                sampleFile[\"ntransactionsamplecode\"] = selectedRecord.ntransactionsamplecode;\r\n                sampleFile[\"npreregno\"] = selectedRecord.npreregno;\r\n                sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n                sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n                sampleFile[\"jsondata\"] = {\r\n                    stestsynonym:Lims_JSON_stringify(selectedRecord.stestsynonym.trim(),false),\r\n                    susername: saveParam.userInfo.susername,\r\n                    suserrolename: saveParam.userInfo.suserrolename,\r\n                    ssystemfilename: \"\",\r\n                    sfilename:Lims_JSON_stringify(selectedRecord.slinkfilename.trim(),false)  ,\r\n                    nfilesize: 0,\r\n                    slinkname: selectedRecord.nlinkcode.label,\r\n                    sdescription:Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim():\"\",false),\r\n                    nneedreport : transactionStatus.NO\r\n                };\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n\r\n    }\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"testattachment\", JSON.stringify(fileArray));\r\n    //ALPD-1728\r\n    formData.append(\"testattachment\", JSON.stringify(fileArray[0]).replaceAll('\\\\n','#r#'));\r\n    formData.append(\"nattachmenttypecode\", nattachmenttypecode);\r\n    formData.append(\"ntransactiontestcode\", saveParam.ntransactiontestcode);\r\n   // formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n\r\n\r\n    const inputParam = {\r\n        inputData: { \"userinfo\": {...saveParam.userInfo,\r\n            sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\r\n            smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\r\n            slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)} },\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType: saveParam.saveType,\r\n        formRef: saveParam.formRef,\r\n        methodUrl: \"TestAttachment\"\r\n    }\r\n    return inputParam;\r\n}\r\n\r\nexport function onSaveBatchAttachment(saveParam, selectedMaster) {\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let nreleasebatchcode = selectedMaster.nreleasebatchcode;\r\n\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n\r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                const fileName = selectedRecord.nbatchfilecode && selectedRecord.nbatchfilecode > 0 &&\r\n                    selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ?\r\n                    selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                const uniquefilename = fileName + '.' + fileExtension;\r\n\r\n                //selectedMaster.forEach(sample=>{\r\n\r\n                const tempData = {};\r\n                tempData['nbatchfilecode'] = selectedRecord.nbatchfilecode ?\r\n                    selectedRecord.nbatchfilecode : 0;\r\n                tempData[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\r\n                tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                tempData['nattachmenttypecode'] = nattachmenttypecode;\r\n                tempData[\"ssystemfilename\"] = uniquefilename;\r\n                tempData[\"sfilename\"] =Lims_JSON_stringify(file.name.trim(),false)  ;\r\n                tempData[\"sdescription\"] =Lims_JSON_stringify( selectedRecord.sdescription ? selectedRecord.sdescription.trim().replaceAll('\\\\n','#r#'):\"\",false)  ;\r\n                tempData['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n\r\n                formData.append(\"uploadedFile\" + index, file);\r\n                formData.append(\"uniquefilename\" + index, uniquefilename);\r\n                fileArray.push(tempData);\r\n                //nreleasebatchcode.push(selectedMaster.releasebatchcode)\r\n                //})\r\n            });\r\n            formData.append(\"filecount\", acceptedFiles.length);\r\n            isFileEdited = transactionStatus.YES;\r\n        }\r\n        else {\r\n            // selectedMaster.forEach(sample=>{\r\n            let sampleFile = {};\r\n            sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\r\n            sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\r\n            sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n            sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n            sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n            sampleFile[\"sfilename\"] =Lims_JSON_stringify(selectedRecord.sfilename.trim(),false)  ;\r\n            sampleFile[\"sdescription\"] =Lims_JSON_stringify(  selectedRecord.sdescription ? selectedRecord.sdescription.trim().replaceAll('\\\\n','#r#') : \"\",false);\r\n            sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n            //npreregno.push(sample.npreregno)\r\n            fileArray.push(sampleFile);\r\n            // })\r\n        }\r\n    } else {\r\n        //selectedMaster.forEach(sample=>{\r\n        let sampleFile = {};\r\n        sampleFile['nbatchfilecode'] = selectedRecord.nbatchfilecode ? selectedRecord.nbatchfilecode : 0;\r\n        sampleFile[\"nreleasebatchcode\"] = selectedMaster.nreleasebatchcode;\r\n        sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n        sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n        sampleFile[\"ssystemfilename\"] = \"\";\r\n        sampleFile[\"sfilename\"] =Lims_JSON_stringify(selectedRecord.slinkfilename.trim(),false)  ;\r\n        sampleFile[\"sdescription\"] =Lims_JSON_stringify(selectedRecord.slinkdescription ? selectedRecord.slinkdescription.trim() : \"\",false)  ;\r\n        sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n        fileArray.push(sampleFile);\r\n        //npreregno.push(sample.npreregno)\r\n        //})  \r\n    }\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"batchcreationfile\", JSON.stringify(fileArray));\r\n    //ALPD-1728\r\n    //formData.append(\"batchcreationfile\", JSON.stringify(fileArray[0]).replaceAll('\\\\n','#r#'));\r\n    formData.append(\"nattachmenttypecode\", nattachmenttypecode);\r\n    formData.append(\"nreleasebatchcode\", nreleasebatchcode);\r\n    formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n\r\n    const inputParam = {\r\n        inputData: { userinfo: saveParam.userInfo },\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType: saveParam.saveType,\r\n        formRef: saveParam.formRef,\r\n        methodUrl: \"BatchCreationFile\"\r\n    }\r\n    return inputParam;\r\n}\r\n\r\nexport function onSaveSubSampleAttachment(saveParam, selectedMaster) {\r\n\r\n    const formData = new FormData();\r\n    const selectedRecord = saveParam.selectedRecord;\r\n    const acceptedFiles = selectedRecord.sfilename;\r\n    const nattachmenttypecode = selectedRecord.nattachmenttypecode;\r\n    let isFileEdited = transactionStatus.NO;\r\n    let fileArray = [];\r\n    let samindex = {\r\n        index: 0\r\n    };\r\n    if (nattachmenttypecode === attachmentType.FTP) {\r\n        if (acceptedFiles && Array.isArray(acceptedFiles) && acceptedFiles.length > 0) {\r\n            acceptedFiles.forEach((file, index) => {\r\n\r\n                const splittedFileName = file.name.split('.');\r\n                const fileExtension = file.name.split('.')[splittedFileName.length - 1];\r\n                // const uniquefilename = nattachmenttypecode === attachmentType.FTP? selectedRecord.nregattachmentcode && selectedRecord.nregattachmentcode>0 \r\n                //         ? selectedRecord.ssystemfilename: create_UUID()+'.'+fileExtension: \"\";\r\n\r\n\r\n                selectedMaster.forEach((sample, sampleindex) => {\r\n                    const fileName = selectedRecord.nsampleattachmentcode && selectedRecord.nsampleattachmentcode > 0 && selectedRecord.ssystemfilename && selectedRecord.ssystemfilename !== \"\" ? selectedRecord.ssystemfilename.split('.')[0] : create_UUID()\r\n                    const uniquefilename = fileName + '.' + fileExtension;\r\n                    const tempData = {};\r\n                    tempData['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\r\n                    tempData[\"npreregno\"] = sample.npreregno;\r\n                    tempData[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\r\n                    tempData['nformcode'] = saveParam.userInfo.nformcode\r\n                    tempData['nusercode'] = saveParam.userInfo.nusercode\r\n                    tempData['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                    tempData[\"nlinkcode\"] = transactionStatus.NA;\r\n                    // tempData[\"nfilesize\"] = file.size;\r\n                    tempData['jsondata'] = {\r\n                        susername: saveParam.userInfo.susername,\r\n                        suserrolename: saveParam.userInfo.suserrolename,\r\n                        ssystemfilename: uniquefilename,\r\n                        sfilename:Lims_JSON_stringify(file.name.trim(),false)  ,\r\n                        nfilesize: file.size,\r\n                        sdescription:Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim() : \"\",false)  ,\r\n                        slinkname: \"\"\r\n                    }\r\n                    tempData['nattachmenttypecode'] = nattachmenttypecode\r\n                    // tempData[\"ssystemfilename\"] = uniquefilename;\r\n                    // tempData[\"sfilename\"] = file.name.trim();\r\n                    // tempData[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                    tempData['nstatus'] = transactionStatus.ACTIVE;\r\n\r\n\r\n\r\n                    formData.append(\"uploadedFile\" + samindex[\"index\"], file);\r\n                    formData.append(\"uniquefilename\" + samindex[\"index\"], uniquefilename);\r\n                    fileArray.push(tempData);\r\n                    samindex[\"index\"] = samindex[\"index\"] + 1;\r\n                })\r\n            });\r\n            formData.append(\"filecount\", (acceptedFiles.length * selectedMaster.length));\r\n\r\n            isFileEdited = transactionStatus.YES;\r\n        } else {\r\n            selectedMaster.forEach(sample => {\r\n                let sampleFile = {};\r\n                sampleFile['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\r\n                sampleFile[\"npreregno\"] = sample.npreregno;\r\n                sampleFile[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\r\n                sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n                sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n                sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n                sampleFile[\"nlinkcode\"] = transactionStatus.NA;\r\n                // sampleFile[\"nfilesize\"] = selectedRecord.nfilesize;\r\n                sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n                sampleFile['jsondata'] = {\r\n                    susername: saveParam.userInfo.susername,\r\n                    suserrolename: saveParam.userInfo.suserrolename,\r\n                    ssystemfilename: selectedRecord.ssystemfilename,\r\n                    sfilename:Lims_JSON_stringify(selectedRecord.sfilename.trim(),false)  ,\r\n                    nfilesize: selectedRecord.nfilesize,\r\n                    sdescription:Lims_JSON_stringify(selectedRecord.sdescription ? selectedRecord.sdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim() : \"\",false) ,\r\n                    slinkname: \"\"\r\n                }\r\n                sampleFile[\"ssystemfilename\"] = selectedRecord.ssystemfilename;\r\n                //sampleFile[\"sfilename\"] = selectedRecord.sfilename.trim();\r\n                // sampleFile[\"sdescription\"] = selectedRecord.sdescription? selectedRecord.sdescription.trim(): \"\";\r\n                sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n                fileArray.push(sampleFile);\r\n            })\r\n        }\r\n    } else {\r\n        selectedMaster.forEach(sample => {\r\n            let sampleFile = {};\r\n            sampleFile['nsampleattachmentcode'] = selectedRecord.nsampleattachmentcode ? selectedRecord.nsampleattachmentcode : 0;\r\n            sampleFile[\"npreregno\"] = sample.npreregno;\r\n            sampleFile[\"ntransactionsamplecode\"] = sample.ntransactionsamplecode;\r\n            sampleFile['nformcode'] = saveParam.userInfo.nformcode\r\n            sampleFile['nusercode'] = saveParam.userInfo.nusercode\r\n            sampleFile['nuserrolecode'] = saveParam.userInfo.nuserrole\r\n            sampleFile[\"nlinkcode\"] = selectedRecord.nlinkcode.value ? selectedRecord.nlinkcode.value : -1;\r\n            sampleFile['jsondata'] = {\r\n                susername: saveParam.userInfo.susername,\r\n                suserrolename: saveParam.userInfo.suserrolename,\r\n                ssystemfilename: \"\",\r\n                sfilename:Lims_JSON_stringify( selectedRecord.slinkfilename.trim(),false) ,\r\n                nfilesize: 0,\r\n                slinkname: selectedRecord.nlinkcode.label,\r\n                sdescription:Lims_JSON_stringify( selectedRecord.slinkdescription ? selectedRecord.slinkdescription.replaceAll('\\n','\\\\\\\\n').replaceAll('\"','\\\\\"').trim() : \"\",false)\r\n            }\r\n            sampleFile['nattachmenttypecode'] = nattachmenttypecode\r\n            // sampleFile[\"ssystemfilename\"] = \"\";\r\n            sampleFile['nstatus'] = transactionStatus.ACTIVE;\r\n            fileArray.push(sampleFile);\r\n        })\r\n    }\r\n    formData.append(\"ncontrolCode\", saveParam.ncontrolCode);\r\n    formData.append(\"isFileEdited\", isFileEdited);\r\n    formData.append(\"subsampleattachment\", JSON.stringify(fileArray));\r\n    //ALPD-1728\r\n    //formData.append(\"subsampleattachment\", JSON.stringify(fileArray[0]).replaceAll('\\\\n','#r#'));\r\n    formData.append(\"nattachmenttypecode\", nattachmenttypecode);\r\n    formData.append(\"npreregno\", saveParam.npreregno);\r\n    formData.append(\"ntransactionsamplecode\", saveParam.ntransactionsamplecode);\r\n    //formData.append(\"userinfo\", JSON.stringify(saveParam.userInfo));\r\n\r\n    formData.append(\"userinfo\", JSON.stringify({...saveParam.userInfo,\r\n        sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\r\n        smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\r\n        slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)}));\r\n\r\n    const inputParam = {\r\n        inputData: {// userinfo: saveParam.userInfo },\r\n                    \"userinfo\": {...saveParam.userInfo,\r\n                    sformname: Lims_JSON_stringify(saveParam.userInfo.sformname),\r\n                    smodulename: Lims_JSON_stringify(saveParam.userInfo.smodulename),\r\n                    slanguagename: Lims_JSON_stringify(saveParam.userInfo.slanguagename)}},\r\n        formData: formData,\r\n        isFileupload: true,\r\n        operation: saveParam.operation,\r\n        classUrl: \"attachment\",\r\n        saveType: saveParam.saveType,\r\n        formRef: saveParam.formRef,\r\n        methodUrl: \"SubSampleAttachment\"\r\n    }\r\n    return inputParam;\r\n}"]},"metadata":{},"sourceType":"module"}