{"ast":null,"code":"import _objectSpread from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import rsapi from'../rsapi';import Axios from'axios';import{toast}from'react-toastify';import{DEFAULT_RETURN}from'./LoginTypes';import{initRequest}from'./LoginAction';import{sortData,constructOptionList,rearrangeDateFormat}from'../components/CommonScript';import{transactionStatus,attachmentType}from'../components/Enumeration';import{intl}from\"../components/App\";export var getreloadQuotation=function getreloadQuotation(inputParam){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/quotation/get\"+inputParam.methodUrl,inputParam.inputData).then(function(response){var masterData=response.data;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{loading:false,dataState:undefined,masterData:_objectSpread({},masterData)}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getClientCategoryComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/client/getClientByCategory\",{\"userinfo\":methodParam.inputData.userinfo,\"nclientcatcode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var Client,sclientsiteaddress;var SelectedClient=[];var usertMap=constructOptionList(response[0].data.Client||[],\"nclientcode\",\"sclientname\",undefined,undefined,false);Client=usertMap.get(\"OptionList\");// SelectedClient=response[0].data.selectedClient;\n//  sclientsiteaddress= response[0].data.selectedClientSite.saddress1;\n// selectedRecord={...selectedRecord,...response[0].data.selectedClient}\n// selectedRecord={...selectedRecord,...response[0].data.selectedClientSite.saddress1} \nselectedRecord[\"nclientcode\"]={label:response[0].data.selectedClient.sclientname,value:response[0].data.selectedClient.nclientcode,item:response[0].data.selectedClient};// selectedRecord[\"nclientcode\"]=response[0].data.selectedClient.nclientcode;\n// selectedRecord[\"sclientname\"]=response[0].data.selectedClient.sclientname;\nselectedRecord[\"sclientsiteaddress\"]=response[0].data.selectedClientSite.saddress1;// selectedRecord={response[0].data.selectedClientSite.saddress1}\nselectedRecord=_objectSpread({},selectedRecord);dispatch({type:DEFAULT_RETURN,payload:{Client:Client,selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined,sclientsiteaddress:sclientsiteaddress,SelectedClient:SelectedClient}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getQuotaionClientComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/client/getSelectedClientDetail\",{\"userinfo\":methodParam.inputData.userinfo,\"nclientcode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var sclientsiteaddress;var SelectedClient=[];// SelectedClient=response[0].data.selectedClient;\n// sclientsiteaddress= response[0].data.selectedClientSite.saddress1;\nselectedRecord[\"sclientname\"]=response[0].data.selectedClient.sclientname;selectedRecord[\"sclientsiteaddress\"]=response[0].data.selectedClientSite.saddress1;dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined,sclientsiteaddress:sclientsiteaddress,SelectedClient:SelectedClient}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getProjectTypeComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/projectmaster/getApprovedProjectMasterByProjectType\",{\"userinfo\":methodParam.inputData.userinfo,\"nprojecttypecode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var ProjectCode,ProjectMaster=[];var srfwdate,sprojecttitle,suserrolename,susername;var usertMap=constructOptionList(response[0].data.ProjectCode||[],\"nprojectmastercode\",\"sprojectcode\",undefined,undefined,false);ProjectCode=usertMap.get(\"OptionList\");selectedRecord[\"nprojectmastercode\"]={label:response[0].data.SelectedProjectCode.sprojectcode,value:response[0].data.SelectedProjectCode.nprojectmastercode,item:response[0].data.SelectedProjectCode};srfwdate=rearrangeDateFormat(methodParam.inputData.userinfo,response[0].data.Projectmaster[0].srfwdate);//  srfwdate=response[0].data.Projectmaster[0].srfwdate;\nselectedRecord[\"sprojecttitle\"]=_objectSpread(_objectSpread({},response[0].data.Projectmaster[0]),{},{sprojecttitle:sprojecttitle});// selectedRecord[\"srfwdate\"]={...response[0].data.Projectmaster[0],srfwdate:srfwdate};\nselectedRecord[\"suserrolename\"]=_objectSpread(_objectSpread({},response[0].data.Projectmaster[0]),{},{suserrolename:suserrolename});selectedRecord[\"susername\"]=_objectSpread(_objectSpread({},response[0].data.Projectmaster[0]),{},{susername:susername});ProjectMaster=_objectSpread(_objectSpread({},response[0].data.Projectmaster[0]),{},{srfwdate:srfwdate});dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined,ProjectCode:ProjectCode,ProjectMaster:ProjectMaster}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}export function getProjectCodeComboService(methodParam,selectedRecord){return function(dispatch){var URL=[];URL=rsapi.post(\"/projectmaster/getActiveProjectMasterById\",{\"userinfo\":methodParam.inputData.userinfo,\"nprojectmastercode\":methodParam.inputData.primarykey});dispatch(initRequest(true));Axios.all([URL]).then(function(response){var ProjectMaster=[];var srfwdate;// srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate);\nProjectMaster=response[0].data.SelectedProjectMaster;selectedRecord[\"nprojectmastercode\"]={label:response[0].data.SelectedProjectMaster.sprojectcode,value:response[0].data.SelectedProjectMaster.nprojectmastercode,item:response[0].data.SelectedProjectMaster};// srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate);\n// srfwdate=response[0].data.SelectedProjectMaster.srfwdate;\nselectedRecord[\"srfwdate\"]=rearrangeDateFormat(methodParam.inputData.userinfo,response[0].data.SelectedProjectMaster.srfwdate);ProjectMaster=_objectSpread(_objectSpread({},response[0].data.SelectedProjectMaster),{},{srfwdate:srfwdate});dispatch({type:DEFAULT_RETURN,payload:{selectedRecord:selectedRecord,loading:false,data:undefined,dataState:undefined,ProjectMaster:ProjectMaster}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});};}//Add Project Master\nexport var addQuotation=function addQuotation(operation,userInfo,ncontrolCode,selectedQuotation){return function(dispatch){if(operation===\"create\"||operation===\"update\"&&selectedQuotation.ntransactionstatus!==transactionStatus.RETIRED){dispatch(initRequest(true));var urlArray=[];var selectedRecord={};if(operation===\"create\"||operation===\"update\"){urlArray.push(rsapi.post(\"clientcategory/getClientCategory\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"client/getClientByCategory\",{\"nclientcatcode\":selectedQuotation.nclientcatcode,\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"projecttype/getProjectType\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"quotation/getQuotationType\",{\"userinfo\":userInfo}));}if(operation===\"update\"){urlArray.push(rsapi.post(\"quotation/getActiveQuotationById\",{\"userinfo\":userInfo,\"nquotationcode\":selectedQuotation.nquotationcode}));}Axios.all(urlArray).then(function(response){var testData={};var _ref=[],ClientCategory=_ref.ClientCategory,Client=_ref.Client,ProjectType=_ref.ProjectType,ProjectMaster=_ref.ProjectMaster,sclientsiteaddress=_ref.sclientsiteaddress,QuotationType=_ref.QuotationType;if(operation===\"create\"){ClientCategory=constructOptionList(response[0].data||[],\"nclientcatcode\",\"sclientcatname\",false,false,true).get(\"OptionList\");//       Client = constructOptionList(response[1].data || [], \"nclientcode\", \"sclientname\", false, false, true).get(\"OptionList\");\nProjectType=constructOptionList(response[2].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");QuotationType=constructOptionList(response[3].data||[],\"nquotationtypecode\",\"squotationname\",false,false,true).get(\"OptionList\");}else if(operation===\"update\"){var editData=response[4].data.SelectedQuotation;ProjectMaster=response[4].data.SelectedQuotation;// sclientsiteaddress = editData.sclientsiteaddress;\nselectedRecord[\"sclientsiteaddress\"]=editData.sclientsiteaddress;selectedRecord[\"sinvoiceaddress\"]=editData.sinvoiceaddress;selectedRecord[\"sprojecttitle\"]=editData.sprojecttitle;selectedRecord[\"sdescription\"]=editData.sdescription;selectedRecord[\"sdeviationremarks\"]=editData.sdeviationremarks;selectedRecord[\"suserrolename\"]=editData.suserrolename;selectedRecord[\"susername\"]=editData.susername;selectedRecord=_objectSpread({},selectedRecord);ClientCategory=constructOptionList(response[0].data||[],\"nclientcatcode\",\"sclientcatname\",false,false,true).get(\"OptionList\");Client=constructOptionList(response[1].data.Client||[],\"nclientcode\",\"sclientname\",false,false,true).get(\"OptionList\");ProjectType=constructOptionList(response[2].data||[],\"nprojecttypecode\",\"sprojecttypename\",false,false,true).get(\"OptionList\");QuotationType=constructOptionList(response[3].data||[],\"nquotationtypecode\",\"squotationname\",false,false,true).get(\"OptionList\");selectedRecord[\"nprojecttypecode\"]={\"value\":editData[\"nprojecttypecode\"],\"label\":editData[\"sprojecttypename\"]};selectedRecord[\"nclientcatcode\"]={\"value\":editData[\"nclientcatcode\"],\"label\":editData[\"sclientcatname\"]};selectedRecord[\"nclientcode\"]={\"value\":editData[\"nclientcode\"],\"label\":editData[\"sclientname\"]};selectedRecord[\"nquotationtypecode\"]={\"value\":editData[\"nquotationtypecode\"],\"label\":editData[\"squotationname\"]};selectedRecord[\"nprojectmastercode\"]={\"value\":editData[\"nprojectmastercode\"],\"label\":editData[\"sprojectcode\"]};selectedRecord[\"srfwdate\"]=rearrangeDateFormat(userInfo,editData.srfwdate);selectedRecord[\"dquotationdate\"]=rearrangeDateFormat(userInfo,editData.squotationdate);}dispatch({type:DEFAULT_RETURN,payload:{openModal:true,ProjectType:ProjectType,operation:operation,ClientCategory:ClientCategory,Client:Client,ProjectMaster:ProjectMaster,sclientsiteaddress:sclientsiteaddress,QuotationType:QuotationType,screenName:\"IDS_QUOTATION\",selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,testData:testData,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};};export var GrossQuotation=function GrossQuotation(operation,userInfo,ncontrolCode,selectedQuotation){return function(dispatch){//  if (operation === \"create\" || (operation === \"update\" && selectedQuotation.ntransactionstatus !== transactionStatus.RETIRED)) {\ndispatch(initRequest(true));var urlArray=[];var selectedRecord={};urlArray.push(rsapi.post(\"discountband/getDiscountBand\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"vatband/getVATBand\",{\"userinfo\":userInfo}));urlArray.push(rsapi.post(\"quotation/getQuotationGrossAmount\",{\"nquotationcode\":selectedQuotation.nquotationcode,\"userinfo\":userInfo}));Axios.all(urlArray).then(function(response){var _ref2=[],DiscountBand=_ref2.DiscountBand,VATBand=_ref2.VATBand;DiscountBand=constructOptionList(response[0].data||[],\"ndiscountbandcode\",\"sdiscountbandname\",false,false,true).get(\"OptionList\");VATBand=constructOptionList(response[1].data||[],\"nvatbandcode\",\"svatbandname\",false,false,true).get(\"OptionList\");var QuotationGrossAmount=response[2].data;selectedRecord.ndiscountbandcode.item[\"namount\"]=QuotationGrossAmount[0].ndiscountpercentage;selectedRecord.nvatbandcode.item[\"namount\"]=QuotationGrossAmount[0].nvatpercentage;selectedRecord[\"ndiscountamount\"]=QuotationGrossAmount[0].ndiscountamount;selectedRecord[\"nvatamount\"]=QuotationGrossAmount[0].nvatamount;selectedRecord[\"nvatbandcode\"]={\"value\":QuotationGrossAmount[0][\"nvatbandcode\"],\"label\":QuotationGrossAmount[0][\"svatbandname\"]};selectedRecord[\"ndiscountbandcode\"]={\"value\":QuotationGrossAmount[0][\"ndiscountbandcode\"],\"label\":QuotationGrossAmount[0][\"sdiscountbandname\"]};dispatch({type:DEFAULT_RETURN,payload:{openModal:true,DiscountBand:DiscountBand,edit:true,operation:operation,VATBand:VATBand,QuotationGrossAmount:QuotationGrossAmount,screenName:\"IDS_GROSSQUOTATION\",selectedRecord:selectedRecord,ncontrolCode:ncontrolCode,loading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});//  } else {\n//         toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\n//  }\n};};//Quotation Record Click \nexport var getQuotation=function getQuotation(quotationItem,userInfo,masterData){return function(dispatch){dispatch(initRequest(true));rsapi.post(\"/quotation/getActiveQuotationById\",{nquotationcode:quotationItem.nquotationcode,userinfo:userInfo}).then(function(response){var masterData1=_objectSpread(_objectSpread({},masterData),response.data);// ...masterData,\n// ...response.data\nmasterData=masterData1;sortData(masterData);dispatch({type:DEFAULT_RETURN,payload:{// masterData,\nloading:false,dataState:undefined,masterData:masterData}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});toast.error(error.message);});};};export function getQuotationAddTestService(screenName,operation,masterData,userInfo,ncontrolCode){return function(dispatch){if(masterData.SelectedQuotation.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));rsapi.post(\"quotation/getQuotationUnmappedTest\",{\"nquotationcode\":masterData.SelectedQuotation[\"nquotationcode\"],userinfo:userInfo}).then(function(response){var masterData1=_objectSpread(_objectSpread({},masterData),response.data);masterData=masterData1;dispatch({type:DEFAULT_RETURN,payload:{QuotationTestList:response.data,masterData:masterData,openModal:true,operation:operation,screenName:screenName,ncontrolCode:ncontrolCode,//selectedRecord, \nloading:false}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTVERSION\"}));}};}export function getQuotationPricingEditService(editParam){return function(dispatch){// screenName, operation, masterData, userInfo, ncontrolCode\n//console.log(\"editParam:\", editParam);\nif(editParam.masterData.SelectedQuotation.ntransactionstatus===transactionStatus.DRAFT){dispatch(initRequest(true));rsapi.post(\"quotation/getQuotationPrice\",{\"nquotationcode\":editParam.masterData.SelectedQuotation[\"nquotationcode\"],\"nquotationtestcode\":editParam.editRow?editParam.editRow.nquotationtestcode:null,userinfo:editParam.userInfo}).then(function(response){var selectedRecord=[];if(editParam.editRow){selectedRecord.push(response.data[\"SelectedQuotationPrice\"]);}else{selectedRecord=sortData(response.data[\"QuotationPrice\"]);}dispatch({type:DEFAULT_RETURN,payload:{//pricingTestList:testList, \n//testPriceList:response.data[\"TestPrice\"],\nopenModal:true,edit:true,operation:editParam.operation,screenName:editParam.screenName,ncontrolCode:editParam.ncontrolCode,selectedRecord:selectedRecord,selectedId:editParam.editRow?editParam.editRow.nquotationtestcode:null,loading:false,quotationDataState:editParam.quotationDataState}});}).catch(function(error){dispatch({type:DEFAULT_RETURN,payload:{loading:false}});if(error.response.status===500){toast.error(error.message);}else{toast.warn(error.response.data);}});}else{toast.warn(intl.formatMessage({id:\"IDS_SELECTDRAFTTESTPRICEVERSION\"}));}};}","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/actions/QuotationAction.js"],"names":["rsapi","Axios","toast","DEFAULT_RETURN","initRequest","sortData","constructOptionList","rearrangeDateFormat","transactionStatus","attachmentType","intl","getreloadQuotation","inputParam","dispatch","post","methodUrl","inputData","then","response","masterData","data","type","payload","loading","dataState","undefined","catch","error","message","getClientCategoryComboService","methodParam","selectedRecord","URL","userinfo","primarykey","all","Client","sclientsiteaddress","SelectedClient","usertMap","get","label","selectedClient","sclientname","value","nclientcode","item","selectedClientSite","saddress1","status","warn","getQuotaionClientComboService","getProjectTypeComboService","ProjectCode","ProjectMaster","srfwdate","sprojecttitle","suserrolename","susername","SelectedProjectCode","sprojectcode","nprojectmastercode","Projectmaster","getProjectCodeComboService","SelectedProjectMaster","addQuotation","operation","userInfo","ncontrolCode","selectedQuotation","ntransactionstatus","RETIRED","urlArray","push","nclientcatcode","nquotationcode","testData","ClientCategory","ProjectType","QuotationType","editData","SelectedQuotation","sinvoiceaddress","sdescription","sdeviationremarks","squotationdate","openModal","screenName","formatMessage","id","GrossQuotation","DiscountBand","VATBand","QuotationGrossAmount","ndiscountbandcode","ndiscountpercentage","nvatbandcode","nvatpercentage","ndiscountamount","nvatamount","edit","getQuotation","quotationItem","masterData1","getQuotationAddTestService","DRAFT","QuotationTestList","getQuotationPricingEditService","editParam","editRow","nquotationtestcode","selectedId","quotationDataState"],"mappings":"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","sourcesContent":["import rsapi from '../rsapi';\r\nimport Axios from 'axios';\r\nimport {toast} from 'react-toastify';\r\nimport { DEFAULT_RETURN} from './LoginTypes';\r\nimport { initRequest } from './LoginAction';\r\nimport { sortData ,constructOptionList,rearrangeDateFormat } from '../components/CommonScript';\r\nimport { transactionStatus,attachmentType } from '../components/Enumeration';\r\nimport { intl } from \"../components/App\"; \r\n\r\nexport const getreloadQuotation = (inputParam) => {\r\n    return (dispatch) => {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/quotation/get\" + inputParam.methodUrl, inputParam.inputData)\r\n            .then(response => {\r\n                const masterData = response.data\r\n                sortData(masterData);\r\n                    \r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData: {\r\n                            ...masterData,\r\n                            // quotation: inputParam.inputData.quotation\r\n                            \r\n                        }\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getClientCategoryComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/client/getClientByCategory\", { \"userinfo\": methodParam.inputData.userinfo, \"nclientcatcode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let Client,sclientsiteaddress;\r\n                let SelectedClient=[];\r\n             \r\n\r\n                const usertMap = constructOptionList(response[0].data.Client || [], \"nclientcode\",\"sclientname\", undefined, undefined, false);              \r\n\r\n                Client = usertMap.get(\"OptionList\");\r\n\r\n                // SelectedClient=response[0].data.selectedClient;\r\n               //  sclientsiteaddress= response[0].data.selectedClientSite.saddress1;\r\n                // selectedRecord={...selectedRecord,...response[0].data.selectedClient}\r\n                // selectedRecord={...selectedRecord,...response[0].data.selectedClientSite.saddress1} \r\n                selectedRecord[\"nclientcode\"]=  {\r\n                                                label: response[0].data.selectedClient.sclientname,\r\n                                                value: response[0].data.selectedClient.nclientcode,\r\n                                                item: response[0].data.selectedClient}\r\n                // selectedRecord[\"nclientcode\"]=response[0].data.selectedClient.nclientcode;\r\n                // selectedRecord[\"sclientname\"]=response[0].data.selectedClient.sclientname;\r\n                selectedRecord[\"sclientsiteaddress\"]=response[0].data.selectedClientSite.saddress1;\r\n             // selectedRecord={response[0].data.selectedClientSite.saddress1}\r\n               selectedRecord = {...selectedRecord}\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { Client,selectedRecord, loading: false, data: undefined, dataState: undefined,sclientsiteaddress,SelectedClient } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getQuotaionClientComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/client/getSelectedClientDetail\", { \"userinfo\": methodParam.inputData.userinfo, \"nclientcode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let sclientsiteaddress;\r\n                let SelectedClient=[];\r\n\r\n                // SelectedClient=response[0].data.selectedClient;\r\n                // sclientsiteaddress= response[0].data.selectedClientSite.saddress1;\r\n                selectedRecord[\"sclientname\"]=response[0].data.selectedClient.sclientname;\r\n                selectedRecord[\"sclientsiteaddress\"]=response[0].data.selectedClientSite.saddress1;\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { selectedRecord, loading: false, data: undefined, dataState: undefined,sclientsiteaddress,SelectedClient } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getProjectTypeComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/projectmaster/getApprovedProjectMasterByProjectType\", { \"userinfo\": methodParam.inputData.userinfo, \"nprojecttypecode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let ProjectCode,ProjectMaster=[];    \r\n                let srfwdate,sprojecttitle,suserrolename,susername;\r\n\r\n                const usertMap = constructOptionList(response[0].data.ProjectCode || [], \"nprojectmastercode\",\"sprojectcode\", undefined, undefined, false);              \r\n\r\n                ProjectCode = usertMap.get(\"OptionList\");\r\n    \r\n                selectedRecord[\"nprojectmastercode\"]=  {\r\n                            label: response[0].data.SelectedProjectCode.sprojectcode,\r\n                            value: response[0].data.SelectedProjectCode.nprojectmastercode,\r\n                            item: response[0].data.SelectedProjectCode}\r\n\r\n                srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate);\r\n            //  srfwdate=response[0].data.Projectmaster[0].srfwdate;\r\n                selectedRecord[\"sprojecttitle\"]={...response[0].data.Projectmaster[0],sprojecttitle:sprojecttitle};\r\n                // selectedRecord[\"srfwdate\"]={...response[0].data.Projectmaster[0],srfwdate:srfwdate};\r\n                selectedRecord[\"suserrolename\"]={...response[0].data.Projectmaster[0],suserrolename:suserrolename};\r\n                selectedRecord[\"susername\"]={...response[0].data.Projectmaster[0],susername:susername};\r\n                ProjectMaster={...response[0].data.Projectmaster[0],srfwdate:srfwdate};\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { selectedRecord, loading: false, data: undefined, dataState: undefined,ProjectCode,ProjectMaster } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\nexport function getProjectCodeComboService(methodParam,selectedRecord) {\r\n\r\n    return function (dispatch) {\r\n\r\n        let URL = [];\r\n\r\n            URL=rsapi.post(\"/projectmaster/getActiveProjectMasterById\", { \"userinfo\": methodParam.inputData.userinfo, \"nprojectmastercode\":  methodParam.inputData.primarykey  })\r\n\r\n         dispatch(initRequest(true));\r\n\r\n        Axios.all([URL])\r\n\r\n            .then(response => {\r\n\r\n                let ProjectMaster=[];  \r\n                let srfwdate;  \r\n               \r\n                // srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate);\r\n                \r\n                ProjectMaster=response[0].data.SelectedProjectMaster;\r\n\r\n                selectedRecord[\"nprojectmastercode\"]=  {\r\n                    label: response[0].data.SelectedProjectMaster.sprojectcode,\r\n                    value: response[0].data.SelectedProjectMaster.nprojectmastercode,\r\n                    item: response[0].data.SelectedProjectMaster}\r\n\r\n        // srfwdate= rearrangeDateFormat( methodParam.inputData.userinfo, response[0].data.Projectmaster[0].srfwdate);\r\n                // srfwdate=response[0].data.SelectedProjectMaster.srfwdate;\r\n                selectedRecord[\"srfwdate\"] = rearrangeDateFormat(methodParam.inputData.userinfo,response[0].data.SelectedProjectMaster.srfwdate);\r\n                ProjectMaster={...response[0].data.SelectedProjectMaster,srfwdate:srfwdate};\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload:\r\n\r\n                     { selectedRecord, loading: false, data: undefined, dataState: undefined,ProjectMaster } })\r\n\r\n            })\r\n\r\n            .catch(error => {\r\n\r\n                dispatch({ type: DEFAULT_RETURN, payload: { loading: false } })\r\n\r\n                if (error.response.status === 500) {\r\n\r\n                    toast.error(error.message);\r\n\r\n                }\r\n\r\n                else {\r\n\r\n                    toast.warn(error.response.data);\r\n\r\n                }\r\n\r\n            })\r\n\r\n    }\r\n\r\n}\r\n\r\n//Add Project Master\r\nexport const addQuotation = (operation, userInfo, ncontrolCode,selectedQuotation ) => {\r\n    return function (dispatch) {\r\n     if (operation === \"create\" || (operation === \"update\" && selectedQuotation.ntransactionstatus !== transactionStatus.RETIRED)) {\r\n                dispatch(initRequest(true));\r\n            const urlArray = [\r\n            ];\r\n            let selectedRecord = {};\r\n\r\n             if (operation === \"create\" || operation === \"update\") {\r\n\r\n                urlArray.push(rsapi.post(\"clientcategory/getClientCategory\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"client/getClientByCategory\", {\r\n                    \"nclientcatcode\": selectedQuotation.nclientcatcode,\r\n                    \"userinfo\": userInfo\r\n                })); \r\n\r\n\r\n                urlArray.push(rsapi.post(\"projecttype/getProjectType\", {\r\n                    \"userinfo\": userInfo \r\n                    \r\n                })); \r\n         \r\n                urlArray.push(rsapi.post(\"quotation/getQuotationType\", {\r\n                    \"userinfo\": userInfo \r\n                    \r\n                })); \r\n            } \r\n             if (operation === \"update\"){\r\n\r\n                urlArray.push(rsapi.post(\"quotation/getActiveQuotationById\", {\r\n                    \"userinfo\": userInfo,\r\n                    \"nquotationcode\": selectedQuotation.nquotationcode\r\n                }));\r\n\r\n            }\r\n\r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n               \r\n                let testData = {};\r\n\r\n                let {ClientCategory,Client,ProjectType,ProjectMaster,sclientsiteaddress,QuotationType}=[]\r\n                \r\n\r\n              if (operation === \"create\") {\r\n                   \r\n                   \r\n                     ClientCategory = constructOptionList(response[0].data || [], \"nclientcatcode\", \"sclientcatname\", false, false, true).get(\"OptionList\");\r\n                   \r\n              //       Client = constructOptionList(response[1].data || [], \"nclientcode\", \"sclientname\", false, false, true).get(\"OptionList\");\r\n\r\n                     ProjectType = constructOptionList(response[2].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                     QuotationType = constructOptionList(response[3].data || [], \"nquotationtypecode\", \"squotationname\", false, false, true).get(\"OptionList\");\r\n\r\n                    \r\n\r\n                }else if (operation === \"update\") {\r\n                    \r\n                    const editData = response[4].data.SelectedQuotation;\r\n                    ProjectMaster=response[4].data.SelectedQuotation;\r\n\r\n                    // sclientsiteaddress = editData.sclientsiteaddress;\r\n                    selectedRecord[\"sclientsiteaddress\"]=editData.sclientsiteaddress;\r\n                    selectedRecord[\"sinvoiceaddress\"] = editData.sinvoiceaddress;\r\n                    selectedRecord[\"sprojecttitle\"] = editData.sprojecttitle;\r\n                    selectedRecord[\"sdescription\"] = editData.sdescription;\r\n                    selectedRecord[\"sdeviationremarks\"] = editData.sdeviationremarks;\r\n                    selectedRecord[\"suserrolename\"] = editData.suserrolename;\r\n                    selectedRecord[\"susername\"] = editData.susername;\r\n                   \r\n                \r\n                    selectedRecord = {...selectedRecord}\r\n\r\n                   \r\n                ClientCategory = constructOptionList(response[0].data || [], \"nclientcatcode\", \"sclientcatname\", false, false, true).get(\"OptionList\");\r\n                Client = constructOptionList(response[1].data.Client || [], \"nclientcode\", \"sclientname\", false, false, true).get(\"OptionList\");\r\n                ProjectType = constructOptionList(response[2].data || [], \"nprojecttypecode\", \"sprojecttypename\", false, false, true).get(\"OptionList\");\r\n                QuotationType = constructOptionList(response[3].data || [], \"nquotationtypecode\", \"squotationname\", false, false, true).get(\"OptionList\");\r\n\r\n                          \r\n\r\n                    selectedRecord[\"nprojecttypecode\"] = {\r\n                        \"value\": editData[\"nprojecttypecode\"],\r\n                        \"label\":  editData[\"sprojecttypename\"]\r\n                    };\r\n\r\n                    selectedRecord[\"nclientcatcode\"] = {\r\n                        \"value\": editData[\"nclientcatcode\"],\r\n                        \"label\": editData[\"sclientcatname\"]\r\n                    };\r\n\r\n                    selectedRecord[\"nclientcode\"] = {\r\n                        \"value\": editData[\"nclientcode\"],\r\n                        \"label\": editData[\"sclientname\"]\r\n                    };\r\n                    \r\n                    selectedRecord[\"nquotationtypecode\"] = {\r\n                        \"value\": editData[\"nquotationtypecode\"],\r\n                        \"label\": editData[\"squotationname\"]\r\n                    };\r\n\r\n                    selectedRecord[\"nprojectmastercode\"] = {\r\n                        \"value\": editData[\"nprojectmastercode\"],\r\n                        \"label\": editData[\"sprojectcode\"]\r\n                    };\r\n                  \r\n                selectedRecord[\"srfwdate\"] = rearrangeDateFormat(userInfo,editData.srfwdate);\r\n                selectedRecord[\"dquotationdate\"] = rearrangeDateFormat(userInfo,editData.squotationdate);\r\n               \r\n                }\r\n                   \r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n  \r\n                            openModal: true,\r\n                            ProjectType,\r\n                            operation: operation,ClientCategory,Client,ProjectMaster,sclientsiteaddress,QuotationType,\r\n                            screenName: \"IDS_QUOTATION\",\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            testData,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n         } else {\r\n                          \r\n                toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n\r\n         }\r\n    }\r\n}\r\n\r\nexport const GrossQuotation = (operation, userInfo, ncontrolCode,selectedQuotation ) => {\r\n    return function (dispatch) {\r\n    //  if (operation === \"create\" || (operation === \"update\" && selectedQuotation.ntransactionstatus !== transactionStatus.RETIRED)) {\r\n                dispatch(initRequest(true));\r\n            const urlArray = [\r\n            ];\r\n            let selectedRecord = {};\r\n\r\n                urlArray.push(rsapi.post(\"discountband/getDiscountBand\", {\r\n                    \"userinfo\": userInfo\r\n                }));\r\n\r\n                urlArray.push(rsapi.post(\"vatband/getVATBand\", {\r\n                    \"userinfo\": userInfo\r\n                })); \r\n\r\n                urlArray.push(rsapi.post(\"quotation/getQuotationGrossAmount\", {\r\n                    \"nquotationcode\": selectedQuotation.nquotationcode,\r\n                    \"userinfo\": userInfo\r\n                })); \r\n\r\n            \r\n            Axios.all(urlArray)\r\n                .then(response => {\r\n\r\n                let {DiscountBand,VATBand}=[]\r\n                \r\n                DiscountBand = constructOptionList(response[0].data || [], \"ndiscountbandcode\", \"sdiscountbandname\", false, false, true).get(\"OptionList\");\r\n                VATBand = constructOptionList(response[1].data || [], \"nvatbandcode\", \"svatbandname\", false, false, true).get(\"OptionList\");\r\n                const QuotationGrossAmount= response[2].data;\r\n\r\n\r\n                selectedRecord.ndiscountbandcode.item[\"namount\"] = QuotationGrossAmount[0].ndiscountpercentage;\r\n                selectedRecord.nvatbandcode.item[\"namount\"] = QuotationGrossAmount[0].nvatpercentage;\r\n                selectedRecord[\"ndiscountamount\"] = QuotationGrossAmount[0].ndiscountamount;\r\n                selectedRecord[\"nvatamount\"] = QuotationGrossAmount[0].nvatamount;\r\n\r\n                selectedRecord[\"nvatbandcode\"] = {\r\n                    \"value\": QuotationGrossAmount[0][\"nvatbandcode\"],\r\n                    \"label\":  QuotationGrossAmount[0][\"svatbandname\"]\r\n                };\r\n\r\n                selectedRecord[\"ndiscountbandcode\"] = {\r\n                    \"value\": QuotationGrossAmount[0][\"ndiscountbandcode\"],\r\n                    \"label\": QuotationGrossAmount[0][\"sdiscountbandname\"]\r\n                };\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n  \r\n                            openModal: true,\r\n                            DiscountBand,edit:true,\r\n                            operation: operation,VATBand,QuotationGrossAmount,\r\n                            screenName: \"IDS_GROSSQUOTATION\",\r\n                            selectedRecord,\r\n                            ncontrolCode,\r\n                            loading: false\r\n                        }\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    dispatch({\r\n                        type: DEFAULT_RETURN,\r\n                        payload: {\r\n                            loading: false\r\n                        }\r\n                    });\r\n                    if (error.response.status === 500) {\r\n                        toast.error(error.message);\r\n                    } else {\r\n                        toast.warn(error.response.data);\r\n                    }\r\n                });\r\n        //  } else {\r\n                          \r\n        //         toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n\r\n        //  }\r\n    }\r\n}\r\n\r\n//Quotation Record Click \r\nexport const getQuotation = (quotationItem, userInfo, masterData) => {\r\n    return function (dispatch) {\r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"/quotation/getActiveQuotationById\", {\r\n            nquotationcode: quotationItem.nquotationcode,\r\n                userinfo: userInfo\r\n            })\r\n            .then(response => {\r\n                \r\n\r\n                    let masterData1  = {...masterData,\r\n\r\n                        ...response.data }\r\n\r\n                    // ...masterData,\r\n                    // ...response.data\r\n                    masterData=masterData1\r\n                sortData(masterData);\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                       // masterData,\r\n                        loading: false,\r\n                        dataState: undefined,\r\n                        masterData\r\n                        \r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                dispatch({\r\n                    type: DEFAULT_RETURN,\r\n                    payload: {\r\n                        loading: false\r\n                    }\r\n                });\r\n                toast.error(error.message);\r\n            });\r\n    }\r\n}\r\n\r\nexport function getQuotationAddTestService(screenName, operation, masterData, userInfo, ncontrolCode){\r\n    return function (dispatch) {    \r\n        if (masterData.SelectedQuotation.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"quotation/getQuotationUnmappedTest\",{\r\n            \"nquotationcode\":masterData.SelectedQuotation[\"nquotationcode\"], \r\n            userinfo:userInfo})\r\n\r\n        .then(response=>{\r\n\r\n            let masterData1  = {...masterData,\r\n\r\n                ...response.data }\r\n                masterData=masterData1                       \r\n                dispatch({type: DEFAULT_RETURN, payload:{ \r\n                                                        QuotationTestList:response.data,\r\n                                                        masterData,\r\n                                                        openModal:true,\r\n                                                        operation, screenName, ncontrolCode,\r\n                                                        //selectedRecord, \r\n                                                        loading:false}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTVERSION\"}));\r\n    }\r\n}}\r\n\r\n\r\nexport function getQuotationPricingEditService(editParam){\r\n    return function (dispatch) {    \r\n       // screenName, operation, masterData, userInfo, ncontrolCode\r\n       //console.log(\"editParam:\", editParam);\r\n        if (editParam.masterData.SelectedQuotation.ntransactionstatus === transactionStatus.DRAFT){     \r\n        \r\n        dispatch(initRequest(true));\r\n        rsapi.post(\"quotation/getQuotationPrice\",{\"nquotationcode\":editParam.masterData.SelectedQuotation[\"nquotationcode\"], \r\n                                                \"nquotationtestcode\":editParam.editRow ? editParam.editRow.nquotationtestcode :null,\r\n                                                userinfo:editParam.userInfo})\r\n\r\n        .then(response=>{\r\n                   \r\n                let selectedRecord =[];\r\n                if (editParam.editRow){\r\n                    selectedRecord.push(response.data[\"SelectedQuotationPrice\"]);\r\n                }\r\n                else{\r\n                    selectedRecord = sortData(response.data[\"QuotationPrice\"])\r\n                }\r\n                dispatch({type: DEFAULT_RETURN, payload:{//pricingTestList:testList, \r\n                                                        //testPriceList:response.data[\"TestPrice\"],\r\n                                                        openModal:true,edit:true,\r\n                                                        operation:editParam.operation,\r\n                                                        screenName:editParam.screenName, \r\n                                                        ncontrolCode:editParam.ncontrolCode,\r\n                                                        selectedRecord, \r\n                                                        selectedId:editParam.editRow ? editParam.editRow.nquotationtestcode :null,\r\n                                                        loading:false,\r\n                                                        quotationDataState:editParam.quotationDataState}});\r\n            })\r\n            .catch(error=>{\r\n                dispatch({type: DEFAULT_RETURN, payload: {loading:false}})\r\n                if (error.response.status === 500){\r\n                    toast.error(error.message);\r\n                } \r\n                else{               \r\n                    toast.warn(error.response.data);\r\n                }      \r\n            }) \r\n    }\r\n    else{\r\n        toast.warn(intl.formatMessage({id: \"IDS_SELECTDRAFTTESTPRICEVERSION\"}));\r\n    }\r\n}}"]},"metadata":{},"sourceType":"module"}