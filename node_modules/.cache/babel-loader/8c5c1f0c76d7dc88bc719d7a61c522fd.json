{"ast":null,"code":"import _classCallCheck from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\LIMSWFH\\\\LIMSPOSTGRESQL\\\\QuaLISWeb\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Component}from'react';import FormSelectSearch from'../../components/form-select-search/form-select-search.component';import{Col,Row,Card,Tab,Nav,TabContent,Button}from'react-bootstrap';import FormInput from'../../components/form-input/form-input.component';import FormTextarea from'../../components/form-textarea/form-textarea.component';import{FormattedMessage,injectIntl}from'react-intl';import{faGripVertical}from'@fortawesome/free-solid-svg-icons';import{Grid,GridColumn}from'@progress/kendo-react-grid';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{process}from'@progress/kendo-data-query';import{Draggable,Droppable}from'react-drag-and-drop';var AddFormula=/*#__PURE__*/function(_Component){_inherits(AddFormula,_Component);var _super=_createSuper(AddFormula);function AddFormula(){_classCallCheck(this,AddFormula);return _super.apply(this,arguments);}_createClass(AddFormula,[{key:\"render\",value:function render(){var _this=this;return/*#__PURE__*/React.createElement(Row,null,/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormInput,{name:\"sformulaname\",label:this.props.intl.formatMessage({id:\"IDS_FORMULANAME\"}),type:\"text\",onChange:function onChange(event){return _this.props.onInputOnChange(event,1);},placeholder:this.props.intl.formatMessage({id:\"IDS_FORMULANAME\"}),value:this.props.selectedRecord?this.props.selectedRecord[\"sformulaname\"]:\"\",isMandatory:\"*\",required:true,maxLength:100}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_TESTCATEGORY\"}),isSearchable:true,name:\"ntestcategorycode\",placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),showOption:true,options:this.props.testCategory,optionId:\"ntestcategorycode\",optionValue:\"stestcategoryname\",value:this.props.selectedRecord[\"ntestcategorycode\"],onChange:function onChange(value){return _this.props.onComboChange(value,\"ntestcategorycode\",3);},alphabeticalSort:true}),/*#__PURE__*/React.createElement(FormSelectSearch,{formLabel:this.props.intl.formatMessage({id:\"IDS_TESTNAME\"}),isSearchable:true,name:\"ntestcode\",placeholder:this.props.intl.formatMessage({id:\"IDS_SELECTRECORD\"}),showOption:true,options:this.props.testMaster,optionId:\"ntestcode\",optionValue:\"stestname\",value:this.props.selectedRecord[\"ntestcode\"],onChange:function onChange(value){return _this.props.onComboChange(value,\"ntestcode\",4);},alphabeticalSort:true}),/*#__PURE__*/React.createElement(Card,{className:\"at-tabs\"},/*#__PURE__*/React.createElement(Tab.Container,{defaultActiveKey:\"fieldstab\"},/*#__PURE__*/React.createElement(Card.Header,{className:\"d-flex tab-card-header\"},/*#__PURE__*/React.createElement(Nav,{as:\"ul\",className:\"nav nav-tabs card-header-tabs flex-grow-1\"},/*#__PURE__*/React.createElement(Nav.Item,{as:\"li\"},/*#__PURE__*/React.createElement(Nav.Link,{eventKey:\"fieldstab\"},this.props.intl.formatMessage({id:\"IDS_FIELDNAME\"}))),/*#__PURE__*/React.createElement(Nav.Item,{as:\"li\"},/*#__PURE__*/React.createElement(Nav.Link,{eventKey:\"operatorstab\"},this.props.intl.formatMessage({id:\"IDS_OPERATORS\"}))),/*#__PURE__*/React.createElement(Nav.Item,{as:\"li\"},/*#__PURE__*/React.createElement(Nav.Link,{eventKey:\"functionstab\"},this.props.intl.formatMessage({id:\"IDS_FUNCTIONS\"}))))),/*#__PURE__*/React.createElement(TabContent,null,/*#__PURE__*/React.createElement(Tab.Pane,{eventKey:\"fieldstab\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Grid,{resizable:true,scrollable:\"scrollable\",style:{height:'350px'},data:process(this.props.dynamicFormulaFields,{skip:0,take:this.props.dynamicFormulaFields.length})},/*#__PURE__*/React.createElement(GridColumn,{width:\"36px\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Draggable,{type:\"testfields\",data:JSON.stringify(row[\"dataItem\"])},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGripVertical,className:\"dragicon\"})));}}),/*#__PURE__*/React.createElement(GridColumn,{field:\"stestname\",title:this.props.intl.formatMessage({id:\"IDS_TEST\"})}),/*#__PURE__*/React.createElement(GridColumn,{field:\"sparametername\",title:this.props.intl.formatMessage({id:\"IDS_PARAMETER\"})}))))),/*#__PURE__*/React.createElement(Tab.Pane,{eventKey:\"operatorstab\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Grid,{resizable:true,scrollable:\"scrollable\",style:{height:'350px'},data:process(this.props.operators,{skip:0,take:this.props.operators.length})},/*#__PURE__*/React.createElement(GridColumn,{width:\"36px\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Draggable,{type:\"operatorfields\",data:JSON.stringify(row[\"dataItem\"])},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGripVertical,className:\"dragicon\"})));}}),/*#__PURE__*/React.createElement(GridColumn,{field:\"soperator\",title:this.props.intl.formatMessage({id:\"IDS_OPERATORS\"})}))))),/*#__PURE__*/React.createElement(Tab.Pane,{eventKey:\"functionstab\"},/*#__PURE__*/React.createElement(Row,{noGutters:true},/*#__PURE__*/React.createElement(Col,{md:\"12\"},/*#__PURE__*/React.createElement(Grid,{resizable:true,scrollable:\"scrollable\",style:{height:'350px'},data:process(this.props.functions,{skip:0,take:this.props.functions.length}),onRowClick:this.props.getSyntax},/*#__PURE__*/React.createElement(GridColumn,{width:\"36px\",cell:function cell(row){return/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Draggable,{type:\"functionfields\",data:JSON.stringify(row[\"dataItem\"])},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faGripVertical,className:\"dragicon\"})));}}),/*#__PURE__*/React.createElement(GridColumn,{field:\"sfunctionname\",title:this.props.intl.formatMessage({id:\"IDS_FUNCTIONS\"})}))))))))),/*#__PURE__*/React.createElement(Col,{md:\"6\"},/*#__PURE__*/React.createElement(FormInput,{name:\"userinput\",label:this.props.intl.formatMessage({id:\"IDS_INPUT\"}),type:\"text\",value:this.props.selectedRecord[\"userinput\"]?this.props.selectedRecord[\"userinput\"]:\"\",placeholder:this.props.intl.formatMessage({id:\"IDS_INPUT\"}),onChange:function onChange(event){return _this.props.onInputOnChange(event,4);},maxLength:10,onKeyUp:function onKeyUp(event){return _this.props.onUserInputs(event);}}),/*#__PURE__*/React.createElement(FormInput,{name:\"syntax\",label:this.props.intl.formatMessage({id:\"IDS_SYNTAX\"}),type:\"text\",placeholder:this.props.intl.formatMessage({id:\"IDS_SYNTAX\"}),value:this.props.sfunctionsyntax?this.props.sfunctionsyntax:\"\",required:false,isDisabled:true}),/*#__PURE__*/React.createElement(Droppable,{types:['testfields','operatorfields','functionfields'],onDrop:function onDrop(event){return _this.props.onFormulaDrop(event);}},/*#__PURE__*/React.createElement(FormTextarea,{name:\"sformulacalculationdetail\",label:this.props.intl.formatMessage({id:\"IDS_FORMULA\"}),placeholder:this.props.intl.formatMessage({id:\"IDS_FORMULA\"}),value:this.props.selectedRecord[\"sformulacalculationdetail\"]?this.props.selectedRecord[\"sformulacalculationdetail\"]:\"\",rows:\"5\",isMandatory:\"*\",required:true,maxLength:512,readOnly:true})),/*#__PURE__*/React.createElement(\"div\",{className:\"d-flex justify-content-end mb-3\"},/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-cancel\",variant:\"\",onClick:function onClick(){return _this.props.clearFormula();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_CLEAR\",defaultMessage:\"Clear\"})),/*#__PURE__*/React.createElement(Button,{className:\"btn-user btn-primary-blue\",onClick:function onClick(){return _this.props.validateFormula();}},/*#__PURE__*/React.createElement(FormattedMessage,{id:\"IDS_VALIDATEFORMULA\",defaultMessage:\"Validate Formula\"}))),/*#__PURE__*/React.createElement(FormInput,{name:\"query\",label:this.props.intl.formatMessage({id:\"IDS_VALIDATEFORMULA\"}),type:\"text\",placeholder:this.props.intl.formatMessage({id:\"IDS_VALIDATEFORMULA\"}),value:this.props.query,required:false,maxLength:100,isDisabled:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"result\",label:this.props.intl.formatMessage({id:\"IDS_VALIDATEDRESULT\"}),type:\"text\",placeholder:this.props.intl.formatMessage({id:\"IDS_VALIDATEDRESULT\"}),value:this.props.result,required:false,maxLength:100,isDisabled:true})));}}]);return AddFormula;}(Component);export default injectIntl(AddFormula);","map":{"version":3,"sources":["D:/LIMSWFH/LIMSPOSTGRESQL/QuaLISWeb/src/pages/testmanagement/AddFormula.jsx"],"names":["React","Component","FormSelectSearch","Col","Row","Card","Tab","Nav","TabContent","Button","FormInput","FormTextarea","FormattedMessage","injectIntl","faGripVertical","Grid","GridColumn","FontAwesomeIcon","process","Draggable","Droppable","AddFormula","props","intl","formatMessage","id","event","onInputOnChange","selectedRecord","testCategory","value","onComboChange","testMaster","height","dynamicFormulaFields","skip","take","length","row","JSON","stringify","operators","functions","getSyntax","onUserInputs","sfunctionsyntax","onFormulaDrop","clearFormula","validateFormula","query","result"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport FormSelectSearch from '../../components/form-select-search/form-select-search.component';\r\nimport { Col, Row, Card, Tab, Nav, TabContent, Button } from 'react-bootstrap';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport { FormattedMessage, injectIntl } from 'react-intl';\r\nimport { faGripVertical } from '@fortawesome/free-solid-svg-icons'\r\nimport { Grid, GridColumn } from '@progress/kendo-react-grid';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { process } from '@progress/kendo-data-query';\r\nimport { Draggable, Droppable } from 'react-drag-and-drop';\r\n\r\nclass AddFormula extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col md=\"6\">\r\n                    <FormInput\r\n                        name={\"sformulaname\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_FORMULANAME\" })}\r\n                        type=\"text\"\r\n                        onChange={(event) => this.props.onInputOnChange(event, 1)}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_FORMULANAME\" })}\r\n                        value={this.props.selectedRecord? this.props.selectedRecord[\"sformulaname\"]:\"\"}\r\n                        isMandatory=\"*\"\r\n                        required={true}\r\n                        maxLength={100}\r\n                    />\r\n                    <FormSelectSearch\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTCATEGORY\" })}\r\n                        isSearchable={true}\r\n                        name={\"ntestcategorycode\"}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        showOption={true}\r\n                        options={this.props.testCategory}\r\n                        optionId='ntestcategorycode'\r\n                        optionValue='stestcategoryname'\r\n                        value={this.props.selectedRecord[\"ntestcategorycode\"]}\r\n                        onChange={value => this.props.onComboChange(value, \"ntestcategorycode\", 3)}\r\n                        alphabeticalSort={true}\r\n                    >\r\n                    </FormSelectSearch>\r\n                    <FormSelectSearch\r\n                        formLabel={this.props.intl.formatMessage({ id: \"IDS_TESTNAME\" })}\r\n                        isSearchable={true}\r\n                        name={\"ntestcode\"}\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SELECTRECORD\" })}\r\n                        showOption={true}\r\n                        options={this.props.testMaster}\r\n                        optionId='ntestcode'\r\n                        optionValue='stestname'\r\n                        value={this.props.selectedRecord[\"ntestcode\"]}\r\n                        onChange={value => this.props.onComboChange(value, \"ntestcode\", 4)}\r\n                        alphabeticalSort={true}\r\n                    >\r\n                    </FormSelectSearch>\r\n                    <Card className=\"at-tabs\">\r\n                        <Tab.Container defaultActiveKey={\"fieldstab\"}>\r\n                            <Card.Header className=\"d-flex tab-card-header\">\r\n                                <Nav as=\"ul\" className=\"nav nav-tabs card-header-tabs flex-grow-1\">\r\n                                    <Nav.Item as=\"li\">\r\n                                        <Nav.Link eventKey=\"fieldstab\">\r\n                                        {this.props.intl.formatMessage({id: \"IDS_FIELDNAME\"})}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item as=\"li\">\r\n                                        <Nav.Link eventKey=\"operatorstab\">\r\n                                        {this.props.intl.formatMessage({id: \"IDS_OPERATORS\"})}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                    <Nav.Item as=\"li\">\r\n                                        <Nav.Link eventKey=\"functionstab\">\r\n                                        {this.props.intl.formatMessage({id: \"IDS_FUNCTIONS\"})}\r\n                                        </Nav.Link>\r\n                                    </Nav.Item>\r\n                                </Nav>\r\n                            </Card.Header>\r\n                            <TabContent>\r\n                                <Tab.Pane eventKey=\"fieldstab\">\r\n                                    <Row noGutters={true}>\r\n                                        <Col md=\"12\">\r\n                                            <Grid \r\n                                                resizable\r\n                                                scrollable = \"scrollable\"\r\n                                                style={{height: '350px'}}\r\n                                                data={process(this.props.dynamicFormulaFields, { skip: 0, take: this.props.dynamicFormulaFields.length })}\r\n                                                >\r\n                                                \r\n                                                <GridColumn width=\"36px\" \r\n                                                    cell={(row) => (\r\n                                                        <td>\r\n                                                            <Draggable type=\"testfields\" data={JSON.stringify(row[\"dataItem\"])}>\r\n                                                                <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\"></FontAwesomeIcon>\r\n                                                            </Draggable>\r\n                                                        </td>\r\n                                                    )}\r\n                                                />\r\n                                                <GridColumn field=\"stestname\" title={this.props.intl.formatMessage({id:\"IDS_TEST\"})} \r\n                                                    \r\n                                                />\r\n                                                <GridColumn field=\"sparametername\" title={this.props.intl.formatMessage({id:\"IDS_PARAMETER\"})} \r\n                                                  \r\n                                                />\r\n                                            </Grid>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"operatorstab\">\r\n                                    <Row noGutters={true}>\r\n                                        <Col md=\"12\">\r\n                                            <Grid \r\n                                                resizable\r\n                                                scrollable = \"scrollable\"\r\n                                                style={{height: '350px'}}\r\n                                                data={process(this.props.operators, { skip: 0, take: this.props.operators.length })}\r\n                                                >\r\n                                                \r\n                                                <GridColumn width=\"36px\"\r\n                                                    cell={(row) => (\r\n                                                        <td>\r\n                                                            <Draggable type=\"operatorfields\" data={JSON.stringify(row[\"dataItem\"])}>\r\n                                                                <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\"></FontAwesomeIcon>\r\n                                                            </Draggable>\r\n                                                        </td>\r\n                                                    )}\r\n                                                />\r\n                                               <GridColumn field=\"soperator\" title={this.props.intl.formatMessage({id:\"IDS_OPERATORS\"})} \r\n                                                   \r\n                                                />\r\n                                            </Grid>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"functionstab\">\r\n                                    <Row noGutters={true}>\r\n                                        <Col md=\"12\">\r\n                                            <Grid \r\n                                                resizable\r\n                                                scrollable = \"scrollable\"\r\n                                                style={{height: '350px'}}\r\n                                                data={process(this.props.functions, { skip: 0, take: this.props.functions.length })}\r\n                                                onRowClick={this.props.getSyntax}\r\n                                                >\r\n                                                <GridColumn width=\"36px\" \r\n                                                    cell={(row) => (\r\n                                                        <td>\r\n                                                            <Draggable type=\"functionfields\" data={JSON.stringify(row[\"dataItem\"])}\r\n                                                            >\r\n                                                                <FontAwesomeIcon icon={faGripVertical} className=\"dragicon\"></FontAwesomeIcon>\r\n                                                            </Draggable>\r\n                                                        </td>\r\n                                                       \r\n                                                    )}\r\n                                                />\r\n                                                <GridColumn field=\"sfunctionname\" title={this.props.intl.formatMessage({id:\"IDS_FUNCTIONS\"})} \r\n                                                   \r\n                                                />\r\n                                            </Grid>                                         \r\n                                        </Col>\r\n                                    </Row>\r\n                                </Tab.Pane>\r\n                            </TabContent>\r\n                        </Tab.Container>\r\n                    </Card>\r\n                </Col>\r\n                <Col md=\"6\">\r\n                    <FormInput\r\n                        name=\"userinput\"\r\n                        label={ this.props.intl.formatMessage({ id:\"IDS_INPUT\"}) } \r\n                        type=\"text\"\r\n                        value={this.props.selectedRecord[\"userinput\"]?this.props.selectedRecord[\"userinput\"]:\"\"}\r\n                        placeholder={ this.props.intl.formatMessage({ id:\"IDS_INPUT\"}) } \r\n                        onChange = { (event) => this.props.onInputOnChange(event, 4) }\r\n                        maxLength={10}\r\n                        onKeyUp={ (event)=>this.props.onUserInputs(event) }\r\n                    />\r\n                    <FormInput\r\n                        name={\"syntax\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_SYNTAX\" })}\r\n                        type=\"text\"\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_SYNTAX\" })}\r\n                        value={this.props.sfunctionsyntax?this.props.sfunctionsyntax:\"\"}\r\n                        required={false}\r\n                        isDisabled={true}\r\n                    /> \r\n                    <Droppable\r\n                        types={['testfields', 'operatorfields', 'functionfields']}\r\n                        onDrop={(event)=>this.props.onFormulaDrop(event)}\r\n                    >\r\n                        <FormTextarea\r\n                            name={\"sformulacalculationdetail\"}\r\n                            label={this.props.intl.formatMessage({ id: \"IDS_FORMULA\" })}\r\n                            placeholder={this.props.intl.formatMessage({ id: \"IDS_FORMULA\" })}\r\n                            value={this.props.selectedRecord[\"sformulacalculationdetail\"]? this.props.selectedRecord[\"sformulacalculationdetail\"]:\"\"}\r\n                            rows=\"5\"\r\n                            isMandatory=\"*\"\r\n                            required={true}\r\n                            maxLength={512}\r\n                            readOnly={true}\r\n                        >\r\n                        </FormTextarea>                              \r\n                    </Droppable>\r\n                    <div className=\"d-flex justify-content-end mb-3\">\r\n                        <Button className=\"btn-user btn-cancel\" variant=\"\" onClick={()=>this.props.clearFormula()}>\r\n                            <FormattedMessage id='IDS_CLEAR' defaultMessage='Clear' />\r\n                        </Button>\r\n                        <Button className=\"btn-user btn-primary-blue\" onClick={()=>this.props.validateFormula()}>\r\n                            <FormattedMessage id='IDS_VALIDATEFORMULA' defaultMessage='Validate Formula' />                     \r\n                        </Button>\r\n                    </div>\r\n                    <FormInput\r\n                        name={\"query\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_VALIDATEFORMULA\" })}\r\n                        type=\"text\"\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALIDATEFORMULA\" })}\r\n                        value={this.props.query}\r\n                        required={false}\r\n                        maxLength={100}\r\n                        isDisabled={true}\r\n                    />\r\n                    <FormInput\r\n                        name={\"result\"}\r\n                        label={this.props.intl.formatMessage({ id: \"IDS_VALIDATEDRESULT\" })}\r\n                        type=\"text\"\r\n                        placeholder={this.props.intl.formatMessage({ id: \"IDS_VALIDATEDRESULT\" })}\r\n                        value={this.props.result}\r\n                        required={false}\r\n                        maxLength={100}\r\n                        isDisabled={true}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default injectIntl(AddFormula);"]},"metadata":{},"sourceType":"module"}