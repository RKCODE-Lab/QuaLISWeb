{"ast":null,"code":"var _jsxFileName = \"E:\\\\WorkingFolder\\\\React_Postgres\\\\ALPD\\\\branches\\\\SOURCE-513-PROD\\\\SOURCE-513-ALPD-5304\\\\QuaLISWeb\\\\src\\\\pages\\\\storagemanagement\\\\ImportBulkBarcodeData.jsx\";\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport DropZone from '../../components/dropzone/dropzone.component';\nimport { Row, Col } from 'react-bootstrap';\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\nimport FormInput from '../../components/form-input/form-input.component';\n\nconst ImportBulkBarcodeData = props => {\n  return /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropZone, {\n    name: \"sfilename\",\n    label: props.intl.formatMessage({\n      id: \"IDS_ADDFILE\"\n    }),\n    isMandatory: true,\n    maxFiles: \"1\",\n    minSize: 0,\n    maxSize: 10,\n    accept: \".xlsx, .xls\",\n    onDrop: event => props.onDropFile(event, \"sfilename\", \"1\"),\n    actionType: props.actionType,\n    deleteAttachment: props.deleteAttachment,\n    multiple: props.multiple,\n    editFiles: props.selectedRecord ? props.selectedRecord : {},\n    attachmentTypeCode: props.editFiles && props.editFiles.nattachmenttypecode,\n    fileSizeName: \"nfilesize\",\n    fileName: \"sfilename\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    label: props.intl.formatMessage({\n      id: \"IDS_FILENAME\"\n    }),\n    name: \"simportfilename\",\n    type: \"text\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_FILENAME\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"simportfilename\"] : \"\",\n    isMandatory: true,\n    required: true,\n    maxLength: \"100\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    md: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(FormTextarea, {\n    label: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    name: \"sdescription\",\n    onChange: event => props.onInputOnChange(event),\n    placeholder: props.intl.formatMessage({\n      id: \"IDS_DESCRIPTION\"\n    }),\n    value: props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\",\n    rows: \"2\",\n    isMandatory: false,\n    required: false,\n    maxLength: \"255\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  })));\n};\n\nexport default injectIntl(ImportBulkBarcodeData);","map":{"version":3,"sources":["E:/WorkingFolder/React_Postgres/ALPD/branches/SOURCE-513-PROD/SOURCE-513-ALPD-5304/QuaLISWeb/src/pages/storagemanagement/ImportBulkBarcodeData.jsx"],"names":["React","injectIntl","DropZone","Row","Col","FormTextarea","FormInput","ImportBulkBarcodeData","props","intl","formatMessage","id","event","onDropFile","actionType","deleteAttachment","multiple","selectedRecord","editFiles","nattachmenttypecode","onInputOnChange"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { injectIntl } from 'react-intl';\r\nimport DropZone from '../../components/dropzone/dropzone.component';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport FormTextarea from '../../components/form-textarea/form-textarea.component';\r\nimport FormInput from '../../components/form-input/form-input.component';\r\n\r\nconst ImportBulkBarcodeData = props => {\r\n\r\n    return (\r\n        <Row>\r\n            <Col md=\"12\">\r\n                    <DropZone\r\n                        name={\"sfilename\"}\r\n                        label={props.intl.formatMessage({ id: \"IDS_ADDFILE\" })}\r\n                        isMandatory={true}\r\n                        maxFiles={\"1\"}\r\n                        minSize={0}\r\n                        maxSize={10}\r\n                        accept={\".xlsx, .xls\"}\r\n                        onDrop={(event) => props.onDropFile(event, \"sfilename\", \"1\")}\r\n                        actionType={props.actionType}\r\n                        deleteAttachment={props.deleteAttachment}\r\n                        multiple={props.multiple}\r\n                       editFiles={props.selectedRecord ? props.selectedRecord : {}}\r\n                       attachmentTypeCode={props.editFiles && props.editFiles.nattachmenttypecode}\r\n                        fileSizeName=\"nfilesize\"\r\n                        fileName=\"sfilename\"\r\n                    />\r\n            </Col>\r\n            <Col md={12}>\r\n                        <FormInput\r\n                            label={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                            name={\"simportfilename\"}\r\n                            type=\"text\"\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_FILENAME\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"simportfilename\"] : \"\"}\r\n                            isMandatory={true}\r\n                            required={true}\r\n                            maxLength={\"100\"}\r\n                        />\r\n                    </Col>\r\n\r\n                     <Col md={12}>\r\n                        <FormTextarea\r\n                            label={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            name={\"sdescription\"}\r\n                            onChange={(event) => props.onInputOnChange(event)}\r\n                            placeholder={props.intl.formatMessage({ id: \"IDS_DESCRIPTION\" })}\r\n                            value={props.selectedRecord ? props.selectedRecord[\"sdescription\"] : \"\"}\r\n                            rows=\"2\"\r\n                            isMandatory={false}\r\n                            required={false}\r\n                            maxLength={\"255\"}\r\n                        >\r\n                        </FormTextarea>\r\n            </Col>\r\n           \r\n        </Row>\r\n    );\r\n};\r\n\r\nexport default injectIntl(ImportBulkBarcodeData);\r\n\r\n"]},"metadata":{},"sourceType":"module"}