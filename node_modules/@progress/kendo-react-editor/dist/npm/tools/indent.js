"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var kendo_react_buttons_1 = require("@progress/kendo-react-buttons");
var kendo_editor_common_1 = require("@progress/kendo-editor-common");
var utils_1 = require("./utils");
var kendo_react_intl_1 = require("@progress/kendo-react-intl");
var messages_1 = require("./../messages");
/**
 * @hidden
 */
var IndentToolNS;
(function (IndentToolNS) {
    /**
     * @hidden
     */
    IndentToolNS.createIndentTool = function (settings) {
        var Tool = /** @class */ (function (_super) {
            __extends(IndentTool, _super);
            function IndentTool() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            IndentTool.prototype.render = function () {
                var _a = this.props, view = _a.view, render = _a.render, buttonProps = __rest(_a, ["view", "render"]);
                var state = view && view.state;
                var nodes = state && state.schema.nodes;
                var listItem = nodes && nodes[settings.listsTypes.listItem];
                var actions = settings.actions;
                var canIndented = !!state &&
                    (kendo_editor_common_1.isIndented(state, actions, buttonProps.dir) ||
                        actions.some(function (a) { return nodes[a.node] && kendo_editor_common_1.hasNode(state, nodes[a.node]); })) &&
                    !kendo_editor_common_1.hasNode(state, listItem);
                var canListIndent = !!state && kendo_editor_common_1.canIndentAsListItem(state, listItem);
                var canIndent = canIndented || canListIndent;
                var localization = kendo_react_intl_1.provideLocalizationService(this);
                var titleKey = settings.messages.title;
                var button = (React.createElement(kendo_react_buttons_1.Button, __assign({ onClick: function () {
                        if (view && canListIndent) {
                            kendo_editor_common_1.sinkListItem(listItem)(view.state, view.dispatch);
                        }
                        else if (view && canIndented) {
                            kendo_editor_common_1.indentBlocks(actions, settings.commandName, buttonProps.dir)(view.state, view.dispatch);
                        }
                    }, title: localization.toLanguageString(titleKey, messages_1.messages[titleKey]), disabled: !canIndent }, utils_1.onDownPreventDefault, settings.props, buttonProps)));
                return render ? render.call(undefined, button, { view: view }) : button;
            };
            return IndentTool;
        }(React.Component));
        kendo_react_intl_1.registerForLocalization(Tool);
        return Tool;
    };
})(IndentToolNS = exports.IndentToolNS || (exports.IndentToolNS = {}));
//# sourceMappingURL=indent.js.map