import { NodeType, Schema } from 'prosemirror-model';
import { EditorState, Transaction } from 'prosemirror-state';
import { EditorView } from 'prosemirror-view';
import { Command } from './types/command';
declare type ListNodeNames = {
    listType: string;
    orderedList: string;
    bulletList: string;
    listItem: string;
};
export declare const toggleList: (state: EditorState<any>, dispatch: (tr: Transaction<any>) => void, view: EditorView<any>, listNodeNames: ListNodeNames, command?: string) => boolean;
export declare function toggleUnorderedList(state: EditorState, dispatch: (tr: Transaction) => void, view: EditorView): any;
export declare function toggleOrderedList(state: EditorState, dispatch: (tr: Transaction) => void, view: EditorView): any;
export declare const splitListItemKeepMarks: (itemType: NodeType<Schema<any, any>>) => Command;
export {};
