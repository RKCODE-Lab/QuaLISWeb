import { TextSelection, Selection, Transaction, EditorState } from 'prosemirror-state';
import { Node } from 'prosemirror-model';
export interface SearchOptions {
    text: string;
    backward?: boolean;
    matchCyclic?: boolean;
    matchCase?: boolean;
    matchWord?: boolean | ((exec: RegExpExecArray) => boolean);
    useRegExp?: boolean;
}
export declare const findAt: (doc: Node<any>, searchOptions: SearchOptions, start: number, end: number, exit: (result: TextSelection<any>[]) => boolean) => TextSelection<any>[];
export declare const find: (state: EditorState<any> | {
    doc: Node<any>;
    selection: Selection<any>;
}, searchOptions: SearchOptions) => TextSelection<any>;
export declare const findAll: (doc: Node<any>, searchOptions: SearchOptions) => TextSelection<any>[];
export declare const replace: (selection: Selection<any> | {
    from: number;
    to: number;
}, text: string, transaction: Transaction<any>) => Transaction<any>;
export declare const replaceAll: (state: EditorState<any>, replaceText: string, searchOptions: SearchOptions) => Transaction<any>;
